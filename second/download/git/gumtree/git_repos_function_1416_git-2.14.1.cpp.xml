<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1416_git-2.14.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_file_mode_name<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">newdelete<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">unsigned<pos:position pos:line="1" pos:column="64"/></name> <name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">mode<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="75">const<pos:position pos:line="1" pos:column="80"/></specifier> <name pos:line="1" pos:column="81">char<pos:position pos:line="1" pos:column="85"/></name> <modifier pos:line="1" pos:column="86">*<pos:position pos:line="1" pos:column="87"/></modifier></type><name pos:line="1" pos:column="87">name<pos:position pos:line="1" pos:column="91"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="92"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">mode<pos:position pos:line="3" pos:column="17"/></name></expr>)<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="17">printf<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><literal type="string" pos:line="4" pos:column="24">" %s mode %06o %s\n"<pos:position pos:line="4" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="46">newdelete<pos:position pos:line="4" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="57">mode<pos:position pos:line="4" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="63">name<pos:position pos:line="4" pos:column="67"/></name></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="69"/></expr_stmt></block></then>
	<else pos:line="5" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">printf<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><literal type="string" pos:line="6" pos:column="24">" %s %s\n"<pos:position pos:line="6" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">newdelete<pos:position pos:line="6" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="47">name<pos:position pos:line="6" pos:column="51"/></name></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="53"/></expr_stmt></block></else></if>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

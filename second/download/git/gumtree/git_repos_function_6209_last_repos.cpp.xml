<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6209_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">finish_up_to_date<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">msg<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">verbosity<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">&gt;=<pos:position pos:line="3" pos:column="28"/></operator> <literal type="number" pos:line="3" pos:column="26">0<pos:position pos:line="3" pos:column="27"/></literal></expr>)<pos:position pos:line="3" pos:column="28"/></condition><then pos:line="3" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="17">printf<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><literal type="string" pos:line="4" pos:column="24">"%s%s\n"<pos:position pos:line="4" pos:column="32"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="4" pos:column="34">squash<pos:position pos:line="4" pos:column="40"/></name></expr> ?<pos:position pos:line="4" pos:column="42"/></condition><then pos:line="4" pos:column="42"> <expr><call><name pos:line="4" pos:column="43">_<pos:position pos:line="4" pos:column="44"/></name><argument_list pos:line="4" pos:column="44">(<argument><expr><literal type="string" pos:line="4" pos:column="45">" (nothing to squash)"<pos:position pos:line="4" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr> <pos:position pos:line="4" pos:column="69"/></then><else pos:line="4" pos:column="69">: <expr><literal type="string" pos:line="4" pos:column="71">""<pos:position pos:line="4" pos:column="73"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="4" pos:column="75">msg<pos:position pos:line="4" pos:column="78"/></name></expr></argument>)<pos:position pos:line="4" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="80"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">drop_save<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">()<pos:position pos:line="5" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

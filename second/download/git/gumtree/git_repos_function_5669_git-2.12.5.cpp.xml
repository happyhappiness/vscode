<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5669_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">handle_tag<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">name<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">tag<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">tag<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">long<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">size<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">enum<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">object_type<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">type<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">buf<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">tagger<pos:position pos:line="6" pos:column="27"/></name></decl>, <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="30">tagger_end<pos:position pos:line="6" pos:column="40"/></name></decl>, <modifier pos:line="6" pos:column="42">*<pos:position pos:line="6" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="43">message<pos:position pos:line="6" pos:column="50"/></name></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">message_size<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><literal type="number" pos:line="7" pos:column="31">0<pos:position pos:line="7" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">object<pos:position pos:line="8" pos:column="22"/></name></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">tagged<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">tagged_mark<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">commit<pos:position pos:line="10" pos:column="22"/></name></name> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">p<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>

	<comment type="block" pos:line="12" pos:column="9">/* Trees have no identifier in fast-export output, thus we have no way
	 * to output tags of trees, tags of tags of trees, etc.  Simply omit
	 * such tags.
	 */</comment>
	<expr_stmt><expr><name pos:line="16" pos:column="9">tagged<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <name><name pos:line="16" pos:column="18">tag<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">tagged<pos:position pos:line="16" pos:column="29"/></name></name></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
	<while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><name><name pos:line="17" pos:column="16">tagged<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">type<pos:position pos:line="17" pos:column="28"/></name></name> <operator pos:line="17" pos:column="29">==<pos:position pos:line="17" pos:column="31"/></operator> <name pos:line="17" pos:column="32">OBJ_TAG<pos:position pos:line="17" pos:column="39"/></name></expr>)<pos:position pos:line="17" pos:column="40"/></condition> <block pos:line="17" pos:column="41">{
		<expr_stmt><expr><name pos:line="18" pos:column="17">tagged<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <operator pos:line="18" pos:column="26">(<pos:position pos:line="18" pos:column="27"/></operator><operator pos:line="18" pos:column="27">(<pos:position pos:line="18" pos:column="28"/></operator>struct <name pos:line="18" pos:column="35">tag<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">*<pos:position pos:line="18" pos:column="40"/></operator><operator pos:line="18" pos:column="40">)<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="41">tagged<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">)<pos:position pos:line="18" pos:column="48"/></operator><operator pos:line="18" pos:column="48">-&gt;<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="50">tagged<pos:position pos:line="18" pos:column="56"/></name></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></while>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">tagged<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">type<pos:position pos:line="20" pos:column="25"/></name></name> <operator pos:line="20" pos:column="26">==<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="29">OBJ_TREE<pos:position pos:line="20" pos:column="37"/></name></expr>)<pos:position pos:line="20" pos:column="38"/></condition><then pos:line="20" pos:column="38"> <block pos:line="20" pos:column="39">{
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">warning<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><literal type="string" pos:line="21" pos:column="25">"Omitting tag %s,\nsince tags of trees (or tags of tags of trees, etc.) are not supported."<pos:position pos:line="21" pos:column="116"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="22" pos:column="25">oid_to_hex<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><operator pos:line="22" pos:column="36">&amp;<pos:position pos:line="22" pos:column="41"/></operator><name><name pos:line="22" pos:column="37">tag<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">object<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">.<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="49">oid<pos:position pos:line="22" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="55"/></expr_stmt>
		<return pos:line="23" pos:column="17">return;<pos:position pos:line="23" pos:column="24"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="26" pos:column="9">buf<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <call><name pos:line="26" pos:column="15">read_sha1_file<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name><name pos:line="26" pos:column="30">tag<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">object<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">.<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">oid<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">.<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="46">hash<pos:position pos:line="26" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="52">&amp;<pos:position pos:line="26" pos:column="57"/></operator><name pos:line="26" pos:column="53">type<pos:position pos:line="26" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="59">&amp;<pos:position pos:line="26" pos:column="64"/></operator><name pos:line="26" pos:column="60">size<pos:position pos:line="26" pos:column="64"/></name></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="66"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">buf<pos:position pos:line="27" pos:column="17"/></name></expr>)<pos:position pos:line="27" pos:column="18"/></condition><then pos:line="27" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">die<pos:position pos:line="28" pos:column="20"/></name> <argument_list pos:line="28" pos:column="21">(<argument><expr><literal type="string" pos:line="28" pos:column="22">"Could not read tag %s"<pos:position pos:line="28" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="47">oid_to_hex<pos:position pos:line="28" pos:column="57"/></name><argument_list pos:line="28" pos:column="57">(<argument><expr><operator pos:line="28" pos:column="58">&amp;<pos:position pos:line="28" pos:column="63"/></operator><name><name pos:line="28" pos:column="59">tag<pos:position pos:line="28" pos:column="62"/></name><operator pos:line="28" pos:column="62">-&gt;<pos:position pos:line="28" pos:column="67"/></operator><name pos:line="28" pos:column="64">object<pos:position pos:line="28" pos:column="70"/></name><operator pos:line="28" pos:column="70">.<pos:position pos:line="28" pos:column="71"/></operator><name pos:line="28" pos:column="71">oid<pos:position pos:line="28" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="29" pos:column="9">message<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <call><name pos:line="29" pos:column="19">memmem<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">buf<pos:position pos:line="29" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="31">size<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="37">"\n\n"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="45">2<pos:position pos:line="29" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">message<pos:position pos:line="30" pos:column="20"/></name></expr>)<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21"> <block pos:line="30" pos:column="22">{
		<expr_stmt><expr><name pos:line="31" pos:column="17">message<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">+=<pos:position pos:line="31" pos:column="27"/></operator> <literal type="number" pos:line="31" pos:column="28">2<pos:position pos:line="31" pos:column="29"/></literal></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="32" pos:column="17">message_size<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">=<pos:position pos:line="32" pos:column="31"/></operator> <call><name pos:line="32" pos:column="32">strlen<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name pos:line="32" pos:column="39">message<pos:position pos:line="32" pos:column="46"/></name></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="34" pos:column="9">tagger<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">memmem<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">buf<pos:position pos:line="34" pos:column="28"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="34" pos:column="30">message<pos:position pos:line="34" pos:column="37"/></name></expr> ?<pos:position pos:line="34" pos:column="39"/></condition><then pos:line="34" pos:column="39"> <expr><name pos:line="34" pos:column="40">message<pos:position pos:line="34" pos:column="47"/></name> <operator pos:line="34" pos:column="48">-<pos:position pos:line="34" pos:column="49"/></operator> <name pos:line="34" pos:column="50">buf<pos:position pos:line="34" pos:column="53"/></name></expr> <pos:position pos:line="34" pos:column="54"/></then><else pos:line="34" pos:column="54">: <expr><name pos:line="34" pos:column="56">size<pos:position pos:line="34" pos:column="60"/></name></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="62">"\ntagger "<pos:position pos:line="34" pos:column="73"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="75">8<pos:position pos:line="34" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="78"/></expr_stmt>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">tagger<pos:position pos:line="35" pos:column="20"/></name></expr>)<pos:position pos:line="35" pos:column="21"/></condition><then pos:line="35" pos:column="21"> <block pos:line="35" pos:column="22">{
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">fake_missing_tagger<pos:position pos:line="36" pos:column="40"/></name></expr>)<pos:position pos:line="36" pos:column="41"/></condition><then pos:line="36" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">tagger<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <literal type="string" pos:line="37" pos:column="34">"tagger Unspecified Tagger "<pos:position pos:line="37" pos:column="62"/></literal>
				<literal type="string" pos:line="38" pos:column="33">"&lt;unspecified-tagger&gt; 0 +0000"<pos:position pos:line="38" pos:column="69"/></literal></expr>;<pos:position pos:line="38" pos:column="64"/></expr_stmt></block></then>
		<else pos:line="39" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="25">tagger<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">=<pos:position pos:line="40" pos:column="33"/></operator> <literal type="string" pos:line="40" pos:column="34">""<pos:position pos:line="40" pos:column="36"/></literal></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="41" pos:column="17">tagger_end<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">=<pos:position pos:line="41" pos:column="29"/></operator> <name pos:line="41" pos:column="30">tagger<pos:position pos:line="41" pos:column="36"/></name> <operator pos:line="41" pos:column="37">+<pos:position pos:line="41" pos:column="38"/></operator> <call><name pos:line="41" pos:column="39">strlen<pos:position pos:line="41" pos:column="45"/></name><argument_list pos:line="41" pos:column="45">(<argument><expr><name pos:line="41" pos:column="46">tagger<pos:position pos:line="41" pos:column="52"/></name></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></then> <else pos:line="42" pos:column="11">else <block pos:line="42" pos:column="16">{
		<expr_stmt><expr><name pos:line="43" pos:column="17">tagger<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">++<pos:position pos:line="43" pos:column="25"/></operator></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><name pos:line="44" pos:column="17">tagger_end<pos:position pos:line="44" pos:column="27"/></name> <operator pos:line="44" pos:column="28">=<pos:position pos:line="44" pos:column="29"/></operator> <call><name pos:line="44" pos:column="30">strchrnul<pos:position pos:line="44" pos:column="39"/></name><argument_list pos:line="44" pos:column="39">(<argument><expr><name pos:line="44" pos:column="40">tagger<pos:position pos:line="44" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="44" pos:column="48">'\n'<pos:position pos:line="44" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="54"/></expr_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">anonymize<pos:position pos:line="45" pos:column="30"/></name></expr>)<pos:position pos:line="45" pos:column="31"/></condition><then pos:line="45" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">anonymize_ident_line<pos:position pos:line="46" pos:column="45"/></name><argument_list pos:line="46" pos:column="45">(<argument><expr><operator pos:line="46" pos:column="46">&amp;<pos:position pos:line="46" pos:column="51"/></operator><name pos:line="46" pos:column="47">tagger<pos:position pos:line="46" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="55">&amp;<pos:position pos:line="46" pos:column="60"/></operator><name pos:line="46" pos:column="56">tagger_end<pos:position pos:line="46" pos:column="66"/></name></expr></argument>)<pos:position pos:line="46" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="68"/></expr_stmt></block></then></if>
	}<pos:position pos:line="47" pos:column="10"/></block></else></if>

	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">anonymize<pos:position pos:line="49" pos:column="22"/></name></expr>)<pos:position pos:line="49" pos:column="23"/></condition><then pos:line="49" pos:column="23"> <block pos:line="49" pos:column="24">{
		<expr_stmt><expr><name pos:line="50" pos:column="17">name<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <call><name pos:line="50" pos:column="24">anonymize_refname<pos:position pos:line="50" pos:column="41"/></name><argument_list pos:line="50" pos:column="41">(<argument><expr><name pos:line="50" pos:column="42">name<pos:position pos:line="50" pos:column="46"/></name></expr></argument>)<pos:position pos:line="50" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="48"/></expr_stmt>
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name pos:line="51" pos:column="21">message<pos:position pos:line="51" pos:column="28"/></name></expr>)<pos:position pos:line="51" pos:column="29"/></condition><then pos:line="51" pos:column="29"> <block pos:line="51" pos:column="30">{
			<decl_stmt><decl><specifier pos:line="52" pos:column="25">static<pos:position pos:line="52" pos:column="31"/></specifier> <type><name><name pos:line="52" pos:column="32">struct<pos:position pos:line="52" pos:column="38"/></name> <name pos:line="52" pos:column="39">hashmap<pos:position pos:line="52" pos:column="46"/></name></name></type> <name pos:line="52" pos:column="47">tags<pos:position pos:line="52" pos:column="51"/></name></decl>;<pos:position pos:line="52" pos:column="52"/></decl_stmt>
			<expr_stmt><expr><name pos:line="53" pos:column="25">message<pos:position pos:line="53" pos:column="32"/></name> <operator pos:line="53" pos:column="33">=<pos:position pos:line="53" pos:column="34"/></operator> <call><name pos:line="53" pos:column="35">anonymize_mem<pos:position pos:line="53" pos:column="48"/></name><argument_list pos:line="53" pos:column="48">(<argument><expr><operator pos:line="53" pos:column="49">&amp;<pos:position pos:line="53" pos:column="54"/></operator><name pos:line="53" pos:column="50">tags<pos:position pos:line="53" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="56">anonymize_tag<pos:position pos:line="53" pos:column="69"/></name></expr></argument>,
						<argument><expr><name pos:line="54" pos:column="49">message<pos:position pos:line="54" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="58">&amp;<pos:position pos:line="54" pos:column="63"/></operator><name pos:line="54" pos:column="59">message_size<pos:position pos:line="54" pos:column="71"/></name></expr></argument>)<pos:position pos:line="54" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="73"/></expr_stmt>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="58" pos:column="9">/* handle signed tags */</comment>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">message<pos:position pos:line="59" pos:column="20"/></name></expr>)<pos:position pos:line="59" pos:column="21"/></condition><then pos:line="59" pos:column="21"> <block pos:line="59" pos:column="22">{
		<decl_stmt><decl><type><specifier pos:line="60" pos:column="17">const<pos:position pos:line="60" pos:column="22"/></specifier> <name pos:line="60" pos:column="23">char<pos:position pos:line="60" pos:column="27"/></name> <modifier pos:line="60" pos:column="28">*<pos:position pos:line="60" pos:column="29"/></modifier></type><name pos:line="60" pos:column="29">signature<pos:position pos:line="60" pos:column="38"/></name> <init pos:line="60" pos:column="39">= <expr><call><name pos:line="60" pos:column="41">strstr<pos:position pos:line="60" pos:column="47"/></name><argument_list pos:line="60" pos:column="47">(<argument><expr><name pos:line="60" pos:column="48">message<pos:position pos:line="60" pos:column="55"/></name></expr></argument>,
					       <argument><expr><literal type="string" pos:line="61" pos:column="48">"\n-----BEGIN PGP SIGNATURE-----\n"<pos:position pos:line="61" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="84"/></argument_list></call></expr></init></decl>;<pos:position pos:line="61" pos:column="85"/></decl_stmt>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">signature<pos:position pos:line="62" pos:column="30"/></name></expr>)<pos:position pos:line="62" pos:column="31"/></condition><then pos:line="62" pos:column="31">
			<block type="pseudo"><switch pos:line="63" pos:column="25">switch<condition pos:line="63" pos:column="31">(<expr><name pos:line="63" pos:column="32">signed_tag_mode<pos:position pos:line="63" pos:column="47"/></name></expr>)<pos:position pos:line="63" pos:column="48"/></condition> <block pos:line="63" pos:column="49">{
			<case pos:line="64" pos:column="25">case <expr><name pos:line="64" pos:column="30">ABORT<pos:position pos:line="64" pos:column="35"/></name></expr>:<pos:position pos:line="64" pos:column="36"/></case>
				<expr_stmt><expr><call><name pos:line="65" pos:column="33">die<pos:position pos:line="65" pos:column="36"/></name> <argument_list pos:line="65" pos:column="37">(<argument><expr><literal type="string" pos:line="65" pos:column="38">"Encountered signed tag %s; use "<pos:position pos:line="65" pos:column="71"/></literal>
				     <literal type="string" pos:line="66" pos:column="38">"--signed-tags=&lt;mode&gt; to handle it."<pos:position pos:line="66" pos:column="80"/></literal></expr></argument>,
				     <argument><expr><call><name pos:line="67" pos:column="38">oid_to_hex<pos:position pos:line="67" pos:column="48"/></name><argument_list pos:line="67" pos:column="48">(<argument><expr><operator pos:line="67" pos:column="49">&amp;<pos:position pos:line="67" pos:column="54"/></operator><name><name pos:line="67" pos:column="50">tag<pos:position pos:line="67" pos:column="53"/></name><operator pos:line="67" pos:column="53">-&gt;<pos:position pos:line="67" pos:column="58"/></operator><name pos:line="67" pos:column="55">object<pos:position pos:line="67" pos:column="61"/></name><operator pos:line="67" pos:column="61">.<pos:position pos:line="67" pos:column="62"/></operator><name pos:line="67" pos:column="62">oid<pos:position pos:line="67" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="68"/></expr_stmt>
			<case pos:line="68" pos:column="25">case <expr><name pos:line="68" pos:column="30">WARN<pos:position pos:line="68" pos:column="34"/></name></expr>:<pos:position pos:line="68" pos:column="35"/></case>
				<expr_stmt><expr><call><name pos:line="69" pos:column="33">warning<pos:position pos:line="69" pos:column="40"/></name> <argument_list pos:line="69" pos:column="41">(<argument><expr><literal type="string" pos:line="69" pos:column="42">"Exporting signed tag %s"<pos:position pos:line="69" pos:column="67"/></literal></expr></argument>,
					 <argument><expr><call><name pos:line="70" pos:column="42">oid_to_hex<pos:position pos:line="70" pos:column="52"/></name><argument_list pos:line="70" pos:column="52">(<argument><expr><operator pos:line="70" pos:column="53">&amp;<pos:position pos:line="70" pos:column="58"/></operator><name><name pos:line="70" pos:column="54">tag<pos:position pos:line="70" pos:column="57"/></name><operator pos:line="70" pos:column="57">-&gt;<pos:position pos:line="70" pos:column="62"/></operator><name pos:line="70" pos:column="59">object<pos:position pos:line="70" pos:column="65"/></name><operator pos:line="70" pos:column="65">.<pos:position pos:line="70" pos:column="66"/></operator><name pos:line="70" pos:column="66">oid<pos:position pos:line="70" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="72"/></expr_stmt>
				<comment type="block" pos:line="71" pos:column="33">/* fallthru */</comment>
			<case pos:line="72" pos:column="25">case <expr><name pos:line="72" pos:column="30">VERBATIM<pos:position pos:line="72" pos:column="38"/></name></expr>:<pos:position pos:line="72" pos:column="39"/></case>
				<break pos:line="73" pos:column="33">break;<pos:position pos:line="73" pos:column="39"/></break>
			<case pos:line="74" pos:column="25">case <expr><name pos:line="74" pos:column="30">WARN_STRIP<pos:position pos:line="74" pos:column="40"/></name></expr>:<pos:position pos:line="74" pos:column="41"/></case>
				<expr_stmt><expr><call><name pos:line="75" pos:column="33">warning<pos:position pos:line="75" pos:column="40"/></name> <argument_list pos:line="75" pos:column="41">(<argument><expr><literal type="string" pos:line="75" pos:column="42">"Stripping signature from tag %s"<pos:position pos:line="75" pos:column="75"/></literal></expr></argument>,
					 <argument><expr><call><name pos:line="76" pos:column="42">oid_to_hex<pos:position pos:line="76" pos:column="52"/></name><argument_list pos:line="76" pos:column="52">(<argument><expr><operator pos:line="76" pos:column="53">&amp;<pos:position pos:line="76" pos:column="58"/></operator><name><name pos:line="76" pos:column="54">tag<pos:position pos:line="76" pos:column="57"/></name><operator pos:line="76" pos:column="57">-&gt;<pos:position pos:line="76" pos:column="62"/></operator><name pos:line="76" pos:column="59">object<pos:position pos:line="76" pos:column="65"/></name><operator pos:line="76" pos:column="65">.<pos:position pos:line="76" pos:column="66"/></operator><name pos:line="76" pos:column="66">oid<pos:position pos:line="76" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="72"/></expr_stmt>
				<comment type="block" pos:line="77" pos:column="33">/* fallthru */</comment>
			<case pos:line="78" pos:column="25">case <expr><name pos:line="78" pos:column="30">STRIP<pos:position pos:line="78" pos:column="35"/></name></expr>:<pos:position pos:line="78" pos:column="36"/></case>
				<expr_stmt><expr><name pos:line="79" pos:column="33">message_size<pos:position pos:line="79" pos:column="45"/></name> <operator pos:line="79" pos:column="46">=<pos:position pos:line="79" pos:column="47"/></operator> <name pos:line="79" pos:column="48">signature<pos:position pos:line="79" pos:column="57"/></name> <operator pos:line="79" pos:column="58">+<pos:position pos:line="79" pos:column="59"/></operator> <literal type="number" pos:line="79" pos:column="60">1<pos:position pos:line="79" pos:column="61"/></literal> <operator pos:line="79" pos:column="62">-<pos:position pos:line="79" pos:column="63"/></operator> <name pos:line="79" pos:column="64">message<pos:position pos:line="79" pos:column="71"/></name></expr>;<pos:position pos:line="79" pos:column="72"/></expr_stmt>
				<break pos:line="80" pos:column="33">break;<pos:position pos:line="80" pos:column="39"/></break>
			}<pos:position pos:line="81" pos:column="26"/></block></switch></block></then></if>
	}<pos:position pos:line="82" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="84" pos:column="9">/* handle tag-&gt;tagged having been filtered out due to paths specified */</comment>
	<expr_stmt><expr><name pos:line="85" pos:column="9">tagged<pos:position pos:line="85" pos:column="15"/></name> <operator pos:line="85" pos:column="16">=<pos:position pos:line="85" pos:column="17"/></operator> <name><name pos:line="85" pos:column="18">tag<pos:position pos:line="85" pos:column="21"/></name><operator pos:line="85" pos:column="21">-&gt;<pos:position pos:line="85" pos:column="26"/></operator><name pos:line="85" pos:column="23">tagged<pos:position pos:line="85" pos:column="29"/></name></name></expr>;<pos:position pos:line="85" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="86" pos:column="9">tagged_mark<pos:position pos:line="86" pos:column="20"/></name> <operator pos:line="86" pos:column="21">=<pos:position pos:line="86" pos:column="22"/></operator> <call><name pos:line="86" pos:column="23">get_object_mark<pos:position pos:line="86" pos:column="38"/></name><argument_list pos:line="86" pos:column="38">(<argument><expr><name pos:line="86" pos:column="39">tagged<pos:position pos:line="86" pos:column="45"/></name></expr></argument>)<pos:position pos:line="86" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="47"/></expr_stmt>
	<if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><operator pos:line="87" pos:column="13">!<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="14">tagged_mark<pos:position pos:line="87" pos:column="25"/></name></expr>)<pos:position pos:line="87" pos:column="26"/></condition><then pos:line="87" pos:column="26"> <block pos:line="87" pos:column="27">{
		<switch pos:line="88" pos:column="17">switch<condition pos:line="88" pos:column="23">(<expr><name pos:line="88" pos:column="24">tag_of_filtered_mode<pos:position pos:line="88" pos:column="44"/></name></expr>)<pos:position pos:line="88" pos:column="45"/></condition> <block pos:line="88" pos:column="46">{
		<case pos:line="89" pos:column="17">case <expr><name pos:line="89" pos:column="22">ABORT<pos:position pos:line="89" pos:column="27"/></name></expr>:<pos:position pos:line="89" pos:column="28"/></case>
			<expr_stmt><expr><call><name pos:line="90" pos:column="25">die<pos:position pos:line="90" pos:column="28"/></name> <argument_list pos:line="90" pos:column="29">(<argument><expr><literal type="string" pos:line="90" pos:column="30">"Tag %s tags unexported object; use "<pos:position pos:line="90" pos:column="67"/></literal>
			     <literal type="string" pos:line="91" pos:column="30">"--tag-of-filtered-object=&lt;mode&gt; to handle it."<pos:position pos:line="91" pos:column="83"/></literal></expr></argument>,
			     <argument><expr><call><name pos:line="92" pos:column="30">oid_to_hex<pos:position pos:line="92" pos:column="40"/></name><argument_list pos:line="92" pos:column="40">(<argument><expr><operator pos:line="92" pos:column="41">&amp;<pos:position pos:line="92" pos:column="46"/></operator><name><name pos:line="92" pos:column="42">tag<pos:position pos:line="92" pos:column="45"/></name><operator pos:line="92" pos:column="45">-&gt;<pos:position pos:line="92" pos:column="50"/></operator><name pos:line="92" pos:column="47">object<pos:position pos:line="92" pos:column="53"/></name><operator pos:line="92" pos:column="53">.<pos:position pos:line="92" pos:column="54"/></operator><name pos:line="92" pos:column="54">oid<pos:position pos:line="92" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="92" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="60"/></expr_stmt>
		<case pos:line="93" pos:column="17">case <expr><name pos:line="93" pos:column="22">DROP<pos:position pos:line="93" pos:column="26"/></name></expr>:<pos:position pos:line="93" pos:column="27"/></case>
			<comment type="block" pos:line="94" pos:column="25">/* Ignore this tag altogether */</comment>
			<return pos:line="95" pos:column="25">return;<pos:position pos:line="95" pos:column="32"/></return>
		<case pos:line="96" pos:column="17">case <expr><name pos:line="96" pos:column="22">REWRITE<pos:position pos:line="96" pos:column="29"/></name></expr>:<pos:position pos:line="96" pos:column="30"/></case>
			<if pos:line="97" pos:column="25">if <condition pos:line="97" pos:column="28">(<expr><name><name pos:line="97" pos:column="29">tagged<pos:position pos:line="97" pos:column="35"/></name><operator pos:line="97" pos:column="35">-&gt;<pos:position pos:line="97" pos:column="40"/></operator><name pos:line="97" pos:column="37">type<pos:position pos:line="97" pos:column="41"/></name></name> <operator pos:line="97" pos:column="42">!=<pos:position pos:line="97" pos:column="44"/></operator> <name pos:line="97" pos:column="45">OBJ_COMMIT<pos:position pos:line="97" pos:column="55"/></name></expr>)<pos:position pos:line="97" pos:column="56"/></condition><then pos:line="97" pos:column="56"> <block pos:line="97" pos:column="57">{
				<expr_stmt><expr><call><name pos:line="98" pos:column="33">die<pos:position pos:line="98" pos:column="36"/></name> <argument_list pos:line="98" pos:column="37">(<argument><expr><literal type="string" pos:line="98" pos:column="38">"Tag %s tags unexported %s!"<pos:position pos:line="98" pos:column="66"/></literal></expr></argument>,
				     <argument><expr><call><name pos:line="99" pos:column="38">oid_to_hex<pos:position pos:line="99" pos:column="48"/></name><argument_list pos:line="99" pos:column="48">(<argument><expr><operator pos:line="99" pos:column="49">&amp;<pos:position pos:line="99" pos:column="54"/></operator><name><name pos:line="99" pos:column="50">tag<pos:position pos:line="99" pos:column="53"/></name><operator pos:line="99" pos:column="53">-&gt;<pos:position pos:line="99" pos:column="58"/></operator><name pos:line="99" pos:column="55">object<pos:position pos:line="99" pos:column="61"/></name><operator pos:line="99" pos:column="61">.<pos:position pos:line="99" pos:column="62"/></operator><name pos:line="99" pos:column="62">oid<pos:position pos:line="99" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="66"/></argument_list></call></expr></argument>,
				     <argument><expr><name><typename pos:line="100" pos:column="38">typename<pos:position pos:line="100" pos:column="46"/></typename></name><operator pos:line="100" pos:column="46">(<pos:position pos:line="100" pos:column="47"/></operator><name><name pos:line="100" pos:column="47">tagged<pos:position pos:line="100" pos:column="53"/></name><operator pos:line="100" pos:column="53">-&gt;<pos:position pos:line="100" pos:column="58"/></operator><name pos:line="100" pos:column="55">type<pos:position pos:line="100" pos:column="59"/></name></name><operator pos:line="100" pos:column="59">)<pos:position pos:line="100" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="100" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="62"/></expr_stmt>
			}<pos:position pos:line="101" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="102" pos:column="25">p<pos:position pos:line="102" pos:column="26"/></name> <operator pos:line="102" pos:column="27">=<pos:position pos:line="102" pos:column="28"/></operator> <operator pos:line="102" pos:column="29">(<pos:position pos:line="102" pos:column="30"/></operator>struct <name pos:line="102" pos:column="37">commit<pos:position pos:line="102" pos:column="43"/></name> <operator pos:line="102" pos:column="44">*<pos:position pos:line="102" pos:column="45"/></operator><operator pos:line="102" pos:column="45">)<pos:position pos:line="102" pos:column="46"/></operator><name pos:line="102" pos:column="46">tagged<pos:position pos:line="102" pos:column="52"/></name></expr>;<pos:position pos:line="102" pos:column="53"/></expr_stmt>
			<for pos:line="103" pos:column="25">for <control pos:line="103" pos:column="29">(<init pos:line="103" pos:column="30">;<pos:position pos:line="103" pos:column="31"/></init><condition pos:line="103" pos:column="31">;<pos:position pos:line="103" pos:column="32"/></condition><incr/>)<pos:position pos:line="103" pos:column="33"/></control> <block pos:line="103" pos:column="34">{
				<if pos:line="104" pos:column="33">if <condition pos:line="104" pos:column="36">(<expr><name><name pos:line="104" pos:column="37">p<pos:position pos:line="104" pos:column="38"/></name><operator pos:line="104" pos:column="38">-&gt;<pos:position pos:line="104" pos:column="43"/></operator><name pos:line="104" pos:column="40">parents<pos:position pos:line="104" pos:column="47"/></name></name> <operator pos:line="104" pos:column="48">&amp;&amp;<pos:position pos:line="104" pos:column="58"/></operator> <name><name pos:line="104" pos:column="51">p<pos:position pos:line="104" pos:column="52"/></name><operator pos:line="104" pos:column="52">-&gt;<pos:position pos:line="104" pos:column="57"/></operator><name pos:line="104" pos:column="54">parents<pos:position pos:line="104" pos:column="61"/></name><operator pos:line="104" pos:column="61">-&gt;<pos:position pos:line="104" pos:column="66"/></operator><name pos:line="104" pos:column="63">next<pos:position pos:line="104" pos:column="67"/></name></name></expr>)<pos:position pos:line="104" pos:column="68"/></condition><then pos:line="104" pos:column="68">
					<block type="pseudo"><break pos:line="105" pos:column="41">break;<pos:position pos:line="105" pos:column="47"/></break></block></then></if>
				<if pos:line="106" pos:column="33">if <condition pos:line="106" pos:column="36">(<expr><name><name pos:line="106" pos:column="37">p<pos:position pos:line="106" pos:column="38"/></name><operator pos:line="106" pos:column="38">-&gt;<pos:position pos:line="106" pos:column="43"/></operator><name pos:line="106" pos:column="40">object<pos:position pos:line="106" pos:column="46"/></name><operator pos:line="106" pos:column="46">.<pos:position pos:line="106" pos:column="47"/></operator><name pos:line="106" pos:column="47">flags<pos:position pos:line="106" pos:column="52"/></name></name> <operator pos:line="106" pos:column="53">&amp;<pos:position pos:line="106" pos:column="58"/></operator> <name pos:line="106" pos:column="55">UNINTERESTING<pos:position pos:line="106" pos:column="68"/></name></expr>)<pos:position pos:line="106" pos:column="69"/></condition><then pos:line="106" pos:column="69">
					<block type="pseudo"><break pos:line="107" pos:column="41">break;<pos:position pos:line="107" pos:column="47"/></break></block></then></if>
				<if pos:line="108" pos:column="33">if <condition pos:line="108" pos:column="36">(<expr><operator pos:line="108" pos:column="37">!<pos:position pos:line="108" pos:column="38"/></operator><operator pos:line="108" pos:column="38">(<pos:position pos:line="108" pos:column="39"/></operator><name><name pos:line="108" pos:column="39">p<pos:position pos:line="108" pos:column="40"/></name><operator pos:line="108" pos:column="40">-&gt;<pos:position pos:line="108" pos:column="45"/></operator><name pos:line="108" pos:column="42">object<pos:position pos:line="108" pos:column="48"/></name><operator pos:line="108" pos:column="48">.<pos:position pos:line="108" pos:column="49"/></operator><name pos:line="108" pos:column="49">flags<pos:position pos:line="108" pos:column="54"/></name></name> <operator pos:line="108" pos:column="55">&amp;<pos:position pos:line="108" pos:column="60"/></operator> <name pos:line="108" pos:column="57">TREESAME<pos:position pos:line="108" pos:column="65"/></name><operator pos:line="108" pos:column="65">)<pos:position pos:line="108" pos:column="66"/></operator></expr>)<pos:position pos:line="108" pos:column="67"/></condition><then pos:line="108" pos:column="67">
					<block type="pseudo"><break pos:line="109" pos:column="41">break;<pos:position pos:line="109" pos:column="47"/></break></block></then></if>
				<if pos:line="110" pos:column="33">if <condition pos:line="110" pos:column="36">(<expr><operator pos:line="110" pos:column="37">!<pos:position pos:line="110" pos:column="38"/></operator><name><name pos:line="110" pos:column="38">p<pos:position pos:line="110" pos:column="39"/></name><operator pos:line="110" pos:column="39">-&gt;<pos:position pos:line="110" pos:column="44"/></operator><name pos:line="110" pos:column="41">parents<pos:position pos:line="110" pos:column="48"/></name></name></expr>)<pos:position pos:line="110" pos:column="49"/></condition><then pos:line="110" pos:column="49">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="41">die<pos:position pos:line="111" pos:column="44"/></name> <argument_list pos:line="111" pos:column="45">(<argument><expr><literal type="string" pos:line="111" pos:column="46">"Can't find replacement commit for tag %s\n"<pos:position pos:line="111" pos:column="90"/></literal></expr></argument>,
					     <argument><expr><call><name pos:line="112" pos:column="46">oid_to_hex<pos:position pos:line="112" pos:column="56"/></name><argument_list pos:line="112" pos:column="56">(<argument><expr><operator pos:line="112" pos:column="57">&amp;<pos:position pos:line="112" pos:column="62"/></operator><name><name pos:line="112" pos:column="58">tag<pos:position pos:line="112" pos:column="61"/></name><operator pos:line="112" pos:column="61">-&gt;<pos:position pos:line="112" pos:column="66"/></operator><name pos:line="112" pos:column="63">object<pos:position pos:line="112" pos:column="69"/></name><operator pos:line="112" pos:column="69">.<pos:position pos:line="112" pos:column="70"/></operator><name pos:line="112" pos:column="70">oid<pos:position pos:line="112" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="76"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="113" pos:column="33">p<pos:position pos:line="113" pos:column="34"/></name> <operator pos:line="113" pos:column="35">=<pos:position pos:line="113" pos:column="36"/></operator> <name><name pos:line="113" pos:column="37">p<pos:position pos:line="113" pos:column="38"/></name><operator pos:line="113" pos:column="38">-&gt;<pos:position pos:line="113" pos:column="43"/></operator><name pos:line="113" pos:column="40">parents<pos:position pos:line="113" pos:column="47"/></name><operator pos:line="113" pos:column="47">-&gt;<pos:position pos:line="113" pos:column="52"/></operator><name pos:line="113" pos:column="49">item<pos:position pos:line="113" pos:column="53"/></name></name></expr>;<pos:position pos:line="113" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="114" pos:column="26"/></block></for>
			<expr_stmt><expr><name pos:line="115" pos:column="25">tagged_mark<pos:position pos:line="115" pos:column="36"/></name> <operator pos:line="115" pos:column="37">=<pos:position pos:line="115" pos:column="38"/></operator> <call><name pos:line="115" pos:column="39">get_object_mark<pos:position pos:line="115" pos:column="54"/></name><argument_list pos:line="115" pos:column="54">(<argument><expr><operator pos:line="115" pos:column="55">&amp;<pos:position pos:line="115" pos:column="60"/></operator><name><name pos:line="115" pos:column="56">p<pos:position pos:line="115" pos:column="57"/></name><operator pos:line="115" pos:column="57">-&gt;<pos:position pos:line="115" pos:column="62"/></operator><name pos:line="115" pos:column="59">object<pos:position pos:line="115" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="116" pos:column="18"/></block></switch>
	}<pos:position pos:line="117" pos:column="10"/></block></then></if>

	<if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><call><name pos:line="119" pos:column="13">starts_with<pos:position pos:line="119" pos:column="24"/></name><argument_list pos:line="119" pos:column="24">(<argument><expr><name pos:line="119" pos:column="25">name<pos:position pos:line="119" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="31">"refs/tags/"<pos:position pos:line="119" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="119" pos:column="45"/></condition><then pos:line="119" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name pos:line="120" pos:column="17">name<pos:position pos:line="120" pos:column="21"/></name> <operator pos:line="120" pos:column="22">+=<pos:position pos:line="120" pos:column="24"/></operator> <literal type="number" pos:line="120" pos:column="25">10<pos:position pos:line="120" pos:column="27"/></literal></expr>;<pos:position pos:line="120" pos:column="28"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="121" pos:column="9">printf<pos:position pos:line="121" pos:column="15"/></name><argument_list pos:line="121" pos:column="15">(<argument><expr><literal type="string" pos:line="121" pos:column="16">"tag %s\nfrom :%d\n%.*s%sdata %d\n%.*s\n"<pos:position pos:line="121" pos:column="57"/></literal></expr></argument>,
	       <argument><expr><name pos:line="122" pos:column="16">name<pos:position pos:line="122" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="22">tagged_mark<pos:position pos:line="122" pos:column="33"/></name></expr></argument>,
	       <argument><expr><call pos:line="123" pos:column="16">(<name pos:line="123" pos:column="17">int<pos:position pos:line="123" pos:column="20"/></name>)<argument_list pos:line="123" pos:column="21">(<argument><expr><name pos:line="123" pos:column="22">tagger_end<pos:position pos:line="123" pos:column="32"/></name> <operator pos:line="123" pos:column="33">-<pos:position pos:line="123" pos:column="34"/></operator> <name pos:line="123" pos:column="35">tagger<pos:position pos:line="123" pos:column="41"/></name></expr></argument>)<pos:position pos:line="123" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="123" pos:column="44">tagger<pos:position pos:line="123" pos:column="50"/></name></expr></argument>,
	       <argument><expr><ternary><condition><expr><name pos:line="124" pos:column="16">tagger<pos:position pos:line="124" pos:column="22"/></name> <operator pos:line="124" pos:column="23">==<pos:position pos:line="124" pos:column="25"/></operator> <name pos:line="124" pos:column="26">tagger_end<pos:position pos:line="124" pos:column="36"/></name></expr> ?<pos:position pos:line="124" pos:column="38"/></condition><then pos:line="124" pos:column="38"> <expr><literal type="string" pos:line="124" pos:column="39">""<pos:position pos:line="124" pos:column="41"/></literal></expr> <pos:position pos:line="124" pos:column="42"/></then><else pos:line="124" pos:column="42">: <expr><literal type="string" pos:line="124" pos:column="44">"\n"<pos:position pos:line="124" pos:column="48"/></literal></expr></else></ternary></expr></argument>,
	       <argument><expr><operator pos:line="125" pos:column="16">(<pos:position pos:line="125" pos:column="17"/></operator><name pos:line="125" pos:column="17">int<pos:position pos:line="125" pos:column="20"/></name><operator pos:line="125" pos:column="20">)<pos:position pos:line="125" pos:column="21"/></operator><name pos:line="125" pos:column="21">message_size<pos:position pos:line="125" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="35">(<pos:position pos:line="125" pos:column="36"/></operator><name pos:line="125" pos:column="36">int<pos:position pos:line="125" pos:column="39"/></name><operator pos:line="125" pos:column="39">)<pos:position pos:line="125" pos:column="40"/></operator><name pos:line="125" pos:column="40">message_size<pos:position pos:line="125" pos:column="52"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="125" pos:column="54">message<pos:position pos:line="125" pos:column="61"/></name></expr> ?<pos:position pos:line="125" pos:column="63"/></condition><then pos:line="125" pos:column="63"> <expr><name pos:line="125" pos:column="64">message<pos:position pos:line="125" pos:column="71"/></name></expr> <pos:position pos:line="125" pos:column="72"/></then><else pos:line="125" pos:column="72">: <expr><literal type="string" pos:line="125" pos:column="74">""<pos:position pos:line="125" pos:column="76"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="125" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="78"/></expr_stmt>
}<pos:position pos:line="126" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1790_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">load_tree<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">tree_entry<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">root<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object_id<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">oid<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><operator pos:line="3" pos:column="33">&amp;<pos:position pos:line="3" pos:column="38"/></operator><name><name pos:line="3" pos:column="34">root<pos:position pos:line="3" pos:column="38"/></name><operator pos:line="3" pos:column="38">-&gt;<pos:position pos:line="3" pos:column="43"/></operator><name pos:line="3" pos:column="40">versions<pos:position pos:line="3" pos:column="48"/></name><index pos:line="3" pos:column="48">[<expr><literal type="number" pos:line="3" pos:column="49">1<pos:position pos:line="3" pos:column="50"/></literal></expr>]<pos:position pos:line="3" pos:column="51"/></index></name><operator pos:line="3" pos:column="51">.<pos:position pos:line="3" pos:column="52"/></operator><name pos:line="3" pos:column="52">oid<pos:position pos:line="3" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object_entry<pos:position pos:line="4" pos:column="28"/></name></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">myoe<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">tree_content<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">t<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">size<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">buf<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">c<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="10" pos:column="9">root<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">tree<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">t<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <call><name pos:line="10" pos:column="26">new_tree_content<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><literal type="number" pos:line="10" pos:column="43">8<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">is_null_oid<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">oid<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
		<block type="pseudo"><return pos:line="12" pos:column="17">return;<pos:position pos:line="12" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">myoe<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">find_object<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">oid<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">myoe<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">&amp;&amp;<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="21">myoe<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">pack_id<pos:position pos:line="15" pos:column="34"/></name></name> <operator pos:line="15" pos:column="35">!=<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="38">MAX_PACK_ID<pos:position pos:line="15" pos:column="49"/></name></expr>)<pos:position pos:line="15" pos:column="50"/></condition><then pos:line="15" pos:column="50"> <block pos:line="15" pos:column="51">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">myoe<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">type<pos:position pos:line="16" pos:column="31"/></name></name> <operator pos:line="16" pos:column="32">!=<pos:position pos:line="16" pos:column="34"/></operator> <name pos:line="16" pos:column="35">OBJ_TREE<pos:position pos:line="16" pos:column="43"/></name></expr>)<pos:position pos:line="16" pos:column="44"/></condition><then pos:line="16" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">die<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><literal type="string" pos:line="17" pos:column="29">"Not a tree: %s"<pos:position pos:line="17" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="47">oid_to_hex<pos:position pos:line="17" pos:column="57"/></name><argument_list pos:line="17" pos:column="57">(<argument><expr><name pos:line="17" pos:column="58">oid<pos:position pos:line="17" pos:column="61"/></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">t<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">delta_depth<pos:position pos:line="18" pos:column="31"/></name></name> <operator pos:line="18" pos:column="32">=<pos:position pos:line="18" pos:column="33"/></operator> <name><name pos:line="18" pos:column="34">myoe<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">depth<pos:position pos:line="18" pos:column="45"/></name></name></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">buf<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <call><name pos:line="19" pos:column="23">gfi_unpack_entry<pos:position pos:line="19" pos:column="39"/></name><argument_list pos:line="19" pos:column="39">(<argument><expr><name pos:line="19" pos:column="40">myoe<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="46">&amp;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="47">size<pos:position pos:line="19" pos:column="51"/></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">buf<pos:position pos:line="20" pos:column="25"/></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">die<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><literal type="string" pos:line="21" pos:column="29">"Can't load tree %s"<pos:position pos:line="21" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="51">oid_to_hex<pos:position pos:line="21" pos:column="61"/></name><argument_list pos:line="21" pos:column="61">(<argument><expr><name pos:line="21" pos:column="62">oid<pos:position pos:line="21" pos:column="65"/></name></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="68"/></expr_stmt></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block></then> <else pos:line="22" pos:column="11">else <block pos:line="22" pos:column="16">{
		<decl_stmt><decl><type><name><name pos:line="23" pos:column="17">enum<pos:position pos:line="23" pos:column="21"/></name> <name pos:line="23" pos:column="22">object_type<pos:position pos:line="23" pos:column="33"/></name></name></type> <name pos:line="23" pos:column="34">type<pos:position pos:line="23" pos:column="38"/></name></decl>;<pos:position pos:line="23" pos:column="39"/></decl_stmt>
		<expr_stmt><expr><name pos:line="24" pos:column="17">buf<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <call><name pos:line="24" pos:column="23">read_sha1_file<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name><name pos:line="24" pos:column="38">oid<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">-&gt;<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="43">hash<pos:position pos:line="24" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="49">&amp;<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="50">type<pos:position pos:line="24" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="56">&amp;<pos:position pos:line="24" pos:column="61"/></operator><name pos:line="24" pos:column="57">size<pos:position pos:line="24" pos:column="61"/></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">buf<pos:position pos:line="25" pos:column="25"/></name> <operator pos:line="25" pos:column="26">||<pos:position pos:line="25" pos:column="28"/></operator> <name pos:line="25" pos:column="29">type<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">!=<pos:position pos:line="25" pos:column="36"/></operator> <name pos:line="25" pos:column="37">OBJ_TREE<pos:position pos:line="25" pos:column="45"/></name></expr>)<pos:position pos:line="25" pos:column="46"/></condition><then pos:line="25" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="25">die<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><literal type="string" pos:line="26" pos:column="29">"Can't load tree %s"<pos:position pos:line="26" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="51">oid_to_hex<pos:position pos:line="26" pos:column="61"/></name><argument_list pos:line="26" pos:column="61">(<argument><expr><name pos:line="26" pos:column="62">oid<pos:position pos:line="26" pos:column="65"/></name></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="29" pos:column="9">c<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <name pos:line="29" pos:column="13">buf<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></expr_stmt>
	<while pos:line="30" pos:column="9">while <condition pos:line="30" pos:column="15">(<expr><name pos:line="30" pos:column="16">c<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">!=<pos:position pos:line="30" pos:column="20"/></operator> <operator pos:line="30" pos:column="21">(<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">buf<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">+<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">size<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">)<pos:position pos:line="30" pos:column="33"/></operator></expr>)<pos:position pos:line="30" pos:column="34"/></condition> <block pos:line="30" pos:column="35">{
		<decl_stmt><decl><type><name><name pos:line="31" pos:column="17">struct<pos:position pos:line="31" pos:column="23"/></name> <name pos:line="31" pos:column="24">tree_entry<pos:position pos:line="31" pos:column="34"/></name></name> <modifier pos:line="31" pos:column="35">*<pos:position pos:line="31" pos:column="36"/></modifier></type><name pos:line="31" pos:column="36">e<pos:position pos:line="31" pos:column="37"/></name> <init pos:line="31" pos:column="38">= <expr><call><name pos:line="31" pos:column="40">new_tree_entry<pos:position pos:line="31" pos:column="54"/></name><argument_list pos:line="31" pos:column="54">()<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="57"/></decl_stmt>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name><name pos:line="33" pos:column="21">t<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">entry_count<pos:position pos:line="33" pos:column="35"/></name></name> <operator pos:line="33" pos:column="36">==<pos:position pos:line="33" pos:column="38"/></operator> <name><name pos:line="33" pos:column="39">t<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">-&gt;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="42">entry_capacity<pos:position pos:line="33" pos:column="56"/></name></name></expr>)<pos:position pos:line="33" pos:column="57"/></condition><then pos:line="33" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="25">root<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">tree<pos:position pos:line="34" pos:column="35"/></name></name> <operator pos:line="34" pos:column="36">=<pos:position pos:line="34" pos:column="37"/></operator> <name pos:line="34" pos:column="38">t<pos:position pos:line="34" pos:column="39"/></name> <operator pos:line="34" pos:column="40">=<pos:position pos:line="34" pos:column="41"/></operator> <call><name pos:line="34" pos:column="42">grow_tree_content<pos:position pos:line="34" pos:column="59"/></name><argument_list pos:line="34" pos:column="59">(<argument><expr><name pos:line="34" pos:column="60">t<pos:position pos:line="34" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="63">t<pos:position pos:line="34" pos:column="64"/></name><operator pos:line="34" pos:column="64">-&gt;<pos:position pos:line="34" pos:column="69"/></operator><name pos:line="34" pos:column="66">entry_count<pos:position pos:line="34" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="79"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="35" pos:column="17">t<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">-&gt;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="20">entries<pos:position pos:line="35" pos:column="27"/></name><index pos:line="35" pos:column="27">[<expr><name><name pos:line="35" pos:column="28">t<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">entry_count<pos:position pos:line="35" pos:column="42"/></name></name><operator pos:line="35" pos:column="42">++<pos:position pos:line="35" pos:column="44"/></operator></expr>]<pos:position pos:line="35" pos:column="45"/></index></name> <operator pos:line="35" pos:column="46">=<pos:position pos:line="35" pos:column="47"/></operator> <name pos:line="35" pos:column="48">e<pos:position pos:line="35" pos:column="49"/></name></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="37" pos:column="17">e<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">tree<pos:position pos:line="37" pos:column="24"/></name></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="27">NULL<pos:position pos:line="37" pos:column="31"/></name></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">c<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <call><name pos:line="38" pos:column="21">get_mode<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">c<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="33">&amp;<pos:position pos:line="38" pos:column="38"/></operator><name><name pos:line="38" pos:column="34">e<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">-&gt;<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="37">versions<pos:position pos:line="38" pos:column="45"/></name><index pos:line="38" pos:column="45">[<expr><literal type="number" pos:line="38" pos:column="46">1<pos:position pos:line="38" pos:column="47"/></literal></expr>]<pos:position pos:line="38" pos:column="48"/></index></name><operator pos:line="38" pos:column="48">.<pos:position pos:line="38" pos:column="49"/></operator><name pos:line="38" pos:column="49">mode<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">!<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">c<pos:position pos:line="39" pos:column="23"/></name></expr>)<pos:position pos:line="39" pos:column="24"/></condition><then pos:line="39" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="25">die<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><literal type="string" pos:line="40" pos:column="29">"Corrupt mode in %s"<pos:position pos:line="40" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="51">oid_to_hex<pos:position pos:line="40" pos:column="61"/></name><argument_list pos:line="40" pos:column="61">(<argument><expr><name pos:line="40" pos:column="62">oid<pos:position pos:line="40" pos:column="65"/></name></expr></argument>)<pos:position pos:line="40" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="68"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="41" pos:column="17">e<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">-&gt;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="20">versions<pos:position pos:line="41" pos:column="28"/></name><index pos:line="41" pos:column="28">[<expr><literal type="number" pos:line="41" pos:column="29">0<pos:position pos:line="41" pos:column="30"/></literal></expr>]<pos:position pos:line="41" pos:column="31"/></index></name><operator pos:line="41" pos:column="31">.<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="32">mode<pos:position pos:line="41" pos:column="36"/></name> <operator pos:line="41" pos:column="37">=<pos:position pos:line="41" pos:column="38"/></operator> <name><name pos:line="41" pos:column="39">e<pos:position pos:line="41" pos:column="40"/></name><operator pos:line="41" pos:column="40">-&gt;<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="42">versions<pos:position pos:line="41" pos:column="50"/></name><index pos:line="41" pos:column="50">[<expr><literal type="number" pos:line="41" pos:column="51">1<pos:position pos:line="41" pos:column="52"/></literal></expr>]<pos:position pos:line="41" pos:column="53"/></index></name><operator pos:line="41" pos:column="53">.<pos:position pos:line="41" pos:column="54"/></operator><name pos:line="41" pos:column="54">mode<pos:position pos:line="41" pos:column="58"/></name></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="42" pos:column="17">e<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">name<pos:position pos:line="42" pos:column="24"/></name></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <call><name pos:line="42" pos:column="27">to_atom<pos:position pos:line="42" pos:column="34"/></name><argument_list pos:line="42" pos:column="34">(<argument><expr><name pos:line="42" pos:column="35">c<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="38">strlen<pos:position pos:line="42" pos:column="44"/></name><argument_list pos:line="42" pos:column="44">(<argument><expr><name pos:line="42" pos:column="45">c<pos:position pos:line="42" pos:column="46"/></name></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="43" pos:column="17">c<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">+=<pos:position pos:line="43" pos:column="21"/></operator> <name><name pos:line="43" pos:column="22">e<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">-&gt;<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="25">name<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">-&gt;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="31">str_len<pos:position pos:line="43" pos:column="38"/></name></name> <operator pos:line="43" pos:column="39">+<pos:position pos:line="43" pos:column="40"/></operator> <literal type="number" pos:line="43" pos:column="41">1<pos:position pos:line="43" pos:column="42"/></literal></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">hashcpy<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name><name pos:line="44" pos:column="25">e<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">versions<pos:position pos:line="44" pos:column="36"/></name><index pos:line="44" pos:column="36">[<expr><literal type="number" pos:line="44" pos:column="37">0<pos:position pos:line="44" pos:column="38"/></literal></expr>]<pos:position pos:line="44" pos:column="39"/></index></name><operator pos:line="44" pos:column="39">.<pos:position pos:line="44" pos:column="40"/></operator><name><name pos:line="44" pos:column="40">oid<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">.<pos:position pos:line="44" pos:column="44"/></operator><name pos:line="44" pos:column="44">hash<pos:position pos:line="44" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="50">(<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="51">unsigned<pos:position pos:line="44" pos:column="59"/></name> <name pos:line="44" pos:column="60">char<pos:position pos:line="44" pos:column="64"/></name> <operator pos:line="44" pos:column="65">*<pos:position pos:line="44" pos:column="66"/></operator><operator pos:line="44" pos:column="66">)<pos:position pos:line="44" pos:column="67"/></operator><name pos:line="44" pos:column="67">c<pos:position pos:line="44" pos:column="68"/></name></expr></argument>)<pos:position pos:line="44" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">hashcpy<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name><name pos:line="45" pos:column="25">e<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">-&gt;<pos:position pos:line="45" pos:column="31"/></operator><name pos:line="45" pos:column="28">versions<pos:position pos:line="45" pos:column="36"/></name><index pos:line="45" pos:column="36">[<expr><literal type="number" pos:line="45" pos:column="37">1<pos:position pos:line="45" pos:column="38"/></literal></expr>]<pos:position pos:line="45" pos:column="39"/></index></name><operator pos:line="45" pos:column="39">.<pos:position pos:line="45" pos:column="40"/></operator><name><name pos:line="45" pos:column="40">oid<pos:position pos:line="45" pos:column="43"/></name><operator pos:line="45" pos:column="43">.<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="44">hash<pos:position pos:line="45" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="50">(<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="51">unsigned<pos:position pos:line="45" pos:column="59"/></name> <name pos:line="45" pos:column="60">char<pos:position pos:line="45" pos:column="64"/></name> <operator pos:line="45" pos:column="65">*<pos:position pos:line="45" pos:column="66"/></operator><operator pos:line="45" pos:column="66">)<pos:position pos:line="45" pos:column="67"/></operator><name pos:line="45" pos:column="67">c<pos:position pos:line="45" pos:column="68"/></name></expr></argument>)<pos:position pos:line="45" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name pos:line="46" pos:column="17">c<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">+=<pos:position pos:line="46" pos:column="21"/></operator> <name pos:line="46" pos:column="22">GIT_SHA1_RAWSZ<pos:position pos:line="46" pos:column="36"/></name></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="47" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">free<pos:position pos:line="48" pos:column="13"/></name><argument_list pos:line="48" pos:column="13">(<argument><expr><name pos:line="48" pos:column="14">buf<pos:position pos:line="48" pos:column="17"/></name></expr></argument>)<pos:position pos:line="48" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="19"/></expr_stmt>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

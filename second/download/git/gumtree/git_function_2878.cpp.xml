<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2878.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_receive_pack<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">argc<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">argv<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">prefix<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">advertise_refs<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><literal type="number" pos:line="3" pos:column="30">0<pos:position pos:line="3" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">command<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">commands<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">sha1_array<pos:position pos:line="5" pos:column="26"/></name></name></type> <name pos:line="5" pos:column="27">shallow<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><name pos:line="5" pos:column="37">SHA1_ARRAY_INIT<pos:position pos:line="5" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">sha1_array<pos:position pos:line="6" pos:column="26"/></name></name></type> <name pos:line="6" pos:column="27">ref<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><name pos:line="6" pos:column="33">SHA1_ARRAY_INIT<pos:position pos:line="6" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">shallow_info<pos:position pos:line="7" pos:column="28"/></name></name></type> <name pos:line="7" pos:column="29">si<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">option<pos:position pos:line="9" pos:column="22"/></name></name></type> <name><name pos:line="9" pos:column="23">options<pos:position pos:line="9" pos:column="30"/></name><index pos:line="9" pos:column="30">[]<pos:position pos:line="9" pos:column="32"/></index></name> <init pos:line="9" pos:column="33">= <expr><block pos:line="9" pos:column="35">{
		<expr><call><name pos:line="10" pos:column="17">OPT__QUIET<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><operator pos:line="10" pos:column="28">&amp;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="29">quiet<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="36">N_<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">(<argument><expr><literal type="string" pos:line="10" pos:column="39">"quiet"<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>,
		<expr><call><name pos:line="11" pos:column="17">OPT_HIDDEN_BOOL<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><literal type="number" pos:line="11" pos:column="33">0<pos:position pos:line="11" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="36">"stateless-rpc"<pos:position pos:line="11" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="53">&amp;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="54">stateless_rpc<pos:position pos:line="11" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="69">NULL<pos:position pos:line="11" pos:column="73"/></name></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr>,
		<expr><call><name pos:line="12" pos:column="17">OPT_HIDDEN_BOOL<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><literal type="number" pos:line="12" pos:column="33">0<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="36">"advertise-refs"<pos:position pos:line="12" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="54">&amp;<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="55">advertise_refs<pos:position pos:line="12" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="71">NULL<pos:position pos:line="12" pos:column="75"/></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>,
		<expr><call><name pos:line="13" pos:column="17">OPT_HIDDEN_BOOL<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><literal type="number" pos:line="13" pos:column="33">0<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="36">"reject-thin-pack-for-testing"<pos:position pos:line="13" pos:column="66"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="68">&amp;<pos:position pos:line="13" pos:column="73"/></operator><name pos:line="13" pos:column="69">reject_thin<pos:position pos:line="13" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="82">NULL<pos:position pos:line="13" pos:column="86"/></name></expr></argument>)<pos:position pos:line="13" pos:column="87"/></argument_list></call></expr>,
		<macro><name pos:line="14" pos:column="17">OPT_END<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">()<pos:position pos:line="14" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="15" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="15" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">packet_trace_identity<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><literal type="string" pos:line="17" pos:column="31">"receive-pack"<pos:position pos:line="17" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><name pos:line="19" pos:column="9">argc<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">parse_options<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">argc<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="36">argv<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">prefix<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">options<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">receive_pack_usage<pos:position pos:line="19" pos:column="77"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="79">0<pos:position pos:line="19" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="82"/></expr_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">argc<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">&gt;<pos:position pos:line="21" pos:column="22"/></operator> <literal type="number" pos:line="21" pos:column="20">1<pos:position pos:line="21" pos:column="21"/></literal></expr>)<pos:position pos:line="21" pos:column="22"/></condition><then pos:line="21" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">usage_msg_opt<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><call><name pos:line="22" pos:column="31">_<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><literal type="string" pos:line="22" pos:column="33">"Too many arguments."<pos:position pos:line="22" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="22" pos:column="57">receive_pack_usage<pos:position pos:line="22" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="77">options<pos:position pos:line="22" pos:column="84"/></name></expr></argument>)<pos:position pos:line="22" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="86"/></expr_stmt></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">argc<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">==<pos:position pos:line="23" pos:column="20"/></operator> <literal type="number" pos:line="23" pos:column="21">0<pos:position pos:line="23" pos:column="22"/></literal></expr>)<pos:position pos:line="23" pos:column="23"/></condition><then pos:line="23" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">usage_msg_opt<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><call><name pos:line="24" pos:column="31">_<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><literal type="string" pos:line="24" pos:column="33">"You must specify a directory."<pos:position pos:line="24" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="67">receive_pack_usage<pos:position pos:line="24" pos:column="85"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="87">options<pos:position pos:line="24" pos:column="94"/></name></expr></argument>)<pos:position pos:line="24" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="96"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="26" pos:column="9">service_dir<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name><name pos:line="26" pos:column="23">argv<pos:position pos:line="26" pos:column="27"/></name><index pos:line="26" pos:column="27">[<expr><literal type="number" pos:line="26" pos:column="28">0<pos:position pos:line="26" pos:column="29"/></literal></expr>]<pos:position pos:line="26" pos:column="30"/></index></name></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">setup_path<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">()<pos:position pos:line="28" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><call><name pos:line="30" pos:column="14">enter_repo<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">service_dir<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="38">0<pos:position pos:line="30" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">die<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><literal type="string" pos:line="31" pos:column="21">"'%s' does not appear to be a git repository"<pos:position pos:line="31" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="68">service_dir<pos:position pos:line="31" pos:column="79"/></name></expr></argument>)<pos:position pos:line="31" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="81"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="33" pos:column="9">git_config<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><name pos:line="33" pos:column="20">receive_pack_config<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="41">NULL<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">cert_nonce_seed<pos:position pos:line="34" pos:column="28"/></name></expr>)<pos:position pos:line="34" pos:column="29"/></condition><then pos:line="34" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="17">push_cert_nonce<pos:position pos:line="35" pos:column="32"/></name> <operator pos:line="35" pos:column="33">=<pos:position pos:line="35" pos:column="34"/></operator> <call><name pos:line="35" pos:column="35">prepare_push_cert_nonce<pos:position pos:line="35" pos:column="58"/></name><argument_list pos:line="35" pos:column="58">(<argument><expr><name pos:line="35" pos:column="59">service_dir<pos:position pos:line="35" pos:column="70"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="72">time<pos:position pos:line="35" pos:column="76"/></name><argument_list pos:line="35" pos:column="76">(<argument><expr><name pos:line="35" pos:column="77">NULL<pos:position pos:line="35" pos:column="81"/></name></expr></argument>)<pos:position pos:line="35" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="84"/></expr_stmt></block></then></if>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><literal type="number" pos:line="37" pos:column="13">0<pos:position pos:line="37" pos:column="14"/></literal> <operator pos:line="37" pos:column="15">&lt;=<pos:position pos:line="37" pos:column="20"/></operator> <name pos:line="37" pos:column="18">transfer_unpack_limit<pos:position pos:line="37" pos:column="39"/></name></expr>)<pos:position pos:line="37" pos:column="40"/></condition><then pos:line="37" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="17">unpack_limit<pos:position pos:line="38" pos:column="29"/></name> <operator pos:line="38" pos:column="30">=<pos:position pos:line="38" pos:column="31"/></operator> <name pos:line="38" pos:column="32">transfer_unpack_limit<pos:position pos:line="38" pos:column="53"/></name></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt></block></then>
	<elseif pos:line="39" pos:column="9">else <if pos:line="39" pos:column="14">if <condition pos:line="39" pos:column="17">(<expr><literal type="number" pos:line="39" pos:column="18">0<pos:position pos:line="39" pos:column="19"/></literal> <operator pos:line="39" pos:column="20">&lt;=<pos:position pos:line="39" pos:column="25"/></operator> <name pos:line="39" pos:column="23">receive_unpack_limit<pos:position pos:line="39" pos:column="43"/></name></expr>)<pos:position pos:line="39" pos:column="44"/></condition><then pos:line="39" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="17">unpack_limit<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">=<pos:position pos:line="40" pos:column="31"/></operator> <name pos:line="40" pos:column="32">receive_unpack_limit<pos:position pos:line="40" pos:column="52"/></name></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">advertise_refs<pos:position pos:line="42" pos:column="27"/></name> <operator pos:line="42" pos:column="28">||<pos:position pos:line="42" pos:column="30"/></operator> <operator pos:line="42" pos:column="31">!<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="32">stateless_rpc<pos:position pos:line="42" pos:column="45"/></name></expr>)<pos:position pos:line="42" pos:column="46"/></condition><then pos:line="42" pos:column="46"> <block pos:line="42" pos:column="47">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">write_head_info<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">()<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">advertise_refs<pos:position pos:line="45" pos:column="27"/></name></expr>)<pos:position pos:line="45" pos:column="28"/></condition><then pos:line="45" pos:column="28">
		<block type="pseudo"><return pos:line="46" pos:column="17">return <expr><literal type="number" pos:line="46" pos:column="24">0<pos:position pos:line="46" pos:column="25"/></literal></expr>;<pos:position pos:line="46" pos:column="26"/></return></block></then></if>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">(<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">commands<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">=<pos:position pos:line="48" pos:column="24"/></operator> <call><name pos:line="48" pos:column="25">read_head_info<pos:position pos:line="48" pos:column="39"/></name><argument_list pos:line="48" pos:column="39">(<argument><expr><operator pos:line="48" pos:column="40">&amp;<pos:position pos:line="48" pos:column="45"/></operator><name pos:line="48" pos:column="41">shallow<pos:position pos:line="48" pos:column="48"/></name></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call><operator pos:line="48" pos:column="49">)<pos:position pos:line="48" pos:column="50"/></operator> <operator pos:line="48" pos:column="51">!=<pos:position pos:line="48" pos:column="53"/></operator> <name pos:line="48" pos:column="54">NULL<pos:position pos:line="48" pos:column="58"/></name></expr>)<pos:position pos:line="48" pos:column="59"/></condition><then pos:line="48" pos:column="59"> <block pos:line="48" pos:column="60">{
		<decl_stmt><decl><type><specifier pos:line="49" pos:column="17">const<pos:position pos:line="49" pos:column="22"/></specifier> <name pos:line="49" pos:column="23">char<pos:position pos:line="49" pos:column="27"/></name> <modifier pos:line="49" pos:column="28">*<pos:position pos:line="49" pos:column="29"/></modifier></type><name pos:line="49" pos:column="29">unpack_status<pos:position pos:line="49" pos:column="42"/></name> <init pos:line="49" pos:column="43">= <expr><name pos:line="49" pos:column="45">NULL<pos:position pos:line="49" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="49" pos:column="50"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="51" pos:column="17">prepare_shallow_info<pos:position pos:line="51" pos:column="37"/></name><argument_list pos:line="51" pos:column="37">(<argument><expr><operator pos:line="51" pos:column="38">&amp;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="39">si<pos:position pos:line="51" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="43">&amp;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="44">shallow<pos:position pos:line="51" pos:column="51"/></name></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><operator pos:line="52" pos:column="21">!<pos:position pos:line="52" pos:column="22"/></operator><name><name pos:line="52" pos:column="22">si<pos:position pos:line="52" pos:column="24"/></name><operator pos:line="52" pos:column="24">.<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="25">nr_ours<pos:position pos:line="52" pos:column="32"/></name></name> <operator pos:line="52" pos:column="33">&amp;&amp;<pos:position pos:line="52" pos:column="43"/></operator> <operator pos:line="52" pos:column="36">!<pos:position pos:line="52" pos:column="37"/></operator><name><name pos:line="52" pos:column="37">si<pos:position pos:line="52" pos:column="39"/></name><operator pos:line="52" pos:column="39">.<pos:position pos:line="52" pos:column="40"/></operator><name pos:line="52" pos:column="40">nr_theirs<pos:position pos:line="52" pos:column="49"/></name></name></expr>)<pos:position pos:line="52" pos:column="50"/></condition><then pos:line="52" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="25">shallow_update<pos:position pos:line="53" pos:column="39"/></name> <operator pos:line="53" pos:column="40">=<pos:position pos:line="53" pos:column="41"/></operator> <literal type="number" pos:line="53" pos:column="42">0<pos:position pos:line="53" pos:column="43"/></literal></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt></block></then></if>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><operator pos:line="54" pos:column="21">!<pos:position pos:line="54" pos:column="22"/></operator><call><name pos:line="54" pos:column="22">delete_only<pos:position pos:line="54" pos:column="33"/></name><argument_list pos:line="54" pos:column="33">(<argument><expr><name pos:line="54" pos:column="34">commands<pos:position pos:line="54" pos:column="42"/></name></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="44"/></condition><then pos:line="54" pos:column="44"> <block pos:line="54" pos:column="45">{
			<expr_stmt><expr><name pos:line="55" pos:column="25">unpack_status<pos:position pos:line="55" pos:column="38"/></name> <operator pos:line="55" pos:column="39">=<pos:position pos:line="55" pos:column="40"/></operator> <call><name pos:line="55" pos:column="41">unpack_with_sideband<pos:position pos:line="55" pos:column="61"/></name><argument_list pos:line="55" pos:column="61">(<argument><expr><operator pos:line="55" pos:column="62">&amp;<pos:position pos:line="55" pos:column="67"/></operator><name pos:line="55" pos:column="63">si<pos:position pos:line="55" pos:column="65"/></name></expr></argument>)<pos:position pos:line="55" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="56" pos:column="25">update_shallow_info<pos:position pos:line="56" pos:column="44"/></name><argument_list pos:line="56" pos:column="44">(<argument><expr><name pos:line="56" pos:column="45">commands<pos:position pos:line="56" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="55">&amp;<pos:position pos:line="56" pos:column="60"/></operator><name pos:line="56" pos:column="56">si<pos:position pos:line="56" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="60">&amp;<pos:position pos:line="56" pos:column="65"/></operator><name pos:line="56" pos:column="61">ref<pos:position pos:line="56" pos:column="64"/></name></expr></argument>)<pos:position pos:line="56" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="66"/></expr_stmt>
		}<pos:position pos:line="57" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">execute_commands<pos:position pos:line="58" pos:column="33"/></name><argument_list pos:line="58" pos:column="33">(<argument><expr><name pos:line="58" pos:column="34">commands<pos:position pos:line="58" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="44">unpack_status<pos:position pos:line="58" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="59">&amp;<pos:position pos:line="58" pos:column="64"/></operator><name pos:line="58" pos:column="60">si<pos:position pos:line="58" pos:column="62"/></name></expr></argument>)<pos:position pos:line="58" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="64"/></expr_stmt>
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">pack_lockfile<pos:position pos:line="59" pos:column="34"/></name></expr>)<pos:position pos:line="59" pos:column="35"/></condition><then pos:line="59" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="25">unlink_or_warn<pos:position pos:line="60" pos:column="39"/></name><argument_list pos:line="60" pos:column="39">(<argument><expr><name pos:line="60" pos:column="40">pack_lockfile<pos:position pos:line="60" pos:column="53"/></name></expr></argument>)<pos:position pos:line="60" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="55"/></expr_stmt></block></then></if>
		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">report_status<pos:position pos:line="61" pos:column="34"/></name></expr>)<pos:position pos:line="61" pos:column="35"/></condition><then pos:line="61" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="25">report<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">commands<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="42">unpack_status<pos:position pos:line="62" pos:column="55"/></name></expr></argument>)<pos:position pos:line="62" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="57"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">run_receive_hook<pos:position pos:line="63" pos:column="33"/></name><argument_list pos:line="63" pos:column="33">(<argument><expr><name pos:line="63" pos:column="34">commands<pos:position pos:line="63" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="44">"post-receive"<pos:position pos:line="63" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="60">1<pos:position pos:line="63" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="64" pos:column="17">run_update_post_hook<pos:position pos:line="64" pos:column="37"/></name><argument_list pos:line="64" pos:column="37">(<argument><expr><name pos:line="64" pos:column="38">commands<pos:position pos:line="64" pos:column="46"/></name></expr></argument>)<pos:position pos:line="64" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="48"/></expr_stmt>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name pos:line="65" pos:column="21">auto_gc<pos:position pos:line="65" pos:column="28"/></name></expr>)<pos:position pos:line="65" pos:column="29"/></condition><then pos:line="65" pos:column="29"> <block pos:line="65" pos:column="30">{
			<decl_stmt><decl><type><specifier pos:line="66" pos:column="25">const<pos:position pos:line="66" pos:column="30"/></specifier> <name pos:line="66" pos:column="31">char<pos:position pos:line="66" pos:column="35"/></name> <modifier pos:line="66" pos:column="36">*<pos:position pos:line="66" pos:column="37"/></modifier></type><name><name pos:line="66" pos:column="37">argv_gc_auto<pos:position pos:line="66" pos:column="49"/></name><index pos:line="66" pos:column="49">[]<pos:position pos:line="66" pos:column="51"/></index></name> <init pos:line="66" pos:column="52">= <expr><block pos:line="66" pos:column="54">{
				<expr><literal type="string" pos:line="67" pos:column="33">"gc"<pos:position pos:line="67" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="67" pos:column="39">"--auto"<pos:position pos:line="67" pos:column="47"/></literal></expr>, <expr><literal type="string" pos:line="67" pos:column="49">"--quiet"<pos:position pos:line="67" pos:column="58"/></literal></expr>, <expr><name pos:line="67" pos:column="60">NULL<pos:position pos:line="67" pos:column="64"/></name></expr>,
			}<pos:position pos:line="68" pos:column="26"/></block></expr></init></decl>;<pos:position pos:line="68" pos:column="27"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="69" pos:column="25">int<pos:position pos:line="69" pos:column="28"/></name></type> <name pos:line="69" pos:column="29">opt<pos:position pos:line="69" pos:column="32"/></name> <init pos:line="69" pos:column="33">= <expr><name pos:line="69" pos:column="35">RUN_GIT_CMD<pos:position pos:line="69" pos:column="46"/></name> <operator pos:line="69" pos:column="47">|<pos:position pos:line="69" pos:column="48"/></operator> <name pos:line="69" pos:column="49">RUN_COMMAND_STDOUT_TO_STDERR<pos:position pos:line="69" pos:column="77"/></name></expr></init></decl>;<pos:position pos:line="69" pos:column="78"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="70" pos:column="25">close_all_packs<pos:position pos:line="70" pos:column="40"/></name><argument_list pos:line="70" pos:column="40">()<pos:position pos:line="70" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">run_command_v_opt<pos:position pos:line="71" pos:column="42"/></name><argument_list pos:line="71" pos:column="42">(<argument><expr><name pos:line="71" pos:column="43">argv_gc_auto<pos:position pos:line="71" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="57">opt<pos:position pos:line="71" pos:column="60"/></name></expr></argument>)<pos:position pos:line="71" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="72" pos:column="18"/></block></then></if>
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name pos:line="73" pos:column="21">auto_update_server_info<pos:position pos:line="73" pos:column="44"/></name></expr>)<pos:position pos:line="73" pos:column="45"/></condition><then pos:line="73" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="25">update_server_info<pos:position pos:line="74" pos:column="43"/></name><argument_list pos:line="74" pos:column="43">(<argument><expr><literal type="number" pos:line="74" pos:column="44">0<pos:position pos:line="74" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="47"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="75" pos:column="17">clear_shallow_info<pos:position pos:line="75" pos:column="35"/></name><argument_list pos:line="75" pos:column="35">(<argument><expr><operator pos:line="75" pos:column="36">&amp;<pos:position pos:line="75" pos:column="41"/></operator><name pos:line="75" pos:column="37">si<pos:position pos:line="75" pos:column="39"/></name></expr></argument>)<pos:position pos:line="75" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="76" pos:column="10"/></block></then></if>
	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><name pos:line="77" pos:column="13">use_sideband<pos:position pos:line="77" pos:column="25"/></name></expr>)<pos:position pos:line="77" pos:column="26"/></condition><then pos:line="77" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="17">packet_flush<pos:position pos:line="78" pos:column="29"/></name><argument_list pos:line="78" pos:column="29">(<argument><expr><literal type="number" pos:line="78" pos:column="30">1<pos:position pos:line="78" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="33"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="79" pos:column="9">sha1_array_clear<pos:position pos:line="79" pos:column="25"/></name><argument_list pos:line="79" pos:column="25">(<argument><expr><operator pos:line="79" pos:column="26">&amp;<pos:position pos:line="79" pos:column="31"/></operator><name pos:line="79" pos:column="27">shallow<pos:position pos:line="79" pos:column="34"/></name></expr></argument>)<pos:position pos:line="79" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="80" pos:column="9">sha1_array_clear<pos:position pos:line="80" pos:column="25"/></name><argument_list pos:line="80" pos:column="25">(<argument><expr><operator pos:line="80" pos:column="26">&amp;<pos:position pos:line="80" pos:column="31"/></operator><name pos:line="80" pos:column="27">ref<pos:position pos:line="80" pos:column="30"/></name></expr></argument>)<pos:position pos:line="80" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="81" pos:column="9">free<pos:position pos:line="81" pos:column="13"/></name><argument_list pos:line="81" pos:column="13">(<argument><expr><operator pos:line="81" pos:column="14">(<pos:position pos:line="81" pos:column="15"/></operator><name pos:line="81" pos:column="15">void<pos:position pos:line="81" pos:column="19"/></name> <operator pos:line="81" pos:column="20">*<pos:position pos:line="81" pos:column="21"/></operator><operator pos:line="81" pos:column="21">)<pos:position pos:line="81" pos:column="22"/></operator><name pos:line="81" pos:column="22">push_cert_nonce<pos:position pos:line="81" pos:column="37"/></name></expr></argument>)<pos:position pos:line="81" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="39"/></expr_stmt>
	<return pos:line="82" pos:column="9">return <expr><literal type="number" pos:line="82" pos:column="16">0<pos:position pos:line="82" pos:column="17"/></literal></expr>;<pos:position pos:line="82" pos:column="18"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

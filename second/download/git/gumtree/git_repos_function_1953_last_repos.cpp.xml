<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1953_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">long<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ff_regexp<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">line<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">long<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">len<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">buffer<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">long<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">buffer_size<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">void<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">priv<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ff_regs<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">regs<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">priv<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">regmatch_t<pos:position pos:line="5" pos:column="19"/></name></type> <name><name pos:line="5" pos:column="20">pmatch<pos:position pos:line="5" pos:column="26"/></name><index pos:line="5" pos:column="26">[<expr><literal type="number" pos:line="5" pos:column="27">2<pos:position pos:line="5" pos:column="28"/></literal></expr>]<pos:position pos:line="5" pos:column="29"/></index></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">result<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

	<comment type="block" pos:line="9" pos:column="9">/* Exclude terminating newline (and cr) from matching */</comment>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">len<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&gt;<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal> <operator pos:line="10" pos:column="21">&amp;&amp;<pos:position pos:line="10" pos:column="31"/></operator> <name><name pos:line="10" pos:column="24">line<pos:position pos:line="10" pos:column="28"/></name><index pos:line="10" pos:column="28">[<expr><name pos:line="10" pos:column="29">len<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-<pos:position pos:line="10" pos:column="33"/></operator><literal type="number" pos:line="10" pos:column="33">1<pos:position pos:line="10" pos:column="34"/></literal></expr>]<pos:position pos:line="10" pos:column="35"/></index></name> <operator pos:line="10" pos:column="36">==<pos:position pos:line="10" pos:column="38"/></operator> <literal type="char" pos:line="10" pos:column="39">'\n'<pos:position pos:line="10" pos:column="43"/></literal></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44"> <block pos:line="10" pos:column="45">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">len<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">&gt;<pos:position pos:line="11" pos:column="29"/></operator> <literal type="number" pos:line="11" pos:column="27">1<pos:position pos:line="11" pos:column="28"/></literal> <operator pos:line="11" pos:column="29">&amp;&amp;<pos:position pos:line="11" pos:column="39"/></operator> <name><name pos:line="11" pos:column="32">line<pos:position pos:line="11" pos:column="36"/></name><index pos:line="11" pos:column="36">[<expr><name pos:line="11" pos:column="37">len<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-<pos:position pos:line="11" pos:column="41"/></operator><literal type="number" pos:line="11" pos:column="41">2<pos:position pos:line="11" pos:column="42"/></literal></expr>]<pos:position pos:line="11" pos:column="43"/></index></name> <operator pos:line="11" pos:column="44">==<pos:position pos:line="11" pos:column="46"/></operator> <literal type="char" pos:line="11" pos:column="47">'\r'<pos:position pos:line="11" pos:column="51"/></literal></expr>)<pos:position pos:line="11" pos:column="52"/></condition><then pos:line="11" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">len<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">-=<pos:position pos:line="12" pos:column="31"/></operator> <literal type="number" pos:line="12" pos:column="32">2<pos:position pos:line="12" pos:column="33"/></literal></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt></block></then>
		<else pos:line="13" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">len<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">--<pos:position pos:line="14" pos:column="30"/></operator></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt></block></else></if>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">i<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal></expr>;<pos:position pos:line="17" pos:column="20"/></init> <condition><expr><name pos:line="17" pos:column="21">i<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">&lt;<pos:position pos:line="17" pos:column="27"/></operator> <name><name pos:line="17" pos:column="25">regs<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">nr<pos:position pos:line="17" pos:column="33"/></name></name></expr>;<pos:position pos:line="17" pos:column="34"/></condition> <incr><expr><name pos:line="17" pos:column="35">i<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">++<pos:position pos:line="17" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="39"/></control> <block pos:line="17" pos:column="40">{
		<decl_stmt><decl><type><name><name pos:line="18" pos:column="17">struct<pos:position pos:line="18" pos:column="23"/></name> <name pos:line="18" pos:column="24">ff_reg<pos:position pos:line="18" pos:column="30"/></name></name> <modifier pos:line="18" pos:column="31">*<pos:position pos:line="18" pos:column="32"/></modifier></type><name pos:line="18" pos:column="32">reg<pos:position pos:line="18" pos:column="35"/></name> <init pos:line="18" pos:column="36">= <expr><name><name pos:line="18" pos:column="38">regs<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">array<pos:position pos:line="18" pos:column="49"/></name></name> <operator pos:line="18" pos:column="50">+<pos:position pos:line="18" pos:column="51"/></operator> <name pos:line="18" pos:column="52">i<pos:position pos:line="18" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="54"/></decl_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><call><name pos:line="19" pos:column="22">regexec_buf<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><operator pos:line="19" pos:column="34">&amp;<pos:position pos:line="19" pos:column="39"/></operator><name><name pos:line="19" pos:column="35">reg<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">-&gt;<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="40">re<pos:position pos:line="19" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="44">line<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">len<pos:position pos:line="19" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="55">2<pos:position pos:line="19" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="58">pmatch<pos:position pos:line="19" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="66">0<pos:position pos:line="19" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="69"/></condition><then pos:line="19" pos:column="69"> <block pos:line="19" pos:column="70">{
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><name><name pos:line="20" pos:column="29">reg<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">negate<pos:position pos:line="20" pos:column="40"/></name></name></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41">
				<block type="pseudo"><return pos:line="21" pos:column="33">return <expr><operator pos:line="21" pos:column="40">-<pos:position pos:line="21" pos:column="41"/></operator><literal type="number" pos:line="21" pos:column="41">1<pos:position pos:line="21" pos:column="42"/></literal></expr>;<pos:position pos:line="21" pos:column="43"/></return></block></then></if>
			<break pos:line="22" pos:column="25">break;<pos:position pos:line="22" pos:column="31"/></break>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
	}<pos:position pos:line="24" pos:column="10"/></block></for>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">regs<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">nr<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">&lt;=<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="25">i<pos:position pos:line="25" pos:column="26"/></name></expr>)<pos:position pos:line="25" pos:column="27"/></condition><then pos:line="25" pos:column="27">
		<block type="pseudo"><return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">-<pos:position pos:line="26" pos:column="25"/></operator><literal type="number" pos:line="26" pos:column="25">1<pos:position pos:line="26" pos:column="26"/></literal></expr>;<pos:position pos:line="26" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="27" pos:column="9">i<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <ternary><condition><expr><name><name pos:line="27" pos:column="13">pmatch<pos:position pos:line="27" pos:column="19"/></name><index pos:line="27" pos:column="19">[<expr><literal type="number" pos:line="27" pos:column="20">1<pos:position pos:line="27" pos:column="21"/></literal></expr>]<pos:position pos:line="27" pos:column="22"/></index></name><operator pos:line="27" pos:column="22">.<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">rm_so<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">&gt;=<pos:position pos:line="27" pos:column="34"/></operator> <literal type="number" pos:line="27" pos:column="32">0<pos:position pos:line="27" pos:column="33"/></literal></expr> ?<pos:position pos:line="27" pos:column="35"/></condition><then pos:line="27" pos:column="35"> <expr><literal type="number" pos:line="27" pos:column="36">1<pos:position pos:line="27" pos:column="37"/></literal></expr> <pos:position pos:line="27" pos:column="38"/></then><else pos:line="27" pos:column="38">: <expr><literal type="number" pos:line="27" pos:column="40">0<pos:position pos:line="27" pos:column="41"/></literal></expr></else></ternary></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="28" pos:column="9">line<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">+=<pos:position pos:line="28" pos:column="16"/></operator> <name><name pos:line="28" pos:column="17">pmatch<pos:position pos:line="28" pos:column="23"/></name><index pos:line="28" pos:column="23">[<expr><name pos:line="28" pos:column="24">i<pos:position pos:line="28" pos:column="25"/></name></expr>]<pos:position pos:line="28" pos:column="26"/></index></name><operator pos:line="28" pos:column="26">.<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="27">rm_so<pos:position pos:line="28" pos:column="32"/></name></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="29" pos:column="9">result<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <name><name pos:line="29" pos:column="18">pmatch<pos:position pos:line="29" pos:column="24"/></name><index pos:line="29" pos:column="24">[<expr><name pos:line="29" pos:column="25">i<pos:position pos:line="29" pos:column="26"/></name></expr>]<pos:position pos:line="29" pos:column="27"/></index></name><operator pos:line="29" pos:column="27">.<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="28">rm_eo<pos:position pos:line="29" pos:column="33"/></name> <operator pos:line="29" pos:column="34">-<pos:position pos:line="29" pos:column="35"/></operator> <name><name pos:line="29" pos:column="36">pmatch<pos:position pos:line="29" pos:column="42"/></name><index pos:line="29" pos:column="42">[<expr><name pos:line="29" pos:column="43">i<pos:position pos:line="29" pos:column="44"/></name></expr>]<pos:position pos:line="29" pos:column="45"/></index></name><operator pos:line="29" pos:column="45">.<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="46">rm_so<pos:position pos:line="29" pos:column="51"/></name></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">result<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">&gt;<pos:position pos:line="30" pos:column="24"/></operator> <name pos:line="30" pos:column="22">buffer_size<pos:position pos:line="30" pos:column="33"/></name></expr>)<pos:position pos:line="30" pos:column="34"/></condition><then pos:line="30" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="17">result<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <name pos:line="31" pos:column="26">buffer_size<pos:position pos:line="31" pos:column="37"/></name></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt></block></then></if>
	<while pos:line="32" pos:column="9">while <condition pos:line="32" pos:column="15">(<expr><name pos:line="32" pos:column="16">result<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">&gt;<pos:position pos:line="32" pos:column="27"/></operator> <literal type="number" pos:line="32" pos:column="25">0<pos:position pos:line="32" pos:column="26"/></literal> <operator pos:line="32" pos:column="27">&amp;&amp;<pos:position pos:line="32" pos:column="37"/></operator> <operator pos:line="32" pos:column="30">(<pos:position pos:line="32" pos:column="31"/></operator><call><name pos:line="32" pos:column="31">isspace<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name><name pos:line="32" pos:column="39">line<pos:position pos:line="32" pos:column="43"/></name><index pos:line="32" pos:column="43">[<expr><name pos:line="32" pos:column="44">result<pos:position pos:line="32" pos:column="50"/></name> <operator pos:line="32" pos:column="51">-<pos:position pos:line="32" pos:column="52"/></operator> <literal type="number" pos:line="32" pos:column="53">1<pos:position pos:line="32" pos:column="54"/></literal></expr>]<pos:position pos:line="32" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call><operator pos:line="32" pos:column="56">)<pos:position pos:line="32" pos:column="57"/></operator></expr>)<pos:position pos:line="32" pos:column="58"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="17">result<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">--<pos:position pos:line="33" pos:column="25"/></operator></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt></block></while>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">memcpy<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">buffer<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="24">line<pos:position pos:line="34" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="30">result<pos:position pos:line="34" pos:column="36"/></name></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
	<return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">result<pos:position pos:line="35" pos:column="22"/></name></expr>;<pos:position pos:line="35" pos:column="23"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5244_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_ignore<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">dir_struct<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">dir<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">prefix<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">argc<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <name pos:line="2" pos:column="61">char<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier><modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">argv<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">full_path<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">seen<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">num_ignored<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><literal type="number" pos:line="6" pos:column="27">0<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="30">dtype<pos:position pos:line="6" pos:column="35"/></name> <init pos:line="6" pos:column="36">= <expr><name pos:line="6" pos:column="38">DT_UNKNOWN<pos:position pos:line="6" pos:column="48"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="50">i<pos:position pos:line="6" pos:column="51"/></name></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">exclude<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">exclude<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">pathspec<pos:position pos:line="8" pos:column="24"/></name></name></type> <name pos:line="8" pos:column="25">pathspec<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">argc<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block pos:line="10" pos:column="20">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">quiet<pos:position pos:line="11" pos:column="27"/></name></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">fprintf<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">stderr<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="41">"no pathspec given.\n"<pos:position pos:line="12" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="65"/></expr_stmt></block></then></if>
		<return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="16" pos:column="9">/*
	 * check-ignore just needs paths. Magic beyond :/ is really
	 * irrelevant.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">parse_pathspec<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="25">pathspec<pos:position pos:line="20" pos:column="33"/></name></expr></argument>,
		       <argument><expr><name pos:line="21" pos:column="24">PATHSPEC_ALL_MAGIC<pos:position pos:line="21" pos:column="42"/></name> <operator pos:line="21" pos:column="43">&amp;<pos:position pos:line="21" pos:column="48"/></operator> <operator pos:line="21" pos:column="45">~<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="46">PATHSPEC_FROMTOP<pos:position pos:line="21" pos:column="62"/></name></expr></argument>,
		       <argument><expr><name pos:line="22" pos:column="24">PATHSPEC_SYMLINK_LEADING_PATH<pos:position pos:line="22" pos:column="53"/></name> <operator pos:line="22" pos:column="54">|<pos:position pos:line="22" pos:column="55"/></operator>
		       <name pos:line="23" pos:column="24">PATHSPEC_KEEP_ORDER<pos:position pos:line="23" pos:column="43"/></name></expr></argument>,
		       <argument><expr><name pos:line="24" pos:column="24">prefix<pos:position pos:line="24" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="32">argv<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">die_path_inside_submodule<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><operator pos:line="26" pos:column="35">&amp;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="36">the_index<pos:position pos:line="26" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="47">&amp;<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="48">pathspec<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>

	<comment type="block" pos:line="28" pos:column="9">/*
	 * look for pathspecs matching entries in the index, since these
	 * should not be ignored, in order to be consistent with
	 * 'git status', 'git add' etc.
	 */</comment>
	<expr_stmt><expr><name pos:line="33" pos:column="9">seen<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">find_pathspecs_matching_against_index<pos:position pos:line="33" pos:column="53"/></name><argument_list pos:line="33" pos:column="53">(<argument><expr><operator pos:line="33" pos:column="54">&amp;<pos:position pos:line="33" pos:column="59"/></operator><name pos:line="33" pos:column="55">pathspec<pos:position pos:line="33" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="65">&amp;<pos:position pos:line="33" pos:column="70"/></operator><name pos:line="33" pos:column="66">the_index<pos:position pos:line="33" pos:column="75"/></name></expr></argument>)<pos:position pos:line="33" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="77"/></expr_stmt>
	<for pos:line="34" pos:column="9">for <control pos:line="34" pos:column="13">(<init><expr><name pos:line="34" pos:column="14">i<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <literal type="number" pos:line="34" pos:column="18">0<pos:position pos:line="34" pos:column="19"/></literal></expr>;<pos:position pos:line="34" pos:column="20"/></init> <condition><expr><name pos:line="34" pos:column="21">i<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">&lt;<pos:position pos:line="34" pos:column="27"/></operator> <name><name pos:line="34" pos:column="25">pathspec<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">.<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="34">nr<pos:position pos:line="34" pos:column="36"/></name></name></expr>;<pos:position pos:line="34" pos:column="37"/></condition> <incr><expr><name pos:line="34" pos:column="38">i<pos:position pos:line="34" pos:column="39"/></name><operator pos:line="34" pos:column="39">++<pos:position pos:line="34" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="42"/></control> <block pos:line="34" pos:column="43">{
		<expr_stmt><expr><name pos:line="35" pos:column="17">full_path<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">=<pos:position pos:line="35" pos:column="28"/></operator> <name><name pos:line="35" pos:column="29">pathspec<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">.<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="38">items<pos:position pos:line="35" pos:column="43"/></name><index pos:line="35" pos:column="43">[<expr><name pos:line="35" pos:column="44">i<pos:position pos:line="35" pos:column="45"/></name></expr>]<pos:position pos:line="35" pos:column="46"/></index></name><operator pos:line="35" pos:column="46">.<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="47">match<pos:position pos:line="35" pos:column="52"/></name></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="36" pos:column="17">exclude<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">=<pos:position pos:line="36" pos:column="26"/></operator> <name pos:line="36" pos:column="27">NULL<pos:position pos:line="36" pos:column="31"/></name></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><name><name pos:line="37" pos:column="22">seen<pos:position pos:line="37" pos:column="26"/></name><index pos:line="37" pos:column="26">[<expr><name pos:line="37" pos:column="27">i<pos:position pos:line="37" pos:column="28"/></name></expr>]<pos:position pos:line="37" pos:column="29"/></index></name></expr>)<pos:position pos:line="37" pos:column="30"/></condition><then pos:line="37" pos:column="30"> <block pos:line="37" pos:column="31">{
			<expr_stmt><expr><name pos:line="38" pos:column="25">exclude<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">=<pos:position pos:line="38" pos:column="34"/></operator> <call><name pos:line="38" pos:column="35">last_exclude_matching<pos:position pos:line="38" pos:column="56"/></name><argument_list pos:line="38" pos:column="56">(<argument><expr><name pos:line="38" pos:column="57">dir<pos:position pos:line="38" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="62">&amp;<pos:position pos:line="38" pos:column="67"/></operator><name pos:line="38" pos:column="63">the_index<pos:position pos:line="38" pos:column="72"/></name></expr></argument>,
							<argument><expr><name pos:line="39" pos:column="57">full_path<pos:position pos:line="39" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="68">&amp;<pos:position pos:line="39" pos:column="73"/></operator><name pos:line="39" pos:column="69">dtype<pos:position pos:line="39" pos:column="74"/></name></expr></argument>)<pos:position pos:line="39" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">!<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">quiet<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">&amp;&amp;<pos:position pos:line="41" pos:column="38"/></operator> <operator pos:line="41" pos:column="31">(<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="32">exclude<pos:position pos:line="41" pos:column="39"/></name> <operator pos:line="41" pos:column="40">||<pos:position pos:line="41" pos:column="42"/></operator> <name pos:line="41" pos:column="43">show_non_matching<pos:position pos:line="41" pos:column="60"/></name><operator pos:line="41" pos:column="60">)<pos:position pos:line="41" pos:column="61"/></operator></expr>)<pos:position pos:line="41" pos:column="62"/></condition><then pos:line="41" pos:column="62">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="25">output_exclude<pos:position pos:line="42" pos:column="39"/></name><argument_list pos:line="42" pos:column="39">(<argument><expr><name><name pos:line="42" pos:column="40">pathspec<pos:position pos:line="42" pos:column="48"/></name><operator pos:line="42" pos:column="48">.<pos:position pos:line="42" pos:column="49"/></operator><name pos:line="42" pos:column="49">items<pos:position pos:line="42" pos:column="54"/></name><index pos:line="42" pos:column="54">[<expr><name pos:line="42" pos:column="55">i<pos:position pos:line="42" pos:column="56"/></name></expr>]<pos:position pos:line="42" pos:column="57"/></index></name><operator pos:line="42" pos:column="57">.<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="58">original<pos:position pos:line="42" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="68">exclude<pos:position pos:line="42" pos:column="75"/></name></expr></argument>)<pos:position pos:line="42" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="77"/></expr_stmt></block></then></if>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">exclude<pos:position pos:line="43" pos:column="28"/></name></expr>)<pos:position pos:line="43" pos:column="29"/></condition><then pos:line="43" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="25">num_ignored<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">++<pos:position pos:line="44" pos:column="38"/></operator></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt></block></then></if>
	}<pos:position pos:line="45" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">free<pos:position pos:line="46" pos:column="13"/></name><argument_list pos:line="46" pos:column="13">(<argument><expr><name pos:line="46" pos:column="14">seen<pos:position pos:line="46" pos:column="18"/></name></expr></argument>)<pos:position pos:line="46" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="20"/></expr_stmt>

	<return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">num_ignored<pos:position pos:line="48" pos:column="27"/></name></expr>;<pos:position pos:line="48" pos:column="28"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

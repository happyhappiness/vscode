<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5231_git-2.4.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">finish<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">commit<pos:position pos:line="1" pos:column="33"/></name></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">head_commit<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
		   <parameter><decl><type><name><name pos:line="2" pos:column="20">struct<pos:position pos:line="2" pos:column="26"/></name> <name pos:line="2" pos:column="27">commit_list<pos:position pos:line="2" pos:column="38"/></name></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">remoteheads<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>,
		   <parameter><decl><type><specifier pos:line="3" pos:column="20">const<pos:position pos:line="3" pos:column="25"/></specifier> <name pos:line="3" pos:column="26">unsigned<pos:position pos:line="3" pos:column="34"/></name> <name pos:line="3" pos:column="35">char<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">new_head<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="51">const<pos:position pos:line="3" pos:column="56"/></specifier> <name pos:line="3" pos:column="57">char<pos:position pos:line="3" pos:column="61"/></name> <modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier></type><name pos:line="3" pos:column="63">msg<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="67"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">reflog_message<pos:position pos:line="5" pos:column="37"/></name> <init pos:line="5" pos:column="38">= <expr><name pos:line="5" pos:column="40">STRBUF_INIT<pos:position pos:line="5" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">unsigned<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">char<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">head<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><name><name pos:line="6" pos:column="37">head_commit<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">-&gt;<pos:position pos:line="6" pos:column="53"/></operator><name pos:line="6" pos:column="50">object<pos:position pos:line="6" pos:column="56"/></name><operator pos:line="6" pos:column="56">.<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="57">sha1<pos:position pos:line="6" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="62"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">msg<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">strbuf_addstr<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><operator pos:line="9" pos:column="31">&amp;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="32">reflog_message<pos:position pos:line="9" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="48">getenv<pos:position pos:line="9" pos:column="54"/></name><argument_list pos:line="9" pos:column="54">(<argument><expr><literal type="string" pos:line="9" pos:column="55">"GIT_REFLOG_ACTION"<pos:position pos:line="9" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="77"/></expr_stmt></block></then>
	<else pos:line="10" pos:column="9">else <block pos:line="10" pos:column="14">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">verbosity<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">&gt;=<pos:position pos:line="11" pos:column="36"/></operator> <literal type="number" pos:line="11" pos:column="34">0<pos:position pos:line="11" pos:column="35"/></literal></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">printf<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><literal type="string" pos:line="12" pos:column="32">"%s\n"<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="40">msg<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">strbuf_addf<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><operator pos:line="13" pos:column="29">&amp;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="30">reflog_message<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="46">"%s: %s"<pos:position pos:line="13" pos:column="54"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="14" pos:column="25">getenv<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><literal type="string" pos:line="14" pos:column="32">"GIT_REFLOG_ACTION"<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="54">msg<pos:position pos:line="14" pos:column="57"/></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></else></if>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">squash<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20"> <block pos:line="16" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">squash_message<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">head_commit<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="45">remoteheads<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then> <else pos:line="18" pos:column="11">else <block pos:line="18" pos:column="16">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">verbosity<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">&gt;=<pos:position pos:line="19" pos:column="36"/></operator> <literal type="number" pos:line="19" pos:column="34">0<pos:position pos:line="19" pos:column="35"/></literal> <operator pos:line="19" pos:column="36">&amp;&amp;<pos:position pos:line="19" pos:column="46"/></operator> <operator pos:line="19" pos:column="39">!<pos:position pos:line="19" pos:column="40"/></operator><name><name pos:line="19" pos:column="40">merge_msg<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">.<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="50">len<pos:position pos:line="19" pos:column="53"/></name></name></expr>)<pos:position pos:line="19" pos:column="54"/></condition><then pos:line="19" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">printf<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><call><name pos:line="20" pos:column="32">_<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><literal type="string" pos:line="20" pos:column="34">"No merge message -- not updating HEAD\n"<pos:position pos:line="20" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="78"/></expr_stmt></block></then>
		<else pos:line="21" pos:column="17">else <block pos:line="21" pos:column="22">{
			<decl_stmt><decl><type><specifier pos:line="22" pos:column="25">const<pos:position pos:line="22" pos:column="30"/></specifier> <name pos:line="22" pos:column="31">char<pos:position pos:line="22" pos:column="35"/></name> <modifier pos:line="22" pos:column="36">*<pos:position pos:line="22" pos:column="37"/></modifier></type><name><name pos:line="22" pos:column="37">argv_gc_auto<pos:position pos:line="22" pos:column="49"/></name><index pos:line="22" pos:column="49">[]<pos:position pos:line="22" pos:column="51"/></index></name> <init pos:line="22" pos:column="52">= <expr><block pos:line="22" pos:column="54">{ <expr><literal type="string" pos:line="22" pos:column="56">"gc"<pos:position pos:line="22" pos:column="60"/></literal></expr>, <expr><literal type="string" pos:line="22" pos:column="62">"--auto"<pos:position pos:line="22" pos:column="70"/></literal></expr>, <expr><name pos:line="22" pos:column="72">NULL<pos:position pos:line="22" pos:column="76"/></name></expr> }<pos:position pos:line="22" pos:column="78"/></block></expr></init></decl>;<pos:position pos:line="22" pos:column="79"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">update_ref<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name><name pos:line="23" pos:column="36">reflog_message<pos:position pos:line="23" pos:column="50"/></name><operator pos:line="23" pos:column="50">.<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="51">buf<pos:position pos:line="23" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="56">"HEAD"<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>,
				<argument><expr><name pos:line="24" pos:column="33">new_head<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">head<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="49">0<pos:position pos:line="24" pos:column="50"/></literal></expr></argument>,
				<argument><expr><name pos:line="25" pos:column="33">UPDATE_REFS_DIE_ON_ERR<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt>
			<comment type="block" pos:line="26" pos:column="25">/*
			 * We ignore errors in 'gc --auto', since the
			 * user should see them.
			 */</comment>
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">run_command_v_opt<pos:position pos:line="30" pos:column="42"/></name><argument_list pos:line="30" pos:column="42">(<argument><expr><name pos:line="30" pos:column="43">argv_gc_auto<pos:position pos:line="30" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="57">RUN_GIT_CMD<pos:position pos:line="30" pos:column="68"/></name></expr></argument>)<pos:position pos:line="30" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="70"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></else></if>
	}<pos:position pos:line="32" pos:column="10"/></block></else></if>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">new_head<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">&amp;&amp;<pos:position pos:line="33" pos:column="32"/></operator> <name pos:line="33" pos:column="25">show_diffstat<pos:position pos:line="33" pos:column="38"/></name></expr>)<pos:position pos:line="33" pos:column="39"/></condition><then pos:line="33" pos:column="39"> <block pos:line="33" pos:column="40">{
		<decl_stmt><decl><type><name><name pos:line="34" pos:column="17">struct<pos:position pos:line="34" pos:column="23"/></name> <name pos:line="34" pos:column="24">diff_options<pos:position pos:line="34" pos:column="36"/></name></name></type> <name pos:line="34" pos:column="37">opts<pos:position pos:line="34" pos:column="41"/></name></decl>;<pos:position pos:line="34" pos:column="42"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">diff_setup<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><operator pos:line="35" pos:column="28">&amp;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="29">opts<pos:position pos:line="35" pos:column="33"/></name></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="36" pos:column="17">opts<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">.<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">stat_width<pos:position pos:line="36" pos:column="32"/></name></name> <operator pos:line="36" pos:column="33">=<pos:position pos:line="36" pos:column="34"/></operator> <operator pos:line="36" pos:column="35">-<pos:position pos:line="36" pos:column="36"/></operator><literal type="number" pos:line="36" pos:column="36">1<pos:position pos:line="36" pos:column="37"/></literal></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt> <comment type="block" pos:line="36" pos:column="39">/* use full terminal width */</comment>
		<expr_stmt><expr><name><name pos:line="37" pos:column="17">opts<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">.<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">stat_graph_width<pos:position pos:line="37" pos:column="38"/></name></name> <operator pos:line="37" pos:column="39">=<pos:position pos:line="37" pos:column="40"/></operator> <operator pos:line="37" pos:column="41">-<pos:position pos:line="37" pos:column="42"/></operator><literal type="number" pos:line="37" pos:column="42">1<pos:position pos:line="37" pos:column="43"/></literal></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt> <comment type="block" pos:line="37" pos:column="45">/* respect statGraphWidth config */</comment>
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">opts<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">.<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">output_format<pos:position pos:line="38" pos:column="35"/></name></name> <operator pos:line="38" pos:column="36">|=<pos:position pos:line="38" pos:column="38"/></operator>
			<name pos:line="39" pos:column="25">DIFF_FORMAT_SUMMARY<pos:position pos:line="39" pos:column="44"/></name> <operator pos:line="39" pos:column="45">|<pos:position pos:line="39" pos:column="46"/></operator> <name pos:line="39" pos:column="47">DIFF_FORMAT_DIFFSTAT<pos:position pos:line="39" pos:column="67"/></name></expr>;<pos:position pos:line="39" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="40" pos:column="17">opts<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">.<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">detect_rename<pos:position pos:line="40" pos:column="35"/></name></name> <operator pos:line="40" pos:column="36">=<pos:position pos:line="40" pos:column="37"/></operator> <name pos:line="40" pos:column="38">DIFF_DETECT_RENAME<pos:position pos:line="40" pos:column="56"/></name></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">diff_setup_done<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><operator pos:line="41" pos:column="33">&amp;<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="34">opts<pos:position pos:line="41" pos:column="38"/></name></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">diff_tree_sha1<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><name pos:line="42" pos:column="32">head<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="38">new_head<pos:position pos:line="42" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="48">""<pos:position pos:line="42" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="42" pos:column="52">&amp;<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="53">opts<pos:position pos:line="42" pos:column="57"/></name></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">diffcore_std<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><operator pos:line="43" pos:column="30">&amp;<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="31">opts<pos:position pos:line="43" pos:column="35"/></name></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">diff_flush<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><operator pos:line="44" pos:column="28">&amp;<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="29">opts<pos:position pos:line="44" pos:column="33"/></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="47" pos:column="9">/* Run a post-merge hook */</comment>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">run_hook_le<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name pos:line="48" pos:column="21">NULL<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="27">"post-merge"<pos:position pos:line="48" pos:column="39"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="48" pos:column="41">squash<pos:position pos:line="48" pos:column="47"/></name></expr> ?<pos:position pos:line="48" pos:column="49"/></condition><then pos:line="48" pos:column="49"> <expr><literal type="string" pos:line="48" pos:column="50">"1"<pos:position pos:line="48" pos:column="53"/></literal></expr> <pos:position pos:line="48" pos:column="54"/></then><else pos:line="48" pos:column="54">: <expr><literal type="string" pos:line="48" pos:column="56">"0"<pos:position pos:line="48" pos:column="59"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="48" pos:column="61">NULL<pos:position pos:line="48" pos:column="65"/></name></expr></argument>)<pos:position pos:line="48" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="67"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="50" pos:column="9">strbuf_release<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><operator pos:line="50" pos:column="24">&amp;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="25">reflog_message<pos:position pos:line="50" pos:column="39"/></name></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

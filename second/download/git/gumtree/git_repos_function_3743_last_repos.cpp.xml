<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3743_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">collect_changed_submodules_cb<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">diff_queue_struct<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">q<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
					  <parameter><decl><type><name><name pos:line="2" pos:column="43">struct<pos:position pos:line="2" pos:column="49"/></name> <name pos:line="2" pos:column="50">diff_options<pos:position pos:line="2" pos:column="62"/></name></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">options<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
					  <parameter><decl><type><name pos:line="3" pos:column="43">void<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">data<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="54"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">string_list<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">changed<pos:position pos:line="6" pos:column="36"/></name> <init pos:line="6" pos:column="37">= <expr><name pos:line="6" pos:column="39">data<pos:position pos:line="6" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr>;<pos:position pos:line="8" pos:column="20"/></init> <condition><expr><name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;<pos:position pos:line="8" pos:column="27"/></operator> <name><name pos:line="8" pos:column="25">q<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">nr<pos:position pos:line="8" pos:column="30"/></name></name></expr>;<pos:position pos:line="8" pos:column="31"/></condition> <incr><expr><name pos:line="8" pos:column="32">i<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">++<pos:position pos:line="8" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="36"/></control> <block pos:line="8" pos:column="37">{
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">diff_filepair<pos:position pos:line="9" pos:column="37"/></name></name> <modifier pos:line="9" pos:column="38">*<pos:position pos:line="9" pos:column="39"/></modifier></type><name pos:line="9" pos:column="39">p<pos:position pos:line="9" pos:column="40"/></name> <init pos:line="9" pos:column="41">= <expr><name><name pos:line="9" pos:column="43">q<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">-&gt;<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="46">queue<pos:position pos:line="9" pos:column="51"/></name><index pos:line="9" pos:column="51">[<expr><name pos:line="9" pos:column="52">i<pos:position pos:line="9" pos:column="53"/></name></expr>]<pos:position pos:line="9" pos:column="54"/></index></name></expr></init></decl>;<pos:position pos:line="9" pos:column="55"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="10" pos:column="17">struct<pos:position pos:line="10" pos:column="23"/></name> <name pos:line="10" pos:column="24">oid_array<pos:position pos:line="10" pos:column="33"/></name></name> <modifier pos:line="10" pos:column="34">*<pos:position pos:line="10" pos:column="35"/></modifier></type><name pos:line="10" pos:column="35">commits<pos:position pos:line="10" pos:column="42"/></name></decl>;<pos:position pos:line="10" pos:column="43"/></decl_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><call><name pos:line="11" pos:column="22">S_ISGITLINK<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name><name pos:line="11" pos:column="34">p<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">two<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-&gt;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="42">mode<pos:position pos:line="11" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="48"/></condition><then pos:line="11" pos:column="48">
			<block type="pseudo"><continue pos:line="12" pos:column="25">continue;<pos:position pos:line="12" pos:column="34"/></continue></block></then></if>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">S_ISGITLINK<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name><name pos:line="14" pos:column="33">p<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">one<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">-&gt;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="41">mode<pos:position pos:line="14" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="47"/></condition><then pos:line="14" pos:column="47"> <block pos:line="14" pos:column="48">{
			<comment type="block" pos:line="15" pos:column="25">/*
			 * NEEDSWORK: We should honor the name configured in
			 * the .gitmodules file of the commit we are examining
			 * here to be able to correctly follow submodules
			 * being moved around.
			 */</comment>
			<expr_stmt><expr><name pos:line="21" pos:column="25">commits<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">=<pos:position pos:line="21" pos:column="34"/></operator> <call><name pos:line="21" pos:column="35">submodule_commits<pos:position pos:line="21" pos:column="52"/></name><argument_list pos:line="21" pos:column="52">(<argument><expr><name pos:line="21" pos:column="53">changed<pos:position pos:line="21" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="62">p<pos:position pos:line="21" pos:column="63"/></name><operator pos:line="21" pos:column="63">-&gt;<pos:position pos:line="21" pos:column="68"/></operator><name pos:line="21" pos:column="65">two<pos:position pos:line="21" pos:column="68"/></name><operator pos:line="21" pos:column="68">-&gt;<pos:position pos:line="21" pos:column="73"/></operator><name pos:line="21" pos:column="70">path<pos:position pos:line="21" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">oid_array_append<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">(<argument><expr><name pos:line="22" pos:column="42">commits<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="51">&amp;<pos:position pos:line="22" pos:column="56"/></operator><name><name pos:line="22" pos:column="52">p<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">-&gt;<pos:position pos:line="22" pos:column="58"/></operator><name pos:line="22" pos:column="55">two<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">-&gt;<pos:position pos:line="22" pos:column="63"/></operator><name pos:line="22" pos:column="60">oid<pos:position pos:line="22" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></then> <else pos:line="23" pos:column="19">else <block pos:line="23" pos:column="24">{
			<comment type="block" pos:line="24" pos:column="25">/* Submodule is new or was moved here */</comment>
			<comment type="block" pos:line="25" pos:column="25">/*
			 * NEEDSWORK: When the .git directories of submodules
			 * live inside the superprojects .git directory some
			 * day we should fetch new submodules directly into
			 * that location too when config or options request
			 * that so they can be checked out from there.
			 */</comment>
			<continue pos:line="32" pos:column="25">continue;<pos:position pos:line="32" pos:column="34"/></continue>
		}<pos:position pos:line="33" pos:column="18"/></block></else></if>
	}<pos:position pos:line="34" pos:column="10"/></block></for>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

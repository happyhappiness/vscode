<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4643_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">NORETURN<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">die_no_merge_candidates<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">repo<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="64">const<pos:position pos:line="1" pos:column="69"/></specifier> <name pos:line="1" pos:column="70">char<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier><modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">refspecs<pos:position pos:line="1" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="86"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">branch<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">curr_branch<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><call><name pos:line="3" pos:column="38">branch_get<pos:position pos:line="3" pos:column="48"/></name><argument_list pos:line="3" pos:column="48">(<argument><expr><literal type="string" pos:line="3" pos:column="49">"HEAD"<pos:position pos:line="3" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">remote<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><ternary><condition><expr><name pos:line="4" pos:column="30">curr_branch<pos:position pos:line="4" pos:column="41"/></name></expr> ?<pos:position pos:line="4" pos:column="43"/></condition><then pos:line="4" pos:column="43"> <expr><name><name pos:line="4" pos:column="44">curr_branch<pos:position pos:line="4" pos:column="55"/></name><operator pos:line="4" pos:column="55">-&gt;<pos:position pos:line="4" pos:column="60"/></operator><name pos:line="4" pos:column="57">remote_name<pos:position pos:line="4" pos:column="68"/></name></name></expr> <pos:position pos:line="4" pos:column="69"/></then><else pos:line="4" pos:column="69">: <expr><name pos:line="4" pos:column="71">NULL<pos:position pos:line="4" pos:column="75"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="76"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">refspecs<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23"> <block pos:line="6" pos:column="24">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">opt_rebase<pos:position pos:line="7" pos:column="31"/></name></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="25">fprintf_ln<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">stderr<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="44">_<pos:position pos:line="8" pos:column="45"/></name><argument_list pos:line="8" pos:column="45">(<argument><expr><literal type="string" pos:line="8" pos:column="46">"There is no candidate for rebasing against among the refs that you just fetched."<pos:position pos:line="8" pos:column="128"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="129"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="131"/></expr_stmt></block></then>
		<else pos:line="9" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">fprintf_ln<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">stderr<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="44">_<pos:position pos:line="10" pos:column="45"/></name><argument_list pos:line="10" pos:column="45">(<argument><expr><literal type="string" pos:line="10" pos:column="46">"There are no candidates for merging among the refs that you just fetched."<pos:position pos:line="10" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="122"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="124"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">fprintf_ln<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">stderr<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="36">_<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><literal type="string" pos:line="11" pos:column="38">"Generally this means that you provided a wildcard refspec which had no\n"<pos:position pos:line="11" pos:column="112"/></literal>
					<literal type="string" pos:line="12" pos:column="41">"matches on the remote end."<pos:position pos:line="12" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then> <elseif pos:line="13" pos:column="11">else <if pos:line="13" pos:column="16">if <condition pos:line="13" pos:column="19">(<expr><name pos:line="13" pos:column="20">repo<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">&amp;&amp;<pos:position pos:line="13" pos:column="35"/></operator> <name pos:line="13" pos:column="28">curr_branch<pos:position pos:line="13" pos:column="39"/></name> <operator pos:line="13" pos:column="40">&amp;&amp;<pos:position pos:line="13" pos:column="50"/></operator> <operator pos:line="13" pos:column="43">(<pos:position pos:line="13" pos:column="44"/></operator><operator pos:line="13" pos:column="44">!<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="45">remote<pos:position pos:line="13" pos:column="51"/></name> <operator pos:line="13" pos:column="52">||<pos:position pos:line="13" pos:column="54"/></operator> <call><name pos:line="13" pos:column="55">strcmp<pos:position pos:line="13" pos:column="61"/></name><argument_list pos:line="13" pos:column="61">(<argument><expr><name pos:line="13" pos:column="62">repo<pos:position pos:line="13" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="68">remote<pos:position pos:line="13" pos:column="74"/></name></expr></argument>)<pos:position pos:line="13" pos:column="75"/></argument_list></call><operator pos:line="13" pos:column="75">)<pos:position pos:line="13" pos:column="76"/></operator></expr>)<pos:position pos:line="13" pos:column="77"/></condition><then pos:line="13" pos:column="77"> <block pos:line="13" pos:column="78">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">fprintf_ln<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">stderr<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="36">_<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><literal type="string" pos:line="14" pos:column="38">"You asked to pull from the remote '%s', but did not specify\n"<pos:position pos:line="14" pos:column="101"/></literal>
			<literal type="string" pos:line="15" pos:column="25">"a branch. Because this is not the default configured remote\n"<pos:position pos:line="15" pos:column="88"/></literal>
			<literal type="string" pos:line="16" pos:column="25">"for your current branch, you must specify a branch on the command line."<pos:position pos:line="16" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="99"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="17" pos:column="25">repo<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if></elseif> <elseif pos:line="18" pos:column="11">else <if pos:line="18" pos:column="16">if <condition pos:line="18" pos:column="19">(<expr><operator pos:line="18" pos:column="20">!<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">curr_branch<pos:position pos:line="18" pos:column="32"/></name></expr>)<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33"> <block pos:line="18" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">fprintf_ln<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">stderr<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="36">_<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><literal type="string" pos:line="19" pos:column="38">"You are not currently on a branch."<pos:position pos:line="19" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="77"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">opt_rebase<pos:position pos:line="20" pos:column="31"/></name></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">fprintf_ln<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">stderr<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="44">_<pos:position pos:line="21" pos:column="45"/></name><argument_list pos:line="21" pos:column="45">(<argument><expr><literal type="string" pos:line="21" pos:column="46">"Please specify which branch you want to rebase against."<pos:position pos:line="21" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="106"/></expr_stmt></block></then>
		<else pos:line="22" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">fprintf_ln<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">stderr<pos:position pos:line="23" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="44">_<pos:position pos:line="23" pos:column="45"/></name><argument_list pos:line="23" pos:column="45">(<argument><expr><literal type="string" pos:line="23" pos:column="46">"Please specify which branch you want to merge with."<pos:position pos:line="23" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="102"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">fprintf_ln<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">stderr<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="36">_<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><literal type="string" pos:line="24" pos:column="38">"See git-pull(1) for details."<pos:position pos:line="24" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">fprintf<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">stderr<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="33">"\n"<pos:position pos:line="25" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">fprintf_ln<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">stderr<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="36">"    git pull %s %s"<pos:position pos:line="26" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="58">_<pos:position pos:line="26" pos:column="59"/></name><argument_list pos:line="26" pos:column="59">(<argument><expr><literal type="string" pos:line="26" pos:column="60">"&lt;remote&gt;"<pos:position pos:line="26" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="73">_<pos:position pos:line="26" pos:column="74"/></name><argument_list pos:line="26" pos:column="74">(<argument><expr><literal type="string" pos:line="26" pos:column="75">"&lt;branch&gt;"<pos:position pos:line="26" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="88"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">fprintf<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">stderr<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="33">"\n"<pos:position pos:line="27" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if></elseif> <elseif pos:line="28" pos:column="11">else <if pos:line="28" pos:column="16">if <condition pos:line="28" pos:column="19">(<expr><operator pos:line="28" pos:column="20">!<pos:position pos:line="28" pos:column="21"/></operator><name><name pos:line="28" pos:column="21">curr_branch<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">merge_nr<pos:position pos:line="28" pos:column="42"/></name></name></expr>)<pos:position pos:line="28" pos:column="43"/></condition><then pos:line="28" pos:column="43"> <block pos:line="28" pos:column="44">{
		<decl_stmt><decl><type><specifier pos:line="29" pos:column="17">const<pos:position pos:line="29" pos:column="22"/></specifier> <name pos:line="29" pos:column="23">char<pos:position pos:line="29" pos:column="27"/></name> <modifier pos:line="29" pos:column="28">*<pos:position pos:line="29" pos:column="29"/></modifier></type><name pos:line="29" pos:column="29">remote_name<pos:position pos:line="29" pos:column="40"/></name> <init pos:line="29" pos:column="41">= <expr><name pos:line="29" pos:column="43">NULL<pos:position pos:line="29" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="48"/></decl_stmt>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">for_each_remote<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name pos:line="31" pos:column="37">get_only_remote<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="54">&amp;<pos:position pos:line="31" pos:column="59"/></operator><name pos:line="31" pos:column="55">remote_name<pos:position pos:line="31" pos:column="66"/></name></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call> <operator pos:line="31" pos:column="68">||<pos:position pos:line="31" pos:column="70"/></operator> <operator pos:line="31" pos:column="71">!<pos:position pos:line="31" pos:column="72"/></operator><name pos:line="31" pos:column="72">remote_name<pos:position pos:line="31" pos:column="83"/></name></expr>)<pos:position pos:line="31" pos:column="84"/></condition><then pos:line="31" pos:column="84">
			<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="25">remote_name<pos:position pos:line="32" pos:column="36"/></name> <operator pos:line="32" pos:column="37">=<pos:position pos:line="32" pos:column="38"/></operator> <call><name pos:line="32" pos:column="39">_<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><literal type="string" pos:line="32" pos:column="41">"&lt;remote&gt;"<pos:position pos:line="32" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="34" pos:column="17">fprintf_ln<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">stderr<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="36">_<pos:position pos:line="34" pos:column="37"/></name><argument_list pos:line="34" pos:column="37">(<argument><expr><literal type="string" pos:line="34" pos:column="38">"There is no tracking information for the current branch."<pos:position pos:line="34" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="99"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">opt_rebase<pos:position pos:line="35" pos:column="31"/></name></expr>)<pos:position pos:line="35" pos:column="32"/></condition><then pos:line="35" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="25">fprintf_ln<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><name pos:line="36" pos:column="36">stderr<pos:position pos:line="36" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="44">_<pos:position pos:line="36" pos:column="45"/></name><argument_list pos:line="36" pos:column="45">(<argument><expr><literal type="string" pos:line="36" pos:column="46">"Please specify which branch you want to rebase against."<pos:position pos:line="36" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="106"/></expr_stmt></block></then>
		<else pos:line="37" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="25">fprintf_ln<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><name pos:line="38" pos:column="36">stderr<pos:position pos:line="38" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="44">_<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">(<argument><expr><literal type="string" pos:line="38" pos:column="46">"Please specify which branch you want to merge with."<pos:position pos:line="38" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="102"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">fprintf_ln<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">stderr<pos:position pos:line="39" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="36">_<pos:position pos:line="39" pos:column="37"/></name><argument_list pos:line="39" pos:column="37">(<argument><expr><literal type="string" pos:line="39" pos:column="38">"See git-pull(1) for details."<pos:position pos:line="39" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">fprintf<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">stderr<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="33">"\n"<pos:position pos:line="40" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">fprintf_ln<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">stderr<pos:position pos:line="41" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="36">"    git pull %s %s"<pos:position pos:line="41" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="58">_<pos:position pos:line="41" pos:column="59"/></name><argument_list pos:line="41" pos:column="59">(<argument><expr><literal type="string" pos:line="41" pos:column="60">"&lt;remote&gt;"<pos:position pos:line="41" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="73">_<pos:position pos:line="41" pos:column="74"/></name><argument_list pos:line="41" pos:column="74">(<argument><expr><literal type="string" pos:line="41" pos:column="75">"&lt;branch&gt;"<pos:position pos:line="41" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="88"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">fprintf<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">stderr<pos:position pos:line="42" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="33">"\n"<pos:position pos:line="42" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">fprintf_ln<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><name pos:line="43" pos:column="28">stderr<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="36">_<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><literal type="string" pos:line="43" pos:column="38">"If you wish to set tracking information for this branch you can do so with:"<pos:position pos:line="43" pos:column="115"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="116"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="118"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">fprintf<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name pos:line="44" pos:column="25">stderr<pos:position pos:line="44" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="33">"\n"<pos:position pos:line="44" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">fprintf_ln<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><name pos:line="45" pos:column="28">stderr<pos:position pos:line="45" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="36">"    git branch --set-upstream-to=%s/%s %s\n"<pos:position pos:line="45" pos:column="81"/></literal></expr></argument>,
				<argument><expr><name pos:line="46" pos:column="33">remote_name<pos:position pos:line="46" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="46">_<pos:position pos:line="46" pos:column="47"/></name><argument_list pos:line="46" pos:column="47">(<argument><expr><literal type="string" pos:line="46" pos:column="48">"&lt;branch&gt;"<pos:position pos:line="46" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="61">curr_branch<pos:position pos:line="46" pos:column="72"/></name><operator pos:line="46" pos:column="72">-&gt;<pos:position pos:line="46" pos:column="77"/></operator><name pos:line="46" pos:column="74">name<pos:position pos:line="46" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="80"/></expr_stmt>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if></elseif> <else pos:line="47" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="17">fprintf_ln<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><name pos:line="48" pos:column="28">stderr<pos:position pos:line="48" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="36">_<pos:position pos:line="48" pos:column="37"/></name><argument_list pos:line="48" pos:column="37">(<argument><expr><literal type="string" pos:line="48" pos:column="38">"Your configuration specifies to merge with the ref '%s'\n"<pos:position pos:line="48" pos:column="97"/></literal>
			<literal type="string" pos:line="49" pos:column="25">"from the remote, but no such ref was fetched."<pos:position pos:line="49" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="73"/></argument_list></call></expr></argument>,
			<argument><expr><operator pos:line="50" pos:column="25">*<pos:position pos:line="50" pos:column="26"/></operator><name><name pos:line="50" pos:column="26">curr_branch<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">-&gt;<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="39">merge_name<pos:position pos:line="50" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="51"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">exit<pos:position pos:line="51" pos:column="13"/></name><argument_list pos:line="51" pos:column="13">(<argument><expr><literal type="number" pos:line="51" pos:column="14">1<pos:position pos:line="51" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="17"/></expr_stmt>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

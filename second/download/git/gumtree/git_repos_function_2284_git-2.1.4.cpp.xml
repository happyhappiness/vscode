<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2284_git-2.1.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">oneway_merge<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><specifier pos:line="1" pos:column="18">const<pos:position pos:line="1" pos:column="23"/></specifier> <name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">cache_entry<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier> <specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">src<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
		 <parameter><decl><type><name><name pos:line="2" pos:column="18">struct<pos:position pos:line="2" pos:column="24"/></name> <name pos:line="2" pos:column="25">unpack_trees_options<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">o<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name><name pos:line="4" pos:column="15">struct<pos:position pos:line="4" pos:column="21"/></name> <name pos:line="4" pos:column="22">cache_entry<pos:position pos:line="4" pos:column="33"/></name></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">old<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><name><name pos:line="4" pos:column="41">src<pos:position pos:line="4" pos:column="44"/></name><index pos:line="4" pos:column="44">[<expr><literal type="number" pos:line="4" pos:column="45">0<pos:position pos:line="4" pos:column="46"/></literal></expr>]<pos:position pos:line="4" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name><name pos:line="5" pos:column="15">struct<pos:position pos:line="5" pos:column="21"/></name> <name pos:line="5" pos:column="22">cache_entry<pos:position pos:line="5" pos:column="33"/></name></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">a<pos:position pos:line="5" pos:column="36"/></name> <init pos:line="5" pos:column="37">= <expr><name><name pos:line="5" pos:column="39">src<pos:position pos:line="5" pos:column="42"/></name><index pos:line="5" pos:column="42">[<expr><literal type="number" pos:line="5" pos:column="43">1<pos:position pos:line="5" pos:column="44"/></literal></expr>]<pos:position pos:line="5" pos:column="45"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">o<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">merge_size<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">!=<pos:position pos:line="7" pos:column="29"/></operator> <literal type="number" pos:line="7" pos:column="30">1<pos:position pos:line="7" pos:column="31"/></literal></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><call><name pos:line="8" pos:column="24">error<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><literal type="string" pos:line="8" pos:column="30">"Cannot do a oneway merge of %d trees"<pos:position pos:line="8" pos:column="68"/></literal></expr></argument>,
			     <argument><expr><name><name pos:line="9" pos:column="30">o<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">merge_size<pos:position pos:line="9" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">a<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">||<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">a<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">==<pos:position pos:line="11" pos:column="23"/></operator> <name><name pos:line="11" pos:column="24">o<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">df_conflict_entry<pos:position pos:line="11" pos:column="44"/></name></name></expr>)<pos:position pos:line="11" pos:column="45"/></condition><then pos:line="11" pos:column="45">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><call><name pos:line="12" pos:column="24">deleted_entry<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">old<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">old<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">o<pos:position pos:line="12" pos:column="49"/></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></return></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">old<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&amp;&amp;<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="20">same<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">old<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="30">a<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33"> <block pos:line="14" pos:column="34">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">int<pos:position pos:line="15" pos:column="20"/></name></type> <name pos:line="15" pos:column="21">update<pos:position pos:line="15" pos:column="27"/></name> <init pos:line="15" pos:column="28">= <expr><literal type="number" pos:line="15" pos:column="30">0<pos:position pos:line="15" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="32"/></decl_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">o<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">reset<pos:position pos:line="16" pos:column="29"/></name></name> <operator pos:line="16" pos:column="30">&amp;&amp;<pos:position pos:line="16" pos:column="40"/></operator> <name><name pos:line="16" pos:column="33">o<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">-&gt;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="36">update<pos:position pos:line="16" pos:column="42"/></name></name> <operator pos:line="16" pos:column="43">&amp;&amp;<pos:position pos:line="16" pos:column="53"/></operator> <operator pos:line="16" pos:column="46">!<pos:position pos:line="16" pos:column="47"/></operator><call><name pos:line="16" pos:column="47">ce_uptodate<pos:position pos:line="16" pos:column="58"/></name><argument_list pos:line="16" pos:column="58">(<argument><expr><name pos:line="16" pos:column="59">old<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call> <operator pos:line="16" pos:column="64">&amp;&amp;<pos:position pos:line="16" pos:column="74"/></operator> <operator pos:line="16" pos:column="67">!<pos:position pos:line="16" pos:column="68"/></operator><call><name pos:line="16" pos:column="68">ce_skip_worktree<pos:position pos:line="16" pos:column="84"/></name><argument_list pos:line="16" pos:column="84">(<argument><expr><name pos:line="16" pos:column="85">old<pos:position pos:line="16" pos:column="88"/></name></expr></argument>)<pos:position pos:line="16" pos:column="89"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="90"/></condition><then pos:line="16" pos:column="90"> <block pos:line="16" pos:column="91">{
			<decl_stmt><decl><type><name><name pos:line="17" pos:column="25">struct<pos:position pos:line="17" pos:column="31"/></name> <name pos:line="17" pos:column="32">stat<pos:position pos:line="17" pos:column="36"/></name></name></type> <name pos:line="17" pos:column="37">st<pos:position pos:line="17" pos:column="39"/></name></decl>;<pos:position pos:line="17" pos:column="40"/></decl_stmt>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><call><name pos:line="18" pos:column="29">lstat<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><name><name pos:line="18" pos:column="35">old<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">name<pos:position pos:line="18" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="46">&amp;<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="47">st<pos:position pos:line="18" pos:column="49"/></name></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call> <operator pos:line="18" pos:column="51">||<pos:position pos:line="18" pos:column="53"/></operator>
			    <call><name pos:line="19" pos:column="29">ie_match_stat<pos:position pos:line="19" pos:column="42"/></name><argument_list pos:line="19" pos:column="42">(<argument><expr><name><name pos:line="19" pos:column="43">o<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">-&gt;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="46">src_index<pos:position pos:line="19" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="57">old<pos:position pos:line="19" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="62">&amp;<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="63">st<pos:position pos:line="19" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="67">CE_MATCH_IGNORE_VALID<pos:position pos:line="19" pos:column="88"/></name><operator pos:line="19" pos:column="88">|<pos:position pos:line="19" pos:column="89"/></operator><name pos:line="19" pos:column="89">CE_MATCH_IGNORE_SKIP_WORKTREE<pos:position pos:line="19" pos:column="118"/></name></expr></argument>)<pos:position pos:line="19" pos:column="119"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="120"/></condition><then pos:line="19" pos:column="120">
				<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="33">update<pos:position pos:line="20" pos:column="39"/></name> <operator pos:line="20" pos:column="40">|=<pos:position pos:line="20" pos:column="42"/></operator> <name pos:line="20" pos:column="43">CE_UPDATE<pos:position pos:line="20" pos:column="52"/></name></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt></block></then></if>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">add_entry<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">o<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="30">old<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="35">update<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="43">0<pos:position pos:line="22" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>
	<return pos:line="25" pos:column="9">return <expr><call><name pos:line="25" pos:column="16">merged_entry<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">a<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">old<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="37">o<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

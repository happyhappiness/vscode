<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2467_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">trim_trailing_spaces<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">buf<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">p<pos:position pos:line="3" pos:column="16"/></name></decl>, <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="19">last_space<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name pos:line="3" pos:column="32">NULL<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">p<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">buf<pos:position pos:line="5" pos:column="21"/></name></expr>;<pos:position pos:line="5" pos:column="22"/></init> <condition><expr><operator pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">p<pos:position pos:line="5" pos:column="25"/></name></expr>;<pos:position pos:line="5" pos:column="26"/></condition> <incr><expr><name pos:line="5" pos:column="27">p<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">++<pos:position pos:line="5" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="31"/></control>
		<block type="pseudo"><switch pos:line="6" pos:column="17">switch <condition pos:line="6" pos:column="24">(<expr><operator pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">p<pos:position pos:line="6" pos:column="27"/></name></expr>)<pos:position pos:line="6" pos:column="28"/></condition> <block pos:line="6" pos:column="29">{
		<case pos:line="7" pos:column="17">case <expr><literal type="char" pos:line="7" pos:column="22">' '<pos:position pos:line="7" pos:column="25"/></literal></expr>:<pos:position pos:line="7" pos:column="26"/></case>
			<if pos:line="8" pos:column="25">if <condition pos:line="8" pos:column="28">(<expr><operator pos:line="8" pos:column="29">!<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">last_space<pos:position pos:line="8" pos:column="40"/></name></expr>)<pos:position pos:line="8" pos:column="41"/></condition><then pos:line="8" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="33">last_space<pos:position pos:line="9" pos:column="43"/></name> <operator pos:line="9" pos:column="44">=<pos:position pos:line="9" pos:column="45"/></operator> <name pos:line="9" pos:column="46">p<pos:position pos:line="9" pos:column="47"/></name></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt></block></then></if>
			<break pos:line="10" pos:column="25">break;<pos:position pos:line="10" pos:column="31"/></break>
		<case pos:line="11" pos:column="17">case <expr><literal type="char" pos:line="11" pos:column="22">'\\'<pos:position pos:line="11" pos:column="26"/></literal></expr>:<pos:position pos:line="11" pos:column="27"/></case>
			<expr_stmt><expr><name pos:line="12" pos:column="25">p<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">++<pos:position pos:line="12" pos:column="28"/></operator></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><operator pos:line="13" pos:column="29">!<pos:position pos:line="13" pos:column="30"/></operator><operator pos:line="13" pos:column="30">*<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">p<pos:position pos:line="13" pos:column="32"/></name></expr>)<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33">
				<block type="pseudo"><return pos:line="14" pos:column="33">return;<pos:position pos:line="14" pos:column="40"/></return></block></then></if>
			<comment type="block" pos:line="15" pos:column="25">/* fallthrough */</comment>
		<default pos:line="16" pos:column="17">default:<pos:position pos:line="16" pos:column="25"/></default>
			<expr_stmt><expr><name pos:line="17" pos:column="25">last_space<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">=<pos:position pos:line="17" pos:column="37"/></operator> <name pos:line="17" pos:column="38">NULL<pos:position pos:line="17" pos:column="42"/></name></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></switch></block></for>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">last_space<pos:position pos:line="20" pos:column="23"/></name></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="21" pos:column="17">*<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">last_space<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">=<pos:position pos:line="21" pos:column="30"/></operator> <literal type="char" pos:line="21" pos:column="31">'\0'<pos:position pos:line="21" pos:column="35"/></literal></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt></block></then></if>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

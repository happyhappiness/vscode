<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_806_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ustar_header_chksum<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">ustar_header<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">header<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">unsigned<pos:position pos:line="3" pos:column="23"/></name> <name pos:line="3" pos:column="24">char<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">p<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><operator pos:line="3" pos:column="34">(<pos:position pos:line="3" pos:column="35"/></operator><specifier pos:line="3" pos:column="35">const<pos:position pos:line="3" pos:column="40"/></specifier> <name pos:line="3" pos:column="41">unsigned<pos:position pos:line="3" pos:column="49"/></name> <name pos:line="3" pos:column="50">char<pos:position pos:line="3" pos:column="54"/></name> <operator pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></operator><operator pos:line="3" pos:column="56">)<pos:position pos:line="3" pos:column="57"/></operator><name pos:line="3" pos:column="57">header<pos:position pos:line="3" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="64"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">chksum<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><literal type="number" pos:line="4" pos:column="31">0<pos:position pos:line="4" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">p<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">&lt;<pos:position pos:line="5" pos:column="22"/></operator> <operator pos:line="5" pos:column="20">(<pos:position pos:line="5" pos:column="21"/></operator><specifier pos:line="5" pos:column="21">const<pos:position pos:line="5" pos:column="26"/></specifier> <name pos:line="5" pos:column="27">unsigned<pos:position pos:line="5" pos:column="35"/></name> <name pos:line="5" pos:column="36">char<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">*<pos:position pos:line="5" pos:column="42"/></operator><operator pos:line="5" pos:column="42">)<pos:position pos:line="5" pos:column="43"/></operator><name><name pos:line="5" pos:column="43">header<pos:position pos:line="5" pos:column="49"/></name><operator pos:line="5" pos:column="49">-&gt;<pos:position pos:line="5" pos:column="54"/></operator><name pos:line="5" pos:column="51">chksum<pos:position pos:line="5" pos:column="57"/></name></name></expr>)<pos:position pos:line="5" pos:column="58"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">chksum<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">+=<pos:position pos:line="6" pos:column="26"/></operator> <operator pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">p<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">++<pos:position pos:line="6" pos:column="31"/></operator></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt></block></while>
	<expr_stmt><expr><name pos:line="7" pos:column="9">chksum<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">+=<pos:position pos:line="7" pos:column="18"/></operator> <sizeof pos:line="7" pos:column="19">sizeof<argument_list pos:line="7" pos:column="25">(<argument><expr><name><name pos:line="7" pos:column="26">header<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">chksum<pos:position pos:line="7" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></sizeof> <operator pos:line="7" pos:column="42">*<pos:position pos:line="7" pos:column="43"/></operator> <literal type="char" pos:line="7" pos:column="44">' '<pos:position pos:line="7" pos:column="47"/></literal></expr>;<pos:position pos:line="7" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">p<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">+=<pos:position pos:line="8" pos:column="13"/></operator> <sizeof pos:line="8" pos:column="14">sizeof<argument_list pos:line="8" pos:column="20">(<argument><expr><name><name pos:line="8" pos:column="21">header<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">chksum<pos:position pos:line="8" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></sizeof></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><name pos:line="9" pos:column="16">p<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">&lt;<pos:position pos:line="9" pos:column="22"/></operator> <operator pos:line="9" pos:column="20">(<pos:position pos:line="9" pos:column="21"/></operator><specifier pos:line="9" pos:column="21">const<pos:position pos:line="9" pos:column="26"/></specifier> <name pos:line="9" pos:column="27">unsigned<pos:position pos:line="9" pos:column="35"/></name> <name pos:line="9" pos:column="36">char<pos:position pos:line="9" pos:column="40"/></name> <operator pos:line="9" pos:column="41">*<pos:position pos:line="9" pos:column="42"/></operator><operator pos:line="9" pos:column="42">)<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="43">header<pos:position pos:line="9" pos:column="49"/></name> <operator pos:line="9" pos:column="50">+<pos:position pos:line="9" pos:column="51"/></operator> <sizeof pos:line="9" pos:column="52">sizeof<argument_list pos:line="9" pos:column="58">(<argument><expr pos:line="9" pos:column="59">struct <name pos:line="9" pos:column="66">ustar_header<pos:position pos:line="9" pos:column="78"/></name></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></sizeof></expr>)<pos:position pos:line="9" pos:column="80"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">chksum<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">+=<pos:position pos:line="10" pos:column="26"/></operator> <operator pos:line="10" pos:column="27">*<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">p<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">++<pos:position pos:line="10" pos:column="31"/></operator></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt></block></while>
	<return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">chksum<pos:position pos:line="11" pos:column="22"/></name></expr>;<pos:position pos:line="11" pos:column="23"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

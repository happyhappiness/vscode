<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3613_git-2.11.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">graph_output_pre_commit_line<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">git_graph<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">graph<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
					 <parameter><decl><type><name><name pos:line="2" pos:column="42">struct<pos:position pos:line="2" pos:column="48"/></name> <name pos:line="2" pos:column="49">strbuf<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">sb<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">num_expansion_rows<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">seen_this<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">chars_written<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/*
	 * This function formats a row that increases the space around a commit
	 * with multiple parents, to make room for it.  It should only be
	 * called when there are 3 or more parents.
	 *
	 * We need 2 extra rows for every parent over 2.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">assert<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name><name pos:line="15" pos:column="16">graph<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">num_parents<pos:position pos:line="15" pos:column="34"/></name></name> <operator pos:line="15" pos:column="35">&gt;=<pos:position pos:line="15" pos:column="40"/></operator> <literal type="number" pos:line="15" pos:column="38">3<pos:position pos:line="15" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">num_expansion_rows<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <operator pos:line="16" pos:column="30">(<pos:position pos:line="16" pos:column="31"/></operator><name><name pos:line="16" pos:column="31">graph<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">num_parents<pos:position pos:line="16" pos:column="49"/></name></name> <operator pos:line="16" pos:column="50">-<pos:position pos:line="16" pos:column="51"/></operator> <literal type="number" pos:line="16" pos:column="52">2<pos:position pos:line="16" pos:column="53"/></literal><operator pos:line="16" pos:column="53">)<pos:position pos:line="16" pos:column="54"/></operator> <operator pos:line="16" pos:column="55">*<pos:position pos:line="16" pos:column="56"/></operator> <literal type="number" pos:line="16" pos:column="57">2<pos:position pos:line="16" pos:column="58"/></literal></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>

	<comment type="block" pos:line="18" pos:column="9">/*
	 * graph-&gt;expansion_row tracks the current expansion row we are on.
	 * It should be in the range [0, num_expansion_rows - 1]
	 */</comment>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">assert<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal> <operator pos:line="22" pos:column="18">&lt;=<pos:position pos:line="22" pos:column="23"/></operator> <name><name pos:line="22" pos:column="21">graph<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">-&gt;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="28">expansion_row<pos:position pos:line="22" pos:column="41"/></name></name> <operator pos:line="22" pos:column="42">&amp;&amp;<pos:position pos:line="22" pos:column="52"/></operator>
	       <name><name pos:line="23" pos:column="16">graph<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">expansion_row<pos:position pos:line="23" pos:column="36"/></name></name> <operator pos:line="23" pos:column="37">&lt;<pos:position pos:line="23" pos:column="41"/></operator> <name pos:line="23" pos:column="39">num_expansion_rows<pos:position pos:line="23" pos:column="57"/></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>

	<comment type="block" pos:line="25" pos:column="9">/*
	 * Output the row
	 */</comment>
	<expr_stmt><expr><name pos:line="28" pos:column="9">seen_this<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <literal type="number" pos:line="28" pos:column="21">0<pos:position pos:line="28" pos:column="22"/></literal></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="29" pos:column="9">chars_written<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">=<pos:position pos:line="29" pos:column="24"/></operator> <literal type="number" pos:line="29" pos:column="25">0<pos:position pos:line="29" pos:column="26"/></literal></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
	<for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">i<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></init> <condition><expr><name pos:line="30" pos:column="21">i<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">&lt;<pos:position pos:line="30" pos:column="27"/></operator> <name><name pos:line="30" pos:column="25">graph<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">-&gt;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="32">num_columns<pos:position pos:line="30" pos:column="43"/></name></name></expr>;<pos:position pos:line="30" pos:column="44"/></condition> <incr><expr><name pos:line="30" pos:column="45">i<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">++<pos:position pos:line="30" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="49"/></control> <block pos:line="30" pos:column="50">{
		<decl_stmt><decl><type><name><name pos:line="31" pos:column="17">struct<pos:position pos:line="31" pos:column="23"/></name> <name pos:line="31" pos:column="24">column<pos:position pos:line="31" pos:column="30"/></name></name> <modifier pos:line="31" pos:column="31">*<pos:position pos:line="31" pos:column="32"/></modifier></type><name pos:line="31" pos:column="32">col<pos:position pos:line="31" pos:column="35"/></name> <init pos:line="31" pos:column="36">= <expr><operator pos:line="31" pos:column="38">&amp;<pos:position pos:line="31" pos:column="43"/></operator><name><name pos:line="31" pos:column="39">graph<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">-&gt;<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="46">columns<pos:position pos:line="31" pos:column="53"/></name><index pos:line="31" pos:column="53">[<expr><name pos:line="31" pos:column="54">i<pos:position pos:line="31" pos:column="55"/></name></expr>]<pos:position pos:line="31" pos:column="56"/></index></name></expr></init></decl>;<pos:position pos:line="31" pos:column="57"/></decl_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name><name pos:line="32" pos:column="21">col<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">commit<pos:position pos:line="32" pos:column="32"/></name></name> <operator pos:line="32" pos:column="33">==<pos:position pos:line="32" pos:column="35"/></operator> <name><name pos:line="32" pos:column="36">graph<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">-&gt;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="43">commit<pos:position pos:line="32" pos:column="49"/></name></name></expr>)<pos:position pos:line="32" pos:column="50"/></condition><then pos:line="32" pos:column="50"> <block pos:line="32" pos:column="51">{
			<expr_stmt><expr><name pos:line="33" pos:column="25">seen_this<pos:position pos:line="33" pos:column="34"/></name> <operator pos:line="33" pos:column="35">=<pos:position pos:line="33" pos:column="36"/></operator> <literal type="number" pos:line="33" pos:column="37">1<pos:position pos:line="33" pos:column="38"/></literal></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">strbuf_write_column<pos:position pos:line="34" pos:column="44"/></name><argument_list pos:line="34" pos:column="44">(<argument><expr><name pos:line="34" pos:column="45">sb<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">col<pos:position pos:line="34" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="34" pos:column="54">'|'<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">strbuf_addf<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">sb<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="41">"%*s"<pos:position pos:line="35" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="48">graph<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">-&gt;<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="55">expansion_row<pos:position pos:line="35" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="70">""<pos:position pos:line="35" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><name pos:line="36" pos:column="25">chars_written<pos:position pos:line="36" pos:column="38"/></name> <operator pos:line="36" pos:column="39">+=<pos:position pos:line="36" pos:column="41"/></operator> <literal type="number" pos:line="36" pos:column="42">1<pos:position pos:line="36" pos:column="43"/></literal> <operator pos:line="36" pos:column="44">+<pos:position pos:line="36" pos:column="45"/></operator> <name><name pos:line="36" pos:column="46">graph<pos:position pos:line="36" pos:column="51"/></name><operator pos:line="36" pos:column="51">-&gt;<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="53">expansion_row<pos:position pos:line="36" pos:column="66"/></name></name></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></then> <elseif pos:line="37" pos:column="19">else <if pos:line="37" pos:column="24">if <condition pos:line="37" pos:column="27">(<expr><name pos:line="37" pos:column="28">seen_this<pos:position pos:line="37" pos:column="37"/></name> <operator pos:line="37" pos:column="38">&amp;&amp;<pos:position pos:line="37" pos:column="48"/></operator> <operator pos:line="37" pos:column="41">(<pos:position pos:line="37" pos:column="42"/></operator><name><name pos:line="37" pos:column="42">graph<pos:position pos:line="37" pos:column="47"/></name><operator pos:line="37" pos:column="47">-&gt;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="49">expansion_row<pos:position pos:line="37" pos:column="62"/></name></name> <operator pos:line="37" pos:column="63">==<pos:position pos:line="37" pos:column="65"/></operator> <literal type="number" pos:line="37" pos:column="66">0<pos:position pos:line="37" pos:column="67"/></literal><operator pos:line="37" pos:column="67">)<pos:position pos:line="37" pos:column="68"/></operator></expr>)<pos:position pos:line="37" pos:column="69"/></condition><then pos:line="37" pos:column="69"> <block pos:line="37" pos:column="70">{
			<comment type="block" pos:line="38" pos:column="25">/*
			 * This is the first line of the pre-commit output.
			 * If the previous commit was a merge commit and
			 * ended in the GRAPH_POST_MERGE state, all branch
			 * lines after graph-&gt;prev_commit_index were
			 * printed as "\" on the previous line.  Continue
			 * to print them as "\" on this line.  Otherwise,
			 * print the branch lines as "|".
			 */</comment>
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><name><name pos:line="47" pos:column="29">graph<pos:position pos:line="47" pos:column="34"/></name><operator pos:line="47" pos:column="34">-&gt;<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="36">prev_state<pos:position pos:line="47" pos:column="46"/></name></name> <operator pos:line="47" pos:column="47">==<pos:position pos:line="47" pos:column="49"/></operator> <name pos:line="47" pos:column="50">GRAPH_POST_MERGE<pos:position pos:line="47" pos:column="66"/></name> <operator pos:line="47" pos:column="67">&amp;&amp;<pos:position pos:line="47" pos:column="77"/></operator>
			    <name><name pos:line="48" pos:column="29">graph<pos:position pos:line="48" pos:column="34"/></name><operator pos:line="48" pos:column="34">-&gt;<pos:position pos:line="48" pos:column="39"/></operator><name pos:line="48" pos:column="36">prev_commit_index<pos:position pos:line="48" pos:column="53"/></name></name> <operator pos:line="48" pos:column="54">&lt;<pos:position pos:line="48" pos:column="58"/></operator> <name pos:line="48" pos:column="56">i<pos:position pos:line="48" pos:column="57"/></name></expr>)<pos:position pos:line="48" pos:column="58"/></condition><then pos:line="48" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="33">strbuf_write_column<pos:position pos:line="49" pos:column="52"/></name><argument_list pos:line="49" pos:column="52">(<argument><expr><name pos:line="49" pos:column="53">sb<pos:position pos:line="49" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="57">col<pos:position pos:line="49" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="49" pos:column="62">'\\'<pos:position pos:line="49" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="68"/></expr_stmt></block></then>
			<else pos:line="50" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="33">strbuf_write_column<pos:position pos:line="51" pos:column="52"/></name><argument_list pos:line="51" pos:column="52">(<argument><expr><name pos:line="51" pos:column="53">sb<pos:position pos:line="51" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="57">col<pos:position pos:line="51" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="51" pos:column="62">'|'<pos:position pos:line="51" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="67"/></expr_stmt></block></else></if>
			<expr_stmt><expr><name pos:line="52" pos:column="25">chars_written<pos:position pos:line="52" pos:column="38"/></name><operator pos:line="52" pos:column="38">++<pos:position pos:line="52" pos:column="40"/></operator></expr>;<pos:position pos:line="52" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if></elseif> <elseif pos:line="53" pos:column="19">else <if pos:line="53" pos:column="24">if <condition pos:line="53" pos:column="27">(<expr><name pos:line="53" pos:column="28">seen_this<pos:position pos:line="53" pos:column="37"/></name> <operator pos:line="53" pos:column="38">&amp;&amp;<pos:position pos:line="53" pos:column="48"/></operator> <operator pos:line="53" pos:column="41">(<pos:position pos:line="53" pos:column="42"/></operator><name><name pos:line="53" pos:column="42">graph<pos:position pos:line="53" pos:column="47"/></name><operator pos:line="53" pos:column="47">-&gt;<pos:position pos:line="53" pos:column="52"/></operator><name pos:line="53" pos:column="49">expansion_row<pos:position pos:line="53" pos:column="62"/></name></name> <operator pos:line="53" pos:column="63">&gt;<pos:position pos:line="53" pos:column="67"/></operator> <literal type="number" pos:line="53" pos:column="65">0<pos:position pos:line="53" pos:column="66"/></literal><operator pos:line="53" pos:column="66">)<pos:position pos:line="53" pos:column="67"/></operator></expr>)<pos:position pos:line="53" pos:column="68"/></condition><then pos:line="53" pos:column="68"> <block pos:line="53" pos:column="69">{
			<expr_stmt><expr><call><name pos:line="54" pos:column="25">strbuf_write_column<pos:position pos:line="54" pos:column="44"/></name><argument_list pos:line="54" pos:column="44">(<argument><expr><name pos:line="54" pos:column="45">sb<pos:position pos:line="54" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="49">col<pos:position pos:line="54" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="54" pos:column="54">'\\'<pos:position pos:line="54" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name pos:line="55" pos:column="25">chars_written<pos:position pos:line="55" pos:column="38"/></name><operator pos:line="55" pos:column="38">++<pos:position pos:line="55" pos:column="40"/></operator></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if></elseif> <else pos:line="56" pos:column="19">else <block pos:line="56" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">strbuf_write_column<pos:position pos:line="57" pos:column="44"/></name><argument_list pos:line="57" pos:column="44">(<argument><expr><name pos:line="57" pos:column="45">sb<pos:position pos:line="57" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="49">col<pos:position pos:line="57" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="57" pos:column="54">'|'<pos:position pos:line="57" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name pos:line="58" pos:column="25">chars_written<pos:position pos:line="58" pos:column="38"/></name><operator pos:line="58" pos:column="38">++<pos:position pos:line="58" pos:column="40"/></operator></expr>;<pos:position pos:line="58" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="59" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">strbuf_addch<pos:position pos:line="60" pos:column="29"/></name><argument_list pos:line="60" pos:column="29">(<argument><expr><name pos:line="60" pos:column="30">sb<pos:position pos:line="60" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="60" pos:column="34">' '<pos:position pos:line="60" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="61" pos:column="17">chars_written<pos:position pos:line="61" pos:column="30"/></name><operator pos:line="61" pos:column="30">++<pos:position pos:line="61" pos:column="32"/></operator></expr>;<pos:position pos:line="61" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="62" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="64" pos:column="9">graph_pad_horizontally<pos:position pos:line="64" pos:column="31"/></name><argument_list pos:line="64" pos:column="31">(<argument><expr><name pos:line="64" pos:column="32">graph<pos:position pos:line="64" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="39">sb<pos:position pos:line="64" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="43">chars_written<pos:position pos:line="64" pos:column="56"/></name></expr></argument>)<pos:position pos:line="64" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="58"/></expr_stmt>

	<comment type="block" pos:line="66" pos:column="9">/*
	 * Increment graph-&gt;expansion_row,
	 * and move to state GRAPH_COMMIT if necessary
	 */</comment>
	<expr_stmt><expr><name><name pos:line="70" pos:column="9">graph<pos:position pos:line="70" pos:column="14"/></name><operator pos:line="70" pos:column="14">-&gt;<pos:position pos:line="70" pos:column="19"/></operator><name pos:line="70" pos:column="16">expansion_row<pos:position pos:line="70" pos:column="29"/></name></name><operator pos:line="70" pos:column="29">++<pos:position pos:line="70" pos:column="31"/></operator></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt>
	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name><name pos:line="71" pos:column="13">graph<pos:position pos:line="71" pos:column="18"/></name><operator pos:line="71" pos:column="18">-&gt;<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="20">expansion_row<pos:position pos:line="71" pos:column="33"/></name></name> <operator pos:line="71" pos:column="34">&gt;=<pos:position pos:line="71" pos:column="39"/></operator> <name pos:line="71" pos:column="37">num_expansion_rows<pos:position pos:line="71" pos:column="55"/></name></expr>)<pos:position pos:line="71" pos:column="56"/></condition><then pos:line="71" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="17">graph_update_state<pos:position pos:line="72" pos:column="35"/></name><argument_list pos:line="72" pos:column="35">(<argument><expr><name pos:line="72" pos:column="36">graph<pos:position pos:line="72" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="43">GRAPH_COMMIT<pos:position pos:line="72" pos:column="55"/></name></expr></argument>)<pos:position pos:line="72" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="57"/></expr_stmt></block></then></if>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

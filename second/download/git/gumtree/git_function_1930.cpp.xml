<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1930.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">get_ident_string<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">void<pos:position pos:line="1" pos:column="41"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name><name pos:line="3" pos:column="16">struct<pos:position pos:line="3" pos:column="22"/></name> <name pos:line="3" pos:column="23">strbuf<pos:position pos:line="3" pos:column="29"/></name></name></type> <name pos:line="3" pos:column="30">sb<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">STRBUF_INIT<pos:position pos:line="3" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">utsname<pos:position pos:line="4" pos:column="23"/></name></name></type> <name pos:line="4" pos:column="24">uts<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">sb<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">.<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">len<pos:position pos:line="6" pos:column="19"/></name></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><name><name pos:line="7" pos:column="24">sb<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">.<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">buf<pos:position pos:line="7" pos:column="30"/></name></name></expr>;<pos:position pos:line="7" pos:column="31"/></return></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">uname<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><operator pos:line="8" pos:column="19">&amp;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="20">uts<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">die_errno<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><call><name pos:line="9" pos:column="27">_<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><literal type="string" pos:line="9" pos:column="29">"failed to get kernel name and information"<pos:position pos:line="9" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="75"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">strbuf_addf<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><operator pos:line="10" pos:column="21">&amp;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="22">sb<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="26">"Location %s, system %s %s %s"<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="58">get_git_work_tree<pos:position pos:line="10" pos:column="75"/></name><argument_list pos:line="10" pos:column="75">()<pos:position pos:line="10" pos:column="77"/></argument_list></call></expr></argument>,
		    <argument><expr><name><name pos:line="11" pos:column="21">uts<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">.<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">sysname<pos:position pos:line="11" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="34">uts<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">.<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="38">release<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="47">uts<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">.<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="51">version<pos:position pos:line="11" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt>
	<return pos:line="12" pos:column="9">return <expr><name><name pos:line="12" pos:column="16">sb<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">buf<pos:position pos:line="12" pos:column="22"/></name></name></expr>;<pos:position pos:line="12" pos:column="23"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

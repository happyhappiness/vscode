<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6664_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cygwin_offset_1st_component<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">path<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">pos<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">path<pos:position pos:line="3" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<comment type="block" pos:line="4" pos:column="9">/* unc paths */</comment>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">is_dir_sep<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name><name pos:line="5" pos:column="24">pos<pos:position pos:line="5" pos:column="27"/></name><index pos:line="5" pos:column="27">[<expr><literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal></expr>]<pos:position pos:line="5" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call> <operator pos:line="5" pos:column="32">&amp;&amp;<pos:position pos:line="5" pos:column="42"/></operator> <call><name pos:line="5" pos:column="35">is_dir_sep<pos:position pos:line="5" pos:column="45"/></name><argument_list pos:line="5" pos:column="45">(<argument><expr><name><name pos:line="5" pos:column="46">pos<pos:position pos:line="5" pos:column="49"/></name><index pos:line="5" pos:column="49">[<expr><literal type="number" pos:line="5" pos:column="50">1<pos:position pos:line="5" pos:column="51"/></literal></expr>]<pos:position pos:line="5" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="54"/></condition><then pos:line="5" pos:column="54"> <block pos:line="5" pos:column="55">{
		<comment type="block" pos:line="6" pos:column="17">/* skip server name */</comment>
		<expr_stmt><expr><name pos:line="7" pos:column="17">pos<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <call><name pos:line="7" pos:column="23">strchr<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">pos<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">+<pos:position pos:line="7" pos:column="35"/></operator> <literal type="number" pos:line="7" pos:column="36">2<pos:position pos:line="7" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="39">'/'<pos:position pos:line="7" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">pos<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26">
			<block type="pseudo"><return pos:line="9" pos:column="25">return <expr><literal type="number" pos:line="9" pos:column="32">0<pos:position pos:line="9" pos:column="33"/></literal></expr>;<pos:position pos:line="9" pos:column="34"/></return></block></then></if> <comment type="block" pos:line="9" pos:column="35">/* Error: malformed unc path */</comment>

		<do pos:line="11" pos:column="17">do <block pos:line="11" pos:column="20">{
			<expr_stmt><expr><name pos:line="12" pos:column="25">pos<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">++<pos:position pos:line="12" pos:column="30"/></operator></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="13" pos:column="18"/></block> while <condition pos:line="13" pos:column="25">(<expr><operator pos:line="13" pos:column="26">*<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">pos<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">&amp;&amp;<pos:position pos:line="13" pos:column="41"/></operator> <name><name pos:line="13" pos:column="34">pos<pos:position pos:line="13" pos:column="37"/></name><index pos:line="13" pos:column="37">[<expr><literal type="number" pos:line="13" pos:column="38">0<pos:position pos:line="13" pos:column="39"/></literal></expr>]<pos:position pos:line="13" pos:column="40"/></index></name> <operator pos:line="13" pos:column="41">!=<pos:position pos:line="13" pos:column="43"/></operator> <literal type="char" pos:line="13" pos:column="44">'/'<pos:position pos:line="13" pos:column="47"/></literal></expr>)<pos:position pos:line="13" pos:column="48"/></condition>;<pos:position pos:line="13" pos:column="49"/></do>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">pos<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">+<pos:position pos:line="15" pos:column="21"/></operator> <call><name pos:line="15" pos:column="22">is_dir_sep<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><operator pos:line="15" pos:column="33">*<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="34">pos<pos:position pos:line="15" pos:column="37"/></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call> <operator pos:line="15" pos:column="39">-<pos:position pos:line="15" pos:column="40"/></operator> <name pos:line="15" pos:column="41">path<pos:position pos:line="15" pos:column="45"/></name></expr>;<pos:position pos:line="15" pos:column="46"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3507_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">update_candidates<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">disambiguate_state<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">ds<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="62">const<pos:position pos:line="1" pos:column="67"/></specifier> <name pos:line="1" pos:column="68">unsigned<pos:position pos:line="1" pos:column="76"/></name> <name pos:line="1" pos:column="77">char<pos:position pos:line="1" pos:column="81"/></name> <modifier pos:line="1" pos:column="82">*<pos:position pos:line="1" pos:column="83"/></modifier></type><name pos:line="1" pos:column="83">current<pos:position pos:line="1" pos:column="90"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="91"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">ds<pos:position pos:line="3" pos:column="15"/></name><operator pos:line="3" pos:column="15">-&gt;<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="17">always_call_fn<pos:position pos:line="3" pos:column="31"/></name></name></expr>)<pos:position pos:line="3" pos:column="32"/></condition><then pos:line="3" pos:column="32"> <block pos:line="3" pos:column="33">{
		<expr_stmt><expr><name><name pos:line="4" pos:column="17">ds<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">ambiguous<pos:position pos:line="4" pos:column="30"/></name></name> <operator pos:line="4" pos:column="31">=<pos:position pos:line="4" pos:column="32"/></operator> <ternary><condition><expr><call><name><name pos:line="4" pos:column="33">ds<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">-&gt;<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="37">fn<pos:position pos:line="4" pos:column="39"/></name></name><argument_list pos:line="4" pos:column="39">(<argument><expr><name pos:line="4" pos:column="40">current<pos:position pos:line="4" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="49">ds<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">-&gt;<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="53">cb_data<pos:position pos:line="4" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="61"/></argument_list></call></expr> ?<pos:position pos:line="4" pos:column="63"/></condition><then pos:line="4" pos:column="63"> <expr><literal type="number" pos:line="4" pos:column="64">1<pos:position pos:line="4" pos:column="65"/></literal></expr> <pos:position pos:line="4" pos:column="66"/></then><else pos:line="4" pos:column="66">: <expr><literal type="number" pos:line="4" pos:column="68">0<pos:position pos:line="4" pos:column="69"/></literal></expr></else></ternary></expr>;<pos:position pos:line="4" pos:column="70"/></expr_stmt>
		<return pos:line="5" pos:column="17">return;<pos:position pos:line="5" pos:column="24"/></return>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name><name pos:line="7" pos:column="14">ds<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">candidate_exists<pos:position pos:line="7" pos:column="34"/></name></name></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35"> <block pos:line="7" pos:column="36">{
		<comment type="block" pos:line="8" pos:column="17">/* this is the first candidate */</comment>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">hashcpy<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name><name pos:line="9" pos:column="25">ds<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">candidate<pos:position pos:line="9" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">current<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="10" pos:column="17">ds<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">candidate_exists<pos:position pos:line="10" pos:column="37"/></name></name> <operator pos:line="10" pos:column="38">=<pos:position pos:line="10" pos:column="39"/></operator> <literal type="number" pos:line="10" pos:column="40">1<pos:position pos:line="10" pos:column="41"/></literal></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
		<return pos:line="11" pos:column="17">return;<pos:position pos:line="11" pos:column="24"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then> <elseif pos:line="12" pos:column="11">else <if pos:line="12" pos:column="16">if <condition pos:line="12" pos:column="19">(<expr><operator pos:line="12" pos:column="20">!<pos:position pos:line="12" pos:column="21"/></operator><call><name pos:line="12" pos:column="21">hashcmp<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name><name pos:line="12" pos:column="29">ds<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">candidate<pos:position pos:line="12" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">current<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53"> <block pos:line="12" pos:column="54">{
		<comment type="block" pos:line="13" pos:column="17">/* the same as what we already have seen */</comment>
		<return pos:line="14" pos:column="17">return;<pos:position pos:line="14" pos:column="24"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name><name pos:line="17" pos:column="14">ds<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">fn<pos:position pos:line="17" pos:column="20"/></name></name></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21"> <block pos:line="17" pos:column="22">{
		<comment type="block" pos:line="18" pos:column="17">/* cannot disambiguate between ds-&gt;candidate and current */</comment>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">ds<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">ambiguous<pos:position pos:line="19" pos:column="30"/></name></name> <operator pos:line="19" pos:column="31">=<pos:position pos:line="19" pos:column="32"/></operator> <literal type="number" pos:line="19" pos:column="33">1<pos:position pos:line="19" pos:column="34"/></literal></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
		<return pos:line="20" pos:column="17">return;<pos:position pos:line="20" pos:column="24"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name><name pos:line="23" pos:column="14">ds<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">candidate_checked<pos:position pos:line="23" pos:column="35"/></name></name></expr>)<pos:position pos:line="23" pos:column="36"/></condition><then pos:line="23" pos:column="36"> <block pos:line="23" pos:column="37">{
		<expr_stmt><expr><name><name pos:line="24" pos:column="17">ds<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">candidate_ok<pos:position pos:line="24" pos:column="33"/></name></name> <operator pos:line="24" pos:column="34">=<pos:position pos:line="24" pos:column="35"/></operator> <call><name><name pos:line="24" pos:column="36">ds<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">-&gt;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="40">fn<pos:position pos:line="24" pos:column="42"/></name></name><argument_list pos:line="24" pos:column="42">(<argument><expr><name><name pos:line="24" pos:column="43">ds<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">candidate<pos:position pos:line="24" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="58">ds<pos:position pos:line="24" pos:column="60"/></name><operator pos:line="24" pos:column="60">-&gt;<pos:position pos:line="24" pos:column="65"/></operator><name pos:line="24" pos:column="62">cb_data<pos:position pos:line="24" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">ds<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">disambiguate_fn_used<pos:position pos:line="25" pos:column="41"/></name></name> <operator pos:line="25" pos:column="42">=<pos:position pos:line="25" pos:column="43"/></operator> <literal type="number" pos:line="25" pos:column="44">1<pos:position pos:line="25" pos:column="45"/></literal></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">ds<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">candidate_checked<pos:position pos:line="26" pos:column="38"/></name></name> <operator pos:line="26" pos:column="39">=<pos:position pos:line="26" pos:column="40"/></operator> <literal type="number" pos:line="26" pos:column="41">1<pos:position pos:line="26" pos:column="42"/></literal></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name><name pos:line="29" pos:column="14">ds<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">candidate_ok<pos:position pos:line="29" pos:column="30"/></name></name></expr>)<pos:position pos:line="29" pos:column="31"/></condition><then pos:line="29" pos:column="31"> <block pos:line="29" pos:column="32">{
		<comment type="block" pos:line="30" pos:column="17">/* discard the candidate; we know it does not satisfy fn */</comment>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">hashcpy<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name><name pos:line="31" pos:column="25">ds<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">candidate<pos:position pos:line="31" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="40">current<pos:position pos:line="31" pos:column="47"/></name></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">ds<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">-&gt;<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="21">candidate_checked<pos:position pos:line="32" pos:column="38"/></name></name> <operator pos:line="32" pos:column="39">=<pos:position pos:line="32" pos:column="40"/></operator> <literal type="number" pos:line="32" pos:column="41">0<pos:position pos:line="32" pos:column="42"/></literal></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
		<return pos:line="33" pos:column="17">return;<pos:position pos:line="33" pos:column="24"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="36" pos:column="9">/* if we reach this point, we know ds-&gt;candidate satisfies fn */</comment>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name><name pos:line="37" pos:column="13">ds<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">-&gt;<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="17">fn<pos:position pos:line="37" pos:column="19"/></name></name><argument_list pos:line="37" pos:column="19">(<argument><expr><name pos:line="37" pos:column="20">current<pos:position pos:line="37" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="29">ds<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">-&gt;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="33">cb_data<pos:position pos:line="37" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="42"/></condition><then pos:line="37" pos:column="42"> <block pos:line="37" pos:column="43">{
		<comment type="block" pos:line="38" pos:column="17">/*
		 * if both current and candidate satisfy fn, we cannot
		 * disambiguate.
		 */</comment>
		<expr_stmt><expr><name><name pos:line="42" pos:column="17">ds<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">-&gt;<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="21">candidate_ok<pos:position pos:line="42" pos:column="33"/></name></name> <operator pos:line="42" pos:column="34">=<pos:position pos:line="42" pos:column="35"/></operator> <literal type="number" pos:line="42" pos:column="36">0<pos:position pos:line="42" pos:column="37"/></literal></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="43" pos:column="17">ds<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">-&gt;<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="21">ambiguous<pos:position pos:line="43" pos:column="30"/></name></name> <operator pos:line="43" pos:column="31">=<pos:position pos:line="43" pos:column="32"/></operator> <literal type="number" pos:line="43" pos:column="33">1<pos:position pos:line="43" pos:column="34"/></literal></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="46" pos:column="9">/* otherwise, current can be discarded and candidate is still good */</comment>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1207_git-2.13.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">uint32_t<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">hash_line<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">cp<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">size_t<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">len<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">i<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">uint32_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">h<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr><operator pos:line="5" pos:column="19">,<pos:position pos:line="5" pos:column="20"/></operator> <expr><name pos:line="5" pos:column="21">h<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">=<pos:position pos:line="5" pos:column="24"/></operator> <literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr>;<pos:position pos:line="5" pos:column="27"/></init> <condition><expr><name pos:line="5" pos:column="28">i<pos:position pos:line="5" pos:column="29"/></name> <operator pos:line="5" pos:column="30">&lt;<pos:position pos:line="5" pos:column="34"/></operator> <name pos:line="5" pos:column="32">len<pos:position pos:line="5" pos:column="35"/></name></expr>;<pos:position pos:line="5" pos:column="36"/></condition> <incr><expr><name pos:line="5" pos:column="37">i<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">++<pos:position pos:line="5" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="41"/></control> <block pos:line="5" pos:column="42">{
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">!<pos:position pos:line="6" pos:column="22"/></operator><call><name pos:line="6" pos:column="22">isspace<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><name><name pos:line="6" pos:column="30">cp<pos:position pos:line="6" pos:column="32"/></name><index pos:line="6" pos:column="32">[<expr><name pos:line="6" pos:column="33">i<pos:position pos:line="6" pos:column="34"/></name></expr>]<pos:position pos:line="6" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="37"/></condition><then pos:line="6" pos:column="37"> <block pos:line="6" pos:column="38">{
			<expr_stmt><expr><name pos:line="7" pos:column="25">h<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">=<pos:position pos:line="7" pos:column="28"/></operator> <name pos:line="7" pos:column="29">h<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></operator> <literal type="number" pos:line="7" pos:column="33">3<pos:position pos:line="7" pos:column="34"/></literal> <operator pos:line="7" pos:column="35">+<pos:position pos:line="7" pos:column="36"/></operator> <operator pos:line="7" pos:column="37">(<pos:position pos:line="7" pos:column="38"/></operator><name><name pos:line="7" pos:column="38">cp<pos:position pos:line="7" pos:column="40"/></name><index pos:line="7" pos:column="40">[<expr><name pos:line="7" pos:column="41">i<pos:position pos:line="7" pos:column="42"/></name></expr>]<pos:position pos:line="7" pos:column="43"/></index></name> <operator pos:line="7" pos:column="44">&amp;<pos:position pos:line="7" pos:column="49"/></operator> <literal type="number" pos:line="7" pos:column="46">0xff<pos:position pos:line="7" pos:column="50"/></literal><operator pos:line="7" pos:column="50">)<pos:position pos:line="7" pos:column="51"/></operator></expr>;<pos:position pos:line="7" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="8" pos:column="18"/></block></then></if>
	}<pos:position pos:line="9" pos:column="10"/></block></for>
	<return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">h<pos:position pos:line="10" pos:column="17"/></name></expr>;<pos:position pos:line="10" pos:column="18"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_195.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">wt_status_print_tracking<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">wt_status<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">s<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">sb<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name pos:line="3" pos:column="28">STRBUF_INIT<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">cp<pos:position pos:line="4" pos:column="23"/></name></decl>, <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="26">ep<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">branch<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">branch<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">comment_line_string<pos:position pos:line="6" pos:column="33"/></name><index pos:line="6" pos:column="33">[<expr><literal type="number" pos:line="6" pos:column="34">3<pos:position pos:line="6" pos:column="35"/></literal></expr>]<pos:position pos:line="6" pos:column="36"/></index></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name><name pos:line="9" pos:column="16">s<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">branch<pos:position pos:line="9" pos:column="25"/></name></name> <operator pos:line="9" pos:column="26">&amp;&amp;<pos:position pos:line="9" pos:column="36"/></operator> <operator pos:line="9" pos:column="29">!<pos:position pos:line="9" pos:column="30"/></operator><name><name pos:line="9" pos:column="30">s<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">is_initial<pos:position pos:line="9" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">starts_with<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name><name pos:line="10" pos:column="26">s<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">branch<pos:position pos:line="10" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="37">"refs/heads/"<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="52"/></condition><then pos:line="10" pos:column="52">
		<block type="pseudo"><return pos:line="11" pos:column="17">return;<pos:position pos:line="11" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="12" pos:column="9">branch<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">branch_get<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name><name pos:line="12" pos:column="29">s<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">branch<pos:position pos:line="12" pos:column="38"/></name></name> <operator pos:line="12" pos:column="39">+<pos:position pos:line="12" pos:column="40"/></operator> <literal type="number" pos:line="12" pos:column="41">11<pos:position pos:line="12" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">format_tracking_info<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">branch<pos:position pos:line="13" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="43">&amp;<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="44">sb<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48">
		<block type="pseudo"><return pos:line="14" pos:column="17">return;<pos:position pos:line="14" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="16" pos:column="9">i<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <literal type="number" pos:line="16" pos:column="13">0<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">s<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">display_comment_prefix<pos:position pos:line="17" pos:column="38"/></name></name></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39"> <block pos:line="17" pos:column="40">{
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">comment_line_string<pos:position pos:line="18" pos:column="36"/></name><index pos:line="18" pos:column="36">[<expr><name pos:line="18" pos:column="37">i<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">++<pos:position pos:line="18" pos:column="40"/></operator></expr>]<pos:position pos:line="18" pos:column="41"/></index></name> <operator pos:line="18" pos:column="42">=<pos:position pos:line="18" pos:column="43"/></operator> <name pos:line="18" pos:column="44">comment_line_char<pos:position pos:line="18" pos:column="61"/></name></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">comment_line_string<pos:position pos:line="19" pos:column="36"/></name><index pos:line="19" pos:column="36">[<expr><name pos:line="19" pos:column="37">i<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">++<pos:position pos:line="19" pos:column="40"/></operator></expr>]<pos:position pos:line="19" pos:column="41"/></index></name> <operator pos:line="19" pos:column="42">=<pos:position pos:line="19" pos:column="43"/></operator> <literal type="char" pos:line="19" pos:column="44">' '<pos:position pos:line="19" pos:column="47"/></literal></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">comment_line_string<pos:position pos:line="21" pos:column="28"/></name><index pos:line="21" pos:column="28">[<expr><name pos:line="21" pos:column="29">i<pos:position pos:line="21" pos:column="30"/></name></expr>]<pos:position pos:line="21" pos:column="31"/></index></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <literal type="char" pos:line="21" pos:column="34">'\0'<pos:position pos:line="21" pos:column="38"/></literal></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>

	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">cp<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name><name pos:line="23" pos:column="19">sb<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">.<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">buf<pos:position pos:line="23" pos:column="25"/></name></name></expr>;<pos:position pos:line="23" pos:column="26"/></init> <condition><expr><operator pos:line="23" pos:column="27">(<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="28">ep<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <call><name pos:line="23" pos:column="33">strchr<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">cp<pos:position pos:line="23" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="44">'\n'<pos:position pos:line="23" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call><operator pos:line="23" pos:column="49">)<pos:position pos:line="23" pos:column="50"/></operator> <operator pos:line="23" pos:column="51">!=<pos:position pos:line="23" pos:column="53"/></operator> <name pos:line="23" pos:column="54">NULL<pos:position pos:line="23" pos:column="58"/></name></expr>;<pos:position pos:line="23" pos:column="59"/></condition> <incr><expr><name pos:line="23" pos:column="60">cp<pos:position pos:line="23" pos:column="62"/></name> <operator pos:line="23" pos:column="63">=<pos:position pos:line="23" pos:column="64"/></operator> <name pos:line="23" pos:column="65">ep<pos:position pos:line="23" pos:column="67"/></name> <operator pos:line="23" pos:column="68">+<pos:position pos:line="23" pos:column="69"/></operator> <literal type="number" pos:line="23" pos:column="70">1<pos:position pos:line="23" pos:column="71"/></literal></expr></incr>)<pos:position pos:line="23" pos:column="72"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">color_fprintf_ln<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name><name pos:line="24" pos:column="34">s<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">fp<pos:position pos:line="24" pos:column="39"/></name></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="41">color<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><name pos:line="24" pos:column="47">WT_STATUS_HEADER<pos:position pos:line="24" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="65">s<pos:position pos:line="24" pos:column="66"/></name></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr></argument>,
				 <argument><expr><literal type="string" pos:line="25" pos:column="34">"%s%.*s"<pos:position pos:line="25" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">comment_line_string<pos:position pos:line="25" pos:column="63"/></name></expr></argument>,
				 <argument><expr><call pos:line="26" pos:column="34">(<name pos:line="26" pos:column="35">int<pos:position pos:line="26" pos:column="38"/></name>)<argument_list pos:line="26" pos:column="39">(<argument><expr><name pos:line="26" pos:column="40">ep<pos:position pos:line="26" pos:column="42"/></name> <operator pos:line="26" pos:column="43">-<pos:position pos:line="26" pos:column="44"/></operator> <name pos:line="26" pos:column="45">cp<pos:position pos:line="26" pos:column="47"/></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="50">cp<pos:position pos:line="26" pos:column="52"/></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt></block></for>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">s<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">-&gt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">display_comment_prefix<pos:position pos:line="27" pos:column="38"/></name></name></expr>)<pos:position pos:line="27" pos:column="39"/></condition><then pos:line="27" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">color_fprintf_ln<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><name><name pos:line="28" pos:column="34">s<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">fp<pos:position pos:line="28" pos:column="39"/></name></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="41">color<pos:position pos:line="28" pos:column="46"/></name><argument_list pos:line="28" pos:column="46">(<argument><expr><name pos:line="28" pos:column="47">WT_STATUS_HEADER<pos:position pos:line="28" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="65">s<pos:position pos:line="28" pos:column="66"/></name></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="69">"%c"<pos:position pos:line="28" pos:column="73"/></literal></expr></argument>,
				 <argument><expr><name pos:line="29" pos:column="34">comment_line_char<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="53"/></expr_stmt></block></then>
	<else pos:line="30" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">fprintf_ln<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name><name pos:line="31" pos:column="28">s<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">fp<pos:position pos:line="31" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="35">""<pos:position pos:line="31" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt></block></else></if>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

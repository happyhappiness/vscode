<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1010_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pump_io_round<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">io_pump<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">slots<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">nr<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="57">struct<pos:position pos:line="1" pos:column="63"/></name> <name pos:line="1" pos:column="64">pollfd<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">pfd<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">pollsize<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><literal type="number" pos:line="3" pos:column="24">0<pos:position pos:line="3" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="25">nr<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></condition> <incr><expr><name pos:line="6" pos:column="29">i<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">++<pos:position pos:line="6" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="33"/></control> <block pos:line="6" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">io_pump<pos:position pos:line="7" pos:column="31"/></name></name> <modifier pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></modifier></type><name pos:line="7" pos:column="33">io<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><operator pos:line="7" pos:column="38">&amp;<pos:position pos:line="7" pos:column="43"/></operator><name><name pos:line="7" pos:column="39">slots<pos:position pos:line="7" pos:column="44"/></name><index pos:line="7" pos:column="44">[<expr><name pos:line="7" pos:column="45">i<pos:position pos:line="7" pos:column="46"/></name></expr>]<pos:position pos:line="7" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name><name pos:line="8" pos:column="21">io<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">fd<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">&lt;<pos:position pos:line="8" pos:column="32"/></operator> <literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32">
			<block type="pseudo"><continue pos:line="9" pos:column="25">continue;<pos:position pos:line="9" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name><name pos:line="10" pos:column="17">pfd<pos:position pos:line="10" pos:column="20"/></name><index pos:line="10" pos:column="20">[<expr><name pos:line="10" pos:column="21">pollsize<pos:position pos:line="10" pos:column="29"/></name></expr>]<pos:position pos:line="10" pos:column="30"/></index></name><operator pos:line="10" pos:column="30">.<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">fd<pos:position pos:line="10" pos:column="33"/></name> <operator pos:line="10" pos:column="34">=<pos:position pos:line="10" pos:column="35"/></operator> <name><name pos:line="10" pos:column="36">io<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">fd<pos:position pos:line="10" pos:column="42"/></name></name></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="11" pos:column="17">pfd<pos:position pos:line="11" pos:column="20"/></name><index pos:line="11" pos:column="20">[<expr><name pos:line="11" pos:column="21">pollsize<pos:position pos:line="11" pos:column="29"/></name></expr>]<pos:position pos:line="11" pos:column="30"/></index></name><operator pos:line="11" pos:column="30">.<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">events<pos:position pos:line="11" pos:column="37"/></name> <operator pos:line="11" pos:column="38">=<pos:position pos:line="11" pos:column="39"/></operator> <name><name pos:line="11" pos:column="40">io<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">type<pos:position pos:line="11" pos:column="48"/></name></name></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="12" pos:column="17">io<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">pfd<pos:position pos:line="12" pos:column="24"/></name></name> <operator pos:line="12" pos:column="25">=<pos:position pos:line="12" pos:column="26"/></operator> <operator pos:line="12" pos:column="27">&amp;<pos:position pos:line="12" pos:column="32"/></operator><name><name pos:line="12" pos:column="28">pfd<pos:position pos:line="12" pos:column="31"/></name><index pos:line="12" pos:column="31">[<expr><name pos:line="12" pos:column="32">pollsize<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">++<pos:position pos:line="12" pos:column="42"/></operator></expr>]<pos:position pos:line="12" pos:column="43"/></index></name></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></for>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">pollsize<pos:position pos:line="15" pos:column="22"/></name></expr>)<pos:position pos:line="15" pos:column="23"/></condition><then pos:line="15" pos:column="23">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">poll<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">pfd<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="23">pollsize<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="33">-<pos:position pos:line="18" pos:column="34"/></operator><literal type="number" pos:line="18" pos:column="34">1<pos:position pos:line="18" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call> <operator pos:line="18" pos:column="37">&lt;<pos:position pos:line="18" pos:column="41"/></operator> <literal type="number" pos:line="18" pos:column="39">0<pos:position pos:line="18" pos:column="40"/></literal></expr>)<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41"> <block pos:line="18" pos:column="42">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">errno<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">==<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="30">EINTR<pos:position pos:line="19" pos:column="35"/></name></expr>)<pos:position pos:line="19" pos:column="36"/></condition><then pos:line="19" pos:column="36">
			<block type="pseudo"><return pos:line="20" pos:column="25">return <expr><literal type="number" pos:line="20" pos:column="32">1<pos:position pos:line="20" pos:column="33"/></literal></expr>;<pos:position pos:line="20" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">die_errno<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><literal type="string" pos:line="21" pos:column="27">"poll failed"<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">i<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <literal type="number" pos:line="24" pos:column="18">0<pos:position pos:line="24" pos:column="19"/></literal></expr>;<pos:position pos:line="24" pos:column="20"/></init> <condition><expr><name pos:line="24" pos:column="21">i<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">&lt;<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="25">nr<pos:position pos:line="24" pos:column="27"/></name></expr>;<pos:position pos:line="24" pos:column="28"/></condition> <incr><expr><name pos:line="24" pos:column="29">i<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">++<pos:position pos:line="24" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="33"/></control> <block pos:line="24" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="25" pos:column="17">struct<pos:position pos:line="25" pos:column="23"/></name> <name pos:line="25" pos:column="24">io_pump<pos:position pos:line="25" pos:column="31"/></name></name> <modifier pos:line="25" pos:column="32">*<pos:position pos:line="25" pos:column="33"/></modifier></type><name pos:line="25" pos:column="33">io<pos:position pos:line="25" pos:column="35"/></name> <init pos:line="25" pos:column="36">= <expr><operator pos:line="25" pos:column="38">&amp;<pos:position pos:line="25" pos:column="43"/></operator><name><name pos:line="25" pos:column="39">slots<pos:position pos:line="25" pos:column="44"/></name><index pos:line="25" pos:column="44">[<expr><name pos:line="25" pos:column="45">i<pos:position pos:line="25" pos:column="46"/></name></expr>]<pos:position pos:line="25" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="25" pos:column="48"/></decl_stmt>

		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name><name pos:line="27" pos:column="21">io<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">-&gt;<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="25">fd<pos:position pos:line="27" pos:column="27"/></name></name> <operator pos:line="27" pos:column="28">&lt;<pos:position pos:line="27" pos:column="32"/></operator> <literal type="number" pos:line="27" pos:column="30">0<pos:position pos:line="27" pos:column="31"/></literal></expr>)<pos:position pos:line="27" pos:column="32"/></condition><then pos:line="27" pos:column="32">
			<block type="pseudo"><continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue></block></then></if>

		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><operator pos:line="30" pos:column="22">(<pos:position pos:line="30" pos:column="23"/></operator><name><name pos:line="30" pos:column="23">io<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">pfd<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">-&gt;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="32">revents<pos:position pos:line="30" pos:column="39"/></name></name> <operator pos:line="30" pos:column="40">&amp;<pos:position pos:line="30" pos:column="45"/></operator> <operator pos:line="30" pos:column="42">(<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="43">POLLOUT<pos:position pos:line="30" pos:column="50"/></name><operator pos:line="30" pos:column="50">|<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="51">POLLIN<pos:position pos:line="30" pos:column="57"/></name><operator pos:line="30" pos:column="57">|<pos:position pos:line="30" pos:column="58"/></operator><name pos:line="30" pos:column="58">POLLHUP<pos:position pos:line="30" pos:column="65"/></name><operator pos:line="30" pos:column="65">|<pos:position pos:line="30" pos:column="66"/></operator><name pos:line="30" pos:column="66">POLLERR<pos:position pos:line="30" pos:column="73"/></name><operator pos:line="30" pos:column="73">|<pos:position pos:line="30" pos:column="74"/></operator><name pos:line="30" pos:column="74">POLLNVAL<pos:position pos:line="30" pos:column="82"/></name><operator pos:line="30" pos:column="82">)<pos:position pos:line="30" pos:column="83"/></operator><operator pos:line="30" pos:column="83">)<pos:position pos:line="30" pos:column="84"/></operator></expr>)<pos:position pos:line="30" pos:column="85"/></condition><then pos:line="30" pos:column="85">
			<block type="pseudo"><continue pos:line="31" pos:column="25">continue;<pos:position pos:line="31" pos:column="34"/></continue></block></then></if>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name><name pos:line="33" pos:column="21">io<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">-&gt;<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="25">type<pos:position pos:line="33" pos:column="29"/></name></name> <operator pos:line="33" pos:column="30">==<pos:position pos:line="33" pos:column="32"/></operator> <name pos:line="33" pos:column="33">POLLOUT<pos:position pos:line="33" pos:column="40"/></name></expr>)<pos:position pos:line="33" pos:column="41"/></condition><then pos:line="33" pos:column="41"> <block pos:line="33" pos:column="42">{
			<decl_stmt><decl><type><name pos:line="34" pos:column="25">ssize_t<pos:position pos:line="34" pos:column="32"/></name></type> <name pos:line="34" pos:column="33">len<pos:position pos:line="34" pos:column="36"/></name> <init pos:line="34" pos:column="37">= <expr><call><name pos:line="34" pos:column="39">xwrite<pos:position pos:line="34" pos:column="45"/></name><argument_list pos:line="34" pos:column="45">(<argument><expr><name><name pos:line="34" pos:column="46">io<pos:position pos:line="34" pos:column="48"/></name><operator pos:line="34" pos:column="48">-&gt;<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="50">fd<pos:position pos:line="34" pos:column="52"/></name></name></expr></argument>,
					     <argument><expr><name><name pos:line="35" pos:column="46">io<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">-&gt;<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="50">u<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">.<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="52">out<pos:position pos:line="35" pos:column="55"/></name><operator pos:line="35" pos:column="55">.<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="56">buf<pos:position pos:line="35" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="61">io<pos:position pos:line="35" pos:column="63"/></name><operator pos:line="35" pos:column="63">-&gt;<pos:position pos:line="35" pos:column="68"/></operator><name pos:line="35" pos:column="65">u<pos:position pos:line="35" pos:column="66"/></name><operator pos:line="35" pos:column="66">.<pos:position pos:line="35" pos:column="67"/></operator><name pos:line="35" pos:column="67">out<pos:position pos:line="35" pos:column="70"/></name><operator pos:line="35" pos:column="70">.<pos:position pos:line="35" pos:column="71"/></operator><name pos:line="35" pos:column="71">len<pos:position pos:line="35" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="76"/></decl_stmt>
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><name pos:line="36" pos:column="29">len<pos:position pos:line="36" pos:column="32"/></name> <operator pos:line="36" pos:column="33">&lt;<pos:position pos:line="36" pos:column="37"/></operator> <literal type="number" pos:line="36" pos:column="35">0<pos:position pos:line="36" pos:column="36"/></literal></expr>)<pos:position pos:line="36" pos:column="37"/></condition><then pos:line="36" pos:column="37"> <block pos:line="36" pos:column="38">{
				<expr_stmt><expr><name><name pos:line="37" pos:column="33">io<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="37">error<pos:position pos:line="37" pos:column="42"/></name></name> <operator pos:line="37" pos:column="43">=<pos:position pos:line="37" pos:column="44"/></operator> <name pos:line="37" pos:column="45">errno<pos:position pos:line="37" pos:column="50"/></name></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="38" pos:column="33">close<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><name><name pos:line="38" pos:column="39">io<pos:position pos:line="38" pos:column="41"/></name><operator pos:line="38" pos:column="41">-&gt;<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="43">fd<pos:position pos:line="38" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="39" pos:column="33">io<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">-&gt;<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="37">fd<pos:position pos:line="39" pos:column="39"/></name></name> <operator pos:line="39" pos:column="40">=<pos:position pos:line="39" pos:column="41"/></operator> <operator pos:line="39" pos:column="42">-<pos:position pos:line="39" pos:column="43"/></operator><literal type="number" pos:line="39" pos:column="43">1<pos:position pos:line="39" pos:column="44"/></literal></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt>
			}<pos:position pos:line="40" pos:column="26"/></block></then> <else pos:line="40" pos:column="27">else <block pos:line="40" pos:column="32">{
				<expr_stmt><expr><name><name pos:line="41" pos:column="33">io<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">-&gt;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="37">u<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">.<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="39">out<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">.<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="43">buf<pos:position pos:line="41" pos:column="46"/></name></name> <operator pos:line="41" pos:column="47">+=<pos:position pos:line="41" pos:column="49"/></operator> <name pos:line="41" pos:column="50">len<pos:position pos:line="41" pos:column="53"/></name></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="42" pos:column="33">io<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">-&gt;<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="37">u<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">.<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="39">out<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">.<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="43">len<pos:position pos:line="42" pos:column="46"/></name></name> <operator pos:line="42" pos:column="47">-=<pos:position pos:line="42" pos:column="49"/></operator> <name pos:line="42" pos:column="50">len<pos:position pos:line="42" pos:column="53"/></name></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>
				<if pos:line="43" pos:column="33">if <condition pos:line="43" pos:column="36">(<expr><operator pos:line="43" pos:column="37">!<pos:position pos:line="43" pos:column="38"/></operator><name><name pos:line="43" pos:column="38">io<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">-&gt;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="42">u<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">.<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="44">out<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">.<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="48">len<pos:position pos:line="43" pos:column="51"/></name></name></expr>)<pos:position pos:line="43" pos:column="52"/></condition><then pos:line="43" pos:column="52"> <block pos:line="43" pos:column="53">{
					<expr_stmt><expr><call><name pos:line="44" pos:column="41">close<pos:position pos:line="44" pos:column="46"/></name><argument_list pos:line="44" pos:column="46">(<argument><expr><name><name pos:line="44" pos:column="47">io<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">-&gt;<pos:position pos:line="44" pos:column="54"/></operator><name pos:line="44" pos:column="51">fd<pos:position pos:line="44" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="55"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="45" pos:column="41">io<pos:position pos:line="45" pos:column="43"/></name><operator pos:line="45" pos:column="43">-&gt;<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="45">fd<pos:position pos:line="45" pos:column="47"/></name></name> <operator pos:line="45" pos:column="48">=<pos:position pos:line="45" pos:column="49"/></operator> <operator pos:line="45" pos:column="50">-<pos:position pos:line="45" pos:column="51"/></operator><literal type="number" pos:line="45" pos:column="51">1<pos:position pos:line="45" pos:column="52"/></literal></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt>
				}<pos:position pos:line="46" pos:column="34"/></block></then></if>
			}<pos:position pos:line="47" pos:column="26"/></block></else></if>
		}<pos:position pos:line="48" pos:column="18"/></block></then></if>

		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name><name pos:line="50" pos:column="21">io<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">-&gt;<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="25">type<pos:position pos:line="50" pos:column="29"/></name></name> <operator pos:line="50" pos:column="30">==<pos:position pos:line="50" pos:column="32"/></operator> <name pos:line="50" pos:column="33">POLLIN<pos:position pos:line="50" pos:column="39"/></name></expr>)<pos:position pos:line="50" pos:column="40"/></condition><then pos:line="50" pos:column="40"> <block pos:line="50" pos:column="41">{
			<decl_stmt><decl><type><name pos:line="51" pos:column="25">ssize_t<pos:position pos:line="51" pos:column="32"/></name></type> <name pos:line="51" pos:column="33">len<pos:position pos:line="51" pos:column="36"/></name> <init pos:line="51" pos:column="37">= <expr><call><name pos:line="51" pos:column="39">strbuf_read_once<pos:position pos:line="51" pos:column="55"/></name><argument_list pos:line="51" pos:column="55">(<argument><expr><name><name pos:line="51" pos:column="56">io<pos:position pos:line="51" pos:column="58"/></name><operator pos:line="51" pos:column="58">-&gt;<pos:position pos:line="51" pos:column="63"/></operator><name pos:line="51" pos:column="60">u<pos:position pos:line="51" pos:column="61"/></name><operator pos:line="51" pos:column="61">.<pos:position pos:line="51" pos:column="62"/></operator><name pos:line="51" pos:column="62">in<pos:position pos:line="51" pos:column="64"/></name><operator pos:line="51" pos:column="64">.<pos:position pos:line="51" pos:column="65"/></operator><name pos:line="51" pos:column="65">buf<pos:position pos:line="51" pos:column="68"/></name></name></expr></argument>,
						       <argument><expr><name><name pos:line="52" pos:column="56">io<pos:position pos:line="52" pos:column="58"/></name><operator pos:line="52" pos:column="58">-&gt;<pos:position pos:line="52" pos:column="63"/></operator><name pos:line="52" pos:column="60">fd<pos:position pos:line="52" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="64">io<pos:position pos:line="52" pos:column="66"/></name><operator pos:line="52" pos:column="66">-&gt;<pos:position pos:line="52" pos:column="71"/></operator><name pos:line="52" pos:column="68">u<pos:position pos:line="52" pos:column="69"/></name><operator pos:line="52" pos:column="69">.<pos:position pos:line="52" pos:column="70"/></operator><name pos:line="52" pos:column="70">in<pos:position pos:line="52" pos:column="72"/></name><operator pos:line="52" pos:column="72">.<pos:position pos:line="52" pos:column="73"/></operator><name pos:line="52" pos:column="73">hint<pos:position pos:line="52" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="79"/></decl_stmt>
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><name pos:line="53" pos:column="29">len<pos:position pos:line="53" pos:column="32"/></name> <operator pos:line="53" pos:column="33">&lt;<pos:position pos:line="53" pos:column="37"/></operator> <literal type="number" pos:line="53" pos:column="35">0<pos:position pos:line="53" pos:column="36"/></literal></expr>)<pos:position pos:line="53" pos:column="37"/></condition><then pos:line="53" pos:column="37">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="33">io<pos:position pos:line="54" pos:column="35"/></name><operator pos:line="54" pos:column="35">-&gt;<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="37">error<pos:position pos:line="54" pos:column="42"/></name></name> <operator pos:line="54" pos:column="43">=<pos:position pos:line="54" pos:column="44"/></operator> <name pos:line="54" pos:column="45">errno<pos:position pos:line="54" pos:column="50"/></name></expr>;<pos:position pos:line="54" pos:column="51"/></expr_stmt></block></then></if>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><name pos:line="55" pos:column="29">len<pos:position pos:line="55" pos:column="32"/></name> <operator pos:line="55" pos:column="33">&lt;=<pos:position pos:line="55" pos:column="38"/></operator> <literal type="number" pos:line="55" pos:column="36">0<pos:position pos:line="55" pos:column="37"/></literal></expr>)<pos:position pos:line="55" pos:column="38"/></condition><then pos:line="55" pos:column="38"> <block pos:line="55" pos:column="39">{
				<expr_stmt><expr><call><name pos:line="56" pos:column="33">close<pos:position pos:line="56" pos:column="38"/></name><argument_list pos:line="56" pos:column="38">(<argument><expr><name><name pos:line="56" pos:column="39">io<pos:position pos:line="56" pos:column="41"/></name><operator pos:line="56" pos:column="41">-&gt;<pos:position pos:line="56" pos:column="46"/></operator><name pos:line="56" pos:column="43">fd<pos:position pos:line="56" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="57" pos:column="33">io<pos:position pos:line="57" pos:column="35"/></name><operator pos:line="57" pos:column="35">-&gt;<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="37">fd<pos:position pos:line="57" pos:column="39"/></name></name> <operator pos:line="57" pos:column="40">=<pos:position pos:line="57" pos:column="41"/></operator> <operator pos:line="57" pos:column="42">-<pos:position pos:line="57" pos:column="43"/></operator><literal type="number" pos:line="57" pos:column="43">1<pos:position pos:line="57" pos:column="44"/></literal></expr>;<pos:position pos:line="57" pos:column="45"/></expr_stmt>
			}<pos:position pos:line="58" pos:column="26"/></block></then></if>
		}<pos:position pos:line="59" pos:column="18"/></block></then></if>
	}<pos:position pos:line="60" pos:column="10"/></block></for>

	<return pos:line="62" pos:column="9">return <expr><literal type="number" pos:line="62" pos:column="16">1<pos:position pos:line="62" pos:column="17"/></literal></expr>;<pos:position pos:line="62" pos:column="18"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

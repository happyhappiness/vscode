<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5859_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">record_person_from_buf<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">which<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">string_list<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">people<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
				   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">buffer<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">name_buf<pos:position pos:line="4" pos:column="23"/></name></decl>, <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="26">name<pos:position pos:line="4" pos:column="30"/></name></decl>, <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="33">name_end<pos:position pos:line="4" pos:column="41"/></name></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">string_list_item<pos:position pos:line="5" pos:column="32"/></name></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">elem<pos:position pos:line="5" pos:column="38"/></name></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">field<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">field<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <ternary><condition><expr><operator pos:line="8" pos:column="17">(<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">which<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">==<pos:position pos:line="8" pos:column="26"/></operator> <literal type="char" pos:line="8" pos:column="27">'a'<pos:position pos:line="8" pos:column="30"/></literal><operator pos:line="8" pos:column="30">)<pos:position pos:line="8" pos:column="31"/></operator></expr> ?<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33"> <expr><literal type="string" pos:line="8" pos:column="34">"\nauthor "<pos:position pos:line="8" pos:column="45"/></literal></expr> <pos:position pos:line="8" pos:column="46"/></then><else pos:line="8" pos:column="46">: <expr><literal type="string" pos:line="8" pos:column="48">"\ncommitter "<pos:position pos:line="8" pos:column="62"/></literal></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">name<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <call><name pos:line="9" pos:column="16">strstr<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">buffer<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="31">field<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">name<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19">
		<block type="pseudo"><return pos:line="11" pos:column="17">return;<pos:position pos:line="11" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="12" pos:column="9">name<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">+=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">strlen<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">field<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">name_end<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <call><name pos:line="13" pos:column="20">strchrnul<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">name<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="36">'&lt;'<pos:position pos:line="13" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">*<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">name_end<pos:position pos:line="14" pos:column="22"/></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">name_end<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">--<pos:position pos:line="15" pos:column="27"/></operator></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt></block></then></if>
	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><call><name pos:line="16" pos:column="16">isspace<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><operator pos:line="16" pos:column="24">*<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">name_end<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call> <operator pos:line="16" pos:column="35">&amp;&amp;<pos:position pos:line="16" pos:column="45"/></operator> <name pos:line="16" pos:column="38">name<pos:position pos:line="16" pos:column="42"/></name> <operator pos:line="16" pos:column="43">&lt;=<pos:position pos:line="16" pos:column="48"/></operator> <name pos:line="16" pos:column="46">name_end<pos:position pos:line="16" pos:column="54"/></name></expr>)<pos:position pos:line="16" pos:column="55"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">name_end<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">--<pos:position pos:line="17" pos:column="27"/></operator></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt></block></while>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">name_end<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">&lt;<pos:position pos:line="18" pos:column="26"/></operator> <name pos:line="18" pos:column="24">name<pos:position pos:line="18" pos:column="28"/></name></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
		<block type="pseudo"><return pos:line="19" pos:column="17">return;<pos:position pos:line="19" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="20" pos:column="9">name_buf<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <call><name pos:line="20" pos:column="20">xmemdupz<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">name<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">name_end<pos:position pos:line="20" pos:column="43"/></name> <operator pos:line="20" pos:column="44">-<pos:position pos:line="20" pos:column="45"/></operator> <name pos:line="20" pos:column="46">name<pos:position pos:line="20" pos:column="50"/></name> <operator pos:line="20" pos:column="51">+<pos:position pos:line="20" pos:column="52"/></operator> <literal type="number" pos:line="20" pos:column="53">1<pos:position pos:line="20" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="56"/></expr_stmt>

	<expr_stmt><expr><name pos:line="22" pos:column="9">elem<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">string_list_lookup<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">people<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="43">name_buf<pos:position pos:line="22" pos:column="51"/></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">elem<pos:position pos:line="23" pos:column="18"/></name></expr>)<pos:position pos:line="23" pos:column="19"/></condition><then pos:line="23" pos:column="19"> <block pos:line="23" pos:column="20">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">elem<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <call><name pos:line="24" pos:column="24">string_list_insert<pos:position pos:line="24" pos:column="42"/></name><argument_list pos:line="24" pos:column="42">(<argument><expr><name pos:line="24" pos:column="43">people<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">name_buf<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">elem<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">util<pos:position pos:line="25" pos:column="27"/></name></name> <operator pos:line="25" pos:column="28">=<pos:position pos:line="25" pos:column="29"/></operator> <operator pos:line="25" pos:column="30">(<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="31">void<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">*<pos:position pos:line="25" pos:column="37"/></operator><operator pos:line="25" pos:column="37">)<pos:position pos:line="25" pos:column="38"/></operator><literal type="number" pos:line="25" pos:column="38">0<pos:position pos:line="25" pos:column="39"/></literal></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">elem<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">util<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <operator pos:line="27" pos:column="22">(<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">void<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">*<pos:position pos:line="27" pos:column="28"/></operator><operator pos:line="27" pos:column="28">)<pos:position pos:line="27" pos:column="29"/></operator><operator pos:line="27" pos:column="29">(<pos:position pos:line="27" pos:column="30"/></operator><call><name pos:line="27" pos:column="30">util_as_integral<pos:position pos:line="27" pos:column="46"/></name><argument_list pos:line="27" pos:column="46">(<argument><expr><name pos:line="27" pos:column="47">elem<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call> <operator pos:line="27" pos:column="53">+<pos:position pos:line="27" pos:column="54"/></operator> <literal type="number" pos:line="27" pos:column="55">1<pos:position pos:line="27" pos:column="56"/></literal><operator pos:line="27" pos:column="56">)<pos:position pos:line="27" pos:column="57"/></operator></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">free<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument><expr><name pos:line="28" pos:column="14">name_buf<pos:position pos:line="28" pos:column="22"/></name></expr></argument>)<pos:position pos:line="28" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4441_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_blame_config<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">var<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">value<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">void<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">cb<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">strcmp<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">var<pos:position pos:line="3" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="26">"blame.showroot"<pos:position pos:line="3" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="44"/></condition><then pos:line="3" pos:column="44"> <block pos:line="3" pos:column="45">{
		<expr_stmt><expr><name pos:line="4" pos:column="17">show_root<pos:position pos:line="4" pos:column="26"/></name> <operator pos:line="4" pos:column="27">=<pos:position pos:line="4" pos:column="28"/></operator> <call><name pos:line="4" pos:column="29">git_config_bool<pos:position pos:line="4" pos:column="44"/></name><argument_list pos:line="4" pos:column="44">(<argument><expr><name pos:line="4" pos:column="45">var<pos:position pos:line="4" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="50">value<pos:position pos:line="4" pos:column="55"/></name></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="57"/></expr_stmt>
		<return pos:line="5" pos:column="17">return <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr>;<pos:position pos:line="5" pos:column="26"/></return>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">strcmp<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">var<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="26">"blame.blankboundary"<pos:position pos:line="7" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="49"/></condition><then pos:line="7" pos:column="49"> <block pos:line="7" pos:column="50">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">blank_boundary<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">=<pos:position pos:line="8" pos:column="33"/></operator> <call><name pos:line="8" pos:column="34">git_config_bool<pos:position pos:line="8" pos:column="49"/></name><argument_list pos:line="8" pos:column="49">(<argument><expr><name pos:line="8" pos:column="50">var<pos:position pos:line="8" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="55">value<pos:position pos:line="8" pos:column="60"/></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt>
		<return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">strcmp<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">var<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="26">"blame.showemail"<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="45"/></condition><then pos:line="11" pos:column="45"> <block pos:line="11" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">int<pos:position pos:line="12" pos:column="20"/></name> <modifier pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></modifier></type><name pos:line="12" pos:column="22">output_option<pos:position pos:line="12" pos:column="35"/></name> <init pos:line="12" pos:column="36">= <expr><name pos:line="12" pos:column="38">cb<pos:position pos:line="12" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="41"/></decl_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><call><name pos:line="13" pos:column="21">git_config_bool<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">var<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">value<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="49"/></condition><then pos:line="13" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">output_option<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">|=<pos:position pos:line="14" pos:column="42"/></operator> <name pos:line="14" pos:column="43">OUTPUT_SHOW_EMAIL<pos:position pos:line="14" pos:column="60"/></name></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt></block></then>
		<else pos:line="15" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><operator pos:line="16" pos:column="25">*<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">output_option<pos:position pos:line="16" pos:column="39"/></name> <operator pos:line="16" pos:column="40">&amp;=<pos:position pos:line="16" pos:column="46"/></operator> <operator pos:line="16" pos:column="43">~<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">OUTPUT_SHOW_EMAIL<pos:position pos:line="16" pos:column="61"/></name></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt></block></else></if>
		<return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">strcmp<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">var<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="26">"blame.date"<pos:position pos:line="19" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40"> <block pos:line="19" pos:column="41">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">value<pos:position pos:line="20" pos:column="27"/></name></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28">
			<block type="pseudo"><return pos:line="21" pos:column="25">return <expr><call><name pos:line="21" pos:column="32">config_error_nonbool<pos:position pos:line="21" pos:column="52"/></name><argument_list pos:line="21" pos:column="52">(<argument><expr><name pos:line="21" pos:column="53">var<pos:position pos:line="21" pos:column="56"/></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">parse_date_format<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">value<pos:position pos:line="22" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="42">&amp;<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="43">blame_date_mode<pos:position pos:line="22" pos:column="58"/></name></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="60"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">userdiff_config<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">var<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">value<pos:position pos:line="26" pos:column="39"/></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call> <operator pos:line="26" pos:column="41">&lt;<pos:position pos:line="26" pos:column="45"/></operator> <literal type="number" pos:line="26" pos:column="43">0<pos:position pos:line="26" pos:column="44"/></literal></expr>)<pos:position pos:line="26" pos:column="45"/></condition><then pos:line="26" pos:column="45">
		<block type="pseudo"><return pos:line="27" pos:column="17">return <expr><operator pos:line="27" pos:column="24">-<pos:position pos:line="27" pos:column="25"/></operator><literal type="number" pos:line="27" pos:column="25">1<pos:position pos:line="27" pos:column="26"/></literal></expr>;<pos:position pos:line="27" pos:column="27"/></return></block></then></if>

	<return pos:line="29" pos:column="9">return <expr><call><name pos:line="29" pos:column="16">git_default_config<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><name pos:line="29" pos:column="35">var<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="40">value<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="47">cb<pos:position pos:line="29" pos:column="49"/></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

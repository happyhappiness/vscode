<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5041_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">compare_ref_delta_bases<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">unsigned<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">sha1<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
				   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">unsigned<pos:position pos:line="2" pos:column="50"/></name> <name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">sha2<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
				   <parameter><decl><type><name><name pos:line="3" pos:column="36">enum<pos:position pos:line="3" pos:column="40"/></name> <name pos:line="3" pos:column="41">object_type<pos:position pos:line="3" pos:column="52"/></name></name></type> <name pos:line="3" pos:column="53">type1<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>,
				   <parameter><decl><type><name><name pos:line="4" pos:column="36">enum<pos:position pos:line="4" pos:column="40"/></name> <name pos:line="4" pos:column="41">object_type<pos:position pos:line="4" pos:column="52"/></name></name></type> <name pos:line="4" pos:column="53">type2<pos:position pos:line="4" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="59"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">cmp<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name pos:line="6" pos:column="19">type1<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">-<pos:position pos:line="6" pos:column="26"/></operator> <name pos:line="6" pos:column="27">type2<pos:position pos:line="6" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">cmp<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><name pos:line="8" pos:column="24">cmp<pos:position pos:line="8" pos:column="27"/></name></expr>;<pos:position pos:line="8" pos:column="28"/></return></block></then></if>
	<return pos:line="9" pos:column="9">return <expr><call><name pos:line="9" pos:column="16">hashcmp<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">sha1<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="30">sha2<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

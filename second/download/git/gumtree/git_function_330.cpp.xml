<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_330.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_out_one_reject<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">apply_state<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">state<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="60">struct<pos:position pos:line="1" pos:column="66"/></name> <name pos:line="1" pos:column="67">patch<pos:position pos:line="1" pos:column="72"/></name></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">patch<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">rej<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">namebuf<pos:position pos:line="4" pos:column="21"/></name><index pos:line="4" pos:column="21">[<expr><name pos:line="4" pos:column="22">PATH_MAX<pos:position pos:line="4" pos:column="30"/></name></expr>]<pos:position pos:line="4" pos:column="31"/></index></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">fragment<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">frag<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">cnt<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">sb<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">STRBUF_INIT<pos:position pos:line="7" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">cnt<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr><operator pos:line="9" pos:column="21">,<pos:position pos:line="9" pos:column="22"/></operator> <expr><name pos:line="9" pos:column="23">frag<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <name><name pos:line="9" pos:column="30">patch<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">fragments<pos:position pos:line="9" pos:column="46"/></name></name></expr>;<pos:position pos:line="9" pos:column="47"/></init> <condition><expr><name pos:line="9" pos:column="48">frag<pos:position pos:line="9" pos:column="52"/></name></expr>;<pos:position pos:line="9" pos:column="53"/></condition> <incr><expr><name pos:line="9" pos:column="54">frag<pos:position pos:line="9" pos:column="58"/></name> <operator pos:line="9" pos:column="59">=<pos:position pos:line="9" pos:column="60"/></operator> <name><name pos:line="9" pos:column="61">frag<pos:position pos:line="9" pos:column="65"/></name><operator pos:line="9" pos:column="65">-&gt;<pos:position pos:line="9" pos:column="70"/></operator><name pos:line="9" pos:column="67">next<pos:position pos:line="9" pos:column="71"/></name></name></expr></incr>)<pos:position pos:line="9" pos:column="72"/></control> <block pos:line="9" pos:column="73">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><name><name pos:line="10" pos:column="22">frag<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">rejected<pos:position pos:line="10" pos:column="36"/></name></name></expr>)<pos:position pos:line="10" pos:column="37"/></condition><then pos:line="10" pos:column="37">
			<block type="pseudo"><continue pos:line="11" pos:column="25">continue;<pos:position pos:line="11" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="12" pos:column="17">cnt<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">++<pos:position pos:line="12" pos:column="22"/></operator></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></for>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">cnt<pos:position pos:line="15" pos:column="17"/></name></expr>)<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18"> <block pos:line="15" pos:column="19">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">state<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">apply_verbosely<pos:position pos:line="16" pos:column="43"/></name></name></expr>)<pos:position pos:line="16" pos:column="44"/></condition><then pos:line="16" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">say_patch_name<pos:position pos:line="17" pos:column="39"/></name><argument_list pos:line="17" pos:column="39">(<argument><expr><name pos:line="17" pos:column="40">stderr<pos:position pos:line="17" pos:column="46"/></name></expr></argument>,
				       <argument><expr><call><name pos:line="18" pos:column="40">_<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">(<argument><expr><literal type="string" pos:line="18" pos:column="42">"Applied patch %s cleanly."<pos:position pos:line="18" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="72">patch<pos:position pos:line="18" pos:column="77"/></name></expr></argument>)<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="79"/></expr_stmt></block></then></if>
		<return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="22" pos:column="9">/* This should not happen, because a removal patch that leaves
	 * contents are marked "rejected" at the patch level.
	 */</comment>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><name><name pos:line="25" pos:column="14">patch<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">new_name<pos:position pos:line="25" pos:column="29"/></name></name></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">die<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><call><name pos:line="26" pos:column="21">_<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><literal type="string" pos:line="26" pos:column="23">"internal error"<pos:position pos:line="26" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="28" pos:column="9">/* Say this even without --verbose */</comment>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">strbuf_addf<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><operator pos:line="29" pos:column="21">&amp;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="22">sb<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="26">Q_<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">"Applying patch %%s with %d reject..."<pos:position pos:line="29" pos:column="67"/></literal></expr></argument>,
			    <argument><expr><literal type="string" pos:line="30" pos:column="29">"Applying patch %%s with %d rejects..."<pos:position pos:line="30" pos:column="68"/></literal></expr></argument>,
			    <argument><expr><name pos:line="31" pos:column="29">cnt<pos:position pos:line="31" pos:column="32"/></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr></argument>,
		    <argument><expr><name pos:line="32" pos:column="21">cnt<pos:position pos:line="32" pos:column="24"/></name></expr></argument>)<pos:position pos:line="32" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">say_patch_name<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">stderr<pos:position pos:line="33" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="32">sb<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">.<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="35">buf<pos:position pos:line="33" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="40">patch<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">strbuf_release<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><operator pos:line="34" pos:column="24">&amp;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="25">sb<pos:position pos:line="34" pos:column="27"/></name></expr></argument>)<pos:position pos:line="34" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><name pos:line="36" pos:column="9">cnt<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <call><name pos:line="36" pos:column="15">strlen<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name><name pos:line="36" pos:column="22">patch<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">new_name<pos:position pos:line="36" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">ARRAY_SIZE<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">namebuf<pos:position pos:line="37" pos:column="31"/></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call> <operator pos:line="37" pos:column="33">&lt;=<pos:position pos:line="37" pos:column="38"/></operator> <name pos:line="37" pos:column="36">cnt<pos:position pos:line="37" pos:column="39"/></name> <operator pos:line="37" pos:column="40">+<pos:position pos:line="37" pos:column="41"/></operator> <literal type="number" pos:line="37" pos:column="42">5<pos:position pos:line="37" pos:column="43"/></literal></expr>)<pos:position pos:line="37" pos:column="44"/></condition><then pos:line="37" pos:column="44"> <block pos:line="37" pos:column="45">{
		<expr_stmt><expr><name pos:line="38" pos:column="17">cnt<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <call><name pos:line="38" pos:column="23">ARRAY_SIZE<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">namebuf<pos:position pos:line="38" pos:column="41"/></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call> <operator pos:line="38" pos:column="43">-<pos:position pos:line="38" pos:column="44"/></operator> <literal type="number" pos:line="38" pos:column="45">5<pos:position pos:line="38" pos:column="46"/></literal></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">warning<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><call><name pos:line="39" pos:column="25">_<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><literal type="string" pos:line="39" pos:column="27">"truncating .rej filename to %.*s.rej"<pos:position pos:line="39" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="40" pos:column="25">cnt<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">-<pos:position pos:line="40" pos:column="30"/></operator> <literal type="number" pos:line="40" pos:column="31">1<pos:position pos:line="40" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="34">patch<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">-&gt;<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="41">new_name<pos:position pos:line="40" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">memcpy<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">namebuf<pos:position pos:line="42" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="25">patch<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">-&gt;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="32">new_name<pos:position pos:line="42" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="42">cnt<pos:position pos:line="42" pos:column="45"/></name></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">memcpy<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><name pos:line="43" pos:column="16">namebuf<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">+<pos:position pos:line="43" pos:column="25"/></operator> <name pos:line="43" pos:column="26">cnt<pos:position pos:line="43" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="31">".rej"<pos:position pos:line="43" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="39">5<pos:position pos:line="43" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><name pos:line="45" pos:column="9">rej<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <call><name pos:line="45" pos:column="15">fopen<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><name pos:line="45" pos:column="21">namebuf<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="30">"w"<pos:position pos:line="45" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">!<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">rej<pos:position pos:line="46" pos:column="17"/></name></expr>)<pos:position pos:line="46" pos:column="18"/></condition><then pos:line="46" pos:column="18">
		<block type="pseudo"><return pos:line="47" pos:column="17">return <expr><call><name pos:line="47" pos:column="24">error<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><call><name pos:line="47" pos:column="30">_<pos:position pos:line="47" pos:column="31"/></name><argument_list pos:line="47" pos:column="31">(<argument><expr><literal type="string" pos:line="47" pos:column="32">"cannot open %s: %s"<pos:position pos:line="47" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="47" pos:column="55">namebuf<pos:position pos:line="47" pos:column="62"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="64">strerror<pos:position pos:line="47" pos:column="72"/></name><argument_list pos:line="47" pos:column="72">(<argument><expr><name pos:line="47" pos:column="73">errno<pos:position pos:line="47" pos:column="78"/></name></expr></argument>)<pos:position pos:line="47" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="81"/></return></block></then></if>

	<comment type="block" pos:line="49" pos:column="9">/* Normal git tools never deal with .rej, so do not pretend
	 * this is a git patch by saying --git or giving extended
	 * headers.  While at it, maybe please "kompare" that wants
	 * the trailing TAB and some garbage at the end of line ;-).
	 */</comment>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">fprintf<pos:position pos:line="54" pos:column="16"/></name><argument_list pos:line="54" pos:column="16">(<argument><expr><name pos:line="54" pos:column="17">rej<pos:position pos:line="54" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="22">"diff a/%s b/%s\t(rejected hunks)\n"<pos:position pos:line="54" pos:column="58"/></literal></expr></argument>,
		<argument><expr><name><name pos:line="55" pos:column="17">patch<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">-&gt;<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="24">new_name<pos:position pos:line="55" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="34">patch<pos:position pos:line="55" pos:column="39"/></name><operator pos:line="55" pos:column="39">-&gt;<pos:position pos:line="55" pos:column="44"/></operator><name pos:line="55" pos:column="41">new_name<pos:position pos:line="55" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="51"/></expr_stmt>
	<for pos:line="56" pos:column="9">for <control pos:line="56" pos:column="13">(<init><expr><name pos:line="56" pos:column="14">cnt<pos:position pos:line="56" pos:column="17"/></name> <operator pos:line="56" pos:column="18">=<pos:position pos:line="56" pos:column="19"/></operator> <literal type="number" pos:line="56" pos:column="20">1<pos:position pos:line="56" pos:column="21"/></literal></expr><operator pos:line="56" pos:column="21">,<pos:position pos:line="56" pos:column="22"/></operator> <expr><name pos:line="56" pos:column="23">frag<pos:position pos:line="56" pos:column="27"/></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <name><name pos:line="56" pos:column="30">patch<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">-&gt;<pos:position pos:line="56" pos:column="40"/></operator><name pos:line="56" pos:column="37">fragments<pos:position pos:line="56" pos:column="46"/></name></name></expr>;<pos:position pos:line="56" pos:column="47"/></init>
	     <condition><expr><name pos:line="57" pos:column="14">frag<pos:position pos:line="57" pos:column="18"/></name></expr>;<pos:position pos:line="57" pos:column="19"/></condition>
	     <incr><expr><name pos:line="58" pos:column="14">cnt<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">++<pos:position pos:line="58" pos:column="19"/></operator></expr><operator pos:line="58" pos:column="19">,<pos:position pos:line="58" pos:column="20"/></operator> <expr><name pos:line="58" pos:column="21">frag<pos:position pos:line="58" pos:column="25"/></name> <operator pos:line="58" pos:column="26">=<pos:position pos:line="58" pos:column="27"/></operator> <name><name pos:line="58" pos:column="28">frag<pos:position pos:line="58" pos:column="32"/></name><operator pos:line="58" pos:column="32">-&gt;<pos:position pos:line="58" pos:column="37"/></operator><name pos:line="58" pos:column="34">next<pos:position pos:line="58" pos:column="38"/></name></name></expr></incr>)<pos:position pos:line="58" pos:column="39"/></control> <block pos:line="58" pos:column="40">{
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><operator pos:line="59" pos:column="21">!<pos:position pos:line="59" pos:column="22"/></operator><name><name pos:line="59" pos:column="22">frag<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">-&gt;<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="28">rejected<pos:position pos:line="59" pos:column="36"/></name></name></expr>)<pos:position pos:line="59" pos:column="37"/></condition><then pos:line="59" pos:column="37"> <block pos:line="59" pos:column="38">{
			<expr_stmt><expr><call><name pos:line="60" pos:column="25">fprintf_ln<pos:position pos:line="60" pos:column="35"/></name><argument_list pos:line="60" pos:column="35">(<argument><expr><name pos:line="60" pos:column="36">stderr<pos:position pos:line="60" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="44">_<pos:position pos:line="60" pos:column="45"/></name><argument_list pos:line="60" pos:column="45">(<argument><expr><literal type="string" pos:line="60" pos:column="46">"Hunk #%d applied cleanly."<pos:position pos:line="60" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="60" pos:column="76">cnt<pos:position pos:line="60" pos:column="79"/></name></expr></argument>)<pos:position pos:line="60" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="81"/></expr_stmt>
			<continue pos:line="61" pos:column="25">continue;<pos:position pos:line="61" pos:column="34"/></continue>
		}<pos:position pos:line="62" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">fprintf_ln<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><name pos:line="63" pos:column="28">stderr<pos:position pos:line="63" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="36">_<pos:position pos:line="63" pos:column="37"/></name><argument_list pos:line="63" pos:column="37">(<argument><expr><literal type="string" pos:line="63" pos:column="38">"Rejected hunk #%d."<pos:position pos:line="63" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="63" pos:column="61">cnt<pos:position pos:line="63" pos:column="64"/></name></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="64" pos:column="17">fprintf<pos:position pos:line="64" pos:column="24"/></name><argument_list pos:line="64" pos:column="24">(<argument><expr><name pos:line="64" pos:column="25">rej<pos:position pos:line="64" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="30">"%.*s"<pos:position pos:line="64" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="38">frag<pos:position pos:line="64" pos:column="42"/></name><operator pos:line="64" pos:column="42">-&gt;<pos:position pos:line="64" pos:column="47"/></operator><name pos:line="64" pos:column="44">size<pos:position pos:line="64" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="50">frag<pos:position pos:line="64" pos:column="54"/></name><operator pos:line="64" pos:column="54">-&gt;<pos:position pos:line="64" pos:column="59"/></operator><name pos:line="64" pos:column="56">patch<pos:position pos:line="64" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="63"/></expr_stmt>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name><name pos:line="65" pos:column="21">frag<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">-&gt;<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="27">patch<pos:position pos:line="65" pos:column="32"/></name><index pos:line="65" pos:column="32">[<expr><name><name pos:line="65" pos:column="33">frag<pos:position pos:line="65" pos:column="37"/></name><operator pos:line="65" pos:column="37">-&gt;<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="39">size<pos:position pos:line="65" pos:column="43"/></name></name><operator pos:line="65" pos:column="43">-<pos:position pos:line="65" pos:column="44"/></operator><literal type="number" pos:line="65" pos:column="44">1<pos:position pos:line="65" pos:column="45"/></literal></expr>]<pos:position pos:line="65" pos:column="46"/></index></name> <operator pos:line="65" pos:column="47">!=<pos:position pos:line="65" pos:column="49"/></operator> <literal type="char" pos:line="65" pos:column="50">'\n'<pos:position pos:line="65" pos:column="54"/></literal></expr>)<pos:position pos:line="65" pos:column="55"/></condition><then pos:line="65" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="25">fputc<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><literal type="char" pos:line="66" pos:column="31">'\n'<pos:position pos:line="66" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="37">rej<pos:position pos:line="66" pos:column="40"/></name></expr></argument>)<pos:position pos:line="66" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="42"/></expr_stmt></block></then></if>
	}<pos:position pos:line="67" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">fclose<pos:position pos:line="68" pos:column="15"/></name><argument_list pos:line="68" pos:column="15">(<argument><expr><name pos:line="68" pos:column="16">rej<pos:position pos:line="68" pos:column="19"/></name></expr></argument>)<pos:position pos:line="68" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="21"/></expr_stmt>
	<return pos:line="69" pos:column="9">return <expr><operator pos:line="69" pos:column="16">-<pos:position pos:line="69" pos:column="17"/></operator><literal type="number" pos:line="69" pos:column="17">1<pos:position pos:line="69" pos:column="18"/></literal></expr>;<pos:position pos:line="69" pos:column="19"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

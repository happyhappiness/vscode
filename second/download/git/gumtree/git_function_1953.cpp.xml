<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1953.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">branch_get_push_1<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">branch<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">branch<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="61">struct<pos:position pos:line="1" pos:column="67"/></name> <name pos:line="1" pos:column="68">strbuf<pos:position pos:line="1" pos:column="74"/></name></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">err<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">remote<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">remote<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">branch<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><call><name pos:line="6" pos:column="24">error_buf<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name pos:line="6" pos:column="34">err<pos:position pos:line="6" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="39">_<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">(<argument><expr><literal type="string" pos:line="6" pos:column="41">"HEAD does not point to a branch"<pos:position pos:line="6" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="77"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="8" pos:column="9">remote<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">remote_get<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><call><name pos:line="8" pos:column="29">pushremote_for_branch<pos:position pos:line="8" pos:column="50"/></name><argument_list pos:line="8" pos:column="50">(<argument><expr><name pos:line="8" pos:column="51">branch<pos:position pos:line="8" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="59">NULL<pos:position pos:line="8" pos:column="63"/></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="66"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">remote<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><call><name pos:line="10" pos:column="24">error_buf<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">err<pos:position pos:line="10" pos:column="37"/></name></expr></argument>,
				 <argument><expr><call><name pos:line="11" pos:column="34">_<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><literal type="string" pos:line="11" pos:column="36">"branch '%s' has no remote for pushing"<pos:position pos:line="11" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr></argument>,
				 <argument><expr><name><name pos:line="12" pos:column="34">branch<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">-&gt;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="42">name<pos:position pos:line="12" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></return></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">remote<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">push_refspec_nr<pos:position pos:line="14" pos:column="36"/></name></name></expr>)<pos:position pos:line="14" pos:column="37"/></condition><then pos:line="14" pos:column="37"> <block pos:line="14" pos:column="38">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">char<pos:position pos:line="15" pos:column="21"/></name> <modifier pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></modifier></type><name pos:line="15" pos:column="23">dst<pos:position pos:line="15" pos:column="26"/></name></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="16" pos:column="17">const<pos:position pos:line="16" pos:column="22"/></specifier> <name pos:line="16" pos:column="23">char<pos:position pos:line="16" pos:column="27"/></name> <modifier pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></modifier></type><name pos:line="16" pos:column="29">ret<pos:position pos:line="16" pos:column="32"/></name></decl>;<pos:position pos:line="16" pos:column="33"/></decl_stmt>

		<expr_stmt><expr><name pos:line="18" pos:column="17">dst<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <call><name pos:line="18" pos:column="23">apply_refspecs<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name><name pos:line="18" pos:column="38">remote<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">-&gt;<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="46">push<pos:position pos:line="18" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="52">remote<pos:position pos:line="18" pos:column="58"/></name><operator pos:line="18" pos:column="58">-&gt;<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="60">push_refspec_nr<pos:position pos:line="18" pos:column="75"/></name></name></expr></argument>,
				     <argument><expr><name><name pos:line="19" pos:column="38">branch<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">-&gt;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="46">refname<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">dst<pos:position pos:line="20" pos:column="25"/></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26">
			<block type="pseudo"><return pos:line="21" pos:column="25">return <expr><call><name pos:line="21" pos:column="32">error_buf<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><expr><name pos:line="21" pos:column="42">err<pos:position pos:line="21" pos:column="45"/></name></expr></argument>,
					 <argument><expr><call><name pos:line="22" pos:column="42">_<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><literal type="string" pos:line="22" pos:column="44">"push refspecs for '%s' do not include '%s'"<pos:position pos:line="22" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="89"/></argument_list></call></expr></argument>,
					 <argument><expr><name><name pos:line="23" pos:column="42">remote<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">-&gt;<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="50">name<pos:position pos:line="23" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="56">branch<pos:position pos:line="23" pos:column="62"/></name><operator pos:line="23" pos:column="62">-&gt;<pos:position pos:line="23" pos:column="67"/></operator><name pos:line="23" pos:column="64">name<pos:position pos:line="23" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="70"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="25" pos:column="17">ret<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="23">tracking_for_push_dest<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><name pos:line="25" pos:column="46">remote<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">dst<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="59">err<pos:position pos:line="25" pos:column="62"/></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">free<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">dst<pos:position pos:line="26" pos:column="25"/></name></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
		<return pos:line="27" pos:column="17">return <expr><name pos:line="27" pos:column="24">ret<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">remote<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">mirror<pos:position pos:line="30" pos:column="27"/></name></name></expr>)<pos:position pos:line="30" pos:column="28"/></condition><then pos:line="30" pos:column="28">
		<block type="pseudo"><return pos:line="31" pos:column="17">return <expr><call><name pos:line="31" pos:column="24">tracking_for_push_dest<pos:position pos:line="31" pos:column="46"/></name><argument_list pos:line="31" pos:column="46">(<argument><expr><name pos:line="31" pos:column="47">remote<pos:position pos:line="31" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="55">branch<pos:position pos:line="31" pos:column="61"/></name><operator pos:line="31" pos:column="61">-&gt;<pos:position pos:line="31" pos:column="66"/></operator><name pos:line="31" pos:column="63">refname<pos:position pos:line="31" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="72">err<pos:position pos:line="31" pos:column="75"/></name></expr></argument>)<pos:position pos:line="31" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="77"/></return></block></then></if>

	<switch pos:line="33" pos:column="9">switch <condition pos:line="33" pos:column="16">(<expr><name pos:line="33" pos:column="17">push_default<pos:position pos:line="33" pos:column="29"/></name></expr>)<pos:position pos:line="33" pos:column="30"/></condition> <block pos:line="33" pos:column="31">{
	<case pos:line="34" pos:column="9">case <expr><name pos:line="34" pos:column="14">PUSH_DEFAULT_NOTHING<pos:position pos:line="34" pos:column="34"/></name></expr>:<pos:position pos:line="34" pos:column="35"/></case>
		<return pos:line="35" pos:column="17">return <expr><call><name pos:line="35" pos:column="24">error_buf<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">err<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="39">_<pos:position pos:line="35" pos:column="40"/></name><argument_list pos:line="35" pos:column="40">(<argument><expr><literal type="string" pos:line="35" pos:column="41">"push has no destination (push.default is 'nothing')"<pos:position pos:line="35" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="97"/></return>

	<case pos:line="37" pos:column="9">case <expr><name pos:line="37" pos:column="14">PUSH_DEFAULT_MATCHING<pos:position pos:line="37" pos:column="35"/></name></expr>:<pos:position pos:line="37" pos:column="36"/></case>
	<case pos:line="38" pos:column="9">case <expr><name pos:line="38" pos:column="14">PUSH_DEFAULT_CURRENT<pos:position pos:line="38" pos:column="34"/></name></expr>:<pos:position pos:line="38" pos:column="35"/></case>
		<return pos:line="39" pos:column="17">return <expr><call><name pos:line="39" pos:column="24">tracking_for_push_dest<pos:position pos:line="39" pos:column="46"/></name><argument_list pos:line="39" pos:column="46">(<argument><expr><name pos:line="39" pos:column="47">remote<pos:position pos:line="39" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="55">branch<pos:position pos:line="39" pos:column="61"/></name><operator pos:line="39" pos:column="61">-&gt;<pos:position pos:line="39" pos:column="66"/></operator><name pos:line="39" pos:column="63">refname<pos:position pos:line="39" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="72">err<pos:position pos:line="39" pos:column="75"/></name></expr></argument>)<pos:position pos:line="39" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="77"/></return>

	<case pos:line="41" pos:column="9">case <expr><name pos:line="41" pos:column="14">PUSH_DEFAULT_UPSTREAM<pos:position pos:line="41" pos:column="35"/></name></expr>:<pos:position pos:line="41" pos:column="36"/></case>
		<return pos:line="42" pos:column="17">return <expr><call><name pos:line="42" pos:column="24">branch_get_upstream<pos:position pos:line="42" pos:column="43"/></name><argument_list pos:line="42" pos:column="43">(<argument><expr><name pos:line="42" pos:column="44">branch<pos:position pos:line="42" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="52">err<pos:position pos:line="42" pos:column="55"/></name></expr></argument>)<pos:position pos:line="42" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="57"/></return>

	<case pos:line="44" pos:column="9">case <expr><name pos:line="44" pos:column="14">PUSH_DEFAULT_UNSPECIFIED<pos:position pos:line="44" pos:column="38"/></name></expr>:<pos:position pos:line="44" pos:column="39"/></case>
	<case pos:line="45" pos:column="9">case <expr><name pos:line="45" pos:column="14">PUSH_DEFAULT_SIMPLE<pos:position pos:line="45" pos:column="33"/></name></expr>:<pos:position pos:line="45" pos:column="34"/></case>
		<block pos:line="46" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="47" pos:column="25">const<pos:position pos:line="47" pos:column="30"/></specifier> <name pos:line="47" pos:column="31">char<pos:position pos:line="47" pos:column="35"/></name> <modifier pos:line="47" pos:column="36">*<pos:position pos:line="47" pos:column="37"/></modifier></type><name pos:line="47" pos:column="37">up<pos:position pos:line="47" pos:column="39"/></name></decl>, <modifier pos:line="47" pos:column="41">*<pos:position pos:line="47" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="47" pos:column="42">cur<pos:position pos:line="47" pos:column="45"/></name></decl>;<pos:position pos:line="47" pos:column="46"/></decl_stmt>

			<expr_stmt><expr><name pos:line="49" pos:column="25">up<pos:position pos:line="49" pos:column="27"/></name> <operator pos:line="49" pos:column="28">=<pos:position pos:line="49" pos:column="29"/></operator> <call><name pos:line="49" pos:column="30">branch_get_upstream<pos:position pos:line="49" pos:column="49"/></name><argument_list pos:line="49" pos:column="49">(<argument><expr><name pos:line="49" pos:column="50">branch<pos:position pos:line="49" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="58">err<pos:position pos:line="49" pos:column="61"/></name></expr></argument>)<pos:position pos:line="49" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="63"/></expr_stmt>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><operator pos:line="50" pos:column="29">!<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="30">up<pos:position pos:line="50" pos:column="32"/></name></expr>)<pos:position pos:line="50" pos:column="33"/></condition><then pos:line="50" pos:column="33">
				<block type="pseudo"><return pos:line="51" pos:column="33">return <expr><name pos:line="51" pos:column="40">NULL<pos:position pos:line="51" pos:column="44"/></name></expr>;<pos:position pos:line="51" pos:column="45"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="52" pos:column="25">cur<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">=<pos:position pos:line="52" pos:column="30"/></operator> <call><name pos:line="52" pos:column="31">tracking_for_push_dest<pos:position pos:line="52" pos:column="53"/></name><argument_list pos:line="52" pos:column="53">(<argument><expr><name pos:line="52" pos:column="54">remote<pos:position pos:line="52" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="62">branch<pos:position pos:line="52" pos:column="68"/></name><operator pos:line="52" pos:column="68">-&gt;<pos:position pos:line="52" pos:column="73"/></operator><name pos:line="52" pos:column="70">refname<pos:position pos:line="52" pos:column="77"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="79">err<pos:position pos:line="52" pos:column="82"/></name></expr></argument>)<pos:position pos:line="52" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="84"/></expr_stmt>
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><operator pos:line="53" pos:column="29">!<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="30">cur<pos:position pos:line="53" pos:column="33"/></name></expr>)<pos:position pos:line="53" pos:column="34"/></condition><then pos:line="53" pos:column="34">
				<block type="pseudo"><return pos:line="54" pos:column="33">return <expr><name pos:line="54" pos:column="40">NULL<pos:position pos:line="54" pos:column="44"/></name></expr>;<pos:position pos:line="54" pos:column="45"/></return></block></then></if>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><call><name pos:line="55" pos:column="29">strcmp<pos:position pos:line="55" pos:column="35"/></name><argument_list pos:line="55" pos:column="35">(<argument><expr><name pos:line="55" pos:column="36">cur<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="41">up<pos:position pos:line="55" pos:column="43"/></name></expr></argument>)<pos:position pos:line="55" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="45"/></condition><then pos:line="55" pos:column="45">
				<block type="pseudo"><return pos:line="56" pos:column="33">return <expr><call><name pos:line="56" pos:column="40">error_buf<pos:position pos:line="56" pos:column="49"/></name><argument_list pos:line="56" pos:column="49">(<argument><expr><name pos:line="56" pos:column="50">err<pos:position pos:line="56" pos:column="53"/></name></expr></argument>,
						 <argument><expr><call><name pos:line="57" pos:column="50">_<pos:position pos:line="57" pos:column="51"/></name><argument_list pos:line="57" pos:column="51">(<argument><expr><literal type="string" pos:line="57" pos:column="52">"cannot resolve 'simple' push to a single destination"<pos:position pos:line="57" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="107"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="109"/></return></block></then></if>
			<return pos:line="58" pos:column="25">return <expr><name pos:line="58" pos:column="32">cur<pos:position pos:line="58" pos:column="35"/></name></expr>;<pos:position pos:line="58" pos:column="36"/></return>
		}<pos:position pos:line="59" pos:column="18"/></block>
	}<pos:position pos:line="60" pos:column="10"/></block></switch>

	<expr_stmt><expr><call><name pos:line="62" pos:column="9">die<pos:position pos:line="62" pos:column="12"/></name><argument_list pos:line="62" pos:column="12">(<argument><expr><literal type="string" pos:line="62" pos:column="13">"BUG: unhandled push situation"<pos:position pos:line="62" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="46"/></expr_stmt>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

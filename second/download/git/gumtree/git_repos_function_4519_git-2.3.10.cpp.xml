<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4519_git-2.3.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_ce_entry<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">tag<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">cache_entry<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">ce<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">len<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">max_prefix_len<pos:position pos:line="3" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">&gt;=<pos:position pos:line="5" pos:column="22"/></operator> <call><name pos:line="5" pos:column="20">ce_namelen<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><name pos:line="5" pos:column="31">ce<pos:position pos:line="5" pos:column="33"/></name></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">die<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"git ls-files: internal error - cache entry not superset of prefix"<pos:position pos:line="6" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="90"/></expr_stmt></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">match_pathspec<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><operator pos:line="8" pos:column="29">&amp;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="30">pathspec<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="40">ce<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">-&gt;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="44">name<pos:position pos:line="8" pos:column="48"/></name></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="50">ce_namelen<pos:position pos:line="8" pos:column="60"/></name><argument_list pos:line="8" pos:column="60">(<argument><expr><name pos:line="8" pos:column="61">ce<pos:position pos:line="8" pos:column="63"/></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="9" pos:column="29">len<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">ps_matched<pos:position pos:line="9" pos:column="44"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="10" pos:column="29">S_ISDIR<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">(<argument><expr><name><name pos:line="10" pos:column="37">ce<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">ce_mode<pos:position pos:line="10" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call> <operator pos:line="10" pos:column="50">||<pos:position pos:line="10" pos:column="52"/></operator> <call><name pos:line="10" pos:column="53">S_ISGITLINK<pos:position pos:line="10" pos:column="64"/></name><argument_list pos:line="10" pos:column="64">(<argument><expr><name><name pos:line="10" pos:column="65">ce<pos:position pos:line="10" pos:column="67"/></name><operator pos:line="10" pos:column="67">-&gt;<pos:position pos:line="10" pos:column="72"/></operator><name pos:line="10" pos:column="69">ce_mode<pos:position pos:line="10" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="79"/></condition><then pos:line="10" pos:column="79">
		<block type="pseudo"><return pos:line="11" pos:column="17">return;<pos:position pos:line="11" pos:column="24"/></return></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">tag<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">&amp;&amp;<pos:position pos:line="13" pos:column="27"/></operator> <operator pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">tag<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">&amp;&amp;<pos:position pos:line="13" pos:column="35"/></operator> <name pos:line="13" pos:column="28">show_valid_bit<pos:position pos:line="13" pos:column="42"/></name> <operator pos:line="13" pos:column="43">&amp;&amp;<pos:position pos:line="13" pos:column="53"/></operator>
	    <operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><name><name pos:line="14" pos:column="14">ce<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">ce_flags<pos:position pos:line="14" pos:column="26"/></name></name> <operator pos:line="14" pos:column="27">&amp;<pos:position pos:line="14" pos:column="32"/></operator> <name pos:line="14" pos:column="29">CE_VALID<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">)<pos:position pos:line="14" pos:column="38"/></operator></expr>)<pos:position pos:line="14" pos:column="39"/></condition><then pos:line="14" pos:column="39"> <block pos:line="14" pos:column="40">{
		<decl_stmt><decl><specifier pos:line="15" pos:column="17">static<pos:position pos:line="15" pos:column="23"/></specifier> <type><name pos:line="15" pos:column="24">char<pos:position pos:line="15" pos:column="28"/></name></type> <name><name pos:line="15" pos:column="29">alttag<pos:position pos:line="15" pos:column="35"/></name><index pos:line="15" pos:column="35">[<expr><literal type="number" pos:line="15" pos:column="36">4<pos:position pos:line="15" pos:column="37"/></literal></expr>]<pos:position pos:line="15" pos:column="38"/></index></name></decl>;<pos:position pos:line="15" pos:column="39"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">memcpy<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">alttag<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="32">tag<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="37">3<pos:position pos:line="16" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">isalpha<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name><name pos:line="17" pos:column="29">tag<pos:position pos:line="17" pos:column="32"/></name><index pos:line="17" pos:column="32">[<expr><literal type="number" pos:line="17" pos:column="33">0<pos:position pos:line="17" pos:column="34"/></literal></expr>]<pos:position pos:line="17" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="37"/></condition><then pos:line="17" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="25">alttag<pos:position pos:line="18" pos:column="31"/></name><index pos:line="18" pos:column="31">[<expr><literal type="number" pos:line="18" pos:column="32">0<pos:position pos:line="18" pos:column="33"/></literal></expr>]<pos:position pos:line="18" pos:column="34"/></index></name> <operator pos:line="18" pos:column="35">=<pos:position pos:line="18" pos:column="36"/></operator> <call><name pos:line="18" pos:column="37">tolower<pos:position pos:line="18" pos:column="44"/></name><argument_list pos:line="18" pos:column="44">(<argument><expr><name><name pos:line="18" pos:column="45">tag<pos:position pos:line="18" pos:column="48"/></name><index pos:line="18" pos:column="48">[<expr><literal type="number" pos:line="18" pos:column="49">0<pos:position pos:line="18" pos:column="50"/></literal></expr>]<pos:position pos:line="18" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt></block></then>
		<elseif pos:line="19" pos:column="17">else <if pos:line="19" pos:column="22">if <condition pos:line="19" pos:column="25">(<expr><name><name pos:line="19" pos:column="26">tag<pos:position pos:line="19" pos:column="29"/></name><index pos:line="19" pos:column="29">[<expr><literal type="number" pos:line="19" pos:column="30">0<pos:position pos:line="19" pos:column="31"/></literal></expr>]<pos:position pos:line="19" pos:column="32"/></index></name> <operator pos:line="19" pos:column="33">==<pos:position pos:line="19" pos:column="35"/></operator> <literal type="char" pos:line="19" pos:column="36">'?'<pos:position pos:line="19" pos:column="39"/></literal></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="25">alttag<pos:position pos:line="20" pos:column="31"/></name><index pos:line="20" pos:column="31">[<expr><literal type="number" pos:line="20" pos:column="32">0<pos:position pos:line="20" pos:column="33"/></literal></expr>]<pos:position pos:line="20" pos:column="34"/></index></name> <operator pos:line="20" pos:column="35">=<pos:position pos:line="20" pos:column="36"/></operator> <literal type="char" pos:line="20" pos:column="37">'!'<pos:position pos:line="20" pos:column="40"/></literal></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt></block></then></if></elseif>
		<else pos:line="21" pos:column="17">else <block pos:line="21" pos:column="22">{
			<expr_stmt><expr><name><name pos:line="22" pos:column="25">alttag<pos:position pos:line="22" pos:column="31"/></name><index pos:line="22" pos:column="31">[<expr><literal type="number" pos:line="22" pos:column="32">0<pos:position pos:line="22" pos:column="33"/></literal></expr>]<pos:position pos:line="22" pos:column="34"/></index></name> <operator pos:line="22" pos:column="35">=<pos:position pos:line="22" pos:column="36"/></operator> <literal type="char" pos:line="22" pos:column="37">'v'<pos:position pos:line="22" pos:column="40"/></literal></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="23" pos:column="25">alttag<pos:position pos:line="23" pos:column="31"/></name><index pos:line="23" pos:column="31">[<expr><literal type="number" pos:line="23" pos:column="32">1<pos:position pos:line="23" pos:column="33"/></literal></expr>]<pos:position pos:line="23" pos:column="34"/></index></name> <operator pos:line="23" pos:column="35">=<pos:position pos:line="23" pos:column="36"/></operator> <name><name pos:line="23" pos:column="37">tag<pos:position pos:line="23" pos:column="40"/></name><index pos:line="23" pos:column="40">[<expr><literal type="number" pos:line="23" pos:column="41">0<pos:position pos:line="23" pos:column="42"/></literal></expr>]<pos:position pos:line="23" pos:column="43"/></index></name></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="24" pos:column="25">alttag<pos:position pos:line="24" pos:column="31"/></name><index pos:line="24" pos:column="31">[<expr><literal type="number" pos:line="24" pos:column="32">2<pos:position pos:line="24" pos:column="33"/></literal></expr>]<pos:position pos:line="24" pos:column="34"/></index></name> <operator pos:line="24" pos:column="35">=<pos:position pos:line="24" pos:column="36"/></operator> <literal type="char" pos:line="24" pos:column="37">' '<pos:position pos:line="24" pos:column="40"/></literal></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="25" pos:column="25">alttag<pos:position pos:line="25" pos:column="31"/></name><index pos:line="25" pos:column="31">[<expr><literal type="number" pos:line="25" pos:column="32">3<pos:position pos:line="25" pos:column="33"/></literal></expr>]<pos:position pos:line="25" pos:column="34"/></index></name> <operator pos:line="25" pos:column="35">=<pos:position pos:line="25" pos:column="36"/></operator> <literal type="number" pos:line="25" pos:column="37">0<pos:position pos:line="25" pos:column="38"/></literal></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="27" pos:column="17">tag<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="23">alttag<pos:position pos:line="27" pos:column="29"/></name></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">show_stage<pos:position pos:line="30" pos:column="24"/></name></expr>)<pos:position pos:line="30" pos:column="25"/></condition><then pos:line="30" pos:column="25"> <block pos:line="30" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">fputs<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">tag<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="28">stdout<pos:position pos:line="31" pos:column="34"/></name></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></then> <else pos:line="32" pos:column="11">else <block pos:line="32" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">printf<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><literal type="string" pos:line="33" pos:column="24">"%s%06o %s %d\t"<pos:position pos:line="33" pos:column="40"/></literal></expr></argument>,
		       <argument><expr><name pos:line="34" pos:column="24">tag<pos:position pos:line="34" pos:column="27"/></name></expr></argument>,
		       <argument><expr><name><name pos:line="35" pos:column="24">ce<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">-&gt;<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="28">ce_mode<pos:position pos:line="35" pos:column="35"/></name></name></expr></argument>,
		       <argument><expr><call><name pos:line="36" pos:column="24">find_unique_abbrev<pos:position pos:line="36" pos:column="42"/></name><argument_list pos:line="36" pos:column="42">(<argument><expr><name><name pos:line="36" pos:column="43">ce<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">-&gt;<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="47">sha1<pos:position pos:line="36" pos:column="51"/></name></name></expr></argument>,<argument><expr><name pos:line="36" pos:column="52">abbrev<pos:position pos:line="36" pos:column="58"/></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr></argument>,
		       <argument><expr><call><name pos:line="37" pos:column="24">ce_stage<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">ce<pos:position pos:line="37" pos:column="35"/></name></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">write_name<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><name><name pos:line="39" pos:column="20">ce<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">name<pos:position pos:line="39" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">debug_mode<pos:position pos:line="40" pos:column="23"/></name></expr>)<pos:position pos:line="40" pos:column="24"/></condition><then pos:line="40" pos:column="24"> <block pos:line="40" pos:column="25">{
		<decl_stmt><decl><type><specifier pos:line="41" pos:column="17">const<pos:position pos:line="41" pos:column="22"/></specifier> <name><name pos:line="41" pos:column="23">struct<pos:position pos:line="41" pos:column="29"/></name> <name pos:line="41" pos:column="30">stat_data<pos:position pos:line="41" pos:column="39"/></name></name> <modifier pos:line="41" pos:column="40">*<pos:position pos:line="41" pos:column="41"/></modifier></type><name pos:line="41" pos:column="41">sd<pos:position pos:line="41" pos:column="43"/></name> <init pos:line="41" pos:column="44">= <expr><operator pos:line="41" pos:column="46">&amp;<pos:position pos:line="41" pos:column="51"/></operator><name><name pos:line="41" pos:column="47">ce<pos:position pos:line="41" pos:column="49"/></name><operator pos:line="41" pos:column="49">-&gt;<pos:position pos:line="41" pos:column="54"/></operator><name pos:line="41" pos:column="51">ce_stat_data<pos:position pos:line="41" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="41" pos:column="64"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="43" pos:column="17">printf<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><literal type="string" pos:line="43" pos:column="24">"  ctime: %d:%d\n"<pos:position pos:line="43" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="44">sd<pos:position pos:line="43" pos:column="46"/></name><operator pos:line="43" pos:column="46">-&gt;<pos:position pos:line="43" pos:column="51"/></operator><name pos:line="43" pos:column="48">sd_ctime<pos:position pos:line="43" pos:column="56"/></name><operator pos:line="43" pos:column="56">.<pos:position pos:line="43" pos:column="57"/></operator><name pos:line="43" pos:column="57">sec<pos:position pos:line="43" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="62">sd<pos:position pos:line="43" pos:column="64"/></name><operator pos:line="43" pos:column="64">-&gt;<pos:position pos:line="43" pos:column="69"/></operator><name pos:line="43" pos:column="66">sd_ctime<pos:position pos:line="43" pos:column="74"/></name><operator pos:line="43" pos:column="74">.<pos:position pos:line="43" pos:column="75"/></operator><name pos:line="43" pos:column="75">nsec<pos:position pos:line="43" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="81"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">printf<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><literal type="string" pos:line="44" pos:column="24">"  mtime: %d:%d\n"<pos:position pos:line="44" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="44">sd<pos:position pos:line="44" pos:column="46"/></name><operator pos:line="44" pos:column="46">-&gt;<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="48">sd_mtime<pos:position pos:line="44" pos:column="56"/></name><operator pos:line="44" pos:column="56">.<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="57">sec<pos:position pos:line="44" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="62">sd<pos:position pos:line="44" pos:column="64"/></name><operator pos:line="44" pos:column="64">-&gt;<pos:position pos:line="44" pos:column="69"/></operator><name pos:line="44" pos:column="66">sd_mtime<pos:position pos:line="44" pos:column="74"/></name><operator pos:line="44" pos:column="74">.<pos:position pos:line="44" pos:column="75"/></operator><name pos:line="44" pos:column="75">nsec<pos:position pos:line="44" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="81"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">printf<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><literal type="string" pos:line="45" pos:column="24">"  dev: %d\tino: %d\n"<pos:position pos:line="45" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="48">sd<pos:position pos:line="45" pos:column="50"/></name><operator pos:line="45" pos:column="50">-&gt;<pos:position pos:line="45" pos:column="55"/></operator><name pos:line="45" pos:column="52">sd_dev<pos:position pos:line="45" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="60">sd<pos:position pos:line="45" pos:column="62"/></name><operator pos:line="45" pos:column="62">-&gt;<pos:position pos:line="45" pos:column="67"/></operator><name pos:line="45" pos:column="64">sd_ino<pos:position pos:line="45" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">printf<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><literal type="string" pos:line="46" pos:column="24">"  uid: %d\tgid: %d\n"<pos:position pos:line="46" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="48">sd<pos:position pos:line="46" pos:column="50"/></name><operator pos:line="46" pos:column="50">-&gt;<pos:position pos:line="46" pos:column="55"/></operator><name pos:line="46" pos:column="52">sd_uid<pos:position pos:line="46" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="60">sd<pos:position pos:line="46" pos:column="62"/></name><operator pos:line="46" pos:column="62">-&gt;<pos:position pos:line="46" pos:column="67"/></operator><name pos:line="46" pos:column="64">sd_gid<pos:position pos:line="46" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">printf<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><literal type="string" pos:line="47" pos:column="24">"  size: %d\tflags: %x\n"<pos:position pos:line="47" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="51">sd<pos:position pos:line="47" pos:column="53"/></name><operator pos:line="47" pos:column="53">-&gt;<pos:position pos:line="47" pos:column="58"/></operator><name pos:line="47" pos:column="55">sd_size<pos:position pos:line="47" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="64">ce<pos:position pos:line="47" pos:column="66"/></name><operator pos:line="47" pos:column="66">-&gt;<pos:position pos:line="47" pos:column="71"/></operator><name pos:line="47" pos:column="68">ce_flags<pos:position pos:line="47" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="78"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

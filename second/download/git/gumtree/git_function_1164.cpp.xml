<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1164.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">git_SHA1DCFinal<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">unsigned<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name></type> <name><name pos:line="1" pos:column="36">hash<pos:position pos:line="1" pos:column="40"/></name><index pos:line="1" pos:column="40">[<expr><literal type="number" pos:line="1" pos:column="41">20<pos:position pos:line="1" pos:column="43"/></literal></expr>]<pos:position pos:line="1" pos:column="44"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">SHA1_CTX<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">ctx<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">SHA1DCFinal<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">(<argument><expr><name pos:line="3" pos:column="26">hash<pos:position pos:line="3" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="32">ctx<pos:position pos:line="3" pos:column="35"/></name></expr></argument>)<pos:position pos:line="3" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37">
		<block type="pseudo"><return pos:line="4" pos:column="17">return;<pos:position pos:line="4" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">die<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><literal type="string" pos:line="5" pos:column="13">"SHA-1 appears to be part of a collision attack: %s"<pos:position pos:line="5" pos:column="65"/></literal></expr></argument>,
	    <argument><expr><call><name pos:line="6" pos:column="13">sha1_to_hex<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">hash<pos:position pos:line="6" pos:column="29"/></name></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

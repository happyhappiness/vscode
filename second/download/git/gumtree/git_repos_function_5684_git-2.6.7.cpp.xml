<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5684_git-2.6.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_merge_file<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">argc<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">argv<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">prefix<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name><name pos:line="3" pos:column="21">names<pos:position pos:line="3" pos:column="26"/></name><index pos:line="3" pos:column="26">[<expr><literal type="number" pos:line="3" pos:column="27">3<pos:position pos:line="3" pos:column="28"/></literal></expr>]<pos:position pos:line="3" pos:column="29"/></index></name> <init pos:line="3" pos:column="30">= <expr><block pos:line="3" pos:column="32">{ <expr><name pos:line="3" pos:column="34">NULL<pos:position pos:line="3" pos:column="38"/></name></expr>, <expr><name pos:line="3" pos:column="40">NULL<pos:position pos:line="3" pos:column="44"/></name></expr>, <expr><name pos:line="3" pos:column="46">NULL<pos:position pos:line="3" pos:column="50"/></name></expr> }<pos:position pos:line="3" pos:column="52"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">mmfile_t<pos:position pos:line="4" pos:column="17"/></name></type> <name><name pos:line="4" pos:column="18">mmfs<pos:position pos:line="4" pos:column="22"/></name><index pos:line="4" pos:column="22">[<expr><literal type="number" pos:line="4" pos:column="23">3<pos:position pos:line="4" pos:column="24"/></literal></expr>]<pos:position pos:line="4" pos:column="25"/></index></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">mmbuffer_t<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">result<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><block pos:line="5" pos:column="29">{<expr><name pos:line="5" pos:column="30">NULL<pos:position pos:line="5" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="5" pos:column="36">0<pos:position pos:line="5" pos:column="37"/></literal></expr>}<pos:position pos:line="5" pos:column="38"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">xmparam_t<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">xmp<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><block pos:line="6" pos:column="25">{<expr><block pos:line="6" pos:column="26">{<expr><literal type="number" pos:line="6" pos:column="27">0<pos:position pos:line="6" pos:column="28"/></literal></expr>}<pos:position pos:line="6" pos:column="29"/></block></expr>}<pos:position pos:line="6" pos:column="30"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">ret<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="22">i<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="29">to_stdout<pos:position pos:line="7" pos:column="38"/></name> <init pos:line="7" pos:column="39">= <expr><literal type="number" pos:line="7" pos:column="41">0<pos:position pos:line="7" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">quiet<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">prefixlen<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">option<pos:position pos:line="10" pos:column="22"/></name></name></type> <name><name pos:line="10" pos:column="23">options<pos:position pos:line="10" pos:column="30"/></name><index pos:line="10" pos:column="30">[]<pos:position pos:line="10" pos:column="32"/></index></name> <init pos:line="10" pos:column="33">= <expr><block pos:line="10" pos:column="35">{
		<expr><call><name pos:line="11" pos:column="17">OPT_BOOL<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><literal type="char" pos:line="11" pos:column="26">'p'<pos:position pos:line="11" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="31">"stdout"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="41">&amp;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="42">to_stdout<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="53">N_<pos:position pos:line="11" pos:column="55"/></name><argument_list pos:line="11" pos:column="55">(<argument><expr><literal type="string" pos:line="11" pos:column="56">"send results to standard output"<pos:position pos:line="11" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="91"/></argument_list></call></expr>,
		<expr><call><name pos:line="12" pos:column="17">OPT_SET_INT<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><literal type="number" pos:line="12" pos:column="29">0<pos:position pos:line="12" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="32">"diff3"<pos:position pos:line="12" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="41">&amp;<pos:position pos:line="12" pos:column="46"/></operator><name><name pos:line="12" pos:column="42">xmp<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">.<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">style<pos:position pos:line="12" pos:column="51"/></name></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="53">N_<pos:position pos:line="12" pos:column="55"/></name><argument_list pos:line="12" pos:column="55">(<argument><expr><literal type="string" pos:line="12" pos:column="56">"use a diff3 based merge"<pos:position pos:line="12" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="12" pos:column="84">XDL_MERGE_DIFF3<pos:position pos:line="12" pos:column="99"/></name></expr></argument>)<pos:position pos:line="12" pos:column="100"/></argument_list></call></expr>,
		<expr><call><name pos:line="13" pos:column="17">OPT_SET_INT<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="32">"ours"<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="40">&amp;<pos:position pos:line="13" pos:column="45"/></operator><name><name pos:line="13" pos:column="41">xmp<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">.<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="45">favor<pos:position pos:line="13" pos:column="50"/></name></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="52">N_<pos:position pos:line="13" pos:column="54"/></name><argument_list pos:line="13" pos:column="54">(<argument><expr><literal type="string" pos:line="13" pos:column="55">"for conflicts, use our version"<pos:position pos:line="13" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="88"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="14" pos:column="29">XDL_MERGE_FAVOR_OURS<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>,
		<expr><call><name pos:line="15" pos:column="17">OPT_SET_INT<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><literal type="number" pos:line="15" pos:column="29">0<pos:position pos:line="15" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="32">"theirs"<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="42">&amp;<pos:position pos:line="15" pos:column="47"/></operator><name><name pos:line="15" pos:column="43">xmp<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">.<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="47">favor<pos:position pos:line="15" pos:column="52"/></name></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="54">N_<pos:position pos:line="15" pos:column="56"/></name><argument_list pos:line="15" pos:column="56">(<argument><expr><literal type="string" pos:line="15" pos:column="57">"for conflicts, use their version"<pos:position pos:line="15" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="92"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="16" pos:column="29">XDL_MERGE_FAVOR_THEIRS<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>,
		<expr><call><name pos:line="17" pos:column="17">OPT_SET_INT<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><literal type="number" pos:line="17" pos:column="29">0<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="32">"union"<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="41">&amp;<pos:position pos:line="17" pos:column="46"/></operator><name><name pos:line="17" pos:column="42">xmp<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">.<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="46">favor<pos:position pos:line="17" pos:column="51"/></name></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="53">N_<pos:position pos:line="17" pos:column="55"/></name><argument_list pos:line="17" pos:column="55">(<argument><expr><literal type="string" pos:line="17" pos:column="56">"for conflicts, use a union version"<pos:position pos:line="17" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="93"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="18" pos:column="29">XDL_MERGE_FAVOR_UNION<pos:position pos:line="18" pos:column="50"/></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>,
		<expr><call><name pos:line="19" pos:column="17">OPT_INTEGER<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><literal type="number" pos:line="19" pos:column="29">0<pos:position pos:line="19" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="32">"marker-size"<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="47">&amp;<pos:position pos:line="19" pos:column="52"/></operator><name><name pos:line="19" pos:column="48">xmp<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">.<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="52">marker_size<pos:position pos:line="19" pos:column="63"/></name></name></expr></argument>,
			    <argument><expr><call><name pos:line="20" pos:column="29">N_<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><literal type="string" pos:line="20" pos:column="32">"for conflicts, use this marker size"<pos:position pos:line="20" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr>,
		<expr><call><name pos:line="21" pos:column="17">OPT__QUIET<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><operator pos:line="21" pos:column="28">&amp;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="29">quiet<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="36">N_<pos:position pos:line="21" pos:column="38"/></name><argument_list pos:line="21" pos:column="38">(<argument><expr><literal type="string" pos:line="21" pos:column="39">"do not warn about conflicts"<pos:position pos:line="21" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>,
		<expr><call><name pos:line="22" pos:column="17">OPT_CALLBACK<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><literal type="char" pos:line="22" pos:column="30">'L'<pos:position pos:line="22" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="35">NULL<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">names<pos:position pos:line="22" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="48">N_<pos:position pos:line="22" pos:column="50"/></name><argument_list pos:line="22" pos:column="50">(<argument><expr><literal type="string" pos:line="22" pos:column="51">"name"<pos:position pos:line="22" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr></argument>,
			     <argument><expr><call><name pos:line="23" pos:column="30">N_<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><literal type="string" pos:line="23" pos:column="33">"set labels for file1/orig-file/file2"<pos:position pos:line="23" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="23" pos:column="74">&amp;<pos:position pos:line="23" pos:column="79"/></operator><name pos:line="23" pos:column="75">label_cb<pos:position pos:line="23" pos:column="83"/></name></expr></argument>)<pos:position pos:line="23" pos:column="84"/></argument_list></call></expr>,
		<expr><call><name pos:line="24" pos:column="17">OPT_END<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">()<pos:position pos:line="24" pos:column="26"/></argument_list></call></expr>,
	}<pos:position pos:line="25" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="25" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="27" pos:column="9">xmp<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">.<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">level<pos:position pos:line="27" pos:column="18"/></name></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">XDL_MERGE_ZEALOUS_ALNUM<pos:position pos:line="27" pos:column="44"/></name></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">xmp<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">.<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">style<pos:position pos:line="28" pos:column="18"/></name></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <literal type="number" pos:line="28" pos:column="21">0<pos:position pos:line="28" pos:column="22"/></literal></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">xmp<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">.<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">favor<pos:position pos:line="29" pos:column="18"/></name></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <literal type="number" pos:line="29" pos:column="21">0<pos:position pos:line="29" pos:column="22"/></literal></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">startup_info<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="27">have_repository<pos:position pos:line="31" pos:column="42"/></name></name></expr>)<pos:position pos:line="31" pos:column="43"/></condition><then pos:line="31" pos:column="43"> <block pos:line="31" pos:column="44">{
		<comment type="block" pos:line="32" pos:column="17">/* Read the configuration file */</comment>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">git_config<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">git_xmerge_config<pos:position pos:line="33" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="47">NULL<pos:position pos:line="33" pos:column="51"/></name></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><literal type="number" pos:line="34" pos:column="21">0<pos:position pos:line="34" pos:column="22"/></literal> <operator pos:line="34" pos:column="23">&lt;=<pos:position pos:line="34" pos:column="28"/></operator> <name pos:line="34" pos:column="26">git_xmerge_style<pos:position pos:line="34" pos:column="42"/></name></expr>)<pos:position pos:line="34" pos:column="43"/></condition><then pos:line="34" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="25">xmp<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">.<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">style<pos:position pos:line="35" pos:column="34"/></name></name> <operator pos:line="35" pos:column="35">=<pos:position pos:line="35" pos:column="36"/></operator> <name pos:line="35" pos:column="37">git_xmerge_style<pos:position pos:line="35" pos:column="53"/></name></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt></block></then></if>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="38" pos:column="9">argc<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">parse_options<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">argc<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="36">argv<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="42">prefix<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">options<pos:position pos:line="38" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="59">merge_file_usage<pos:position pos:line="38" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="77">0<pos:position pos:line="38" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="80"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">argc<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">!=<pos:position pos:line="39" pos:column="20"/></operator> <literal type="number" pos:line="39" pos:column="21">3<pos:position pos:line="39" pos:column="22"/></literal></expr>)<pos:position pos:line="39" pos:column="23"/></condition><then pos:line="39" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">usage_with_options<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">merge_file_usage<pos:position pos:line="40" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="54">options<pos:position pos:line="40" pos:column="61"/></name></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="63"/></expr_stmt></block></then></if>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">quiet<pos:position pos:line="41" pos:column="18"/></name></expr>)<pos:position pos:line="41" pos:column="19"/></condition><then pos:line="41" pos:column="19"> <block pos:line="41" pos:column="20">{
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><call><name pos:line="42" pos:column="22">freopen<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><literal type="string" pos:line="42" pos:column="30">"/dev/null"<pos:position pos:line="42" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="43">"w"<pos:position pos:line="42" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="48">stderr<pos:position pos:line="42" pos:column="54"/></name></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="56"/></condition><then pos:line="42" pos:column="56">
			<block type="pseudo"><return pos:line="43" pos:column="25">return <expr><call><name pos:line="43" pos:column="32">error<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><literal type="string" pos:line="43" pos:column="38">"failed to redirect stderr to /dev/null: "<pos:position pos:line="43" pos:column="80"/></literal>
				     <literal type="string" pos:line="44" pos:column="38">"%s"<pos:position pos:line="44" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="44">strerror<pos:position pos:line="44" pos:column="52"/></name><argument_list pos:line="44" pos:column="52">(<argument><expr><name pos:line="44" pos:column="53">errno<pos:position pos:line="44" pos:column="58"/></name></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></return></block></then></if>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">prefix<pos:position pos:line="47" pos:column="19"/></name></expr>)<pos:position pos:line="47" pos:column="20"/></condition><then pos:line="47" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="17">prefixlen<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">=<pos:position pos:line="48" pos:column="28"/></operator> <call><name pos:line="48" pos:column="29">strlen<pos:position pos:line="48" pos:column="35"/></name><argument_list pos:line="48" pos:column="35">(<argument><expr><name pos:line="48" pos:column="36">prefix<pos:position pos:line="48" pos:column="42"/></name></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="44"/></expr_stmt></block></then></if>

	<for pos:line="50" pos:column="9">for <control pos:line="50" pos:column="13">(<init><expr><name pos:line="50" pos:column="14">i<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <literal type="number" pos:line="50" pos:column="18">0<pos:position pos:line="50" pos:column="19"/></literal></expr>;<pos:position pos:line="50" pos:column="20"/></init> <condition><expr><name pos:line="50" pos:column="21">i<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">&lt;<pos:position pos:line="50" pos:column="27"/></operator> <literal type="number" pos:line="50" pos:column="25">3<pos:position pos:line="50" pos:column="26"/></literal></expr>;<pos:position pos:line="50" pos:column="27"/></condition> <incr><expr><name pos:line="50" pos:column="28">i<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">++<pos:position pos:line="50" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="50" pos:column="32"/></control> <block pos:line="50" pos:column="33">{
		<decl_stmt><decl><type><specifier pos:line="51" pos:column="17">const<pos:position pos:line="51" pos:column="22"/></specifier> <name pos:line="51" pos:column="23">char<pos:position pos:line="51" pos:column="27"/></name> <modifier pos:line="51" pos:column="28">*<pos:position pos:line="51" pos:column="29"/></modifier></type><name pos:line="51" pos:column="29">fname<pos:position pos:line="51" pos:column="34"/></name> <init pos:line="51" pos:column="35">= <expr><call><name pos:line="51" pos:column="37">prefix_filename<pos:position pos:line="51" pos:column="52"/></name><argument_list pos:line="51" pos:column="52">(<argument><expr><name pos:line="51" pos:column="53">prefix<pos:position pos:line="51" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="61">prefixlen<pos:position pos:line="51" pos:column="70"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="72">argv<pos:position pos:line="51" pos:column="76"/></name><index pos:line="51" pos:column="76">[<expr><name pos:line="51" pos:column="77">i<pos:position pos:line="51" pos:column="78"/></name></expr>]<pos:position pos:line="51" pos:column="79"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="81"/></decl_stmt>
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><operator pos:line="52" pos:column="21">!<pos:position pos:line="52" pos:column="22"/></operator><name><name pos:line="52" pos:column="22">names<pos:position pos:line="52" pos:column="27"/></name><index pos:line="52" pos:column="27">[<expr><name pos:line="52" pos:column="28">i<pos:position pos:line="52" pos:column="29"/></name></expr>]<pos:position pos:line="52" pos:column="30"/></index></name></expr>)<pos:position pos:line="52" pos:column="31"/></condition><then pos:line="52" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="25">names<pos:position pos:line="53" pos:column="30"/></name><index pos:line="53" pos:column="30">[<expr><name pos:line="53" pos:column="31">i<pos:position pos:line="53" pos:column="32"/></name></expr>]<pos:position pos:line="53" pos:column="33"/></index></name> <operator pos:line="53" pos:column="34">=<pos:position pos:line="53" pos:column="35"/></operator> <name><name pos:line="53" pos:column="36">argv<pos:position pos:line="53" pos:column="40"/></name><index pos:line="53" pos:column="40">[<expr><name pos:line="53" pos:column="41">i<pos:position pos:line="53" pos:column="42"/></name></expr>]<pos:position pos:line="53" pos:column="43"/></index></name></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt></block></then></if>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><call><name pos:line="54" pos:column="21">read_mmfile<pos:position pos:line="54" pos:column="32"/></name><argument_list pos:line="54" pos:column="32">(<argument><expr><name pos:line="54" pos:column="33">mmfs<pos:position pos:line="54" pos:column="37"/></name> <operator pos:line="54" pos:column="38">+<pos:position pos:line="54" pos:column="39"/></operator> <name pos:line="54" pos:column="40">i<pos:position pos:line="54" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="43">fname<pos:position pos:line="54" pos:column="48"/></name></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="50"/></condition><then pos:line="54" pos:column="50">
			<block type="pseudo"><return pos:line="55" pos:column="25">return <expr><operator pos:line="55" pos:column="32">-<pos:position pos:line="55" pos:column="33"/></operator><literal type="number" pos:line="55" pos:column="33">1<pos:position pos:line="55" pos:column="34"/></literal></expr>;<pos:position pos:line="55" pos:column="35"/></return></block></then></if>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name><name pos:line="56" pos:column="21">mmfs<pos:position pos:line="56" pos:column="25"/></name><index pos:line="56" pos:column="25">[<expr><name pos:line="56" pos:column="26">i<pos:position pos:line="56" pos:column="27"/></name></expr>]<pos:position pos:line="56" pos:column="28"/></index></name><operator pos:line="56" pos:column="28">.<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="29">size<pos:position pos:line="56" pos:column="33"/></name> <operator pos:line="56" pos:column="34">&gt;<pos:position pos:line="56" pos:column="38"/></operator> <name pos:line="56" pos:column="36">MAX_XDIFF_SIZE<pos:position pos:line="56" pos:column="50"/></name> <operator pos:line="56" pos:column="51">||<pos:position pos:line="56" pos:column="53"/></operator>
		    <call><name pos:line="57" pos:column="21">buffer_is_binary<pos:position pos:line="57" pos:column="37"/></name><argument_list pos:line="57" pos:column="37">(<argument><expr><name><name pos:line="57" pos:column="38">mmfs<pos:position pos:line="57" pos:column="42"/></name><index pos:line="57" pos:column="42">[<expr><name pos:line="57" pos:column="43">i<pos:position pos:line="57" pos:column="44"/></name></expr>]<pos:position pos:line="57" pos:column="45"/></index></name><operator pos:line="57" pos:column="45">.<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="46">ptr<pos:position pos:line="57" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="51">mmfs<pos:position pos:line="57" pos:column="55"/></name><index pos:line="57" pos:column="55">[<expr><name pos:line="57" pos:column="56">i<pos:position pos:line="57" pos:column="57"/></name></expr>]<pos:position pos:line="57" pos:column="58"/></index></name><operator pos:line="57" pos:column="58">.<pos:position pos:line="57" pos:column="59"/></operator><name pos:line="57" pos:column="59">size<pos:position pos:line="57" pos:column="63"/></name></expr></argument>)<pos:position pos:line="57" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="65"/></condition><then pos:line="57" pos:column="65">
			<block type="pseudo"><return pos:line="58" pos:column="25">return <expr><call><name pos:line="58" pos:column="32">error<pos:position pos:line="58" pos:column="37"/></name><argument_list pos:line="58" pos:column="37">(<argument><expr><literal type="string" pos:line="58" pos:column="38">"Cannot merge binary files: %s"<pos:position pos:line="58" pos:column="69"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="59" pos:column="41">argv<pos:position pos:line="59" pos:column="45"/></name><index pos:line="59" pos:column="45">[<expr><name pos:line="59" pos:column="46">i<pos:position pos:line="59" pos:column="47"/></name></expr>]<pos:position pos:line="59" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="50"/></return></block></then></if>
	}<pos:position pos:line="60" pos:column="10"/></block></for>

	<expr_stmt><expr><name><name pos:line="62" pos:column="9">xmp<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">.<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="13">ancestor<pos:position pos:line="62" pos:column="21"/></name></name> <operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator> <name><name pos:line="62" pos:column="24">names<pos:position pos:line="62" pos:column="29"/></name><index pos:line="62" pos:column="29">[<expr><literal type="number" pos:line="62" pos:column="30">1<pos:position pos:line="62" pos:column="31"/></literal></expr>]<pos:position pos:line="62" pos:column="32"/></index></name></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="63" pos:column="9">xmp<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">.<pos:position pos:line="63" pos:column="13"/></operator><name pos:line="63" pos:column="13">file1<pos:position pos:line="63" pos:column="18"/></name></name> <operator pos:line="63" pos:column="19">=<pos:position pos:line="63" pos:column="20"/></operator> <name><name pos:line="63" pos:column="21">names<pos:position pos:line="63" pos:column="26"/></name><index pos:line="63" pos:column="26">[<expr><literal type="number" pos:line="63" pos:column="27">0<pos:position pos:line="63" pos:column="28"/></literal></expr>]<pos:position pos:line="63" pos:column="29"/></index></name></expr>;<pos:position pos:line="63" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="64" pos:column="9">xmp<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">.<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="13">file2<pos:position pos:line="64" pos:column="18"/></name></name> <operator pos:line="64" pos:column="19">=<pos:position pos:line="64" pos:column="20"/></operator> <name><name pos:line="64" pos:column="21">names<pos:position pos:line="64" pos:column="26"/></name><index pos:line="64" pos:column="26">[<expr><literal type="number" pos:line="64" pos:column="27">2<pos:position pos:line="64" pos:column="28"/></literal></expr>]<pos:position pos:line="64" pos:column="29"/></index></name></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="65" pos:column="9">ret<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">=<pos:position pos:line="65" pos:column="14"/></operator> <call><name pos:line="65" pos:column="15">xdl_merge<pos:position pos:line="65" pos:column="24"/></name><argument_list pos:line="65" pos:column="24">(<argument><expr><name pos:line="65" pos:column="25">mmfs<pos:position pos:line="65" pos:column="29"/></name> <operator pos:line="65" pos:column="30">+<pos:position pos:line="65" pos:column="31"/></operator> <literal type="number" pos:line="65" pos:column="32">1<pos:position pos:line="65" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="35">mmfs<pos:position pos:line="65" pos:column="39"/></name> <operator pos:line="65" pos:column="40">+<pos:position pos:line="65" pos:column="41"/></operator> <literal type="number" pos:line="65" pos:column="42">0<pos:position pos:line="65" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="45">mmfs<pos:position pos:line="65" pos:column="49"/></name> <operator pos:line="65" pos:column="50">+<pos:position pos:line="65" pos:column="51"/></operator> <literal type="number" pos:line="65" pos:column="52">2<pos:position pos:line="65" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="65" pos:column="55">&amp;<pos:position pos:line="65" pos:column="60"/></operator><name pos:line="65" pos:column="56">xmp<pos:position pos:line="65" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="61">&amp;<pos:position pos:line="65" pos:column="66"/></operator><name pos:line="65" pos:column="62">result<pos:position pos:line="65" pos:column="68"/></name></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="70"/></expr_stmt>

	<for pos:line="67" pos:column="9">for <control pos:line="67" pos:column="13">(<init><expr><name pos:line="67" pos:column="14">i<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <literal type="number" pos:line="67" pos:column="18">0<pos:position pos:line="67" pos:column="19"/></literal></expr>;<pos:position pos:line="67" pos:column="20"/></init> <condition><expr><name pos:line="67" pos:column="21">i<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">&lt;<pos:position pos:line="67" pos:column="27"/></operator> <literal type="number" pos:line="67" pos:column="25">3<pos:position pos:line="67" pos:column="26"/></literal></expr>;<pos:position pos:line="67" pos:column="27"/></condition> <incr><expr><name pos:line="67" pos:column="28">i<pos:position pos:line="67" pos:column="29"/></name><operator pos:line="67" pos:column="29">++<pos:position pos:line="67" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="32"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="17">free<pos:position pos:line="68" pos:column="21"/></name><argument_list pos:line="68" pos:column="21">(<argument><expr><name><name pos:line="68" pos:column="22">mmfs<pos:position pos:line="68" pos:column="26"/></name><index pos:line="68" pos:column="26">[<expr><name pos:line="68" pos:column="27">i<pos:position pos:line="68" pos:column="28"/></name></expr>]<pos:position pos:line="68" pos:column="29"/></index></name><operator pos:line="68" pos:column="29">.<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="30">ptr<pos:position pos:line="68" pos:column="33"/></name></expr></argument>)<pos:position pos:line="68" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="35"/></expr_stmt></block></for>

	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">ret<pos:position pos:line="70" pos:column="16"/></name> <operator pos:line="70" pos:column="17">&gt;=<pos:position pos:line="70" pos:column="22"/></operator> <literal type="number" pos:line="70" pos:column="20">0<pos:position pos:line="70" pos:column="21"/></literal></expr>)<pos:position pos:line="70" pos:column="22"/></condition><then pos:line="70" pos:column="22"> <block pos:line="70" pos:column="23">{
		<decl_stmt><decl><type><specifier pos:line="71" pos:column="17">const<pos:position pos:line="71" pos:column="22"/></specifier> <name pos:line="71" pos:column="23">char<pos:position pos:line="71" pos:column="27"/></name> <modifier pos:line="71" pos:column="28">*<pos:position pos:line="71" pos:column="29"/></modifier></type><name pos:line="71" pos:column="29">filename<pos:position pos:line="71" pos:column="37"/></name> <init pos:line="71" pos:column="38">= <expr><name><name pos:line="71" pos:column="40">argv<pos:position pos:line="71" pos:column="44"/></name><index pos:line="71" pos:column="44">[<expr><literal type="number" pos:line="71" pos:column="45">0<pos:position pos:line="71" pos:column="46"/></literal></expr>]<pos:position pos:line="71" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="71" pos:column="48"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="72" pos:column="17">const<pos:position pos:line="72" pos:column="22"/></specifier> <name pos:line="72" pos:column="23">char<pos:position pos:line="72" pos:column="27"/></name> <modifier pos:line="72" pos:column="28">*<pos:position pos:line="72" pos:column="29"/></modifier></type><name pos:line="72" pos:column="29">fpath<pos:position pos:line="72" pos:column="34"/></name> <init pos:line="72" pos:column="35">= <expr><call><name pos:line="72" pos:column="37">prefix_filename<pos:position pos:line="72" pos:column="52"/></name><argument_list pos:line="72" pos:column="52">(<argument><expr><name pos:line="72" pos:column="53">prefix<pos:position pos:line="72" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="61">prefixlen<pos:position pos:line="72" pos:column="70"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="72">argv<pos:position pos:line="72" pos:column="76"/></name><index pos:line="72" pos:column="76">[<expr><literal type="number" pos:line="72" pos:column="77">0<pos:position pos:line="72" pos:column="78"/></literal></expr>]<pos:position pos:line="72" pos:column="79"/></index></name></expr></argument>)<pos:position pos:line="72" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="72" pos:column="81"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="73" pos:column="17">FILE<pos:position pos:line="73" pos:column="21"/></name> <modifier pos:line="73" pos:column="22">*<pos:position pos:line="73" pos:column="23"/></modifier></type><name pos:line="73" pos:column="23">f<pos:position pos:line="73" pos:column="24"/></name> <init pos:line="73" pos:column="25">= <expr><ternary><condition><expr><name pos:line="73" pos:column="27">to_stdout<pos:position pos:line="73" pos:column="36"/></name></expr> ?<pos:position pos:line="73" pos:column="38"/></condition><then pos:line="73" pos:column="38"> <expr><name pos:line="73" pos:column="39">stdout<pos:position pos:line="73" pos:column="45"/></name></expr> <pos:position pos:line="73" pos:column="46"/></then><else pos:line="73" pos:column="46">: <expr><call><name pos:line="73" pos:column="48">fopen<pos:position pos:line="73" pos:column="53"/></name><argument_list pos:line="73" pos:column="53">(<argument><expr><name pos:line="73" pos:column="54">fpath<pos:position pos:line="73" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="61">"wb"<pos:position pos:line="73" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="66"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="73" pos:column="67"/></decl_stmt>

		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><operator pos:line="75" pos:column="21">!<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="22">f<pos:position pos:line="75" pos:column="23"/></name></expr>)<pos:position pos:line="75" pos:column="24"/></condition><then pos:line="75" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="25">ret<pos:position pos:line="76" pos:column="28"/></name> <operator pos:line="76" pos:column="29">=<pos:position pos:line="76" pos:column="30"/></operator> <call><name pos:line="76" pos:column="31">error<pos:position pos:line="76" pos:column="36"/></name><argument_list pos:line="76" pos:column="36">(<argument><expr><literal type="string" pos:line="76" pos:column="37">"Could not open %s for writing"<pos:position pos:line="76" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="70">filename<pos:position pos:line="76" pos:column="78"/></name></expr></argument>)<pos:position pos:line="76" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="80"/></expr_stmt></block></then>
		<elseif pos:line="77" pos:column="17">else <if pos:line="77" pos:column="22">if <condition pos:line="77" pos:column="25">(<expr><name><name pos:line="77" pos:column="26">result<pos:position pos:line="77" pos:column="32"/></name><operator pos:line="77" pos:column="32">.<pos:position pos:line="77" pos:column="33"/></operator><name pos:line="77" pos:column="33">size<pos:position pos:line="77" pos:column="37"/></name></name> <operator pos:line="77" pos:column="38">&amp;&amp;<pos:position pos:line="77" pos:column="48"/></operator>
			 <call><name pos:line="78" pos:column="26">fwrite<pos:position pos:line="78" pos:column="32"/></name><argument_list pos:line="78" pos:column="32">(<argument><expr><name><name pos:line="78" pos:column="33">result<pos:position pos:line="78" pos:column="39"/></name><operator pos:line="78" pos:column="39">.<pos:position pos:line="78" pos:column="40"/></operator><name pos:line="78" pos:column="40">ptr<pos:position pos:line="78" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="45">result<pos:position pos:line="78" pos:column="51"/></name><operator pos:line="78" pos:column="51">.<pos:position pos:line="78" pos:column="52"/></operator><name pos:line="78" pos:column="52">size<pos:position pos:line="78" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="58">1<pos:position pos:line="78" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="61">f<pos:position pos:line="78" pos:column="62"/></name></expr></argument>)<pos:position pos:line="78" pos:column="63"/></argument_list></call> <operator pos:line="78" pos:column="64">!=<pos:position pos:line="78" pos:column="66"/></operator> <literal type="number" pos:line="78" pos:column="67">1<pos:position pos:line="78" pos:column="68"/></literal></expr>)<pos:position pos:line="78" pos:column="69"/></condition><then pos:line="78" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="79" pos:column="25">ret<pos:position pos:line="79" pos:column="28"/></name> <operator pos:line="79" pos:column="29">=<pos:position pos:line="79" pos:column="30"/></operator> <call><name pos:line="79" pos:column="31">error<pos:position pos:line="79" pos:column="36"/></name><argument_list pos:line="79" pos:column="36">(<argument><expr><literal type="string" pos:line="79" pos:column="37">"Could not write to %s"<pos:position pos:line="79" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="62">filename<pos:position pos:line="79" pos:column="70"/></name></expr></argument>)<pos:position pos:line="79" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="80" pos:column="17">else <if pos:line="80" pos:column="22">if <condition pos:line="80" pos:column="25">(<expr><call><name pos:line="80" pos:column="26">fclose<pos:position pos:line="80" pos:column="32"/></name><argument_list pos:line="80" pos:column="32">(<argument><expr><name pos:line="80" pos:column="33">f<pos:position pos:line="80" pos:column="34"/></name></expr></argument>)<pos:position pos:line="80" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="36"/></condition><then pos:line="80" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="25">ret<pos:position pos:line="81" pos:column="28"/></name> <operator pos:line="81" pos:column="29">=<pos:position pos:line="81" pos:column="30"/></operator> <call><name pos:line="81" pos:column="31">error<pos:position pos:line="81" pos:column="36"/></name><argument_list pos:line="81" pos:column="36">(<argument><expr><literal type="string" pos:line="81" pos:column="37">"Could not close %s"<pos:position pos:line="81" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="59">filename<pos:position pos:line="81" pos:column="67"/></name></expr></argument>)<pos:position pos:line="81" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="69"/></expr_stmt></block></then></if></elseif></if>
		<expr_stmt><expr><call><name pos:line="82" pos:column="17">free<pos:position pos:line="82" pos:column="21"/></name><argument_list pos:line="82" pos:column="21">(<argument><expr><name><name pos:line="82" pos:column="22">result<pos:position pos:line="82" pos:column="28"/></name><operator pos:line="82" pos:column="28">.<pos:position pos:line="82" pos:column="29"/></operator><name pos:line="82" pos:column="29">ptr<pos:position pos:line="82" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="83" pos:column="10"/></block></then></if>

	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">ret<pos:position pos:line="85" pos:column="16"/></name> <operator pos:line="85" pos:column="17">&gt;<pos:position pos:line="85" pos:column="21"/></operator> <literal type="number" pos:line="85" pos:column="19">127<pos:position pos:line="85" pos:column="22"/></literal></expr>)<pos:position pos:line="85" pos:column="23"/></condition><then pos:line="85" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="17">ret<pos:position pos:line="86" pos:column="20"/></name> <operator pos:line="86" pos:column="21">=<pos:position pos:line="86" pos:column="22"/></operator> <literal type="number" pos:line="86" pos:column="23">127<pos:position pos:line="86" pos:column="26"/></literal></expr>;<pos:position pos:line="86" pos:column="27"/></expr_stmt></block></then></if>

	<return pos:line="88" pos:column="9">return <expr><name pos:line="88" pos:column="16">ret<pos:position pos:line="88" pos:column="19"/></name></expr>;<pos:position pos:line="88" pos:column="20"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

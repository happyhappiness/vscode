<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1919_git-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">set_git_option<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">git_transport_options<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">opts<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
			  <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">name<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">value<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><call><name pos:line="4" pos:column="14">strcmp<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">name<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="27">TRANS_OPT_UPLOADPACK<pos:position pos:line="4" pos:column="47"/></name></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="49"/></condition><then pos:line="4" pos:column="49"> <block pos:line="4" pos:column="50">{
		<expr_stmt><expr><name><name pos:line="5" pos:column="17">opts<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">-&gt;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="23">uploadpack<pos:position pos:line="5" pos:column="33"/></name></name> <operator pos:line="5" pos:column="34">=<pos:position pos:line="5" pos:column="35"/></operator> <name pos:line="5" pos:column="36">value<pos:position pos:line="5" pos:column="41"/></name></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt>
		<return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return>
	}<pos:position pos:line="7" pos:column="10"/></block></then> <elseif pos:line="7" pos:column="11">else <if pos:line="7" pos:column="16">if <condition pos:line="7" pos:column="19">(<expr><operator pos:line="7" pos:column="20">!<pos:position pos:line="7" pos:column="21"/></operator><call><name pos:line="7" pos:column="21">strcmp<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">name<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">TRANS_OPT_RECEIVEPACK<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="57"/></condition><then pos:line="7" pos:column="57"> <block pos:line="7" pos:column="58">{
		<expr_stmt><expr><name><name pos:line="8" pos:column="17">opts<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">receivepack<pos:position pos:line="8" pos:column="34"/></name></name> <operator pos:line="8" pos:column="35">=<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="37">value<pos:position pos:line="8" pos:column="42"/></name></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
		<return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if></elseif> <elseif pos:line="10" pos:column="11">else <if pos:line="10" pos:column="16">if <condition pos:line="10" pos:column="19">(<expr><operator pos:line="10" pos:column="20">!<pos:position pos:line="10" pos:column="21"/></operator><call><name pos:line="10" pos:column="21">strcmp<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">name<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">TRANS_OPT_THIN<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50"> <block pos:line="10" pos:column="51">{
		<expr_stmt><expr><name><name pos:line="11" pos:column="17">opts<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">thin<pos:position pos:line="11" pos:column="27"/></name></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <operator pos:line="11" pos:column="30">!<pos:position pos:line="11" pos:column="31"/></operator><operator pos:line="11" pos:column="31">!<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">value<pos:position pos:line="11" pos:column="37"/></name></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if></elseif> <elseif pos:line="13" pos:column="11">else <if pos:line="13" pos:column="16">if <condition pos:line="13" pos:column="19">(<expr><operator pos:line="13" pos:column="20">!<pos:position pos:line="13" pos:column="21"/></operator><call><name pos:line="13" pos:column="21">strcmp<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">name<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">TRANS_OPT_FOLLOWTAGS<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="56"/></condition><then pos:line="13" pos:column="56"> <block pos:line="13" pos:column="57">{
		<expr_stmt><expr><name><name pos:line="14" pos:column="17">opts<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">followtags<pos:position pos:line="14" pos:column="33"/></name></name> <operator pos:line="14" pos:column="34">=<pos:position pos:line="14" pos:column="35"/></operator> <operator pos:line="14" pos:column="36">!<pos:position pos:line="14" pos:column="37"/></operator><operator pos:line="14" pos:column="37">!<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">value<pos:position pos:line="14" pos:column="43"/></name></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if></elseif> <elseif pos:line="16" pos:column="11">else <if pos:line="16" pos:column="16">if <condition pos:line="16" pos:column="19">(<expr><operator pos:line="16" pos:column="20">!<pos:position pos:line="16" pos:column="21"/></operator><call><name pos:line="16" pos:column="21">strcmp<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">name<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="34">TRANS_OPT_KEEP<pos:position pos:line="16" pos:column="48"/></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50"> <block pos:line="16" pos:column="51">{
		<expr_stmt><expr><name><name pos:line="17" pos:column="17">opts<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">keep<pos:position pos:line="17" pos:column="27"/></name></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <operator pos:line="17" pos:column="30">!<pos:position pos:line="17" pos:column="31"/></operator><operator pos:line="17" pos:column="31">!<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="32">value<pos:position pos:line="17" pos:column="37"/></name></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if></elseif> <elseif pos:line="19" pos:column="11">else <if pos:line="19" pos:column="16">if <condition pos:line="19" pos:column="19">(<expr><operator pos:line="19" pos:column="20">!<pos:position pos:line="19" pos:column="21"/></operator><call><name pos:line="19" pos:column="21">strcmp<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">name<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">TRANS_OPT_UPDATE_SHALLOW<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="60"/></condition><then pos:line="19" pos:column="60"> <block pos:line="19" pos:column="61">{
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">opts<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">update_shallow<pos:position pos:line="20" pos:column="37"/></name></name> <operator pos:line="20" pos:column="38">=<pos:position pos:line="20" pos:column="39"/></operator> <operator pos:line="20" pos:column="40">!<pos:position pos:line="20" pos:column="41"/></operator><operator pos:line="20" pos:column="41">!<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="42">value<pos:position pos:line="20" pos:column="47"/></name></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if></elseif> <elseif pos:line="22" pos:column="11">else <if pos:line="22" pos:column="16">if <condition pos:line="22" pos:column="19">(<expr><operator pos:line="22" pos:column="20">!<pos:position pos:line="22" pos:column="21"/></operator><call><name pos:line="22" pos:column="21">strcmp<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><name pos:line="22" pos:column="28">name<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">TRANS_OPT_DEPTH<pos:position pos:line="22" pos:column="49"/></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="51"/></condition><then pos:line="22" pos:column="51"> <block pos:line="22" pos:column="52">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">value<pos:position pos:line="23" pos:column="27"/></name></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="25">opts<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">-&gt;<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="31">depth<pos:position pos:line="24" pos:column="36"/></name></name> <operator pos:line="24" pos:column="37">=<pos:position pos:line="24" pos:column="38"/></operator> <literal type="number" pos:line="24" pos:column="39">0<pos:position pos:line="24" pos:column="40"/></literal></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt></block></then>
		<else pos:line="25" pos:column="17">else <block pos:line="25" pos:column="22">{
			<decl_stmt><decl><type><name pos:line="26" pos:column="25">char<pos:position pos:line="26" pos:column="29"/></name> <modifier pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></modifier></type><name pos:line="26" pos:column="31">end<pos:position pos:line="26" pos:column="34"/></name></decl>;<pos:position pos:line="26" pos:column="35"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="27" pos:column="25">opts<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">depth<pos:position pos:line="27" pos:column="36"/></name></name> <operator pos:line="27" pos:column="37">=<pos:position pos:line="27" pos:column="38"/></operator> <call><name pos:line="27" pos:column="39">strtol<pos:position pos:line="27" pos:column="45"/></name><argument_list pos:line="27" pos:column="45">(<argument><expr><name pos:line="27" pos:column="46">value<pos:position pos:line="27" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="53">&amp;<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="54">end<pos:position pos:line="27" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="59">0<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><operator pos:line="28" pos:column="29">*<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">end<pos:position pos:line="28" pos:column="33"/></name></expr>)<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="33">die<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><literal type="string" pos:line="29" pos:column="37">"transport: invalid depth option '%s'"<pos:position pos:line="29" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="77">value<pos:position pos:line="29" pos:column="82"/></name></expr></argument>)<pos:position pos:line="29" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="84"/></expr_stmt></block></then></if>
		}<pos:position pos:line="30" pos:column="18"/></block></else></if>
		<return pos:line="31" pos:column="17">return <expr><literal type="number" pos:line="31" pos:column="24">0<pos:position pos:line="31" pos:column="25"/></literal></expr>;<pos:position pos:line="31" pos:column="26"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if></elseif> <elseif pos:line="32" pos:column="11">else <if pos:line="32" pos:column="16">if <condition pos:line="32" pos:column="19">(<expr><operator pos:line="32" pos:column="20">!<pos:position pos:line="32" pos:column="21"/></operator><call><name pos:line="32" pos:column="21">strcmp<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">name<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">TRANS_OPT_PUSH_CERT<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="55"/></condition><then pos:line="32" pos:column="55"> <block pos:line="32" pos:column="56">{
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">opts<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">push_cert<pos:position pos:line="33" pos:column="32"/></name></name> <operator pos:line="33" pos:column="33">=<pos:position pos:line="33" pos:column="34"/></operator> <operator pos:line="33" pos:column="35">!<pos:position pos:line="33" pos:column="36"/></operator><operator pos:line="33" pos:column="36">!<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="37">value<pos:position pos:line="33" pos:column="42"/></name></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
		<return pos:line="34" pos:column="17">return <expr><literal type="number" pos:line="34" pos:column="24">0<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></return>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if></elseif></if>
	<return pos:line="36" pos:column="9">return <expr><literal type="number" pos:line="36" pos:column="16">1<pos:position pos:line="36" pos:column="17"/></literal></expr>;<pos:position pos:line="36" pos:column="18"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

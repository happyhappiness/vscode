<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2224_git-2.8.5.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">strbuf<pos:position pos:line="1" pos:column="14"/></name></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier><modifier pos:line="1" pos:column="16">*<pos:position pos:line="1" pos:column="17"/></modifier></type><name pos:line="1" pos:column="17">strbuf_split_buf<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">str<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">size_t<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">slen<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">terminator<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">int<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">max<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier><modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">ret<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">NULL<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">nr<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="24">alloc<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><literal type="number" pos:line="5" pos:column="32">0<pos:position pos:line="5" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">t<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name pos:line="8" pos:column="16">slen<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition> <block pos:line="8" pos:column="22">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">len<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><name pos:line="9" pos:column="27">slen<pos:position pos:line="9" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">max<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">&lt;=<pos:position pos:line="10" pos:column="30"/></operator> <literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal> <operator pos:line="10" pos:column="30">||<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="33">nr<pos:position pos:line="10" pos:column="35"/></name> <operator pos:line="10" pos:column="36">+<pos:position pos:line="10" pos:column="37"/></operator> <literal type="number" pos:line="10" pos:column="38">1<pos:position pos:line="10" pos:column="39"/></literal> <operator pos:line="10" pos:column="40">&lt;<pos:position pos:line="10" pos:column="44"/></operator> <name pos:line="10" pos:column="42">max<pos:position pos:line="10" pos:column="45"/></name></expr>)<pos:position pos:line="10" pos:column="46"/></condition><then pos:line="10" pos:column="46"> <block pos:line="10" pos:column="47">{
			<decl_stmt><decl><type><specifier pos:line="11" pos:column="25">const<pos:position pos:line="11" pos:column="30"/></specifier> <name pos:line="11" pos:column="31">char<pos:position pos:line="11" pos:column="35"/></name> <modifier pos:line="11" pos:column="36">*<pos:position pos:line="11" pos:column="37"/></modifier></type><name pos:line="11" pos:column="37">end<pos:position pos:line="11" pos:column="40"/></name> <init pos:line="11" pos:column="41">= <expr><call><name pos:line="11" pos:column="43">memchr<pos:position pos:line="11" pos:column="49"/></name><argument_list pos:line="11" pos:column="49">(<argument><expr><name pos:line="11" pos:column="50">str<pos:position pos:line="11" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="55">terminator<pos:position pos:line="11" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="67">slen<pos:position pos:line="11" pos:column="71"/></name></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="73"/></decl_stmt>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><name pos:line="12" pos:column="29">end<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
				<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="33">len<pos:position pos:line="13" pos:column="36"/></name> <operator pos:line="13" pos:column="37">=<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="39">end<pos:position pos:line="13" pos:column="42"/></name> <operator pos:line="13" pos:column="43">-<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">str<pos:position pos:line="13" pos:column="48"/></name> <operator pos:line="13" pos:column="49">+<pos:position pos:line="13" pos:column="50"/></operator> <literal type="number" pos:line="13" pos:column="51">1<pos:position pos:line="13" pos:column="52"/></literal></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt></block></then></if>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="15" pos:column="17">t<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">xmalloc<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><sizeof pos:line="15" pos:column="29">sizeof<argument_list pos:line="15" pos:column="35">(<argument><expr pos:line="15" pos:column="36">struct <name pos:line="15" pos:column="43">strbuf<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">strbuf_init<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">t<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="32">len<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">strbuf_add<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">t<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="31">str<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">len<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">ALLOC_GROW<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">ret<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">nr<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">+<pos:position pos:line="18" pos:column="37"/></operator> <literal type="number" pos:line="18" pos:column="38">2<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="41">alloc<pos:position pos:line="18" pos:column="46"/></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">ret<pos:position pos:line="19" pos:column="20"/></name><index pos:line="19" pos:column="20">[<expr><name pos:line="19" pos:column="21">nr<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">++<pos:position pos:line="19" pos:column="25"/></operator></expr>]<pos:position pos:line="19" pos:column="26"/></index></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <name pos:line="19" pos:column="29">t<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">str<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">+=<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="24">len<pos:position pos:line="20" pos:column="27"/></name></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">slen<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">-=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">len<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">ALLOC_GROW<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">ret<pos:position pos:line="23" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="25">nr<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">+<pos:position pos:line="23" pos:column="29"/></operator> <literal type="number" pos:line="23" pos:column="30">1<pos:position pos:line="23" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="33">alloc<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt> <comment type="block" pos:line="23" pos:column="41">/* In case string was empty */</comment>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">ret<pos:position pos:line="24" pos:column="12"/></name><index pos:line="24" pos:column="12">[<expr><name pos:line="24" pos:column="13">nr<pos:position pos:line="24" pos:column="15"/></name></expr>]<pos:position pos:line="24" pos:column="16"/></index></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">NULL<pos:position pos:line="24" pos:column="23"/></name></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
	<return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">ret<pos:position pos:line="25" pos:column="19"/></name></expr>;<pos:position pos:line="25" pos:column="20"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

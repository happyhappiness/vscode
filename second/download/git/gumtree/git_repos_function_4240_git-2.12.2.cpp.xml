<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4240_git-2.12.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">hashmap_get_next<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">hashmap<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">map<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">void<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">entry<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">hashmap_entry<pos:position pos:line="3" pos:column="29"/></name></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">e<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><operator pos:line="3" pos:column="35">(<pos:position pos:line="3" pos:column="36"/></operator><operator pos:line="3" pos:column="36">(<pos:position pos:line="3" pos:column="37"/></operator>struct <name pos:line="3" pos:column="44">hashmap_entry<pos:position pos:line="3" pos:column="57"/></name> <operator pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></operator><operator pos:line="3" pos:column="59">)<pos:position pos:line="3" pos:column="60"/></operator> <name pos:line="3" pos:column="61">entry<pos:position pos:line="3" pos:column="66"/></name><operator pos:line="3" pos:column="66">)<pos:position pos:line="3" pos:column="67"/></operator><operator pos:line="3" pos:column="67">-&gt;<pos:position pos:line="3" pos:column="72"/></operator><name pos:line="3" pos:column="69">next<pos:position pos:line="3" pos:column="73"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="74"/></decl_stmt>
	<for pos:line="4" pos:column="9">for <control pos:line="4" pos:column="13">(<init pos:line="4" pos:column="14">;<pos:position pos:line="4" pos:column="15"/></init> <condition><expr><name pos:line="4" pos:column="16">e<pos:position pos:line="4" pos:column="17"/></name></expr>;<pos:position pos:line="4" pos:column="18"/></condition> <incr><expr><name pos:line="4" pos:column="19">e<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">=<pos:position pos:line="4" pos:column="22"/></operator> <name><name pos:line="4" pos:column="23">e<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">next<pos:position pos:line="4" pos:column="30"/></name></name></expr></incr>)<pos:position pos:line="4" pos:column="31"/></control>
		<block type="pseudo"><if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><call><name pos:line="5" pos:column="21">entry_equals<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">(<argument><expr><name pos:line="5" pos:column="34">map<pos:position pos:line="5" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="39">entry<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="46">e<pos:position pos:line="5" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="49">NULL<pos:position pos:line="5" pos:column="53"/></name></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="55"/></condition><then pos:line="5" pos:column="55">
			<block type="pseudo"><return pos:line="6" pos:column="25">return <expr><name pos:line="6" pos:column="32">e<pos:position pos:line="6" pos:column="33"/></name></expr>;<pos:position pos:line="6" pos:column="34"/></return></block></then></if></block></for>
	<return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr>;<pos:position pos:line="7" pos:column="21"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

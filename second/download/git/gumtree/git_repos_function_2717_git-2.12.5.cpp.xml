<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2717_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">sorted_string_list_member<pos:position pos:line="2" pos:column="26"/></name> <parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">string_list_ty<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">slp<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <name pos:line="2" pos:column="61">char<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">s<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">j1<pos:position pos:line="4" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="14">j2<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">j1<pos:position pos:line="6" pos:column="5"/></name> <operator pos:line="6" pos:column="6">=<pos:position pos:line="6" pos:column="7"/></operator> <literal type="number" pos:line="6" pos:column="8">0<pos:position pos:line="6" pos:column="9"/></literal></expr>;<pos:position pos:line="6" pos:column="10"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">j2<pos:position pos:line="7" pos:column="5"/></name> <operator pos:line="7" pos:column="6">=<pos:position pos:line="7" pos:column="7"/></operator> <name><name pos:line="7" pos:column="8">slp<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">nitems<pos:position pos:line="7" pos:column="19"/></name></name></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">j2<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">&gt;<pos:position pos:line="8" pos:column="14"/></operator> <literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr>)<pos:position pos:line="8" pos:column="14"/></condition><then pos:line="8" pos:column="14">
    <block pos:line="9" pos:column="5">{
      <comment type="block" pos:line="10" pos:column="7">/* Binary search.  */</comment>
      <while pos:line="11" pos:column="7">while <condition pos:line="11" pos:column="13">(<expr><name pos:line="11" pos:column="14">j2<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">-<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">j1<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">&gt;<pos:position pos:line="11" pos:column="26"/></operator> <literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr>)<pos:position pos:line="11" pos:column="26"/></condition>
	<block pos:line="12" pos:column="9">{
	  <comment type="block" pos:line="13" pos:column="11">/* Here we know that if s is in the list, it is at an index j
	     with j1 &lt;= j &lt; j2.  */</comment>
	  <decl_stmt><decl><type><name pos:line="15" pos:column="11">size_t<pos:position pos:line="15" pos:column="17"/></name></type> <name pos:line="15" pos:column="18">j<pos:position pos:line="15" pos:column="19"/></name> <init pos:line="15" pos:column="20">= <expr><operator pos:line="15" pos:column="22">(<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">j1<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">+<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">j2<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">)<pos:position pos:line="15" pos:column="31"/></operator> <operator pos:line="15" pos:column="32">&gt;&gt;<pos:position pos:line="15" pos:column="37"/></operator> <literal type="number" pos:line="15" pos:column="35">1<pos:position pos:line="15" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="37"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="16" pos:column="11">int<pos:position pos:line="16" pos:column="14"/></name></type> <name pos:line="16" pos:column="15">result<pos:position pos:line="16" pos:column="21"/></name> <init pos:line="16" pos:column="22">= <expr><call><name pos:line="16" pos:column="24">strcmp<pos:position pos:line="16" pos:column="30"/></name> <argument_list pos:line="16" pos:column="31">(<argument><expr><name><name pos:line="16" pos:column="32">slp<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">item<pos:position pos:line="16" pos:column="41"/></name><index pos:line="16" pos:column="41">[<expr><name pos:line="16" pos:column="42">j<pos:position pos:line="16" pos:column="43"/></name></expr>]<pos:position pos:line="16" pos:column="44"/></index></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="46">s<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="49"/></decl_stmt>

	  <if pos:line="18" pos:column="11">if <condition pos:line="18" pos:column="14">(<expr><name pos:line="18" pos:column="15">result<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">&gt;<pos:position pos:line="18" pos:column="26"/></operator> <literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="13">j2<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">j<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt></block></then>
	  <elseif pos:line="20" pos:column="11">else <if pos:line="20" pos:column="16">if <condition pos:line="20" pos:column="19">(<expr><name pos:line="20" pos:column="20">result<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">==<pos:position pos:line="20" pos:column="29"/></operator> <literal type="number" pos:line="20" pos:column="30">0<pos:position pos:line="20" pos:column="31"/></literal></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32">
	    <block type="pseudo"><return pos:line="21" pos:column="13">return <expr><literal type="number" pos:line="21" pos:column="20">1<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></return></block></then></if></elseif>
	  <else pos:line="22" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="13">j1<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">j<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">+<pos:position pos:line="23" pos:column="21"/></operator> <literal type="number" pos:line="23" pos:column="22">1<pos:position pos:line="23" pos:column="23"/></literal></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt></block></else></if>
	}<pos:position pos:line="24" pos:column="10"/></block></while>
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><name pos:line="25" pos:column="11">j2<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">&gt;<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="16">j1<pos:position pos:line="25" pos:column="18"/></name></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19">
	<block type="pseudo"><if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">strcmp<pos:position pos:line="26" pos:column="19"/></name> <argument_list pos:line="26" pos:column="20">(<argument><expr><name><name pos:line="26" pos:column="21">slp<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">-&gt;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="26">item<pos:position pos:line="26" pos:column="30"/></name><index pos:line="26" pos:column="30">[<expr><name pos:line="26" pos:column="31">j1<pos:position pos:line="26" pos:column="33"/></name></expr>]<pos:position pos:line="26" pos:column="34"/></index></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">s<pos:position pos:line="26" pos:column="37"/></name></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call> <operator pos:line="26" pos:column="39">==<pos:position pos:line="26" pos:column="41"/></operator> <literal type="number" pos:line="26" pos:column="42">0<pos:position pos:line="26" pos:column="43"/></literal></expr>)<pos:position pos:line="26" pos:column="44"/></condition><then pos:line="26" pos:column="44">
	  <block type="pseudo"><return pos:line="27" pos:column="11">return <expr><literal type="number" pos:line="27" pos:column="18">1<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></return></block></then></if></block></then></if>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
  <return pos:line="29" pos:column="3">return <expr><literal type="number" pos:line="29" pos:column="10">0<pos:position pos:line="29" pos:column="11"/></literal></expr>;<pos:position pos:line="29" pos:column="12"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2745.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pp_collect_finished<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">parallel_processes<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">pp<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">code<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">n<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><name><name pos:line="4" pos:column="17">pp<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">max_processes<pos:position pos:line="4" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">result<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name><name pos:line="7" pos:column="16">pp<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">nr_processes<pos:position pos:line="7" pos:column="32"/></name></name> <operator pos:line="7" pos:column="33">&gt;<pos:position pos:line="7" pos:column="37"/></operator> <literal type="number" pos:line="7" pos:column="35">0<pos:position pos:line="7" pos:column="36"/></literal></expr>)<pos:position pos:line="7" pos:column="37"/></condition> <block pos:line="7" pos:column="38">{
		<for pos:line="8" pos:column="17">for <control pos:line="8" pos:column="21">(<init><expr><name pos:line="8" pos:column="22">i<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr>;<pos:position pos:line="8" pos:column="28"/></init> <condition><expr><name pos:line="8" pos:column="29">i<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">&lt;<pos:position pos:line="8" pos:column="35"/></operator> <name><name pos:line="8" pos:column="33">pp<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">max_processes<pos:position pos:line="8" pos:column="50"/></name></name></expr>;<pos:position pos:line="8" pos:column="51"/></condition> <incr><expr><name pos:line="8" pos:column="52">i<pos:position pos:line="8" pos:column="53"/></name><operator pos:line="8" pos:column="53">++<pos:position pos:line="8" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="56"/></control>
			<block type="pseudo"><if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><name><name pos:line="9" pos:column="29">pp<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">children<pos:position pos:line="9" pos:column="41"/></name><index pos:line="9" pos:column="41">[<expr><name pos:line="9" pos:column="42">i<pos:position pos:line="9" pos:column="43"/></name></expr>]<pos:position pos:line="9" pos:column="44"/></index></name><operator pos:line="9" pos:column="44">.<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="45">state<pos:position pos:line="9" pos:column="50"/></name> <operator pos:line="9" pos:column="51">==<pos:position pos:line="9" pos:column="53"/></operator> <name pos:line="9" pos:column="54">GIT_CP_WAIT_CLEANUP<pos:position pos:line="9" pos:column="73"/></name></expr>)<pos:position pos:line="9" pos:column="74"/></condition><then pos:line="9" pos:column="74">
				<block type="pseudo"><break pos:line="10" pos:column="33">break;<pos:position pos:line="10" pos:column="39"/></break></block></then></if></block></for>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">==<pos:position pos:line="11" pos:column="25"/></operator> <name><name pos:line="11" pos:column="26">pp<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">max_processes<pos:position pos:line="11" pos:column="43"/></name></name></expr>)<pos:position pos:line="11" pos:column="44"/></condition><then pos:line="11" pos:column="44">
			<block type="pseudo"><break pos:line="12" pos:column="25">break;<pos:position pos:line="12" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name pos:line="14" pos:column="17">code<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <call><name pos:line="14" pos:column="24">finish_command<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><operator pos:line="14" pos:column="39">&amp;<pos:position pos:line="14" pos:column="44"/></operator><name><name pos:line="14" pos:column="40">pp<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">children<pos:position pos:line="14" pos:column="52"/></name><index pos:line="14" pos:column="52">[<expr><name pos:line="14" pos:column="53">i<pos:position pos:line="14" pos:column="54"/></name></expr>]<pos:position pos:line="14" pos:column="55"/></index></name><operator pos:line="14" pos:column="55">.<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="56">process<pos:position pos:line="14" pos:column="63"/></name></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="65"/></expr_stmt>

		<expr_stmt><expr><name pos:line="16" pos:column="17">code<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <call><name><name pos:line="16" pos:column="24">pp<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">task_finished<pos:position pos:line="16" pos:column="41"/></name></name><argument_list pos:line="16" pos:column="41">(<argument><expr><name pos:line="16" pos:column="42">code<pos:position pos:line="16" pos:column="46"/></name></expr></argument>,
					 <argument><expr><operator pos:line="17" pos:column="42">&amp;<pos:position pos:line="17" pos:column="47"/></operator><name><name pos:line="17" pos:column="43">pp<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">children<pos:position pos:line="17" pos:column="55"/></name><index pos:line="17" pos:column="55">[<expr><name pos:line="17" pos:column="56">i<pos:position pos:line="17" pos:column="57"/></name></expr>]<pos:position pos:line="17" pos:column="58"/></index></name><operator pos:line="17" pos:column="58">.<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="59">err<pos:position pos:line="17" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="64">pp<pos:position pos:line="17" pos:column="66"/></name><operator pos:line="17" pos:column="66">-&gt;<pos:position pos:line="17" pos:column="71"/></operator><name pos:line="17" pos:column="68">data<pos:position pos:line="17" pos:column="72"/></name></name></expr></argument>,
					 <argument><expr><operator pos:line="18" pos:column="42">&amp;<pos:position pos:line="18" pos:column="47"/></operator><name><name pos:line="18" pos:column="43">pp<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">-&gt;<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="47">children<pos:position pos:line="18" pos:column="55"/></name><index pos:line="18" pos:column="55">[<expr><name pos:line="18" pos:column="56">i<pos:position pos:line="18" pos:column="57"/></name></expr>]<pos:position pos:line="18" pos:column="58"/></index></name><operator pos:line="18" pos:column="58">.<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="59">data<pos:position pos:line="18" pos:column="63"/></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="65"/></expr_stmt>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">code<pos:position pos:line="20" pos:column="25"/></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="25">result<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <name pos:line="21" pos:column="34">code<pos:position pos:line="21" pos:column="38"/></name></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt></block></then></if>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">code<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">&lt;<pos:position pos:line="22" pos:column="30"/></operator> <literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr>)<pos:position pos:line="22" pos:column="30"/></condition><then pos:line="22" pos:column="30">
			<block type="pseudo"><break pos:line="23" pos:column="25">break;<pos:position pos:line="23" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name><name pos:line="25" pos:column="17">pp<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">nr_processes<pos:position pos:line="25" pos:column="33"/></name></name><operator pos:line="25" pos:column="33">--<pos:position pos:line="25" pos:column="35"/></operator></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">pp<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">children<pos:position pos:line="26" pos:column="29"/></name><index pos:line="26" pos:column="29">[<expr><name pos:line="26" pos:column="30">i<pos:position pos:line="26" pos:column="31"/></name></expr>]<pos:position pos:line="26" pos:column="32"/></index></name><operator pos:line="26" pos:column="32">.<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">state<pos:position pos:line="26" pos:column="38"/></name> <operator pos:line="26" pos:column="39">=<pos:position pos:line="26" pos:column="40"/></operator> <name pos:line="26" pos:column="41">GIT_CP_FREE<pos:position pos:line="26" pos:column="52"/></name></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="27" pos:column="17">pp<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">-&gt;<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="21">pfd<pos:position pos:line="27" pos:column="24"/></name><index pos:line="27" pos:column="24">[<expr><name pos:line="27" pos:column="25">i<pos:position pos:line="27" pos:column="26"/></name></expr>]<pos:position pos:line="27" pos:column="27"/></index></name><operator pos:line="27" pos:column="27">.<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">fd<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">=<pos:position pos:line="27" pos:column="32"/></operator> <operator pos:line="27" pos:column="33">-<pos:position pos:line="27" pos:column="34"/></operator><literal type="number" pos:line="27" pos:column="34">1<pos:position pos:line="27" pos:column="35"/></literal></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">child_process_init<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><operator pos:line="28" pos:column="36">&amp;<pos:position pos:line="28" pos:column="41"/></operator><name><name pos:line="28" pos:column="37">pp<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">children<pos:position pos:line="28" pos:column="49"/></name><index pos:line="28" pos:column="49">[<expr><name pos:line="28" pos:column="50">i<pos:position pos:line="28" pos:column="51"/></name></expr>]<pos:position pos:line="28" pos:column="52"/></index></name><operator pos:line="28" pos:column="52">.<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="53">process<pos:position pos:line="28" pos:column="60"/></name></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>

		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">i<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">!=<pos:position pos:line="30" pos:column="25"/></operator> <name><name pos:line="30" pos:column="26">pp<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">-&gt;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="30">output_owner<pos:position pos:line="30" pos:column="42"/></name></name></expr>)<pos:position pos:line="30" pos:column="43"/></condition><then pos:line="30" pos:column="43"> <block pos:line="30" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">strbuf_addbuf<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">(<argument><expr><operator pos:line="31" pos:column="39">&amp;<pos:position pos:line="31" pos:column="44"/></operator><name><name pos:line="31" pos:column="40">pp<pos:position pos:line="31" pos:column="42"/></name><operator pos:line="31" pos:column="42">-&gt;<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="44">buffered_output<pos:position pos:line="31" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="61">&amp;<pos:position pos:line="31" pos:column="66"/></operator><name><name pos:line="31" pos:column="62">pp<pos:position pos:line="31" pos:column="64"/></name><operator pos:line="31" pos:column="64">-&gt;<pos:position pos:line="31" pos:column="69"/></operator><name pos:line="31" pos:column="66">children<pos:position pos:line="31" pos:column="74"/></name><index pos:line="31" pos:column="74">[<expr><name pos:line="31" pos:column="75">i<pos:position pos:line="31" pos:column="76"/></name></expr>]<pos:position pos:line="31" pos:column="77"/></index></name><operator pos:line="31" pos:column="77">.<pos:position pos:line="31" pos:column="78"/></operator><name pos:line="31" pos:column="78">err<pos:position pos:line="31" pos:column="81"/></name></expr></argument>)<pos:position pos:line="31" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="83"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">strbuf_reset<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><operator pos:line="32" pos:column="38">&amp;<pos:position pos:line="32" pos:column="43"/></operator><name><name pos:line="32" pos:column="39">pp<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">-&gt;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="43">children<pos:position pos:line="32" pos:column="51"/></name><index pos:line="32" pos:column="51">[<expr><name pos:line="32" pos:column="52">i<pos:position pos:line="32" pos:column="53"/></name></expr>]<pos:position pos:line="32" pos:column="54"/></index></name><operator pos:line="32" pos:column="54">.<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="55">err<pos:position pos:line="32" pos:column="58"/></name></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="60"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then> <else pos:line="33" pos:column="19">else <block pos:line="33" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">fputs<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name><name pos:line="34" pos:column="31">pp<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">-&gt;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="35">children<pos:position pos:line="34" pos:column="43"/></name><index pos:line="34" pos:column="43">[<expr><name pos:line="34" pos:column="44">i<pos:position pos:line="34" pos:column="45"/></name></expr>]<pos:position pos:line="34" pos:column="46"/></index></name><operator pos:line="34" pos:column="46">.<pos:position pos:line="34" pos:column="47"/></operator><name><name pos:line="34" pos:column="47">err<pos:position pos:line="34" pos:column="50"/></name><operator pos:line="34" pos:column="50">.<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="51">buf<pos:position pos:line="34" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="56">stderr<pos:position pos:line="34" pos:column="62"/></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">strbuf_reset<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><operator pos:line="35" pos:column="38">&amp;<pos:position pos:line="35" pos:column="43"/></operator><name><name pos:line="35" pos:column="39">pp<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">-&gt;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="43">children<pos:position pos:line="35" pos:column="51"/></name><index pos:line="35" pos:column="51">[<expr><name pos:line="35" pos:column="52">i<pos:position pos:line="35" pos:column="53"/></name></expr>]<pos:position pos:line="35" pos:column="54"/></index></name><operator pos:line="35" pos:column="54">.<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="55">err<pos:position pos:line="35" pos:column="58"/></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>

			<comment type="block" pos:line="37" pos:column="25">/* Output all other finished child processes */</comment>
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">fputs<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name><name pos:line="38" pos:column="31">pp<pos:position pos:line="38" pos:column="33"/></name><operator pos:line="38" pos:column="33">-&gt;<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="35">buffered_output<pos:position pos:line="38" pos:column="50"/></name><operator pos:line="38" pos:column="50">.<pos:position pos:line="38" pos:column="51"/></operator><name pos:line="38" pos:column="51">buf<pos:position pos:line="38" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="56">stderr<pos:position pos:line="38" pos:column="62"/></name></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">strbuf_reset<pos:position pos:line="39" pos:column="37"/></name><argument_list pos:line="39" pos:column="37">(<argument><expr><operator pos:line="39" pos:column="38">&amp;<pos:position pos:line="39" pos:column="43"/></operator><name><name pos:line="39" pos:column="39">pp<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">-&gt;<pos:position pos:line="39" pos:column="46"/></operator><name pos:line="39" pos:column="43">buffered_output<pos:position pos:line="39" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="60"/></expr_stmt>

			<comment type="block" pos:line="41" pos:column="25">/*
			 * Pick next process to output live.
			 * NEEDSWORK:
			 * For now we pick it randomly by doing a round
			 * robin. Later we may want to pick the one with
			 * the most output or the longest or shortest
			 * running process time.
			 */</comment>
			<for pos:line="49" pos:column="25">for <control pos:line="49" pos:column="29">(<init><expr><name pos:line="49" pos:column="30">i<pos:position pos:line="49" pos:column="31"/></name> <operator pos:line="49" pos:column="32">=<pos:position pos:line="49" pos:column="33"/></operator> <literal type="number" pos:line="49" pos:column="34">0<pos:position pos:line="49" pos:column="35"/></literal></expr>;<pos:position pos:line="49" pos:column="36"/></init> <condition><expr><name pos:line="49" pos:column="37">i<pos:position pos:line="49" pos:column="38"/></name> <operator pos:line="49" pos:column="39">&lt;<pos:position pos:line="49" pos:column="43"/></operator> <name pos:line="49" pos:column="41">n<pos:position pos:line="49" pos:column="42"/></name></expr>;<pos:position pos:line="49" pos:column="43"/></condition> <incr><expr><name pos:line="49" pos:column="44">i<pos:position pos:line="49" pos:column="45"/></name><operator pos:line="49" pos:column="45">++<pos:position pos:line="49" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="48"/></control>
				<block type="pseudo"><if pos:line="50" pos:column="33">if <condition pos:line="50" pos:column="36">(<expr><name><name pos:line="50" pos:column="37">pp<pos:position pos:line="50" pos:column="39"/></name><operator pos:line="50" pos:column="39">-&gt;<pos:position pos:line="50" pos:column="44"/></operator><name pos:line="50" pos:column="41">children<pos:position pos:line="50" pos:column="49"/></name><index pos:line="50" pos:column="49">[<expr><operator pos:line="50" pos:column="50">(<pos:position pos:line="50" pos:column="51"/></operator><name><name pos:line="50" pos:column="51">pp<pos:position pos:line="50" pos:column="53"/></name><operator pos:line="50" pos:column="53">-&gt;<pos:position pos:line="50" pos:column="58"/></operator><name pos:line="50" pos:column="55">output_owner<pos:position pos:line="50" pos:column="67"/></name></name> <operator pos:line="50" pos:column="68">+<pos:position pos:line="50" pos:column="69"/></operator> <name pos:line="50" pos:column="70">i<pos:position pos:line="50" pos:column="71"/></name><operator pos:line="50" pos:column="71">)<pos:position pos:line="50" pos:column="72"/></operator> <operator pos:line="50" pos:column="73">%<pos:position pos:line="50" pos:column="74"/></operator> <name pos:line="50" pos:column="75">n<pos:position pos:line="50" pos:column="76"/></name></expr>]<pos:position pos:line="50" pos:column="77"/></index></name><operator pos:line="50" pos:column="77">.<pos:position pos:line="50" pos:column="78"/></operator><name pos:line="50" pos:column="78">state<pos:position pos:line="50" pos:column="83"/></name> <operator pos:line="50" pos:column="84">==<pos:position pos:line="50" pos:column="86"/></operator> <name pos:line="50" pos:column="87">GIT_CP_WORKING<pos:position pos:line="50" pos:column="101"/></name></expr>)<pos:position pos:line="50" pos:column="102"/></condition><then pos:line="50" pos:column="102">
					<block type="pseudo"><break pos:line="51" pos:column="41">break;<pos:position pos:line="51" pos:column="47"/></break></block></then></if></block></for>
			<expr_stmt><expr><name><name pos:line="52" pos:column="25">pp<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">-&gt;<pos:position pos:line="52" pos:column="32"/></operator><name pos:line="52" pos:column="29">output_owner<pos:position pos:line="52" pos:column="41"/></name></name> <operator pos:line="52" pos:column="42">=<pos:position pos:line="52" pos:column="43"/></operator> <operator pos:line="52" pos:column="44">(<pos:position pos:line="52" pos:column="45"/></operator><name><name pos:line="52" pos:column="45">pp<pos:position pos:line="52" pos:column="47"/></name><operator pos:line="52" pos:column="47">-&gt;<pos:position pos:line="52" pos:column="52"/></operator><name pos:line="52" pos:column="49">output_owner<pos:position pos:line="52" pos:column="61"/></name></name> <operator pos:line="52" pos:column="62">+<pos:position pos:line="52" pos:column="63"/></operator> <name pos:line="52" pos:column="64">i<pos:position pos:line="52" pos:column="65"/></name><operator pos:line="52" pos:column="65">)<pos:position pos:line="52" pos:column="66"/></operator> <operator pos:line="52" pos:column="67">%<pos:position pos:line="52" pos:column="68"/></operator> <name pos:line="52" pos:column="69">n<pos:position pos:line="52" pos:column="70"/></name></expr>;<pos:position pos:line="52" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="53" pos:column="18"/></block></else></if>
	}<pos:position pos:line="54" pos:column="10"/></block></while>
	<return pos:line="55" pos:column="9">return <expr><name pos:line="55" pos:column="16">result<pos:position pos:line="55" pos:column="22"/></name></expr>;<pos:position pos:line="55" pos:column="23"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

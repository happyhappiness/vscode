<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_220_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_line_to_eol<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">line<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">len<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="57">const<pos:position pos:line="1" pos:column="62"/></specifier> <name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">reset<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">saw_cr_at_eol<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><literal type="number" pos:line="3" pos:column="29">0<pos:position pos:line="3" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">&lt;<pos:position pos:line="4" pos:column="21"/></operator> <literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="17">len<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">=<pos:position pos:line="5" pos:column="22"/></operator> <call><name pos:line="5" pos:column="23">strlen<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">line<pos:position pos:line="5" pos:column="34"/></name></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="36"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="6" pos:column="9">saw_cr_at_eol<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">len<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">&amp;&amp;<pos:position pos:line="6" pos:column="40"/></operator> <name><name pos:line="6" pos:column="33">line<pos:position pos:line="6" pos:column="37"/></name><index pos:line="6" pos:column="37">[<expr><name pos:line="6" pos:column="38">len<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-<pos:position pos:line="6" pos:column="42"/></operator><literal type="number" pos:line="6" pos:column="42">1<pos:position pos:line="6" pos:column="43"/></literal></expr>]<pos:position pos:line="6" pos:column="44"/></index></name> <operator pos:line="6" pos:column="45">==<pos:position pos:line="6" pos:column="47"/></operator> <literal type="char" pos:line="6" pos:column="48">'\r'<pos:position pos:line="6" pos:column="52"/></literal><operator pos:line="6" pos:column="52">)<pos:position pos:line="6" pos:column="53"/></operator></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">printf<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="string" pos:line="8" pos:column="16">"%.*s%s%s\n"<pos:position pos:line="8" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="30">len<pos:position pos:line="8" pos:column="33"/></name> <operator pos:line="8" pos:column="34">-<pos:position pos:line="8" pos:column="35"/></operator> <name pos:line="8" pos:column="36">saw_cr_at_eol<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">line<pos:position pos:line="8" pos:column="55"/></name></expr></argument>,
	       <argument><expr><name pos:line="9" pos:column="16">reset<pos:position pos:line="9" pos:column="21"/></name></expr></argument>,
	       <argument><expr><ternary><condition><expr><name pos:line="10" pos:column="16">saw_cr_at_eol<pos:position pos:line="10" pos:column="29"/></name></expr> ?<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31"> <expr><literal type="string" pos:line="10" pos:column="32">"\r"<pos:position pos:line="10" pos:column="36"/></literal></expr> <pos:position pos:line="10" pos:column="37"/></then><else pos:line="10" pos:column="37">: <expr><literal type="string" pos:line="10" pos:column="39">""<pos:position pos:line="10" pos:column="41"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

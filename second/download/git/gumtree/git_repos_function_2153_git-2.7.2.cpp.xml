<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2153_git-2.7.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">print_ref_status<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">flag<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">summary<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="62">struct<pos:position pos:line="1" pos:column="68"/></name> <name pos:line="1" pos:column="69">ref<pos:position pos:line="1" pos:column="72"/></name></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">to<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="78">struct<pos:position pos:line="1" pos:column="84"/></name> <name pos:line="1" pos:column="85">ref<pos:position pos:line="1" pos:column="88"/></name></name> <modifier pos:line="1" pos:column="89">*<pos:position pos:line="1" pos:column="90"/></modifier></type><name pos:line="1" pos:column="90">from<pos:position pos:line="1" pos:column="94"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="96">const<pos:position pos:line="1" pos:column="101"/></specifier> <name pos:line="1" pos:column="102">char<pos:position pos:line="1" pos:column="106"/></name> <modifier pos:line="1" pos:column="107">*<pos:position pos:line="1" pos:column="108"/></modifier></type><name pos:line="1" pos:column="108">msg<pos:position pos:line="1" pos:column="111"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="113">int<pos:position pos:line="1" pos:column="116"/></name></type> <name pos:line="1" pos:column="117">porcelain<pos:position pos:line="1" pos:column="126"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="127"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">porcelain<pos:position pos:line="3" pos:column="22"/></name></expr>)<pos:position pos:line="3" pos:column="23"/></condition><then pos:line="3" pos:column="23"> <block pos:line="3" pos:column="24">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><name pos:line="4" pos:column="21">from<pos:position pos:line="4" pos:column="25"/></name></expr>)<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="25">fprintf<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">stdout<pos:position pos:line="5" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="41">"%c\t%s:%s\t"<pos:position pos:line="5" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="56">flag<pos:position pos:line="5" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="62">from<pos:position pos:line="5" pos:column="66"/></name><operator pos:line="5" pos:column="66">-&gt;<pos:position pos:line="5" pos:column="71"/></operator><name pos:line="5" pos:column="68">name<pos:position pos:line="5" pos:column="72"/></name></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="74">to<pos:position pos:line="5" pos:column="76"/></name><operator pos:line="5" pos:column="76">-&gt;<pos:position pos:line="5" pos:column="81"/></operator><name pos:line="5" pos:column="78">name<pos:position pos:line="5" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="84"/></expr_stmt></block></then>
		<else pos:line="6" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="25">fprintf<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><name pos:line="7" pos:column="33">stdout<pos:position pos:line="7" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="41">"%c\t:%s\t"<pos:position pos:line="7" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="54">flag<pos:position pos:line="7" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="60">to<pos:position pos:line="7" pos:column="62"/></name><operator pos:line="7" pos:column="62">-&gt;<pos:position pos:line="7" pos:column="67"/></operator><name pos:line="7" pos:column="64">name<pos:position pos:line="7" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="70"/></expr_stmt></block></else></if>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">msg<pos:position pos:line="8" pos:column="24"/></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="25">fprintf<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">stdout<pos:position pos:line="9" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="41">"%s (%s)\n"<pos:position pos:line="9" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="54">summary<pos:position pos:line="9" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="63">msg<pos:position pos:line="9" pos:column="66"/></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt></block></then>
		<else pos:line="10" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="25">fprintf<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">stdout<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="41">"%s\n"<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">summary<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt></block></else></if>
	}<pos:position pos:line="12" pos:column="10"/></block></then> <else pos:line="12" pos:column="11">else <block pos:line="12" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">fprintf<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">stderr<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="33">" %c %-*s "<pos:position pos:line="13" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">flag<pos:position pos:line="13" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="52">TRANSPORT_SUMMARY_WIDTH<pos:position pos:line="13" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="77">summary<pos:position pos:line="13" pos:column="84"/></name></expr></argument>)<pos:position pos:line="13" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="86"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">from<pos:position pos:line="14" pos:column="25"/></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">fprintf<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">stderr<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="41">"%s -&gt; %s"<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="53">prettify_refname<pos:position pos:line="15" pos:column="69"/></name><argument_list pos:line="15" pos:column="69">(<argument><expr><name><name pos:line="15" pos:column="70">from<pos:position pos:line="15" pos:column="74"/></name><operator pos:line="15" pos:column="74">-&gt;<pos:position pos:line="15" pos:column="79"/></operator><name pos:line="15" pos:column="76">name<pos:position pos:line="15" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="81"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="83">prettify_refname<pos:position pos:line="15" pos:column="99"/></name><argument_list pos:line="15" pos:column="99">(<argument><expr><name><name pos:line="15" pos:column="100">to<pos:position pos:line="15" pos:column="102"/></name><operator pos:line="15" pos:column="102">-&gt;<pos:position pos:line="15" pos:column="107"/></operator><name pos:line="15" pos:column="104">name<pos:position pos:line="15" pos:column="108"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="111"/></expr_stmt></block></then>
		<else pos:line="16" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">fputs<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><call><name pos:line="17" pos:column="31">prettify_refname<pos:position pos:line="17" pos:column="47"/></name><argument_list pos:line="17" pos:column="47">(<argument><expr><name><name pos:line="17" pos:column="48">to<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">-&gt;<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="52">name<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">stderr<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt></block></else></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">msg<pos:position pos:line="18" pos:column="24"/></name></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25"> <block pos:line="18" pos:column="26">{
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">fputs<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">" ("<pos:position pos:line="19" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="37">stderr<pos:position pos:line="19" pos:column="43"/></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">fputs<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">msg<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">stderr<pos:position pos:line="20" pos:column="42"/></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">fputc<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><literal type="char" pos:line="21" pos:column="31">')'<pos:position pos:line="21" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="36">stderr<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">fputc<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><literal type="char" pos:line="23" pos:column="23">'\n'<pos:position pos:line="23" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="29">stderr<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></else></if>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4917_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">bitmap_or_ewah<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">bitmap<pos:position pos:line="1" pos:column="34"/></name></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">self<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">ewah_bitmap<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">other<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">original_size<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name><name pos:line="3" pos:column="32">self<pos:position pos:line="3" pos:column="36"/></name><operator pos:line="3" pos:column="36">-&gt;<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="38">word_alloc<pos:position pos:line="3" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">other_final<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator><name><name pos:line="4" pos:column="31">other<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">bit_size<pos:position pos:line="4" pos:column="46"/></name></name> <operator pos:line="4" pos:column="47">/<pos:position pos:line="4" pos:column="48"/></operator> <name pos:line="4" pos:column="49">BITS_IN_EWORD<pos:position pos:line="4" pos:column="62"/></name><operator pos:line="4" pos:column="62">)<pos:position pos:line="4" pos:column="63"/></operator> <operator pos:line="4" pos:column="64">+<pos:position pos:line="4" pos:column="65"/></operator> <literal type="number" pos:line="4" pos:column="66">1<pos:position pos:line="4" pos:column="67"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="68"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">i<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><literal type="number" pos:line="5" pos:column="20">0<pos:position pos:line="5" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">ewah_iterator<pos:position pos:line="6" pos:column="29"/></name></name></type> <name pos:line="6" pos:column="30">it<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">eword_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">word<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">self<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">word_alloc<pos:position pos:line="9" pos:column="29"/></name></name> <operator pos:line="9" pos:column="30">&lt;<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="32">other_final<pos:position pos:line="9" pos:column="43"/></name></expr>)<pos:position pos:line="9" pos:column="44"/></condition><then pos:line="9" pos:column="44"> <block pos:line="9" pos:column="45">{
		<expr_stmt><expr><name><name pos:line="10" pos:column="17">self<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">word_alloc<pos:position pos:line="10" pos:column="33"/></name></name> <operator pos:line="10" pos:column="34">=<pos:position pos:line="10" pos:column="35"/></operator> <name pos:line="10" pos:column="36">other_final<pos:position pos:line="10" pos:column="47"/></name></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">REALLOC_ARRAY<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name><name pos:line="11" pos:column="31">self<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">words<pos:position pos:line="11" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="44">self<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">word_alloc<pos:position pos:line="11" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">memset<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name><name pos:line="12" pos:column="24">self<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">words<pos:position pos:line="12" pos:column="35"/></name></name> <operator pos:line="12" pos:column="36">+<pos:position pos:line="12" pos:column="37"/></operator> <name pos:line="12" pos:column="38">original_size<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="53">0x0<pos:position pos:line="12" pos:column="56"/></literal></expr></argument>,
			<argument><expr><operator pos:line="13" pos:column="25">(<pos:position pos:line="13" pos:column="26"/></operator><name><name pos:line="13" pos:column="26">self<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">word_alloc<pos:position pos:line="13" pos:column="42"/></name></name> <operator pos:line="13" pos:column="43">-<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">original_size<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">)<pos:position pos:line="13" pos:column="59"/></operator> <operator pos:line="13" pos:column="60">*<pos:position pos:line="13" pos:column="61"/></operator> <sizeof pos:line="13" pos:column="62">sizeof<argument_list pos:line="13" pos:column="68">(<argument><expr><name pos:line="13" pos:column="69">eword_t<pos:position pos:line="13" pos:column="76"/></name></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="79"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">ewah_iterator_init<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><operator pos:line="16" pos:column="28">&amp;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="29">it<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">other<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>

	<while pos:line="18" pos:column="9">while <condition pos:line="18" pos:column="15">(<expr><call><name pos:line="18" pos:column="16">ewah_iterator_next<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><operator pos:line="18" pos:column="35">&amp;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="36">word<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="42">&amp;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="43">it<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="47"/></condition>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="17">self<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">words<pos:position pos:line="19" pos:column="28"/></name><index pos:line="19" pos:column="28">[<expr><name pos:line="19" pos:column="29">i<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">++<pos:position pos:line="19" pos:column="32"/></operator></expr>]<pos:position pos:line="19" pos:column="33"/></index></name> <operator pos:line="19" pos:column="34">|=<pos:position pos:line="19" pos:column="36"/></operator> <name pos:line="19" pos:column="37">word<pos:position pos:line="19" pos:column="41"/></name></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt></block></while>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

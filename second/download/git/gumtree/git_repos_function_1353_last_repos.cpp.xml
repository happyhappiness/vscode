<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1353_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">gitdiff_index<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">apply_state<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">state<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">line<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="3" pos:column="26">struct<pos:position pos:line="3" pos:column="32"/></name> <name pos:line="3" pos:column="33">patch<pos:position pos:line="3" pos:column="38"/></name></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">patch<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="46"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<comment type="block" pos:line="5" pos:column="9">/*
	 * index line is N hexadecimal, "..", N hexadecimal,
	 * and optional space with octal mode.
	 */</comment>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">ptr<pos:position pos:line="9" pos:column="24"/></name></decl>, <modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="27">eol<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">len<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">ptr<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">strchr<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">line<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="28">'.'<pos:position pos:line="12" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">ptr<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">||<pos:position pos:line="13" pos:column="20"/></operator> <name><name pos:line="13" pos:column="21">ptr<pos:position pos:line="13" pos:column="24"/></name><index pos:line="13" pos:column="24">[<expr><literal type="number" pos:line="13" pos:column="25">1<pos:position pos:line="13" pos:column="26"/></literal></expr>]<pos:position pos:line="13" pos:column="27"/></index></name> <operator pos:line="13" pos:column="28">!=<pos:position pos:line="13" pos:column="30"/></operator> <literal type="char" pos:line="13" pos:column="31">'.'<pos:position pos:line="13" pos:column="34"/></literal> <operator pos:line="13" pos:column="35">||<pos:position pos:line="13" pos:column="37"/></operator> <literal type="number" pos:line="13" pos:column="38">40<pos:position pos:line="13" pos:column="40"/></literal> <operator pos:line="13" pos:column="41">&lt;<pos:position pos:line="13" pos:column="45"/></operator> <name pos:line="13" pos:column="43">ptr<pos:position pos:line="13" pos:column="46"/></name> <operator pos:line="13" pos:column="47">-<pos:position pos:line="13" pos:column="48"/></operator> <name pos:line="13" pos:column="49">line<pos:position pos:line="13" pos:column="53"/></name></expr>)<pos:position pos:line="13" pos:column="54"/></condition><then pos:line="13" pos:column="54">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="15" pos:column="9">len<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <name pos:line="15" pos:column="15">ptr<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">-<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="21">line<pos:position pos:line="15" pos:column="25"/></name></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">memcpy<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name><name pos:line="16" pos:column="16">patch<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">old_sha1_prefix<pos:position pos:line="16" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">line<pos:position pos:line="16" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="46">len<pos:position pos:line="16" pos:column="49"/></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">patch<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">old_sha1_prefix<pos:position pos:line="17" pos:column="31"/></name><index pos:line="17" pos:column="31">[<expr><name pos:line="17" pos:column="32">len<pos:position pos:line="17" pos:column="35"/></name></expr>]<pos:position pos:line="17" pos:column="36"/></index></name> <operator pos:line="17" pos:column="37">=<pos:position pos:line="17" pos:column="38"/></operator> <literal type="number" pos:line="17" pos:column="39">0<pos:position pos:line="17" pos:column="40"/></literal></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><name pos:line="19" pos:column="9">line<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">ptr<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">+<pos:position pos:line="19" pos:column="21"/></operator> <literal type="number" pos:line="19" pos:column="22">2<pos:position pos:line="19" pos:column="23"/></literal></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">ptr<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">strchr<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">line<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="28">' '<pos:position pos:line="20" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">eol<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">strchrnul<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">line<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="31">'\n'<pos:position pos:line="21" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">ptr<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">||<pos:position pos:line="23" pos:column="20"/></operator> <name pos:line="23" pos:column="21">eol<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">&lt;<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="27">ptr<pos:position pos:line="23" pos:column="30"/></name></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">ptr<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">eol<pos:position pos:line="24" pos:column="26"/></name></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="25" pos:column="9">len<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <name pos:line="25" pos:column="15">ptr<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">-<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">line<pos:position pos:line="25" pos:column="25"/></name></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><literal type="number" pos:line="27" pos:column="13">40<pos:position pos:line="27" pos:column="15"/></literal> <operator pos:line="27" pos:column="16">&lt;<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="18">len<pos:position pos:line="27" pos:column="21"/></name></expr>)<pos:position pos:line="27" pos:column="22"/></condition><then pos:line="27" pos:column="22">
		<block type="pseudo"><return pos:line="28" pos:column="17">return <expr><literal type="number" pos:line="28" pos:column="24">0<pos:position pos:line="28" pos:column="25"/></literal></expr>;<pos:position pos:line="28" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">memcpy<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name><name pos:line="29" pos:column="16">patch<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">new_sha1_prefix<pos:position pos:line="29" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="40">line<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">len<pos:position pos:line="29" pos:column="49"/></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">patch<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">new_sha1_prefix<pos:position pos:line="30" pos:column="31"/></name><index pos:line="30" pos:column="31">[<expr><name pos:line="30" pos:column="32">len<pos:position pos:line="30" pos:column="35"/></name></expr>]<pos:position pos:line="30" pos:column="36"/></index></name> <operator pos:line="30" pos:column="37">=<pos:position pos:line="30" pos:column="38"/></operator> <literal type="number" pos:line="30" pos:column="39">0<pos:position pos:line="30" pos:column="40"/></literal></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">*<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">ptr<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">==<pos:position pos:line="31" pos:column="20"/></operator> <literal type="char" pos:line="31" pos:column="21">' '<pos:position pos:line="31" pos:column="24"/></literal></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25">
		<block type="pseudo"><return pos:line="32" pos:column="17">return <expr><call><name pos:line="32" pos:column="24">gitdiff_oldmode<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><name pos:line="32" pos:column="40">state<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="47">ptr<pos:position pos:line="32" pos:column="50"/></name> <operator pos:line="32" pos:column="51">+<pos:position pos:line="32" pos:column="52"/></operator> <literal type="number" pos:line="32" pos:column="53">1<pos:position pos:line="32" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="56">patch<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></return></block></then></if>
	<return pos:line="33" pos:column="9">return <expr><literal type="number" pos:line="33" pos:column="16">0<pos:position pos:line="33" pos:column="17"/></literal></expr>;<pos:position pos:line="33" pos:column="18"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

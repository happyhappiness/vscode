<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1017_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pp_init<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">parallel_processes<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">pp<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="2" pos:column="21">int<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">n<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="3" pos:column="21">get_next_task_fn<pos:position pos:line="3" pos:column="37"/></name></type> <name pos:line="3" pos:column="38">get_next_task<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="4" pos:column="21">start_failure_fn<pos:position pos:line="4" pos:column="37"/></name></type> <name pos:line="4" pos:column="38">start_failure<pos:position pos:line="4" pos:column="51"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="5" pos:column="21">task_finished_fn<pos:position pos:line="5" pos:column="37"/></name></type> <name pos:line="5" pos:column="38">task_finished<pos:position pos:line="5" pos:column="51"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="6" pos:column="21">void<pos:position pos:line="6" pos:column="25"/></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">data<pos:position pos:line="6" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="32"/></parameter_list>
<block pos:line="7" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">n<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">&lt;<pos:position pos:line="10" pos:column="19"/></operator> <literal type="number" pos:line="10" pos:column="17">1<pos:position pos:line="10" pos:column="18"/></literal></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">n<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <call><name pos:line="11" pos:column="21">online_cpus<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">()<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="13" pos:column="9">pp<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">max_processes<pos:position pos:line="13" pos:column="26"/></name></name> <operator pos:line="13" pos:column="27">=<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="29">n<pos:position pos:line="13" pos:column="30"/></name></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">trace_printf<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><literal type="string" pos:line="15" pos:column="22">"run_processes_parallel: preparing to run up to %d tasks"<pos:position pos:line="15" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="81">n<pos:position pos:line="15" pos:column="82"/></name></expr></argument>)<pos:position pos:line="15" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="84"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="17" pos:column="9">pp<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">data<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">data<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">get_next_task<pos:position pos:line="18" pos:column="27"/></name></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">die<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><literal type="string" pos:line="19" pos:column="21">"BUG: you need to specify a get_next_task function"<pos:position pos:line="19" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="74"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">pp<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">get_next_task<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="29">get_next_task<pos:position pos:line="20" pos:column="42"/></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="22" pos:column="9">pp<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">start_failure<pos:position pos:line="22" pos:column="26"/></name></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <ternary><condition><expr><name pos:line="22" pos:column="29">start_failure<pos:position pos:line="22" pos:column="42"/></name></expr> ?<pos:position pos:line="22" pos:column="44"/></condition><then pos:line="22" pos:column="44"> <expr><name pos:line="22" pos:column="45">start_failure<pos:position pos:line="22" pos:column="58"/></name></expr> <pos:position pos:line="22" pos:column="59"/></then><else pos:line="22" pos:column="59">: <expr><name pos:line="22" pos:column="61">default_start_failure<pos:position pos:line="22" pos:column="82"/></name></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="83"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">pp<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">task_finished<pos:position pos:line="23" pos:column="26"/></name></name> <operator pos:line="23" pos:column="27">=<pos:position pos:line="23" pos:column="28"/></operator> <ternary><condition><expr><name pos:line="23" pos:column="29">task_finished<pos:position pos:line="23" pos:column="42"/></name></expr> ?<pos:position pos:line="23" pos:column="44"/></condition><then pos:line="23" pos:column="44"> <expr><name pos:line="23" pos:column="45">task_finished<pos:position pos:line="23" pos:column="58"/></name></expr> <pos:position pos:line="23" pos:column="59"/></then><else pos:line="23" pos:column="59">: <expr><name pos:line="23" pos:column="61">default_task_finished<pos:position pos:line="23" pos:column="82"/></name></expr></else></ternary></expr>;<pos:position pos:line="23" pos:column="83"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="25" pos:column="9">pp<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">nr_processes<pos:position pos:line="25" pos:column="25"/></name></name> <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">pp<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">output_owner<pos:position pos:line="26" pos:column="25"/></name></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <literal type="number" pos:line="26" pos:column="28">0<pos:position pos:line="26" pos:column="29"/></literal></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">pp<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">shutdown<pos:position pos:line="27" pos:column="21"/></name></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <literal type="number" pos:line="27" pos:column="24">0<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">pp<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">children<pos:position pos:line="28" pos:column="21"/></name></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <call><name pos:line="28" pos:column="24">xcalloc<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">n<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="35">sizeof<argument_list pos:line="28" pos:column="41">(<argument><expr><operator pos:line="28" pos:column="42">*<pos:position pos:line="28" pos:column="43"/></operator><name><name pos:line="28" pos:column="43">pp<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">children<pos:position pos:line="28" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">pp<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">pfd<pos:position pos:line="29" pos:column="16"/></name></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <call><name pos:line="29" pos:column="19">xcalloc<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name pos:line="29" pos:column="27">n<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="30">sizeof<argument_list pos:line="29" pos:column="36">(<argument><expr><operator pos:line="29" pos:column="37">*<pos:position pos:line="29" pos:column="38"/></operator><name><name pos:line="29" pos:column="38">pp<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">-&gt;<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="42">pfd<pos:position pos:line="29" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">strbuf_init<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><operator pos:line="30" pos:column="21">&amp;<pos:position pos:line="30" pos:column="26"/></operator><name><name pos:line="30" pos:column="22">pp<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">buffered_output<pos:position pos:line="30" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="43">0<pos:position pos:line="30" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>

	<for pos:line="32" pos:column="9">for <control pos:line="32" pos:column="13">(<init><expr><name pos:line="32" pos:column="14">i<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <literal type="number" pos:line="32" pos:column="18">0<pos:position pos:line="32" pos:column="19"/></literal></expr>;<pos:position pos:line="32" pos:column="20"/></init> <condition><expr><name pos:line="32" pos:column="21">i<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">&lt;<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="25">n<pos:position pos:line="32" pos:column="26"/></name></expr>;<pos:position pos:line="32" pos:column="27"/></condition> <incr><expr><name pos:line="32" pos:column="28">i<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">++<pos:position pos:line="32" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="32"/></control> <block pos:line="32" pos:column="33">{
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">strbuf_init<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><operator pos:line="33" pos:column="29">&amp;<pos:position pos:line="33" pos:column="34"/></operator><name><name pos:line="33" pos:column="30">pp<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">-&gt;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="34">children<pos:position pos:line="33" pos:column="42"/></name><index pos:line="33" pos:column="42">[<expr><name pos:line="33" pos:column="43">i<pos:position pos:line="33" pos:column="44"/></name></expr>]<pos:position pos:line="33" pos:column="45"/></index></name><operator pos:line="33" pos:column="45">.<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="46">err<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="51">0<pos:position pos:line="33" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">child_process_init<pos:position pos:line="34" pos:column="35"/></name><argument_list pos:line="34" pos:column="35">(<argument><expr><operator pos:line="34" pos:column="36">&amp;<pos:position pos:line="34" pos:column="41"/></operator><name><name pos:line="34" pos:column="37">pp<pos:position pos:line="34" pos:column="39"/></name><operator pos:line="34" pos:column="39">-&gt;<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="41">children<pos:position pos:line="34" pos:column="49"/></name><index pos:line="34" pos:column="49">[<expr><name pos:line="34" pos:column="50">i<pos:position pos:line="34" pos:column="51"/></name></expr>]<pos:position pos:line="34" pos:column="52"/></index></name><operator pos:line="34" pos:column="52">.<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="53">process<pos:position pos:line="34" pos:column="60"/></name></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="35" pos:column="17">pp<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">pfd<pos:position pos:line="35" pos:column="24"/></name><index pos:line="35" pos:column="24">[<expr><name pos:line="35" pos:column="25">i<pos:position pos:line="35" pos:column="26"/></name></expr>]<pos:position pos:line="35" pos:column="27"/></index></name><operator pos:line="35" pos:column="27">.<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="28">events<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">=<pos:position pos:line="35" pos:column="36"/></operator> <name pos:line="35" pos:column="37">POLLIN<pos:position pos:line="35" pos:column="43"/></name> <operator pos:line="35" pos:column="44">|<pos:position pos:line="35" pos:column="45"/></operator> <name pos:line="35" pos:column="46">POLLHUP<pos:position pos:line="35" pos:column="53"/></name></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="36" pos:column="17">pp<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">-&gt;<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="21">pfd<pos:position pos:line="36" pos:column="24"/></name><index pos:line="36" pos:column="24">[<expr><name pos:line="36" pos:column="25">i<pos:position pos:line="36" pos:column="26"/></name></expr>]<pos:position pos:line="36" pos:column="27"/></index></name><operator pos:line="36" pos:column="27">.<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="28">fd<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">=<pos:position pos:line="36" pos:column="32"/></operator> <operator pos:line="36" pos:column="33">-<pos:position pos:line="36" pos:column="34"/></operator><literal type="number" pos:line="36" pos:column="34">1<pos:position pos:line="36" pos:column="35"/></literal></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="39" pos:column="9">pp_for_signal<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="25">pp<pos:position pos:line="39" pos:column="27"/></name></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">sigchain_push_common<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">handle_children_on_signal<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

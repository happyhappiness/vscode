<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2867_git-2.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_list<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">debug<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">counted<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">nr<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
		      <parameter><decl><type><name><name pos:line="2" pos:column="23">struct<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">commit_list<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">list<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit_list<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">p<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">fprintf<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">stderr<pos:position pos:line="6" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="25">"%s (%d/%d)\n"<pos:position pos:line="6" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="41">debug<pos:position pos:line="6" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="48">counted<pos:position pos:line="6" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="57">nr<pos:position pos:line="6" pos:column="59"/></name></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="61"/></expr_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">p<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">list<pos:position pos:line="8" pos:column="22"/></name></expr>;<pos:position pos:line="8" pos:column="23"/></init> <condition><expr><name pos:line="8" pos:column="24">p<pos:position pos:line="8" pos:column="25"/></name></expr>;<pos:position pos:line="8" pos:column="26"/></condition> <incr><expr><name pos:line="8" pos:column="27">p<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">=<pos:position pos:line="8" pos:column="30"/></operator> <name><name pos:line="8" pos:column="31">p<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">next<pos:position pos:line="8" pos:column="38"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="39"/></control> <block pos:line="8" pos:column="40">{
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">commit_list<pos:position pos:line="9" pos:column="35"/></name></name> <modifier pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></modifier></type><name pos:line="9" pos:column="37">pp<pos:position pos:line="9" pos:column="39"/></name></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="10" pos:column="17">struct<pos:position pos:line="10" pos:column="23"/></name> <name pos:line="10" pos:column="24">commit<pos:position pos:line="10" pos:column="30"/></name></name> <modifier pos:line="10" pos:column="31">*<pos:position pos:line="10" pos:column="32"/></modifier></type><name pos:line="10" pos:column="32">commit<pos:position pos:line="10" pos:column="38"/></name> <init pos:line="10" pos:column="39">= <expr><name><name pos:line="10" pos:column="41">p<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">item<pos:position pos:line="10" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">unsigned<pos:position pos:line="11" pos:column="25"/></name></type> <name pos:line="11" pos:column="26">flags<pos:position pos:line="11" pos:column="31"/></name> <init pos:line="11" pos:column="32">= <expr><name><name pos:line="11" pos:column="34">commit<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-&gt;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="42">object<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">.<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="49">flags<pos:position pos:line="11" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="55"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">enum<pos:position pos:line="12" pos:column="21"/></name> <name pos:line="12" pos:column="22">object_type<pos:position pos:line="12" pos:column="33"/></name></name></type> <name pos:line="12" pos:column="34">type<pos:position pos:line="12" pos:column="38"/></name></decl>;<pos:position pos:line="12" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">unsigned<pos:position pos:line="13" pos:column="25"/></name> <name pos:line="13" pos:column="26">long<pos:position pos:line="13" pos:column="30"/></name></type> <name pos:line="13" pos:column="31">size<pos:position pos:line="13" pos:column="35"/></name></decl>;<pos:position pos:line="13" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">char<pos:position pos:line="14" pos:column="21"/></name> <modifier pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></modifier></type><name pos:line="14" pos:column="23">buf<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><call><name pos:line="14" pos:column="29">read_sha1_file<pos:position pos:line="14" pos:column="43"/></name><argument_list pos:line="14" pos:column="43">(<argument><expr><name><name pos:line="14" pos:column="44">commit<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">object<pos:position pos:line="14" pos:column="58"/></name><operator pos:line="14" pos:column="58">.<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="59">sha1<pos:position pos:line="14" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="65">&amp;<pos:position pos:line="14" pos:column="70"/></operator><name pos:line="14" pos:column="66">type<pos:position pos:line="14" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="72">&amp;<pos:position pos:line="14" pos:column="77"/></operator><name pos:line="14" pos:column="73">size<pos:position pos:line="14" pos:column="77"/></name></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="79"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="15" pos:column="17">const<pos:position pos:line="15" pos:column="22"/></specifier> <name pos:line="15" pos:column="23">char<pos:position pos:line="15" pos:column="27"/></name> <modifier pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></modifier></type><name pos:line="15" pos:column="29">subject_start<pos:position pos:line="15" pos:column="42"/></name></decl>;<pos:position pos:line="15" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">int<pos:position pos:line="16" pos:column="20"/></name></type> <name pos:line="16" pos:column="21">subject_len<pos:position pos:line="16" pos:column="32"/></name></decl>;<pos:position pos:line="16" pos:column="33"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="18" pos:column="17">fprintf<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">stderr<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="33">"%c%c%c "<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="19" pos:column="25">(<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">flags<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">&amp;<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="34">TREESAME<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">)<pos:position pos:line="19" pos:column="43"/></operator></expr> ?<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45"> <expr><literal type="char" pos:line="19" pos:column="46">' '<pos:position pos:line="19" pos:column="49"/></literal></expr> <pos:position pos:line="19" pos:column="50"/></then><else pos:line="19" pos:column="50">: <expr><literal type="char" pos:line="19" pos:column="52">'T'<pos:position pos:line="19" pos:column="55"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="20" pos:column="25">(<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">flags<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">&amp;<pos:position pos:line="20" pos:column="37"/></operator> <name pos:line="20" pos:column="34">UNINTERESTING<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">)<pos:position pos:line="20" pos:column="48"/></operator></expr> ?<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50"> <expr><literal type="char" pos:line="20" pos:column="51">'U'<pos:position pos:line="20" pos:column="54"/></literal></expr> <pos:position pos:line="20" pos:column="55"/></then><else pos:line="20" pos:column="55">: <expr><literal type="char" pos:line="20" pos:column="57">' '<pos:position pos:line="20" pos:column="60"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="21" pos:column="25">(<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">flags<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">&amp;<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="34">COUNTED<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">)<pos:position pos:line="21" pos:column="42"/></operator></expr> ?<pos:position pos:line="21" pos:column="44"/></condition><then pos:line="21" pos:column="44"> <expr><literal type="char" pos:line="21" pos:column="45">'C'<pos:position pos:line="21" pos:column="48"/></literal></expr> <pos:position pos:line="21" pos:column="49"/></then><else pos:line="21" pos:column="49">: <expr><literal type="char" pos:line="21" pos:column="51">' '<pos:position pos:line="21" pos:column="54"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">commit<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">util<pos:position pos:line="22" pos:column="33"/></name></name></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">fprintf<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">stderr<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="41">"%3d"<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="48">weight<pos:position pos:line="23" pos:column="54"/></name><argument_list pos:line="23" pos:column="54">(<argument><expr><name pos:line="23" pos:column="55">p<pos:position pos:line="23" pos:column="56"/></name></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt></block></then>
		<else pos:line="24" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">fprintf<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">stderr<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="41">"---"<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">fprintf<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">stderr<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="33">" %.*s"<pos:position pos:line="26" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="42">8<pos:position pos:line="26" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="45">sha1_to_hex<pos:position pos:line="26" pos:column="56"/></name><argument_list pos:line="26" pos:column="56">(<argument><expr><name><name pos:line="26" pos:column="57">commit<pos:position pos:line="26" pos:column="63"/></name><operator pos:line="26" pos:column="63">-&gt;<pos:position pos:line="26" pos:column="68"/></operator><name pos:line="26" pos:column="65">object<pos:position pos:line="26" pos:column="71"/></name><operator pos:line="26" pos:column="71">.<pos:position pos:line="26" pos:column="72"/></operator><name pos:line="26" pos:column="72">sha1<pos:position pos:line="26" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="79"/></expr_stmt>
		<for pos:line="27" pos:column="17">for <control pos:line="27" pos:column="21">(<init><expr><name pos:line="27" pos:column="22">pp<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <name><name pos:line="27" pos:column="27">commit<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-&gt;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="35">parents<pos:position pos:line="27" pos:column="42"/></name></name></expr>;<pos:position pos:line="27" pos:column="43"/></init> <condition><expr><name pos:line="27" pos:column="44">pp<pos:position pos:line="27" pos:column="46"/></name></expr>;<pos:position pos:line="27" pos:column="47"/></condition> <incr><expr><name pos:line="27" pos:column="48">pp<pos:position pos:line="27" pos:column="50"/></name> <operator pos:line="27" pos:column="51">=<pos:position pos:line="27" pos:column="52"/></operator> <name><name pos:line="27" pos:column="53">pp<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">next<pos:position pos:line="27" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="27" pos:column="62"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">fprintf<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">stderr<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="41">" %.*s"<pos:position pos:line="28" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="50">8<pos:position pos:line="28" pos:column="51"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="29" pos:column="33">sha1_to_hex<pos:position pos:line="29" pos:column="44"/></name><argument_list pos:line="29" pos:column="44">(<argument><expr><name><name pos:line="29" pos:column="45">pp<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">-&gt;<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="49">item<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">-&gt;<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="55">object<pos:position pos:line="29" pos:column="61"/></name><operator pos:line="29" pos:column="61">.<pos:position pos:line="29" pos:column="62"/></operator><name pos:line="29" pos:column="62">sha1<pos:position pos:line="29" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="69"/></expr_stmt></block></for>

		<expr_stmt><expr><name pos:line="31" pos:column="17">subject_len<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <call><name pos:line="31" pos:column="31">find_commit_subject<pos:position pos:line="31" pos:column="50"/></name><argument_list pos:line="31" pos:column="50">(<argument><expr><name pos:line="31" pos:column="51">buf<pos:position pos:line="31" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="56">&amp;<pos:position pos:line="31" pos:column="61"/></operator><name pos:line="31" pos:column="57">subject_start<pos:position pos:line="31" pos:column="70"/></name></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="72"/></expr_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">subject_len<pos:position pos:line="32" pos:column="32"/></name></expr>)<pos:position pos:line="32" pos:column="33"/></condition><then pos:line="32" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="25">fprintf<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">stderr<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="41">" %.*s"<pos:position pos:line="33" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="50">subject_len<pos:position pos:line="33" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="63">subject_start<pos:position pos:line="33" pos:column="76"/></name></expr></argument>)<pos:position pos:line="33" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="78"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">fprintf<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">stderr<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="33">"\n"<pos:position pos:line="34" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></for>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

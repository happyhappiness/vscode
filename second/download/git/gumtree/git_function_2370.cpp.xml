<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2370.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">print_commit<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">sign<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">commit<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">commit<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">verbose<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">abbrev<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">verbose<pos:position pos:line="4" pos:column="21"/></name></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22"> <block pos:line="4" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="5" pos:column="17">printf<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><literal type="string" pos:line="5" pos:column="24">"%c %s\n"<pos:position pos:line="5" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="35">sign<pos:position pos:line="5" pos:column="39"/></name></expr></argument>,
		       <argument><expr><call><name pos:line="6" pos:column="24">find_unique_abbrev<pos:position pos:line="6" pos:column="42"/></name><argument_list pos:line="6" pos:column="42">(<argument><expr><name><name pos:line="6" pos:column="43">commit<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">-&gt;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="51">object<pos:position pos:line="6" pos:column="57"/></name><operator pos:line="6" pos:column="57">.<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="58">sha1<pos:position pos:line="6" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="64">abbrev<pos:position pos:line="6" pos:column="70"/></name></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="73"/></expr_stmt>
	}<pos:position pos:line="7" pos:column="10"/></block></then> <else pos:line="7" pos:column="11">else <block pos:line="7" pos:column="16">{
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">strbuf<pos:position pos:line="8" pos:column="30"/></name></name></type> <name pos:line="8" pos:column="31">buf<pos:position pos:line="8" pos:column="34"/></name> <init pos:line="8" pos:column="35">= <expr><name pos:line="8" pos:column="37">STRBUF_INIT<pos:position pos:line="8" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="49"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">pp_commit_easy<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">CMIT_FMT_ONELINE<pos:position pos:line="9" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="50">commit<pos:position pos:line="9" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="58">&amp;<pos:position pos:line="9" pos:column="63"/></operator><name pos:line="9" pos:column="59">buf<pos:position pos:line="9" pos:column="62"/></name></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">printf<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><literal type="string" pos:line="10" pos:column="24">"%c %s %s\n"<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">sign<pos:position pos:line="10" pos:column="42"/></name></expr></argument>,
		       <argument><expr><call><name pos:line="11" pos:column="24">find_unique_abbrev<pos:position pos:line="11" pos:column="42"/></name><argument_list pos:line="11" pos:column="42">(<argument><expr><name><name pos:line="11" pos:column="43">commit<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">-&gt;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="51">object<pos:position pos:line="11" pos:column="57"/></name><operator pos:line="11" pos:column="57">.<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="58">sha1<pos:position pos:line="11" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="64">abbrev<pos:position pos:line="11" pos:column="70"/></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr></argument>,
		       <argument><expr><name><name pos:line="12" pos:column="24">buf<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">.<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">buf<pos:position pos:line="12" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">strbuf_release<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><operator pos:line="13" pos:column="32">&amp;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="33">buf<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></else></if>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2079_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_main<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">int<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">argc<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">argv<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">walker<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">walker<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">commits_on_stdin<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><literal type="number" pos:line="4" pos:column="32">0<pos:position pos:line="4" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">commits<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier><modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">write_ref<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><name pos:line="6" pos:column="34">NULL<pos:position pos:line="6" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier><modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">commit_id<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">url<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><name pos:line="8" pos:column="21">NULL<pos:position pos:line="8" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">arg<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="number" pos:line="9" pos:column="19">1<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">rc<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">get_tree<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">get_history<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><literal type="number" pos:line="12" pos:column="27">0<pos:position pos:line="12" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">get_all<pos:position pos:line="13" pos:column="20"/></name> <init pos:line="13" pos:column="21">= <expr><literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">get_verbosely<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><literal type="number" pos:line="14" pos:column="29">0<pos:position pos:line="14" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">get_recover<pos:position pos:line="15" pos:column="24"/></name> <init pos:line="15" pos:column="25">= <expr><literal type="number" pos:line="15" pos:column="27">0<pos:position pos:line="15" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="29"/></decl_stmt>

	<while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><name pos:line="17" pos:column="16">arg<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">&lt;<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="22">argc<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">&amp;&amp;<pos:position pos:line="17" pos:column="37"/></operator> <name><name pos:line="17" pos:column="30">argv<pos:position pos:line="17" pos:column="34"/></name><index pos:line="17" pos:column="34">[<expr><name pos:line="17" pos:column="35">arg<pos:position pos:line="17" pos:column="38"/></name></expr>]<pos:position pos:line="17" pos:column="39"/></index><index pos:line="17" pos:column="39">[<expr><literal type="number" pos:line="17" pos:column="40">0<pos:position pos:line="17" pos:column="41"/></literal></expr>]<pos:position pos:line="17" pos:column="42"/></index></name> <operator pos:line="17" pos:column="43">==<pos:position pos:line="17" pos:column="45"/></operator> <literal type="char" pos:line="17" pos:column="46">'-'<pos:position pos:line="17" pos:column="49"/></literal></expr>)<pos:position pos:line="17" pos:column="50"/></condition> <block pos:line="17" pos:column="51">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">argv<pos:position pos:line="18" pos:column="25"/></name><index pos:line="18" pos:column="25">[<expr><name pos:line="18" pos:column="26">arg<pos:position pos:line="18" pos:column="29"/></name></expr>]<pos:position pos:line="18" pos:column="30"/></index><index pos:line="18" pos:column="30">[<expr><literal type="number" pos:line="18" pos:column="31">1<pos:position pos:line="18" pos:column="32"/></literal></expr>]<pos:position pos:line="18" pos:column="33"/></index></name> <operator pos:line="18" pos:column="34">==<pos:position pos:line="18" pos:column="36"/></operator> <literal type="char" pos:line="18" pos:column="37">'t'<pos:position pos:line="18" pos:column="40"/></literal></expr>)<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41"> <block pos:line="18" pos:column="42">{
			<expr_stmt><expr><name pos:line="19" pos:column="25">get_tree<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">=<pos:position pos:line="19" pos:column="35"/></operator> <literal type="number" pos:line="19" pos:column="36">1<pos:position pos:line="19" pos:column="37"/></literal></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></then> <elseif pos:line="20" pos:column="19">else <if pos:line="20" pos:column="24">if <condition pos:line="20" pos:column="27">(<expr><name><name pos:line="20" pos:column="28">argv<pos:position pos:line="20" pos:column="32"/></name><index pos:line="20" pos:column="32">[<expr><name pos:line="20" pos:column="33">arg<pos:position pos:line="20" pos:column="36"/></name></expr>]<pos:position pos:line="20" pos:column="37"/></index><index pos:line="20" pos:column="37">[<expr><literal type="number" pos:line="20" pos:column="38">1<pos:position pos:line="20" pos:column="39"/></literal></expr>]<pos:position pos:line="20" pos:column="40"/></index></name> <operator pos:line="20" pos:column="41">==<pos:position pos:line="20" pos:column="43"/></operator> <literal type="char" pos:line="20" pos:column="44">'c'<pos:position pos:line="20" pos:column="47"/></literal></expr>)<pos:position pos:line="20" pos:column="48"/></condition><then pos:line="20" pos:column="48"> <block pos:line="20" pos:column="49">{
			<expr_stmt><expr><name pos:line="21" pos:column="25">get_history<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">=<pos:position pos:line="21" pos:column="38"/></operator> <literal type="number" pos:line="21" pos:column="39">1<pos:position pos:line="21" pos:column="40"/></literal></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if></elseif> <elseif pos:line="22" pos:column="19">else <if pos:line="22" pos:column="24">if <condition pos:line="22" pos:column="27">(<expr><name><name pos:line="22" pos:column="28">argv<pos:position pos:line="22" pos:column="32"/></name><index pos:line="22" pos:column="32">[<expr><name pos:line="22" pos:column="33">arg<pos:position pos:line="22" pos:column="36"/></name></expr>]<pos:position pos:line="22" pos:column="37"/></index><index pos:line="22" pos:column="37">[<expr><literal type="number" pos:line="22" pos:column="38">1<pos:position pos:line="22" pos:column="39"/></literal></expr>]<pos:position pos:line="22" pos:column="40"/></index></name> <operator pos:line="22" pos:column="41">==<pos:position pos:line="22" pos:column="43"/></operator> <literal type="char" pos:line="22" pos:column="44">'a'<pos:position pos:line="22" pos:column="47"/></literal></expr>)<pos:position pos:line="22" pos:column="48"/></condition><then pos:line="22" pos:column="48"> <block pos:line="22" pos:column="49">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">get_all<pos:position pos:line="23" pos:column="32"/></name> <operator pos:line="23" pos:column="33">=<pos:position pos:line="23" pos:column="34"/></operator> <literal type="number" pos:line="23" pos:column="35">1<pos:position pos:line="23" pos:column="36"/></literal></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">get_tree<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">=<pos:position pos:line="24" pos:column="35"/></operator> <literal type="number" pos:line="24" pos:column="36">1<pos:position pos:line="24" pos:column="37"/></literal></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><name pos:line="25" pos:column="25">get_history<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">=<pos:position pos:line="25" pos:column="38"/></operator> <literal type="number" pos:line="25" pos:column="39">1<pos:position pos:line="25" pos:column="40"/></literal></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if></elseif> <elseif pos:line="26" pos:column="19">else <if pos:line="26" pos:column="24">if <condition pos:line="26" pos:column="27">(<expr><name><name pos:line="26" pos:column="28">argv<pos:position pos:line="26" pos:column="32"/></name><index pos:line="26" pos:column="32">[<expr><name pos:line="26" pos:column="33">arg<pos:position pos:line="26" pos:column="36"/></name></expr>]<pos:position pos:line="26" pos:column="37"/></index><index pos:line="26" pos:column="37">[<expr><literal type="number" pos:line="26" pos:column="38">1<pos:position pos:line="26" pos:column="39"/></literal></expr>]<pos:position pos:line="26" pos:column="40"/></index></name> <operator pos:line="26" pos:column="41">==<pos:position pos:line="26" pos:column="43"/></operator> <literal type="char" pos:line="26" pos:column="44">'v'<pos:position pos:line="26" pos:column="47"/></literal></expr>)<pos:position pos:line="26" pos:column="48"/></condition><then pos:line="26" pos:column="48"> <block pos:line="26" pos:column="49">{
			<expr_stmt><expr><name pos:line="27" pos:column="25">get_verbosely<pos:position pos:line="27" pos:column="38"/></name> <operator pos:line="27" pos:column="39">=<pos:position pos:line="27" pos:column="40"/></operator> <literal type="number" pos:line="27" pos:column="41">1<pos:position pos:line="27" pos:column="42"/></literal></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if></elseif> <elseif pos:line="28" pos:column="19">else <if pos:line="28" pos:column="24">if <condition pos:line="28" pos:column="27">(<expr><name><name pos:line="28" pos:column="28">argv<pos:position pos:line="28" pos:column="32"/></name><index pos:line="28" pos:column="32">[<expr><name pos:line="28" pos:column="33">arg<pos:position pos:line="28" pos:column="36"/></name></expr>]<pos:position pos:line="28" pos:column="37"/></index><index pos:line="28" pos:column="37">[<expr><literal type="number" pos:line="28" pos:column="38">1<pos:position pos:line="28" pos:column="39"/></literal></expr>]<pos:position pos:line="28" pos:column="40"/></index></name> <operator pos:line="28" pos:column="41">==<pos:position pos:line="28" pos:column="43"/></operator> <literal type="char" pos:line="28" pos:column="44">'w'<pos:position pos:line="28" pos:column="47"/></literal></expr>)<pos:position pos:line="28" pos:column="48"/></condition><then pos:line="28" pos:column="48"> <block pos:line="28" pos:column="49">{
			<expr_stmt><expr><name pos:line="29" pos:column="25">write_ref<pos:position pos:line="29" pos:column="34"/></name> <operator pos:line="29" pos:column="35">=<pos:position pos:line="29" pos:column="36"/></operator> <operator pos:line="29" pos:column="37">&amp;<pos:position pos:line="29" pos:column="42"/></operator><name><name pos:line="29" pos:column="38">argv<pos:position pos:line="29" pos:column="42"/></name><index pos:line="29" pos:column="42">[<expr><name pos:line="29" pos:column="43">arg<pos:position pos:line="29" pos:column="46"/></name> <operator pos:line="29" pos:column="47">+<pos:position pos:line="29" pos:column="48"/></operator> <literal type="number" pos:line="29" pos:column="49">1<pos:position pos:line="29" pos:column="50"/></literal></expr>]<pos:position pos:line="29" pos:column="51"/></index></name></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">arg<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">++<pos:position pos:line="30" pos:column="30"/></operator></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if></elseif> <elseif pos:line="31" pos:column="19">else <if pos:line="31" pos:column="24">if <condition pos:line="31" pos:column="27">(<expr><name><name pos:line="31" pos:column="28">argv<pos:position pos:line="31" pos:column="32"/></name><index pos:line="31" pos:column="32">[<expr><name pos:line="31" pos:column="33">arg<pos:position pos:line="31" pos:column="36"/></name></expr>]<pos:position pos:line="31" pos:column="37"/></index><index pos:line="31" pos:column="37">[<expr><literal type="number" pos:line="31" pos:column="38">1<pos:position pos:line="31" pos:column="39"/></literal></expr>]<pos:position pos:line="31" pos:column="40"/></index></name> <operator pos:line="31" pos:column="41">==<pos:position pos:line="31" pos:column="43"/></operator> <literal type="char" pos:line="31" pos:column="44">'h'<pos:position pos:line="31" pos:column="47"/></literal></expr>)<pos:position pos:line="31" pos:column="48"/></condition><then pos:line="31" pos:column="48"> <block pos:line="31" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">usage<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">http_fetch_usage<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if></elseif> <elseif pos:line="33" pos:column="19">else <if pos:line="33" pos:column="24">if <condition pos:line="33" pos:column="27">(<expr><operator pos:line="33" pos:column="28">!<pos:position pos:line="33" pos:column="29"/></operator><call><name pos:line="33" pos:column="29">strcmp<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name><name pos:line="33" pos:column="36">argv<pos:position pos:line="33" pos:column="40"/></name><index pos:line="33" pos:column="40">[<expr><name pos:line="33" pos:column="41">arg<pos:position pos:line="33" pos:column="44"/></name></expr>]<pos:position pos:line="33" pos:column="45"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="47">"--recover"<pos:position pos:line="33" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="60"/></condition><then pos:line="33" pos:column="60"> <block pos:line="33" pos:column="61">{
			<expr_stmt><expr><name pos:line="34" pos:column="25">get_recover<pos:position pos:line="34" pos:column="36"/></name> <operator pos:line="34" pos:column="37">=<pos:position pos:line="34" pos:column="38"/></operator> <literal type="number" pos:line="34" pos:column="39">1<pos:position pos:line="34" pos:column="40"/></literal></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if></elseif> <elseif pos:line="35" pos:column="19">else <if pos:line="35" pos:column="24">if <condition pos:line="35" pos:column="27">(<expr><operator pos:line="35" pos:column="28">!<pos:position pos:line="35" pos:column="29"/></operator><call><name pos:line="35" pos:column="29">strcmp<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name><name pos:line="35" pos:column="36">argv<pos:position pos:line="35" pos:column="40"/></name><index pos:line="35" pos:column="40">[<expr><name pos:line="35" pos:column="41">arg<pos:position pos:line="35" pos:column="44"/></name></expr>]<pos:position pos:line="35" pos:column="45"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="47">"--stdin"<pos:position pos:line="35" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="58"/></condition><then pos:line="35" pos:column="58"> <block pos:line="35" pos:column="59">{
			<expr_stmt><expr><name pos:line="36" pos:column="25">commits_on_stdin<pos:position pos:line="36" pos:column="41"/></name> <operator pos:line="36" pos:column="42">=<pos:position pos:line="36" pos:column="43"/></operator> <literal type="number" pos:line="36" pos:column="44">1<pos:position pos:line="36" pos:column="45"/></literal></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><name pos:line="38" pos:column="17">arg<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">++<pos:position pos:line="38" pos:column="22"/></operator></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></while>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">argc<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">!=<pos:position pos:line="40" pos:column="20"/></operator> <name pos:line="40" pos:column="21">arg<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">+<pos:position pos:line="40" pos:column="26"/></operator> <literal type="number" pos:line="40" pos:column="27">2<pos:position pos:line="40" pos:column="28"/></literal> <operator pos:line="40" pos:column="29">-<pos:position pos:line="40" pos:column="30"/></operator> <name pos:line="40" pos:column="31">commits_on_stdin<pos:position pos:line="40" pos:column="47"/></name></expr>)<pos:position pos:line="40" pos:column="48"/></condition><then pos:line="40" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">usage<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">http_fetch_usage<pos:position pos:line="41" pos:column="39"/></name></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt></block></then></if>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">commits_on_stdin<pos:position pos:line="42" pos:column="29"/></name></expr>)<pos:position pos:line="42" pos:column="30"/></condition><then pos:line="42" pos:column="30"> <block pos:line="42" pos:column="31">{
		<expr_stmt><expr><name pos:line="43" pos:column="17">commits<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <call><name pos:line="43" pos:column="27">walker_targets_stdin<pos:position pos:line="43" pos:column="47"/></name><argument_list pos:line="43" pos:column="47">(<argument><expr><operator pos:line="43" pos:column="48">&amp;<pos:position pos:line="43" pos:column="53"/></operator><name pos:line="43" pos:column="49">commit_id<pos:position pos:line="43" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="60">&amp;<pos:position pos:line="43" pos:column="65"/></operator><name pos:line="43" pos:column="61">write_ref<pos:position pos:line="43" pos:column="70"/></name></expr></argument>)<pos:position pos:line="43" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then> <else pos:line="44" pos:column="11">else <block pos:line="44" pos:column="16">{
		<expr_stmt><expr><name pos:line="45" pos:column="17">commit_id<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <operator pos:line="45" pos:column="29">(<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="30">char<pos:position pos:line="45" pos:column="34"/></name> <operator pos:line="45" pos:column="35">*<pos:position pos:line="45" pos:column="36"/></operator><operator pos:line="45" pos:column="36">*<pos:position pos:line="45" pos:column="37"/></operator><operator pos:line="45" pos:column="37">)<pos:position pos:line="45" pos:column="38"/></operator> <operator pos:line="45" pos:column="39">&amp;<pos:position pos:line="45" pos:column="44"/></operator><name><name pos:line="45" pos:column="40">argv<pos:position pos:line="45" pos:column="44"/></name><index pos:line="45" pos:column="44">[<expr><name pos:line="45" pos:column="45">arg<pos:position pos:line="45" pos:column="48"/></name><operator pos:line="45" pos:column="48">++<pos:position pos:line="45" pos:column="50"/></operator></expr>]<pos:position pos:line="45" pos:column="51"/></index></name></expr>;<pos:position pos:line="45" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name pos:line="46" pos:column="17">commits<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <literal type="number" pos:line="46" pos:column="27">1<pos:position pos:line="46" pos:column="28"/></literal></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="47" pos:column="10"/></block></else></if>

	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">get_all<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">==<pos:position pos:line="49" pos:column="23"/></operator> <literal type="number" pos:line="49" pos:column="24">0<pos:position pos:line="49" pos:column="25"/></literal></expr>)<pos:position pos:line="49" pos:column="26"/></condition><then pos:line="49" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="17">warning<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><literal type="string" pos:line="50" pos:column="25">"http-fetch: use without -a is deprecated.\n"<pos:position pos:line="50" pos:column="70"/></literal>
			<literal type="string" pos:line="51" pos:column="25">"In a future release, -a will become the default."<pos:position pos:line="51" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="77"/></expr_stmt></block></then></if>

	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name><name pos:line="53" pos:column="13">argv<pos:position pos:line="53" pos:column="17"/></name><index pos:line="53" pos:column="17">[<expr><name pos:line="53" pos:column="18">arg<pos:position pos:line="53" pos:column="21"/></name></expr>]<pos:position pos:line="53" pos:column="22"/></index></name></expr>)<pos:position pos:line="53" pos:column="23"/></condition><then pos:line="53" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="17">str_end_url_with_slash<pos:position pos:line="54" pos:column="39"/></name><argument_list pos:line="54" pos:column="39">(<argument><expr><name><name pos:line="54" pos:column="40">argv<pos:position pos:line="54" pos:column="44"/></name><index pos:line="54" pos:column="44">[<expr><name pos:line="54" pos:column="45">arg<pos:position pos:line="54" pos:column="48"/></name></expr>]<pos:position pos:line="54" pos:column="49"/></index></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="51">&amp;<pos:position pos:line="54" pos:column="56"/></operator><name pos:line="54" pos:column="52">url<pos:position pos:line="54" pos:column="55"/></name></expr></argument>)<pos:position pos:line="54" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="57"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="56" pos:column="9">setup_git_directory<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">()<pos:position pos:line="56" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="58" pos:column="9">git_config<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name pos:line="58" pos:column="20">git_default_config<pos:position pos:line="58" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="40">NULL<pos:position pos:line="58" pos:column="44"/></name></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="60" pos:column="9">http_init<pos:position pos:line="60" pos:column="18"/></name><argument_list pos:line="60" pos:column="18">(<argument><expr><name pos:line="60" pos:column="19">NULL<pos:position pos:line="60" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="25">url<pos:position pos:line="60" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="30">0<pos:position pos:line="60" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="61" pos:column="9">walker<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <call><name pos:line="61" pos:column="18">get_http_walker<pos:position pos:line="61" pos:column="33"/></name><argument_list pos:line="61" pos:column="33">(<argument><expr><name pos:line="61" pos:column="34">url<pos:position pos:line="61" pos:column="37"/></name></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="62" pos:column="9">walker<pos:position pos:line="62" pos:column="15"/></name><operator pos:line="62" pos:column="15">-&gt;<pos:position pos:line="62" pos:column="20"/></operator><name pos:line="62" pos:column="17">get_tree<pos:position pos:line="62" pos:column="25"/></name></name> <operator pos:line="62" pos:column="26">=<pos:position pos:line="62" pos:column="27"/></operator> <name pos:line="62" pos:column="28">get_tree<pos:position pos:line="62" pos:column="36"/></name></expr>;<pos:position pos:line="62" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="63" pos:column="9">walker<pos:position pos:line="63" pos:column="15"/></name><operator pos:line="63" pos:column="15">-&gt;<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="17">get_history<pos:position pos:line="63" pos:column="28"/></name></name> <operator pos:line="63" pos:column="29">=<pos:position pos:line="63" pos:column="30"/></operator> <name pos:line="63" pos:column="31">get_history<pos:position pos:line="63" pos:column="42"/></name></expr>;<pos:position pos:line="63" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="64" pos:column="9">walker<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">-&gt;<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="17">get_all<pos:position pos:line="64" pos:column="24"/></name></name> <operator pos:line="64" pos:column="25">=<pos:position pos:line="64" pos:column="26"/></operator> <name pos:line="64" pos:column="27">get_all<pos:position pos:line="64" pos:column="34"/></name></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="65" pos:column="9">walker<pos:position pos:line="65" pos:column="15"/></name><operator pos:line="65" pos:column="15">-&gt;<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="17">get_verbosely<pos:position pos:line="65" pos:column="30"/></name></name> <operator pos:line="65" pos:column="31">=<pos:position pos:line="65" pos:column="32"/></operator> <name pos:line="65" pos:column="33">get_verbosely<pos:position pos:line="65" pos:column="46"/></name></expr>;<pos:position pos:line="65" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="66" pos:column="9">walker<pos:position pos:line="66" pos:column="15"/></name><operator pos:line="66" pos:column="15">-&gt;<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="17">get_recover<pos:position pos:line="66" pos:column="28"/></name></name> <operator pos:line="66" pos:column="29">=<pos:position pos:line="66" pos:column="30"/></operator> <name pos:line="66" pos:column="31">get_recover<pos:position pos:line="66" pos:column="42"/></name></expr>;<pos:position pos:line="66" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><name pos:line="68" pos:column="9">rc<pos:position pos:line="68" pos:column="11"/></name> <operator pos:line="68" pos:column="12">=<pos:position pos:line="68" pos:column="13"/></operator> <call><name pos:line="68" pos:column="14">walker_fetch<pos:position pos:line="68" pos:column="26"/></name><argument_list pos:line="68" pos:column="26">(<argument><expr><name pos:line="68" pos:column="27">walker<pos:position pos:line="68" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="35">commits<pos:position pos:line="68" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="44">commit_id<pos:position pos:line="68" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="55">write_ref<pos:position pos:line="68" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="66">url<pos:position pos:line="68" pos:column="69"/></name></expr></argument>)<pos:position pos:line="68" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="71"/></expr_stmt>

	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">commits_on_stdin<pos:position pos:line="70" pos:column="29"/></name></expr>)<pos:position pos:line="70" pos:column="30"/></condition><then pos:line="70" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="17">walker_targets_free<pos:position pos:line="71" pos:column="36"/></name><argument_list pos:line="71" pos:column="36">(<argument><expr><name pos:line="71" pos:column="37">commits<pos:position pos:line="71" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="46">commit_id<pos:position pos:line="71" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="57">write_ref<pos:position pos:line="71" pos:column="66"/></name></expr></argument>)<pos:position pos:line="71" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="68"/></expr_stmt></block></then></if>

	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name><name pos:line="73" pos:column="13">walker<pos:position pos:line="73" pos:column="19"/></name><operator pos:line="73" pos:column="19">-&gt;<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="21">corrupt_object_found<pos:position pos:line="73" pos:column="41"/></name></name></expr>)<pos:position pos:line="73" pos:column="42"/></condition><then pos:line="73" pos:column="42"> <block pos:line="73" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">fprintf<pos:position pos:line="74" pos:column="24"/></name><argument_list pos:line="74" pos:column="24">(<argument><expr><name pos:line="74" pos:column="25">stderr<pos:position pos:line="74" pos:column="31"/></name></expr></argument>,
<argument><expr><literal type="string" pos:line="75" pos:column="1">"Some loose object were found to be corrupt, but they might be just\n"<pos:position pos:line="75" pos:column="71"/></literal>
<literal type="string" pos:line="76" pos:column="1">"a false '404 Not Found' error message sent with incorrect HTTP\n"<pos:position pos:line="76" pos:column="67"/></literal>
<literal type="string" pos:line="77" pos:column="1">"status code.  Suggest running 'git fsck'.\n"<pos:position pos:line="77" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="78" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="80" pos:column="9">walker_free<pos:position pos:line="80" pos:column="20"/></name><argument_list pos:line="80" pos:column="20">(<argument><expr><name pos:line="80" pos:column="21">walker<pos:position pos:line="80" pos:column="27"/></name></expr></argument>)<pos:position pos:line="80" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="81" pos:column="9">http_cleanup<pos:position pos:line="81" pos:column="21"/></name><argument_list pos:line="81" pos:column="21">()<pos:position pos:line="81" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="24"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="83" pos:column="9">free<pos:position pos:line="83" pos:column="13"/></name><argument_list pos:line="83" pos:column="13">(<argument><expr><name pos:line="83" pos:column="14">url<pos:position pos:line="83" pos:column="17"/></name></expr></argument>)<pos:position pos:line="83" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="19"/></expr_stmt>

	<return pos:line="85" pos:column="9">return <expr><name pos:line="85" pos:column="16">rc<pos:position pos:line="85" pos:column="18"/></name></expr>;<pos:position pos:line="85" pos:column="19"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

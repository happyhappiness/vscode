<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4348_git-2.5.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">shortlog_add_commit<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">shortlog<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">log<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="48">struct<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">commit<pos:position pos:line="1" pos:column="61"/></name></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">commit<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">author<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name pos:line="3" pos:column="30">NULL<pos:position pos:line="3" pos:column="34"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="37">buffer<pos:position pos:line="3" pos:column="43"/></name></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">ufbuf<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><name pos:line="5" pos:column="31">STRBUF_INIT<pos:position pos:line="5" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">pp_commit_easy<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">CMIT_FMT_RAW<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="38">commit<pos:position pos:line="7" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="46">&amp;<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="47">buf<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">buffer<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name><name pos:line="8" pos:column="18">buf<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">.<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">buf<pos:position pos:line="8" pos:column="25"/></name></name></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><operator pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">buffer<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&amp;&amp;<pos:position pos:line="9" pos:column="34"/></operator> <operator pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">buffer<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">!=<pos:position pos:line="9" pos:column="37"/></operator> <literal type="char" pos:line="9" pos:column="38">'\n'<pos:position pos:line="9" pos:column="42"/></literal></expr>)<pos:position pos:line="9" pos:column="43"/></condition> <block pos:line="9" pos:column="44">{
		<decl_stmt><decl><type><specifier pos:line="10" pos:column="17">const<pos:position pos:line="10" pos:column="22"/></specifier> <name pos:line="10" pos:column="23">char<pos:position pos:line="10" pos:column="27"/></name> <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">eol<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><call><name pos:line="10" pos:column="35">strchr<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">buffer<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="50">'\n'<pos:position pos:line="10" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="56"/></decl_stmt>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">eol<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">==<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="28">NULL<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">eol<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <name pos:line="13" pos:column="31">buffer<pos:position pos:line="13" pos:column="37"/></name> <operator pos:line="13" pos:column="38">+<pos:position pos:line="13" pos:column="39"/></operator> <call><name pos:line="13" pos:column="40">strlen<pos:position pos:line="13" pos:column="46"/></name><argument_list pos:line="13" pos:column="46">(<argument><expr><name pos:line="13" pos:column="47">buffer<pos:position pos:line="13" pos:column="53"/></name></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt></block></then>
		<else pos:line="14" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">eol<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">++<pos:position pos:line="15" pos:column="30"/></operator></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt></block></else></if>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">starts_with<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">buffer<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="41">"author "<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="52"/></condition><then pos:line="17" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">author<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">=<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="34">buffer<pos:position pos:line="18" pos:column="40"/></name> <operator pos:line="18" pos:column="41">+<pos:position pos:line="18" pos:column="42"/></operator> <literal type="number" pos:line="18" pos:column="43">7<pos:position pos:line="18" pos:column="44"/></literal></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="19" pos:column="17">buffer<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">eol<pos:position pos:line="19" pos:column="29"/></name></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></while>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">author<pos:position pos:line="21" pos:column="20"/></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21"> <block pos:line="21" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">warning<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><call><name pos:line="22" pos:column="25">_<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><literal type="string" pos:line="22" pos:column="27">"Missing author: %s"<pos:position pos:line="22" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr></argument>,
		    <argument><expr><call><name pos:line="23" pos:column="21">sha1_to_hex<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name><name pos:line="23" pos:column="33">commit<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">-&gt;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="41">object<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">.<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="48">sha1<pos:position pos:line="23" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
		<return pos:line="24" pos:column="17">return;<pos:position pos:line="24" pos:column="24"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">log<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">user_format<pos:position pos:line="26" pos:column="29"/></name></name></expr>)<pos:position pos:line="26" pos:column="30"/></condition><then pos:line="26" pos:column="30"> <block pos:line="26" pos:column="31">{
		<decl_stmt><decl><type><name><name pos:line="27" pos:column="17">struct<pos:position pos:line="27" pos:column="23"/></name> <name pos:line="27" pos:column="24">pretty_print_context<pos:position pos:line="27" pos:column="44"/></name></name></type> <name pos:line="27" pos:column="45">ctx<pos:position pos:line="27" pos:column="48"/></name> <init pos:line="27" pos:column="49">= <expr><block pos:line="27" pos:column="51">{<expr><literal type="number" pos:line="27" pos:column="52">0<pos:position pos:line="27" pos:column="53"/></literal></expr>}<pos:position pos:line="27" pos:column="54"/></block></expr></init></decl>;<pos:position pos:line="27" pos:column="55"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">ctx<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">.<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">fmt<pos:position pos:line="28" pos:column="24"/></name></name> <operator pos:line="28" pos:column="25">=<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">CMIT_FMT_USERFORMAT<pos:position pos:line="28" pos:column="46"/></name></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">ctx<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">.<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="21">abbrev<pos:position pos:line="29" pos:column="27"/></name></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <name><name pos:line="29" pos:column="30">log<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">-&gt;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="35">abbrev<pos:position pos:line="29" pos:column="41"/></name></name></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="30" pos:column="17">ctx<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">.<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">subject<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <literal type="string" pos:line="30" pos:column="31">""<pos:position pos:line="30" pos:column="33"/></literal></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">ctx<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">.<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">after_subject<pos:position pos:line="31" pos:column="34"/></name></name> <operator pos:line="31" pos:column="35">=<pos:position pos:line="31" pos:column="36"/></operator> <literal type="string" pos:line="31" pos:column="37">""<pos:position pos:line="31" pos:column="39"/></literal></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">ctx<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">.<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">date_mode<pos:position pos:line="32" pos:column="30"/></name></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <name pos:line="32" pos:column="33">DATE_NORMAL<pos:position pos:line="32" pos:column="44"/></name></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">ctx<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">.<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">output_encoding<pos:position pos:line="33" pos:column="36"/></name></name> <operator pos:line="33" pos:column="37">=<pos:position pos:line="33" pos:column="38"/></operator> <call><name pos:line="33" pos:column="39">get_log_output_encoding<pos:position pos:line="33" pos:column="62"/></name><argument_list pos:line="33" pos:column="62">()<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">pretty_print_commit<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><operator pos:line="34" pos:column="37">&amp;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="38">ctx<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">commit<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="51">&amp;<pos:position pos:line="34" pos:column="56"/></operator><name pos:line="34" pos:column="52">ufbuf<pos:position pos:line="34" pos:column="57"/></name></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">buffer<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <name><name pos:line="35" pos:column="26">ufbuf<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">.<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="32">buf<pos:position pos:line="35" pos:column="35"/></name></name></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then> <elseif pos:line="36" pos:column="11">else <if pos:line="36" pos:column="16">if <condition pos:line="36" pos:column="19">(<expr><operator pos:line="36" pos:column="20">*<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">buffer<pos:position pos:line="36" pos:column="27"/></name></expr>)<pos:position pos:line="36" pos:column="28"/></condition><then pos:line="36" pos:column="28"> <block pos:line="36" pos:column="29">{
		<expr_stmt><expr><name pos:line="37" pos:column="17">buffer<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">++<pos:position pos:line="37" pos:column="25"/></operator></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if></elseif></if>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">insert_one_record<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">log<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">author<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="39" pos:column="40">!<pos:position pos:line="39" pos:column="41"/></operator><operator pos:line="39" pos:column="41">*<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="42">buffer<pos:position pos:line="39" pos:column="48"/></name></expr> ?<pos:position pos:line="39" pos:column="50"/></condition><then pos:line="39" pos:column="50"> <expr><literal type="string" pos:line="39" pos:column="51">"&lt;none&gt;"<pos:position pos:line="39" pos:column="65"/></literal></expr> <pos:position pos:line="39" pos:column="60"/></then><else pos:line="39" pos:column="60">: <expr><name pos:line="39" pos:column="62">buffer<pos:position pos:line="39" pos:column="68"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">strbuf_release<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><operator pos:line="40" pos:column="24">&amp;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="25">ufbuf<pos:position pos:line="40" pos:column="30"/></name></expr></argument>)<pos:position pos:line="40" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">strbuf_release<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><operator pos:line="41" pos:column="24">&amp;<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="25">buf<pos:position pos:line="41" pos:column="28"/></name></expr></argument>)<pos:position pos:line="41" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

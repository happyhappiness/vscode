<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4839_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">long<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">xdl_guess_lines<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">mmfile_t<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">mf<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">long<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">sample<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <block pos:line="1" pos:column="49">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">long<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">nl<pos:position pos:line="2" pos:column="16"/></name> <init pos:line="2" pos:column="17">= <expr><literal type="number" pos:line="2" pos:column="19">0<pos:position pos:line="2" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="22">size<pos:position pos:line="2" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="28">tsize<pos:position pos:line="2" pos:column="33"/></name> <init pos:line="2" pos:column="34">= <expr><literal type="number" pos:line="2" pos:column="36">0<pos:position pos:line="2" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <specifier pos:line="3" pos:column="14">const<pos:position pos:line="3" pos:column="19"/></specifier> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">data<pos:position pos:line="3" pos:column="25"/></name></decl>, <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="28">cur<pos:position pos:line="3" pos:column="31"/></name></decl>, <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="34">top<pos:position pos:line="3" pos:column="37"/></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">(<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">cur<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">=<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">data<pos:position pos:line="5" pos:column="24"/></name> <operator pos:line="5" pos:column="25">=<pos:position pos:line="5" pos:column="26"/></operator> <call><name pos:line="5" pos:column="27">xdl_mmfile_first<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">(<argument><expr><name pos:line="5" pos:column="44">mf<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="48">&amp;<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="49">size<pos:position pos:line="5" pos:column="53"/></name></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call><operator pos:line="5" pos:column="54">)<pos:position pos:line="5" pos:column="55"/></operator> <operator pos:line="5" pos:column="56">!=<pos:position pos:line="5" pos:column="58"/></operator> <name pos:line="5" pos:column="59">NULL<pos:position pos:line="5" pos:column="63"/></name></expr>)<pos:position pos:line="5" pos:column="64"/></condition><then pos:line="5" pos:column="64"> <block pos:line="5" pos:column="65">{
		<for pos:line="6" pos:column="17">for <control pos:line="6" pos:column="21">(<init><expr><name pos:line="6" pos:column="22">top<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">=<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="28">data<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">+<pos:position pos:line="6" pos:column="34"/></operator> <name pos:line="6" pos:column="35">size<pos:position pos:line="6" pos:column="39"/></name></expr>;<pos:position pos:line="6" pos:column="40"/></init> <condition><expr><name pos:line="6" pos:column="41">nl<pos:position pos:line="6" pos:column="43"/></name> <operator pos:line="6" pos:column="44">&lt;<pos:position pos:line="6" pos:column="48"/></operator> <name pos:line="6" pos:column="46">sample<pos:position pos:line="6" pos:column="52"/></name> <operator pos:line="6" pos:column="53">&amp;&amp;<pos:position pos:line="6" pos:column="63"/></operator> <name pos:line="6" pos:column="56">cur<pos:position pos:line="6" pos:column="59"/></name> <operator pos:line="6" pos:column="60">&lt;<pos:position pos:line="6" pos:column="64"/></operator> <name pos:line="6" pos:column="62">top<pos:position pos:line="6" pos:column="65"/></name></expr>;<pos:position pos:line="6" pos:column="66"/></condition> <incr/>)<pos:position pos:line="6" pos:column="68"/></control> <block pos:line="6" pos:column="69">{
			<expr_stmt><expr><name pos:line="7" pos:column="25">nl<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">++<pos:position pos:line="7" pos:column="29"/></operator></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
			<if pos:line="8" pos:column="25">if <condition pos:line="8" pos:column="28">(<expr><operator pos:line="8" pos:column="29">!<pos:position pos:line="8" pos:column="30"/></operator><operator pos:line="8" pos:column="30">(<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">cur<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">=<pos:position pos:line="8" pos:column="36"/></operator> <call><name pos:line="8" pos:column="37">memchr<pos:position pos:line="8" pos:column="43"/></name><argument_list pos:line="8" pos:column="43">(<argument><expr><name pos:line="8" pos:column="44">cur<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="49">'\n'<pos:position pos:line="8" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="55">top<pos:position pos:line="8" pos:column="58"/></name> <operator pos:line="8" pos:column="59">-<pos:position pos:line="8" pos:column="60"/></operator> <name pos:line="8" pos:column="61">cur<pos:position pos:line="8" pos:column="64"/></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call><operator pos:line="8" pos:column="65">)<pos:position pos:line="8" pos:column="66"/></operator></expr>)<pos:position pos:line="8" pos:column="67"/></condition><then pos:line="8" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="33">cur<pos:position pos:line="9" pos:column="36"/></name> <operator pos:line="9" pos:column="37">=<pos:position pos:line="9" pos:column="38"/></operator> <name pos:line="9" pos:column="39">top<pos:position pos:line="9" pos:column="42"/></name></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt></block></then>
			<else pos:line="10" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="33">cur<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">++<pos:position pos:line="11" pos:column="38"/></operator></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt></block></else></if>
		}<pos:position pos:line="12" pos:column="18"/></block></for>
		<expr_stmt><expr><name pos:line="13" pos:column="17">tsize<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">+=<pos:position pos:line="13" pos:column="25"/></operator> <call pos:line="13" pos:column="26">(<name pos:line="13" pos:column="27">long<pos:position pos:line="13" pos:column="31"/></name>) <argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">cur<pos:position pos:line="13" pos:column="37"/></name> <operator pos:line="13" pos:column="38">-<pos:position pos:line="13" pos:column="39"/></operator> <name pos:line="13" pos:column="40">data<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">nl<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">&amp;&amp;<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="19">tsize<pos:position pos:line="16" pos:column="24"/></name></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">nl<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <call><name pos:line="17" pos:column="22">xdl_mmfile_size<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">mf<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call> <operator pos:line="17" pos:column="42">/<pos:position pos:line="17" pos:column="43"/></operator> <operator pos:line="17" pos:column="44">(<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="45">tsize<pos:position pos:line="17" pos:column="50"/></name> <operator pos:line="17" pos:column="51">/<pos:position pos:line="17" pos:column="52"/></operator> <name pos:line="17" pos:column="53">nl<pos:position pos:line="17" pos:column="55"/></name><operator pos:line="17" pos:column="55">)<pos:position pos:line="17" pos:column="56"/></operator></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt></block></then></if>

	<return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">nl<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">+<pos:position pos:line="19" pos:column="20"/></operator> <literal type="number" pos:line="19" pos:column="21">1<pos:position pos:line="19" pos:column="22"/></literal></expr>;<pos:position pos:line="19" pos:column="23"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

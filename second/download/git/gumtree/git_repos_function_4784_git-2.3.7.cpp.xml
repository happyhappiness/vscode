<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4784_git-2.3.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_cherry<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">argc<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">argv<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">prefix<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_info<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">revs<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">patch_ids<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">ids<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">commit<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit_list<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">list<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><name pos:line="6" pos:column="36">NULL<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">branch<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">current_branch<pos:position pos:line="7" pos:column="38"/></name></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">upstream<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">head<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><literal type="string" pos:line="9" pos:column="28">"HEAD"<pos:position pos:line="9" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">limit<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><name pos:line="10" pos:column="29">NULL<pos:position pos:line="10" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">verbose<pos:position pos:line="11" pos:column="20"/></name> <init pos:line="11" pos:column="21">= <expr><literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="26">abbrev<pos:position pos:line="11" pos:column="32"/></name> <init pos:line="11" pos:column="33">= <expr><literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="37"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">option<pos:position pos:line="13" pos:column="22"/></name></name></type> <name><name pos:line="13" pos:column="23">options<pos:position pos:line="13" pos:column="30"/></name><index pos:line="13" pos:column="30">[]<pos:position pos:line="13" pos:column="32"/></index></name> <init pos:line="13" pos:column="33">= <expr><block pos:line="13" pos:column="35">{
		<expr><call><name pos:line="14" pos:column="17">OPT__ABBREV<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><operator pos:line="14" pos:column="29">&amp;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="30">abbrev<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>,
		<expr><call><name pos:line="15" pos:column="17">OPT__VERBOSE<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><operator pos:line="15" pos:column="30">&amp;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="31">verbose<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="40">N_<pos:position pos:line="15" pos:column="42"/></name><argument_list pos:line="15" pos:column="42">(<argument><expr><literal type="string" pos:line="15" pos:column="43">"be verbose"<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>,
		<macro><name pos:line="16" pos:column="17">OPT_END<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">()<pos:position pos:line="16" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="17" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="17" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="19" pos:column="9">argc<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">parse_options<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">argc<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="36">argv<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">prefix<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">options<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">cherry_usage<pos:position pos:line="19" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="73">0<pos:position pos:line="19" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="76"/></expr_stmt>

	<switch pos:line="21" pos:column="9">switch <condition pos:line="21" pos:column="16">(<expr><name pos:line="21" pos:column="17">argc<pos:position pos:line="21" pos:column="21"/></name></expr>)<pos:position pos:line="21" pos:column="22"/></condition> <block pos:line="21" pos:column="23">{
	<case pos:line="22" pos:column="9">case <expr><literal type="number" pos:line="22" pos:column="14">3<pos:position pos:line="22" pos:column="15"/></literal></expr>:<pos:position pos:line="22" pos:column="16"/></case>
		<expr_stmt><expr><name pos:line="23" pos:column="17">limit<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name><name pos:line="23" pos:column="25">argv<pos:position pos:line="23" pos:column="29"/></name><index pos:line="23" pos:column="29">[<expr><literal type="number" pos:line="23" pos:column="30">2<pos:position pos:line="23" pos:column="31"/></literal></expr>]<pos:position pos:line="23" pos:column="32"/></index></name></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
		<comment type="block" pos:line="24" pos:column="17">/* FALLTHROUGH */</comment>
	<case pos:line="25" pos:column="9">case <expr><literal type="number" pos:line="25" pos:column="14">2<pos:position pos:line="25" pos:column="15"/></literal></expr>:<pos:position pos:line="25" pos:column="16"/></case>
		<expr_stmt><expr><name pos:line="26" pos:column="17">head<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name><name pos:line="26" pos:column="24">argv<pos:position pos:line="26" pos:column="28"/></name><index pos:line="26" pos:column="28">[<expr><literal type="number" pos:line="26" pos:column="29">1<pos:position pos:line="26" pos:column="30"/></literal></expr>]<pos:position pos:line="26" pos:column="31"/></index></name></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
		<comment type="block" pos:line="27" pos:column="17">/* FALLTHROUGH */</comment>
	<case pos:line="28" pos:column="9">case <expr><literal type="number" pos:line="28" pos:column="14">1<pos:position pos:line="28" pos:column="15"/></literal></expr>:<pos:position pos:line="28" pos:column="16"/></case>
		<expr_stmt><expr><name pos:line="29" pos:column="17">upstream<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <name><name pos:line="29" pos:column="28">argv<pos:position pos:line="29" pos:column="32"/></name><index pos:line="29" pos:column="32">[<expr><literal type="number" pos:line="29" pos:column="33">0<pos:position pos:line="29" pos:column="34"/></literal></expr>]<pos:position pos:line="29" pos:column="35"/></index></name></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
		<break pos:line="30" pos:column="17">break;<pos:position pos:line="30" pos:column="23"/></break>
	<default pos:line="31" pos:column="9">default:<pos:position pos:line="31" pos:column="17"/></default>
		<expr_stmt><expr><name pos:line="32" pos:column="17">current_branch<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">=<pos:position pos:line="32" pos:column="33"/></operator> <call><name pos:line="32" pos:column="34">branch_get<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">(<argument><expr><name pos:line="32" pos:column="45">NULL<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">!<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">current_branch<pos:position pos:line="33" pos:column="36"/></name> <operator pos:line="33" pos:column="37">||<pos:position pos:line="33" pos:column="39"/></operator> <operator pos:line="33" pos:column="40">!<pos:position pos:line="33" pos:column="41"/></operator><name><name pos:line="33" pos:column="41">current_branch<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">-&gt;<pos:position pos:line="33" pos:column="60"/></operator><name pos:line="33" pos:column="57">merge<pos:position pos:line="33" pos:column="62"/></name></name>
					<operator pos:line="34" pos:column="41">||<pos:position pos:line="34" pos:column="43"/></operator> <operator pos:line="34" pos:column="44">!<pos:position pos:line="34" pos:column="45"/></operator><name><name pos:line="34" pos:column="45">current_branch<pos:position pos:line="34" pos:column="59"/></name><operator pos:line="34" pos:column="59">-&gt;<pos:position pos:line="34" pos:column="64"/></operator><name pos:line="34" pos:column="61">merge<pos:position pos:line="34" pos:column="66"/></name><index pos:line="34" pos:column="66">[<expr><literal type="number" pos:line="34" pos:column="67">0<pos:position pos:line="34" pos:column="68"/></literal></expr>]<pos:position pos:line="34" pos:column="69"/></index></name>
					<operator pos:line="35" pos:column="41">||<pos:position pos:line="35" pos:column="43"/></operator> <operator pos:line="35" pos:column="44">!<pos:position pos:line="35" pos:column="45"/></operator><name><name pos:line="35" pos:column="45">current_branch<pos:position pos:line="35" pos:column="59"/></name><operator pos:line="35" pos:column="59">-&gt;<pos:position pos:line="35" pos:column="64"/></operator><name pos:line="35" pos:column="61">merge<pos:position pos:line="35" pos:column="66"/></name><index pos:line="35" pos:column="66">[<expr><literal type="number" pos:line="35" pos:column="67">0<pos:position pos:line="35" pos:column="68"/></literal></expr>]<pos:position pos:line="35" pos:column="69"/></index></name><operator pos:line="35" pos:column="69">-&gt;<pos:position pos:line="35" pos:column="74"/></operator><name pos:line="35" pos:column="71">dst<pos:position pos:line="35" pos:column="74"/></name></expr>)<pos:position pos:line="35" pos:column="75"/></condition><then pos:line="35" pos:column="75"> <block pos:line="35" pos:column="76">{
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">fprintf<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">stderr<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="41">_<pos:position pos:line="36" pos:column="42"/></name><argument_list pos:line="36" pos:column="42">(<argument><expr><literal type="string" pos:line="36" pos:column="43">"Could not find a tracked"<pos:position pos:line="36" pos:column="69"/></literal>
					<literal type="string" pos:line="37" pos:column="41">" remote branch, please"<pos:position pos:line="37" pos:column="65"/></literal>
					<literal type="string" pos:line="38" pos:column="41">" specify &lt;upstream&gt; manually.\n"<pos:position pos:line="38" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">usage_with_options<pos:position pos:line="39" pos:column="43"/></name><argument_list pos:line="39" pos:column="43">(<argument><expr><name pos:line="39" pos:column="44">cherry_usage<pos:position pos:line="39" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="58">options<pos:position pos:line="39" pos:column="65"/></name></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="42" pos:column="17">upstream<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <name><name pos:line="42" pos:column="28">current_branch<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">-&gt;<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="44">merge<pos:position pos:line="42" pos:column="49"/></name><index pos:line="42" pos:column="49">[<expr><literal type="number" pos:line="42" pos:column="50">0<pos:position pos:line="42" pos:column="51"/></literal></expr>]<pos:position pos:line="42" pos:column="52"/></index></name><operator pos:line="42" pos:column="52">-&gt;<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="54">dst<pos:position pos:line="42" pos:column="57"/></name></expr>;<pos:position pos:line="42" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></switch>

	<expr_stmt><expr><call><name pos:line="45" pos:column="9">init_revisions<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><operator pos:line="45" pos:column="24">&amp;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="25">revs<pos:position pos:line="45" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="31">prefix<pos:position pos:line="45" pos:column="37"/></name></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">revs<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">.<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">max_parents<pos:position pos:line="46" pos:column="25"/></name></name> <operator pos:line="46" pos:column="26">=<pos:position pos:line="46" pos:column="27"/></operator> <literal type="number" pos:line="46" pos:column="28">1<pos:position pos:line="46" pos:column="29"/></literal></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><call><name pos:line="48" pos:column="13">add_pending_commit<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><name pos:line="48" pos:column="32">head<pos:position pos:line="48" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="38">&amp;<pos:position pos:line="48" pos:column="43"/></operator><name pos:line="48" pos:column="39">revs<pos:position pos:line="48" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="45">0<pos:position pos:line="48" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="48"/></condition><then pos:line="48" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="17">die<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><call><name pos:line="49" pos:column="21">_<pos:position pos:line="49" pos:column="22"/></name><argument_list pos:line="49" pos:column="22">(<argument><expr><literal type="string" pos:line="49" pos:column="23">"Unknown commit %s"<pos:position pos:line="49" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="49" pos:column="45">head<pos:position pos:line="49" pos:column="49"/></name></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="51"/></expr_stmt></block></then></if>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><call><name pos:line="50" pos:column="13">add_pending_commit<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><name pos:line="50" pos:column="32">upstream<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="42">&amp;<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="43">revs<pos:position pos:line="50" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="49">UNINTERESTING<pos:position pos:line="50" pos:column="62"/></name></expr></argument>)<pos:position pos:line="50" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="64"/></condition><then pos:line="50" pos:column="64">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="17">die<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">(<argument><expr><call><name pos:line="51" pos:column="21">_<pos:position pos:line="51" pos:column="22"/></name><argument_list pos:line="51" pos:column="22">(<argument><expr><literal type="string" pos:line="51" pos:column="23">"Unknown commit %s"<pos:position pos:line="51" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="51" pos:column="45">upstream<pos:position pos:line="51" pos:column="53"/></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="53" pos:column="9">/* Don't say anything if head and upstream are the same. */</comment>
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name><name pos:line="54" pos:column="13">revs<pos:position pos:line="54" pos:column="17"/></name><operator pos:line="54" pos:column="17">.<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="18">pending<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">.<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="26">nr<pos:position pos:line="54" pos:column="28"/></name></name> <operator pos:line="54" pos:column="29">==<pos:position pos:line="54" pos:column="31"/></operator> <literal type="number" pos:line="54" pos:column="32">2<pos:position pos:line="54" pos:column="33"/></literal></expr>)<pos:position pos:line="54" pos:column="34"/></condition><then pos:line="54" pos:column="34"> <block pos:line="54" pos:column="35">{
		<decl_stmt><decl><type><name><name pos:line="55" pos:column="17">struct<pos:position pos:line="55" pos:column="23"/></name> <name pos:line="55" pos:column="24">object_array_entry<pos:position pos:line="55" pos:column="42"/></name></name> <modifier pos:line="55" pos:column="43">*<pos:position pos:line="55" pos:column="44"/></modifier></type><name pos:line="55" pos:column="44">o<pos:position pos:line="55" pos:column="45"/></name> <init pos:line="55" pos:column="46">= <expr><name><name pos:line="55" pos:column="48">revs<pos:position pos:line="55" pos:column="52"/></name><operator pos:line="55" pos:column="52">.<pos:position pos:line="55" pos:column="53"/></operator><name pos:line="55" pos:column="53">pending<pos:position pos:line="55" pos:column="60"/></name><operator pos:line="55" pos:column="60">.<pos:position pos:line="55" pos:column="61"/></operator><name pos:line="55" pos:column="61">objects<pos:position pos:line="55" pos:column="68"/></name></name></expr></init></decl>;<pos:position pos:line="55" pos:column="69"/></decl_stmt>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><call><name pos:line="56" pos:column="21">hashcmp<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name><name pos:line="56" pos:column="29">o<pos:position pos:line="56" pos:column="30"/></name><index pos:line="56" pos:column="30">[<expr><literal type="number" pos:line="56" pos:column="31">0<pos:position pos:line="56" pos:column="32"/></literal></expr>]<pos:position pos:line="56" pos:column="33"/></index></name><operator pos:line="56" pos:column="33">.<pos:position pos:line="56" pos:column="34"/></operator><name><name pos:line="56" pos:column="34">item<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">-&gt;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="40">sha1<pos:position pos:line="56" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="46">o<pos:position pos:line="56" pos:column="47"/></name><index pos:line="56" pos:column="47">[<expr><literal type="number" pos:line="56" pos:column="48">1<pos:position pos:line="56" pos:column="49"/></literal></expr>]<pos:position pos:line="56" pos:column="50"/></index></name><operator pos:line="56" pos:column="50">.<pos:position pos:line="56" pos:column="51"/></operator><name><name pos:line="56" pos:column="51">item<pos:position pos:line="56" pos:column="55"/></name><operator pos:line="56" pos:column="55">-&gt;<pos:position pos:line="56" pos:column="60"/></operator><name pos:line="56" pos:column="57">sha1<pos:position pos:line="56" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="62"/></argument_list></call> <operator pos:line="56" pos:column="63">==<pos:position pos:line="56" pos:column="65"/></operator> <literal type="number" pos:line="56" pos:column="66">0<pos:position pos:line="56" pos:column="67"/></literal></expr>)<pos:position pos:line="56" pos:column="68"/></condition><then pos:line="56" pos:column="68">
			<block type="pseudo"><return pos:line="57" pos:column="25">return <expr><literal type="number" pos:line="57" pos:column="32">0<pos:position pos:line="57" pos:column="33"/></literal></expr>;<pos:position pos:line="57" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="60" pos:column="9">get_patch_ids<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">(<argument><expr><operator pos:line="60" pos:column="23">&amp;<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="24">revs<pos:position pos:line="60" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="30">&amp;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="31">ids<pos:position pos:line="60" pos:column="34"/></name></expr></argument>)<pos:position pos:line="60" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="36"/></expr_stmt>

	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">limit<pos:position pos:line="62" pos:column="18"/></name> <operator pos:line="62" pos:column="19">&amp;&amp;<pos:position pos:line="62" pos:column="29"/></operator> <call><name pos:line="62" pos:column="22">add_pending_commit<pos:position pos:line="62" pos:column="40"/></name><argument_list pos:line="62" pos:column="40">(<argument><expr><name pos:line="62" pos:column="41">limit<pos:position pos:line="62" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="48">&amp;<pos:position pos:line="62" pos:column="53"/></operator><name pos:line="62" pos:column="49">revs<pos:position pos:line="62" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="55">UNINTERESTING<pos:position pos:line="62" pos:column="68"/></name></expr></argument>)<pos:position pos:line="62" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="70"/></condition><then pos:line="62" pos:column="70">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="17">die<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><call><name pos:line="63" pos:column="21">_<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><literal type="string" pos:line="63" pos:column="23">"Unknown commit %s"<pos:position pos:line="63" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="63" pos:column="45">limit<pos:position pos:line="63" pos:column="50"/></name></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="52"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="65" pos:column="9">/* reverse the list of commits */</comment>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><call><name pos:line="66" pos:column="13">prepare_revision_walk<pos:position pos:line="66" pos:column="34"/></name><argument_list pos:line="66" pos:column="34">(<argument><expr><operator pos:line="66" pos:column="35">&amp;<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="36">revs<pos:position pos:line="66" pos:column="40"/></name></expr></argument>)<pos:position pos:line="66" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="42"/></condition><then pos:line="66" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="17">die<pos:position pos:line="67" pos:column="20"/></name><argument_list pos:line="67" pos:column="20">(<argument><expr><call><name pos:line="67" pos:column="21">_<pos:position pos:line="67" pos:column="22"/></name><argument_list pos:line="67" pos:column="22">(<argument><expr><literal type="string" pos:line="67" pos:column="23">"revision walk setup failed"<pos:position pos:line="67" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="54"/></expr_stmt></block></then></if>
	<while pos:line="68" pos:column="9">while <condition pos:line="68" pos:column="15">(<expr><operator pos:line="68" pos:column="16">(<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="17">commit<pos:position pos:line="68" pos:column="23"/></name> <operator pos:line="68" pos:column="24">=<pos:position pos:line="68" pos:column="25"/></operator> <call><name pos:line="68" pos:column="26">get_revision<pos:position pos:line="68" pos:column="38"/></name><argument_list pos:line="68" pos:column="38">(<argument><expr><operator pos:line="68" pos:column="39">&amp;<pos:position pos:line="68" pos:column="44"/></operator><name pos:line="68" pos:column="40">revs<pos:position pos:line="68" pos:column="44"/></name></expr></argument>)<pos:position pos:line="68" pos:column="45"/></argument_list></call><operator pos:line="68" pos:column="45">)<pos:position pos:line="68" pos:column="46"/></operator> <operator pos:line="68" pos:column="47">!=<pos:position pos:line="68" pos:column="49"/></operator> <name pos:line="68" pos:column="50">NULL<pos:position pos:line="68" pos:column="54"/></name></expr>)<pos:position pos:line="68" pos:column="55"/></condition> <block pos:line="68" pos:column="56">{
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">commit_list_insert<pos:position pos:line="69" pos:column="35"/></name><argument_list pos:line="69" pos:column="35">(<argument><expr><name pos:line="69" pos:column="36">commit<pos:position pos:line="69" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="44">&amp;<pos:position pos:line="69" pos:column="49"/></operator><name pos:line="69" pos:column="45">list<pos:position pos:line="69" pos:column="49"/></name></expr></argument>)<pos:position pos:line="69" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="70" pos:column="10"/></block></while>

	<while pos:line="72" pos:column="9">while <condition pos:line="72" pos:column="15">(<expr><name pos:line="72" pos:column="16">list<pos:position pos:line="72" pos:column="20"/></name></expr>)<pos:position pos:line="72" pos:column="21"/></condition> <block pos:line="72" pos:column="22">{
		<decl_stmt><decl><type><name pos:line="73" pos:column="17">char<pos:position pos:line="73" pos:column="21"/></name></type> <name pos:line="73" pos:column="22">sign<pos:position pos:line="73" pos:column="26"/></name> <init pos:line="73" pos:column="27">= <expr><literal type="char" pos:line="73" pos:column="29">'+'<pos:position pos:line="73" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="73" pos:column="33"/></decl_stmt>

		<expr_stmt><expr><name pos:line="75" pos:column="17">commit<pos:position pos:line="75" pos:column="23"/></name> <operator pos:line="75" pos:column="24">=<pos:position pos:line="75" pos:column="25"/></operator> <name><name pos:line="75" pos:column="26">list<pos:position pos:line="75" pos:column="30"/></name><operator pos:line="75" pos:column="30">-&gt;<pos:position pos:line="75" pos:column="35"/></operator><name pos:line="75" pos:column="32">item<pos:position pos:line="75" pos:column="36"/></name></name></expr>;<pos:position pos:line="75" pos:column="37"/></expr_stmt>
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><call><name pos:line="76" pos:column="21">has_commit_patch_id<pos:position pos:line="76" pos:column="40"/></name><argument_list pos:line="76" pos:column="40">(<argument><expr><name pos:line="76" pos:column="41">commit<pos:position pos:line="76" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="49">&amp;<pos:position pos:line="76" pos:column="54"/></operator><name pos:line="76" pos:column="50">ids<pos:position pos:line="76" pos:column="53"/></name></expr></argument>)<pos:position pos:line="76" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="55"/></condition><then pos:line="76" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="25">sign<pos:position pos:line="77" pos:column="29"/></name> <operator pos:line="77" pos:column="30">=<pos:position pos:line="77" pos:column="31"/></operator> <literal type="char" pos:line="77" pos:column="32">'-'<pos:position pos:line="77" pos:column="35"/></literal></expr>;<pos:position pos:line="77" pos:column="36"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="78" pos:column="17">print_commit<pos:position pos:line="78" pos:column="29"/></name><argument_list pos:line="78" pos:column="29">(<argument><expr><name pos:line="78" pos:column="30">sign<pos:position pos:line="78" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="36">commit<pos:position pos:line="78" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="44">verbose<pos:position pos:line="78" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="53">abbrev<pos:position pos:line="78" pos:column="59"/></name></expr></argument>)<pos:position pos:line="78" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name pos:line="79" pos:column="17">list<pos:position pos:line="79" pos:column="21"/></name> <operator pos:line="79" pos:column="22">=<pos:position pos:line="79" pos:column="23"/></operator> <name><name pos:line="79" pos:column="24">list<pos:position pos:line="79" pos:column="28"/></name><operator pos:line="79" pos:column="28">-&gt;<pos:position pos:line="79" pos:column="33"/></operator><name pos:line="79" pos:column="30">next<pos:position pos:line="79" pos:column="34"/></name></name></expr>;<pos:position pos:line="79" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="80" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="82" pos:column="9">free_patch_ids<pos:position pos:line="82" pos:column="23"/></name><argument_list pos:line="82" pos:column="23">(<argument><expr><operator pos:line="82" pos:column="24">&amp;<pos:position pos:line="82" pos:column="29"/></operator><name pos:line="82" pos:column="25">ids<pos:position pos:line="82" pos:column="28"/></name></expr></argument>)<pos:position pos:line="82" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="30"/></expr_stmt>
	<return pos:line="83" pos:column="9">return <expr><literal type="number" pos:line="83" pos:column="16">0<pos:position pos:line="83" pos:column="17"/></literal></expr>;<pos:position pos:line="83" pos:column="18"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

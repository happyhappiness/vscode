<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2421.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">show_reference<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">refname<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name><name pos:line="1" pos:column="54">struct<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">object_id<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">oid<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="2" pos:column="27">int<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">flag<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">void<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">cb_data<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">tag_filter<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">filter<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><name pos:line="4" pos:column="37">cb_data<pos:position pos:line="4" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">match_pattern<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name><name pos:line="6" pos:column="27">filter<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">patterns<pos:position pos:line="6" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="45">refname<pos:position pos:line="6" pos:column="52"/></name></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="54"/></condition><then pos:line="6" pos:column="54"> <block pos:line="6" pos:column="55">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name><name pos:line="7" pos:column="21">filter<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">with_commit<pos:position pos:line="7" pos:column="40"/></name></name></expr>)<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41"> <block pos:line="7" pos:column="42">{
			<decl_stmt><decl><type><name><name pos:line="8" pos:column="25">struct<pos:position pos:line="8" pos:column="31"/></name> <name pos:line="8" pos:column="32">commit<pos:position pos:line="8" pos:column="38"/></name></name> <modifier pos:line="8" pos:column="39">*<pos:position pos:line="8" pos:column="40"/></modifier></type><name pos:line="8" pos:column="40">commit<pos:position pos:line="8" pos:column="46"/></name></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>

			<expr_stmt><expr><name pos:line="10" pos:column="25">commit<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">=<pos:position pos:line="10" pos:column="33"/></operator> <call><name pos:line="10" pos:column="34">lookup_commit_reference_gently<pos:position pos:line="10" pos:column="64"/></name><argument_list pos:line="10" pos:column="64">(<argument><expr><name><name pos:line="10" pos:column="65">oid<pos:position pos:line="10" pos:column="68"/></name><operator pos:line="10" pos:column="68">-&gt;<pos:position pos:line="10" pos:column="73"/></operator><name pos:line="10" pos:column="70">hash<pos:position pos:line="10" pos:column="74"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="76">1<pos:position pos:line="10" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt>
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><operator pos:line="11" pos:column="29">!<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">commit<pos:position pos:line="11" pos:column="36"/></name></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37">
				<block type="pseudo"><return pos:line="12" pos:column="33">return <expr><literal type="number" pos:line="12" pos:column="40">0<pos:position pos:line="12" pos:column="41"/></literal></expr>;<pos:position pos:line="12" pos:column="42"/></return></block></then></if>
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><operator pos:line="13" pos:column="29">!<pos:position pos:line="13" pos:column="30"/></operator><call><name pos:line="13" pos:column="30">contains<pos:position pos:line="13" pos:column="38"/></name><argument_list pos:line="13" pos:column="38">(<argument><expr><name pos:line="13" pos:column="39">commit<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="47">filter<pos:position pos:line="13" pos:column="53"/></name><operator pos:line="13" pos:column="53">-&gt;<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="55">with_commit<pos:position pos:line="13" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="68"/></condition><then pos:line="13" pos:column="68">
				<block type="pseudo"><return pos:line="14" pos:column="33">return <expr><literal type="number" pos:line="14" pos:column="40">0<pos:position pos:line="14" pos:column="41"/></literal></expr>;<pos:position pos:line="14" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name><name pos:line="17" pos:column="21">points_at<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">.<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">nr<pos:position pos:line="17" pos:column="33"/></name></name> <operator pos:line="17" pos:column="34">&amp;&amp;<pos:position pos:line="17" pos:column="44"/></operator> <operator pos:line="17" pos:column="37">!<pos:position pos:line="17" pos:column="38"/></operator><call><name pos:line="17" pos:column="38">match_points_at<pos:position pos:line="17" pos:column="53"/></name><argument_list pos:line="17" pos:column="53">(<argument><expr><name pos:line="17" pos:column="54">refname<pos:position pos:line="17" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="63">oid<pos:position pos:line="17" pos:column="66"/></name><operator pos:line="17" pos:column="66">-&gt;<pos:position pos:line="17" pos:column="71"/></operator><name pos:line="17" pos:column="68">hash<pos:position pos:line="17" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="74"/></condition><then pos:line="17" pos:column="74">
			<block type="pseudo"><return pos:line="18" pos:column="25">return <expr><literal type="number" pos:line="18" pos:column="32">0<pos:position pos:line="18" pos:column="33"/></literal></expr>;<pos:position pos:line="18" pos:column="34"/></return></block></then></if>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name><name pos:line="20" pos:column="22">filter<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">lines<pos:position pos:line="20" pos:column="35"/></name></name></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36"> <block pos:line="20" pos:column="37">{
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name><name pos:line="21" pos:column="29">filter<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">sort<pos:position pos:line="21" pos:column="41"/></name></name></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="33">string_list_append<pos:position pos:line="22" pos:column="51"/></name><argument_list pos:line="22" pos:column="51">(<argument><expr><operator pos:line="22" pos:column="52">&amp;<pos:position pos:line="22" pos:column="57"/></operator><name><name pos:line="22" pos:column="53">filter<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">-&gt;<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="61">tags<pos:position pos:line="22" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="67">refname<pos:position pos:line="22" pos:column="74"/></name></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="76"/></expr_stmt></block></then>
			<else pos:line="23" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="33">printf<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><literal type="string" pos:line="24" pos:column="40">"%s\n"<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="48">refname<pos:position pos:line="24" pos:column="55"/></name></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt></block></else></if>
			<return pos:line="25" pos:column="25">return <expr><literal type="number" pos:line="25" pos:column="32">0<pos:position pos:line="25" pos:column="33"/></literal></expr>;<pos:position pos:line="25" pos:column="34"/></return>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">printf<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="string" pos:line="27" pos:column="24">"%-15s "<pos:position pos:line="27" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="34">refname<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">show_tag_lines<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">oid<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="37">filter<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">-&gt;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="45">lines<pos:position pos:line="28" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">putchar<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><literal type="char" pos:line="29" pos:column="25">'\n'<pos:position pos:line="29" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<return pos:line="32" pos:column="9">return <expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

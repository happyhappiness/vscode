<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4903_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ewah_serialize<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">ewah_bitmap<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">self<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">fd<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<return pos:line="3" pos:column="9">return <expr><call><name pos:line="3" pos:column="16">ewah_serialize_to<pos:position pos:line="3" pos:column="33"/></name><argument_list pos:line="3" pos:column="33">(<argument><expr><name pos:line="3" pos:column="34">self<pos:position pos:line="3" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="40">write_helper<pos:position pos:line="3" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="54">(<pos:position pos:line="3" pos:column="55"/></operator><name pos:line="3" pos:column="55">void<pos:position pos:line="3" pos:column="59"/></name> <operator pos:line="3" pos:column="60">*<pos:position pos:line="3" pos:column="61"/></operator><operator pos:line="3" pos:column="61">)<pos:position pos:line="3" pos:column="62"/></operator><operator pos:line="3" pos:column="62">(<pos:position pos:line="3" pos:column="63"/></operator><name pos:line="3" pos:column="63">intptr_t<pos:position pos:line="3" pos:column="71"/></name><operator pos:line="3" pos:column="71">)<pos:position pos:line="3" pos:column="72"/></operator><name pos:line="3" pos:column="72">fd<pos:position pos:line="3" pos:column="74"/></name></expr></argument>)<pos:position pos:line="3" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="76"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

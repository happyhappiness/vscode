<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1776_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">release_tree_entry<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">tree_entry<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">e<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">e<pos:position pos:line="3" pos:column="14"/></name><operator pos:line="3" pos:column="14">-&gt;<pos:position pos:line="3" pos:column="19"/></operator><name pos:line="3" pos:column="16">tree<pos:position pos:line="3" pos:column="20"/></name></name></expr>)<pos:position pos:line="3" pos:column="21"/></condition><then pos:line="3" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="17">release_tree_content_recursive<pos:position pos:line="4" pos:column="47"/></name><argument_list pos:line="4" pos:column="47">(<argument><expr><name><name pos:line="4" pos:column="48">e<pos:position pos:line="4" pos:column="49"/></name><operator pos:line="4" pos:column="49">-&gt;<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="51">tree<pos:position pos:line="4" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="57"/></expr_stmt></block></then></if>
	<expr_stmt><expr><operator pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></operator><operator pos:line="5" pos:column="10">(<pos:position pos:line="5" pos:column="11"/></operator><operator pos:line="5" pos:column="11">(<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">void<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></operator><operator pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></operator><operator pos:line="5" pos:column="18">)<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">e<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">)<pos:position pos:line="5" pos:column="21"/></operator> <operator pos:line="5" pos:column="22">=<pos:position pos:line="5" pos:column="23"/></operator> <name pos:line="5" pos:column="24">avail_tree_entry<pos:position pos:line="5" pos:column="40"/></name></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="6" pos:column="9">avail_tree_entry<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">=<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="28">e<pos:position pos:line="6" pos:column="29"/></name></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

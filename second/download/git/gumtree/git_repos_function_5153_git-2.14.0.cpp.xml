<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5153_git-2.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">skip_same_name<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">cache_entry<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">ce<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">pos<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><operator pos:line="3" pos:column="16">++<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">pos<pos:position pos:line="3" pos:column="21"/></name> <operator pos:line="3" pos:column="22">&lt;<pos:position pos:line="3" pos:column="26"/></operator> <name pos:line="3" pos:column="24">active_nr<pos:position pos:line="3" pos:column="33"/></name> <operator pos:line="3" pos:column="34">&amp;&amp;<pos:position pos:line="3" pos:column="44"/></operator>
	       <operator pos:line="4" pos:column="16">!<pos:position pos:line="4" pos:column="17"/></operator><call><name pos:line="4" pos:column="17">strcmp<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><name><name pos:line="4" pos:column="24">active_cache<pos:position pos:line="4" pos:column="36"/></name><index pos:line="4" pos:column="36">[<expr><name pos:line="4" pos:column="37">pos<pos:position pos:line="4" pos:column="40"/></name></expr>]<pos:position pos:line="4" pos:column="41"/></index></name><operator pos:line="4" pos:column="41">-&gt;<pos:position pos:line="4" pos:column="46"/></operator><name pos:line="4" pos:column="43">name<pos:position pos:line="4" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="49">ce<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">-&gt;<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="53">name<pos:position pos:line="4" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="59"/></condition>
		<block type="pseudo"><empty_stmt pos:line="5" pos:column="17">;<pos:position pos:line="5" pos:column="18"/></empty_stmt></block></while> <comment type="block" pos:line="5" pos:column="19">/* skip */</comment>
	<return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">pos<pos:position pos:line="6" pos:column="19"/></name></expr>;<pos:position pos:line="6" pos:column="20"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

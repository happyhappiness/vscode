<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2703_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">strbuf_expand_dict_cb<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">strbuf<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">sb<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">placeholder<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">context<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf_expand_dict_entry<pos:position pos:line="4" pos:column="40"/></name></name> <modifier pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></modifier></type><name pos:line="4" pos:column="42">e<pos:position pos:line="4" pos:column="43"/></name> <init pos:line="4" pos:column="44">= <expr><name pos:line="4" pos:column="46">context<pos:position pos:line="4" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init pos:line="7" pos:column="14">;<pos:position pos:line="7" pos:column="15"/></init> <condition><expr><name><name pos:line="7" pos:column="16">e<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">placeholder<pos:position pos:line="7" pos:column="30"/></name></name> <operator pos:line="7" pos:column="31">&amp;&amp;<pos:position pos:line="7" pos:column="41"/></operator> <operator pos:line="7" pos:column="34">(<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">len<pos:position pos:line="7" pos:column="38"/></name> <operator pos:line="7" pos:column="39">=<pos:position pos:line="7" pos:column="40"/></operator> <call><name pos:line="7" pos:column="41">strlen<pos:position pos:line="7" pos:column="47"/></name><argument_list pos:line="7" pos:column="47">(<argument><expr><name><name pos:line="7" pos:column="48">e<pos:position pos:line="7" pos:column="49"/></name><operator pos:line="7" pos:column="49">-&gt;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="51">placeholder<pos:position pos:line="7" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call><operator pos:line="7" pos:column="63">)<pos:position pos:line="7" pos:column="64"/></operator></expr>;<pos:position pos:line="7" pos:column="65"/></condition> <incr><expr><name pos:line="7" pos:column="66">e<pos:position pos:line="7" pos:column="67"/></name><operator pos:line="7" pos:column="67">++<pos:position pos:line="7" pos:column="69"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="70"/></control> <block pos:line="7" pos:column="71">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><call><name pos:line="8" pos:column="22">strncmp<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">placeholder<pos:position pos:line="8" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="43">e<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">placeholder<pos:position pos:line="8" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="59">len<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="64"/></condition><then pos:line="8" pos:column="64"> <block pos:line="8" pos:column="65">{
			<if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><name><name pos:line="9" pos:column="29">e<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">value<pos:position pos:line="9" pos:column="37"/></name></name></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="33">strbuf_addstr<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><name pos:line="10" pos:column="47">sb<pos:position pos:line="10" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="51">e<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">-&gt;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="54">value<pos:position pos:line="10" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt></block></then></if>
			<return pos:line="11" pos:column="25">return <expr><name pos:line="11" pos:column="32">len<pos:position pos:line="11" pos:column="35"/></name></expr>;<pos:position pos:line="11" pos:column="36"/></return>
		}<pos:position pos:line="12" pos:column="18"/></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block></for>
	<return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2733_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">strbuf_addftime<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">strbuf<pos:position pos:line="1" pos:column="35"/></name></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">sb<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">fmt<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name><name pos:line="1" pos:column="64">struct<pos:position pos:line="1" pos:column="70"/></name> <name pos:line="1" pos:column="71">tm<pos:position pos:line="1" pos:column="73"/></name></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">tm<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
		     <parameter><decl><type><name pos:line="2" pos:column="22">int<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">tz_offset<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">suppress_tz_name<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">munged_fmt<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><name pos:line="4" pos:column="36">STRBUF_INIT<pos:position pos:line="4" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">hint<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">128<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">len<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><operator pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">fmt<pos:position pos:line="8" pos:column="18"/></name></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19">
		<block type="pseudo"><return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return></block></then></if>

	<comment type="block" pos:line="11" pos:column="9">/*
	 * There is no portable way to pass timezone information to
	 * strftime, so we handle %z and %Z here.
	 */</comment>
	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init pos:line="15" pos:column="14">;<pos:position pos:line="15" pos:column="15"/></init><condition pos:line="15" pos:column="15">;<pos:position pos:line="15" pos:column="16"/></condition><incr/>)<pos:position pos:line="15" pos:column="17"/></control> <block pos:line="15" pos:column="18">{
		<decl_stmt><decl><type><specifier pos:line="16" pos:column="17">const<pos:position pos:line="16" pos:column="22"/></specifier> <name pos:line="16" pos:column="23">char<pos:position pos:line="16" pos:column="27"/></name> <modifier pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></modifier></type><name pos:line="16" pos:column="29">percent<pos:position pos:line="16" pos:column="36"/></name> <init pos:line="16" pos:column="37">= <expr><call><name pos:line="16" pos:column="39">strchrnul<pos:position pos:line="16" pos:column="48"/></name><argument_list pos:line="16" pos:column="48">(<argument><expr><name pos:line="16" pos:column="49">fmt<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="54">'%'<pos:position pos:line="16" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="59"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">strbuf_add<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><operator pos:line="17" pos:column="28">&amp;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="29">munged_fmt<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">fmt<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">percent<pos:position pos:line="17" pos:column="53"/></name> <operator pos:line="17" pos:column="54">-<pos:position pos:line="17" pos:column="55"/></operator> <name pos:line="17" pos:column="56">fmt<pos:position pos:line="17" pos:column="59"/></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><operator pos:line="18" pos:column="22">*<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="23">percent<pos:position pos:line="18" pos:column="30"/></name></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31">
			<block type="pseudo"><break pos:line="19" pos:column="25">break;<pos:position pos:line="19" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="20" pos:column="17">fmt<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">percent<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">+<pos:position pos:line="20" pos:column="32"/></operator> <literal type="number" pos:line="20" pos:column="33">1<pos:position pos:line="20" pos:column="34"/></literal></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
		<switch pos:line="21" pos:column="17">switch <condition pos:line="21" pos:column="24">(<expr><operator pos:line="21" pos:column="25">*<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">fmt<pos:position pos:line="21" pos:column="29"/></name></expr>)<pos:position pos:line="21" pos:column="30"/></condition> <block pos:line="21" pos:column="31">{
		<case pos:line="22" pos:column="17">case <expr><literal type="char" pos:line="22" pos:column="22">'%'<pos:position pos:line="22" pos:column="25"/></literal></expr>:<pos:position pos:line="22" pos:column="26"/></case>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">strbuf_addstr<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><operator pos:line="23" pos:column="39">&amp;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="40">munged_fmt<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="52">"%%"<pos:position pos:line="23" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">fmt<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">++<pos:position pos:line="24" pos:column="30"/></operator></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
			<break pos:line="25" pos:column="25">break;<pos:position pos:line="25" pos:column="31"/></break>
		<case pos:line="26" pos:column="17">case <expr><literal type="char" pos:line="26" pos:column="22">'z'<pos:position pos:line="26" pos:column="25"/></literal></expr>:<pos:position pos:line="26" pos:column="26"/></case>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">strbuf_addf<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><operator pos:line="27" pos:column="37">&amp;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="38">munged_fmt<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="50">"%+05d"<pos:position pos:line="27" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="59">tz_offset<pos:position pos:line="27" pos:column="68"/></name></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">fmt<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">++<pos:position pos:line="28" pos:column="30"/></operator></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
			<break pos:line="29" pos:column="25">break;<pos:position pos:line="29" pos:column="31"/></break>
		<case pos:line="30" pos:column="17">case <expr><literal type="char" pos:line="30" pos:column="22">'Z'<pos:position pos:line="30" pos:column="25"/></literal></expr>:<pos:position pos:line="30" pos:column="26"/></case>
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><name pos:line="31" pos:column="29">suppress_tz_name<pos:position pos:line="31" pos:column="45"/></name></expr>)<pos:position pos:line="31" pos:column="46"/></condition><then pos:line="31" pos:column="46"> <block pos:line="31" pos:column="47">{
				<expr_stmt><expr><name pos:line="32" pos:column="33">fmt<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">++<pos:position pos:line="32" pos:column="38"/></operator></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
				<break pos:line="33" pos:column="33">break;<pos:position pos:line="33" pos:column="39"/></break>
			}<pos:position pos:line="34" pos:column="26"/></block></then></if>
			<comment type="block" pos:line="35" pos:column="25">/* FALLTHROUGH */</comment>
		<default pos:line="36" pos:column="17">default:<pos:position pos:line="36" pos:column="25"/></default>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">strbuf_addch<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><operator pos:line="37" pos:column="38">&amp;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="39">munged_fmt<pos:position pos:line="37" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="37" pos:column="51">'%'<pos:position pos:line="37" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></switch>
	}<pos:position pos:line="39" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="40" pos:column="9">fmt<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <name><name pos:line="40" pos:column="15">munged_fmt<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">.<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="26">buf<pos:position pos:line="40" pos:column="29"/></name></name></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="42" pos:column="9">strbuf_grow<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><name pos:line="42" pos:column="21">sb<pos:position pos:line="42" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="25">hint<pos:position pos:line="42" pos:column="29"/></name></expr></argument>)<pos:position pos:line="42" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="43" pos:column="9">len<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <call><name pos:line="43" pos:column="15">strftime<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name><name pos:line="43" pos:column="24">sb<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">-&gt;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="28">buf<pos:position pos:line="43" pos:column="31"/></name></name> <operator pos:line="43" pos:column="32">+<pos:position pos:line="43" pos:column="33"/></operator> <name><name pos:line="43" pos:column="34">sb<pos:position pos:line="43" pos:column="36"/></name><operator pos:line="43" pos:column="36">-&gt;<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="38">len<pos:position pos:line="43" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="43">sb<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">-&gt;<pos:position pos:line="43" pos:column="50"/></operator><name pos:line="43" pos:column="47">alloc<pos:position pos:line="43" pos:column="52"/></name></name> <operator pos:line="43" pos:column="53">-<pos:position pos:line="43" pos:column="54"/></operator> <name><name pos:line="43" pos:column="55">sb<pos:position pos:line="43" pos:column="57"/></name><operator pos:line="43" pos:column="57">-&gt;<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="59">len<pos:position pos:line="43" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="64">fmt<pos:position pos:line="43" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="69">tm<pos:position pos:line="43" pos:column="71"/></name></expr></argument>)<pos:position pos:line="43" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="73"/></expr_stmt>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">!<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">len<pos:position pos:line="45" pos:column="17"/></name></expr>)<pos:position pos:line="45" pos:column="18"/></condition><then pos:line="45" pos:column="18"> <block pos:line="45" pos:column="19">{
		<comment type="block" pos:line="46" pos:column="17">/*
		 * strftime reports "0" if it could not fit the result in the buffer.
		 * Unfortunately, it also reports "0" if the requested time string
		 * takes 0 bytes. So our strategy is to munge the format so that the
		 * output contains at least one character, and then drop the extra
		 * character before returning.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">strbuf_addch<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><operator pos:line="53" pos:column="30">&amp;<pos:position pos:line="53" pos:column="35"/></operator><name pos:line="53" pos:column="31">munged_fmt<pos:position pos:line="53" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="53" pos:column="43">' '<pos:position pos:line="53" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="48"/></expr_stmt>
		<while pos:line="54" pos:column="17">while <condition pos:line="54" pos:column="23">(<expr><operator pos:line="54" pos:column="24">!<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="25">len<pos:position pos:line="54" pos:column="28"/></name></expr>)<pos:position pos:line="54" pos:column="29"/></condition> <block pos:line="54" pos:column="30">{
			<expr_stmt><expr><name pos:line="55" pos:column="25">hint<pos:position pos:line="55" pos:column="29"/></name> <operator pos:line="55" pos:column="30">*=<pos:position pos:line="55" pos:column="32"/></operator> <literal type="number" pos:line="55" pos:column="33">2<pos:position pos:line="55" pos:column="34"/></literal></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="56" pos:column="25">strbuf_grow<pos:position pos:line="56" pos:column="36"/></name><argument_list pos:line="56" pos:column="36">(<argument><expr><name pos:line="56" pos:column="37">sb<pos:position pos:line="56" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="41">hint<pos:position pos:line="56" pos:column="45"/></name></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="57" pos:column="25">len<pos:position pos:line="57" pos:column="28"/></name> <operator pos:line="57" pos:column="29">=<pos:position pos:line="57" pos:column="30"/></operator> <call><name pos:line="57" pos:column="31">strftime<pos:position pos:line="57" pos:column="39"/></name><argument_list pos:line="57" pos:column="39">(<argument><expr><name><name pos:line="57" pos:column="40">sb<pos:position pos:line="57" pos:column="42"/></name><operator pos:line="57" pos:column="42">-&gt;<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="44">buf<pos:position pos:line="57" pos:column="47"/></name></name> <operator pos:line="57" pos:column="48">+<pos:position pos:line="57" pos:column="49"/></operator> <name><name pos:line="57" pos:column="50">sb<pos:position pos:line="57" pos:column="52"/></name><operator pos:line="57" pos:column="52">-&gt;<pos:position pos:line="57" pos:column="57"/></operator><name pos:line="57" pos:column="54">len<pos:position pos:line="57" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="59">sb<pos:position pos:line="57" pos:column="61"/></name><operator pos:line="57" pos:column="61">-&gt;<pos:position pos:line="57" pos:column="66"/></operator><name pos:line="57" pos:column="63">alloc<pos:position pos:line="57" pos:column="68"/></name></name> <operator pos:line="57" pos:column="69">-<pos:position pos:line="57" pos:column="70"/></operator> <name><name pos:line="57" pos:column="71">sb<pos:position pos:line="57" pos:column="73"/></name><operator pos:line="57" pos:column="73">-&gt;<pos:position pos:line="57" pos:column="78"/></operator><name pos:line="57" pos:column="75">len<pos:position pos:line="57" pos:column="78"/></name></name></expr></argument>,
				       <argument><expr><name><name pos:line="58" pos:column="40">munged_fmt<pos:position pos:line="58" pos:column="50"/></name><operator pos:line="58" pos:column="50">.<pos:position pos:line="58" pos:column="51"/></operator><name pos:line="58" pos:column="51">buf<pos:position pos:line="58" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="56">tm<pos:position pos:line="58" pos:column="58"/></name></expr></argument>)<pos:position pos:line="58" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="60"/></expr_stmt>
		}<pos:position pos:line="59" pos:column="18"/></block></while>
		<expr_stmt><expr><name pos:line="60" pos:column="17">len<pos:position pos:line="60" pos:column="20"/></name><operator pos:line="60" pos:column="20">--<pos:position pos:line="60" pos:column="22"/></operator></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt> <comment type="block" pos:line="60" pos:column="24">/* drop munged space */</comment>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">strbuf_release<pos:position pos:line="62" pos:column="23"/></name><argument_list pos:line="62" pos:column="23">(<argument><expr><operator pos:line="62" pos:column="24">&amp;<pos:position pos:line="62" pos:column="29"/></operator><name pos:line="62" pos:column="25">munged_fmt<pos:position pos:line="62" pos:column="35"/></name></expr></argument>)<pos:position pos:line="62" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">strbuf_setlen<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><name pos:line="63" pos:column="23">sb<pos:position pos:line="63" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="27">sb<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">-&gt;<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="31">len<pos:position pos:line="63" pos:column="34"/></name></name> <operator pos:line="63" pos:column="35">+<pos:position pos:line="63" pos:column="36"/></operator> <name pos:line="63" pos:column="37">len<pos:position pos:line="63" pos:column="40"/></name></expr></argument>)<pos:position pos:line="63" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="42"/></expr_stmt>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5516_git-2.10.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_rev_list<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">argc<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">argv<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">prefix<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_info<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">revs<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">rev_list_info<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">info<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">bisect_list<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><literal type="number" pos:line="6" pos:column="27">0<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">bisect_show_vars<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><literal type="number" pos:line="7" pos:column="32">0<pos:position pos:line="7" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">bisect_find_all<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><literal type="number" pos:line="8" pos:column="31">0<pos:position pos:line="8" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">use_bitmap_index<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><literal type="number" pos:line="9" pos:column="32">0<pos:position pos:line="9" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">show_progress<pos:position pos:line="10" pos:column="34"/></name> <init pos:line="10" pos:column="35">= <expr><name pos:line="10" pos:column="37">NULL<pos:position pos:line="10" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">git_config<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">git_default_config<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="40">NULL<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">init_revisions<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><operator pos:line="13" pos:column="24">&amp;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="25">revs<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="31">prefix<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">revs<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">.<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">abbrev<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">DEFAULT_ABBREV<pos:position pos:line="14" pos:column="37"/></name></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">revs<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">.<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">commit_format<pos:position pos:line="15" pos:column="27"/></name></name> <operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="30">CMIT_FMT_UNSPECIFIED<pos:position pos:line="15" pos:column="50"/></name></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">argc<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">setup_revisions<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">argc<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">argv<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="44">&amp;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="45">revs<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">NULL<pos:position pos:line="16" pos:column="55"/></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">memset<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><operator pos:line="18" pos:column="16">&amp;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="17">info<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="23">0<pos:position pos:line="18" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="26">sizeof<argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">info<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">info<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">.<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">revs<pos:position pos:line="19" pos:column="18"/></name></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <operator pos:line="19" pos:column="21">&amp;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="22">revs<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">revs<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">.<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">bisect<pos:position pos:line="20" pos:column="24"/></name></name></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">bisect_list<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">=<pos:position pos:line="21" pos:column="30"/></operator> <literal type="number" pos:line="21" pos:column="31">1<pos:position pos:line="21" pos:column="32"/></literal></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">DIFF_OPT_TST<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><operator pos:line="23" pos:column="26">&amp;<pos:position pos:line="23" pos:column="31"/></operator><name><name pos:line="23" pos:column="27">revs<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">.<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">diffopt<pos:position pos:line="23" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">QUICK<pos:position pos:line="23" pos:column="46"/></name></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="48"/></condition><then pos:line="23" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="17">info<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">.<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">flags<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">|=<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">REV_LIST_QUIET<pos:position pos:line="24" pos:column="45"/></name></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt></block></then></if>
	<for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><expr><name pos:line="25" pos:column="14">i<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">1<pos:position pos:line="25" pos:column="19"/></literal></expr> ;<pos:position pos:line="25" pos:column="21"/></init> <condition><expr><name pos:line="25" pos:column="22">i<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">&lt;<pos:position pos:line="25" pos:column="28"/></operator> <name pos:line="25" pos:column="26">argc<pos:position pos:line="25" pos:column="30"/></name></expr>;<pos:position pos:line="25" pos:column="31"/></condition> <incr><expr><name pos:line="25" pos:column="32">i<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">++<pos:position pos:line="25" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="36"/></control> <block pos:line="25" pos:column="37">{
		<decl_stmt><decl><type><specifier pos:line="26" pos:column="17">const<pos:position pos:line="26" pos:column="22"/></specifier> <name pos:line="26" pos:column="23">char<pos:position pos:line="26" pos:column="27"/></name> <modifier pos:line="26" pos:column="28">*<pos:position pos:line="26" pos:column="29"/></modifier></type><name pos:line="26" pos:column="29">arg<pos:position pos:line="26" pos:column="32"/></name> <init pos:line="26" pos:column="33">= <expr><name><name pos:line="26" pos:column="35">argv<pos:position pos:line="26" pos:column="39"/></name><index pos:line="26" pos:column="39">[<expr><name pos:line="26" pos:column="40">i<pos:position pos:line="26" pos:column="41"/></name></expr>]<pos:position pos:line="26" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="26" pos:column="43"/></decl_stmt>

		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><call><name pos:line="28" pos:column="22">strcmp<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">arg<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="34">"--header"<pos:position pos:line="28" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="46"/></condition><then pos:line="28" pos:column="46"> <block pos:line="28" pos:column="47">{
			<expr_stmt><expr><name><name pos:line="29" pos:column="25">revs<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">.<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">verbose_header<pos:position pos:line="29" pos:column="44"/></name></name> <operator pos:line="29" pos:column="45">=<pos:position pos:line="29" pos:column="46"/></operator> <literal type="number" pos:line="29" pos:column="47">1<pos:position pos:line="29" pos:column="48"/></literal></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>
			<continue pos:line="30" pos:column="25">continue;<pos:position pos:line="30" pos:column="34"/></continue>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">!<pos:position pos:line="32" pos:column="22"/></operator><call><name pos:line="32" pos:column="22">strcmp<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">arg<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="34">"--timestamp"<pos:position pos:line="32" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="49"/></condition><then pos:line="32" pos:column="49"> <block pos:line="32" pos:column="50">{
			<expr_stmt><expr><name><name pos:line="33" pos:column="25">info<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">.<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">show_timestamp<pos:position pos:line="33" pos:column="44"/></name></name> <operator pos:line="33" pos:column="45">=<pos:position pos:line="33" pos:column="46"/></operator> <literal type="number" pos:line="33" pos:column="47">1<pos:position pos:line="33" pos:column="48"/></literal></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
			<continue pos:line="34" pos:column="25">continue;<pos:position pos:line="34" pos:column="34"/></continue>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><call><name pos:line="36" pos:column="22">strcmp<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name pos:line="36" pos:column="29">arg<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="34">"--bisect"<pos:position pos:line="36" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="46"/></condition><then pos:line="36" pos:column="46"> <block pos:line="36" pos:column="47">{
			<expr_stmt><expr><name pos:line="37" pos:column="25">bisect_list<pos:position pos:line="37" pos:column="36"/></name> <operator pos:line="37" pos:column="37">=<pos:position pos:line="37" pos:column="38"/></operator> <literal type="number" pos:line="37" pos:column="39">1<pos:position pos:line="37" pos:column="40"/></literal></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>
			<continue pos:line="38" pos:column="25">continue;<pos:position pos:line="38" pos:column="34"/></continue>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><operator pos:line="40" pos:column="21">!<pos:position pos:line="40" pos:column="22"/></operator><call><name pos:line="40" pos:column="22">strcmp<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><name pos:line="40" pos:column="29">arg<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="34">"--bisect-all"<pos:position pos:line="40" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="50"/></condition><then pos:line="40" pos:column="50"> <block pos:line="40" pos:column="51">{
			<expr_stmt><expr><name pos:line="41" pos:column="25">bisect_list<pos:position pos:line="41" pos:column="36"/></name> <operator pos:line="41" pos:column="37">=<pos:position pos:line="41" pos:column="38"/></operator> <literal type="number" pos:line="41" pos:column="39">1<pos:position pos:line="41" pos:column="40"/></literal></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="42" pos:column="25">bisect_find_all<pos:position pos:line="42" pos:column="40"/></name> <operator pos:line="42" pos:column="41">=<pos:position pos:line="42" pos:column="42"/></operator> <literal type="number" pos:line="42" pos:column="43">1<pos:position pos:line="42" pos:column="44"/></literal></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="43" pos:column="25">info<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">.<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="30">flags<pos:position pos:line="43" pos:column="35"/></name></name> <operator pos:line="43" pos:column="36">|=<pos:position pos:line="43" pos:column="38"/></operator> <name pos:line="43" pos:column="39">BISECT_SHOW_ALL<pos:position pos:line="43" pos:column="54"/></name></expr>;<pos:position pos:line="43" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="44" pos:column="25">revs<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">.<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="30">show_decorations<pos:position pos:line="44" pos:column="46"/></name></name> <operator pos:line="44" pos:column="47">=<pos:position pos:line="44" pos:column="48"/></operator> <literal type="number" pos:line="44" pos:column="49">1<pos:position pos:line="44" pos:column="50"/></literal></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>
			<continue pos:line="45" pos:column="25">continue;<pos:position pos:line="45" pos:column="34"/></continue>
		}<pos:position pos:line="46" pos:column="18"/></block></then></if>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><operator pos:line="47" pos:column="21">!<pos:position pos:line="47" pos:column="22"/></operator><call><name pos:line="47" pos:column="22">strcmp<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">arg<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="34">"--bisect-vars"<pos:position pos:line="47" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="51"/></condition><then pos:line="47" pos:column="51"> <block pos:line="47" pos:column="52">{
			<expr_stmt><expr><name pos:line="48" pos:column="25">bisect_list<pos:position pos:line="48" pos:column="36"/></name> <operator pos:line="48" pos:column="37">=<pos:position pos:line="48" pos:column="38"/></operator> <literal type="number" pos:line="48" pos:column="39">1<pos:position pos:line="48" pos:column="40"/></literal></expr>;<pos:position pos:line="48" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="49" pos:column="25">bisect_show_vars<pos:position pos:line="49" pos:column="41"/></name> <operator pos:line="49" pos:column="42">=<pos:position pos:line="49" pos:column="43"/></operator> <literal type="number" pos:line="49" pos:column="44">1<pos:position pos:line="49" pos:column="45"/></literal></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
			<continue pos:line="50" pos:column="25">continue;<pos:position pos:line="50" pos:column="34"/></continue>
		}<pos:position pos:line="51" pos:column="18"/></block></then></if>
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><operator pos:line="52" pos:column="21">!<pos:position pos:line="52" pos:column="22"/></operator><call><name pos:line="52" pos:column="22">strcmp<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">(<argument><expr><name pos:line="52" pos:column="29">arg<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="34">"--use-bitmap-index"<pos:position pos:line="52" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="56"/></condition><then pos:line="52" pos:column="56"> <block pos:line="52" pos:column="57">{
			<expr_stmt><expr><name pos:line="53" pos:column="25">use_bitmap_index<pos:position pos:line="53" pos:column="41"/></name> <operator pos:line="53" pos:column="42">=<pos:position pos:line="53" pos:column="43"/></operator> <literal type="number" pos:line="53" pos:column="44">1<pos:position pos:line="53" pos:column="45"/></literal></expr>;<pos:position pos:line="53" pos:column="46"/></expr_stmt>
			<continue pos:line="54" pos:column="25">continue;<pos:position pos:line="54" pos:column="34"/></continue>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><operator pos:line="56" pos:column="21">!<pos:position pos:line="56" pos:column="22"/></operator><call><name pos:line="56" pos:column="22">strcmp<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name pos:line="56" pos:column="29">arg<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="34">"--test-bitmap"<pos:position pos:line="56" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="51"/></condition><then pos:line="56" pos:column="51"> <block pos:line="56" pos:column="52">{
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">test_bitmap_walk<pos:position pos:line="57" pos:column="41"/></name><argument_list pos:line="57" pos:column="41">(<argument><expr><operator pos:line="57" pos:column="42">&amp;<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="43">revs<pos:position pos:line="57" pos:column="47"/></name></expr></argument>)<pos:position pos:line="57" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="49"/></expr_stmt>
			<return pos:line="58" pos:column="25">return <expr><literal type="number" pos:line="58" pos:column="32">0<pos:position pos:line="58" pos:column="33"/></literal></expr>;<pos:position pos:line="58" pos:column="34"/></return>
		}<pos:position pos:line="59" pos:column="18"/></block></then></if>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><call><name pos:line="60" pos:column="21">skip_prefix<pos:position pos:line="60" pos:column="32"/></name><argument_list pos:line="60" pos:column="32">(<argument><expr><name pos:line="60" pos:column="33">arg<pos:position pos:line="60" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="38">"--progress="<pos:position pos:line="60" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="60" pos:column="53">&amp;<pos:position pos:line="60" pos:column="58"/></operator><name pos:line="60" pos:column="54">arg<pos:position pos:line="60" pos:column="57"/></name></expr></argument>)<pos:position pos:line="60" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="59"/></condition><then pos:line="60" pos:column="59"> <block pos:line="60" pos:column="60">{
			<expr_stmt><expr><name pos:line="61" pos:column="25">show_progress<pos:position pos:line="61" pos:column="38"/></name> <operator pos:line="61" pos:column="39">=<pos:position pos:line="61" pos:column="40"/></operator> <name pos:line="61" pos:column="41">arg<pos:position pos:line="61" pos:column="44"/></name></expr>;<pos:position pos:line="61" pos:column="45"/></expr_stmt>
			<continue pos:line="62" pos:column="25">continue;<pos:position pos:line="62" pos:column="34"/></continue>
		}<pos:position pos:line="63" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="64" pos:column="17">usage<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><name pos:line="64" pos:column="23">rev_list_usage<pos:position pos:line="64" pos:column="37"/></name></expr></argument>)<pos:position pos:line="64" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="39"/></expr_stmt>

	}<pos:position pos:line="66" pos:column="10"/></block></for>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name><name pos:line="67" pos:column="13">revs<pos:position pos:line="67" pos:column="17"/></name><operator pos:line="67" pos:column="17">.<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">commit_format<pos:position pos:line="67" pos:column="31"/></name></name> <operator pos:line="67" pos:column="32">!=<pos:position pos:line="67" pos:column="34"/></operator> <name pos:line="67" pos:column="35">CMIT_FMT_UNSPECIFIED<pos:position pos:line="67" pos:column="55"/></name></expr>)<pos:position pos:line="67" pos:column="56"/></condition><then pos:line="67" pos:column="56"> <block pos:line="67" pos:column="57">{
		<comment type="block" pos:line="68" pos:column="17">/* The command line has a --pretty  */</comment>
		<expr_stmt><expr><name><name pos:line="69" pos:column="17">info<pos:position pos:line="69" pos:column="21"/></name><operator pos:line="69" pos:column="21">.<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="22">hdr_termination<pos:position pos:line="69" pos:column="37"/></name></name> <operator pos:line="69" pos:column="38">=<pos:position pos:line="69" pos:column="39"/></operator> <literal type="char" pos:line="69" pos:column="40">'\n'<pos:position pos:line="69" pos:column="44"/></literal></expr>;<pos:position pos:line="69" pos:column="45"/></expr_stmt>
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name><name pos:line="70" pos:column="21">revs<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">.<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="26">commit_format<pos:position pos:line="70" pos:column="39"/></name></name> <operator pos:line="70" pos:column="40">==<pos:position pos:line="70" pos:column="42"/></operator> <name pos:line="70" pos:column="43">CMIT_FMT_ONELINE<pos:position pos:line="70" pos:column="59"/></name></expr>)<pos:position pos:line="70" pos:column="60"/></condition><then pos:line="70" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="71" pos:column="25">info<pos:position pos:line="71" pos:column="29"/></name><operator pos:line="71" pos:column="29">.<pos:position pos:line="71" pos:column="30"/></operator><name pos:line="71" pos:column="30">header_prefix<pos:position pos:line="71" pos:column="43"/></name></name> <operator pos:line="71" pos:column="44">=<pos:position pos:line="71" pos:column="45"/></operator> <literal type="string" pos:line="71" pos:column="46">""<pos:position pos:line="71" pos:column="48"/></literal></expr>;<pos:position pos:line="71" pos:column="49"/></expr_stmt></block></then>
		<else pos:line="72" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="73" pos:column="25">info<pos:position pos:line="73" pos:column="29"/></name><operator pos:line="73" pos:column="29">.<pos:position pos:line="73" pos:column="30"/></operator><name pos:line="73" pos:column="30">header_prefix<pos:position pos:line="73" pos:column="43"/></name></name> <operator pos:line="73" pos:column="44">=<pos:position pos:line="73" pos:column="45"/></operator> <literal type="string" pos:line="73" pos:column="46">"commit "<pos:position pos:line="73" pos:column="55"/></literal></expr>;<pos:position pos:line="73" pos:column="56"/></expr_stmt></block></else></if>
	}<pos:position pos:line="74" pos:column="10"/></block></then>
	<elseif pos:line="75" pos:column="9">else <if pos:line="75" pos:column="14">if <condition pos:line="75" pos:column="17">(<expr><name><name pos:line="75" pos:column="18">revs<pos:position pos:line="75" pos:column="22"/></name><operator pos:line="75" pos:column="22">.<pos:position pos:line="75" pos:column="23"/></operator><name pos:line="75" pos:column="23">verbose_header<pos:position pos:line="75" pos:column="37"/></name></name></expr>)<pos:position pos:line="75" pos:column="38"/></condition><then pos:line="75" pos:column="38">
		<comment type="block" pos:line="76" pos:column="17">/* Only --header was specified */</comment>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="77" pos:column="17">revs<pos:position pos:line="77" pos:column="21"/></name><operator pos:line="77" pos:column="21">.<pos:position pos:line="77" pos:column="22"/></operator><name pos:line="77" pos:column="22">commit_format<pos:position pos:line="77" pos:column="35"/></name></name> <operator pos:line="77" pos:column="36">=<pos:position pos:line="77" pos:column="37"/></operator> <name pos:line="77" pos:column="38">CMIT_FMT_RAW<pos:position pos:line="77" pos:column="50"/></name></expr>;<pos:position pos:line="77" pos:column="51"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><operator pos:line="79" pos:column="13">(<pos:position pos:line="79" pos:column="14"/></operator><operator pos:line="79" pos:column="14">!<pos:position pos:line="79" pos:column="15"/></operator><name><name pos:line="79" pos:column="15">revs<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">.<pos:position pos:line="79" pos:column="20"/></operator><name pos:line="79" pos:column="20">commits<pos:position pos:line="79" pos:column="27"/></name></name> <operator pos:line="79" pos:column="28">&amp;&amp;<pos:position pos:line="79" pos:column="38"/></operator>
	     <operator pos:line="80" pos:column="14">(<pos:position pos:line="80" pos:column="15"/></operator><operator pos:line="80" pos:column="15">!<pos:position pos:line="80" pos:column="16"/></operator><operator pos:line="80" pos:column="16">(<pos:position pos:line="80" pos:column="17"/></operator><name><name pos:line="80" pos:column="17">revs<pos:position pos:line="80" pos:column="21"/></name><operator pos:line="80" pos:column="21">.<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="22">tag_objects<pos:position pos:line="80" pos:column="33"/></name></name> <operator pos:line="80" pos:column="34">||<pos:position pos:line="80" pos:column="36"/></operator> <name><name pos:line="80" pos:column="37">revs<pos:position pos:line="80" pos:column="41"/></name><operator pos:line="80" pos:column="41">.<pos:position pos:line="80" pos:column="42"/></operator><name pos:line="80" pos:column="42">tree_objects<pos:position pos:line="80" pos:column="54"/></name></name> <operator pos:line="80" pos:column="55">||<pos:position pos:line="80" pos:column="57"/></operator> <name><name pos:line="80" pos:column="58">revs<pos:position pos:line="80" pos:column="62"/></name><operator pos:line="80" pos:column="62">.<pos:position pos:line="80" pos:column="63"/></operator><name pos:line="80" pos:column="63">blob_objects<pos:position pos:line="80" pos:column="75"/></name></name><operator pos:line="80" pos:column="75">)<pos:position pos:line="80" pos:column="76"/></operator> <operator pos:line="80" pos:column="77">&amp;&amp;<pos:position pos:line="80" pos:column="87"/></operator>
	      <operator pos:line="81" pos:column="15">!<pos:position pos:line="81" pos:column="16"/></operator><name><name pos:line="81" pos:column="16">revs<pos:position pos:line="81" pos:column="20"/></name><operator pos:line="81" pos:column="20">.<pos:position pos:line="81" pos:column="21"/></operator><name pos:line="81" pos:column="21">pending<pos:position pos:line="81" pos:column="28"/></name><operator pos:line="81" pos:column="28">.<pos:position pos:line="81" pos:column="29"/></operator><name pos:line="81" pos:column="29">nr<pos:position pos:line="81" pos:column="31"/></name></name><operator pos:line="81" pos:column="31">)<pos:position pos:line="81" pos:column="32"/></operator><operator pos:line="81" pos:column="32">)<pos:position pos:line="81" pos:column="33"/></operator> <operator pos:line="81" pos:column="34">||<pos:position pos:line="81" pos:column="36"/></operator>
	    <name><name pos:line="82" pos:column="13">revs<pos:position pos:line="82" pos:column="17"/></name><operator pos:line="82" pos:column="17">.<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="18">diff<pos:position pos:line="82" pos:column="22"/></name></name></expr>)<pos:position pos:line="82" pos:column="23"/></condition><then pos:line="82" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="17">usage<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">(<argument><expr><name pos:line="83" pos:column="23">rev_list_usage<pos:position pos:line="83" pos:column="37"/></name></expr></argument>)<pos:position pos:line="83" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="39"/></expr_stmt></block></then></if>

	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name><name pos:line="85" pos:column="13">revs<pos:position pos:line="85" pos:column="17"/></name><operator pos:line="85" pos:column="17">.<pos:position pos:line="85" pos:column="18"/></operator><name pos:line="85" pos:column="18">show_notes<pos:position pos:line="85" pos:column="28"/></name></name></expr>)<pos:position pos:line="85" pos:column="29"/></condition><then pos:line="85" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="17">die<pos:position pos:line="86" pos:column="20"/></name><argument_list pos:line="86" pos:column="20">(<argument><expr><call><name pos:line="86" pos:column="21">_<pos:position pos:line="86" pos:column="22"/></name><argument_list pos:line="86" pos:column="22">(<argument><expr><literal type="string" pos:line="86" pos:column="23">"rev-list does not support display of notes"<pos:position pos:line="86" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="70"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="88" pos:column="9">save_commit_buffer<pos:position pos:line="88" pos:column="27"/></name> <operator pos:line="88" pos:column="28">=<pos:position pos:line="88" pos:column="29"/></operator> <operator pos:line="88" pos:column="30">(<pos:position pos:line="88" pos:column="31"/></operator><name><name pos:line="88" pos:column="31">revs<pos:position pos:line="88" pos:column="35"/></name><operator pos:line="88" pos:column="35">.<pos:position pos:line="88" pos:column="36"/></operator><name pos:line="88" pos:column="36">verbose_header<pos:position pos:line="88" pos:column="50"/></name></name> <operator pos:line="88" pos:column="51">||<pos:position pos:line="88" pos:column="53"/></operator>
			      <name><name pos:line="89" pos:column="31">revs<pos:position pos:line="89" pos:column="35"/></name><operator pos:line="89" pos:column="35">.<pos:position pos:line="89" pos:column="36"/></operator><name pos:line="89" pos:column="36">grep_filter<pos:position pos:line="89" pos:column="47"/></name><operator pos:line="89" pos:column="47">.<pos:position pos:line="89" pos:column="48"/></operator><name pos:line="89" pos:column="48">pattern_list<pos:position pos:line="89" pos:column="60"/></name></name> <operator pos:line="89" pos:column="61">||<pos:position pos:line="89" pos:column="63"/></operator>
			      <name><name pos:line="90" pos:column="31">revs<pos:position pos:line="90" pos:column="35"/></name><operator pos:line="90" pos:column="35">.<pos:position pos:line="90" pos:column="36"/></operator><name pos:line="90" pos:column="36">grep_filter<pos:position pos:line="90" pos:column="47"/></name><operator pos:line="90" pos:column="47">.<pos:position pos:line="90" pos:column="48"/></operator><name pos:line="90" pos:column="48">header_list<pos:position pos:line="90" pos:column="59"/></name></name><operator pos:line="90" pos:column="59">)<pos:position pos:line="90" pos:column="60"/></operator></expr>;<pos:position pos:line="90" pos:column="61"/></expr_stmt>
	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">bisect_list<pos:position pos:line="91" pos:column="24"/></name></expr>)<pos:position pos:line="91" pos:column="25"/></condition><then pos:line="91" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="92" pos:column="17">revs<pos:position pos:line="92" pos:column="21"/></name><operator pos:line="92" pos:column="21">.<pos:position pos:line="92" pos:column="22"/></operator><name pos:line="92" pos:column="22">limited<pos:position pos:line="92" pos:column="29"/></name></name> <operator pos:line="92" pos:column="30">=<pos:position pos:line="92" pos:column="31"/></operator> <literal type="number" pos:line="92" pos:column="32">1<pos:position pos:line="92" pos:column="33"/></literal></expr>;<pos:position pos:line="92" pos:column="34"/></expr_stmt></block></then></if>

	<if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name pos:line="94" pos:column="13">show_progress<pos:position pos:line="94" pos:column="26"/></name></expr>)<pos:position pos:line="94" pos:column="27"/></condition><then pos:line="94" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="17">progress<pos:position pos:line="95" pos:column="25"/></name> <operator pos:line="95" pos:column="26">=<pos:position pos:line="95" pos:column="27"/></operator> <call><name pos:line="95" pos:column="28">start_progress_delay<pos:position pos:line="95" pos:column="48"/></name><argument_list pos:line="95" pos:column="48">(<argument><expr><name pos:line="95" pos:column="49">show_progress<pos:position pos:line="95" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="64">0<pos:position pos:line="95" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="67">0<pos:position pos:line="95" pos:column="68"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="70">2<pos:position pos:line="95" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="73"/></expr_stmt></block></then></if>

	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name pos:line="97" pos:column="13">use_bitmap_index<pos:position pos:line="97" pos:column="29"/></name> <operator pos:line="97" pos:column="30">&amp;&amp;<pos:position pos:line="97" pos:column="40"/></operator> <operator pos:line="97" pos:column="33">!<pos:position pos:line="97" pos:column="34"/></operator><name><name pos:line="97" pos:column="34">revs<pos:position pos:line="97" pos:column="38"/></name><operator pos:line="97" pos:column="38">.<pos:position pos:line="97" pos:column="39"/></operator><name pos:line="97" pos:column="39">prune<pos:position pos:line="97" pos:column="44"/></name></name></expr>)<pos:position pos:line="97" pos:column="45"/></condition><then pos:line="97" pos:column="45"> <block pos:line="97" pos:column="46">{
		<if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><name><name pos:line="98" pos:column="21">revs<pos:position pos:line="98" pos:column="25"/></name><operator pos:line="98" pos:column="25">.<pos:position pos:line="98" pos:column="26"/></operator><name pos:line="98" pos:column="26">count<pos:position pos:line="98" pos:column="31"/></name></name> <operator pos:line="98" pos:column="32">&amp;&amp;<pos:position pos:line="98" pos:column="42"/></operator> <operator pos:line="98" pos:column="35">!<pos:position pos:line="98" pos:column="36"/></operator><name><name pos:line="98" pos:column="36">revs<pos:position pos:line="98" pos:column="40"/></name><operator pos:line="98" pos:column="40">.<pos:position pos:line="98" pos:column="41"/></operator><name pos:line="98" pos:column="41">left_right<pos:position pos:line="98" pos:column="51"/></name></name> <operator pos:line="98" pos:column="52">&amp;&amp;<pos:position pos:line="98" pos:column="62"/></operator> <operator pos:line="98" pos:column="55">!<pos:position pos:line="98" pos:column="56"/></operator><name><name pos:line="98" pos:column="56">revs<pos:position pos:line="98" pos:column="60"/></name><operator pos:line="98" pos:column="60">.<pos:position pos:line="98" pos:column="61"/></operator><name pos:line="98" pos:column="61">cherry_mark<pos:position pos:line="98" pos:column="72"/></name></name></expr>)<pos:position pos:line="98" pos:column="73"/></condition><then pos:line="98" pos:column="73"> <block pos:line="98" pos:column="74">{
			<decl_stmt><decl><type><name pos:line="99" pos:column="25">uint32_t<pos:position pos:line="99" pos:column="33"/></name></type> <name pos:line="99" pos:column="34">commit_count<pos:position pos:line="99" pos:column="46"/></name></decl>;<pos:position pos:line="99" pos:column="47"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="100" pos:column="25">int<pos:position pos:line="100" pos:column="28"/></name></type> <name pos:line="100" pos:column="29">max_count<pos:position pos:line="100" pos:column="38"/></name> <init pos:line="100" pos:column="39">= <expr><name><name pos:line="100" pos:column="41">revs<pos:position pos:line="100" pos:column="45"/></name><operator pos:line="100" pos:column="45">.<pos:position pos:line="100" pos:column="46"/></operator><name pos:line="100" pos:column="46">max_count<pos:position pos:line="100" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="100" pos:column="56"/></decl_stmt>
			<if pos:line="101" pos:column="25">if <condition pos:line="101" pos:column="28">(<expr><operator pos:line="101" pos:column="29">!<pos:position pos:line="101" pos:column="30"/></operator><call><name pos:line="101" pos:column="30">prepare_bitmap_walk<pos:position pos:line="101" pos:column="49"/></name><argument_list pos:line="101" pos:column="49">(<argument><expr><operator pos:line="101" pos:column="50">&amp;<pos:position pos:line="101" pos:column="55"/></operator><name pos:line="101" pos:column="51">revs<pos:position pos:line="101" pos:column="55"/></name></expr></argument>)<pos:position pos:line="101" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="57"/></condition><then pos:line="101" pos:column="57"> <block pos:line="101" pos:column="58">{
				<expr_stmt><expr><call><name pos:line="102" pos:column="33">count_bitmap_commit_list<pos:position pos:line="102" pos:column="57"/></name><argument_list pos:line="102" pos:column="57">(<argument><expr><operator pos:line="102" pos:column="58">&amp;<pos:position pos:line="102" pos:column="63"/></operator><name pos:line="102" pos:column="59">commit_count<pos:position pos:line="102" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="73">NULL<pos:position pos:line="102" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="79">NULL<pos:position pos:line="102" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="85">NULL<pos:position pos:line="102" pos:column="89"/></name></expr></argument>)<pos:position pos:line="102" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="91"/></expr_stmt>
				<if pos:line="103" pos:column="33">if <condition pos:line="103" pos:column="36">(<expr><name pos:line="103" pos:column="37">max_count<pos:position pos:line="103" pos:column="46"/></name> <operator pos:line="103" pos:column="47">&gt;=<pos:position pos:line="103" pos:column="52"/></operator> <literal type="number" pos:line="103" pos:column="50">0<pos:position pos:line="103" pos:column="51"/></literal> <operator pos:line="103" pos:column="52">&amp;&amp;<pos:position pos:line="103" pos:column="62"/></operator> <name pos:line="103" pos:column="55">max_count<pos:position pos:line="103" pos:column="64"/></name> <operator pos:line="103" pos:column="65">&lt;<pos:position pos:line="103" pos:column="69"/></operator> <name pos:line="103" pos:column="67">commit_count<pos:position pos:line="103" pos:column="79"/></name></expr>)<pos:position pos:line="103" pos:column="80"/></condition><then pos:line="103" pos:column="80">
					<block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="41">commit_count<pos:position pos:line="104" pos:column="53"/></name> <operator pos:line="104" pos:column="54">=<pos:position pos:line="104" pos:column="55"/></operator> <name pos:line="104" pos:column="56">max_count<pos:position pos:line="104" pos:column="65"/></name></expr>;<pos:position pos:line="104" pos:column="66"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="105" pos:column="33">printf<pos:position pos:line="105" pos:column="39"/></name><argument_list pos:line="105" pos:column="39">(<argument><expr><literal type="string" pos:line="105" pos:column="40">"%d\n"<pos:position pos:line="105" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="48">commit_count<pos:position pos:line="105" pos:column="60"/></name></expr></argument>)<pos:position pos:line="105" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="62"/></expr_stmt>
				<return pos:line="106" pos:column="33">return <expr><literal type="number" pos:line="106" pos:column="40">0<pos:position pos:line="106" pos:column="41"/></literal></expr>;<pos:position pos:line="106" pos:column="42"/></return>
			}<pos:position pos:line="107" pos:column="26"/></block></then></if>
		}<pos:position pos:line="108" pos:column="18"/></block></then> <elseif pos:line="108" pos:column="19">else <if pos:line="108" pos:column="24">if <condition pos:line="108" pos:column="27">(<expr><name><name pos:line="108" pos:column="28">revs<pos:position pos:line="108" pos:column="32"/></name><operator pos:line="108" pos:column="32">.<pos:position pos:line="108" pos:column="33"/></operator><name pos:line="108" pos:column="33">max_count<pos:position pos:line="108" pos:column="42"/></name></name> <operator pos:line="108" pos:column="43">&lt;<pos:position pos:line="108" pos:column="47"/></operator> <literal type="number" pos:line="108" pos:column="45">0<pos:position pos:line="108" pos:column="46"/></literal> <operator pos:line="108" pos:column="47">&amp;&amp;<pos:position pos:line="108" pos:column="57"/></operator>
			   <name><name pos:line="109" pos:column="28">revs<pos:position pos:line="109" pos:column="32"/></name><operator pos:line="109" pos:column="32">.<pos:position pos:line="109" pos:column="33"/></operator><name pos:line="109" pos:column="33">tag_objects<pos:position pos:line="109" pos:column="44"/></name></name> <operator pos:line="109" pos:column="45">&amp;&amp;<pos:position pos:line="109" pos:column="55"/></operator> <name><name pos:line="109" pos:column="48">revs<pos:position pos:line="109" pos:column="52"/></name><operator pos:line="109" pos:column="52">.<pos:position pos:line="109" pos:column="53"/></operator><name pos:line="109" pos:column="53">tree_objects<pos:position pos:line="109" pos:column="65"/></name></name> <operator pos:line="109" pos:column="66">&amp;&amp;<pos:position pos:line="109" pos:column="76"/></operator> <name><name pos:line="109" pos:column="69">revs<pos:position pos:line="109" pos:column="73"/></name><operator pos:line="109" pos:column="73">.<pos:position pos:line="109" pos:column="74"/></operator><name pos:line="109" pos:column="74">blob_objects<pos:position pos:line="109" pos:column="86"/></name></name></expr>)<pos:position pos:line="109" pos:column="87"/></condition><then pos:line="109" pos:column="87"> <block pos:line="109" pos:column="88">{
			<if pos:line="110" pos:column="25">if <condition pos:line="110" pos:column="28">(<expr><operator pos:line="110" pos:column="29">!<pos:position pos:line="110" pos:column="30"/></operator><call><name pos:line="110" pos:column="30">prepare_bitmap_walk<pos:position pos:line="110" pos:column="49"/></name><argument_list pos:line="110" pos:column="49">(<argument><expr><operator pos:line="110" pos:column="50">&amp;<pos:position pos:line="110" pos:column="55"/></operator><name pos:line="110" pos:column="51">revs<pos:position pos:line="110" pos:column="55"/></name></expr></argument>)<pos:position pos:line="110" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="110" pos:column="57"/></condition><then pos:line="110" pos:column="57"> <block pos:line="110" pos:column="58">{
				<expr_stmt><expr><call><name pos:line="111" pos:column="33">traverse_bitmap_commit_list<pos:position pos:line="111" pos:column="60"/></name><argument_list pos:line="111" pos:column="60">(<argument><expr><operator pos:line="111" pos:column="61">&amp;<pos:position pos:line="111" pos:column="66"/></operator><name pos:line="111" pos:column="62">show_object_fast<pos:position pos:line="111" pos:column="78"/></name></expr></argument>)<pos:position pos:line="111" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="80"/></expr_stmt>
				<return pos:line="112" pos:column="33">return <expr><literal type="number" pos:line="112" pos:column="40">0<pos:position pos:line="112" pos:column="41"/></literal></expr>;<pos:position pos:line="112" pos:column="42"/></return>
			}<pos:position pos:line="113" pos:column="26"/></block></then></if>
		}<pos:position pos:line="114" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="115" pos:column="10"/></block></then></if>

	<if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><call><name pos:line="117" pos:column="13">prepare_revision_walk<pos:position pos:line="117" pos:column="34"/></name><argument_list pos:line="117" pos:column="34">(<argument><expr><operator pos:line="117" pos:column="35">&amp;<pos:position pos:line="117" pos:column="40"/></operator><name pos:line="117" pos:column="36">revs<pos:position pos:line="117" pos:column="40"/></name></expr></argument>)<pos:position pos:line="117" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="117" pos:column="42"/></condition><then pos:line="117" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="118" pos:column="17">die<pos:position pos:line="118" pos:column="20"/></name><argument_list pos:line="118" pos:column="20">(<argument><expr><literal type="string" pos:line="118" pos:column="21">"revision walk setup failed"<pos:position pos:line="118" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="51"/></expr_stmt></block></then></if>
	<if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name><name pos:line="119" pos:column="13">revs<pos:position pos:line="119" pos:column="17"/></name><operator pos:line="119" pos:column="17">.<pos:position pos:line="119" pos:column="18"/></operator><name pos:line="119" pos:column="18">tree_objects<pos:position pos:line="119" pos:column="30"/></name></name></expr>)<pos:position pos:line="119" pos:column="31"/></condition><then pos:line="119" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="120" pos:column="17">mark_edges_uninteresting<pos:position pos:line="120" pos:column="41"/></name><argument_list pos:line="120" pos:column="41">(<argument><expr><operator pos:line="120" pos:column="42">&amp;<pos:position pos:line="120" pos:column="47"/></operator><name pos:line="120" pos:column="43">revs<pos:position pos:line="120" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="49">show_edge<pos:position pos:line="120" pos:column="58"/></name></expr></argument>)<pos:position pos:line="120" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="60"/></expr_stmt></block></then></if>

	<if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><name pos:line="122" pos:column="13">bisect_list<pos:position pos:line="122" pos:column="24"/></name></expr>)<pos:position pos:line="122" pos:column="25"/></condition><then pos:line="122" pos:column="25"> <block pos:line="122" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="123" pos:column="17">int<pos:position pos:line="123" pos:column="20"/></name></type> <name pos:line="123" pos:column="21">reaches<pos:position pos:line="123" pos:column="28"/></name> <init pos:line="123" pos:column="29">= <expr><name pos:line="123" pos:column="31">reaches<pos:position pos:line="123" pos:column="38"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="123" pos:column="40">all<pos:position pos:line="123" pos:column="43"/></name> <init pos:line="123" pos:column="44">= <expr><name pos:line="123" pos:column="46">all<pos:position pos:line="123" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="123" pos:column="50"/></decl_stmt>

		<expr_stmt><expr><name><name pos:line="125" pos:column="17">revs<pos:position pos:line="125" pos:column="21"/></name><operator pos:line="125" pos:column="21">.<pos:position pos:line="125" pos:column="22"/></operator><name pos:line="125" pos:column="22">commits<pos:position pos:line="125" pos:column="29"/></name></name> <operator pos:line="125" pos:column="30">=<pos:position pos:line="125" pos:column="31"/></operator> <call><name pos:line="125" pos:column="32">find_bisection<pos:position pos:line="125" pos:column="46"/></name><argument_list pos:line="125" pos:column="46">(<argument><expr><name><name pos:line="125" pos:column="47">revs<pos:position pos:line="125" pos:column="51"/></name><operator pos:line="125" pos:column="51">.<pos:position pos:line="125" pos:column="52"/></operator><name pos:line="125" pos:column="52">commits<pos:position pos:line="125" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="61">&amp;<pos:position pos:line="125" pos:column="66"/></operator><name pos:line="125" pos:column="62">reaches<pos:position pos:line="125" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="71">&amp;<pos:position pos:line="125" pos:column="76"/></operator><name pos:line="125" pos:column="72">all<pos:position pos:line="125" pos:column="75"/></name></expr></argument>,
					      <argument><expr><name pos:line="126" pos:column="47">bisect_find_all<pos:position pos:line="126" pos:column="62"/></name></expr></argument>)<pos:position pos:line="126" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="64"/></expr_stmt>

		<if pos:line="128" pos:column="17">if <condition pos:line="128" pos:column="20">(<expr><name pos:line="128" pos:column="21">bisect_show_vars<pos:position pos:line="128" pos:column="37"/></name></expr>)<pos:position pos:line="128" pos:column="38"/></condition><then pos:line="128" pos:column="38">
			<block type="pseudo"><return pos:line="129" pos:column="25">return <expr><call><name pos:line="129" pos:column="32">show_bisect_vars<pos:position pos:line="129" pos:column="48"/></name><argument_list pos:line="129" pos:column="48">(<argument><expr><operator pos:line="129" pos:column="49">&amp;<pos:position pos:line="129" pos:column="54"/></operator><name pos:line="129" pos:column="50">info<pos:position pos:line="129" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="56">reaches<pos:position pos:line="129" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="65">all<pos:position pos:line="129" pos:column="68"/></name></expr></argument>)<pos:position pos:line="129" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="70"/></return></block></then></if>
	}<pos:position pos:line="130" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="132" pos:column="9">traverse_commit_list<pos:position pos:line="132" pos:column="29"/></name><argument_list pos:line="132" pos:column="29">(<argument><expr><operator pos:line="132" pos:column="30">&amp;<pos:position pos:line="132" pos:column="35"/></operator><name pos:line="132" pos:column="31">revs<pos:position pos:line="132" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="37">show_commit<pos:position pos:line="132" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="50">show_object<pos:position pos:line="132" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="132" pos:column="63">&amp;<pos:position pos:line="132" pos:column="68"/></operator><name pos:line="132" pos:column="64">info<pos:position pos:line="132" pos:column="68"/></name></expr></argument>)<pos:position pos:line="132" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="70"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="134" pos:column="9">stop_progress<pos:position pos:line="134" pos:column="22"/></name><argument_list pos:line="134" pos:column="22">(<argument><expr><operator pos:line="134" pos:column="23">&amp;<pos:position pos:line="134" pos:column="28"/></operator><name pos:line="134" pos:column="24">progress<pos:position pos:line="134" pos:column="32"/></name></expr></argument>)<pos:position pos:line="134" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="34"/></expr_stmt>

	<if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><name><name pos:line="136" pos:column="13">revs<pos:position pos:line="136" pos:column="17"/></name><operator pos:line="136" pos:column="17">.<pos:position pos:line="136" pos:column="18"/></operator><name pos:line="136" pos:column="18">count<pos:position pos:line="136" pos:column="23"/></name></name></expr>)<pos:position pos:line="136" pos:column="24"/></condition><then pos:line="136" pos:column="24"> <block pos:line="136" pos:column="25">{
		<if pos:line="137" pos:column="17">if <condition pos:line="137" pos:column="20">(<expr><name><name pos:line="137" pos:column="21">revs<pos:position pos:line="137" pos:column="25"/></name><operator pos:line="137" pos:column="25">.<pos:position pos:line="137" pos:column="26"/></operator><name pos:line="137" pos:column="26">left_right<pos:position pos:line="137" pos:column="36"/></name></name> <operator pos:line="137" pos:column="37">&amp;&amp;<pos:position pos:line="137" pos:column="47"/></operator> <name><name pos:line="137" pos:column="40">revs<pos:position pos:line="137" pos:column="44"/></name><operator pos:line="137" pos:column="44">.<pos:position pos:line="137" pos:column="45"/></operator><name pos:line="137" pos:column="45">cherry_mark<pos:position pos:line="137" pos:column="56"/></name></name></expr>)<pos:position pos:line="137" pos:column="57"/></condition><then pos:line="137" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="138" pos:column="25">printf<pos:position pos:line="138" pos:column="31"/></name><argument_list pos:line="138" pos:column="31">(<argument><expr><literal type="string" pos:line="138" pos:column="32">"%d\t%d\t%d\n"<pos:position pos:line="138" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="138" pos:column="48">revs<pos:position pos:line="138" pos:column="52"/></name><operator pos:line="138" pos:column="52">.<pos:position pos:line="138" pos:column="53"/></operator><name pos:line="138" pos:column="53">count_left<pos:position pos:line="138" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="138" pos:column="65">revs<pos:position pos:line="138" pos:column="69"/></name><operator pos:line="138" pos:column="69">.<pos:position pos:line="138" pos:column="70"/></operator><name pos:line="138" pos:column="70">count_right<pos:position pos:line="138" pos:column="81"/></name></name></expr></argument>, <argument><expr><name><name pos:line="138" pos:column="83">revs<pos:position pos:line="138" pos:column="87"/></name><operator pos:line="138" pos:column="87">.<pos:position pos:line="138" pos:column="88"/></operator><name pos:line="138" pos:column="88">count_same<pos:position pos:line="138" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="138" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="100"/></expr_stmt></block></then>
		<elseif pos:line="139" pos:column="17">else <if pos:line="139" pos:column="22">if <condition pos:line="139" pos:column="25">(<expr><name><name pos:line="139" pos:column="26">revs<pos:position pos:line="139" pos:column="30"/></name><operator pos:line="139" pos:column="30">.<pos:position pos:line="139" pos:column="31"/></operator><name pos:line="139" pos:column="31">left_right<pos:position pos:line="139" pos:column="41"/></name></name></expr>)<pos:position pos:line="139" pos:column="42"/></condition><then pos:line="139" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="140" pos:column="25">printf<pos:position pos:line="140" pos:column="31"/></name><argument_list pos:line="140" pos:column="31">(<argument><expr><literal type="string" pos:line="140" pos:column="32">"%d\t%d\n"<pos:position pos:line="140" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="44">revs<pos:position pos:line="140" pos:column="48"/></name><operator pos:line="140" pos:column="48">.<pos:position pos:line="140" pos:column="49"/></operator><name pos:line="140" pos:column="49">count_left<pos:position pos:line="140" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="61">revs<pos:position pos:line="140" pos:column="65"/></name><operator pos:line="140" pos:column="65">.<pos:position pos:line="140" pos:column="66"/></operator><name pos:line="140" pos:column="66">count_right<pos:position pos:line="140" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="79"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="141" pos:column="17">else <if pos:line="141" pos:column="22">if <condition pos:line="141" pos:column="25">(<expr><name><name pos:line="141" pos:column="26">revs<pos:position pos:line="141" pos:column="30"/></name><operator pos:line="141" pos:column="30">.<pos:position pos:line="141" pos:column="31"/></operator><name pos:line="141" pos:column="31">cherry_mark<pos:position pos:line="141" pos:column="42"/></name></name></expr>)<pos:position pos:line="141" pos:column="43"/></condition><then pos:line="141" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="142" pos:column="25">printf<pos:position pos:line="142" pos:column="31"/></name><argument_list pos:line="142" pos:column="31">(<argument><expr><literal type="string" pos:line="142" pos:column="32">"%d\t%d\n"<pos:position pos:line="142" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="44">revs<pos:position pos:line="142" pos:column="48"/></name><operator pos:line="142" pos:column="48">.<pos:position pos:line="142" pos:column="49"/></operator><name pos:line="142" pos:column="49">count_left<pos:position pos:line="142" pos:column="59"/></name></name> <operator pos:line="142" pos:column="60">+<pos:position pos:line="142" pos:column="61"/></operator> <name><name pos:line="142" pos:column="62">revs<pos:position pos:line="142" pos:column="66"/></name><operator pos:line="142" pos:column="66">.<pos:position pos:line="142" pos:column="67"/></operator><name pos:line="142" pos:column="67">count_right<pos:position pos:line="142" pos:column="78"/></name></name></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="80">revs<pos:position pos:line="142" pos:column="84"/></name><operator pos:line="142" pos:column="84">.<pos:position pos:line="142" pos:column="85"/></operator><name pos:line="142" pos:column="85">count_same<pos:position pos:line="142" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="97"/></expr_stmt></block></then></if></elseif>
		<else pos:line="143" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="144" pos:column="25">printf<pos:position pos:line="144" pos:column="31"/></name><argument_list pos:line="144" pos:column="31">(<argument><expr><literal type="string" pos:line="144" pos:column="32">"%d\n"<pos:position pos:line="144" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="144" pos:column="40">revs<pos:position pos:line="144" pos:column="44"/></name><operator pos:line="144" pos:column="44">.<pos:position pos:line="144" pos:column="45"/></operator><name pos:line="144" pos:column="45">count_left<pos:position pos:line="144" pos:column="55"/></name></name> <operator pos:line="144" pos:column="56">+<pos:position pos:line="144" pos:column="57"/></operator> <name><name pos:line="144" pos:column="58">revs<pos:position pos:line="144" pos:column="62"/></name><operator pos:line="144" pos:column="62">.<pos:position pos:line="144" pos:column="63"/></operator><name pos:line="144" pos:column="63">count_right<pos:position pos:line="144" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="144" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="76"/></expr_stmt></block></else></if>
	}<pos:position pos:line="145" pos:column="10"/></block></then></if>

	<return pos:line="147" pos:column="9">return <expr><literal type="number" pos:line="147" pos:column="16">0<pos:position pos:line="147" pos:column="17"/></literal></expr>;<pos:position pos:line="147" pos:column="18"/></return>
}<pos:position pos:line="148" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2594_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">find_boundary<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">mailinfo<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">mi<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">strbuf<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">line<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><operator pos:line="3" pos:column="16">!<pos:position pos:line="3" pos:column="17"/></operator><call><name pos:line="3" pos:column="17">strbuf_getline_lf<pos:position pos:line="3" pos:column="34"/></name><argument_list pos:line="3" pos:column="34">(<argument><expr><name pos:line="3" pos:column="35">line<pos:position pos:line="3" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="41">mi<pos:position pos:line="3" pos:column="43"/></name><operator pos:line="3" pos:column="43">-&gt;<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="45">input<pos:position pos:line="3" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="52"/></condition> <block pos:line="3" pos:column="53">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><operator pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></operator><operator pos:line="4" pos:column="22">(<pos:position pos:line="4" pos:column="23"/></operator><name><name pos:line="4" pos:column="23">mi<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">content_top<pos:position pos:line="4" pos:column="38"/></name></name><operator pos:line="4" pos:column="38">)<pos:position pos:line="4" pos:column="39"/></operator> <operator pos:line="4" pos:column="40">&amp;&amp;<pos:position pos:line="4" pos:column="50"/></operator> <call><name pos:line="4" pos:column="43">is_multipart_boundary<pos:position pos:line="4" pos:column="64"/></name><argument_list pos:line="4" pos:column="64">(<argument><expr><name pos:line="4" pos:column="65">mi<pos:position pos:line="4" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="69">line<pos:position pos:line="4" pos:column="73"/></name></expr></argument>)<pos:position pos:line="4" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="75"/></condition><then pos:line="4" pos:column="75">
			<block type="pseudo"><return pos:line="5" pos:column="25">return <expr><literal type="number" pos:line="5" pos:column="32">1<pos:position pos:line="5" pos:column="33"/></literal></expr>;<pos:position pos:line="5" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="6" pos:column="10"/></block></while>
	<return pos:line="7" pos:column="9">return <expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

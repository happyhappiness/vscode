<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1533.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">queue_commands_from_cert<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">command<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier><modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">tail<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
				     <parameter><decl><type><name><name pos:line="2" pos:column="38">struct<pos:position pos:line="2" pos:column="44"/></name> <name pos:line="2" pos:column="45">strbuf<pos:position pos:line="2" pos:column="51"/></name></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">push_cert<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">boc<pos:position pos:line="4" pos:column="24"/></name></decl>, <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="27">eoc<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">tail<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">die<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><literal type="string" pos:line="7" pos:column="21">"protocol error: got both push certificate and unsigned commands"<pos:position pos:line="7" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="88"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">boc<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">strstr<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name><name pos:line="9" pos:column="22">push_cert<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">buf<pos:position pos:line="9" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="38">"\n\n"<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">boc<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">die<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><literal type="string" pos:line="11" pos:column="21">"malformed push certificate %.*s"<pos:position pos:line="11" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="56">100<pos:position pos:line="11" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="61">push_cert<pos:position pos:line="11" pos:column="70"/></name><operator pos:line="11" pos:column="70">-&gt;<pos:position pos:line="11" pos:column="75"/></operator><name pos:line="11" pos:column="72">buf<pos:position pos:line="11" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="77"/></expr_stmt></block></then>
	<else pos:line="12" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">boc<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">+=<pos:position pos:line="13" pos:column="23"/></operator> <literal type="number" pos:line="13" pos:column="24">2<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name pos:line="14" pos:column="9">eoc<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <name><name pos:line="14" pos:column="15">push_cert<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">buf<pos:position pos:line="14" pos:column="29"/></name></name> <operator pos:line="14" pos:column="30">+<pos:position pos:line="14" pos:column="31"/></operator> <call><name pos:line="14" pos:column="32">parse_signature<pos:position pos:line="14" pos:column="47"/></name><argument_list pos:line="14" pos:column="47">(<argument><expr><name><name pos:line="14" pos:column="48">push_cert<pos:position pos:line="14" pos:column="57"/></name><operator pos:line="14" pos:column="57">-&gt;<pos:position pos:line="14" pos:column="62"/></operator><name pos:line="14" pos:column="59">buf<pos:position pos:line="14" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="64">push_cert<pos:position pos:line="14" pos:column="73"/></name><operator pos:line="14" pos:column="73">-&gt;<pos:position pos:line="14" pos:column="78"/></operator><name pos:line="14" pos:column="75">len<pos:position pos:line="14" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="80"/></expr_stmt>

	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><name pos:line="16" pos:column="16">boc<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">&lt;<pos:position pos:line="16" pos:column="24"/></operator> <name pos:line="16" pos:column="22">eoc<pos:position pos:line="16" pos:column="25"/></name></expr>)<pos:position pos:line="16" pos:column="26"/></condition> <block pos:line="16" pos:column="27">{
		<decl_stmt><decl><type><specifier pos:line="17" pos:column="17">const<pos:position pos:line="17" pos:column="22"/></specifier> <name pos:line="17" pos:column="23">char<pos:position pos:line="17" pos:column="27"/></name> <modifier pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></modifier></type><name pos:line="17" pos:column="29">eol<pos:position pos:line="17" pos:column="32"/></name> <init pos:line="17" pos:column="33">= <expr><call><name pos:line="17" pos:column="35">memchr<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><name pos:line="17" pos:column="42">boc<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="47">'\n'<pos:position pos:line="17" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="53">eoc<pos:position pos:line="17" pos:column="56"/></name> <operator pos:line="17" pos:column="57">-<pos:position pos:line="17" pos:column="58"/></operator> <name pos:line="17" pos:column="59">boc<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="64"/></decl_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">tail<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <call><name pos:line="18" pos:column="24">queue_command<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">tail<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">boc<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="18" pos:column="49">eol<pos:position pos:line="18" pos:column="52"/></name></expr> ?<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54"> <expr><name pos:line="18" pos:column="55">eol<pos:position pos:line="18" pos:column="58"/></name> <operator pos:line="18" pos:column="59">-<pos:position pos:line="18" pos:column="60"/></operator> <name pos:line="18" pos:column="61">boc<pos:position pos:line="18" pos:column="64"/></name></expr> <pos:position pos:line="18" pos:column="65"/></then><else pos:line="18" pos:column="65">: <expr><name pos:line="18" pos:column="67">eoc<pos:position pos:line="18" pos:column="70"/></name> <operator pos:line="18" pos:column="71">-<pos:position pos:line="18" pos:column="72"/></operator> <name pos:line="18" pos:column="73">eol<pos:position pos:line="18" pos:column="76"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">boc<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="19" pos:column="23">eol<pos:position pos:line="19" pos:column="26"/></name></expr> ?<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28"> <expr><name pos:line="19" pos:column="29">eol<pos:position pos:line="19" pos:column="32"/></name> <operator pos:line="19" pos:column="33">+<pos:position pos:line="19" pos:column="34"/></operator> <literal type="number" pos:line="19" pos:column="35">1<pos:position pos:line="19" pos:column="36"/></literal></expr> <pos:position pos:line="19" pos:column="37"/></then><else pos:line="19" pos:column="37">: <expr><name pos:line="19" pos:column="39">eoc<pos:position pos:line="19" pos:column="42"/></name></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></while>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5991_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">relative_url<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">remote_url<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">url<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name pos:line="3" pos:column="39">char<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">up_path<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="53"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">is_relative<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">colonsep<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">out<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">remoteurl<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><call><name pos:line="8" pos:column="27">xstrdup<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">remote_url<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">strbuf<pos:position pos:line="9" pos:column="22"/></name></name></type> <name pos:line="9" pos:column="23">sb<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name pos:line="9" pos:column="28">STRBUF_INIT<pos:position pos:line="9" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">len<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><call><name pos:line="10" pos:column="22">strlen<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">remoteurl<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">is_dir_sep<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name><name pos:line="12" pos:column="24">remoteurl<pos:position pos:line="12" pos:column="33"/></name><index pos:line="12" pos:column="33">[<expr><name pos:line="12" pos:column="34">len<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-<pos:position pos:line="12" pos:column="38"/></operator><literal type="number" pos:line="12" pos:column="38">1<pos:position pos:line="12" pos:column="39"/></literal></expr>]<pos:position pos:line="12" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="17">remoteurl<pos:position pos:line="13" pos:column="26"/></name><index pos:line="13" pos:column="26">[<expr><name pos:line="13" pos:column="27">len<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-<pos:position pos:line="13" pos:column="31"/></operator><literal type="number" pos:line="13" pos:column="31">1<pos:position pos:line="13" pos:column="32"/></literal></expr>]<pos:position pos:line="13" pos:column="33"/></index></name> <operator pos:line="13" pos:column="34">=<pos:position pos:line="13" pos:column="35"/></operator> <literal type="char" pos:line="13" pos:column="36">'\0'<pos:position pos:line="13" pos:column="40"/></literal></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><call><name pos:line="15" pos:column="14">url_is_local_not_ssh<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">remoteurl<pos:position pos:line="15" pos:column="44"/></name></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call> <operator pos:line="15" pos:column="46">||<pos:position pos:line="15" pos:column="48"/></operator> <call><name pos:line="15" pos:column="49">is_absolute_path<pos:position pos:line="15" pos:column="65"/></name><argument_list pos:line="15" pos:column="65">(<argument><expr><name pos:line="15" pos:column="66">remoteurl<pos:position pos:line="15" pos:column="75"/></name></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="77"/></condition><then pos:line="15" pos:column="77">
		<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="17">is_relative<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="31">0<pos:position pos:line="16" pos:column="32"/></literal></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt></block></then>
	<else pos:line="17" pos:column="9">else <block pos:line="17" pos:column="14">{
		<expr_stmt><expr><name pos:line="18" pos:column="17">is_relative<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <literal type="number" pos:line="18" pos:column="31">1<pos:position pos:line="18" pos:column="32"/></literal></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
		<comment type="block" pos:line="19" pos:column="17">/*
		 * Prepend a './' to ensure all relative
		 * remoteurls start with './' or '../'
		 */</comment>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><call><name pos:line="23" pos:column="22">starts_with_dot_slash<pos:position pos:line="23" pos:column="43"/></name><argument_list pos:line="23" pos:column="43">(<argument><expr><name pos:line="23" pos:column="44">remoteurl<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call> <operator pos:line="23" pos:column="55">&amp;&amp;<pos:position pos:line="23" pos:column="65"/></operator>
		    <operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><call><name pos:line="24" pos:column="22">starts_with_dot_dot_slash<pos:position pos:line="24" pos:column="47"/></name><argument_list pos:line="24" pos:column="47">(<argument><expr><name pos:line="24" pos:column="48">remoteurl<pos:position pos:line="24" pos:column="57"/></name></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="59"/></condition><then pos:line="24" pos:column="59"> <block pos:line="24" pos:column="60">{
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">strbuf_reset<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><operator pos:line="25" pos:column="38">&amp;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="39">sb<pos:position pos:line="25" pos:column="41"/></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">strbuf_addf<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><operator pos:line="26" pos:column="37">&amp;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="38">sb<pos:position pos:line="26" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="42">"./%s"<pos:position pos:line="26" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="50">remoteurl<pos:position pos:line="26" pos:column="59"/></name></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">free<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">remoteurl<pos:position pos:line="27" pos:column="39"/></name></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">remoteurl<pos:position pos:line="28" pos:column="34"/></name> <operator pos:line="28" pos:column="35">=<pos:position pos:line="28" pos:column="36"/></operator> <call><name pos:line="28" pos:column="37">strbuf_detach<pos:position pos:line="28" pos:column="50"/></name><argument_list pos:line="28" pos:column="50">(<argument><expr><operator pos:line="28" pos:column="51">&amp;<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="52">sb<pos:position pos:line="28" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="56">NULL<pos:position pos:line="28" pos:column="60"/></name></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
	}<pos:position pos:line="30" pos:column="10"/></block></else></if>
	<comment type="block" pos:line="31" pos:column="9">/*
	 * When the url starts with '../', remove that and the
	 * last directory in remoteurl.
	 */</comment>
	<while pos:line="35" pos:column="9">while <condition pos:line="35" pos:column="15">(<expr><name pos:line="35" pos:column="16">url<pos:position pos:line="35" pos:column="19"/></name></expr>)<pos:position pos:line="35" pos:column="20"/></condition> <block pos:line="35" pos:column="21">{
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">starts_with_dot_dot_slash<pos:position pos:line="36" pos:column="46"/></name><argument_list pos:line="36" pos:column="46">(<argument><expr><name pos:line="36" pos:column="47">url<pos:position pos:line="36" pos:column="50"/></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="52"/></condition><then pos:line="36" pos:column="52"> <block pos:line="36" pos:column="53">{
			<expr_stmt><expr><name pos:line="37" pos:column="25">url<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">+=<pos:position pos:line="37" pos:column="31"/></operator> <literal type="number" pos:line="37" pos:column="32">3<pos:position pos:line="37" pos:column="33"/></literal></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>
			<expr_stmt><expr><name pos:line="38" pos:column="25">colonsep<pos:position pos:line="38" pos:column="33"/></name> <operator pos:line="38" pos:column="34">|=<pos:position pos:line="38" pos:column="36"/></operator> <call><name pos:line="38" pos:column="37">chop_last_dir<pos:position pos:line="38" pos:column="50"/></name><argument_list pos:line="38" pos:column="50">(<argument><expr><operator pos:line="38" pos:column="51">&amp;<pos:position pos:line="38" pos:column="56"/></operator><name pos:line="38" pos:column="52">remoteurl<pos:position pos:line="38" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="63">is_relative<pos:position pos:line="38" pos:column="74"/></name></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></then> <elseif pos:line="39" pos:column="19">else <if pos:line="39" pos:column="24">if <condition pos:line="39" pos:column="27">(<expr><call><name pos:line="39" pos:column="28">starts_with_dot_slash<pos:position pos:line="39" pos:column="49"/></name><argument_list pos:line="39" pos:column="49">(<argument><expr><name pos:line="39" pos:column="50">url<pos:position pos:line="39" pos:column="53"/></name></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="55"/></condition><then pos:line="39" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="25">url<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">+=<pos:position pos:line="40" pos:column="31"/></operator> <literal type="number" pos:line="40" pos:column="32">2<pos:position pos:line="40" pos:column="33"/></literal></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt></block></then></if></elseif>
		<else pos:line="41" pos:column="17">else
			<block type="pseudo"><break pos:line="42" pos:column="25">break;<pos:position pos:line="42" pos:column="31"/></break></block></else></if>
	}<pos:position pos:line="43" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">strbuf_reset<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><operator pos:line="44" pos:column="22">&amp;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="23">sb<pos:position pos:line="44" pos:column="25"/></name></expr></argument>)<pos:position pos:line="44" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">strbuf_addf<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><operator pos:line="45" pos:column="21">&amp;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="22">sb<pos:position pos:line="45" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="26">"%s%s%s"<pos:position pos:line="45" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="36">remoteurl<pos:position pos:line="45" pos:column="45"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="45" pos:column="47">colonsep<pos:position pos:line="45" pos:column="55"/></name></expr> ?<pos:position pos:line="45" pos:column="57"/></condition><then pos:line="45" pos:column="57"> <expr><literal type="string" pos:line="45" pos:column="58">":"<pos:position pos:line="45" pos:column="61"/></literal></expr> <pos:position pos:line="45" pos:column="62"/></then><else pos:line="45" pos:column="62">: <expr><literal type="string" pos:line="45" pos:column="64">"/"<pos:position pos:line="45" pos:column="67"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="45" pos:column="69">url<pos:position pos:line="45" pos:column="72"/></name></expr></argument>)<pos:position pos:line="45" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="74"/></expr_stmt>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><call><name pos:line="46" pos:column="13">ends_with<pos:position pos:line="46" pos:column="22"/></name><argument_list pos:line="46" pos:column="22">(<argument><expr><name pos:line="46" pos:column="23">url<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="28">"/"<pos:position pos:line="46" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="33"/></condition><then pos:line="46" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="17">strbuf_setlen<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><operator pos:line="47" pos:column="31">&amp;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="32">sb<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="36">sb<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">.<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="39">len<pos:position pos:line="47" pos:column="42"/></name></name> <operator pos:line="47" pos:column="43">-<pos:position pos:line="47" pos:column="44"/></operator> <literal type="number" pos:line="47" pos:column="45">1<pos:position pos:line="47" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">free<pos:position pos:line="48" pos:column="13"/></name><argument_list pos:line="48" pos:column="13">(<argument><expr><name pos:line="48" pos:column="14">remoteurl<pos:position pos:line="48" pos:column="23"/></name></expr></argument>)<pos:position pos:line="48" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt>

	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><call><name pos:line="50" pos:column="13">starts_with_dot_slash<pos:position pos:line="50" pos:column="34"/></name><argument_list pos:line="50" pos:column="34">(<argument><expr><name><name pos:line="50" pos:column="35">sb<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">.<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="38">buf<pos:position pos:line="50" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="43"/></condition><then pos:line="50" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="17">out<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <call><name pos:line="51" pos:column="23">xstrdup<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">(<argument><expr><name><name pos:line="51" pos:column="31">sb<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">.<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="34">buf<pos:position pos:line="51" pos:column="37"/></name></name> <operator pos:line="51" pos:column="38">+<pos:position pos:line="51" pos:column="39"/></operator> <literal type="number" pos:line="51" pos:column="40">2<pos:position pos:line="51" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="43"/></expr_stmt></block></then>
	<else pos:line="52" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="17">out<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator> <call><name pos:line="53" pos:column="23">xstrdup<pos:position pos:line="53" pos:column="30"/></name><argument_list pos:line="53" pos:column="30">(<argument><expr><name><name pos:line="53" pos:column="31">sb<pos:position pos:line="53" pos:column="33"/></name><operator pos:line="53" pos:column="33">.<pos:position pos:line="53" pos:column="34"/></operator><name pos:line="53" pos:column="34">buf<pos:position pos:line="53" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">strbuf_reset<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><operator pos:line="54" pos:column="22">&amp;<pos:position pos:line="54" pos:column="27"/></operator><name pos:line="54" pos:column="23">sb<pos:position pos:line="54" pos:column="25"/></name></expr></argument>)<pos:position pos:line="54" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="27"/></expr_stmt>

	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">!<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">up_path<pos:position pos:line="56" pos:column="21"/></name> <operator pos:line="56" pos:column="22">||<pos:position pos:line="56" pos:column="24"/></operator> <operator pos:line="56" pos:column="25">!<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="26">is_relative<pos:position pos:line="56" pos:column="37"/></name></expr>)<pos:position pos:line="56" pos:column="38"/></condition><then pos:line="56" pos:column="38">
		<block type="pseudo"><return pos:line="57" pos:column="17">return <expr><name pos:line="57" pos:column="24">out<pos:position pos:line="57" pos:column="27"/></name></expr>;<pos:position pos:line="57" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="59" pos:column="9">strbuf_addf<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><operator pos:line="59" pos:column="21">&amp;<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="22">sb<pos:position pos:line="59" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="26">"%s%s"<pos:position pos:line="59" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">up_path<pos:position pos:line="59" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="43">out<pos:position pos:line="59" pos:column="46"/></name></expr></argument>)<pos:position pos:line="59" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">free<pos:position pos:line="60" pos:column="13"/></name><argument_list pos:line="60" pos:column="13">(<argument><expr><name pos:line="60" pos:column="14">out<pos:position pos:line="60" pos:column="17"/></name></expr></argument>)<pos:position pos:line="60" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="19"/></expr_stmt>
	<return pos:line="61" pos:column="9">return <expr><call><name pos:line="61" pos:column="16">strbuf_detach<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">(<argument><expr><operator pos:line="61" pos:column="30">&amp;<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="31">sb<pos:position pos:line="61" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="35">NULL<pos:position pos:line="61" pos:column="39"/></name></expr></argument>)<pos:position pos:line="61" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="41"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

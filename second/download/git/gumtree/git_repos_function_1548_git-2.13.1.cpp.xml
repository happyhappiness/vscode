<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1548_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">diff_get_patch_id<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">diff_options<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">options<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">unsigned<pos:position pos:line="1" pos:column="68"/></name> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">sha1<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="81">int<pos:position pos:line="1" pos:column="84"/></name></type> <name pos:line="1" pos:column="85">diff_header_only<pos:position pos:line="1" pos:column="101"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="102"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">diff_queue_struct<pos:position pos:line="3" pos:column="33"/></name></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">q<pos:position pos:line="3" pos:column="36"/></name> <init pos:line="3" pos:column="37">= <expr><operator pos:line="3" pos:column="39">&amp;<pos:position pos:line="3" pos:column="44"/></operator><name pos:line="3" pos:column="40">diff_queued_diff<pos:position pos:line="3" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">git_SHA_CTX<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">ctx<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">patch_id_t<pos:position pos:line="6" pos:column="26"/></name></name></type> <name pos:line="6" pos:column="27">data<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">git_SHA1_Init<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><operator pos:line="8" pos:column="23">&amp;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="24">ctx<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">memset<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><operator pos:line="9" pos:column="16">&amp;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="17">data<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="26">sizeof<argument_list pos:line="9" pos:column="32">(<argument><expr pos:line="9" pos:column="33">struct <name pos:line="9" pos:column="40">patch_id_t<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">data<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">.<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">ctx<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <operator pos:line="10" pos:column="20">&amp;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="21">ctx<pos:position pos:line="10" pos:column="24"/></name></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>

	<for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">i<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></init> <condition><expr><name pos:line="12" pos:column="21">i<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&lt;<pos:position pos:line="12" pos:column="27"/></operator> <name><name pos:line="12" pos:column="25">q<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">nr<pos:position pos:line="12" pos:column="30"/></name></name></expr>;<pos:position pos:line="12" pos:column="31"/></condition> <incr><expr><name pos:line="12" pos:column="32">i<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">++<pos:position pos:line="12" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="36"/></control> <block pos:line="12" pos:column="37">{
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">xpparam_t<pos:position pos:line="13" pos:column="26"/></name></type> <name pos:line="13" pos:column="27">xpp<pos:position pos:line="13" pos:column="30"/></name></decl>;<pos:position pos:line="13" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">xdemitconf_t<pos:position pos:line="14" pos:column="29"/></name></type> <name pos:line="14" pos:column="30">xecfg<pos:position pos:line="14" pos:column="35"/></name></decl>;<pos:position pos:line="14" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">mmfile_t<pos:position pos:line="15" pos:column="25"/></name></type> <name pos:line="15" pos:column="26">mf1<pos:position pos:line="15" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="31">mf2<pos:position pos:line="15" pos:column="34"/></name></decl>;<pos:position pos:line="15" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="16" pos:column="17">struct<pos:position pos:line="16" pos:column="23"/></name> <name pos:line="16" pos:column="24">diff_filepair<pos:position pos:line="16" pos:column="37"/></name></name> <modifier pos:line="16" pos:column="38">*<pos:position pos:line="16" pos:column="39"/></modifier></type><name pos:line="16" pos:column="39">p<pos:position pos:line="16" pos:column="40"/></name> <init pos:line="16" pos:column="41">= <expr><name><name pos:line="16" pos:column="43">q<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">-&gt;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="46">queue<pos:position pos:line="16" pos:column="51"/></name><index pos:line="16" pos:column="51">[<expr><name pos:line="16" pos:column="52">i<pos:position pos:line="16" pos:column="53"/></name></expr>]<pos:position pos:line="16" pos:column="54"/></index></name></expr></init></decl>;<pos:position pos:line="16" pos:column="55"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">int<pos:position pos:line="17" pos:column="20"/></name></type> <name pos:line="17" pos:column="21">len1<pos:position pos:line="17" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="27">len2<pos:position pos:line="17" pos:column="31"/></name></decl>;<pos:position pos:line="17" pos:column="32"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="19" pos:column="17">memset<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><operator pos:line="19" pos:column="24">&amp;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="25">xpp<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="30">0<pos:position pos:line="19" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="33">sizeof<argument_list pos:line="19" pos:column="39">(<argument><expr><name pos:line="19" pos:column="40">xpp<pos:position pos:line="19" pos:column="43"/></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">memset<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="25">xecfg<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="32">0<pos:position pos:line="20" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="35">sizeof<argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">xecfg<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name><name pos:line="21" pos:column="21">p<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">status<pos:position pos:line="21" pos:column="30"/></name></name> <operator pos:line="21" pos:column="31">==<pos:position pos:line="21" pos:column="33"/></operator> <literal type="number" pos:line="21" pos:column="34">0<pos:position pos:line="21" pos:column="35"/></literal></expr>)<pos:position pos:line="21" pos:column="36"/></condition><then pos:line="21" pos:column="36">
			<block type="pseudo"><return pos:line="22" pos:column="25">return <expr><call><name pos:line="22" pos:column="32">error<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><literal type="string" pos:line="22" pos:column="38">"internal diff status error"<pos:position pos:line="22" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></return></block></then></if>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name><name pos:line="23" pos:column="21">p<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">status<pos:position pos:line="23" pos:column="30"/></name></name> <operator pos:line="23" pos:column="31">==<pos:position pos:line="23" pos:column="33"/></operator> <name pos:line="23" pos:column="34">DIFF_STATUS_UNKNOWN<pos:position pos:line="23" pos:column="53"/></name></expr>)<pos:position pos:line="23" pos:column="54"/></condition><then pos:line="23" pos:column="54">
			<block type="pseudo"><continue pos:line="24" pos:column="25">continue;<pos:position pos:line="24" pos:column="34"/></continue></block></then></if>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">diff_unmodified_pair<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><name pos:line="25" pos:column="42">p<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="45"/></condition><then pos:line="25" pos:column="45">
			<block type="pseudo"><continue pos:line="26" pos:column="25">continue;<pos:position pos:line="26" pos:column="34"/></continue></block></then></if>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">(<pos:position pos:line="27" pos:column="22"/></operator><call><name pos:line="27" pos:column="22">DIFF_FILE_VALID<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name><name pos:line="27" pos:column="38">p<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">-&gt;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="41">one<pos:position pos:line="27" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call> <operator pos:line="27" pos:column="46">&amp;&amp;<pos:position pos:line="27" pos:column="56"/></operator> <call><name pos:line="27" pos:column="49">S_ISDIR<pos:position pos:line="27" pos:column="56"/></name><argument_list pos:line="27" pos:column="56">(<argument><expr><name><name pos:line="27" pos:column="57">p<pos:position pos:line="27" pos:column="58"/></name><operator pos:line="27" pos:column="58">-&gt;<pos:position pos:line="27" pos:column="63"/></operator><name pos:line="27" pos:column="60">one<pos:position pos:line="27" pos:column="63"/></name><operator pos:line="27" pos:column="63">-&gt;<pos:position pos:line="27" pos:column="68"/></operator><name pos:line="27" pos:column="65">mode<pos:position pos:line="27" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call><operator pos:line="27" pos:column="70">)<pos:position pos:line="27" pos:column="71"/></operator> <operator pos:line="27" pos:column="72">||<pos:position pos:line="27" pos:column="74"/></operator>
		    <operator pos:line="28" pos:column="21">(<pos:position pos:line="28" pos:column="22"/></operator><call><name pos:line="28" pos:column="22">DIFF_FILE_VALID<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><name><name pos:line="28" pos:column="38">p<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">two<pos:position pos:line="28" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call> <operator pos:line="28" pos:column="46">&amp;&amp;<pos:position pos:line="28" pos:column="56"/></operator> <call><name pos:line="28" pos:column="49">S_ISDIR<pos:position pos:line="28" pos:column="56"/></name><argument_list pos:line="28" pos:column="56">(<argument><expr><name><name pos:line="28" pos:column="57">p<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">-&gt;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="60">two<pos:position pos:line="28" pos:column="63"/></name><operator pos:line="28" pos:column="63">-&gt;<pos:position pos:line="28" pos:column="68"/></operator><name pos:line="28" pos:column="65">mode<pos:position pos:line="28" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call><operator pos:line="28" pos:column="70">)<pos:position pos:line="28" pos:column="71"/></operator></expr>)<pos:position pos:line="28" pos:column="72"/></condition><then pos:line="28" pos:column="72">
			<block type="pseudo"><continue pos:line="29" pos:column="25">continue;<pos:position pos:line="29" pos:column="34"/></continue></block></then></if>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><call><name pos:line="30" pos:column="21">DIFF_PAIR_UNMERGED<pos:position pos:line="30" pos:column="39"/></name><argument_list pos:line="30" pos:column="39">(<argument><expr><name pos:line="30" pos:column="40">p<pos:position pos:line="30" pos:column="41"/></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="43"/></condition><then pos:line="30" pos:column="43">
			<block type="pseudo"><continue pos:line="31" pos:column="25">continue;<pos:position pos:line="31" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="33" pos:column="17">diff_fill_sha1_info<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name><name pos:line="33" pos:column="37">p<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">-&gt;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="40">one<pos:position pos:line="33" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">diff_fill_sha1_info<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><name><name pos:line="34" pos:column="37">p<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">-&gt;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="40">two<pos:position pos:line="34" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt>

		<expr_stmt><expr><name pos:line="36" pos:column="17">len1<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <call><name pos:line="36" pos:column="24">remove_space<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><name><name pos:line="36" pos:column="37">p<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">-&gt;<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="40">one<pos:position pos:line="36" pos:column="43"/></name><operator pos:line="36" pos:column="43">-&gt;<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="45">path<pos:position pos:line="36" pos:column="49"/></name></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="51">strlen<pos:position pos:line="36" pos:column="57"/></name><argument_list pos:line="36" pos:column="57">(<argument><expr><name><name pos:line="36" pos:column="58">p<pos:position pos:line="36" pos:column="59"/></name><operator pos:line="36" pos:column="59">-&gt;<pos:position pos:line="36" pos:column="64"/></operator><name pos:line="36" pos:column="61">one<pos:position pos:line="36" pos:column="64"/></name><operator pos:line="36" pos:column="64">-&gt;<pos:position pos:line="36" pos:column="69"/></operator><name pos:line="36" pos:column="66">path<pos:position pos:line="36" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><name pos:line="37" pos:column="17">len2<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <call><name pos:line="37" pos:column="24">remove_space<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><name><name pos:line="37" pos:column="37">p<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">two<pos:position pos:line="37" pos:column="43"/></name><operator pos:line="37" pos:column="43">-&gt;<pos:position pos:line="37" pos:column="48"/></operator><name pos:line="37" pos:column="45">path<pos:position pos:line="37" pos:column="49"/></name></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="51">strlen<pos:position pos:line="37" pos:column="57"/></name><argument_list pos:line="37" pos:column="57">(<argument><expr><name><name pos:line="37" pos:column="58">p<pos:position pos:line="37" pos:column="59"/></name><operator pos:line="37" pos:column="59">-&gt;<pos:position pos:line="37" pos:column="64"/></operator><name pos:line="37" pos:column="61">two<pos:position pos:line="37" pos:column="64"/></name><operator pos:line="37" pos:column="64">-&gt;<pos:position pos:line="37" pos:column="69"/></operator><name pos:line="37" pos:column="66">path<pos:position pos:line="37" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">patch_id_add_string<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><operator pos:line="38" pos:column="37">&amp;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="38">ctx<pos:position pos:line="38" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="43">"diff--git"<pos:position pos:line="38" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">patch_id_add_string<pos:position pos:line="39" pos:column="36"/></name><argument_list pos:line="39" pos:column="36">(<argument><expr><operator pos:line="39" pos:column="37">&amp;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="38">ctx<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="43">"a/"<pos:position pos:line="39" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">git_SHA1_Update<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><operator pos:line="40" pos:column="33">&amp;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="34">ctx<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="39">p<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">-&gt;<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="42">one<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">path<pos:position pos:line="40" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="53">len1<pos:position pos:line="40" pos:column="57"/></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">patch_id_add_string<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><operator pos:line="41" pos:column="37">&amp;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="38">ctx<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="43">"b/"<pos:position pos:line="41" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">git_SHA1_Update<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><operator pos:line="42" pos:column="33">&amp;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="34">ctx<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="39">p<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">-&gt;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="42">two<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">-&gt;<pos:position pos:line="42" pos:column="50"/></operator><name pos:line="42" pos:column="47">path<pos:position pos:line="42" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="53">len2<pos:position pos:line="42" pos:column="57"/></name></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>

		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name><name pos:line="44" pos:column="21">p<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">-&gt;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="24">one<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">-&gt;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="29">mode<pos:position pos:line="44" pos:column="33"/></name></name> <operator pos:line="44" pos:column="34">==<pos:position pos:line="44" pos:column="36"/></operator> <literal type="number" pos:line="44" pos:column="37">0<pos:position pos:line="44" pos:column="38"/></literal></expr>)<pos:position pos:line="44" pos:column="39"/></condition><then pos:line="44" pos:column="39"> <block pos:line="44" pos:column="40">{
			<expr_stmt><expr><call><name pos:line="45" pos:column="25">patch_id_add_string<pos:position pos:line="45" pos:column="44"/></name><argument_list pos:line="45" pos:column="44">(<argument><expr><operator pos:line="45" pos:column="45">&amp;<pos:position pos:line="45" pos:column="50"/></operator><name pos:line="45" pos:column="46">ctx<pos:position pos:line="45" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="51">"newfilemode"<pos:position pos:line="45" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">patch_id_add_mode<pos:position pos:line="46" pos:column="42"/></name><argument_list pos:line="46" pos:column="42">(<argument><expr><operator pos:line="46" pos:column="43">&amp;<pos:position pos:line="46" pos:column="48"/></operator><name pos:line="46" pos:column="44">ctx<pos:position pos:line="46" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="49">p<pos:position pos:line="46" pos:column="50"/></name><operator pos:line="46" pos:column="50">-&gt;<pos:position pos:line="46" pos:column="55"/></operator><name pos:line="46" pos:column="52">two<pos:position pos:line="46" pos:column="55"/></name><operator pos:line="46" pos:column="55">-&gt;<pos:position pos:line="46" pos:column="60"/></operator><name pos:line="46" pos:column="57">mode<pos:position pos:line="46" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">patch_id_add_string<pos:position pos:line="47" pos:column="44"/></name><argument_list pos:line="47" pos:column="44">(<argument><expr><operator pos:line="47" pos:column="45">&amp;<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="46">ctx<pos:position pos:line="47" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="51">"---/dev/null"<pos:position pos:line="47" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">patch_id_add_string<pos:position pos:line="48" pos:column="44"/></name><argument_list pos:line="48" pos:column="44">(<argument><expr><operator pos:line="48" pos:column="45">&amp;<pos:position pos:line="48" pos:column="50"/></operator><name pos:line="48" pos:column="46">ctx<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="51">"+++b/"<pos:position pos:line="48" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="49" pos:column="25">git_SHA1_Update<pos:position pos:line="49" pos:column="40"/></name><argument_list pos:line="49" pos:column="40">(<argument><expr><operator pos:line="49" pos:column="41">&amp;<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="42">ctx<pos:position pos:line="49" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="47">p<pos:position pos:line="49" pos:column="48"/></name><operator pos:line="49" pos:column="48">-&gt;<pos:position pos:line="49" pos:column="53"/></operator><name pos:line="49" pos:column="50">two<pos:position pos:line="49" pos:column="53"/></name><operator pos:line="49" pos:column="53">-&gt;<pos:position pos:line="49" pos:column="58"/></operator><name pos:line="49" pos:column="55">path<pos:position pos:line="49" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="61">len2<pos:position pos:line="49" pos:column="65"/></name></expr></argument>)<pos:position pos:line="49" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="50" pos:column="18"/></block></then> <elseif pos:line="50" pos:column="19">else <if pos:line="50" pos:column="24">if <condition pos:line="50" pos:column="27">(<expr><name><name pos:line="50" pos:column="28">p<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">two<pos:position pos:line="50" pos:column="34"/></name><operator pos:line="50" pos:column="34">-&gt;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="36">mode<pos:position pos:line="50" pos:column="40"/></name></name> <operator pos:line="50" pos:column="41">==<pos:position pos:line="50" pos:column="43"/></operator> <literal type="number" pos:line="50" pos:column="44">0<pos:position pos:line="50" pos:column="45"/></literal></expr>)<pos:position pos:line="50" pos:column="46"/></condition><then pos:line="50" pos:column="46"> <block pos:line="50" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="51" pos:column="25">patch_id_add_string<pos:position pos:line="51" pos:column="44"/></name><argument_list pos:line="51" pos:column="44">(<argument><expr><operator pos:line="51" pos:column="45">&amp;<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="46">ctx<pos:position pos:line="51" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="51">"deletedfilemode"<pos:position pos:line="51" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="52" pos:column="25">patch_id_add_mode<pos:position pos:line="52" pos:column="42"/></name><argument_list pos:line="52" pos:column="42">(<argument><expr><operator pos:line="52" pos:column="43">&amp;<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="44">ctx<pos:position pos:line="52" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="49">p<pos:position pos:line="52" pos:column="50"/></name><operator pos:line="52" pos:column="50">-&gt;<pos:position pos:line="52" pos:column="55"/></operator><name pos:line="52" pos:column="52">one<pos:position pos:line="52" pos:column="55"/></name><operator pos:line="52" pos:column="55">-&gt;<pos:position pos:line="52" pos:column="60"/></operator><name pos:line="52" pos:column="57">mode<pos:position pos:line="52" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">patch_id_add_string<pos:position pos:line="53" pos:column="44"/></name><argument_list pos:line="53" pos:column="44">(<argument><expr><operator pos:line="53" pos:column="45">&amp;<pos:position pos:line="53" pos:column="50"/></operator><name pos:line="53" pos:column="46">ctx<pos:position pos:line="53" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="51">"---a/"<pos:position pos:line="53" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="54" pos:column="25">git_SHA1_Update<pos:position pos:line="54" pos:column="40"/></name><argument_list pos:line="54" pos:column="40">(<argument><expr><operator pos:line="54" pos:column="41">&amp;<pos:position pos:line="54" pos:column="46"/></operator><name pos:line="54" pos:column="42">ctx<pos:position pos:line="54" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="47">p<pos:position pos:line="54" pos:column="48"/></name><operator pos:line="54" pos:column="48">-&gt;<pos:position pos:line="54" pos:column="53"/></operator><name pos:line="54" pos:column="50">one<pos:position pos:line="54" pos:column="53"/></name><operator pos:line="54" pos:column="53">-&gt;<pos:position pos:line="54" pos:column="58"/></operator><name pos:line="54" pos:column="55">path<pos:position pos:line="54" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="61">len1<pos:position pos:line="54" pos:column="65"/></name></expr></argument>)<pos:position pos:line="54" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="55" pos:column="25">patch_id_add_string<pos:position pos:line="55" pos:column="44"/></name><argument_list pos:line="55" pos:column="44">(<argument><expr><operator pos:line="55" pos:column="45">&amp;<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="46">ctx<pos:position pos:line="55" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="51">"+++/dev/null"<pos:position pos:line="55" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if></elseif> <else pos:line="56" pos:column="19">else <block pos:line="56" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">patch_id_add_string<pos:position pos:line="57" pos:column="44"/></name><argument_list pos:line="57" pos:column="44">(<argument><expr><operator pos:line="57" pos:column="45">&amp;<pos:position pos:line="57" pos:column="50"/></operator><name pos:line="57" pos:column="46">ctx<pos:position pos:line="57" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="51">"---a/"<pos:position pos:line="57" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">git_SHA1_Update<pos:position pos:line="58" pos:column="40"/></name><argument_list pos:line="58" pos:column="40">(<argument><expr><operator pos:line="58" pos:column="41">&amp;<pos:position pos:line="58" pos:column="46"/></operator><name pos:line="58" pos:column="42">ctx<pos:position pos:line="58" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="47">p<pos:position pos:line="58" pos:column="48"/></name><operator pos:line="58" pos:column="48">-&gt;<pos:position pos:line="58" pos:column="53"/></operator><name pos:line="58" pos:column="50">one<pos:position pos:line="58" pos:column="53"/></name><operator pos:line="58" pos:column="53">-&gt;<pos:position pos:line="58" pos:column="58"/></operator><name pos:line="58" pos:column="55">path<pos:position pos:line="58" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="61">len1<pos:position pos:line="58" pos:column="65"/></name></expr></argument>)<pos:position pos:line="58" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">patch_id_add_string<pos:position pos:line="59" pos:column="44"/></name><argument_list pos:line="59" pos:column="44">(<argument><expr><operator pos:line="59" pos:column="45">&amp;<pos:position pos:line="59" pos:column="50"/></operator><name pos:line="59" pos:column="46">ctx<pos:position pos:line="59" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="51">"+++b/"<pos:position pos:line="59" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="60" pos:column="25">git_SHA1_Update<pos:position pos:line="60" pos:column="40"/></name><argument_list pos:line="60" pos:column="40">(<argument><expr><operator pos:line="60" pos:column="41">&amp;<pos:position pos:line="60" pos:column="46"/></operator><name pos:line="60" pos:column="42">ctx<pos:position pos:line="60" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="47">p<pos:position pos:line="60" pos:column="48"/></name><operator pos:line="60" pos:column="48">-&gt;<pos:position pos:line="60" pos:column="53"/></operator><name pos:line="60" pos:column="50">two<pos:position pos:line="60" pos:column="53"/></name><operator pos:line="60" pos:column="53">-&gt;<pos:position pos:line="60" pos:column="58"/></operator><name pos:line="60" pos:column="55">path<pos:position pos:line="60" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="61">len2<pos:position pos:line="60" pos:column="65"/></name></expr></argument>)<pos:position pos:line="60" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="61" pos:column="18"/></block></else></if>

		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><name pos:line="63" pos:column="21">diff_header_only<pos:position pos:line="63" pos:column="37"/></name></expr>)<pos:position pos:line="63" pos:column="38"/></condition><then pos:line="63" pos:column="38">
			<block type="pseudo"><continue pos:line="64" pos:column="25">continue;<pos:position pos:line="64" pos:column="34"/></continue></block></then></if>

		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><call><name pos:line="66" pos:column="21">fill_mmfile<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">(<argument><expr><operator pos:line="66" pos:column="33">&amp;<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="34">mf1<pos:position pos:line="66" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="39">p<pos:position pos:line="66" pos:column="40"/></name><operator pos:line="66" pos:column="40">-&gt;<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="42">one<pos:position pos:line="66" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="46"/></argument_list></call> <operator pos:line="66" pos:column="47">&lt;<pos:position pos:line="66" pos:column="51"/></operator> <literal type="number" pos:line="66" pos:column="49">0<pos:position pos:line="66" pos:column="50"/></literal> <operator pos:line="66" pos:column="51">||<pos:position pos:line="66" pos:column="53"/></operator>
		    <call><name pos:line="67" pos:column="21">fill_mmfile<pos:position pos:line="67" pos:column="32"/></name><argument_list pos:line="67" pos:column="32">(<argument><expr><operator pos:line="67" pos:column="33">&amp;<pos:position pos:line="67" pos:column="38"/></operator><name pos:line="67" pos:column="34">mf2<pos:position pos:line="67" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="39">p<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">-&gt;<pos:position pos:line="67" pos:column="45"/></operator><name pos:line="67" pos:column="42">two<pos:position pos:line="67" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="46"/></argument_list></call> <operator pos:line="67" pos:column="47">&lt;<pos:position pos:line="67" pos:column="51"/></operator> <literal type="number" pos:line="67" pos:column="49">0<pos:position pos:line="67" pos:column="50"/></literal></expr>)<pos:position pos:line="67" pos:column="51"/></condition><then pos:line="67" pos:column="51">
			<block type="pseudo"><return pos:line="68" pos:column="25">return <expr><call><name pos:line="68" pos:column="32">error<pos:position pos:line="68" pos:column="37"/></name><argument_list pos:line="68" pos:column="37">(<argument><expr><literal type="string" pos:line="68" pos:column="38">"unable to read files to diff"<pos:position pos:line="68" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="70"/></return></block></then></if>

		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><call><name pos:line="70" pos:column="21">diff_filespec_is_binary<pos:position pos:line="70" pos:column="44"/></name><argument_list pos:line="70" pos:column="44">(<argument><expr><name><name pos:line="70" pos:column="45">p<pos:position pos:line="70" pos:column="46"/></name><operator pos:line="70" pos:column="46">-&gt;<pos:position pos:line="70" pos:column="51"/></operator><name pos:line="70" pos:column="48">one<pos:position pos:line="70" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="52"/></argument_list></call> <operator pos:line="70" pos:column="53">||<pos:position pos:line="70" pos:column="55"/></operator>
		    <call><name pos:line="71" pos:column="21">diff_filespec_is_binary<pos:position pos:line="71" pos:column="44"/></name><argument_list pos:line="71" pos:column="44">(<argument><expr><name><name pos:line="71" pos:column="45">p<pos:position pos:line="71" pos:column="46"/></name><operator pos:line="71" pos:column="46">-&gt;<pos:position pos:line="71" pos:column="51"/></operator><name pos:line="71" pos:column="48">two<pos:position pos:line="71" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="53"/></condition><then pos:line="71" pos:column="53"> <block pos:line="71" pos:column="54">{
			<expr_stmt><expr><call><name pos:line="72" pos:column="25">git_SHA1_Update<pos:position pos:line="72" pos:column="40"/></name><argument_list pos:line="72" pos:column="40">(<argument><expr><operator pos:line="72" pos:column="41">&amp;<pos:position pos:line="72" pos:column="46"/></operator><name pos:line="72" pos:column="42">ctx<pos:position pos:line="72" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="72" pos:column="47">oid_to_hex<pos:position pos:line="72" pos:column="57"/></name><argument_list pos:line="72" pos:column="57">(<argument><expr><operator pos:line="72" pos:column="58">&amp;<pos:position pos:line="72" pos:column="63"/></operator><name><name pos:line="72" pos:column="59">p<pos:position pos:line="72" pos:column="60"/></name><operator pos:line="72" pos:column="60">-&gt;<pos:position pos:line="72" pos:column="65"/></operator><name pos:line="72" pos:column="62">one<pos:position pos:line="72" pos:column="65"/></name><operator pos:line="72" pos:column="65">-&gt;<pos:position pos:line="72" pos:column="70"/></operator><name pos:line="72" pos:column="67">oid<pos:position pos:line="72" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="71"/></argument_list></call></expr></argument>,
					<argument><expr><literal type="number" pos:line="73" pos:column="41">40<pos:position pos:line="73" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="74" pos:column="25">git_SHA1_Update<pos:position pos:line="74" pos:column="40"/></name><argument_list pos:line="74" pos:column="40">(<argument><expr><operator pos:line="74" pos:column="41">&amp;<pos:position pos:line="74" pos:column="46"/></operator><name pos:line="74" pos:column="42">ctx<pos:position pos:line="74" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="47">oid_to_hex<pos:position pos:line="74" pos:column="57"/></name><argument_list pos:line="74" pos:column="57">(<argument><expr><operator pos:line="74" pos:column="58">&amp;<pos:position pos:line="74" pos:column="63"/></operator><name><name pos:line="74" pos:column="59">p<pos:position pos:line="74" pos:column="60"/></name><operator pos:line="74" pos:column="60">-&gt;<pos:position pos:line="74" pos:column="65"/></operator><name pos:line="74" pos:column="62">two<pos:position pos:line="74" pos:column="65"/></name><operator pos:line="74" pos:column="65">-&gt;<pos:position pos:line="74" pos:column="70"/></operator><name pos:line="74" pos:column="67">oid<pos:position pos:line="74" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="71"/></argument_list></call></expr></argument>,
					<argument><expr><literal type="number" pos:line="75" pos:column="41">40<pos:position pos:line="75" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="45"/></expr_stmt>
			<continue pos:line="76" pos:column="25">continue;<pos:position pos:line="76" pos:column="34"/></continue>
		}<pos:position pos:line="77" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="79" pos:column="17">xpp<pos:position pos:line="79" pos:column="20"/></name><operator pos:line="79" pos:column="20">.<pos:position pos:line="79" pos:column="21"/></operator><name pos:line="79" pos:column="21">flags<pos:position pos:line="79" pos:column="26"/></name></name> <operator pos:line="79" pos:column="27">=<pos:position pos:line="79" pos:column="28"/></operator> <literal type="number" pos:line="79" pos:column="29">0<pos:position pos:line="79" pos:column="30"/></literal></expr>;<pos:position pos:line="79" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="80" pos:column="17">xecfg<pos:position pos:line="80" pos:column="22"/></name><operator pos:line="80" pos:column="22">.<pos:position pos:line="80" pos:column="23"/></operator><name pos:line="80" pos:column="23">ctxlen<pos:position pos:line="80" pos:column="29"/></name></name> <operator pos:line="80" pos:column="30">=<pos:position pos:line="80" pos:column="31"/></operator> <literal type="number" pos:line="80" pos:column="32">3<pos:position pos:line="80" pos:column="33"/></literal></expr>;<pos:position pos:line="80" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="81" pos:column="17">xecfg<pos:position pos:line="81" pos:column="22"/></name><operator pos:line="81" pos:column="22">.<pos:position pos:line="81" pos:column="23"/></operator><name pos:line="81" pos:column="23">flags<pos:position pos:line="81" pos:column="28"/></name></name> <operator pos:line="81" pos:column="29">=<pos:position pos:line="81" pos:column="30"/></operator> <literal type="number" pos:line="81" pos:column="31">0<pos:position pos:line="81" pos:column="32"/></literal></expr>;<pos:position pos:line="81" pos:column="33"/></expr_stmt>
		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><call><name pos:line="82" pos:column="21">xdi_diff_outf<pos:position pos:line="82" pos:column="34"/></name><argument_list pos:line="82" pos:column="34">(<argument><expr><operator pos:line="82" pos:column="35">&amp;<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="36">mf1<pos:position pos:line="82" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="41">&amp;<pos:position pos:line="82" pos:column="46"/></operator><name pos:line="82" pos:column="42">mf2<pos:position pos:line="82" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="47">patch_id_consume<pos:position pos:line="82" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="65">&amp;<pos:position pos:line="82" pos:column="70"/></operator><name pos:line="82" pos:column="66">data<pos:position pos:line="82" pos:column="70"/></name></expr></argument>,
				  <argument><expr><operator pos:line="83" pos:column="35">&amp;<pos:position pos:line="83" pos:column="40"/></operator><name pos:line="83" pos:column="36">xpp<pos:position pos:line="83" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="41">&amp;<pos:position pos:line="83" pos:column="46"/></operator><name pos:line="83" pos:column="42">xecfg<pos:position pos:line="83" pos:column="47"/></name></expr></argument>)<pos:position pos:line="83" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="49"/></condition><then pos:line="83" pos:column="49">
			<block type="pseudo"><return pos:line="84" pos:column="25">return <expr><call><name pos:line="84" pos:column="32">error<pos:position pos:line="84" pos:column="37"/></name><argument_list pos:line="84" pos:column="37">(<argument><expr><literal type="string" pos:line="84" pos:column="38">"unable to generate patch-id diff for %s"<pos:position pos:line="84" pos:column="79"/></literal></expr></argument>,
				     <argument><expr><name><name pos:line="85" pos:column="38">p<pos:position pos:line="85" pos:column="39"/></name><operator pos:line="85" pos:column="39">-&gt;<pos:position pos:line="85" pos:column="44"/></operator><name pos:line="85" pos:column="41">one<pos:position pos:line="85" pos:column="44"/></name><operator pos:line="85" pos:column="44">-&gt;<pos:position pos:line="85" pos:column="49"/></operator><name pos:line="85" pos:column="46">path<pos:position pos:line="85" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="52"/></return></block></then></if>
	}<pos:position pos:line="86" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="88" pos:column="9">git_SHA1_Final<pos:position pos:line="88" pos:column="23"/></name><argument_list pos:line="88" pos:column="23">(<argument><expr><name pos:line="88" pos:column="24">sha1<pos:position pos:line="88" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="30">&amp;<pos:position pos:line="88" pos:column="35"/></operator><name pos:line="88" pos:column="31">ctx<pos:position pos:line="88" pos:column="34"/></name></expr></argument>)<pos:position pos:line="88" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="36"/></expr_stmt>
	<return pos:line="89" pos:column="9">return <expr><literal type="number" pos:line="89" pos:column="16">0<pos:position pos:line="89" pos:column="17"/></literal></expr>;<pos:position pos:line="89" pos:column="18"/></return>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

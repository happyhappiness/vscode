<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2220_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">unsigned<pos:position pos:line="1" pos:column="9"/></name> <name pos:line="1" pos:column="10">long<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">approximate_object_count<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">unsigned<pos:position pos:line="3" pos:column="24"/></name> <name pos:line="3" pos:column="25">long<pos:position pos:line="3" pos:column="29"/></name></type> <name pos:line="3" pos:column="30">count<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">approximate_object_count_valid<pos:position pos:line="4" pos:column="44"/></name></expr>)<pos:position pos:line="4" pos:column="45"/></condition><then pos:line="4" pos:column="45"> <block pos:line="4" pos:column="46">{
		<decl_stmt><decl><type><name><name pos:line="5" pos:column="17">struct<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">packed_git<pos:position pos:line="5" pos:column="34"/></name></name> <modifier pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></modifier></type><name pos:line="5" pos:column="36">p<pos:position pos:line="5" pos:column="37"/></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="7" pos:column="17">prepare_packed_git<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">()<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="8" pos:column="17">count<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
		<for pos:line="9" pos:column="17">for <control pos:line="9" pos:column="21">(<init><expr><name pos:line="9" pos:column="22">p<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">packed_git<pos:position pos:line="9" pos:column="36"/></name></expr>;<pos:position pos:line="9" pos:column="37"/></init> <condition><expr><name pos:line="9" pos:column="38">p<pos:position pos:line="9" pos:column="39"/></name></expr>;<pos:position pos:line="9" pos:column="40"/></condition> <incr><expr><name pos:line="9" pos:column="41">p<pos:position pos:line="9" pos:column="42"/></name> <operator pos:line="9" pos:column="43">=<pos:position pos:line="9" pos:column="44"/></operator> <name><name pos:line="9" pos:column="45">p<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">-&gt;<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="48">next<pos:position pos:line="9" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="9" pos:column="53"/></control> <block pos:line="9" pos:column="54">{
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><call><name pos:line="10" pos:column="29">open_pack_index<pos:position pos:line="10" pos:column="44"/></name><argument_list pos:line="10" pos:column="44">(<argument><expr><name pos:line="10" pos:column="45">p<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48">
				<block type="pseudo"><continue pos:line="11" pos:column="33">continue;<pos:position pos:line="11" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="12" pos:column="25">count<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">+=<pos:position pos:line="12" pos:column="33"/></operator> <name><name pos:line="12" pos:column="34">p<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">num_objects<pos:position pos:line="12" pos:column="48"/></name></name></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="13" pos:column="18"/></block></for>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">count<pos:position pos:line="15" pos:column="21"/></name></expr>;<pos:position pos:line="15" pos:column="22"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

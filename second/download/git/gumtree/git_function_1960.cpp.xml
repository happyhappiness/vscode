<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1960.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">is_git_directory<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">suspect<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">path<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><name pos:line="3" pos:column="19">PATH_MAX<pos:position pos:line="3" pos:column="27"/></name></expr>]<pos:position pos:line="3" pos:column="28"/></index></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">len<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><call><name pos:line="4" pos:column="22">strlen<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><name pos:line="4" pos:column="29">suspect<pos:position pos:line="4" pos:column="36"/></name></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">PATH_MAX<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">&lt;=<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="25">len<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">+<pos:position pos:line="6" pos:column="30"/></operator> <call><name pos:line="6" pos:column="31">strlen<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><literal type="string" pos:line="6" pos:column="38">"/objects"<pos:position pos:line="6" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="50"/></condition><then pos:line="6" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">die<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><literal type="string" pos:line="7" pos:column="21">"Too long path: %.*s"<pos:position pos:line="7" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="44">60<pos:position pos:line="7" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="48">suspect<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="57"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">strcpy<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">path<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="22">suspect<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">getenv<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">DB_ENVIRONMENT<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36"> <block pos:line="9" pos:column="37">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><call><name pos:line="10" pos:column="21">access<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><call><name pos:line="10" pos:column="28">getenv<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">DB_ENVIRONMENT<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">X_OK<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="58"/></condition><then pos:line="10" pos:column="58">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr>;<pos:position pos:line="11" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="12" pos:column="10"/></block></then>
	<else pos:line="13" pos:column="9">else <block pos:line="13" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">strcpy<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">path<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">+<pos:position pos:line="14" pos:column="30"/></operator> <name pos:line="14" pos:column="31">len<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="36">"/objects"<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><call><name pos:line="15" pos:column="21">access<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">path<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">X_OK<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40">
			<block type="pseudo"><return pos:line="16" pos:column="25">return <expr><literal type="number" pos:line="16" pos:column="32">0<pos:position pos:line="16" pos:column="33"/></literal></expr>;<pos:position pos:line="16" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="17" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">strcpy<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">path<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">+<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">len<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="28">"/refs"<pos:position pos:line="19" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">access<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">path<pos:position pos:line="20" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="26">X_OK<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32">
		<block type="pseudo"><return pos:line="21" pos:column="17">return <expr><literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">strcpy<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">path<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">+<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">len<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="28">"/HEAD"<pos:position pos:line="23" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">validate_headref<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">path<pos:position pos:line="24" pos:column="34"/></name></expr></argument>)<pos:position pos:line="24" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="36"/></condition><then pos:line="24" pos:column="36">
		<block type="pseudo"><return pos:line="25" pos:column="17">return <expr><literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></return></block></then></if>

	<return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">1<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

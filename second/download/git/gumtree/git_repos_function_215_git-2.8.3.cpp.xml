<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_215_git-2.8.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">combine_diff_path<pos:position pos:line="1" pos:column="32"/></name></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">find_paths_multitree<pos:position pos:line="1" pos:column="54"/></name><parameter_list pos:line="1" pos:column="54">(
	<parameter><decl><type><specifier pos:line="2" pos:column="9">const<pos:position pos:line="2" pos:column="14"/></specifier> <name pos:line="2" pos:column="15">unsigned<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">sha1<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name><name pos:line="2" pos:column="42">struct<pos:position pos:line="2" pos:column="48"/></name> <name pos:line="2" pos:column="49">sha1_array<pos:position pos:line="2" pos:column="59"/></name></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">parents<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">diff_options<pos:position pos:line="3" pos:column="28"/></name></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">opt<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="34"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">nparent<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><name><name pos:line="5" pos:column="26">parents<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">nr<pos:position pos:line="5" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">unsigned<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">char<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier><modifier pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></modifier></type><name pos:line="6" pos:column="31">parents_sha1<pos:position pos:line="6" pos:column="43"/></name></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">combine_diff_path<pos:position pos:line="7" pos:column="33"/></name></name></type> <name pos:line="7" pos:column="34">paths_head<pos:position pos:line="7" pos:column="44"/></name></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">base<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">ALLOC_ARRAY<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">parents_sha1<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">nparent<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="25">nparent<pos:position pos:line="11" pos:column="32"/></name></expr>;<pos:position pos:line="11" pos:column="33"/></condition> <incr><expr><name pos:line="11" pos:column="34">i<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">++<pos:position pos:line="11" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="38"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="17">parents_sha1<pos:position pos:line="12" pos:column="29"/></name><index pos:line="12" pos:column="29">[<expr><name pos:line="12" pos:column="30">i<pos:position pos:line="12" pos:column="31"/></name></expr>]<pos:position pos:line="12" pos:column="32"/></index></name> <operator pos:line="12" pos:column="33">=<pos:position pos:line="12" pos:column="34"/></operator> <name><name pos:line="12" pos:column="35">parents<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">sha1<pos:position pos:line="12" pos:column="48"/></name><index pos:line="12" pos:column="48">[<expr><name pos:line="12" pos:column="49">i<pos:position pos:line="12" pos:column="50"/></name></expr>]<pos:position pos:line="12" pos:column="51"/></index></name></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt></block></for>

	<comment type="block" pos:line="14" pos:column="9">/* fake list head, so worker can assume it is non-NULL */</comment>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">paths_head<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">.<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">next<pos:position pos:line="15" pos:column="24"/></name></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <name pos:line="15" pos:column="27">NULL<pos:position pos:line="15" pos:column="31"/></name></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">strbuf_init<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><operator pos:line="17" pos:column="21">&amp;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="22">base<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="28">PATH_MAX<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">diff_tree_paths<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><operator pos:line="18" pos:column="25">&amp;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="26">paths_head<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">sha1<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">parents_sha1<pos:position pos:line="18" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="58">nparent<pos:position pos:line="18" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="67">&amp;<pos:position pos:line="18" pos:column="72"/></operator><name pos:line="18" pos:column="68">base<pos:position pos:line="18" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="74">opt<pos:position pos:line="18" pos:column="77"/></name></expr></argument>)<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="79"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">strbuf_release<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="25">base<pos:position pos:line="20" pos:column="29"/></name></expr></argument>)<pos:position pos:line="20" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">free<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><name pos:line="21" pos:column="14">parents_sha1<pos:position pos:line="21" pos:column="26"/></name></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
	<return pos:line="22" pos:column="9">return <expr><name><name pos:line="22" pos:column="16">paths_head<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">.<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">next<pos:position pos:line="22" pos:column="31"/></name></name></expr>;<pos:position pos:line="22" pos:column="32"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

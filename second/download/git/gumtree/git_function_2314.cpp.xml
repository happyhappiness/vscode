<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2314.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">print_ref_list<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">kinds<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">detached<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">verbose<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">abbrev<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="77">struct<pos:position pos:line="1" pos:column="83"/></name> <name pos:line="1" pos:column="84">commit_list<pos:position pos:line="1" pos:column="95"/></name></name> <modifier pos:line="1" pos:column="96">*<pos:position pos:line="1" pos:column="97"/></modifier></type><name pos:line="1" pos:column="97">with_commit<pos:position pos:line="1" pos:column="108"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="110">const<pos:position pos:line="1" pos:column="115"/></specifier> <name pos:line="1" pos:column="116">char<pos:position pos:line="1" pos:column="120"/></name> <modifier pos:line="1" pos:column="121">*<pos:position pos:line="1" pos:column="122"/></modifier><modifier pos:line="1" pos:column="122">*<pos:position pos:line="1" pos:column="123"/></modifier></type><name pos:line="1" pos:column="123">pattern<pos:position pos:line="1" pos:column="130"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="131"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">append_ref_cb<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">cb<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ref_list<pos:position pos:line="5" pos:column="24"/></name></name></type> <name pos:line="5" pos:column="25">ref_list<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">memset<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><operator pos:line="7" pos:column="16">&amp;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="17">ref_list<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="27">0<pos:position pos:line="7" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="30">sizeof<argument_list pos:line="7" pos:column="36">(<argument><expr><name pos:line="7" pos:column="37">ref_list<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">ref_list<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">kinds<pos:position pos:line="8" pos:column="23"/></name></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="26">kinds<pos:position pos:line="8" pos:column="31"/></name></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">ref_list<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">.<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">verbose<pos:position pos:line="9" pos:column="25"/></name></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">verbose<pos:position pos:line="9" pos:column="35"/></name></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">ref_list<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">.<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">abbrev<pos:position pos:line="10" pos:column="24"/></name></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="27">abbrev<pos:position pos:line="10" pos:column="33"/></name></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">ref_list<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">.<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">with_commit<pos:position pos:line="11" pos:column="29"/></name></name> <operator pos:line="11" pos:column="30">=<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="32">with_commit<pos:position pos:line="11" pos:column="43"/></name></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">merge_filter<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">!=<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">NO_FILTER<pos:position pos:line="12" pos:column="38"/></name></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">init_revisions<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><operator pos:line="13" pos:column="32">&amp;<pos:position pos:line="13" pos:column="37"/></operator><name><name pos:line="13" pos:column="33">ref_list<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">.<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">revs<pos:position pos:line="13" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">NULL<pos:position pos:line="13" pos:column="52"/></name></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">cb<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">.<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">ref_list<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <operator pos:line="14" pos:column="23">&amp;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="24">ref_list<pos:position pos:line="14" pos:column="32"/></name></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">cb<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">.<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">pattern<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="22">pattern<pos:position pos:line="15" pos:column="29"/></name></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">cb<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">.<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">ret<pos:position pos:line="16" pos:column="15"/></name></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">for_each_rawref<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">append_ref<pos:position pos:line="17" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="37">&amp;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="38">cb<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">merge_filter<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">!=<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">NO_FILTER<pos:position pos:line="18" pos:column="38"/></name></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39"> <block pos:line="18" pos:column="40">{
		<decl_stmt><decl><type><name><name pos:line="19" pos:column="17">struct<pos:position pos:line="19" pos:column="23"/></name> <name pos:line="19" pos:column="24">commit<pos:position pos:line="19" pos:column="30"/></name></name> <modifier pos:line="19" pos:column="31">*<pos:position pos:line="19" pos:column="32"/></modifier></type><name pos:line="19" pos:column="32">filter<pos:position pos:line="19" pos:column="38"/></name></decl>;<pos:position pos:line="19" pos:column="39"/></decl_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">filter<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <call><name pos:line="20" pos:column="26">lookup_commit_reference_gently<pos:position pos:line="20" pos:column="56"/></name><argument_list pos:line="20" pos:column="56">(<argument><expr><name pos:line="20" pos:column="57">merge_filter_ref<pos:position pos:line="20" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="75">0<pos:position pos:line="20" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="78"/></expr_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">!<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">filter<pos:position pos:line="21" pos:column="28"/></name></expr>)<pos:position pos:line="21" pos:column="29"/></condition><then pos:line="21" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="25">die<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><call><name pos:line="22" pos:column="29">_<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><literal type="string" pos:line="22" pos:column="31">"object '%s' does not point to a commit"<pos:position pos:line="22" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr></argument>,
			    <argument><expr><call><name pos:line="23" pos:column="29">sha1_to_hex<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">merge_filter_ref<pos:position pos:line="23" pos:column="57"/></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name><name pos:line="25" pos:column="17">filter<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">object<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">.<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="32">flags<pos:position pos:line="25" pos:column="37"/></name></name> <operator pos:line="25" pos:column="38">|=<pos:position pos:line="25" pos:column="40"/></operator> <name pos:line="25" pos:column="41">UNINTERESTING<pos:position pos:line="25" pos:column="54"/></name></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">add_pending_object<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><operator pos:line="26" pos:column="36">&amp;<pos:position pos:line="26" pos:column="41"/></operator><name><name pos:line="26" pos:column="37">ref_list<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">.<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="46">revs<pos:position pos:line="26" pos:column="50"/></name></name></expr></argument>,
				   <argument><expr><operator pos:line="27" pos:column="36">(<pos:position pos:line="27" pos:column="37"/></operator>struct <name pos:line="27" pos:column="44">object<pos:position pos:line="27" pos:column="50"/></name> <operator pos:line="27" pos:column="51">*<pos:position pos:line="27" pos:column="52"/></operator><operator pos:line="27" pos:column="52">)<pos:position pos:line="27" pos:column="53"/></operator> <name pos:line="27" pos:column="54">filter<pos:position pos:line="27" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="62">""<pos:position pos:line="27" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">ref_list<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">.<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">revs<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">.<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="31">limited<pos:position pos:line="28" pos:column="38"/></name></name> <operator pos:line="28" pos:column="39">=<pos:position pos:line="28" pos:column="40"/></operator> <literal type="number" pos:line="28" pos:column="41">1<pos:position pos:line="28" pos:column="42"/></literal></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>

		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><call><name pos:line="30" pos:column="21">prepare_revision_walk<pos:position pos:line="30" pos:column="42"/></name><argument_list pos:line="30" pos:column="42">(<argument><expr><operator pos:line="30" pos:column="43">&amp;<pos:position pos:line="30" pos:column="48"/></operator><name><name pos:line="30" pos:column="44">ref_list<pos:position pos:line="30" pos:column="52"/></name><operator pos:line="30" pos:column="52">.<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="53">revs<pos:position pos:line="30" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="59"/></condition><then pos:line="30" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="25">die<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><call><name pos:line="31" pos:column="29">_<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><literal type="string" pos:line="31" pos:column="31">"revision walk setup failed"<pos:position pos:line="31" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt></block></then></if>

		<for pos:line="33" pos:column="17">for <control pos:line="33" pos:column="21">(<init><expr><name pos:line="33" pos:column="22">i<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <literal type="number" pos:line="33" pos:column="26">0<pos:position pos:line="33" pos:column="27"/></literal></expr>;<pos:position pos:line="33" pos:column="28"/></init> <condition><expr><name pos:line="33" pos:column="29">i<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">&lt;<pos:position pos:line="33" pos:column="35"/></operator> <name><name pos:line="33" pos:column="33">ref_list<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">.<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="42">index<pos:position pos:line="33" pos:column="47"/></name></name></expr>;<pos:position pos:line="33" pos:column="48"/></condition> <incr><expr><name pos:line="33" pos:column="49">i<pos:position pos:line="33" pos:column="50"/></name><operator pos:line="33" pos:column="50">++<pos:position pos:line="33" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="53"/></control> <block pos:line="33" pos:column="54">{
			<decl_stmt><decl><type><name><name pos:line="34" pos:column="25">struct<pos:position pos:line="34" pos:column="31"/></name> <name pos:line="34" pos:column="32">ref_item<pos:position pos:line="34" pos:column="40"/></name></name> <modifier pos:line="34" pos:column="41">*<pos:position pos:line="34" pos:column="42"/></modifier></type><name pos:line="34" pos:column="42">item<pos:position pos:line="34" pos:column="46"/></name> <init pos:line="34" pos:column="47">= <expr><operator pos:line="34" pos:column="49">&amp;<pos:position pos:line="34" pos:column="54"/></operator><name><name pos:line="34" pos:column="50">ref_list<pos:position pos:line="34" pos:column="58"/></name><operator pos:line="34" pos:column="58">.<pos:position pos:line="34" pos:column="59"/></operator><name pos:line="34" pos:column="59">list<pos:position pos:line="34" pos:column="63"/></name><index pos:line="34" pos:column="63">[<expr><name pos:line="34" pos:column="64">i<pos:position pos:line="34" pos:column="65"/></name></expr>]<pos:position pos:line="34" pos:column="66"/></index></name></expr></init></decl>;<pos:position pos:line="34" pos:column="67"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="35" pos:column="25">struct<pos:position pos:line="35" pos:column="31"/></name> <name pos:line="35" pos:column="32">commit<pos:position pos:line="35" pos:column="38"/></name></name> <modifier pos:line="35" pos:column="39">*<pos:position pos:line="35" pos:column="40"/></modifier></type><name pos:line="35" pos:column="40">commit<pos:position pos:line="35" pos:column="46"/></name> <init pos:line="35" pos:column="47">= <expr><name><name pos:line="35" pos:column="49">item<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">-&gt;<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="55">commit<pos:position pos:line="35" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="35" pos:column="62"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="36" pos:column="25">int<pos:position pos:line="36" pos:column="28"/></name></type> <name pos:line="36" pos:column="29">is_merged<pos:position pos:line="36" pos:column="38"/></name> <init pos:line="36" pos:column="39">= <expr><operator pos:line="36" pos:column="41">!<pos:position pos:line="36" pos:column="42"/></operator><operator pos:line="36" pos:column="42">!<pos:position pos:line="36" pos:column="43"/></operator><operator pos:line="36" pos:column="43">(<pos:position pos:line="36" pos:column="44"/></operator><name><name pos:line="36" pos:column="44">commit<pos:position pos:line="36" pos:column="50"/></name><operator pos:line="36" pos:column="50">-&gt;<pos:position pos:line="36" pos:column="55"/></operator><name pos:line="36" pos:column="52">object<pos:position pos:line="36" pos:column="58"/></name><operator pos:line="36" pos:column="58">.<pos:position pos:line="36" pos:column="59"/></operator><name pos:line="36" pos:column="59">flags<pos:position pos:line="36" pos:column="64"/></name></name> <operator pos:line="36" pos:column="65">&amp;<pos:position pos:line="36" pos:column="70"/></operator> <name pos:line="36" pos:column="67">UNINTERESTING<pos:position pos:line="36" pos:column="80"/></name><operator pos:line="36" pos:column="80">)<pos:position pos:line="36" pos:column="81"/></operator></expr></init></decl>;<pos:position pos:line="36" pos:column="82"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="37" pos:column="25">item<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">-&gt;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="31">ignore<pos:position pos:line="37" pos:column="37"/></name></name> <operator pos:line="37" pos:column="38">=<pos:position pos:line="37" pos:column="39"/></operator> <name pos:line="37" pos:column="40">is_merged<pos:position pos:line="37" pos:column="49"/></name> <operator pos:line="37" pos:column="50">!=<pos:position pos:line="37" pos:column="52"/></operator> <operator pos:line="37" pos:column="53">(<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="54">merge_filter<pos:position pos:line="37" pos:column="66"/></name> <operator pos:line="37" pos:column="67">==<pos:position pos:line="37" pos:column="69"/></operator> <name pos:line="37" pos:column="70">SHOW_MERGED<pos:position pos:line="37" pos:column="81"/></name><operator pos:line="37" pos:column="81">)<pos:position pos:line="37" pos:column="82"/></operator></expr>;<pos:position pos:line="37" pos:column="83"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></for>

		<for pos:line="40" pos:column="17">for <control pos:line="40" pos:column="21">(<init><expr><name pos:line="40" pos:column="22">i<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <literal type="number" pos:line="40" pos:column="26">0<pos:position pos:line="40" pos:column="27"/></literal></expr>;<pos:position pos:line="40" pos:column="28"/></init> <condition><expr><name pos:line="40" pos:column="29">i<pos:position pos:line="40" pos:column="30"/></name> <operator pos:line="40" pos:column="31">&lt;<pos:position pos:line="40" pos:column="35"/></operator> <name><name pos:line="40" pos:column="33">ref_list<pos:position pos:line="40" pos:column="41"/></name><operator pos:line="40" pos:column="41">.<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="42">index<pos:position pos:line="40" pos:column="47"/></name></name></expr>;<pos:position pos:line="40" pos:column="48"/></condition> <incr><expr><name pos:line="40" pos:column="49">i<pos:position pos:line="40" pos:column="50"/></name><operator pos:line="40" pos:column="50">++<pos:position pos:line="40" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="53"/></control> <block pos:line="40" pos:column="54">{
			<decl_stmt><decl><type><name><name pos:line="41" pos:column="25">struct<pos:position pos:line="41" pos:column="31"/></name> <name pos:line="41" pos:column="32">ref_item<pos:position pos:line="41" pos:column="40"/></name></name> <modifier pos:line="41" pos:column="41">*<pos:position pos:line="41" pos:column="42"/></modifier></type><name pos:line="41" pos:column="42">item<pos:position pos:line="41" pos:column="46"/></name> <init pos:line="41" pos:column="47">= <expr><operator pos:line="41" pos:column="49">&amp;<pos:position pos:line="41" pos:column="54"/></operator><name><name pos:line="41" pos:column="50">ref_list<pos:position pos:line="41" pos:column="58"/></name><operator pos:line="41" pos:column="58">.<pos:position pos:line="41" pos:column="59"/></operator><name pos:line="41" pos:column="59">list<pos:position pos:line="41" pos:column="63"/></name><index pos:line="41" pos:column="63">[<expr><name pos:line="41" pos:column="64">i<pos:position pos:line="41" pos:column="65"/></name></expr>]<pos:position pos:line="41" pos:column="66"/></index></name></expr></init></decl>;<pos:position pos:line="41" pos:column="67"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">clear_commit_marks<pos:position pos:line="42" pos:column="43"/></name><argument_list pos:line="42" pos:column="43">(<argument><expr><name><name pos:line="42" pos:column="44">item<pos:position pos:line="42" pos:column="48"/></name><operator pos:line="42" pos:column="48">-&gt;<pos:position pos:line="42" pos:column="53"/></operator><name pos:line="42" pos:column="50">commit<pos:position pos:line="42" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="58">ALL_REV_FLAGS<pos:position pos:line="42" pos:column="71"/></name></expr></argument>)<pos:position pos:line="42" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="73"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">clear_commit_marks<pos:position pos:line="44" pos:column="35"/></name><argument_list pos:line="44" pos:column="35">(<argument><expr><name pos:line="44" pos:column="36">filter<pos:position pos:line="44" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="44">ALL_REV_FLAGS<pos:position pos:line="44" pos:column="57"/></name></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="59"/></expr_stmt>

		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">verbose<pos:position pos:line="46" pos:column="28"/></name></expr>)<pos:position pos:line="46" pos:column="29"/></condition><then pos:line="46" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="25">ref_list<pos:position pos:line="47" pos:column="33"/></name><operator pos:line="47" pos:column="33">.<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="34">maxwidth<pos:position pos:line="47" pos:column="42"/></name></name> <operator pos:line="47" pos:column="43">=<pos:position pos:line="47" pos:column="44"/></operator> <call><name pos:line="47" pos:column="45">calc_maxwidth<pos:position pos:line="47" pos:column="58"/></name><argument_list pos:line="47" pos:column="58">(<argument><expr><operator pos:line="47" pos:column="59">&amp;<pos:position pos:line="47" pos:column="64"/></operator><name pos:line="47" pos:column="60">ref_list<pos:position pos:line="47" pos:column="68"/></name></expr></argument>)<pos:position pos:line="47" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="70"/></expr_stmt></block></then></if>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="50" pos:column="9">qsort<pos:position pos:line="50" pos:column="14"/></name><argument_list pos:line="50" pos:column="14">(<argument><expr><name><name pos:line="50" pos:column="15">ref_list<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">.<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="24">list<pos:position pos:line="50" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="30">ref_list<pos:position pos:line="50" pos:column="38"/></name><operator pos:line="50" pos:column="38">.<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="39">index<pos:position pos:line="50" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="46">sizeof<argument_list pos:line="50" pos:column="52">(<argument><expr pos:line="50" pos:column="53">struct <name pos:line="50" pos:column="60">ref_item<pos:position pos:line="50" pos:column="68"/></name></expr></argument>)<pos:position pos:line="50" pos:column="69"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="50" pos:column="71">ref_cmp<pos:position pos:line="50" pos:column="78"/></name></expr></argument>)<pos:position pos:line="50" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="80"/></expr_stmt>

	<expr_stmt><expr><name pos:line="52" pos:column="9">detached<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">=<pos:position pos:line="52" pos:column="19"/></operator> <operator pos:line="52" pos:column="20">(<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="21">detached<pos:position pos:line="52" pos:column="29"/></name> <operator pos:line="52" pos:column="30">&amp;&amp;<pos:position pos:line="52" pos:column="40"/></operator> <operator pos:line="52" pos:column="33">(<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="34">kinds<pos:position pos:line="52" pos:column="39"/></name> <operator pos:line="52" pos:column="40">&amp;<pos:position pos:line="52" pos:column="45"/></operator> <name pos:line="52" pos:column="42">REF_LOCAL_BRANCH<pos:position pos:line="52" pos:column="58"/></name><operator pos:line="52" pos:column="58">)<pos:position pos:line="52" pos:column="59"/></operator><operator pos:line="52" pos:column="59">)<pos:position pos:line="52" pos:column="60"/></operator></expr>;<pos:position pos:line="52" pos:column="61"/></expr_stmt>
	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">detached<pos:position pos:line="53" pos:column="21"/></name> <operator pos:line="53" pos:column="22">&amp;&amp;<pos:position pos:line="53" pos:column="32"/></operator> <call><name pos:line="53" pos:column="25">match_patterns<pos:position pos:line="53" pos:column="39"/></name><argument_list pos:line="53" pos:column="39">(<argument><expr><name pos:line="53" pos:column="40">pattern<pos:position pos:line="53" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="49">"HEAD"<pos:position pos:line="53" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="57"/></condition><then pos:line="53" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="17">show_detached<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><operator pos:line="54" pos:column="31">&amp;<pos:position pos:line="54" pos:column="36"/></operator><name pos:line="54" pos:column="32">ref_list<pos:position pos:line="54" pos:column="40"/></name></expr></argument>)<pos:position pos:line="54" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="42"/></expr_stmt></block></then></if>

	<for pos:line="56" pos:column="9">for <control pos:line="56" pos:column="13">(<init><expr><name pos:line="56" pos:column="14">i<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <literal type="number" pos:line="56" pos:column="18">0<pos:position pos:line="56" pos:column="19"/></literal></expr>;<pos:position pos:line="56" pos:column="20"/></init> <condition><expr><name pos:line="56" pos:column="21">i<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">&lt;<pos:position pos:line="56" pos:column="27"/></operator> <name><name pos:line="56" pos:column="25">ref_list<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">.<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="34">index<pos:position pos:line="56" pos:column="39"/></name></name></expr>;<pos:position pos:line="56" pos:column="40"/></condition> <incr><expr><name pos:line="56" pos:column="41">i<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">++<pos:position pos:line="56" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="45"/></control> <block pos:line="56" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="57" pos:column="17">int<pos:position pos:line="57" pos:column="20"/></name></type> <name pos:line="57" pos:column="21">current<pos:position pos:line="57" pos:column="28"/></name> <init pos:line="57" pos:column="29">= <expr><operator pos:line="57" pos:column="31">!<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="32">detached<pos:position pos:line="57" pos:column="40"/></name> <operator pos:line="57" pos:column="41">&amp;&amp;<pos:position pos:line="57" pos:column="51"/></operator>
			<operator pos:line="58" pos:column="25">(<pos:position pos:line="58" pos:column="26"/></operator><name><name pos:line="58" pos:column="26">ref_list<pos:position pos:line="58" pos:column="34"/></name><operator pos:line="58" pos:column="34">.<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="35">list<pos:position pos:line="58" pos:column="39"/></name><index pos:line="58" pos:column="39">[<expr><name pos:line="58" pos:column="40">i<pos:position pos:line="58" pos:column="41"/></name></expr>]<pos:position pos:line="58" pos:column="42"/></index></name><operator pos:line="58" pos:column="42">.<pos:position pos:line="58" pos:column="43"/></operator><name pos:line="58" pos:column="43">kind<pos:position pos:line="58" pos:column="47"/></name> <operator pos:line="58" pos:column="48">==<pos:position pos:line="58" pos:column="50"/></operator> <name pos:line="58" pos:column="51">REF_LOCAL_BRANCH<pos:position pos:line="58" pos:column="67"/></name><operator pos:line="58" pos:column="67">)<pos:position pos:line="58" pos:column="68"/></operator> <operator pos:line="58" pos:column="69">&amp;&amp;<pos:position pos:line="58" pos:column="79"/></operator>
			<operator pos:line="59" pos:column="25">!<pos:position pos:line="59" pos:column="26"/></operator><call><name pos:line="59" pos:column="26">strcmp<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name><name pos:line="59" pos:column="33">ref_list<pos:position pos:line="59" pos:column="41"/></name><operator pos:line="59" pos:column="41">.<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="42">list<pos:position pos:line="59" pos:column="46"/></name><index pos:line="59" pos:column="46">[<expr><name pos:line="59" pos:column="47">i<pos:position pos:line="59" pos:column="48"/></name></expr>]<pos:position pos:line="59" pos:column="49"/></index></name><operator pos:line="59" pos:column="49">.<pos:position pos:line="59" pos:column="50"/></operator><name pos:line="59" pos:column="50">name<pos:position pos:line="59" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="56">head<pos:position pos:line="59" pos:column="60"/></name></expr></argument>)<pos:position pos:line="59" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="59" pos:column="62"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="60" pos:column="17">char<pos:position pos:line="60" pos:column="21"/></name> <modifier pos:line="60" pos:column="22">*<pos:position pos:line="60" pos:column="23"/></modifier></type><name pos:line="60" pos:column="23">prefix<pos:position pos:line="60" pos:column="29"/></name> <init pos:line="60" pos:column="30">= <expr><ternary><condition><expr><operator pos:line="60" pos:column="32">(<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="33">kinds<pos:position pos:line="60" pos:column="38"/></name> <operator pos:line="60" pos:column="39">!=<pos:position pos:line="60" pos:column="41"/></operator> <name pos:line="60" pos:column="42">REF_REMOTE_BRANCH<pos:position pos:line="60" pos:column="59"/></name> <operator pos:line="60" pos:column="60">&amp;&amp;<pos:position pos:line="60" pos:column="70"/></operator>
				<name><name pos:line="61" pos:column="33">ref_list<pos:position pos:line="61" pos:column="41"/></name><operator pos:line="61" pos:column="41">.<pos:position pos:line="61" pos:column="42"/></operator><name pos:line="61" pos:column="42">list<pos:position pos:line="61" pos:column="46"/></name><index pos:line="61" pos:column="46">[<expr><name pos:line="61" pos:column="47">i<pos:position pos:line="61" pos:column="48"/></name></expr>]<pos:position pos:line="61" pos:column="49"/></index></name><operator pos:line="61" pos:column="49">.<pos:position pos:line="61" pos:column="50"/></operator><name pos:line="61" pos:column="50">kind<pos:position pos:line="61" pos:column="54"/></name> <operator pos:line="61" pos:column="55">==<pos:position pos:line="61" pos:column="57"/></operator> <name pos:line="61" pos:column="58">REF_REMOTE_BRANCH<pos:position pos:line="61" pos:column="75"/></name><operator pos:line="61" pos:column="75">)<pos:position pos:line="61" pos:column="76"/></operator></expr>
				?<pos:position pos:line="62" pos:column="34"/></condition><then pos:line="62" pos:column="34"> <expr><literal type="string" pos:line="62" pos:column="35">"remotes/"<pos:position pos:line="62" pos:column="45"/></literal></expr> <pos:position pos:line="62" pos:column="46"/></then><else pos:line="62" pos:column="46">: <expr><literal type="string" pos:line="62" pos:column="48">""<pos:position pos:line="62" pos:column="50"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="62" pos:column="51"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">print_ref_item<pos:position pos:line="63" pos:column="31"/></name><argument_list pos:line="63" pos:column="31">(<argument><expr><operator pos:line="63" pos:column="32">&amp;<pos:position pos:line="63" pos:column="37"/></operator><name><name pos:line="63" pos:column="33">ref_list<pos:position pos:line="63" pos:column="41"/></name><operator pos:line="63" pos:column="41">.<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="42">list<pos:position pos:line="63" pos:column="46"/></name><index pos:line="63" pos:column="46">[<expr><name pos:line="63" pos:column="47">i<pos:position pos:line="63" pos:column="48"/></name></expr>]<pos:position pos:line="63" pos:column="49"/></index></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="51">ref_list<pos:position pos:line="63" pos:column="59"/></name><operator pos:line="63" pos:column="59">.<pos:position pos:line="63" pos:column="60"/></operator><name pos:line="63" pos:column="60">maxwidth<pos:position pos:line="63" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="70">verbose<pos:position pos:line="63" pos:column="77"/></name></expr></argument>,
			       <argument><expr><name pos:line="64" pos:column="32">abbrev<pos:position pos:line="64" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="40">current<pos:position pos:line="64" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="49">prefix<pos:position pos:line="64" pos:column="55"/></name></expr></argument>)<pos:position pos:line="64" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="65" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="67" pos:column="9">free_ref_list<pos:position pos:line="67" pos:column="22"/></name><argument_list pos:line="67" pos:column="22">(<argument><expr><operator pos:line="67" pos:column="23">&amp;<pos:position pos:line="67" pos:column="28"/></operator><name pos:line="67" pos:column="24">ref_list<pos:position pos:line="67" pos:column="32"/></name></expr></argument>)<pos:position pos:line="67" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="34"/></expr_stmt>

	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name><name pos:line="69" pos:column="13">cb<pos:position pos:line="69" pos:column="15"/></name><operator pos:line="69" pos:column="15">.<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="16">ret<pos:position pos:line="69" pos:column="19"/></name></name></expr>)<pos:position pos:line="69" pos:column="20"/></condition><then pos:line="69" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="17">error<pos:position pos:line="70" pos:column="22"/></name><argument_list pos:line="70" pos:column="22">(<argument><expr><call><name pos:line="70" pos:column="23">_<pos:position pos:line="70" pos:column="24"/></name><argument_list pos:line="70" pos:column="24">(<argument><expr><literal type="string" pos:line="70" pos:column="25">"some refs could not be read"<pos:position pos:line="70" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="57"/></expr_stmt></block></then></if>

	<return pos:line="72" pos:column="9">return <expr><name><name pos:line="72" pos:column="16">cb<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">.<pos:position pos:line="72" pos:column="19"/></operator><name pos:line="72" pos:column="19">ret<pos:position pos:line="72" pos:column="22"/></name></name></expr>;<pos:position pos:line="72" pos:column="23"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3599_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">unsigned<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">parse_whitespace_rule<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">string<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rule<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><name pos:line="3" pos:column="25">WS_DEFAULT_RULE<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>

	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">string<pos:position pos:line="5" pos:column="22"/></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition> <block pos:line="5" pos:column="24">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">size_t<pos:position pos:line="7" pos:column="23"/></name></type> <name pos:line="7" pos:column="24">len<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="8" pos:column="17">const<pos:position pos:line="8" pos:column="22"/></specifier> <name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">ep<pos:position pos:line="8" pos:column="31"/></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">negated<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><literal type="number" pos:line="9" pos:column="31">0<pos:position pos:line="9" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>

		<expr_stmt><expr><name pos:line="11" pos:column="17">string<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">string<pos:position pos:line="11" pos:column="32"/></name> <operator pos:line="11" pos:column="33">+<pos:position pos:line="11" pos:column="34"/></operator> <call><name pos:line="11" pos:column="35">strspn<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">string<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="50">", \t\n\r"<pos:position pos:line="11" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">ep<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <call><name pos:line="12" pos:column="22">strchrnul<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">string<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="40">','<pos:position pos:line="12" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="13" pos:column="17">len<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">ep<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">-<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="28">string<pos:position pos:line="13" pos:column="34"/></name></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">string<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">==<pos:position pos:line="15" pos:column="31"/></operator> <literal type="char" pos:line="15" pos:column="32">'-'<pos:position pos:line="15" pos:column="35"/></literal></expr>)<pos:position pos:line="15" pos:column="36"/></condition><then pos:line="15" pos:column="36"> <block pos:line="15" pos:column="37">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">negated<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">=<pos:position pos:line="16" pos:column="34"/></operator> <literal type="number" pos:line="16" pos:column="35">1<pos:position pos:line="16" pos:column="36"/></literal></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="17" pos:column="25">string<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">++<pos:position pos:line="17" pos:column="33"/></operator></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
			<expr_stmt><expr><name pos:line="18" pos:column="25">len<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">--<pos:position pos:line="18" pos:column="30"/></operator></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">len<pos:position pos:line="20" pos:column="25"/></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26">
			<block type="pseudo"><break pos:line="21" pos:column="25">break;<pos:position pos:line="21" pos:column="31"/></break></block></then></if>
		<for pos:line="22" pos:column="17">for <control pos:line="22" pos:column="21">(<init><expr><name pos:line="22" pos:column="22">i<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr>;<pos:position pos:line="22" pos:column="28"/></init> <condition><expr><name pos:line="22" pos:column="29">i<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">&lt;<pos:position pos:line="22" pos:column="35"/></operator> <call><name pos:line="22" pos:column="33">ARRAY_SIZE<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><name pos:line="22" pos:column="44">whitespace_rule_names<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></condition> <incr><expr><name pos:line="22" pos:column="68">i<pos:position pos:line="22" pos:column="69"/></name><operator pos:line="22" pos:column="69">++<pos:position pos:line="22" pos:column="71"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="72"/></control> <block pos:line="22" pos:column="73">{
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><call><name pos:line="23" pos:column="29">strncmp<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name><name pos:line="23" pos:column="37">whitespace_rule_names<pos:position pos:line="23" pos:column="58"/></name><index pos:line="23" pos:column="58">[<expr><name pos:line="23" pos:column="59">i<pos:position pos:line="23" pos:column="60"/></name></expr>]<pos:position pos:line="23" pos:column="61"/></index></name><operator pos:line="23" pos:column="61">.<pos:position pos:line="23" pos:column="62"/></operator><name pos:line="23" pos:column="62">rule_name<pos:position pos:line="23" pos:column="71"/></name></expr></argument>,
				    <argument><expr><name pos:line="24" pos:column="37">string<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="45">len<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="50"/></condition><then pos:line="24" pos:column="50">
				<block type="pseudo"><continue pos:line="25" pos:column="33">continue;<pos:position pos:line="25" pos:column="42"/></continue></block></then></if>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><name pos:line="26" pos:column="29">negated<pos:position pos:line="26" pos:column="36"/></name></expr>)<pos:position pos:line="26" pos:column="37"/></condition><then pos:line="26" pos:column="37">
				<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="33">rule<pos:position pos:line="27" pos:column="37"/></name> <operator pos:line="27" pos:column="38">&amp;=<pos:position pos:line="27" pos:column="44"/></operator> <operator pos:line="27" pos:column="41">~<pos:position pos:line="27" pos:column="42"/></operator><name><name pos:line="27" pos:column="42">whitespace_rule_names<pos:position pos:line="27" pos:column="63"/></name><index pos:line="27" pos:column="63">[<expr><name pos:line="27" pos:column="64">i<pos:position pos:line="27" pos:column="65"/></name></expr>]<pos:position pos:line="27" pos:column="66"/></index></name><operator pos:line="27" pos:column="66">.<pos:position pos:line="27" pos:column="67"/></operator><name pos:line="27" pos:column="67">rule_bits<pos:position pos:line="27" pos:column="76"/></name></expr>;<pos:position pos:line="27" pos:column="77"/></expr_stmt></block></then>
			<else pos:line="28" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="33">rule<pos:position pos:line="29" pos:column="37"/></name> <operator pos:line="29" pos:column="38">|=<pos:position pos:line="29" pos:column="40"/></operator> <name><name pos:line="29" pos:column="41">whitespace_rule_names<pos:position pos:line="29" pos:column="62"/></name><index pos:line="29" pos:column="62">[<expr><name pos:line="29" pos:column="63">i<pos:position pos:line="29" pos:column="64"/></name></expr>]<pos:position pos:line="29" pos:column="65"/></index></name><operator pos:line="29" pos:column="65">.<pos:position pos:line="29" pos:column="66"/></operator><name pos:line="29" pos:column="66">rule_bits<pos:position pos:line="29" pos:column="75"/></name></expr>;<pos:position pos:line="29" pos:column="76"/></expr_stmt></block></else></if>
			<break pos:line="30" pos:column="25">break;<pos:position pos:line="30" pos:column="31"/></break>
		}<pos:position pos:line="31" pos:column="18"/></block></for>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">strncmp<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">string<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="37">"tabwidth="<pos:position pos:line="32" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="50">9<pos:position pos:line="32" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call> <operator pos:line="32" pos:column="53">==<pos:position pos:line="32" pos:column="55"/></operator> <literal type="number" pos:line="32" pos:column="56">0<pos:position pos:line="32" pos:column="57"/></literal></expr>)<pos:position pos:line="32" pos:column="58"/></condition><then pos:line="32" pos:column="58"> <block pos:line="32" pos:column="59">{
			<decl_stmt><decl><type><name pos:line="33" pos:column="25">unsigned<pos:position pos:line="33" pos:column="33"/></name></type> <name pos:line="33" pos:column="34">tabwidth<pos:position pos:line="33" pos:column="42"/></name> <init pos:line="33" pos:column="43">= <expr><call><name pos:line="33" pos:column="45">atoi<pos:position pos:line="33" pos:column="49"/></name><argument_list pos:line="33" pos:column="49">(<argument><expr><name pos:line="33" pos:column="50">string<pos:position pos:line="33" pos:column="56"/></name> <operator pos:line="33" pos:column="57">+<pos:position pos:line="33" pos:column="58"/></operator> <literal type="number" pos:line="33" pos:column="59">9<pos:position pos:line="33" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="62"/></decl_stmt>
			<if pos:line="34" pos:column="25">if <condition pos:line="34" pos:column="28">(<expr><literal type="number" pos:line="34" pos:column="29">0<pos:position pos:line="34" pos:column="30"/></literal> <operator pos:line="34" pos:column="31">&lt;<pos:position pos:line="34" pos:column="35"/></operator> <name pos:line="34" pos:column="33">tabwidth<pos:position pos:line="34" pos:column="41"/></name> <operator pos:line="34" pos:column="42">&amp;&amp;<pos:position pos:line="34" pos:column="52"/></operator> <name pos:line="34" pos:column="45">tabwidth<pos:position pos:line="34" pos:column="53"/></name> <operator pos:line="34" pos:column="54">&lt;<pos:position pos:line="34" pos:column="58"/></operator> <literal type="number" pos:line="34" pos:column="56">0100<pos:position pos:line="34" pos:column="60"/></literal></expr>)<pos:position pos:line="34" pos:column="61"/></condition><then pos:line="34" pos:column="61"> <block pos:line="34" pos:column="62">{
				<expr_stmt><expr><name pos:line="35" pos:column="33">rule<pos:position pos:line="35" pos:column="37"/></name> <operator pos:line="35" pos:column="38">&amp;=<pos:position pos:line="35" pos:column="44"/></operator> <operator pos:line="35" pos:column="41">~<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="42">WS_TAB_WIDTH_MASK<pos:position pos:line="35" pos:column="59"/></name></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name pos:line="36" pos:column="33">rule<pos:position pos:line="36" pos:column="37"/></name> <operator pos:line="36" pos:column="38">|=<pos:position pos:line="36" pos:column="40"/></operator> <name pos:line="36" pos:column="41">tabwidth<pos:position pos:line="36" pos:column="49"/></name></expr>;<pos:position pos:line="36" pos:column="50"/></expr_stmt>
			}<pos:position pos:line="37" pos:column="26"/></block></then>
			<else pos:line="38" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="33">warning<pos:position pos:line="39" pos:column="40"/></name><argument_list pos:line="39" pos:column="40">(<argument><expr><literal type="string" pos:line="39" pos:column="41">"tabwidth %.*s out of range"<pos:position pos:line="39" pos:column="69"/></literal></expr></argument>,
					<argument><expr><call pos:line="40" pos:column="41">(<name pos:line="40" pos:column="42">int<pos:position pos:line="40" pos:column="45"/></name>)<argument_list pos:line="40" pos:column="46">(<argument><expr><name pos:line="40" pos:column="47">len<pos:position pos:line="40" pos:column="50"/></name> <operator pos:line="40" pos:column="51">-<pos:position pos:line="40" pos:column="52"/></operator> <literal type="number" pos:line="40" pos:column="53">9<pos:position pos:line="40" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="57">string<pos:position pos:line="40" pos:column="63"/></name> <operator pos:line="40" pos:column="64">+<pos:position pos:line="40" pos:column="65"/></operator> <literal type="number" pos:line="40" pos:column="66">9<pos:position pos:line="40" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="69"/></expr_stmt></block></else></if>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="42" pos:column="17">string<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <name pos:line="42" pos:column="26">ep<pos:position pos:line="42" pos:column="28"/></name></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></while>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">rule<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">&amp;<pos:position pos:line="45" pos:column="23"/></operator> <name pos:line="45" pos:column="20">WS_TAB_IN_INDENT<pos:position pos:line="45" pos:column="36"/></name> <operator pos:line="45" pos:column="37">&amp;&amp;<pos:position pos:line="45" pos:column="47"/></operator> <name pos:line="45" pos:column="40">rule<pos:position pos:line="45" pos:column="44"/></name> <operator pos:line="45" pos:column="45">&amp;<pos:position pos:line="45" pos:column="50"/></operator> <name pos:line="45" pos:column="47">WS_INDENT_WITH_NON_TAB<pos:position pos:line="45" pos:column="69"/></name></expr>)<pos:position pos:line="45" pos:column="70"/></condition><then pos:line="45" pos:column="70">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="17">die<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><literal type="string" pos:line="46" pos:column="21">"cannot enforce both tab-in-indent and indent-with-non-tab"<pos:position pos:line="46" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="82"/></expr_stmt></block></then></if>
	<return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">rule<pos:position pos:line="47" pos:column="20"/></name></expr>;<pos:position pos:line="47" pos:column="21"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2228_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mark_bad_packed_object<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">packed_git<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">p<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
				   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">unsigned<pos:position pos:line="2" pos:column="50"/></name> <name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">sha1<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">i<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr>;<pos:position pos:line="5" pos:column="20"/></init> <condition><expr><name pos:line="5" pos:column="21">i<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&lt;<pos:position pos:line="5" pos:column="27"/></operator> <name><name pos:line="5" pos:column="25">p<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">num_bad_objects<pos:position pos:line="5" pos:column="43"/></name></name></expr>;<pos:position pos:line="5" pos:column="44"/></condition> <incr><expr><name pos:line="5" pos:column="45">i<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">++<pos:position pos:line="5" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="49"/></control>
		<block type="pseudo"><if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">!<pos:position pos:line="6" pos:column="22"/></operator><call><name pos:line="6" pos:column="22">hashcmp<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><name pos:line="6" pos:column="30">sha1<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="36">p<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">bad_object_sha1<pos:position pos:line="6" pos:column="54"/></name></name> <operator pos:line="6" pos:column="55">+<pos:position pos:line="6" pos:column="56"/></operator> <name pos:line="6" pos:column="57">GIT_SHA1_RAWSZ<pos:position pos:line="6" pos:column="71"/></name> <operator pos:line="6" pos:column="72">*<pos:position pos:line="6" pos:column="73"/></operator> <name pos:line="6" pos:column="74">i<pos:position pos:line="6" pos:column="75"/></name></expr></argument>)<pos:position pos:line="6" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="77"/></condition><then pos:line="6" pos:column="77">
			<block type="pseudo"><return pos:line="7" pos:column="25">return;<pos:position pos:line="7" pos:column="32"/></return></block></then></if></block></for>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">p<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">bad_object_sha1<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <call><name pos:line="8" pos:column="30">xrealloc<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><name><name pos:line="8" pos:column="39">p<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">bad_object_sha1<pos:position pos:line="8" pos:column="57"/></name></name></expr></argument>,
				      <argument><expr><call><name pos:line="9" pos:column="39">st_mult<pos:position pos:line="9" pos:column="46"/></name><argument_list pos:line="9" pos:column="46">(<argument><expr><name pos:line="9" pos:column="47">GIT_MAX_RAWSZ<pos:position pos:line="9" pos:column="60"/></name></expr></argument>,
					      <argument><expr><call><name pos:line="10" pos:column="47">st_add<pos:position pos:line="10" pos:column="53"/></name><argument_list pos:line="10" pos:column="53">(<argument><expr><name><name pos:line="10" pos:column="54">p<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">-&gt;<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="57">num_bad_objects<pos:position pos:line="10" pos:column="72"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="74">1<pos:position pos:line="10" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">hashcpy<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name><name pos:line="11" pos:column="17">p<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">bad_object_sha1<pos:position pos:line="11" pos:column="35"/></name></name> <operator pos:line="11" pos:column="36">+<pos:position pos:line="11" pos:column="37"/></operator> <name pos:line="11" pos:column="38">GIT_SHA1_RAWSZ<pos:position pos:line="11" pos:column="52"/></name> <operator pos:line="11" pos:column="53">*<pos:position pos:line="11" pos:column="54"/></operator> <name><name pos:line="11" pos:column="55">p<pos:position pos:line="11" pos:column="56"/></name><operator pos:line="11" pos:column="56">-&gt;<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="58">num_bad_objects<pos:position pos:line="11" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="75">sha1<pos:position pos:line="11" pos:column="79"/></name></expr></argument>)<pos:position pos:line="11" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">p<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">num_bad_objects<pos:position pos:line="12" pos:column="27"/></name></name><operator pos:line="12" pos:column="27">++<pos:position pos:line="12" pos:column="29"/></operator></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5264_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">determine_author_info<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">strbuf<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">author_ident<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">name<pos:position pos:line="3" pos:column="19"/></name></decl>, <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="22">email<pos:position pos:line="3" pos:column="27"/></name></decl>, <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="30">date<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ident_split<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">author<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">name<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <call><name pos:line="6" pos:column="16">xstrdup_or_null<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><call><name pos:line="6" pos:column="32">getenv<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><literal type="string" pos:line="6" pos:column="39">"GIT_AUTHOR_NAME"<pos:position pos:line="6" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">email<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <call><name pos:line="7" pos:column="17">xstrdup_or_null<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><call><name pos:line="7" pos:column="33">getenv<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><literal type="string" pos:line="7" pos:column="40">"GIT_AUTHOR_EMAIL"<pos:position pos:line="7" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">date<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">xstrdup_or_null<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><call><name pos:line="8" pos:column="32">getenv<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><literal type="string" pos:line="8" pos:column="39">"GIT_AUTHOR_DATE"<pos:position pos:line="8" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">author_message<pos:position pos:line="10" pos:column="27"/></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28"> <block pos:line="10" pos:column="29">{
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">ident_split<pos:position pos:line="11" pos:column="35"/></name></name></type> <name pos:line="11" pos:column="36">ident<pos:position pos:line="11" pos:column="41"/></name></decl>;<pos:position pos:line="11" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">size_t<pos:position pos:line="12" pos:column="23"/></name></type> <name pos:line="12" pos:column="24">len<pos:position pos:line="12" pos:column="27"/></name></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name pos:line="13" pos:column="23">char<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">a<pos:position pos:line="13" pos:column="30"/></name></decl>;<pos:position pos:line="13" pos:column="31"/></decl_stmt>

		<expr_stmt><expr><name pos:line="15" pos:column="17">a<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">find_commit_header<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">author_message_buffer<pos:position pos:line="15" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="63">"author"<pos:position pos:line="15" pos:column="71"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="73">&amp;<pos:position pos:line="15" pos:column="78"/></operator><name pos:line="15" pos:column="74">len<pos:position pos:line="15" pos:column="77"/></name></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="79"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">a<pos:position pos:line="16" pos:column="23"/></name></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">die<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><call><name pos:line="17" pos:column="29">_<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><literal type="string" pos:line="17" pos:column="31">"commit '%s' lacks author header"<pos:position pos:line="17" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="67">author_message<pos:position pos:line="17" pos:column="81"/></name></expr></argument>)<pos:position pos:line="17" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="83"/></expr_stmt></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">split_ident_line<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><operator pos:line="18" pos:column="38">&amp;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="39">ident<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">a<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">len<pos:position pos:line="18" pos:column="52"/></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call> <operator pos:line="18" pos:column="54">&lt;<pos:position pos:line="18" pos:column="58"/></operator> <literal type="number" pos:line="18" pos:column="56">0<pos:position pos:line="18" pos:column="57"/></literal></expr>)<pos:position pos:line="18" pos:column="58"/></condition><then pos:line="18" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">die<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><call><name pos:line="19" pos:column="29">_<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">"commit '%s' has malformed author line"<pos:position pos:line="19" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="19" pos:column="73">author_message<pos:position pos:line="19" pos:column="87"/></name></expr></argument>)<pos:position pos:line="19" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="89"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="21" pos:column="17">set_ident_var<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><operator pos:line="21" pos:column="31">&amp;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="32">name<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="38">xmemdupz<pos:position pos:line="21" pos:column="46"/></name><argument_list pos:line="21" pos:column="46">(<argument><expr><name><name pos:line="21" pos:column="47">ident<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">.<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="53">name_begin<pos:position pos:line="21" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="65">ident<pos:position pos:line="21" pos:column="70"/></name><operator pos:line="21" pos:column="70">.<pos:position pos:line="21" pos:column="71"/></operator><name pos:line="21" pos:column="71">name_end<pos:position pos:line="21" pos:column="79"/></name></name> <operator pos:line="21" pos:column="80">-<pos:position pos:line="21" pos:column="81"/></operator> <name><name pos:line="21" pos:column="82">ident<pos:position pos:line="21" pos:column="87"/></name><operator pos:line="21" pos:column="87">.<pos:position pos:line="21" pos:column="88"/></operator><name pos:line="21" pos:column="88">name_begin<pos:position pos:line="21" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="101"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">set_ident_var<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><operator pos:line="22" pos:column="31">&amp;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="32">email<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="39">xmemdupz<pos:position pos:line="22" pos:column="47"/></name><argument_list pos:line="22" pos:column="47">(<argument><expr><name><name pos:line="22" pos:column="48">ident<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">.<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="54">mail_begin<pos:position pos:line="22" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="66">ident<pos:position pos:line="22" pos:column="71"/></name><operator pos:line="22" pos:column="71">.<pos:position pos:line="22" pos:column="72"/></operator><name pos:line="22" pos:column="72">mail_end<pos:position pos:line="22" pos:column="80"/></name></name> <operator pos:line="22" pos:column="81">-<pos:position pos:line="22" pos:column="82"/></operator> <name><name pos:line="22" pos:column="83">ident<pos:position pos:line="22" pos:column="88"/></name><operator pos:line="22" pos:column="88">.<pos:position pos:line="22" pos:column="89"/></operator><name pos:line="22" pos:column="89">mail_begin<pos:position pos:line="22" pos:column="99"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="102"/></expr_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name><name pos:line="24" pos:column="21">ident<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">.<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">date_begin<pos:position pos:line="24" pos:column="37"/></name></name></expr>)<pos:position pos:line="24" pos:column="38"/></condition><then pos:line="24" pos:column="38"> <block pos:line="24" pos:column="39">{
			<decl_stmt><decl><type><name><name pos:line="25" pos:column="25">struct<pos:position pos:line="25" pos:column="31"/></name> <name pos:line="25" pos:column="32">strbuf<pos:position pos:line="25" pos:column="38"/></name></name></type> <name pos:line="25" pos:column="39">date_buf<pos:position pos:line="25" pos:column="47"/></name> <init pos:line="25" pos:column="48">= <expr><name pos:line="25" pos:column="50">STRBUF_INIT<pos:position pos:line="25" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="62"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">strbuf_addch<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><operator pos:line="26" pos:column="38">&amp;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="39">date_buf<pos:position pos:line="26" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="49">'@'<pos:position pos:line="26" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">strbuf_add<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><operator pos:line="27" pos:column="36">&amp;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="37">date_buf<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="47">ident<pos:position pos:line="27" pos:column="52"/></name><operator pos:line="27" pos:column="52">.<pos:position pos:line="27" pos:column="53"/></operator><name pos:line="27" pos:column="53">date_begin<pos:position pos:line="27" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="65">ident<pos:position pos:line="27" pos:column="70"/></name><operator pos:line="27" pos:column="70">.<pos:position pos:line="27" pos:column="71"/></operator><name pos:line="27" pos:column="71">date_end<pos:position pos:line="27" pos:column="79"/></name></name> <operator pos:line="27" pos:column="80">-<pos:position pos:line="27" pos:column="81"/></operator> <name><name pos:line="27" pos:column="82">ident<pos:position pos:line="27" pos:column="87"/></name><operator pos:line="27" pos:column="87">.<pos:position pos:line="27" pos:column="88"/></operator><name pos:line="27" pos:column="88">date_begin<pos:position pos:line="27" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="100"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">strbuf_addch<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><operator pos:line="28" pos:column="38">&amp;<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="39">date_buf<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="28" pos:column="49">' '<pos:position pos:line="28" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">strbuf_add<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><operator pos:line="29" pos:column="36">&amp;<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="37">date_buf<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="47">ident<pos:position pos:line="29" pos:column="52"/></name><operator pos:line="29" pos:column="52">.<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="53">tz_begin<pos:position pos:line="29" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="63">ident<pos:position pos:line="29" pos:column="68"/></name><operator pos:line="29" pos:column="68">.<pos:position pos:line="29" pos:column="69"/></operator><name pos:line="29" pos:column="69">tz_end<pos:position pos:line="29" pos:column="75"/></name></name> <operator pos:line="29" pos:column="76">-<pos:position pos:line="29" pos:column="77"/></operator> <name><name pos:line="29" pos:column="78">ident<pos:position pos:line="29" pos:column="83"/></name><operator pos:line="29" pos:column="83">.<pos:position pos:line="29" pos:column="84"/></operator><name pos:line="29" pos:column="84">tz_begin<pos:position pos:line="29" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="94"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">set_ident_var<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">(<argument><expr><operator pos:line="30" pos:column="39">&amp;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="40">date<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="46">strbuf_detach<pos:position pos:line="30" pos:column="59"/></name><argument_list pos:line="30" pos:column="59">(<argument><expr><operator pos:line="30" pos:column="60">&amp;<pos:position pos:line="30" pos:column="65"/></operator><name pos:line="30" pos:column="61">date_buf<pos:position pos:line="30" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="71">NULL<pos:position pos:line="30" pos:column="75"/></name></expr></argument>)<pos:position pos:line="30" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">force_author<pos:position pos:line="34" pos:column="25"/></name></expr>)<pos:position pos:line="34" pos:column="26"/></condition><then pos:line="34" pos:column="26"> <block pos:line="34" pos:column="27">{
		<decl_stmt><decl><type><name><name pos:line="35" pos:column="17">struct<pos:position pos:line="35" pos:column="23"/></name> <name pos:line="35" pos:column="24">ident_split<pos:position pos:line="35" pos:column="35"/></name></name></type> <name pos:line="35" pos:column="36">ident<pos:position pos:line="35" pos:column="41"/></name></decl>;<pos:position pos:line="35" pos:column="42"/></decl_stmt>

		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><call><name pos:line="37" pos:column="21">split_ident_line<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><operator pos:line="37" pos:column="38">&amp;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="39">ident<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="46">force_author<pos:position pos:line="37" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="60">strlen<pos:position pos:line="37" pos:column="66"/></name><argument_list pos:line="37" pos:column="66">(<argument><expr><name pos:line="37" pos:column="67">force_author<pos:position pos:line="37" pos:column="79"/></name></expr></argument>)<pos:position pos:line="37" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="81"/></argument_list></call> <operator pos:line="37" pos:column="82">&lt;<pos:position pos:line="37" pos:column="86"/></operator> <literal type="number" pos:line="37" pos:column="84">0<pos:position pos:line="37" pos:column="85"/></literal></expr>)<pos:position pos:line="37" pos:column="86"/></condition><then pos:line="37" pos:column="86">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="25">die<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><call><name pos:line="38" pos:column="29">_<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><literal type="string" pos:line="38" pos:column="31">"malformed --author parameter"<pos:position pos:line="38" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="64"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">set_ident_var<pos:position pos:line="39" pos:column="30"/></name><argument_list pos:line="39" pos:column="30">(<argument><expr><operator pos:line="39" pos:column="31">&amp;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="32">name<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="38">xmemdupz<pos:position pos:line="39" pos:column="46"/></name><argument_list pos:line="39" pos:column="46">(<argument><expr><name><name pos:line="39" pos:column="47">ident<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">.<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="53">name_begin<pos:position pos:line="39" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="65">ident<pos:position pos:line="39" pos:column="70"/></name><operator pos:line="39" pos:column="70">.<pos:position pos:line="39" pos:column="71"/></operator><name pos:line="39" pos:column="71">name_end<pos:position pos:line="39" pos:column="79"/></name></name> <operator pos:line="39" pos:column="80">-<pos:position pos:line="39" pos:column="81"/></operator> <name><name pos:line="39" pos:column="82">ident<pos:position pos:line="39" pos:column="87"/></name><operator pos:line="39" pos:column="87">.<pos:position pos:line="39" pos:column="88"/></operator><name pos:line="39" pos:column="88">name_begin<pos:position pos:line="39" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="101"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">set_ident_var<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><operator pos:line="40" pos:column="31">&amp;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="32">email<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="39">xmemdupz<pos:position pos:line="40" pos:column="47"/></name><argument_list pos:line="40" pos:column="47">(<argument><expr><name><name pos:line="40" pos:column="48">ident<pos:position pos:line="40" pos:column="53"/></name><operator pos:line="40" pos:column="53">.<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="54">mail_begin<pos:position pos:line="40" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="66">ident<pos:position pos:line="40" pos:column="71"/></name><operator pos:line="40" pos:column="71">.<pos:position pos:line="40" pos:column="72"/></operator><name pos:line="40" pos:column="72">mail_end<pos:position pos:line="40" pos:column="80"/></name></name> <operator pos:line="40" pos:column="81">-<pos:position pos:line="40" pos:column="82"/></operator> <name><name pos:line="40" pos:column="83">ident<pos:position pos:line="40" pos:column="88"/></name><operator pos:line="40" pos:column="88">.<pos:position pos:line="40" pos:column="89"/></operator><name pos:line="40" pos:column="89">mail_begin<pos:position pos:line="40" pos:column="99"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="102"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">force_date<pos:position pos:line="43" pos:column="23"/></name></expr>)<pos:position pos:line="43" pos:column="24"/></condition><then pos:line="43" pos:column="24"> <block pos:line="43" pos:column="25">{
		<decl_stmt><decl><type><name><name pos:line="44" pos:column="17">struct<pos:position pos:line="44" pos:column="23"/></name> <name pos:line="44" pos:column="24">strbuf<pos:position pos:line="44" pos:column="30"/></name></name></type> <name pos:line="44" pos:column="31">date_buf<pos:position pos:line="44" pos:column="39"/></name> <init pos:line="44" pos:column="40">= <expr><name pos:line="44" pos:column="42">STRBUF_INIT<pos:position pos:line="44" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="44" pos:column="54"/></decl_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><call><name pos:line="45" pos:column="21">parse_force_date<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name pos:line="45" pos:column="38">force_date<pos:position pos:line="45" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="50">&amp;<pos:position pos:line="45" pos:column="55"/></operator><name pos:line="45" pos:column="51">date_buf<pos:position pos:line="45" pos:column="59"/></name></expr></argument>)<pos:position pos:line="45" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="61"/></condition><then pos:line="45" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">die<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><call><name pos:line="46" pos:column="29">_<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><literal type="string" pos:line="46" pos:column="31">"invalid date format: %s"<pos:position pos:line="46" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="46" pos:column="59">force_date<pos:position pos:line="46" pos:column="69"/></name></expr></argument>)<pos:position pos:line="46" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="71"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">set_ident_var<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><operator pos:line="47" pos:column="31">&amp;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="32">date<pos:position pos:line="47" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="38">strbuf_detach<pos:position pos:line="47" pos:column="51"/></name><argument_list pos:line="47" pos:column="51">(<argument><expr><operator pos:line="47" pos:column="52">&amp;<pos:position pos:line="47" pos:column="57"/></operator><name pos:line="47" pos:column="53">date_buf<pos:position pos:line="47" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="63">NULL<pos:position pos:line="47" pos:column="67"/></name></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="50" pos:column="9">strbuf_addstr<pos:position pos:line="50" pos:column="22"/></name><argument_list pos:line="50" pos:column="22">(<argument><expr><name pos:line="50" pos:column="23">author_ident<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="37">fmt_ident<pos:position pos:line="50" pos:column="46"/></name><argument_list pos:line="50" pos:column="46">(<argument><expr><name pos:line="50" pos:column="47">name<pos:position pos:line="50" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="53">email<pos:position pos:line="50" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="60">date<pos:position pos:line="50" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="66">IDENT_STRICT<pos:position pos:line="50" pos:column="78"/></name></expr></argument>)<pos:position pos:line="50" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">assert_split_ident<pos:position pos:line="51" pos:column="27"/></name><argument_list pos:line="51" pos:column="27">(<argument><expr><operator pos:line="51" pos:column="28">&amp;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="29">author<pos:position pos:line="51" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="37">author_ident<pos:position pos:line="51" pos:column="49"/></name></expr></argument>)<pos:position pos:line="51" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">export_one<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><literal type="string" pos:line="52" pos:column="20">"GIT_AUTHOR_NAME"<pos:position pos:line="52" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="39">author<pos:position pos:line="52" pos:column="45"/></name><operator pos:line="52" pos:column="45">.<pos:position pos:line="52" pos:column="46"/></operator><name pos:line="52" pos:column="46">name_begin<pos:position pos:line="52" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="58">author<pos:position pos:line="52" pos:column="64"/></name><operator pos:line="52" pos:column="64">.<pos:position pos:line="52" pos:column="65"/></operator><name pos:line="52" pos:column="65">name_end<pos:position pos:line="52" pos:column="73"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="75">0<pos:position pos:line="52" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="78"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">export_one<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><literal type="string" pos:line="53" pos:column="20">"GIT_AUTHOR_EMAIL"<pos:position pos:line="53" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="40">author<pos:position pos:line="53" pos:column="46"/></name><operator pos:line="53" pos:column="46">.<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="47">mail_begin<pos:position pos:line="53" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="59">author<pos:position pos:line="53" pos:column="65"/></name><operator pos:line="53" pos:column="65">.<pos:position pos:line="53" pos:column="66"/></operator><name pos:line="53" pos:column="66">mail_end<pos:position pos:line="53" pos:column="74"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="76">0<pos:position pos:line="53" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="79"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">export_one<pos:position pos:line="54" pos:column="19"/></name><argument_list pos:line="54" pos:column="19">(<argument><expr><literal type="string" pos:line="54" pos:column="20">"GIT_AUTHOR_DATE"<pos:position pos:line="54" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="39">author<pos:position pos:line="54" pos:column="45"/></name><operator pos:line="54" pos:column="45">.<pos:position pos:line="54" pos:column="46"/></operator><name pos:line="54" pos:column="46">date_begin<pos:position pos:line="54" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="58">author<pos:position pos:line="54" pos:column="64"/></name><operator pos:line="54" pos:column="64">.<pos:position pos:line="54" pos:column="65"/></operator><name pos:line="54" pos:column="65">tz_end<pos:position pos:line="54" pos:column="71"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="54" pos:column="73">'@'<pos:position pos:line="54" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="78"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">free<pos:position pos:line="55" pos:column="13"/></name><argument_list pos:line="55" pos:column="13">(<argument><expr><name pos:line="55" pos:column="14">name<pos:position pos:line="55" pos:column="18"/></name></expr></argument>)<pos:position pos:line="55" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">free<pos:position pos:line="56" pos:column="13"/></name><argument_list pos:line="56" pos:column="13">(<argument><expr><name pos:line="56" pos:column="14">email<pos:position pos:line="56" pos:column="19"/></name></expr></argument>)<pos:position pos:line="56" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="57" pos:column="9">free<pos:position pos:line="57" pos:column="13"/></name><argument_list pos:line="57" pos:column="13">(<argument><expr><name pos:line="57" pos:column="14">date<pos:position pos:line="57" pos:column="18"/></name></expr></argument>)<pos:position pos:line="57" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="20"/></expr_stmt>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

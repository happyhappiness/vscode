<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5236_git-2.13.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_diff<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">int<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">argc<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">argv<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">prefix<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">rev_info<pos:position pos:line="4" pos:column="24"/></name></name></type> <name pos:line="4" pos:column="25">rev<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_array<pos:position pos:line="5" pos:column="28"/></name></name></type> <name pos:line="5" pos:column="29">ent<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name pos:line="5" pos:column="35">OBJECT_ARRAY_INIT<pos:position pos:line="5" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">blobs<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="24">paths<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><literal type="number" pos:line="6" pos:column="32">0<pos:position pos:line="6" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">object_array_entry<pos:position pos:line="7" pos:column="34"/></name></name> <modifier pos:line="7" pos:column="35">*<pos:position pos:line="7" pos:column="36"/></modifier></type><name><name pos:line="7" pos:column="36">blob<pos:position pos:line="7" pos:column="40"/></name><index pos:line="7" pos:column="40">[<expr><literal type="number" pos:line="7" pos:column="41">2<pos:position pos:line="7" pos:column="42"/></literal></expr>]<pos:position pos:line="7" pos:column="43"/></index></name></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">nongit<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="25">no_index<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><literal type="number" pos:line="8" pos:column="36">0<pos:position pos:line="8" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">result<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

	<comment type="block" pos:line="11" pos:column="9">/*
	 * We could get N tree-ish in the rev.pending_objects list.
	 * Also there could be M blobs there, and P pathspecs.
	 *
	 * N=0, M=0:
	 *	cache vs files (diff-files)
	 * N=0, M=2:
	 *      compare two random blobs.  P must be zero.
	 * N=0, M=1, P=1:
	 *	compare a blob with a working tree file.
	 *
	 * N=1, M=0:
	 *      tree vs cache (diff-index --cached)
	 *
	 * N=2, M=0:
	 *      tree vs tree (diff-tree)
	 *
	 * N=0, M=0, P=2:
	 *      compare two filesystem entities (aka --no-index).
	 *
	 * Other cases are errors.
	 */</comment>

	<comment type="block" pos:line="34" pos:column="9">/* Were we asked to do --no-index explicitly? */</comment>
	<for pos:line="35" pos:column="9">for <control pos:line="35" pos:column="13">(<init><expr><name pos:line="35" pos:column="14">i<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <literal type="number" pos:line="35" pos:column="18">1<pos:position pos:line="35" pos:column="19"/></literal></expr>;<pos:position pos:line="35" pos:column="20"/></init> <condition><expr><name pos:line="35" pos:column="21">i<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">&lt;<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="25">argc<pos:position pos:line="35" pos:column="29"/></name></expr>;<pos:position pos:line="35" pos:column="30"/></condition> <incr><expr><name pos:line="35" pos:column="31">i<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">++<pos:position pos:line="35" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="35"/></control> <block pos:line="35" pos:column="36">{
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><call><name pos:line="36" pos:column="22">strcmp<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name><name pos:line="36" pos:column="29">argv<pos:position pos:line="36" pos:column="33"/></name><index pos:line="36" pos:column="33">[<expr><name pos:line="36" pos:column="34">i<pos:position pos:line="36" pos:column="35"/></name></expr>]<pos:position pos:line="36" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="38">"--"<pos:position pos:line="36" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="44"/></condition><then pos:line="36" pos:column="44"> <block pos:line="36" pos:column="45">{
			<expr_stmt><expr><name pos:line="37" pos:column="25">i<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">++<pos:position pos:line="37" pos:column="28"/></operator></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>
			<break pos:line="38" pos:column="25">break;<pos:position pos:line="38" pos:column="31"/></break>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><operator pos:line="40" pos:column="21">!<pos:position pos:line="40" pos:column="22"/></operator><call><name pos:line="40" pos:column="22">strcmp<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><name><name pos:line="40" pos:column="29">argv<pos:position pos:line="40" pos:column="33"/></name><index pos:line="40" pos:column="33">[<expr><name pos:line="40" pos:column="34">i<pos:position pos:line="40" pos:column="35"/></name></expr>]<pos:position pos:line="40" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="38">"--no-index"<pos:position pos:line="40" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="52"/></condition><then pos:line="40" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="25">no_index<pos:position pos:line="41" pos:column="33"/></name> <operator pos:line="41" pos:column="34">=<pos:position pos:line="41" pos:column="35"/></operator> <name pos:line="41" pos:column="36">DIFF_NO_INDEX_EXPLICIT<pos:position pos:line="41" pos:column="58"/></name></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt></block></then></if>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name><name pos:line="42" pos:column="21">argv<pos:position pos:line="42" pos:column="25"/></name><index pos:line="42" pos:column="25">[<expr><name pos:line="42" pos:column="26">i<pos:position pos:line="42" pos:column="27"/></name></expr>]<pos:position pos:line="42" pos:column="28"/></index><index pos:line="42" pos:column="28">[<expr><literal type="number" pos:line="42" pos:column="29">0<pos:position pos:line="42" pos:column="30"/></literal></expr>]<pos:position pos:line="42" pos:column="31"/></index></name> <operator pos:line="42" pos:column="32">!=<pos:position pos:line="42" pos:column="34"/></operator> <literal type="char" pos:line="42" pos:column="35">'-'<pos:position pos:line="42" pos:column="38"/></literal></expr>)<pos:position pos:line="42" pos:column="39"/></condition><then pos:line="42" pos:column="39">
			<block type="pseudo"><break pos:line="43" pos:column="25">break;<pos:position pos:line="43" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="44" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="46" pos:column="9">prefix<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <call><name pos:line="46" pos:column="18">setup_git_directory_gently<pos:position pos:line="46" pos:column="44"/></name><argument_list pos:line="46" pos:column="44">(<argument><expr><operator pos:line="46" pos:column="45">&amp;<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="46">nongit<pos:position pos:line="46" pos:column="52"/></name></expr></argument>)<pos:position pos:line="46" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">!<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">no_index<pos:position pos:line="48" pos:column="22"/></name></expr>)<pos:position pos:line="48" pos:column="23"/></condition><then pos:line="48" pos:column="23"> <block pos:line="48" pos:column="24">{
		<comment type="block" pos:line="49" pos:column="17">/*
		 * Treat git diff with at least one path outside of the
		 * repo the same as if the command would have been executed
		 * outside of a git repository.  In this case it behaves
		 * the same way as "git diff --no-index &lt;a&gt; &lt;b&gt;", which acts
		 * as a colourful "diff" replacement.
		 */</comment>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name pos:line="56" pos:column="21">nongit<pos:position pos:line="56" pos:column="27"/></name> <operator pos:line="56" pos:column="28">||<pos:position pos:line="56" pos:column="30"/></operator> <operator pos:line="56" pos:column="31">(<pos:position pos:line="56" pos:column="32"/></operator><operator pos:line="56" pos:column="32">(<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="33">argc<pos:position pos:line="56" pos:column="37"/></name> <operator pos:line="56" pos:column="38">==<pos:position pos:line="56" pos:column="40"/></operator> <name pos:line="56" pos:column="41">i<pos:position pos:line="56" pos:column="42"/></name> <operator pos:line="56" pos:column="43">+<pos:position pos:line="56" pos:column="44"/></operator> <literal type="number" pos:line="56" pos:column="45">2<pos:position pos:line="56" pos:column="46"/></literal><operator pos:line="56" pos:column="46">)<pos:position pos:line="56" pos:column="47"/></operator> <operator pos:line="56" pos:column="48">&amp;&amp;<pos:position pos:line="56" pos:column="58"/></operator>
			       <operator pos:line="57" pos:column="32">(<pos:position pos:line="57" pos:column="33"/></operator><operator pos:line="57" pos:column="33">!<pos:position pos:line="57" pos:column="34"/></operator><call><name pos:line="57" pos:column="34">path_inside_repo<pos:position pos:line="57" pos:column="50"/></name><argument_list pos:line="57" pos:column="50">(<argument><expr><name pos:line="57" pos:column="51">prefix<pos:position pos:line="57" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="59">argv<pos:position pos:line="57" pos:column="63"/></name><index pos:line="57" pos:column="63">[<expr><name pos:line="57" pos:column="64">i<pos:position pos:line="57" pos:column="65"/></name></expr>]<pos:position pos:line="57" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="57" pos:column="67"/></argument_list></call> <operator pos:line="57" pos:column="68">||<pos:position pos:line="57" pos:column="70"/></operator>
				<operator pos:line="58" pos:column="33">!<pos:position pos:line="58" pos:column="34"/></operator><call><name pos:line="58" pos:column="34">path_inside_repo<pos:position pos:line="58" pos:column="50"/></name><argument_list pos:line="58" pos:column="50">(<argument><expr><name pos:line="58" pos:column="51">prefix<pos:position pos:line="58" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="59">argv<pos:position pos:line="58" pos:column="63"/></name><index pos:line="58" pos:column="63">[<expr><name pos:line="58" pos:column="64">i<pos:position pos:line="58" pos:column="65"/></name> <operator pos:line="58" pos:column="66">+<pos:position pos:line="58" pos:column="67"/></operator> <literal type="number" pos:line="58" pos:column="68">1<pos:position pos:line="58" pos:column="69"/></literal></expr>]<pos:position pos:line="58" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="58" pos:column="71"/></argument_list></call><operator pos:line="58" pos:column="71">)<pos:position pos:line="58" pos:column="72"/></operator><operator pos:line="58" pos:column="72">)<pos:position pos:line="58" pos:column="73"/></operator></expr>)<pos:position pos:line="58" pos:column="74"/></condition><then pos:line="58" pos:column="74">
			<block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="25">no_index<pos:position pos:line="59" pos:column="33"/></name> <operator pos:line="59" pos:column="34">=<pos:position pos:line="59" pos:column="35"/></operator> <name pos:line="59" pos:column="36">DIFF_NO_INDEX_IMPLICIT<pos:position pos:line="59" pos:column="58"/></name></expr>;<pos:position pos:line="59" pos:column="59"/></expr_stmt></block></then></if>
	}<pos:position pos:line="60" pos:column="10"/></block></then></if>

	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">!<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="14">no_index<pos:position pos:line="62" pos:column="22"/></name></expr>)<pos:position pos:line="62" pos:column="23"/></condition><then pos:line="62" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="17">gitmodules_config<pos:position pos:line="63" pos:column="34"/></name><argument_list pos:line="63" pos:column="34">()<pos:position pos:line="63" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="64" pos:column="9">init_diff_ui_defaults<pos:position pos:line="64" pos:column="30"/></name><argument_list pos:line="64" pos:column="30">()<pos:position pos:line="64" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">git_config<pos:position pos:line="65" pos:column="19"/></name><argument_list pos:line="65" pos:column="19">(<argument><expr><name pos:line="65" pos:column="20">git_diff_ui_config<pos:position pos:line="65" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="40">NULL<pos:position pos:line="65" pos:column="44"/></name></expr></argument>)<pos:position pos:line="65" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="66" pos:column="9">precompose_argv<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">argc<pos:position pos:line="66" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="31">argv<pos:position pos:line="66" pos:column="35"/></name></expr></argument>)<pos:position pos:line="66" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="68" pos:column="9">init_revisions<pos:position pos:line="68" pos:column="23"/></name><argument_list pos:line="68" pos:column="23">(<argument><expr><operator pos:line="68" pos:column="24">&amp;<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="25">rev<pos:position pos:line="68" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="30">prefix<pos:position pos:line="68" pos:column="36"/></name></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt>

	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">no_index<pos:position pos:line="70" pos:column="21"/></name> <operator pos:line="70" pos:column="22">&amp;&amp;<pos:position pos:line="70" pos:column="32"/></operator> <name pos:line="70" pos:column="25">argc<pos:position pos:line="70" pos:column="29"/></name> <operator pos:line="70" pos:column="30">!=<pos:position pos:line="70" pos:column="32"/></operator> <name pos:line="70" pos:column="33">i<pos:position pos:line="70" pos:column="34"/></name> <operator pos:line="70" pos:column="35">+<pos:position pos:line="70" pos:column="36"/></operator> <literal type="number" pos:line="70" pos:column="37">2<pos:position pos:line="70" pos:column="38"/></literal></expr>)<pos:position pos:line="70" pos:column="39"/></condition><then pos:line="70" pos:column="39"> <block pos:line="70" pos:column="40">{
		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><name pos:line="71" pos:column="21">no_index<pos:position pos:line="71" pos:column="29"/></name> <operator pos:line="71" pos:column="30">==<pos:position pos:line="71" pos:column="32"/></operator> <name pos:line="71" pos:column="33">DIFF_NO_INDEX_IMPLICIT<pos:position pos:line="71" pos:column="55"/></name></expr>)<pos:position pos:line="71" pos:column="56"/></condition><then pos:line="71" pos:column="56"> <block pos:line="71" pos:column="57">{
			<comment type="block" pos:line="72" pos:column="25">/*
			 * There was no --no-index and there were not two
			 * paths. It is possible that the user intended
			 * to do an inside-repository operation.
			 */</comment>
			<expr_stmt><expr><call><name pos:line="77" pos:column="25">fprintf<pos:position pos:line="77" pos:column="32"/></name><argument_list pos:line="77" pos:column="32">(<argument><expr><name pos:line="77" pos:column="33">stderr<pos:position pos:line="77" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="41">"Not a git repository\n"<pos:position pos:line="77" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="78" pos:column="25">fprintf<pos:position pos:line="78" pos:column="32"/></name><argument_list pos:line="78" pos:column="32">(<argument><expr><name pos:line="78" pos:column="33">stderr<pos:position pos:line="78" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="79" pos:column="33">"To compare two paths outside a working tree:\n"<pos:position pos:line="79" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="83"/></expr_stmt>
		}<pos:position pos:line="80" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="81" pos:column="17">/* Give the usage message for non-repository usage and exit. */</comment>
		<expr_stmt><expr><call><name pos:line="82" pos:column="17">usagef<pos:position pos:line="82" pos:column="23"/></name><argument_list pos:line="82" pos:column="23">(<argument><expr><literal type="string" pos:line="82" pos:column="24">"git diff %s &lt;path&gt; &lt;path&gt;"<pos:position pos:line="82" pos:column="63"/></literal></expr></argument>,
		       <argument><expr><ternary><condition><expr><name pos:line="83" pos:column="24">no_index<pos:position pos:line="83" pos:column="32"/></name> <operator pos:line="83" pos:column="33">==<pos:position pos:line="83" pos:column="35"/></operator> <name pos:line="83" pos:column="36">DIFF_NO_INDEX_EXPLICIT<pos:position pos:line="83" pos:column="58"/></name></expr> ?<pos:position pos:line="83" pos:column="60"/></condition><then pos:line="83" pos:column="60">
		       <expr><literal type="string" pos:line="84" pos:column="24">"--no-index"<pos:position pos:line="84" pos:column="36"/></literal></expr> <pos:position pos:line="84" pos:column="37"/></then><else pos:line="84" pos:column="37">: <expr><literal type="string" pos:line="84" pos:column="39">"[--no-index]"<pos:position pos:line="84" pos:column="53"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="84" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="55"/></expr_stmt>

	}<pos:position pos:line="86" pos:column="10"/></block></then></if>
	<if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name pos:line="87" pos:column="13">no_index<pos:position pos:line="87" pos:column="21"/></name></expr>)<pos:position pos:line="87" pos:column="22"/></condition><then pos:line="87" pos:column="22">
		<comment type="block" pos:line="88" pos:column="17">/* If this is a no-index diff, just run it and exit there. */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="17">diff_no_index<pos:position pos:line="89" pos:column="30"/></name><argument_list pos:line="89" pos:column="30">(<argument><expr><operator pos:line="89" pos:column="31">&amp;<pos:position pos:line="89" pos:column="36"/></operator><name pos:line="89" pos:column="32">rev<pos:position pos:line="89" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="37">argc<pos:position pos:line="89" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="43">argv<pos:position pos:line="89" pos:column="47"/></name></expr></argument>)<pos:position pos:line="89" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="49"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="91" pos:column="9">/* Otherwise, we are doing the usual "git" diff */</comment>
	<expr_stmt><expr><name><name pos:line="92" pos:column="9">rev<pos:position pos:line="92" pos:column="12"/></name><operator pos:line="92" pos:column="12">.<pos:position pos:line="92" pos:column="13"/></operator><name pos:line="92" pos:column="13">diffopt<pos:position pos:line="92" pos:column="20"/></name><operator pos:line="92" pos:column="20">.<pos:position pos:line="92" pos:column="21"/></operator><name pos:line="92" pos:column="21">skip_stat_unmatch<pos:position pos:line="92" pos:column="38"/></name></name> <operator pos:line="92" pos:column="39">=<pos:position pos:line="92" pos:column="40"/></operator> <operator pos:line="92" pos:column="41">!<pos:position pos:line="92" pos:column="42"/></operator><operator pos:line="92" pos:column="42">!<pos:position pos:line="92" pos:column="43"/></operator><name pos:line="92" pos:column="43">diff_auto_refresh_index<pos:position pos:line="92" pos:column="66"/></name></expr>;<pos:position pos:line="92" pos:column="67"/></expr_stmt>

	<comment type="block" pos:line="94" pos:column="9">/* Scale to real terminal size and respect statGraphWidth config */</comment>
	<expr_stmt><expr><name><name pos:line="95" pos:column="9">rev<pos:position pos:line="95" pos:column="12"/></name><operator pos:line="95" pos:column="12">.<pos:position pos:line="95" pos:column="13"/></operator><name pos:line="95" pos:column="13">diffopt<pos:position pos:line="95" pos:column="20"/></name><operator pos:line="95" pos:column="20">.<pos:position pos:line="95" pos:column="21"/></operator><name pos:line="95" pos:column="21">stat_width<pos:position pos:line="95" pos:column="31"/></name></name> <operator pos:line="95" pos:column="32">=<pos:position pos:line="95" pos:column="33"/></operator> <operator pos:line="95" pos:column="34">-<pos:position pos:line="95" pos:column="35"/></operator><literal type="number" pos:line="95" pos:column="35">1<pos:position pos:line="95" pos:column="36"/></literal></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="96" pos:column="9">rev<pos:position pos:line="96" pos:column="12"/></name><operator pos:line="96" pos:column="12">.<pos:position pos:line="96" pos:column="13"/></operator><name pos:line="96" pos:column="13">diffopt<pos:position pos:line="96" pos:column="20"/></name><operator pos:line="96" pos:column="20">.<pos:position pos:line="96" pos:column="21"/></operator><name pos:line="96" pos:column="21">stat_graph_width<pos:position pos:line="96" pos:column="37"/></name></name> <operator pos:line="96" pos:column="38">=<pos:position pos:line="96" pos:column="39"/></operator> <operator pos:line="96" pos:column="40">-<pos:position pos:line="96" pos:column="41"/></operator><literal type="number" pos:line="96" pos:column="41">1<pos:position pos:line="96" pos:column="42"/></literal></expr>;<pos:position pos:line="96" pos:column="43"/></expr_stmt>

	<comment type="block" pos:line="98" pos:column="9">/* Default to let external and textconv be used */</comment>
	<expr_stmt><expr><call><name pos:line="99" pos:column="9">DIFF_OPT_SET<pos:position pos:line="99" pos:column="21"/></name><argument_list pos:line="99" pos:column="21">(<argument><expr><operator pos:line="99" pos:column="22">&amp;<pos:position pos:line="99" pos:column="27"/></operator><name><name pos:line="99" pos:column="23">rev<pos:position pos:line="99" pos:column="26"/></name><operator pos:line="99" pos:column="26">.<pos:position pos:line="99" pos:column="27"/></operator><name pos:line="99" pos:column="27">diffopt<pos:position pos:line="99" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="36">ALLOW_EXTERNAL<pos:position pos:line="99" pos:column="50"/></name></expr></argument>)<pos:position pos:line="99" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="100" pos:column="9">DIFF_OPT_SET<pos:position pos:line="100" pos:column="21"/></name><argument_list pos:line="100" pos:column="21">(<argument><expr><operator pos:line="100" pos:column="22">&amp;<pos:position pos:line="100" pos:column="27"/></operator><name><name pos:line="100" pos:column="23">rev<pos:position pos:line="100" pos:column="26"/></name><operator pos:line="100" pos:column="26">.<pos:position pos:line="100" pos:column="27"/></operator><name pos:line="100" pos:column="27">diffopt<pos:position pos:line="100" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="36">ALLOW_TEXTCONV<pos:position pos:line="100" pos:column="50"/></name></expr></argument>)<pos:position pos:line="100" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="52"/></expr_stmt>

	<if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><name pos:line="102" pos:column="13">nongit<pos:position pos:line="102" pos:column="19"/></name></expr>)<pos:position pos:line="102" pos:column="20"/></condition><then pos:line="102" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="17">die<pos:position pos:line="103" pos:column="20"/></name><argument_list pos:line="103" pos:column="20">(<argument><expr><call><name pos:line="103" pos:column="21">_<pos:position pos:line="103" pos:column="22"/></name><argument_list pos:line="103" pos:column="22">(<argument><expr><literal type="string" pos:line="103" pos:column="23">"Not a git repository"<pos:position pos:line="103" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="103" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="48"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="104" pos:column="9">argc<pos:position pos:line="104" pos:column="13"/></name> <operator pos:line="104" pos:column="14">=<pos:position pos:line="104" pos:column="15"/></operator> <call><name pos:line="104" pos:column="16">setup_revisions<pos:position pos:line="104" pos:column="31"/></name><argument_list pos:line="104" pos:column="31">(<argument><expr><name pos:line="104" pos:column="32">argc<pos:position pos:line="104" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="38">argv<pos:position pos:line="104" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="44">&amp;<pos:position pos:line="104" pos:column="49"/></operator><name pos:line="104" pos:column="45">rev<pos:position pos:line="104" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="50">NULL<pos:position pos:line="104" pos:column="54"/></name></expr></argument>)<pos:position pos:line="104" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="56"/></expr_stmt>
	<if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><operator pos:line="105" pos:column="13">!<pos:position pos:line="105" pos:column="14"/></operator><name><name pos:line="105" pos:column="14">rev<pos:position pos:line="105" pos:column="17"/></name><operator pos:line="105" pos:column="17">.<pos:position pos:line="105" pos:column="18"/></operator><name pos:line="105" pos:column="18">diffopt<pos:position pos:line="105" pos:column="25"/></name><operator pos:line="105" pos:column="25">.<pos:position pos:line="105" pos:column="26"/></operator><name pos:line="105" pos:column="26">output_format<pos:position pos:line="105" pos:column="39"/></name></name></expr>)<pos:position pos:line="105" pos:column="40"/></condition><then pos:line="105" pos:column="40"> <block pos:line="105" pos:column="41">{
		<expr_stmt><expr><name><name pos:line="106" pos:column="17">rev<pos:position pos:line="106" pos:column="20"/></name><operator pos:line="106" pos:column="20">.<pos:position pos:line="106" pos:column="21"/></operator><name pos:line="106" pos:column="21">diffopt<pos:position pos:line="106" pos:column="28"/></name><operator pos:line="106" pos:column="28">.<pos:position pos:line="106" pos:column="29"/></operator><name pos:line="106" pos:column="29">output_format<pos:position pos:line="106" pos:column="42"/></name></name> <operator pos:line="106" pos:column="43">=<pos:position pos:line="106" pos:column="44"/></operator> <name pos:line="106" pos:column="45">DIFF_FORMAT_PATCH<pos:position pos:line="106" pos:column="62"/></name></expr>;<pos:position pos:line="106" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="107" pos:column="17">diff_setup_done<pos:position pos:line="107" pos:column="32"/></name><argument_list pos:line="107" pos:column="32">(<argument><expr><operator pos:line="107" pos:column="33">&amp;<pos:position pos:line="107" pos:column="38"/></operator><name><name pos:line="107" pos:column="34">rev<pos:position pos:line="107" pos:column="37"/></name><operator pos:line="107" pos:column="37">.<pos:position pos:line="107" pos:column="38"/></operator><name pos:line="107" pos:column="38">diffopt<pos:position pos:line="107" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="108" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="110" pos:column="9">DIFF_OPT_SET<pos:position pos:line="110" pos:column="21"/></name><argument_list pos:line="110" pos:column="21">(<argument><expr><operator pos:line="110" pos:column="22">&amp;<pos:position pos:line="110" pos:column="27"/></operator><name><name pos:line="110" pos:column="23">rev<pos:position pos:line="110" pos:column="26"/></name><operator pos:line="110" pos:column="26">.<pos:position pos:line="110" pos:column="27"/></operator><name pos:line="110" pos:column="27">diffopt<pos:position pos:line="110" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="36">RECURSIVE<pos:position pos:line="110" pos:column="45"/></name></expr></argument>)<pos:position pos:line="110" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="112" pos:column="9">setup_diff_pager<pos:position pos:line="112" pos:column="25"/></name><argument_list pos:line="112" pos:column="25">(<argument><expr><operator pos:line="112" pos:column="26">&amp;<pos:position pos:line="112" pos:column="31"/></operator><name><name pos:line="112" pos:column="27">rev<pos:position pos:line="112" pos:column="30"/></name><operator pos:line="112" pos:column="30">.<pos:position pos:line="112" pos:column="31"/></operator><name pos:line="112" pos:column="31">diffopt<pos:position pos:line="112" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="40"/></expr_stmt>

	<comment type="block" pos:line="114" pos:column="9">/*
	 * Do we have --cached and not have a pending object, then
	 * default to HEAD by hand.  Eek.
	 */</comment>
	<if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><operator pos:line="118" pos:column="13">!<pos:position pos:line="118" pos:column="14"/></operator><name><name pos:line="118" pos:column="14">rev<pos:position pos:line="118" pos:column="17"/></name><operator pos:line="118" pos:column="17">.<pos:position pos:line="118" pos:column="18"/></operator><name pos:line="118" pos:column="18">pending<pos:position pos:line="118" pos:column="25"/></name><operator pos:line="118" pos:column="25">.<pos:position pos:line="118" pos:column="26"/></operator><name pos:line="118" pos:column="26">nr<pos:position pos:line="118" pos:column="28"/></name></name></expr>)<pos:position pos:line="118" pos:column="29"/></condition><then pos:line="118" pos:column="29"> <block pos:line="118" pos:column="30">{
		<decl_stmt><decl><type><name pos:line="119" pos:column="17">int<pos:position pos:line="119" pos:column="20"/></name></type> <name pos:line="119" pos:column="21">i<pos:position pos:line="119" pos:column="22"/></name></decl>;<pos:position pos:line="119" pos:column="23"/></decl_stmt>
		<for pos:line="120" pos:column="17">for <control pos:line="120" pos:column="21">(<init><expr><name pos:line="120" pos:column="22">i<pos:position pos:line="120" pos:column="23"/></name> <operator pos:line="120" pos:column="24">=<pos:position pos:line="120" pos:column="25"/></operator> <literal type="number" pos:line="120" pos:column="26">1<pos:position pos:line="120" pos:column="27"/></literal></expr>;<pos:position pos:line="120" pos:column="28"/></init> <condition><expr><name pos:line="120" pos:column="29">i<pos:position pos:line="120" pos:column="30"/></name> <operator pos:line="120" pos:column="31">&lt;<pos:position pos:line="120" pos:column="35"/></operator> <name pos:line="120" pos:column="33">argc<pos:position pos:line="120" pos:column="37"/></name></expr>;<pos:position pos:line="120" pos:column="38"/></condition> <incr><expr><name pos:line="120" pos:column="39">i<pos:position pos:line="120" pos:column="40"/></name><operator pos:line="120" pos:column="40">++<pos:position pos:line="120" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="120" pos:column="43"/></control> <block pos:line="120" pos:column="44">{
			<decl_stmt><decl><type><specifier pos:line="121" pos:column="25">const<pos:position pos:line="121" pos:column="30"/></specifier> <name pos:line="121" pos:column="31">char<pos:position pos:line="121" pos:column="35"/></name> <modifier pos:line="121" pos:column="36">*<pos:position pos:line="121" pos:column="37"/></modifier></type><name pos:line="121" pos:column="37">arg<pos:position pos:line="121" pos:column="40"/></name> <init pos:line="121" pos:column="41">= <expr><name><name pos:line="121" pos:column="43">argv<pos:position pos:line="121" pos:column="47"/></name><index pos:line="121" pos:column="47">[<expr><name pos:line="121" pos:column="48">i<pos:position pos:line="121" pos:column="49"/></name></expr>]<pos:position pos:line="121" pos:column="50"/></index></name></expr></init></decl>;<pos:position pos:line="121" pos:column="51"/></decl_stmt>
			<if pos:line="122" pos:column="25">if <condition pos:line="122" pos:column="28">(<expr><operator pos:line="122" pos:column="29">!<pos:position pos:line="122" pos:column="30"/></operator><call><name pos:line="122" pos:column="30">strcmp<pos:position pos:line="122" pos:column="36"/></name><argument_list pos:line="122" pos:column="36">(<argument><expr><name pos:line="122" pos:column="37">arg<pos:position pos:line="122" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="42">"--"<pos:position pos:line="122" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="48"/></condition><then pos:line="122" pos:column="48">
				<block type="pseudo"><break pos:line="123" pos:column="33">break;<pos:position pos:line="123" pos:column="39"/></break></block></then>
			<elseif pos:line="124" pos:column="25">else <if pos:line="124" pos:column="30">if <condition pos:line="124" pos:column="33">(<expr><operator pos:line="124" pos:column="34">!<pos:position pos:line="124" pos:column="35"/></operator><call><name pos:line="124" pos:column="35">strcmp<pos:position pos:line="124" pos:column="41"/></name><argument_list pos:line="124" pos:column="41">(<argument><expr><name pos:line="124" pos:column="42">arg<pos:position pos:line="124" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="47">"--cached"<pos:position pos:line="124" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="58"/></argument_list></call> <operator pos:line="124" pos:column="59">||<pos:position pos:line="124" pos:column="61"/></operator>
				 <operator pos:line="125" pos:column="34">!<pos:position pos:line="125" pos:column="35"/></operator><call><name pos:line="125" pos:column="35">strcmp<pos:position pos:line="125" pos:column="41"/></name><argument_list pos:line="125" pos:column="41">(<argument><expr><name pos:line="125" pos:column="42">arg<pos:position pos:line="125" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="47">"--staged"<pos:position pos:line="125" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="125" pos:column="59"/></condition><then pos:line="125" pos:column="59"> <block pos:line="125" pos:column="60">{
				<expr_stmt><expr><call><name pos:line="126" pos:column="33">add_head_to_pending<pos:position pos:line="126" pos:column="52"/></name><argument_list pos:line="126" pos:column="52">(<argument><expr><operator pos:line="126" pos:column="53">&amp;<pos:position pos:line="126" pos:column="58"/></operator><name pos:line="126" pos:column="54">rev<pos:position pos:line="126" pos:column="57"/></name></expr></argument>)<pos:position pos:line="126" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="59"/></expr_stmt>
				<if pos:line="127" pos:column="33">if <condition pos:line="127" pos:column="36">(<expr><operator pos:line="127" pos:column="37">!<pos:position pos:line="127" pos:column="38"/></operator><name><name pos:line="127" pos:column="38">rev<pos:position pos:line="127" pos:column="41"/></name><operator pos:line="127" pos:column="41">.<pos:position pos:line="127" pos:column="42"/></operator><name pos:line="127" pos:column="42">pending<pos:position pos:line="127" pos:column="49"/></name><operator pos:line="127" pos:column="49">.<pos:position pos:line="127" pos:column="50"/></operator><name pos:line="127" pos:column="50">nr<pos:position pos:line="127" pos:column="52"/></name></name></expr>)<pos:position pos:line="127" pos:column="53"/></condition><then pos:line="127" pos:column="53"> <block pos:line="127" pos:column="54">{
					<decl_stmt><decl><type><name><name pos:line="128" pos:column="41">struct<pos:position pos:line="128" pos:column="47"/></name> <name pos:line="128" pos:column="48">tree<pos:position pos:line="128" pos:column="52"/></name></name> <modifier pos:line="128" pos:column="53">*<pos:position pos:line="128" pos:column="54"/></modifier></type><name pos:line="128" pos:column="54">tree<pos:position pos:line="128" pos:column="58"/></name></decl>;<pos:position pos:line="128" pos:column="59"/></decl_stmt>
					<expr_stmt><expr><name pos:line="129" pos:column="41">tree<pos:position pos:line="129" pos:column="45"/></name> <operator pos:line="129" pos:column="46">=<pos:position pos:line="129" pos:column="47"/></operator> <call><name pos:line="129" pos:column="48">lookup_tree<pos:position pos:line="129" pos:column="59"/></name><argument_list pos:line="129" pos:column="59">(<argument><expr><name pos:line="129" pos:column="60">EMPTY_TREE_SHA1_BIN<pos:position pos:line="129" pos:column="79"/></name></expr></argument>)<pos:position pos:line="129" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="81"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="130" pos:column="41">add_pending_object<pos:position pos:line="130" pos:column="59"/></name><argument_list pos:line="130" pos:column="59">(<argument><expr><operator pos:line="130" pos:column="60">&amp;<pos:position pos:line="130" pos:column="65"/></operator><name pos:line="130" pos:column="61">rev<pos:position pos:line="130" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="66">&amp;<pos:position pos:line="130" pos:column="71"/></operator><name><name pos:line="130" pos:column="67">tree<pos:position pos:line="130" pos:column="71"/></name><operator pos:line="130" pos:column="71">-&gt;<pos:position pos:line="130" pos:column="76"/></operator><name pos:line="130" pos:column="73">object<pos:position pos:line="130" pos:column="79"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="81">"HEAD"<pos:position pos:line="130" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="89"/></expr_stmt>
				}<pos:position pos:line="131" pos:column="34"/></block></then></if>
				<break pos:line="132" pos:column="33">break;<pos:position pos:line="132" pos:column="39"/></break>
			}<pos:position pos:line="133" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="134" pos:column="18"/></block></for>
	}<pos:position pos:line="135" pos:column="10"/></block></then></if>

	<for pos:line="137" pos:column="9">for <control pos:line="137" pos:column="13">(<init><expr><name pos:line="137" pos:column="14">i<pos:position pos:line="137" pos:column="15"/></name> <operator pos:line="137" pos:column="16">=<pos:position pos:line="137" pos:column="17"/></operator> <literal type="number" pos:line="137" pos:column="18">0<pos:position pos:line="137" pos:column="19"/></literal></expr>;<pos:position pos:line="137" pos:column="20"/></init> <condition><expr><name pos:line="137" pos:column="21">i<pos:position pos:line="137" pos:column="22"/></name> <operator pos:line="137" pos:column="23">&lt;<pos:position pos:line="137" pos:column="27"/></operator> <name><name pos:line="137" pos:column="25">rev<pos:position pos:line="137" pos:column="28"/></name><operator pos:line="137" pos:column="28">.<pos:position pos:line="137" pos:column="29"/></operator><name pos:line="137" pos:column="29">pending<pos:position pos:line="137" pos:column="36"/></name><operator pos:line="137" pos:column="36">.<pos:position pos:line="137" pos:column="37"/></operator><name pos:line="137" pos:column="37">nr<pos:position pos:line="137" pos:column="39"/></name></name></expr>;<pos:position pos:line="137" pos:column="40"/></condition> <incr><expr><name pos:line="137" pos:column="41">i<pos:position pos:line="137" pos:column="42"/></name><operator pos:line="137" pos:column="42">++<pos:position pos:line="137" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="137" pos:column="45"/></control> <block pos:line="137" pos:column="46">{
		<decl_stmt><decl><type><name><name pos:line="138" pos:column="17">struct<pos:position pos:line="138" pos:column="23"/></name> <name pos:line="138" pos:column="24">object_array_entry<pos:position pos:line="138" pos:column="42"/></name></name> <modifier pos:line="138" pos:column="43">*<pos:position pos:line="138" pos:column="44"/></modifier></type><name pos:line="138" pos:column="44">entry<pos:position pos:line="138" pos:column="49"/></name> <init pos:line="138" pos:column="50">= <expr><operator pos:line="138" pos:column="52">&amp;<pos:position pos:line="138" pos:column="57"/></operator><name><name pos:line="138" pos:column="53">rev<pos:position pos:line="138" pos:column="56"/></name><operator pos:line="138" pos:column="56">.<pos:position pos:line="138" pos:column="57"/></operator><name pos:line="138" pos:column="57">pending<pos:position pos:line="138" pos:column="64"/></name><operator pos:line="138" pos:column="64">.<pos:position pos:line="138" pos:column="65"/></operator><name pos:line="138" pos:column="65">objects<pos:position pos:line="138" pos:column="72"/></name><index pos:line="138" pos:column="72">[<expr><name pos:line="138" pos:column="73">i<pos:position pos:line="138" pos:column="74"/></name></expr>]<pos:position pos:line="138" pos:column="75"/></index></name></expr></init></decl>;<pos:position pos:line="138" pos:column="76"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="139" pos:column="17">struct<pos:position pos:line="139" pos:column="23"/></name> <name pos:line="139" pos:column="24">object<pos:position pos:line="139" pos:column="30"/></name></name> <modifier pos:line="139" pos:column="31">*<pos:position pos:line="139" pos:column="32"/></modifier></type><name pos:line="139" pos:column="32">obj<pos:position pos:line="139" pos:column="35"/></name> <init pos:line="139" pos:column="36">= <expr><name><name pos:line="139" pos:column="38">entry<pos:position pos:line="139" pos:column="43"/></name><operator pos:line="139" pos:column="43">-&gt;<pos:position pos:line="139" pos:column="48"/></operator><name pos:line="139" pos:column="45">item<pos:position pos:line="139" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="139" pos:column="50"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="140" pos:column="17">const<pos:position pos:line="140" pos:column="22"/></specifier> <name pos:line="140" pos:column="23">char<pos:position pos:line="140" pos:column="27"/></name> <modifier pos:line="140" pos:column="28">*<pos:position pos:line="140" pos:column="29"/></modifier></type><name pos:line="140" pos:column="29">name<pos:position pos:line="140" pos:column="33"/></name> <init pos:line="140" pos:column="34">= <expr><name><name pos:line="140" pos:column="36">entry<pos:position pos:line="140" pos:column="41"/></name><operator pos:line="140" pos:column="41">-&gt;<pos:position pos:line="140" pos:column="46"/></operator><name pos:line="140" pos:column="43">name<pos:position pos:line="140" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="140" pos:column="48"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="141" pos:column="17">int<pos:position pos:line="141" pos:column="20"/></name></type> <name pos:line="141" pos:column="21">flags<pos:position pos:line="141" pos:column="26"/></name> <init pos:line="141" pos:column="27">= <expr><operator pos:line="141" pos:column="29">(<pos:position pos:line="141" pos:column="30"/></operator><name><name pos:line="141" pos:column="30">obj<pos:position pos:line="141" pos:column="33"/></name><operator pos:line="141" pos:column="33">-&gt;<pos:position pos:line="141" pos:column="38"/></operator><name pos:line="141" pos:column="35">flags<pos:position pos:line="141" pos:column="40"/></name></name> <operator pos:line="141" pos:column="41">&amp;<pos:position pos:line="141" pos:column="46"/></operator> <name pos:line="141" pos:column="43">UNINTERESTING<pos:position pos:line="141" pos:column="56"/></name><operator pos:line="141" pos:column="56">)<pos:position pos:line="141" pos:column="57"/></operator></expr></init></decl>;<pos:position pos:line="141" pos:column="58"/></decl_stmt>
		<if pos:line="142" pos:column="17">if <condition pos:line="142" pos:column="20">(<expr><operator pos:line="142" pos:column="21">!<pos:position pos:line="142" pos:column="22"/></operator><name><name pos:line="142" pos:column="22">obj<pos:position pos:line="142" pos:column="25"/></name><operator pos:line="142" pos:column="25">-&gt;<pos:position pos:line="142" pos:column="30"/></operator><name pos:line="142" pos:column="27">parsed<pos:position pos:line="142" pos:column="33"/></name></name></expr>)<pos:position pos:line="142" pos:column="34"/></condition><then pos:line="142" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name pos:line="143" pos:column="25">obj<pos:position pos:line="143" pos:column="28"/></name> <operator pos:line="143" pos:column="29">=<pos:position pos:line="143" pos:column="30"/></operator> <call><name pos:line="143" pos:column="31">parse_object<pos:position pos:line="143" pos:column="43"/></name><argument_list pos:line="143" pos:column="43">(<argument><expr><name><name pos:line="143" pos:column="44">obj<pos:position pos:line="143" pos:column="47"/></name><operator pos:line="143" pos:column="47">-&gt;<pos:position pos:line="143" pos:column="52"/></operator><name pos:line="143" pos:column="49">oid<pos:position pos:line="143" pos:column="52"/></name><operator pos:line="143" pos:column="52">.<pos:position pos:line="143" pos:column="53"/></operator><name pos:line="143" pos:column="53">hash<pos:position pos:line="143" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="143" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="59"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="144" pos:column="17">obj<pos:position pos:line="144" pos:column="20"/></name> <operator pos:line="144" pos:column="21">=<pos:position pos:line="144" pos:column="22"/></operator> <call><name pos:line="144" pos:column="23">deref_tag<pos:position pos:line="144" pos:column="32"/></name><argument_list pos:line="144" pos:column="32">(<argument><expr><name pos:line="144" pos:column="33">obj<pos:position pos:line="144" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="38">NULL<pos:position pos:line="144" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="44">0<pos:position pos:line="144" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="47"/></expr_stmt>
		<if pos:line="145" pos:column="17">if <condition pos:line="145" pos:column="20">(<expr><operator pos:line="145" pos:column="21">!<pos:position pos:line="145" pos:column="22"/></operator><name pos:line="145" pos:column="22">obj<pos:position pos:line="145" pos:column="25"/></name></expr>)<pos:position pos:line="145" pos:column="26"/></condition><then pos:line="145" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="146" pos:column="25">die<pos:position pos:line="146" pos:column="28"/></name><argument_list pos:line="146" pos:column="28">(<argument><expr><call><name pos:line="146" pos:column="29">_<pos:position pos:line="146" pos:column="30"/></name><argument_list pos:line="146" pos:column="30">(<argument><expr><literal type="string" pos:line="146" pos:column="31">"invalid object '%s' given."<pos:position pos:line="146" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="146" pos:column="62">name<pos:position pos:line="146" pos:column="66"/></name></expr></argument>)<pos:position pos:line="146" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="68"/></expr_stmt></block></then></if>
		<if pos:line="147" pos:column="17">if <condition pos:line="147" pos:column="20">(<expr><name><name pos:line="147" pos:column="21">obj<pos:position pos:line="147" pos:column="24"/></name><operator pos:line="147" pos:column="24">-&gt;<pos:position pos:line="147" pos:column="29"/></operator><name pos:line="147" pos:column="26">type<pos:position pos:line="147" pos:column="30"/></name></name> <operator pos:line="147" pos:column="31">==<pos:position pos:line="147" pos:column="33"/></operator> <name pos:line="147" pos:column="34">OBJ_COMMIT<pos:position pos:line="147" pos:column="44"/></name></expr>)<pos:position pos:line="147" pos:column="45"/></condition><then pos:line="147" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><name pos:line="148" pos:column="25">obj<pos:position pos:line="148" pos:column="28"/></name> <operator pos:line="148" pos:column="29">=<pos:position pos:line="148" pos:column="30"/></operator> <operator pos:line="148" pos:column="31">&amp;<pos:position pos:line="148" pos:column="36"/></operator><operator pos:line="148" pos:column="32">(<pos:position pos:line="148" pos:column="33"/></operator><operator pos:line="148" pos:column="33">(<pos:position pos:line="148" pos:column="34"/></operator>struct <name pos:line="148" pos:column="41">commit<pos:position pos:line="148" pos:column="47"/></name> <operator pos:line="148" pos:column="48">*<pos:position pos:line="148" pos:column="49"/></operator><operator pos:line="148" pos:column="49">)<pos:position pos:line="148" pos:column="50"/></operator><name pos:line="148" pos:column="50">obj<pos:position pos:line="148" pos:column="53"/></name><operator pos:line="148" pos:column="53">)<pos:position pos:line="148" pos:column="54"/></operator><operator pos:line="148" pos:column="54">-&gt;<pos:position pos:line="148" pos:column="59"/></operator><name><name pos:line="148" pos:column="56">tree<pos:position pos:line="148" pos:column="60"/></name><operator pos:line="148" pos:column="60">-&gt;<pos:position pos:line="148" pos:column="65"/></operator><name pos:line="148" pos:column="62">object<pos:position pos:line="148" pos:column="68"/></name></name></expr>;<pos:position pos:line="148" pos:column="69"/></expr_stmt></block></then></if>

		<if pos:line="150" pos:column="17">if <condition pos:line="150" pos:column="20">(<expr><name><name pos:line="150" pos:column="21">obj<pos:position pos:line="150" pos:column="24"/></name><operator pos:line="150" pos:column="24">-&gt;<pos:position pos:line="150" pos:column="29"/></operator><name pos:line="150" pos:column="26">type<pos:position pos:line="150" pos:column="30"/></name></name> <operator pos:line="150" pos:column="31">==<pos:position pos:line="150" pos:column="33"/></operator> <name pos:line="150" pos:column="34">OBJ_TREE<pos:position pos:line="150" pos:column="42"/></name></expr>)<pos:position pos:line="150" pos:column="43"/></condition><then pos:line="150" pos:column="43"> <block pos:line="150" pos:column="44">{
			<expr_stmt><expr><name><name pos:line="151" pos:column="25">obj<pos:position pos:line="151" pos:column="28"/></name><operator pos:line="151" pos:column="28">-&gt;<pos:position pos:line="151" pos:column="33"/></operator><name pos:line="151" pos:column="30">flags<pos:position pos:line="151" pos:column="35"/></name></name> <operator pos:line="151" pos:column="36">|=<pos:position pos:line="151" pos:column="38"/></operator> <name pos:line="151" pos:column="39">flags<pos:position pos:line="151" pos:column="44"/></name></expr>;<pos:position pos:line="151" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="152" pos:column="25">add_object_array<pos:position pos:line="152" pos:column="41"/></name><argument_list pos:line="152" pos:column="41">(<argument><expr><name pos:line="152" pos:column="42">obj<pos:position pos:line="152" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="47">name<pos:position pos:line="152" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="152" pos:column="53">&amp;<pos:position pos:line="152" pos:column="58"/></operator><name pos:line="152" pos:column="54">ent<pos:position pos:line="152" pos:column="57"/></name></expr></argument>)<pos:position pos:line="152" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="153" pos:column="18"/></block></then> <elseif pos:line="153" pos:column="19">else <if pos:line="153" pos:column="24">if <condition pos:line="153" pos:column="27">(<expr><name><name pos:line="153" pos:column="28">obj<pos:position pos:line="153" pos:column="31"/></name><operator pos:line="153" pos:column="31">-&gt;<pos:position pos:line="153" pos:column="36"/></operator><name pos:line="153" pos:column="33">type<pos:position pos:line="153" pos:column="37"/></name></name> <operator pos:line="153" pos:column="38">==<pos:position pos:line="153" pos:column="40"/></operator> <name pos:line="153" pos:column="41">OBJ_BLOB<pos:position pos:line="153" pos:column="49"/></name></expr>)<pos:position pos:line="153" pos:column="50"/></condition><then pos:line="153" pos:column="50"> <block pos:line="153" pos:column="51">{
			<if pos:line="154" pos:column="25">if <condition pos:line="154" pos:column="28">(<expr><literal type="number" pos:line="154" pos:column="29">2<pos:position pos:line="154" pos:column="30"/></literal> <operator pos:line="154" pos:column="31">&lt;=<pos:position pos:line="154" pos:column="36"/></operator> <name pos:line="154" pos:column="34">blobs<pos:position pos:line="154" pos:column="39"/></name></expr>)<pos:position pos:line="154" pos:column="40"/></condition><then pos:line="154" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="155" pos:column="33">die<pos:position pos:line="155" pos:column="36"/></name><argument_list pos:line="155" pos:column="36">(<argument><expr><call><name pos:line="155" pos:column="37">_<pos:position pos:line="155" pos:column="38"/></name><argument_list pos:line="155" pos:column="38">(<argument><expr><literal type="string" pos:line="155" pos:column="39">"more than two blobs given: '%s'"<pos:position pos:line="155" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="155" pos:column="75">name<pos:position pos:line="155" pos:column="79"/></name></expr></argument>)<pos:position pos:line="155" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="81"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="156" pos:column="25">blob<pos:position pos:line="156" pos:column="29"/></name><index pos:line="156" pos:column="29">[<expr><name pos:line="156" pos:column="30">blobs<pos:position pos:line="156" pos:column="35"/></name></expr>]<pos:position pos:line="156" pos:column="36"/></index></name> <operator pos:line="156" pos:column="37">=<pos:position pos:line="156" pos:column="38"/></operator> <name pos:line="156" pos:column="39">entry<pos:position pos:line="156" pos:column="44"/></name></expr>;<pos:position pos:line="156" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="157" pos:column="25">blobs<pos:position pos:line="157" pos:column="30"/></name><operator pos:line="157" pos:column="30">++<pos:position pos:line="157" pos:column="32"/></operator></expr>;<pos:position pos:line="157" pos:column="33"/></expr_stmt>

		}<pos:position pos:line="159" pos:column="18"/></block></then></if></elseif> <else pos:line="159" pos:column="19">else <block pos:line="159" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="160" pos:column="25">die<pos:position pos:line="160" pos:column="28"/></name><argument_list pos:line="160" pos:column="28">(<argument><expr><call><name pos:line="160" pos:column="29">_<pos:position pos:line="160" pos:column="30"/></name><argument_list pos:line="160" pos:column="30">(<argument><expr><literal type="string" pos:line="160" pos:column="31">"unhandled object '%s' given."<pos:position pos:line="160" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="160" pos:column="64">name<pos:position pos:line="160" pos:column="68"/></name></expr></argument>)<pos:position pos:line="160" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="70"/></expr_stmt>
		}<pos:position pos:line="161" pos:column="18"/></block></else></if>
	}<pos:position pos:line="162" pos:column="10"/></block></for>
	<if pos:line="163" pos:column="9">if <condition pos:line="163" pos:column="12">(<expr><name><name pos:line="163" pos:column="13">rev<pos:position pos:line="163" pos:column="16"/></name><operator pos:line="163" pos:column="16">.<pos:position pos:line="163" pos:column="17"/></operator><name pos:line="163" pos:column="17">prune_data<pos:position pos:line="163" pos:column="27"/></name><operator pos:line="163" pos:column="27">.<pos:position pos:line="163" pos:column="28"/></operator><name pos:line="163" pos:column="28">nr<pos:position pos:line="163" pos:column="30"/></name></name></expr>)<pos:position pos:line="163" pos:column="31"/></condition><then pos:line="163" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="164" pos:column="17">paths<pos:position pos:line="164" pos:column="22"/></name> <operator pos:line="164" pos:column="23">+=<pos:position pos:line="164" pos:column="25"/></operator> <name><name pos:line="164" pos:column="26">rev<pos:position pos:line="164" pos:column="29"/></name><operator pos:line="164" pos:column="29">.<pos:position pos:line="164" pos:column="30"/></operator><name pos:line="164" pos:column="30">prune_data<pos:position pos:line="164" pos:column="40"/></name><operator pos:line="164" pos:column="40">.<pos:position pos:line="164" pos:column="41"/></operator><name pos:line="164" pos:column="41">nr<pos:position pos:line="164" pos:column="43"/></name></name></expr>;<pos:position pos:line="164" pos:column="44"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="166" pos:column="9">/*
	 * Now, do the arguments look reasonable?
	 */</comment>
	<if pos:line="169" pos:column="9">if <condition pos:line="169" pos:column="12">(<expr><operator pos:line="169" pos:column="13">!<pos:position pos:line="169" pos:column="14"/></operator><name><name pos:line="169" pos:column="14">ent<pos:position pos:line="169" pos:column="17"/></name><operator pos:line="169" pos:column="17">.<pos:position pos:line="169" pos:column="18"/></operator><name pos:line="169" pos:column="18">nr<pos:position pos:line="169" pos:column="20"/></name></name></expr>)<pos:position pos:line="169" pos:column="21"/></condition><then pos:line="169" pos:column="21"> <block pos:line="169" pos:column="22">{
		<switch pos:line="170" pos:column="17">switch <condition pos:line="170" pos:column="24">(<expr><name pos:line="170" pos:column="25">blobs<pos:position pos:line="170" pos:column="30"/></name></expr>)<pos:position pos:line="170" pos:column="31"/></condition> <block pos:line="170" pos:column="32">{
		<case pos:line="171" pos:column="17">case <expr><literal type="number" pos:line="171" pos:column="22">0<pos:position pos:line="171" pos:column="23"/></literal></expr>:<pos:position pos:line="171" pos:column="24"/></case>
			<expr_stmt><expr><name pos:line="172" pos:column="25">result<pos:position pos:line="172" pos:column="31"/></name> <operator pos:line="172" pos:column="32">=<pos:position pos:line="172" pos:column="33"/></operator> <call><name pos:line="172" pos:column="34">builtin_diff_files<pos:position pos:line="172" pos:column="52"/></name><argument_list pos:line="172" pos:column="52">(<argument><expr><operator pos:line="172" pos:column="53">&amp;<pos:position pos:line="172" pos:column="58"/></operator><name pos:line="172" pos:column="54">rev<pos:position pos:line="172" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="59">argc<pos:position pos:line="172" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="65">argv<pos:position pos:line="172" pos:column="69"/></name></expr></argument>)<pos:position pos:line="172" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="71"/></expr_stmt>
			<break pos:line="173" pos:column="25">break;<pos:position pos:line="173" pos:column="31"/></break>
		<case pos:line="174" pos:column="17">case <expr><literal type="number" pos:line="174" pos:column="22">1<pos:position pos:line="174" pos:column="23"/></literal></expr>:<pos:position pos:line="174" pos:column="24"/></case>
			<if pos:line="175" pos:column="25">if <condition pos:line="175" pos:column="28">(<expr><name pos:line="175" pos:column="29">paths<pos:position pos:line="175" pos:column="34"/></name> <operator pos:line="175" pos:column="35">!=<pos:position pos:line="175" pos:column="37"/></operator> <literal type="number" pos:line="175" pos:column="38">1<pos:position pos:line="175" pos:column="39"/></literal></expr>)<pos:position pos:line="175" pos:column="40"/></condition><then pos:line="175" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="176" pos:column="33">usage<pos:position pos:line="176" pos:column="38"/></name><argument_list pos:line="176" pos:column="38">(<argument><expr><name pos:line="176" pos:column="39">builtin_diff_usage<pos:position pos:line="176" pos:column="57"/></name></expr></argument>)<pos:position pos:line="176" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="59"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="177" pos:column="25">result<pos:position pos:line="177" pos:column="31"/></name> <operator pos:line="177" pos:column="32">=<pos:position pos:line="177" pos:column="33"/></operator> <call><name pos:line="177" pos:column="34">builtin_diff_b_f<pos:position pos:line="177" pos:column="50"/></name><argument_list pos:line="177" pos:column="50">(<argument><expr><operator pos:line="177" pos:column="51">&amp;<pos:position pos:line="177" pos:column="56"/></operator><name pos:line="177" pos:column="52">rev<pos:position pos:line="177" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="57">argc<pos:position pos:line="177" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="63">argv<pos:position pos:line="177" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="69">blob<pos:position pos:line="177" pos:column="73"/></name></expr></argument>)<pos:position pos:line="177" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="75"/></expr_stmt>
			<break pos:line="178" pos:column="25">break;<pos:position pos:line="178" pos:column="31"/></break>
		<case pos:line="179" pos:column="17">case <expr><literal type="number" pos:line="179" pos:column="22">2<pos:position pos:line="179" pos:column="23"/></literal></expr>:<pos:position pos:line="179" pos:column="24"/></case>
			<if pos:line="180" pos:column="25">if <condition pos:line="180" pos:column="28">(<expr><name pos:line="180" pos:column="29">paths<pos:position pos:line="180" pos:column="34"/></name></expr>)<pos:position pos:line="180" pos:column="35"/></condition><then pos:line="180" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="181" pos:column="33">usage<pos:position pos:line="181" pos:column="38"/></name><argument_list pos:line="181" pos:column="38">(<argument><expr><name pos:line="181" pos:column="39">builtin_diff_usage<pos:position pos:line="181" pos:column="57"/></name></expr></argument>)<pos:position pos:line="181" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="59"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="182" pos:column="25">result<pos:position pos:line="182" pos:column="31"/></name> <operator pos:line="182" pos:column="32">=<pos:position pos:line="182" pos:column="33"/></operator> <call><name pos:line="182" pos:column="34">builtin_diff_blobs<pos:position pos:line="182" pos:column="52"/></name><argument_list pos:line="182" pos:column="52">(<argument><expr><operator pos:line="182" pos:column="53">&amp;<pos:position pos:line="182" pos:column="58"/></operator><name pos:line="182" pos:column="54">rev<pos:position pos:line="182" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="59">argc<pos:position pos:line="182" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="65">argv<pos:position pos:line="182" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="71">blob<pos:position pos:line="182" pos:column="75"/></name></expr></argument>)<pos:position pos:line="182" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="77"/></expr_stmt>
			<break pos:line="183" pos:column="25">break;<pos:position pos:line="183" pos:column="31"/></break>
		<default pos:line="184" pos:column="17">default:<pos:position pos:line="184" pos:column="25"/></default>
			<expr_stmt><expr><call><name pos:line="185" pos:column="25">usage<pos:position pos:line="185" pos:column="30"/></name><argument_list pos:line="185" pos:column="30">(<argument><expr><name pos:line="185" pos:column="31">builtin_diff_usage<pos:position pos:line="185" pos:column="49"/></name></expr></argument>)<pos:position pos:line="185" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="186" pos:column="18"/></block></switch>
	}<pos:position pos:line="187" pos:column="10"/></block></then>
	<elseif pos:line="188" pos:column="9">else <if pos:line="188" pos:column="14">if <condition pos:line="188" pos:column="17">(<expr><name pos:line="188" pos:column="18">blobs<pos:position pos:line="188" pos:column="23"/></name></expr>)<pos:position pos:line="188" pos:column="24"/></condition><then pos:line="188" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="189" pos:column="17">usage<pos:position pos:line="189" pos:column="22"/></name><argument_list pos:line="189" pos:column="22">(<argument><expr><name pos:line="189" pos:column="23">builtin_diff_usage<pos:position pos:line="189" pos:column="41"/></name></expr></argument>)<pos:position pos:line="189" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="43"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="190" pos:column="9">else <if pos:line="190" pos:column="14">if <condition pos:line="190" pos:column="17">(<expr><name><name pos:line="190" pos:column="18">ent<pos:position pos:line="190" pos:column="21"/></name><operator pos:line="190" pos:column="21">.<pos:position pos:line="190" pos:column="22"/></operator><name pos:line="190" pos:column="22">nr<pos:position pos:line="190" pos:column="24"/></name></name> <operator pos:line="190" pos:column="25">==<pos:position pos:line="190" pos:column="27"/></operator> <literal type="number" pos:line="190" pos:column="28">1<pos:position pos:line="190" pos:column="29"/></literal></expr>)<pos:position pos:line="190" pos:column="30"/></condition><then pos:line="190" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="191" pos:column="17">result<pos:position pos:line="191" pos:column="23"/></name> <operator pos:line="191" pos:column="24">=<pos:position pos:line="191" pos:column="25"/></operator> <call><name pos:line="191" pos:column="26">builtin_diff_index<pos:position pos:line="191" pos:column="44"/></name><argument_list pos:line="191" pos:column="44">(<argument><expr><operator pos:line="191" pos:column="45">&amp;<pos:position pos:line="191" pos:column="50"/></operator><name pos:line="191" pos:column="46">rev<pos:position pos:line="191" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="51">argc<pos:position pos:line="191" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="57">argv<pos:position pos:line="191" pos:column="61"/></name></expr></argument>)<pos:position pos:line="191" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="63"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="192" pos:column="9">else <if pos:line="192" pos:column="14">if <condition pos:line="192" pos:column="17">(<expr><name><name pos:line="192" pos:column="18">ent<pos:position pos:line="192" pos:column="21"/></name><operator pos:line="192" pos:column="21">.<pos:position pos:line="192" pos:column="22"/></operator><name pos:line="192" pos:column="22">nr<pos:position pos:line="192" pos:column="24"/></name></name> <operator pos:line="192" pos:column="25">==<pos:position pos:line="192" pos:column="27"/></operator> <literal type="number" pos:line="192" pos:column="28">2<pos:position pos:line="192" pos:column="29"/></literal></expr>)<pos:position pos:line="192" pos:column="30"/></condition><then pos:line="192" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="193" pos:column="17">result<pos:position pos:line="193" pos:column="23"/></name> <operator pos:line="193" pos:column="24">=<pos:position pos:line="193" pos:column="25"/></operator> <call><name pos:line="193" pos:column="26">builtin_diff_tree<pos:position pos:line="193" pos:column="43"/></name><argument_list pos:line="193" pos:column="43">(<argument><expr><operator pos:line="193" pos:column="44">&amp;<pos:position pos:line="193" pos:column="49"/></operator><name pos:line="193" pos:column="45">rev<pos:position pos:line="193" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="50">argc<pos:position pos:line="193" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="56">argv<pos:position pos:line="193" pos:column="60"/></name></expr></argument>,
					   <argument><expr><operator pos:line="194" pos:column="44">&amp;<pos:position pos:line="194" pos:column="49"/></operator><name><name pos:line="194" pos:column="45">ent<pos:position pos:line="194" pos:column="48"/></name><operator pos:line="194" pos:column="48">.<pos:position pos:line="194" pos:column="49"/></operator><name pos:line="194" pos:column="49">objects<pos:position pos:line="194" pos:column="56"/></name><index pos:line="194" pos:column="56">[<expr><literal type="number" pos:line="194" pos:column="57">0<pos:position pos:line="194" pos:column="58"/></literal></expr>]<pos:position pos:line="194" pos:column="59"/></index></name></expr></argument>, <argument><expr><operator pos:line="194" pos:column="61">&amp;<pos:position pos:line="194" pos:column="66"/></operator><name><name pos:line="194" pos:column="62">ent<pos:position pos:line="194" pos:column="65"/></name><operator pos:line="194" pos:column="65">.<pos:position pos:line="194" pos:column="66"/></operator><name pos:line="194" pos:column="66">objects<pos:position pos:line="194" pos:column="73"/></name><index pos:line="194" pos:column="73">[<expr><literal type="number" pos:line="194" pos:column="74">1<pos:position pos:line="194" pos:column="75"/></literal></expr>]<pos:position pos:line="194" pos:column="76"/></index></name></expr></argument>)<pos:position pos:line="194" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="78"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="195" pos:column="9">else <if pos:line="195" pos:column="14">if <condition pos:line="195" pos:column="17">(<expr><name><name pos:line="195" pos:column="18">ent<pos:position pos:line="195" pos:column="21"/></name><operator pos:line="195" pos:column="21">.<pos:position pos:line="195" pos:column="22"/></operator><name pos:line="195" pos:column="22">objects<pos:position pos:line="195" pos:column="29"/></name><index pos:line="195" pos:column="29">[<expr><literal type="number" pos:line="195" pos:column="30">0<pos:position pos:line="195" pos:column="31"/></literal></expr>]<pos:position pos:line="195" pos:column="32"/></index></name><operator pos:line="195" pos:column="32">.<pos:position pos:line="195" pos:column="33"/></operator><name><name pos:line="195" pos:column="33">item<pos:position pos:line="195" pos:column="37"/></name><operator pos:line="195" pos:column="37">-&gt;<pos:position pos:line="195" pos:column="42"/></operator><name pos:line="195" pos:column="39">flags<pos:position pos:line="195" pos:column="44"/></name></name> <operator pos:line="195" pos:column="45">&amp;<pos:position pos:line="195" pos:column="50"/></operator> <name pos:line="195" pos:column="47">UNINTERESTING<pos:position pos:line="195" pos:column="60"/></name></expr>)<pos:position pos:line="195" pos:column="61"/></condition><then pos:line="195" pos:column="61"> <block pos:line="195" pos:column="62">{
		<comment type="block" pos:line="196" pos:column="17">/*
		 * diff A...B where there is at least one merge base
		 * between A and B.  We have ent.objects[0] ==
		 * merge-base, ent.objects[ents-2] == A, and
		 * ent.objects[ents-1] == B.  Show diff between the
		 * base and B.  Note that we pick one merge base at
		 * random if there are more than one.
		 */</comment>
		<expr_stmt><expr><name pos:line="204" pos:column="17">result<pos:position pos:line="204" pos:column="23"/></name> <operator pos:line="204" pos:column="24">=<pos:position pos:line="204" pos:column="25"/></operator> <call><name pos:line="204" pos:column="26">builtin_diff_tree<pos:position pos:line="204" pos:column="43"/></name><argument_list pos:line="204" pos:column="43">(<argument><expr><operator pos:line="204" pos:column="44">&amp;<pos:position pos:line="204" pos:column="49"/></operator><name pos:line="204" pos:column="45">rev<pos:position pos:line="204" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="50">argc<pos:position pos:line="204" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="56">argv<pos:position pos:line="204" pos:column="60"/></name></expr></argument>,
					   <argument><expr><operator pos:line="205" pos:column="44">&amp;<pos:position pos:line="205" pos:column="49"/></operator><name><name pos:line="205" pos:column="45">ent<pos:position pos:line="205" pos:column="48"/></name><operator pos:line="205" pos:column="48">.<pos:position pos:line="205" pos:column="49"/></operator><name pos:line="205" pos:column="49">objects<pos:position pos:line="205" pos:column="56"/></name><index pos:line="205" pos:column="56">[<expr><literal type="number" pos:line="205" pos:column="57">0<pos:position pos:line="205" pos:column="58"/></literal></expr>]<pos:position pos:line="205" pos:column="59"/></index></name></expr></argument>,
					   <argument><expr><operator pos:line="206" pos:column="44">&amp;<pos:position pos:line="206" pos:column="49"/></operator><name><name pos:line="206" pos:column="45">ent<pos:position pos:line="206" pos:column="48"/></name><operator pos:line="206" pos:column="48">.<pos:position pos:line="206" pos:column="49"/></operator><name pos:line="206" pos:column="49">objects<pos:position pos:line="206" pos:column="56"/></name><index pos:line="206" pos:column="56">[<expr><name><name pos:line="206" pos:column="57">ent<pos:position pos:line="206" pos:column="60"/></name><operator pos:line="206" pos:column="60">.<pos:position pos:line="206" pos:column="61"/></operator><name pos:line="206" pos:column="61">nr<pos:position pos:line="206" pos:column="63"/></name></name><operator pos:line="206" pos:column="63">-<pos:position pos:line="206" pos:column="64"/></operator><literal type="number" pos:line="206" pos:column="64">1<pos:position pos:line="206" pos:column="65"/></literal></expr>]<pos:position pos:line="206" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="206" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="207" pos:column="10"/></block></then></if></elseif> <else pos:line="207" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="208" pos:column="17">result<pos:position pos:line="208" pos:column="23"/></name> <operator pos:line="208" pos:column="24">=<pos:position pos:line="208" pos:column="25"/></operator> <call><name pos:line="208" pos:column="26">builtin_diff_combined<pos:position pos:line="208" pos:column="47"/></name><argument_list pos:line="208" pos:column="47">(<argument><expr><operator pos:line="208" pos:column="48">&amp;<pos:position pos:line="208" pos:column="53"/></operator><name pos:line="208" pos:column="49">rev<pos:position pos:line="208" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="54">argc<pos:position pos:line="208" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="60">argv<pos:position pos:line="208" pos:column="64"/></name></expr></argument>,
					       <argument><expr><name><name pos:line="209" pos:column="48">ent<pos:position pos:line="209" pos:column="51"/></name><operator pos:line="209" pos:column="51">.<pos:position pos:line="209" pos:column="52"/></operator><name pos:line="209" pos:column="52">objects<pos:position pos:line="209" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="209" pos:column="61">ent<pos:position pos:line="209" pos:column="64"/></name><operator pos:line="209" pos:column="64">.<pos:position pos:line="209" pos:column="65"/></operator><name pos:line="209" pos:column="65">nr<pos:position pos:line="209" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="209" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="69"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name pos:line="210" pos:column="9">result<pos:position pos:line="210" pos:column="15"/></name> <operator pos:line="210" pos:column="16">=<pos:position pos:line="210" pos:column="17"/></operator> <call><name pos:line="210" pos:column="18">diff_result_code<pos:position pos:line="210" pos:column="34"/></name><argument_list pos:line="210" pos:column="34">(<argument><expr><operator pos:line="210" pos:column="35">&amp;<pos:position pos:line="210" pos:column="40"/></operator><name><name pos:line="210" pos:column="36">rev<pos:position pos:line="210" pos:column="39"/></name><operator pos:line="210" pos:column="39">.<pos:position pos:line="210" pos:column="40"/></operator><name pos:line="210" pos:column="40">diffopt<pos:position pos:line="210" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="49">result<pos:position pos:line="210" pos:column="55"/></name></expr></argument>)<pos:position pos:line="210" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="57"/></expr_stmt>
	<if pos:line="211" pos:column="9">if <condition pos:line="211" pos:column="12">(<expr><literal type="number" pos:line="211" pos:column="13">1<pos:position pos:line="211" pos:column="14"/></literal> <operator pos:line="211" pos:column="15">&lt;<pos:position pos:line="211" pos:column="19"/></operator> <name><name pos:line="211" pos:column="17">rev<pos:position pos:line="211" pos:column="20"/></name><operator pos:line="211" pos:column="20">.<pos:position pos:line="211" pos:column="21"/></operator><name pos:line="211" pos:column="21">diffopt<pos:position pos:line="211" pos:column="28"/></name><operator pos:line="211" pos:column="28">.<pos:position pos:line="211" pos:column="29"/></operator><name pos:line="211" pos:column="29">skip_stat_unmatch<pos:position pos:line="211" pos:column="46"/></name></name></expr>)<pos:position pos:line="211" pos:column="47"/></condition><then pos:line="211" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="212" pos:column="17">refresh_index_quietly<pos:position pos:line="212" pos:column="38"/></name><argument_list pos:line="212" pos:column="38">()<pos:position pos:line="212" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="41"/></expr_stmt></block></then></if>
	<return pos:line="213" pos:column="9">return <expr><name pos:line="213" pos:column="16">result<pos:position pos:line="213" pos:column="22"/></name></expr>;<pos:position pos:line="213" pos:column="23"/></return>
}<pos:position pos:line="214" pos:column="2"/></block></function></unit>

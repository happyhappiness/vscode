<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4800_git-2.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_merge_index<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">argc<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">argv<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">prefix<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">force_file<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><literal type="number" pos:line="3" pos:column="29">0<pos:position pos:line="3" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* Without this we cannot rely on waitpid() to tell
	 * what happened to our children.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">signal<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">SIGCHLD<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">SIG_DFL<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">argc<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">&lt;<pos:position pos:line="10" pos:column="22"/></operator> <literal type="number" pos:line="10" pos:column="20">3<pos:position pos:line="10" pos:column="21"/></literal></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">usage<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><literal type="string" pos:line="11" pos:column="23">"git merge-index [-o] [-q] &lt;merge-program&gt; (-a | [--] &lt;filename&gt;*)"<pos:position pos:line="11" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="92"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">read_cache<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">()<pos:position pos:line="13" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">i<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <literal type="number" pos:line="15" pos:column="13">1<pos:position pos:line="15" pos:column="14"/></literal></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><call><name pos:line="16" pos:column="14">strcmp<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name><name pos:line="16" pos:column="21">argv<pos:position pos:line="16" pos:column="25"/></name><index pos:line="16" pos:column="25">[<expr><name pos:line="16" pos:column="26">i<pos:position pos:line="16" pos:column="27"/></name></expr>]<pos:position pos:line="16" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="30">"-o"<pos:position pos:line="16" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="36"/></condition><then pos:line="16" pos:column="36"> <block pos:line="16" pos:column="37">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">one_shot<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="28">1<pos:position pos:line="17" pos:column="29"/></literal></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">i<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">++<pos:position pos:line="18" pos:column="20"/></operator></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><call><name pos:line="20" pos:column="14">strcmp<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name><name pos:line="20" pos:column="21">argv<pos:position pos:line="20" pos:column="25"/></name><index pos:line="20" pos:column="25">[<expr><name pos:line="20" pos:column="26">i<pos:position pos:line="20" pos:column="27"/></name></expr>]<pos:position pos:line="20" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="30">"-q"<pos:position pos:line="20" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36"> <block pos:line="20" pos:column="37">{
		<expr_stmt><expr><name pos:line="21" pos:column="17">quiet<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <literal type="number" pos:line="21" pos:column="25">1<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">i<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">++<pos:position pos:line="22" pos:column="20"/></operator></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="24" pos:column="9">pgm<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name><name pos:line="24" pos:column="15">argv<pos:position pos:line="24" pos:column="19"/></name><index pos:line="24" pos:column="19">[<expr><name pos:line="24" pos:column="20">i<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">++<pos:position pos:line="24" pos:column="23"/></operator></expr>]<pos:position pos:line="24" pos:column="24"/></index></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
	<for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init pos:line="25" pos:column="14">;<pos:position pos:line="25" pos:column="15"/></init> <condition><expr><name pos:line="25" pos:column="16">i<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">&lt;<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="20">argc<pos:position pos:line="25" pos:column="24"/></name></expr>;<pos:position pos:line="25" pos:column="25"/></condition> <incr><expr><name pos:line="25" pos:column="26">i<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">++<pos:position pos:line="25" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="30"/></control> <block pos:line="25" pos:column="31">{
		<decl_stmt><decl><type><specifier pos:line="26" pos:column="17">const<pos:position pos:line="26" pos:column="22"/></specifier> <name pos:line="26" pos:column="23">char<pos:position pos:line="26" pos:column="27"/></name> <modifier pos:line="26" pos:column="28">*<pos:position pos:line="26" pos:column="29"/></modifier></type><name pos:line="26" pos:column="29">arg<pos:position pos:line="26" pos:column="32"/></name> <init pos:line="26" pos:column="33">= <expr><name><name pos:line="26" pos:column="35">argv<pos:position pos:line="26" pos:column="39"/></name><index pos:line="26" pos:column="39">[<expr><name pos:line="26" pos:column="40">i<pos:position pos:line="26" pos:column="41"/></name></expr>]<pos:position pos:line="26" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="26" pos:column="43"/></decl_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">force_file<pos:position pos:line="27" pos:column="32"/></name> <operator pos:line="27" pos:column="33">&amp;&amp;<pos:position pos:line="27" pos:column="43"/></operator> <operator pos:line="27" pos:column="36">*<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="37">arg<pos:position pos:line="27" pos:column="40"/></name> <operator pos:line="27" pos:column="41">==<pos:position pos:line="27" pos:column="43"/></operator> <literal type="char" pos:line="27" pos:column="44">'-'<pos:position pos:line="27" pos:column="47"/></literal></expr>)<pos:position pos:line="27" pos:column="48"/></condition><then pos:line="27" pos:column="48"> <block pos:line="27" pos:column="49">{
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><operator pos:line="28" pos:column="29">!<pos:position pos:line="28" pos:column="30"/></operator><call><name pos:line="28" pos:column="30">strcmp<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><name pos:line="28" pos:column="37">arg<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="42">"--"<pos:position pos:line="28" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="48"/></condition><then pos:line="28" pos:column="48"> <block pos:line="28" pos:column="49">{
				<expr_stmt><expr><name pos:line="29" pos:column="33">force_file<pos:position pos:line="29" pos:column="43"/></name> <operator pos:line="29" pos:column="44">=<pos:position pos:line="29" pos:column="45"/></operator> <literal type="number" pos:line="29" pos:column="46">1<pos:position pos:line="29" pos:column="47"/></literal></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
				<continue pos:line="30" pos:column="33">continue;<pos:position pos:line="30" pos:column="42"/></continue>
			}<pos:position pos:line="31" pos:column="26"/></block></then></if>
			<if pos:line="32" pos:column="25">if <condition pos:line="32" pos:column="28">(<expr><operator pos:line="32" pos:column="29">!<pos:position pos:line="32" pos:column="30"/></operator><call><name pos:line="32" pos:column="30">strcmp<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><name pos:line="32" pos:column="37">arg<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="42">"-a"<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="48"/></condition><then pos:line="32" pos:column="48"> <block pos:line="32" pos:column="49">{
				<expr_stmt><expr><call><name pos:line="33" pos:column="33">merge_all<pos:position pos:line="33" pos:column="42"/></name><argument_list pos:line="33" pos:column="42">()<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
				<continue pos:line="34" pos:column="33">continue;<pos:position pos:line="34" pos:column="42"/></continue>
			}<pos:position pos:line="35" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">die<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><literal type="string" pos:line="36" pos:column="29">"git merge-index: unknown option %s"<pos:position pos:line="36" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="67">arg<pos:position pos:line="36" pos:column="70"/></name></expr></argument>)<pos:position pos:line="36" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="72"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">merge_one_path<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">arg<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></for>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">err<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">&amp;&amp;<pos:position pos:line="40" pos:column="27"/></operator> <operator pos:line="40" pos:column="20">!<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">quiet<pos:position pos:line="40" pos:column="26"/></name></expr>)<pos:position pos:line="40" pos:column="27"/></condition><then pos:line="40" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">die<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><literal type="string" pos:line="41" pos:column="21">"merge program failed"<pos:position pos:line="41" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt></block></then></if>
	<return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">err<pos:position pos:line="42" pos:column="19"/></name></expr>;<pos:position pos:line="42" pos:column="20"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

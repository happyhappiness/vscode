<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="second/download/git/gumtree/git_function_1871.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">describe<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">arg<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">last_one<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">sha1<pos:position pos:line="3" pos:column="27"/></name><index pos:line="3" pos:column="27">[<expr><literal type="number" pos:line="3" pos:column="28">20<pos:position pos:line="3" pos:column="30"/></literal></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">cmit<pos:position pos:line="4" pos:column="28"/></name></decl>, <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="31">gave_up_on<pos:position pos:line="4" pos:column="41"/></name> <init pos:line="4" pos:column="42">= <expr><name pos:line="4" pos:column="44">NULL<pos:position pos:line="4" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit_list<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">list<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit_name<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">n<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">possible_tag<pos:position pos:line="7" pos:column="28"/></name></name></type> <name><name pos:line="7" pos:column="29">all_matches<pos:position pos:line="7" pos:column="40"/></name><index pos:line="7" pos:column="40">[<expr><name pos:line="7" pos:column="41">MAX_TAGS<pos:position pos:line="7" pos:column="49"/></name></expr>]<pos:position pos:line="7" pos:column="50"/></index></name></decl>;<pos:position pos:line="7" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">int<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">match_cnt<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><literal type="number" pos:line="8" pos:column="34">0<pos:position pos:line="8" pos:column="35"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="37">annotated_cnt<pos:position pos:line="8" pos:column="50"/></name> <init pos:line="8" pos:column="51">= <expr><literal type="number" pos:line="8" pos:column="53">0<pos:position pos:line="8" pos:column="54"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="56">cur_match<pos:position pos:line="8" pos:column="65"/></name></decl>;<pos:position pos:line="8" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">long<pos:position pos:line="9" pos:column="22"/></name></type> <name pos:line="9" pos:column="23">seen_commits<pos:position pos:line="9" pos:column="35"/></name> <init pos:line="9" pos:column="36">= <expr><literal type="number" pos:line="9" pos:column="38">0<pos:position pos:line="9" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">int<pos:position pos:line="10" pos:column="21"/></name></type> <name pos:line="10" pos:column="22">unannotated_cnt<pos:position pos:line="10" pos:column="37"/></name> <init pos:line="10" pos:column="38">= <expr><literal type="number" pos:line="10" pos:column="40">0<pos:position pos:line="10" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">get_sha1<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">arg<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="27">sha1<pos:position pos:line="12" pos:column="31"/></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">die<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><call><name pos:line="13" pos:column="21">_<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><literal type="string" pos:line="13" pos:column="23">"Not a valid object name %s"<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="54">arg<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="14" pos:column="9">cmit<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">lookup_commit_reference<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">sha1<pos:position pos:line="14" pos:column="44"/></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">cmit<pos:position pos:line="15" pos:column="18"/></name></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">die<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><call><name pos:line="16" pos:column="21">_<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><literal type="string" pos:line="16" pos:column="23">"%s is not a valid '%s' object"<pos:position pos:line="16" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="57">arg<pos:position pos:line="16" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="62">commit_type<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="75"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="18" pos:column="9">n<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">find_commit_name<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name><name pos:line="18" pos:column="30">cmit<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">-&gt;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="36">object<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">.<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="43">sha1<pos:position pos:line="18" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">n<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">&amp;&amp;<pos:position pos:line="19" pos:column="25"/></operator> <operator pos:line="19" pos:column="18">(<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">tags<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">||<pos:position pos:line="19" pos:column="26"/></operator> <name pos:line="19" pos:column="27">all<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">||<pos:position pos:line="19" pos:column="33"/></operator> <name><name pos:line="19" pos:column="34">n<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">prio<pos:position pos:line="19" pos:column="41"/></name></name> <operator pos:line="19" pos:column="42">==<pos:position pos:line="19" pos:column="44"/></operator> <literal type="number" pos:line="19" pos:column="45">2<pos:position pos:line="19" pos:column="46"/></literal><operator pos:line="19" pos:column="46">)<pos:position pos:line="19" pos:column="47"/></operator></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48"> <block pos:line="19" pos:column="49">{
		<comment type="block" pos:line="20" pos:column="17">/*
		 * Exact match to an existing ref.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">display_name<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">n<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">longformat<pos:position pos:line="24" pos:column="31"/></name></expr>)<pos:position pos:line="24" pos:column="32"/></condition><then pos:line="24" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">show_suffix<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">(<argument><expr><literal type="number" pos:line="25" pos:column="37">0<pos:position pos:line="25" pos:column="38"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="25" pos:column="40">n<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">tag<pos:position pos:line="25" pos:column="46"/></name></name></expr> ?<pos:position pos:line="25" pos:column="48"/></condition><then pos:line="25" pos:column="48"> <expr><name><name pos:line="25" pos:column="49">n<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">-&gt;<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="52">tag<pos:position pos:line="25" pos:column="55"/></name><operator pos:line="25" pos:column="55">-&gt;<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="57">tagged<pos:position pos:line="25" pos:column="63"/></name><operator pos:line="25" pos:column="63">-&gt;<pos:position pos:line="25" pos:column="68"/></operator><name pos:line="25" pos:column="65">sha1<pos:position pos:line="25" pos:column="69"/></name></name></expr> <pos:position pos:line="25" pos:column="70"/></then><else pos:line="25" pos:column="70">: <expr><name pos:line="25" pos:column="72">sha1<pos:position pos:line="25" pos:column="76"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="25" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="78"/></expr_stmt></block></then></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">dirty<pos:position pos:line="26" pos:column="26"/></name></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="25">printf<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><literal type="string" pos:line="27" pos:column="32">"%s"<pos:position pos:line="27" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="38">dirty<pos:position pos:line="27" pos:column="43"/></name></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">printf<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><literal type="string" pos:line="28" pos:column="24">"\n"<pos:position pos:line="28" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
		<return pos:line="29" pos:column="17">return;<pos:position pos:line="29" pos:column="24"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">max_candidates<pos:position pos:line="32" pos:column="28"/></name></expr>)<pos:position pos:line="32" pos:column="29"/></condition><then pos:line="32" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">die<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><call><name pos:line="33" pos:column="21">_<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><literal type="string" pos:line="33" pos:column="23">"no tag exactly matches '%s'"<pos:position pos:line="33" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="55">sha1_to_hex<pos:position pos:line="33" pos:column="66"/></name><argument_list pos:line="33" pos:column="66">(<argument><expr><name><name pos:line="33" pos:column="67">cmit<pos:position pos:line="33" pos:column="71"/></name><operator pos:line="33" pos:column="71">-&gt;<pos:position pos:line="33" pos:column="76"/></operator><name pos:line="33" pos:column="73">object<pos:position pos:line="33" pos:column="79"/></name><operator pos:line="33" pos:column="79">.<pos:position pos:line="33" pos:column="80"/></operator><name pos:line="33" pos:column="80">sha1<pos:position pos:line="33" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="87"/></expr_stmt></block></then></if>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">debug<pos:position pos:line="34" pos:column="18"/></name></expr>)<pos:position pos:line="34" pos:column="19"/></condition><then pos:line="34" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">fprintf<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">stderr<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="33">_<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><literal type="string" pos:line="35" pos:column="35">"searching to describe %s\n"<pos:position pos:line="35" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="35" pos:column="66">arg<pos:position pos:line="35" pos:column="69"/></name></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt></block></then></if>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">!<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">have_util<pos:position pos:line="37" pos:column="23"/></name></expr>)<pos:position pos:line="37" pos:column="24"/></condition><then pos:line="37" pos:column="24"> <block pos:line="37" pos:column="25">{
		<decl_stmt><decl><type><name><name pos:line="38" pos:column="17">struct<pos:position pos:line="38" pos:column="23"/></name> <name pos:line="38" pos:column="24">hashmap_iter<pos:position pos:line="38" pos:column="36"/></name></name></type> <name pos:line="38" pos:column="37">iter<pos:position pos:line="38" pos:column="41"/></name></decl>;<pos:position pos:line="38" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="39" pos:column="17">struct<pos:position pos:line="39" pos:column="23"/></name> <name pos:line="39" pos:column="24">commit<pos:position pos:line="39" pos:column="30"/></name></name> <modifier pos:line="39" pos:column="31">*<pos:position pos:line="39" pos:column="32"/></modifier></type><name pos:line="39" pos:column="32">c<pos:position pos:line="39" pos:column="33"/></name></decl>;<pos:position pos:line="39" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="40" pos:column="17">struct<pos:position pos:line="40" pos:column="23"/></name> <name pos:line="40" pos:column="24">commit_name<pos:position pos:line="40" pos:column="35"/></name></name> <modifier pos:line="40" pos:column="36">*<pos:position pos:line="40" pos:column="37"/></modifier></type><name pos:line="40" pos:column="37">n<pos:position pos:line="40" pos:column="38"/></name> <init pos:line="40" pos:column="39">= <expr><call><name pos:line="40" pos:column="41">hashmap_iter_first<pos:position pos:line="40" pos:column="59"/></name><argument_list pos:line="40" pos:column="59">(<argument><expr><operator pos:line="40" pos:column="60">&amp;<pos:position pos:line="40" pos:column="65"/></operator><name pos:line="40" pos:column="61">names<pos:position pos:line="40" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="68">&amp;<pos:position pos:line="40" pos:column="73"/></operator><name pos:line="40" pos:column="69">iter<pos:position pos:line="40" pos:column="73"/></name></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="75"/></decl_stmt>
		<for pos:line="41" pos:column="17">for <control pos:line="41" pos:column="21">(<init pos:line="41" pos:column="22">;<pos:position pos:line="41" pos:column="23"/></init> <condition><expr><name pos:line="41" pos:column="24">n<pos:position pos:line="41" pos:column="25"/></name></expr>;<pos:position pos:line="41" pos:column="26"/></condition> <incr><expr><name pos:line="41" pos:column="27">n<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">=<pos:position pos:line="41" pos:column="30"/></operator> <call><name pos:line="41" pos:column="31">hashmap_iter_next<pos:position pos:line="41" pos:column="48"/></name><argument_list pos:line="41" pos:column="48">(<argument><expr><operator pos:line="41" pos:column="49">&amp;<pos:position pos:line="41" pos:column="54"/></operator><name pos:line="41" pos:column="50">iter<pos:position pos:line="41" pos:column="54"/></name></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr></incr>)<pos:position pos:line="41" pos:column="56"/></control> <block pos:line="41" pos:column="57">{
			<expr_stmt><expr><name pos:line="42" pos:column="25">c<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <call><name pos:line="42" pos:column="29">lookup_commit_reference_gently<pos:position pos:line="42" pos:column="59"/></name><argument_list pos:line="42" pos:column="59">(<argument><expr><name><name pos:line="42" pos:column="60">n<pos:position pos:line="42" pos:column="61"/></name><operator pos:line="42" pos:column="61">-&gt;<pos:position pos:line="42" pos:column="66"/></operator><name pos:line="42" pos:column="63">peeled<pos:position pos:line="42" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="71">1<pos:position pos:line="42" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="74"/></expr_stmt>
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><name pos:line="43" pos:column="29">c<pos:position pos:line="43" pos:column="30"/></name></expr>)<pos:position pos:line="43" pos:column="31"/></condition><then pos:line="43" pos:column="31">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="33">c<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">-&gt;<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="36">util<pos:position pos:line="44" pos:column="40"/></name></name> <operator pos:line="44" pos:column="41">=<pos:position pos:line="44" pos:column="42"/></operator> <name pos:line="44" pos:column="43">n<pos:position pos:line="44" pos:column="44"/></name></expr>;<pos:position pos:line="44" pos:column="45"/></expr_stmt></block></then></if>
		}<pos:position pos:line="45" pos:column="18"/></block></for>
		<expr_stmt><expr><name pos:line="46" pos:column="17">have_util<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <literal type="number" pos:line="46" pos:column="29">1<pos:position pos:line="46" pos:column="30"/></literal></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="49" pos:column="9">list<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <name pos:line="49" pos:column="16">NULL<pos:position pos:line="49" pos:column="20"/></name></expr>;<pos:position pos:line="49" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="50" pos:column="9">cmit<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">-&gt;<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="15">object<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">.<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">flags<pos:position pos:line="50" pos:column="27"/></name></name> <operator pos:line="50" pos:column="28">=<pos:position pos:line="50" pos:column="29"/></operator> <name pos:line="50" pos:column="30">SEEN<pos:position pos:line="50" pos:column="34"/></name></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">commit_list_insert<pos:position pos:line="51" pos:column="27"/></name><argument_list pos:line="51" pos:column="27">(<argument><expr><name pos:line="51" pos:column="28">cmit<pos:position pos:line="51" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="34">&amp;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="35">list<pos:position pos:line="51" pos:column="39"/></name></expr></argument>)<pos:position pos:line="51" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="41"/></expr_stmt>
	<while pos:line="52" pos:column="9">while <condition pos:line="52" pos:column="15">(<expr><name pos:line="52" pos:column="16">list<pos:position pos:line="52" pos:column="20"/></name></expr>)<pos:position pos:line="52" pos:column="21"/></condition> <block pos:line="52" pos:column="22">{
		<decl_stmt><decl><type><name><name pos:line="53" pos:column="17">struct<pos:position pos:line="53" pos:column="23"/></name> <name pos:line="53" pos:column="24">commit<pos:position pos:line="53" pos:column="30"/></name></name> <modifier pos:line="53" pos:column="31">*<pos:position pos:line="53" pos:column="32"/></modifier></type><name pos:line="53" pos:column="32">c<pos:position pos:line="53" pos:column="33"/></name> <init pos:line="53" pos:column="34">= <expr><call><name pos:line="53" pos:column="36">pop_commit<pos:position pos:line="53" pos:column="46"/></name><argument_list pos:line="53" pos:column="46">(<argument><expr><operator pos:line="53" pos:column="47">&amp;<pos:position pos:line="53" pos:column="52"/></operator><name pos:line="53" pos:column="48">list<pos:position pos:line="53" pos:column="52"/></name></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="54"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="54" pos:column="17">struct<pos:position pos:line="54" pos:column="23"/></name> <name pos:line="54" pos:column="24">commit_list<pos:position pos:line="54" pos:column="35"/></name></name> <modifier pos:line="54" pos:column="36">*<pos:position pos:line="54" pos:column="37"/></modifier></type><name pos:line="54" pos:column="37">parents<pos:position pos:line="54" pos:column="44"/></name> <init pos:line="54" pos:column="45">= <expr><name><name pos:line="54" pos:column="47">c<pos:position pos:line="54" pos:column="48"/></name><operator pos:line="54" pos:column="48">-&gt;<pos:position pos:line="54" pos:column="53"/></operator><name pos:line="54" pos:column="50">parents<pos:position pos:line="54" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="54" pos:column="58"/></decl_stmt>
		<expr_stmt><expr><name pos:line="55" pos:column="17">seen_commits<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">++<pos:position pos:line="55" pos:column="31"/></operator></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="56" pos:column="17">n<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <name><name pos:line="56" pos:column="21">c<pos:position pos:line="56" pos:column="22"/></name><operator pos:line="56" pos:column="22">-&gt;<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="24">util<pos:position pos:line="56" pos:column="28"/></name></name></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><name pos:line="57" pos:column="21">n<pos:position pos:line="57" pos:column="22"/></name></expr>)<pos:position pos:line="57" pos:column="23"/></condition><then pos:line="57" pos:column="23"> <block pos:line="57" pos:column="24">{
			<if pos:line="58" pos:column="25">if <condition pos:line="58" pos:column="28">(<expr><operator pos:line="58" pos:column="29">!<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="30">tags<pos:position pos:line="58" pos:column="34"/></name> <operator pos:line="58" pos:column="35">&amp;&amp;<pos:position pos:line="58" pos:column="45"/></operator> <operator pos:line="58" pos:column="38">!<pos:position pos:line="58" pos:column="39"/></operator><name pos:line="58" pos:column="39">all<pos:position pos:line="58" pos:column="42"/></name> <operator pos:line="58" pos:column="43">&amp;&amp;<pos:position pos:line="58" pos:column="53"/></operator> <name><name pos:line="58" pos:column="46">n<pos:position pos:line="58" pos:column="47"/></name><operator pos:line="58" pos:column="47">-&gt;<pos:position pos:line="58" pos:column="52"/></operator><name pos:line="58" pos:column="49">prio<pos:position pos:line="58" pos:column="53"/></name></name> <operator pos:line="58" pos:column="54">&lt;<pos:position pos:line="58" pos:column="58"/></operator> <literal type="number" pos:line="58" pos:column="56">2<pos:position pos:line="58" pos:column="57"/></literal></expr>)<pos:position pos:line="58" pos:column="58"/></condition><then pos:line="58" pos:column="58"> <block pos:line="58" pos:column="59">{
				<expr_stmt><expr><name pos:line="59" pos:column="33">unannotated_cnt<pos:position pos:line="59" pos:column="48"/></name><operator pos:line="59" pos:column="48">++<pos:position pos:line="59" pos:column="50"/></operator></expr>;<pos:position pos:line="59" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="60" pos:column="26"/></block></then> <elseif pos:line="60" pos:column="27">else <if pos:line="60" pos:column="32">if <condition pos:line="60" pos:column="35">(<expr><name pos:line="60" pos:column="36">match_cnt<pos:position pos:line="60" pos:column="45"/></name> <operator pos:line="60" pos:column="46">&lt;<pos:position pos:line="60" pos:column="50"/></operator> <name pos:line="60" pos:column="48">max_candidates<pos:position pos:line="60" pos:column="62"/></name></expr>)<pos:position pos:line="60" pos:column="63"/></condition><then pos:line="60" pos:column="63"> <block pos:line="60" pos:column="64">{
				<decl_stmt><decl><type><name><name pos:line="61" pos:column="33">struct<pos:position pos:line="61" pos:column="39"/></name> <name pos:line="61" pos:column="40">possible_tag<pos:position pos:line="61" pos:column="52"/></name></name> <modifier pos:line="61" pos:column="53">*<pos:position pos:line="61" pos:column="54"/></modifier></type><name pos:line="61" pos:column="54">t<pos:position pos:line="61" pos:column="55"/></name> <init pos:line="61" pos:column="56">= <expr><operator pos:line="61" pos:column="58">&amp;<pos:position pos:line="61" pos:column="63"/></operator><name><name pos:line="61" pos:column="59">all_matches<pos:position pos:line="61" pos:column="70"/></name><index pos:line="61" pos:column="70">[<expr><name pos:line="61" pos:column="71">match_cnt<pos:position pos:line="61" pos:column="80"/></name><operator pos:line="61" pos:column="80">++<pos:position pos:line="61" pos:column="82"/></operator></expr>]<pos:position pos:line="61" pos:column="83"/></index></name></expr></init></decl>;<pos:position pos:line="61" pos:column="84"/></decl_stmt>
				<expr_stmt><expr><name><name pos:line="62" pos:column="33">t<pos:position pos:line="62" pos:column="34"/></name><operator pos:line="62" pos:column="34">-&gt;<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="36">name<pos:position pos:line="62" pos:column="40"/></name></name> <operator pos:line="62" pos:column="41">=<pos:position pos:line="62" pos:column="42"/></operator> <name pos:line="62" pos:column="43">n<pos:position pos:line="62" pos:column="44"/></name></expr>;<pos:position pos:line="62" pos:column="45"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="63" pos:column="33">t<pos:position pos:line="63" pos:column="34"/></name><operator pos:line="63" pos:column="34">-&gt;<pos:position pos:line="63" pos:column="39"/></operator><name pos:line="63" pos:column="36">depth<pos:position pos:line="63" pos:column="41"/></name></name> <operator pos:line="63" pos:column="42">=<pos:position pos:line="63" pos:column="43"/></operator> <name pos:line="63" pos:column="44">seen_commits<pos:position pos:line="63" pos:column="56"/></name> <operator pos:line="63" pos:column="57">-<pos:position pos:line="63" pos:column="58"/></operator> <literal type="number" pos:line="63" pos:column="59">1<pos:position pos:line="63" pos:column="60"/></literal></expr>;<pos:position pos:line="63" pos:column="61"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="64" pos:column="33">t<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">-&gt;<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="36">flag_within<pos:position pos:line="64" pos:column="47"/></name></name> <operator pos:line="64" pos:column="48">=<pos:position pos:line="64" pos:column="49"/></operator> <literal type="number" pos:line="64" pos:column="50">1u<pos:position pos:line="64" pos:column="52"/></literal> <operator pos:line="64" pos:column="53">&lt;&lt;<pos:position pos:line="64" pos:column="61"/></operator> <name pos:line="64" pos:column="56">match_cnt<pos:position pos:line="64" pos:column="65"/></name></expr>;<pos:position pos:line="64" pos:column="66"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="65" pos:column="33">t<pos:position pos:line="65" pos:column="34"/></name><operator pos:line="65" pos:column="34">-&gt;<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="36">found_order<pos:position pos:line="65" pos:column="47"/></name></name> <operator pos:line="65" pos:column="48">=<pos:position pos:line="65" pos:column="49"/></operator> <name pos:line="65" pos:column="50">match_cnt<pos:position pos:line="65" pos:column="59"/></name></expr>;<pos:position pos:line="65" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="66" pos:column="33">c<pos:position pos:line="66" pos:column="34"/></name><operator pos:line="66" pos:column="34">-&gt;<pos:position pos:line="66" pos:column="39"/></operator><name pos:line="66" pos:column="36">object<pos:position pos:line="66" pos:column="42"/></name><operator pos:line="66" pos:column="42">.<pos:position pos:line="66" pos:column="43"/></operator><name pos:line="66" pos:column="43">flags<pos:position pos:line="66" pos:column="48"/></name></name> <operator pos:line="66" pos:column="49">|=<pos:position pos:line="66" pos:column="51"/></operator> <name><name pos:line="66" pos:column="52">t<pos:position pos:line="66" pos:column="53"/></name><operator pos:line="66" pos:column="53">-&gt;<pos:position pos:line="66" pos:column="58"/></operator><name pos:line="66" pos:column="55">flag_within<pos:position pos:line="66" pos:column="66"/></name></name></expr>;<pos:position pos:line="66" pos:column="67"/></expr_stmt>
				<if pos:line="67" pos:column="33">if <condition pos:line="67" pos:column="36">(<expr><name><name pos:line="67" pos:column="37">n<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">-&gt;<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="40">prio<pos:position pos:line="67" pos:column="44"/></name></name> <operator pos:line="67" pos:column="45">==<pos:position pos:line="67" pos:column="47"/></operator> <literal type="number" pos:line="67" pos:column="48">2<pos:position pos:line="67" pos:column="49"/></literal></expr>)<pos:position pos:line="67" pos:column="50"/></condition><then pos:line="67" pos:column="50">
					<block type="pseudo"><expr_stmt><expr><name pos:line="68" pos:column="41">annotated_cnt<pos:position pos:line="68" pos:column="54"/></name><operator pos:line="68" pos:column="54">++<pos:position pos:line="68" pos:column="56"/></operator></expr>;<pos:position pos:line="68" pos:column="57"/></expr_stmt></block></then></if>
			}<pos:position pos:line="69" pos:column="26"/></block></then></if></elseif>
			<else pos:line="70" pos:column="25">else <block pos:line="70" pos:column="30">{
				<expr_stmt><expr><name pos:line="71" pos:column="33">gave_up_on<pos:position pos:line="71" pos:column="43"/></name> <operator pos:line="71" pos:column="44">=<pos:position pos:line="71" pos:column="45"/></operator> <name pos:line="71" pos:column="46">c<pos:position pos:line="71" pos:column="47"/></name></expr>;<pos:position pos:line="71" pos:column="48"/></expr_stmt>
				<break pos:line="72" pos:column="33">break;<pos:position pos:line="72" pos:column="39"/></break>
			}<pos:position pos:line="73" pos:column="26"/></block></else></if>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if>
		<for pos:line="75" pos:column="17">for <control pos:line="75" pos:column="21">(<init><expr><name pos:line="75" pos:column="22">cur_match<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">=<pos:position pos:line="75" pos:column="33"/></operator> <literal type="number" pos:line="75" pos:column="34">0<pos:position pos:line="75" pos:column="35"/></literal></expr>;<pos:position pos:line="75" pos:column="36"/></init> <condition><expr><name pos:line="75" pos:column="37">cur_match<pos:position pos:line="75" pos:column="46"/></name> <operator pos:line="75" pos:column="47">&lt;<pos:position pos:line="75" pos:column="51"/></operator> <name pos:line="75" pos:column="49">match_cnt<pos:position pos:line="75" pos:column="58"/></name></expr>;<pos:position pos:line="75" pos:column="59"/></condition> <incr><expr><name pos:line="75" pos:column="60">cur_match<pos:position pos:line="75" pos:column="69"/></name><operator pos:line="75" pos:column="69">++<pos:position pos:line="75" pos:column="71"/></operator></expr></incr>)<pos:position pos:line="75" pos:column="72"/></control> <block pos:line="75" pos:column="73">{
			<decl_stmt><decl><type><name><name pos:line="76" pos:column="25">struct<pos:position pos:line="76" pos:column="31"/></name> <name pos:line="76" pos:column="32">possible_tag<pos:position pos:line="76" pos:column="44"/></name></name> <modifier pos:line="76" pos:column="45">*<pos:position pos:line="76" pos:column="46"/></modifier></type><name pos:line="76" pos:column="46">t<pos:position pos:line="76" pos:column="47"/></name> <init pos:line="76" pos:column="48">= <expr><operator pos:line="76" pos:column="50">&amp;<pos:position pos:line="76" pos:column="55"/></operator><name><name pos:line="76" pos:column="51">all_matches<pos:position pos:line="76" pos:column="62"/></name><index pos:line="76" pos:column="62">[<expr><name pos:line="76" pos:column="63">cur_match<pos:position pos:line="76" pos:column="72"/></name></expr>]<pos:position pos:line="76" pos:column="73"/></index></name></expr></init></decl>;<pos:position pos:line="76" pos:column="74"/></decl_stmt>
			<if pos:line="77" pos:column="25">if <condition pos:line="77" pos:column="28">(<expr><operator pos:line="77" pos:column="29">!<pos:position pos:line="77" pos:column="30"/></operator><operator pos:line="77" pos:column="30">(<pos:position pos:line="77" pos:column="31"/></operator><name><name pos:line="77" pos:column="31">c<pos:position pos:line="77" pos:column="32"/></name><operator pos:line="77" pos:column="32">-&gt;<pos:position pos:line="77" pos:column="37"/></operator><name pos:line="77" pos:column="34">object<pos:position pos:line="77" pos:column="40"/></name><operator pos:line="77" pos:column="40">.<pos:position pos:line="77" pos:column="41"/></operator><name pos:line="77" pos:column="41">flags<pos:position pos:line="77" pos:column="46"/></name></name> <operator pos:line="77" pos:column="47">&amp;<pos:position pos:line="77" pos:column="52"/></operator> <name><name pos:line="77" pos:column="49">t<pos:position pos:line="77" pos:column="50"/></name><operator pos:line="77" pos:column="50">-&gt;<pos:position pos:line="77" pos:column="55"/></operator><name pos:line="77" pos:column="52">flag_within<pos:position pos:line="77" pos:column="63"/></name></name><operator pos:line="77" pos:column="63">)<pos:position pos:line="77" pos:column="64"/></operator></expr>)<pos:position pos:line="77" pos:column="65"/></condition><then pos:line="77" pos:column="65">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="78" pos:column="33">t<pos:position pos:line="78" pos:column="34"/></name><operator pos:line="78" pos:column="34">-&gt;<pos:position pos:line="78" pos:column="39"/></operator><name pos:line="78" pos:column="36">depth<pos:position pos:line="78" pos:column="41"/></name></name><operator pos:line="78" pos:column="41">++<pos:position pos:line="78" pos:column="43"/></operator></expr>;<pos:position pos:line="78" pos:column="44"/></expr_stmt></block></then></if>
		}<pos:position pos:line="79" pos:column="18"/></block></for>
		<if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><name pos:line="80" pos:column="21">annotated_cnt<pos:position pos:line="80" pos:column="34"/></name> <operator pos:line="80" pos:column="35">&amp;&amp;<pos:position pos:line="80" pos:column="45"/></operator> <operator pos:line="80" pos:column="38">!<pos:position pos:line="80" pos:column="39"/></operator><name pos:line="80" pos:column="39">list<pos:position pos:line="80" pos:column="43"/></name></expr>)<pos:position pos:line="80" pos:column="44"/></condition><then pos:line="80" pos:column="44"> <block pos:line="80" pos:column="45">{
			<if pos:line="81" pos:column="25">if <condition pos:line="81" pos:column="28">(<expr><name pos:line="81" pos:column="29">debug<pos:position pos:line="81" pos:column="34"/></name></expr>)<pos:position pos:line="81" pos:column="35"/></condition><then pos:line="81" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="33">fprintf<pos:position pos:line="82" pos:column="40"/></name><argument_list pos:line="82" pos:column="40">(<argument><expr><name pos:line="82" pos:column="41">stderr<pos:position pos:line="82" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="82" pos:column="49">_<pos:position pos:line="82" pos:column="50"/></name><argument_list pos:line="82" pos:column="50">(<argument><expr><literal type="string" pos:line="82" pos:column="51">"finished search at %s\n"<pos:position pos:line="82" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="77"/></argument_list></call></expr></argument>,
					<argument><expr><call><name pos:line="83" pos:column="41">sha1_to_hex<pos:position pos:line="83" pos:column="52"/></name><argument_list pos:line="83" pos:column="52">(<argument><expr><name><name pos:line="83" pos:column="53">c<pos:position pos:line="83" pos:column="54"/></name><operator pos:line="83" pos:column="54">-&gt;<pos:position pos:line="83" pos:column="59"/></operator><name pos:line="83" pos:column="56">object<pos:position pos:line="83" pos:column="62"/></name><operator pos:line="83" pos:column="62">.<pos:position pos:line="83" pos:column="63"/></operator><name pos:line="83" pos:column="63">sha1<pos:position pos:line="83" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="70"/></expr_stmt></block></then></if>
			<break pos:line="84" pos:column="25">break;<pos:position pos:line="84" pos:column="31"/></break>
		}<pos:position pos:line="85" pos:column="18"/></block></then></if>
		<while pos:line="86" pos:column="17">while <condition pos:line="86" pos:column="23">(<expr><name pos:line="86" pos:column="24">parents<pos:position pos:line="86" pos:column="31"/></name></expr>)<pos:position pos:line="86" pos:column="32"/></condition> <block pos:line="86" pos:column="33">{
			<decl_stmt><decl><type><name><name pos:line="87" pos:column="25">struct<pos:position pos:line="87" pos:column="31"/></name> <name pos:line="87" pos:column="32">commit<pos:position pos:line="87" pos:column="38"/></name></name> <modifier pos:line="87" pos:column="39">*<pos:position pos:line="87" pos:column="40"/></modifier></type><name pos:line="87" pos:column="40">p<pos:position pos:line="87" pos:column="41"/></name> <init pos:line="87" pos:column="42">= <expr><name><name pos:line="87" pos:column="44">parents<pos:position pos:line="87" pos:column="51"/></name><operator pos:line="87" pos:column="51">-&gt;<pos:position pos:line="87" pos:column="56"/></operator><name pos:line="87" pos:column="53">item<pos:position pos:line="87" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="87" pos:column="58"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="88" pos:column="25">parse_commit<pos:position pos:line="88" pos:column="37"/></name><argument_list pos:line="88" pos:column="37">(<argument><expr><name pos:line="88" pos:column="38">p<pos:position pos:line="88" pos:column="39"/></name></expr></argument>)<pos:position pos:line="88" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="41"/></expr_stmt>
			<if pos:line="89" pos:column="25">if <condition pos:line="89" pos:column="28">(<expr><operator pos:line="89" pos:column="29">!<pos:position pos:line="89" pos:column="30"/></operator><operator pos:line="89" pos:column="30">(<pos:position pos:line="89" pos:column="31"/></operator><name><name pos:line="89" pos:column="31">p<pos:position pos:line="89" pos:column="32"/></name><operator pos:line="89" pos:column="32">-&gt;<pos:position pos:line="89" pos:column="37"/></operator><name pos:line="89" pos:column="34">object<pos:position pos:line="89" pos:column="40"/></name><operator pos:line="89" pos:column="40">.<pos:position pos:line="89" pos:column="41"/></operator><name pos:line="89" pos:column="41">flags<pos:position pos:line="89" pos:column="46"/></name></name> <operator pos:line="89" pos:column="47">&amp;<pos:position pos:line="89" pos:column="52"/></operator> <name pos:line="89" pos:column="49">SEEN<pos:position pos:line="89" pos:column="53"/></name><operator pos:line="89" pos:column="53">)<pos:position pos:line="89" pos:column="54"/></operator></expr>)<pos:position pos:line="89" pos:column="55"/></condition><then pos:line="89" pos:column="55">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="33">commit_list_insert_by_date<pos:position pos:line="90" pos:column="59"/></name><argument_list pos:line="90" pos:column="59">(<argument><expr><name pos:line="90" pos:column="60">p<pos:position pos:line="90" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="63">&amp;<pos:position pos:line="90" pos:column="68"/></operator><name pos:line="90" pos:column="64">list<pos:position pos:line="90" pos:column="68"/></name></expr></argument>)<pos:position pos:line="90" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="70"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="91" pos:column="25">p<pos:position pos:line="91" pos:column="26"/></name><operator pos:line="91" pos:column="26">-&gt;<pos:position pos:line="91" pos:column="31"/></operator><name pos:line="91" pos:column="28">object<pos:position pos:line="91" pos:column="34"/></name><operator pos:line="91" pos:column="34">.<pos:position pos:line="91" pos:column="35"/></operator><name pos:line="91" pos:column="35">flags<pos:position pos:line="91" pos:column="40"/></name></name> <operator pos:line="91" pos:column="41">|=<pos:position pos:line="91" pos:column="43"/></operator> <name><name pos:line="91" pos:column="44">c<pos:position pos:line="91" pos:column="45"/></name><operator pos:line="91" pos:column="45">-&gt;<pos:position pos:line="91" pos:column="50"/></operator><name pos:line="91" pos:column="47">object<pos:position pos:line="91" pos:column="53"/></name><operator pos:line="91" pos:column="53">.<pos:position pos:line="91" pos:column="54"/></operator><name pos:line="91" pos:column="54">flags<pos:position pos:line="91" pos:column="59"/></name></name></expr>;<pos:position pos:line="91" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name pos:line="92" pos:column="25">parents<pos:position pos:line="92" pos:column="32"/></name> <operator pos:line="92" pos:column="33">=<pos:position pos:line="92" pos:column="34"/></operator> <name><name pos:line="92" pos:column="35">parents<pos:position pos:line="92" pos:column="42"/></name><operator pos:line="92" pos:column="42">-&gt;<pos:position pos:line="92" pos:column="47"/></operator><name pos:line="92" pos:column="44">next<pos:position pos:line="92" pos:column="48"/></name></name></expr>;<pos:position pos:line="92" pos:column="49"/></expr_stmt>

			<if pos:line="94" pos:column="25">if <condition pos:line="94" pos:column="28">(<expr><name pos:line="94" pos:column="29">first_parent<pos:position pos:line="94" pos:column="41"/></name></expr>)<pos:position pos:line="94" pos:column="42"/></condition><then pos:line="94" pos:column="42">
				<block type="pseudo"><break pos:line="95" pos:column="33">break;<pos:position pos:line="95" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="96" pos:column="18"/></block></while>
	}<pos:position pos:line="97" pos:column="10"/></block></while>

	<if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><operator pos:line="99" pos:column="13">!<pos:position pos:line="99" pos:column="14"/></operator><name pos:line="99" pos:column="14">match_cnt<pos:position pos:line="99" pos:column="23"/></name></expr>)<pos:position pos:line="99" pos:column="24"/></condition><then pos:line="99" pos:column="24"> <block pos:line="99" pos:column="25">{
		<decl_stmt><decl><type><specifier pos:line="100" pos:column="17">const<pos:position pos:line="100" pos:column="22"/></specifier> <name pos:line="100" pos:column="23">unsigned<pos:position pos:line="100" pos:column="31"/></name> <name pos:line="100" pos:column="32">char<pos:position pos:line="100" pos:column="36"/></name> <modifier pos:line="100" pos:column="37">*<pos:position pos:line="100" pos:column="38"/></modifier></type><name pos:line="100" pos:column="38">sha1<pos:position pos:line="100" pos:column="42"/></name> <init pos:line="100" pos:column="43">= <expr><name><name pos:line="100" pos:column="45">cmit<pos:position pos:line="100" pos:column="49"/></name><operator pos:line="100" pos:column="49">-&gt;<pos:position pos:line="100" pos:column="54"/></operator><name pos:line="100" pos:column="51">object<pos:position pos:line="100" pos:column="57"/></name><operator pos:line="100" pos:column="57">.<pos:position pos:line="100" pos:column="58"/></operator><name pos:line="100" pos:column="58">sha1<pos:position pos:line="100" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="100" pos:column="63"/></decl_stmt>
		<if pos:line="101" pos:column="17">if <condition pos:line="101" pos:column="20">(<expr><name pos:line="101" pos:column="21">always<pos:position pos:line="101" pos:column="27"/></name></expr>)<pos:position pos:line="101" pos:column="28"/></condition><then pos:line="101" pos:column="28"> <block pos:line="101" pos:column="29">{
			<expr_stmt><expr><call><name pos:line="102" pos:column="25">printf<pos:position pos:line="102" pos:column="31"/></name><argument_list pos:line="102" pos:column="31">(<argument><expr><literal type="string" pos:line="102" pos:column="32">"%s"<pos:position pos:line="102" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="102" pos:column="38">find_unique_abbrev<pos:position pos:line="102" pos:column="56"/></name><argument_list pos:line="102" pos:column="56">(<argument><expr><name pos:line="102" pos:column="57">sha1<pos:position pos:line="102" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="63">abbrev<pos:position pos:line="102" pos:column="69"/></name></expr></argument>)<pos:position pos:line="102" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="102" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="72"/></expr_stmt>
			<if pos:line="103" pos:column="25">if <condition pos:line="103" pos:column="28">(<expr><name pos:line="103" pos:column="29">dirty<pos:position pos:line="103" pos:column="34"/></name></expr>)<pos:position pos:line="103" pos:column="35"/></condition><then pos:line="103" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="33">printf<pos:position pos:line="104" pos:column="39"/></name><argument_list pos:line="104" pos:column="39">(<argument><expr><literal type="string" pos:line="104" pos:column="40">"%s"<pos:position pos:line="104" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="46">dirty<pos:position pos:line="104" pos:column="51"/></name></expr></argument>)<pos:position pos:line="104" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="53"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="105" pos:column="25">printf<pos:position pos:line="105" pos:column="31"/></name><argument_list pos:line="105" pos:column="31">(<argument><expr><literal type="string" pos:line="105" pos:column="32">"\n"<pos:position pos:line="105" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="38"/></expr_stmt>
			<return pos:line="106" pos:column="25">return;<pos:position pos:line="106" pos:column="32"/></return>
		}<pos:position pos:line="107" pos:column="18"/></block></then></if>
		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><name pos:line="108" pos:column="21">unannotated_cnt<pos:position pos:line="108" pos:column="36"/></name></expr>)<pos:position pos:line="108" pos:column="37"/></condition><then pos:line="108" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="109" pos:column="25">die<pos:position pos:line="109" pos:column="28"/></name><argument_list pos:line="109" pos:column="28">(<argument><expr><call><name pos:line="109" pos:column="29">_<pos:position pos:line="109" pos:column="30"/></name><argument_list pos:line="109" pos:column="30">(<argument><expr><literal type="string" pos:line="109" pos:column="31">"No annotated tags can describe '%s'.\n"<pos:position pos:line="109" pos:column="71"/></literal>
			    <literal type="string" pos:line="110" pos:column="29">"However, there were unannotated tags: try --tags."<pos:position pos:line="110" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="81"/></argument_list></call></expr></argument>,
			    <argument><expr><call><name pos:line="111" pos:column="29">sha1_to_hex<pos:position pos:line="111" pos:column="40"/></name><argument_list pos:line="111" pos:column="40">(<argument><expr><name pos:line="111" pos:column="41">sha1<pos:position pos:line="111" pos:column="45"/></name></expr></argument>)<pos:position pos:line="111" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="48"/></expr_stmt></block></then>
		<else pos:line="112" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="113" pos:column="25">die<pos:position pos:line="113" pos:column="28"/></name><argument_list pos:line="113" pos:column="28">(<argument><expr><call><name pos:line="113" pos:column="29">_<pos:position pos:line="113" pos:column="30"/></name><argument_list pos:line="113" pos:column="30">(<argument><expr><literal type="string" pos:line="113" pos:column="31">"No tags can describe '%s'.\n"<pos:position pos:line="113" pos:column="61"/></literal>
			    <literal type="string" pos:line="114" pos:column="29">"Try --always, or create some tags."<pos:position pos:line="114" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="66"/></argument_list></call></expr></argument>,
			    <argument><expr><call><name pos:line="115" pos:column="29">sha1_to_hex<pos:position pos:line="115" pos:column="40"/></name><argument_list pos:line="115" pos:column="40">(<argument><expr><name pos:line="115" pos:column="41">sha1<pos:position pos:line="115" pos:column="45"/></name></expr></argument>)<pos:position pos:line="115" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="115" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="48"/></expr_stmt></block></else></if>
	}<pos:position pos:line="116" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="118" pos:column="9">qsort<pos:position pos:line="118" pos:column="14"/></name><argument_list pos:line="118" pos:column="14">(<argument><expr><name pos:line="118" pos:column="15">all_matches<pos:position pos:line="118" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="28">match_cnt<pos:position pos:line="118" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="118" pos:column="39">sizeof<argument_list pos:line="118" pos:column="45">(<argument><expr><name><name pos:line="118" pos:column="46">all_matches<pos:position pos:line="118" pos:column="57"/></name><index pos:line="118" pos:column="57">[<expr><literal type="number" pos:line="118" pos:column="58">0<pos:position pos:line="118" pos:column="59"/></literal></expr>]<pos:position pos:line="118" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="118" pos:column="61"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="118" pos:column="63">compare_pt<pos:position pos:line="118" pos:column="73"/></name></expr></argument>)<pos:position pos:line="118" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="75"/></expr_stmt>

	<if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name pos:line="120" pos:column="13">gave_up_on<pos:position pos:line="120" pos:column="23"/></name></expr>)<pos:position pos:line="120" pos:column="24"/></condition><then pos:line="120" pos:column="24"> <block pos:line="120" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="121" pos:column="17">commit_list_insert_by_date<pos:position pos:line="121" pos:column="43"/></name><argument_list pos:line="121" pos:column="43">(<argument><expr><name pos:line="121" pos:column="44">gave_up_on<pos:position pos:line="121" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="56">&amp;<pos:position pos:line="121" pos:column="61"/></operator><name pos:line="121" pos:column="57">list<pos:position pos:line="121" pos:column="61"/></name></expr></argument>)<pos:position pos:line="121" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name pos:line="122" pos:column="17">seen_commits<pos:position pos:line="122" pos:column="29"/></name><operator pos:line="122" pos:column="29">--<pos:position pos:line="122" pos:column="31"/></operator></expr>;<pos:position pos:line="122" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="123" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="124" pos:column="9">seen_commits<pos:position pos:line="124" pos:column="21"/></name> <operator pos:line="124" pos:column="22">+=<pos:position pos:line="124" pos:column="24"/></operator> <call><name pos:line="124" pos:column="25">finish_depth_computation<pos:position pos:line="124" pos:column="49"/></name><argument_list pos:line="124" pos:column="49">(<argument><expr><operator pos:line="124" pos:column="50">&amp;<pos:position pos:line="124" pos:column="55"/></operator><name pos:line="124" pos:column="51">list<pos:position pos:line="124" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="57">&amp;<pos:position pos:line="124" pos:column="62"/></operator><name><name pos:line="124" pos:column="58">all_matches<pos:position pos:line="124" pos:column="69"/></name><index pos:line="124" pos:column="69">[<expr><literal type="number" pos:line="124" pos:column="70">0<pos:position pos:line="124" pos:column="71"/></literal></expr>]<pos:position pos:line="124" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="124" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="125" pos:column="9">free_commit_list<pos:position pos:line="125" pos:column="25"/></name><argument_list pos:line="125" pos:column="25">(<argument><expr><name pos:line="125" pos:column="26">list<pos:position pos:line="125" pos:column="30"/></name></expr></argument>)<pos:position pos:line="125" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="32"/></expr_stmt>

	<if pos:line="127" pos:column="9">if <condition pos:line="127" pos:column="12">(<expr><name pos:line="127" pos:column="13">debug<pos:position pos:line="127" pos:column="18"/></name></expr>)<pos:position pos:line="127" pos:column="19"/></condition><then pos:line="127" pos:column="19"> <block pos:line="127" pos:column="20">{
		<for pos:line="128" pos:column="17">for <control pos:line="128" pos:column="21">(<init><expr><name pos:line="128" pos:column="22">cur_match<pos:position pos:line="128" pos:column="31"/></name> <operator pos:line="128" pos:column="32">=<pos:position pos:line="128" pos:column="33"/></operator> <literal type="number" pos:line="128" pos:column="34">0<pos:position pos:line="128" pos:column="35"/></literal></expr>;<pos:position pos:line="128" pos:column="36"/></init> <condition><expr><name pos:line="128" pos:column="37">cur_match<pos:position pos:line="128" pos:column="46"/></name> <operator pos:line="128" pos:column="47">&lt;<pos:position pos:line="128" pos:column="51"/></operator> <name pos:line="128" pos:column="49">match_cnt<pos:position pos:line="128" pos:column="58"/></name></expr>;<pos:position pos:line="128" pos:column="59"/></condition> <incr><expr><name pos:line="128" pos:column="60">cur_match<pos:position pos:line="128" pos:column="69"/></name><operator pos:line="128" pos:column="69">++<pos:position pos:line="128" pos:column="71"/></operator></expr></incr>)<pos:position pos:line="128" pos:column="72"/></control> <block pos:line="128" pos:column="73">{
			<decl_stmt><decl><type><name><name pos:line="129" pos:column="25">struct<pos:position pos:line="129" pos:column="31"/></name> <name pos:line="129" pos:column="32">possible_tag<pos:position pos:line="129" pos:column="44"/></name></name> <modifier pos:line="129" pos:column="45">*<pos:position pos:line="129" pos:column="46"/></modifier></type><name pos:line="129" pos:column="46">t<pos:position pos:line="129" pos:column="47"/></name> <init pos:line="129" pos:column="48">= <expr><operator pos:line="129" pos:column="50">&amp;<pos:position pos:line="129" pos:column="55"/></operator><name><name pos:line="129" pos:column="51">all_matches<pos:position pos:line="129" pos:column="62"/></name><index pos:line="129" pos:column="62">[<expr><name pos:line="129" pos:column="63">cur_match<pos:position pos:line="129" pos:column="72"/></name></expr>]<pos:position pos:line="129" pos:column="73"/></index></name></expr></init></decl>;<pos:position pos:line="129" pos:column="74"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="130" pos:column="25">fprintf<pos:position pos:line="130" pos:column="32"/></name><argument_list pos:line="130" pos:column="32">(<argument><expr><name pos:line="130" pos:column="33">stderr<pos:position pos:line="130" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="41">" %-11s %8d %s\n"<pos:position pos:line="130" pos:column="58"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="131" pos:column="33">prio_names<pos:position pos:line="131" pos:column="43"/></name><index pos:line="131" pos:column="43">[<expr><name><name pos:line="131" pos:column="44">t<pos:position pos:line="131" pos:column="45"/></name><operator pos:line="131" pos:column="45">-&gt;<pos:position pos:line="131" pos:column="50"/></operator><name pos:line="131" pos:column="47">name<pos:position pos:line="131" pos:column="51"/></name><operator pos:line="131" pos:column="51">-&gt;<pos:position pos:line="131" pos:column="56"/></operator><name pos:line="131" pos:column="53">prio<pos:position pos:line="131" pos:column="57"/></name></name></expr>]<pos:position pos:line="131" pos:column="58"/></index></name></expr></argument>,
				<argument><expr><name><name pos:line="132" pos:column="33">t<pos:position pos:line="132" pos:column="34"/></name><operator pos:line="132" pos:column="34">-&gt;<pos:position pos:line="132" pos:column="39"/></operator><name pos:line="132" pos:column="36">depth<pos:position pos:line="132" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="43">t<pos:position pos:line="132" pos:column="44"/></name><operator pos:line="132" pos:column="44">-&gt;<pos:position pos:line="132" pos:column="49"/></operator><name pos:line="132" pos:column="46">name<pos:position pos:line="132" pos:column="50"/></name><operator pos:line="132" pos:column="50">-&gt;<pos:position pos:line="132" pos:column="55"/></operator><name pos:line="132" pos:column="52">path<pos:position pos:line="132" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="58"/></expr_stmt>
		}<pos:position pos:line="133" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="134" pos:column="17">fprintf<pos:position pos:line="134" pos:column="24"/></name><argument_list pos:line="134" pos:column="24">(<argument><expr><name pos:line="134" pos:column="25">stderr<pos:position pos:line="134" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="134" pos:column="33">_<pos:position pos:line="134" pos:column="34"/></name><argument_list pos:line="134" pos:column="34">(<argument><expr><literal type="string" pos:line="134" pos:column="35">"traversed %lu commits\n"<pos:position pos:line="134" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="134" pos:column="63">seen_commits<pos:position pos:line="134" pos:column="75"/></name></expr></argument>)<pos:position pos:line="134" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="77"/></expr_stmt>
		<if pos:line="135" pos:column="17">if <condition pos:line="135" pos:column="20">(<expr><name pos:line="135" pos:column="21">gave_up_on<pos:position pos:line="135" pos:column="31"/></name></expr>)<pos:position pos:line="135" pos:column="32"/></condition><then pos:line="135" pos:column="32"> <block pos:line="135" pos:column="33">{
			<expr_stmt><expr><call><name pos:line="136" pos:column="25">fprintf<pos:position pos:line="136" pos:column="32"/></name><argument_list pos:line="136" pos:column="32">(<argument><expr><name pos:line="136" pos:column="33">stderr<pos:position pos:line="136" pos:column="39"/></name></expr></argument>,
				<argument><expr><call><name pos:line="137" pos:column="33">_<pos:position pos:line="137" pos:column="34"/></name><argument_list pos:line="137" pos:column="34">(<argument><expr><literal type="string" pos:line="137" pos:column="35">"more than %i tags found; listed %i most recent\n"<pos:position pos:line="137" pos:column="85"/></literal>
				<literal type="string" pos:line="138" pos:column="33">"gave up search at %s\n"<pos:position pos:line="138" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="58"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="139" pos:column="33">max_candidates<pos:position pos:line="139" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="49">max_candidates<pos:position pos:line="139" pos:column="63"/></name></expr></argument>,
				<argument><expr><call><name pos:line="140" pos:column="33">sha1_to_hex<pos:position pos:line="140" pos:column="44"/></name><argument_list pos:line="140" pos:column="44">(<argument><expr><name><name pos:line="140" pos:column="45">gave_up_on<pos:position pos:line="140" pos:column="55"/></name><operator pos:line="140" pos:column="55">-&gt;<pos:position pos:line="140" pos:column="60"/></operator><name pos:line="140" pos:column="57">object<pos:position pos:line="140" pos:column="63"/></name><operator pos:line="140" pos:column="63">.<pos:position pos:line="140" pos:column="64"/></operator><name pos:line="140" pos:column="64">sha1<pos:position pos:line="140" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="140" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="141" pos:column="18"/></block></then></if>
	}<pos:position pos:line="142" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="144" pos:column="9">display_name<pos:position pos:line="144" pos:column="21"/></name><argument_list pos:line="144" pos:column="21">(<argument><expr><name><name pos:line="144" pos:column="22">all_matches<pos:position pos:line="144" pos:column="33"/></name><index pos:line="144" pos:column="33">[<expr><literal type="number" pos:line="144" pos:column="34">0<pos:position pos:line="144" pos:column="35"/></literal></expr>]<pos:position pos:line="144" pos:column="36"/></index></name><operator pos:line="144" pos:column="36">.<pos:position pos:line="144" pos:column="37"/></operator><name pos:line="144" pos:column="37">name<pos:position pos:line="144" pos:column="41"/></name></expr></argument>)<pos:position pos:line="144" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="43"/></expr_stmt>
	<if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><name pos:line="145" pos:column="13">abbrev<pos:position pos:line="145" pos:column="19"/></name></expr>)<pos:position pos:line="145" pos:column="20"/></condition><then pos:line="145" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="146" pos:column="17">show_suffix<pos:position pos:line="146" pos:column="28"/></name><argument_list pos:line="146" pos:column="28">(<argument><expr><name><name pos:line="146" pos:column="29">all_matches<pos:position pos:line="146" pos:column="40"/></name><index pos:line="146" pos:column="40">[<expr><literal type="number" pos:line="146" pos:column="41">0<pos:position pos:line="146" pos:column="42"/></literal></expr>]<pos:position pos:line="146" pos:column="43"/></index></name><operator pos:line="146" pos:column="43">.<pos:position pos:line="146" pos:column="44"/></operator><name pos:line="146" pos:column="44">depth<pos:position pos:line="146" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="146" pos:column="51">cmit<pos:position pos:line="146" pos:column="55"/></name><operator pos:line="146" pos:column="55">-&gt;<pos:position pos:line="146" pos:column="60"/></operator><name pos:line="146" pos:column="57">object<pos:position pos:line="146" pos:column="63"/></name><operator pos:line="146" pos:column="63">.<pos:position pos:line="146" pos:column="64"/></operator><name pos:line="146" pos:column="64">sha1<pos:position pos:line="146" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="146" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="70"/></expr_stmt></block></then></if>
	<if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><name pos:line="147" pos:column="13">dirty<pos:position pos:line="147" pos:column="18"/></name></expr>)<pos:position pos:line="147" pos:column="19"/></condition><then pos:line="147" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="148" pos:column="17">printf<pos:position pos:line="148" pos:column="23"/></name><argument_list pos:line="148" pos:column="23">(<argument><expr><literal type="string" pos:line="148" pos:column="24">"%s"<pos:position pos:line="148" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="148" pos:column="30">dirty<pos:position pos:line="148" pos:column="35"/></name></expr></argument>)<pos:position pos:line="148" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="37"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="149" pos:column="9">printf<pos:position pos:line="149" pos:column="15"/></name><argument_list pos:line="149" pos:column="15">(<argument><expr><literal type="string" pos:line="149" pos:column="16">"\n"<pos:position pos:line="149" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="22"/></expr_stmt>

	<if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><operator pos:line="151" pos:column="13">!<pos:position pos:line="151" pos:column="14"/></operator><name pos:line="151" pos:column="14">last_one<pos:position pos:line="151" pos:column="22"/></name></expr>)<pos:position pos:line="151" pos:column="23"/></condition><then pos:line="151" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="152" pos:column="17">clear_commit_marks<pos:position pos:line="152" pos:column="35"/></name><argument_list pos:line="152" pos:column="35">(<argument><expr><name pos:line="152" pos:column="36">cmit<pos:position pos:line="152" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="152" pos:column="42">-<pos:position pos:line="152" pos:column="43"/></operator><literal type="number" pos:line="152" pos:column="43">1<pos:position pos:line="152" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="46"/></expr_stmt></block></then></if>
}<pos:position pos:line="153" pos:column="2"/></block></function></unit>

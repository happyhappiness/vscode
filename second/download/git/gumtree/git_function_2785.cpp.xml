<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2785.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">gitdiff_verify_name<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">line<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">isnull<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">orig_name<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="81">int<pos:position pos:line="1" pos:column="84"/></name></type> <name pos:line="1" pos:column="85">side<pos:position pos:line="1" pos:column="89"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="90"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">orig_name<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">&amp;&amp;<pos:position pos:line="3" pos:column="34"/></operator> <operator pos:line="3" pos:column="27">!<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="28">isnull<pos:position pos:line="3" pos:column="34"/></name></expr>)<pos:position pos:line="3" pos:column="35"/></condition><then pos:line="3" pos:column="35">
		<block type="pseudo"><return pos:line="4" pos:column="17">return <expr><call><name pos:line="4" pos:column="24">find_name<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><name pos:line="4" pos:column="34">line<pos:position pos:line="4" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="40">NULL<pos:position pos:line="4" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="46">p_value<pos:position pos:line="4" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="55">TERM_TAB<pos:position pos:line="4" pos:column="63"/></name></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="65"/></return></block></then></if>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">orig_name<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23"> <block pos:line="6" pos:column="24">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">len<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="8" pos:column="17">const<pos:position pos:line="8" pos:column="22"/></specifier> <name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">name<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">another<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">name<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">orig_name<pos:position pos:line="10" pos:column="33"/></name></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="11" pos:column="17">len<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <call><name pos:line="11" pos:column="23">strlen<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">name<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">isnull<pos:position pos:line="12" pos:column="27"/></name></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="25">die<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><call><name pos:line="13" pos:column="29">_<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><literal type="string" pos:line="13" pos:column="31">"git apply: bad git-diff - expected /dev/null, got %s on line %d"<pos:position pos:line="13" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="97"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="99">name<pos:position pos:line="13" pos:column="103"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="105">linenr<pos:position pos:line="13" pos:column="111"/></name></expr></argument>)<pos:position pos:line="13" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="113"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="14" pos:column="17">another<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <call><name pos:line="14" pos:column="27">find_name<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">line<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">NULL<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="49">p_value<pos:position pos:line="14" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="58">TERM_TAB<pos:position pos:line="14" pos:column="66"/></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">another<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">||<pos:position pos:line="15" pos:column="32"/></operator> <call><name pos:line="15" pos:column="33">memcmp<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">another<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="49">name<pos:position pos:line="15" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="55">len<pos:position pos:line="15" pos:column="58"/></name> <operator pos:line="15" pos:column="59">+<pos:position pos:line="15" pos:column="60"/></operator> <literal type="number" pos:line="15" pos:column="61">1<pos:position pos:line="15" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="64"/></condition><then pos:line="15" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">die<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><ternary><condition><expr><operator pos:line="16" pos:column="29">(<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="30">side<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">==<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="38">DIFF_NEW_NAME<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">)<pos:position pos:line="16" pos:column="52"/></operator></expr> ?<pos:position pos:line="16" pos:column="54"/></condition><then pos:line="16" pos:column="54">
			    <expr><call><name pos:line="17" pos:column="29">_<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><literal type="string" pos:line="17" pos:column="31">"git apply: bad git-diff - inconsistent new filename on line %d"<pos:position pos:line="17" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="96"/></argument_list></call></expr> <pos:position pos:line="17" pos:column="97"/></then><else pos:line="17" pos:column="97">:
			    <expr><call><name pos:line="18" pos:column="29">_<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><literal type="string" pos:line="18" pos:column="31">"git apply: bad git-diff - inconsistent old filename on line %d"<pos:position pos:line="18" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="96"/></argument_list></call></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="18" pos:column="98">linenr<pos:position pos:line="18" pos:column="104"/></name></expr></argument>)<pos:position pos:line="18" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="106"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">free<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">another<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><name pos:line="20" pos:column="24">orig_name<pos:position pos:line="20" pos:column="33"/></name></expr>;<pos:position pos:line="20" pos:column="34"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then>
	<else pos:line="22" pos:column="9">else <block pos:line="22" pos:column="14">{
		<comment type="block" pos:line="23" pos:column="17">/* expect "/dev/null" */</comment>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">memcmp<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><literal type="string" pos:line="24" pos:column="28">"/dev/null"<pos:position pos:line="24" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">line<pos:position pos:line="24" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="47">9<pos:position pos:line="24" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call> <operator pos:line="24" pos:column="50">||<pos:position pos:line="24" pos:column="52"/></operator> <name><name pos:line="24" pos:column="53">line<pos:position pos:line="24" pos:column="57"/></name><index pos:line="24" pos:column="57">[<expr><literal type="number" pos:line="24" pos:column="58">9<pos:position pos:line="24" pos:column="59"/></literal></expr>]<pos:position pos:line="24" pos:column="60"/></index></name> <operator pos:line="24" pos:column="61">!=<pos:position pos:line="24" pos:column="63"/></operator> <literal type="char" pos:line="24" pos:column="64">'\n'<pos:position pos:line="24" pos:column="68"/></literal></expr>)<pos:position pos:line="24" pos:column="69"/></condition><then pos:line="24" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">die<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><call><name pos:line="25" pos:column="29">_<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><literal type="string" pos:line="25" pos:column="31">"git apply: bad git-diff - expected /dev/null on line %d"<pos:position pos:line="25" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="89"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="91">linenr<pos:position pos:line="25" pos:column="97"/></name></expr></argument>)<pos:position pos:line="25" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="99"/></expr_stmt></block></then></if>
		<return pos:line="26" pos:column="17">return <expr><name pos:line="26" pos:column="24">NULL<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></else></if>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

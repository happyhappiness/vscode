<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2649.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_sha1_oneline<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">prefix<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">unsigned<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">sha1<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">commit_list<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">list<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit_list<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">backup<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><name pos:line="4" pos:column="38">NULL<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="45">l<pos:position pos:line="4" pos:column="46"/></name></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">found<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">regex_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">regex<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">prefix<pos:position pos:line="8" pos:column="19"/></name><index pos:line="8" pos:column="19">[<expr><literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr>]<pos:position pos:line="8" pos:column="22"/></index></name> <operator pos:line="8" pos:column="23">==<pos:position pos:line="8" pos:column="25"/></operator> <literal type="char" pos:line="8" pos:column="26">'!'<pos:position pos:line="8" pos:column="29"/></literal></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30"> <block pos:line="8" pos:column="31">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name><name pos:line="9" pos:column="21">prefix<pos:position pos:line="9" pos:column="27"/></name><index pos:line="9" pos:column="27">[<expr><literal type="number" pos:line="9" pos:column="28">1<pos:position pos:line="9" pos:column="29"/></literal></expr>]<pos:position pos:line="9" pos:column="30"/></index></name> <operator pos:line="9" pos:column="31">!=<pos:position pos:line="9" pos:column="33"/></operator> <literal type="char" pos:line="9" pos:column="34">'!'<pos:position pos:line="9" pos:column="37"/></literal></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">die<pos:position pos:line="10" pos:column="28"/></name> <argument_list pos:line="10" pos:column="29">(<argument><expr><literal type="string" pos:line="10" pos:column="30">"Invalid search pattern: %s"<pos:position pos:line="10" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="60">prefix<pos:position pos:line="10" pos:column="66"/></name></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="11" pos:column="17">prefix<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">++<pos:position pos:line="11" pos:column="25"/></operator></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">regcomp<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><operator pos:line="14" pos:column="21">&amp;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="22">regex<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="29">prefix<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="37">REG_EXTENDED<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="51"/></condition><then pos:line="14" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">die<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><literal type="string" pos:line="15" pos:column="21">"Invalid search pattern: %s"<pos:position pos:line="15" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="51">prefix<pos:position pos:line="15" pos:column="57"/></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="59"/></expr_stmt></block></then></if>

	<for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">l<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">list<pos:position pos:line="17" pos:column="22"/></name></expr>;<pos:position pos:line="17" pos:column="23"/></init> <condition><expr><name pos:line="17" pos:column="24">l<pos:position pos:line="17" pos:column="25"/></name></expr>;<pos:position pos:line="17" pos:column="26"/></condition> <incr><expr><name pos:line="17" pos:column="27">l<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">=<pos:position pos:line="17" pos:column="30"/></operator> <name><name pos:line="17" pos:column="31">l<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">next<pos:position pos:line="17" pos:column="38"/></name></name></expr></incr>)<pos:position pos:line="17" pos:column="39"/></control> <block pos:line="17" pos:column="40">{
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">l<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">item<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-&gt;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="26">object<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">.<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">flags<pos:position pos:line="18" pos:column="38"/></name></name> <operator pos:line="18" pos:column="39">|=<pos:position pos:line="18" pos:column="41"/></operator> <name pos:line="18" pos:column="42">ONELINE_SEEN<pos:position pos:line="18" pos:column="54"/></name></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">commit_list_insert<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name><name pos:line="19" pos:column="36">l<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">item<pos:position pos:line="19" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="45">&amp;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="46">backup<pos:position pos:line="19" pos:column="52"/></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></for>
	<while pos:line="21" pos:column="9">while <condition pos:line="21" pos:column="15">(<expr><name pos:line="21" pos:column="16">list<pos:position pos:line="21" pos:column="20"/></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition> <block pos:line="21" pos:column="22">{
		<decl_stmt><decl><type><specifier pos:line="22" pos:column="17">const<pos:position pos:line="22" pos:column="22"/></specifier> <name pos:line="22" pos:column="23">char<pos:position pos:line="22" pos:column="27"/></name> <modifier pos:line="22" pos:column="28">*<pos:position pos:line="22" pos:column="29"/></modifier></type><name pos:line="22" pos:column="29">p<pos:position pos:line="22" pos:column="30"/></name></decl>, <modifier pos:line="22" pos:column="32">*<pos:position pos:line="22" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="22" pos:column="33">buf<pos:position pos:line="22" pos:column="36"/></name></decl>;<pos:position pos:line="22" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="23" pos:column="17">struct<pos:position pos:line="23" pos:column="23"/></name> <name pos:line="23" pos:column="24">commit<pos:position pos:line="23" pos:column="30"/></name></name> <modifier pos:line="23" pos:column="31">*<pos:position pos:line="23" pos:column="32"/></modifier></type><name pos:line="23" pos:column="32">commit<pos:position pos:line="23" pos:column="38"/></name></decl>;<pos:position pos:line="23" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">int<pos:position pos:line="24" pos:column="20"/></name></type> <name pos:line="24" pos:column="21">matches<pos:position pos:line="24" pos:column="28"/></name></decl>;<pos:position pos:line="24" pos:column="29"/></decl_stmt>

		<expr_stmt><expr><name pos:line="26" pos:column="17">commit<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <call><name pos:line="26" pos:column="26">pop_most_recent_commit<pos:position pos:line="26" pos:column="48"/></name><argument_list pos:line="26" pos:column="48">(<argument><expr><operator pos:line="26" pos:column="49">&amp;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="50">list<pos:position pos:line="26" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="56">ONELINE_SEEN<pos:position pos:line="26" pos:column="68"/></name></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><call><name pos:line="27" pos:column="22">parse_object<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name><name pos:line="27" pos:column="35">commit<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">object<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">.<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="50">oid<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">.<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="54">hash<pos:position pos:line="27" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="60"/></condition><then pos:line="27" pos:column="60">
			<block type="pseudo"><continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="29" pos:column="17">buf<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <call><name pos:line="29" pos:column="23">get_commit_buffer<pos:position pos:line="29" pos:column="40"/></name><argument_list pos:line="29" pos:column="40">(<argument><expr><name pos:line="29" pos:column="41">commit<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">NULL<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">p<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <call><name pos:line="30" pos:column="21">strstr<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">buf<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="33">"\n\n"<pos:position pos:line="30" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="31" pos:column="17">matches<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <name pos:line="31" pos:column="27">p<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">&amp;&amp;<pos:position pos:line="31" pos:column="39"/></operator> <operator pos:line="31" pos:column="32">!<pos:position pos:line="31" pos:column="33"/></operator><call><name pos:line="31" pos:column="33">regexec<pos:position pos:line="31" pos:column="40"/></name><argument_list pos:line="31" pos:column="40">(<argument><expr><operator pos:line="31" pos:column="41">&amp;<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="42">regex<pos:position pos:line="31" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="49">p<pos:position pos:line="31" pos:column="50"/></name> <operator pos:line="31" pos:column="51">+<pos:position pos:line="31" pos:column="52"/></operator> <literal type="number" pos:line="31" pos:column="53">2<pos:position pos:line="31" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="56">0<pos:position pos:line="31" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="59">NULL<pos:position pos:line="31" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="65">0<pos:position pos:line="31" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">unuse_commit_buffer<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><name pos:line="32" pos:column="37">commit<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="45">buf<pos:position pos:line="32" pos:column="48"/></name></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="50"/></expr_stmt>

		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">matches<pos:position pos:line="34" pos:column="28"/></name></expr>)<pos:position pos:line="34" pos:column="29"/></condition><then pos:line="34" pos:column="29"> <block pos:line="34" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">hashcpy<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><name pos:line="35" pos:column="33">sha1<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="39">commit<pos:position pos:line="35" pos:column="45"/></name><operator pos:line="35" pos:column="45">-&gt;<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="47">object<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">.<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="54">oid<pos:position pos:line="35" pos:column="57"/></name><operator pos:line="35" pos:column="57">.<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="58">hash<pos:position pos:line="35" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><name pos:line="36" pos:column="25">found<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">=<pos:position pos:line="36" pos:column="32"/></operator> <literal type="number" pos:line="36" pos:column="33">1<pos:position pos:line="36" pos:column="34"/></literal></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
			<break pos:line="37" pos:column="25">break;<pos:position pos:line="37" pos:column="31"/></break>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>
	}<pos:position pos:line="39" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">regfree<pos:position pos:line="40" pos:column="16"/></name><argument_list pos:line="40" pos:column="16">(<argument><expr><operator pos:line="40" pos:column="17">&amp;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="18">regex<pos:position pos:line="40" pos:column="23"/></name></expr></argument>)<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">free_commit_list<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">list<pos:position pos:line="41" pos:column="30"/></name></expr></argument>)<pos:position pos:line="41" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>
	<for pos:line="42" pos:column="9">for <control pos:line="42" pos:column="13">(<init><expr><name pos:line="42" pos:column="14">l<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <name pos:line="42" pos:column="18">backup<pos:position pos:line="42" pos:column="24"/></name></expr>;<pos:position pos:line="42" pos:column="25"/></init> <condition><expr><name pos:line="42" pos:column="26">l<pos:position pos:line="42" pos:column="27"/></name></expr>;<pos:position pos:line="42" pos:column="28"/></condition> <incr><expr><name pos:line="42" pos:column="29">l<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">=<pos:position pos:line="42" pos:column="32"/></operator> <name><name pos:line="42" pos:column="33">l<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">-&gt;<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="36">next<pos:position pos:line="42" pos:column="40"/></name></name></expr></incr>)<pos:position pos:line="42" pos:column="41"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="17">clear_commit_marks<pos:position pos:line="43" pos:column="35"/></name><argument_list pos:line="43" pos:column="35">(<argument><expr><name><name pos:line="43" pos:column="36">l<pos:position pos:line="43" pos:column="37"/></name><operator pos:line="43" pos:column="37">-&gt;<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="39">item<pos:position pos:line="43" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="45">ONELINE_SEEN<pos:position pos:line="43" pos:column="57"/></name></expr></argument>)<pos:position pos:line="43" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="59"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">free_commit_list<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">backup<pos:position pos:line="44" pos:column="32"/></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
	<return pos:line="45" pos:column="9">return <expr><ternary><condition><expr><name pos:line="45" pos:column="16">found<pos:position pos:line="45" pos:column="21"/></name></expr> ?<pos:position pos:line="45" pos:column="23"/></condition><then pos:line="45" pos:column="23"> <expr><literal type="number" pos:line="45" pos:column="24">0<pos:position pos:line="45" pos:column="25"/></literal></expr> <pos:position pos:line="45" pos:column="26"/></then><else pos:line="45" pos:column="26">: <expr><operator pos:line="45" pos:column="28">-<pos:position pos:line="45" pos:column="29"/></operator><literal type="number" pos:line="45" pos:column="29">1<pos:position pos:line="45" pos:column="30"/></literal></expr></else></ternary></expr>;<pos:position pos:line="45" pos:column="31"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

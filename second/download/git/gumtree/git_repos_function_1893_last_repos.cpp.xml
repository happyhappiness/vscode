<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1893_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">die_if_checked_out<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">branch<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">ignore_current_worktree<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name><name pos:line="3" pos:column="15">struct<pos:position pos:line="3" pos:column="21"/></name> <name pos:line="3" pos:column="22">worktree<pos:position pos:line="3" pos:column="30"/></name></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">wt<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>

	<expr_stmt><expr><name pos:line="5" pos:column="9">wt<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <call><name pos:line="5" pos:column="14">find_shared_symref<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><literal type="string" pos:line="5" pos:column="33">"HEAD"<pos:position pos:line="5" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="41">branch<pos:position pos:line="5" pos:column="47"/></name></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="49"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">wt<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">||<pos:position pos:line="6" pos:column="19"/></operator> <operator pos:line="6" pos:column="20">(<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">ignore_current_worktree<pos:position pos:line="6" pos:column="44"/></name> <operator pos:line="6" pos:column="45">&amp;&amp;<pos:position pos:line="6" pos:column="55"/></operator> <name><name pos:line="6" pos:column="48">wt<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">-&gt;<pos:position pos:line="6" pos:column="55"/></operator><name pos:line="6" pos:column="52">is_current<pos:position pos:line="6" pos:column="62"/></name></name><operator pos:line="6" pos:column="62">)<pos:position pos:line="6" pos:column="63"/></operator></expr>)<pos:position pos:line="6" pos:column="64"/></condition><then pos:line="6" pos:column="64">
		<block type="pseudo"><return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">skip_prefix<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">branch<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="29">"refs/heads/"<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="44">&amp;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="45">branch<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">die<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><call><name pos:line="9" pos:column="13">_<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><literal type="string" pos:line="9" pos:column="15">"'%s' is already checked out at '%s'"<pos:position pos:line="9" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr></argument>,
	    <argument><expr><name pos:line="10" pos:column="13">branch<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="21">wt<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">path<pos:position pos:line="10" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

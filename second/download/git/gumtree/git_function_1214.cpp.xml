<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1214.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">verify_working_tree_path<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">commit<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">work_tree<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="64">const<pos:position pos:line="1" pos:column="69"/></specifier> <name pos:line="1" pos:column="70">char<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">path<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit_list<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">parents<pos:position pos:line="3" pos:column="36"/></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">pos<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">parents<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">=<pos:position pos:line="6" pos:column="23"/></operator> <name><name pos:line="6" pos:column="24">work_tree<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">parents<pos:position pos:line="6" pos:column="42"/></name></name></expr>;<pos:position pos:line="6" pos:column="43"/></init> <condition><expr><name pos:line="6" pos:column="44">parents<pos:position pos:line="6" pos:column="51"/></name></expr>;<pos:position pos:line="6" pos:column="52"/></condition> <incr><expr><name pos:line="6" pos:column="53">parents<pos:position pos:line="6" pos:column="60"/></name> <operator pos:line="6" pos:column="61">=<pos:position pos:line="6" pos:column="62"/></operator> <name><name pos:line="6" pos:column="63">parents<pos:position pos:line="6" pos:column="70"/></name><operator pos:line="6" pos:column="70">-&gt;<pos:position pos:line="6" pos:column="75"/></operator><name pos:line="6" pos:column="72">next<pos:position pos:line="6" pos:column="76"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="77"/></control> <block pos:line="6" pos:column="78">{
		<decl_stmt><decl><type><specifier pos:line="7" pos:column="17">const<pos:position pos:line="7" pos:column="22"/></specifier> <name><name pos:line="7" pos:column="23">struct<pos:position pos:line="7" pos:column="29"/></name> <name pos:line="7" pos:column="30">object_id<pos:position pos:line="7" pos:column="39"/></name></name> <modifier pos:line="7" pos:column="40">*<pos:position pos:line="7" pos:column="41"/></modifier></type><name pos:line="7" pos:column="41">commit_oid<pos:position pos:line="7" pos:column="51"/></name> <init pos:line="7" pos:column="52">= <expr><operator pos:line="7" pos:column="54">&amp;<pos:position pos:line="7" pos:column="59"/></operator><name><name pos:line="7" pos:column="55">parents<pos:position pos:line="7" pos:column="62"/></name><operator pos:line="7" pos:column="62">-&gt;<pos:position pos:line="7" pos:column="67"/></operator><name pos:line="7" pos:column="64">item<pos:position pos:line="7" pos:column="68"/></name><operator pos:line="7" pos:column="68">-&gt;<pos:position pos:line="7" pos:column="73"/></operator><name pos:line="7" pos:column="70">object<pos:position pos:line="7" pos:column="76"/></name><operator pos:line="7" pos:column="76">.<pos:position pos:line="7" pos:column="77"/></operator><name pos:line="7" pos:column="77">oid<pos:position pos:line="7" pos:column="80"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="81"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">object_id<pos:position pos:line="8" pos:column="33"/></name></name></type> <name pos:line="8" pos:column="34">blob_oid<pos:position pos:line="8" pos:column="42"/></name></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">unsigned<pos:position pos:line="9" pos:column="25"/></name></type> <name pos:line="9" pos:column="26">mode<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><call><name pos:line="11" pos:column="22">get_tree_entry<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name><name pos:line="11" pos:column="37">commit_oid<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">-&gt;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="49">hash<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="55">path<pos:position pos:line="11" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="61">blob_oid<pos:position pos:line="11" pos:column="69"/></name><operator pos:line="11" pos:column="69">.<pos:position pos:line="11" pos:column="70"/></operator><name pos:line="11" pos:column="70">hash<pos:position pos:line="11" pos:column="74"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="76">&amp;<pos:position pos:line="11" pos:column="81"/></operator><name pos:line="11" pos:column="77">mode<pos:position pos:line="11" pos:column="81"/></name></expr></argument>)<pos:position pos:line="11" pos:column="82"/></argument_list></call> <operator pos:line="11" pos:column="83">&amp;&amp;<pos:position pos:line="11" pos:column="93"/></operator>
		    <call><name pos:line="12" pos:column="21">sha1_object_info<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name><name pos:line="12" pos:column="38">blob_oid<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">.<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="47">hash<pos:position pos:line="12" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">NULL<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call> <operator pos:line="12" pos:column="59">==<pos:position pos:line="12" pos:column="61"/></operator> <name pos:line="12" pos:column="62">OBJ_BLOB<pos:position pos:line="12" pos:column="70"/></name></expr>)<pos:position pos:line="12" pos:column="71"/></condition><then pos:line="12" pos:column="71">
			<block type="pseudo"><return pos:line="13" pos:column="25">return;<pos:position pos:line="13" pos:column="32"/></return></block></then></if>
	}<pos:position pos:line="14" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="16" pos:column="9">pos<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">cache_name_pos<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">path<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="36">strlen<pos:position pos:line="16" pos:column="42"/></name><argument_list pos:line="16" pos:column="42">(<argument><expr><name pos:line="16" pos:column="43">path<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">pos<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">&gt;=<pos:position pos:line="17" pos:column="22"/></operator> <literal type="number" pos:line="17" pos:column="20">0<pos:position pos:line="17" pos:column="21"/></literal></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22">
		<block type="pseudo"><empty_stmt pos:line="18" pos:column="17">;<pos:position pos:line="18" pos:column="18"/></empty_stmt></block></then> <comment type="block" pos:line="18" pos:column="19">/* path is in the index */</comment>
	<elseif pos:line="19" pos:column="9">else <if pos:line="19" pos:column="14">if <condition pos:line="19" pos:column="17">(<expr><operator pos:line="19" pos:column="18">-<pos:position pos:line="19" pos:column="19"/></operator><literal type="number" pos:line="19" pos:column="19">1<pos:position pos:line="19" pos:column="20"/></literal> <operator pos:line="19" pos:column="21">-<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">pos<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">&lt;<pos:position pos:line="19" pos:column="31"/></operator> <name pos:line="19" pos:column="29">active_nr<pos:position pos:line="19" pos:column="38"/></name> <operator pos:line="19" pos:column="39">&amp;&amp;<pos:position pos:line="19" pos:column="49"/></operator>
		 <operator pos:line="20" pos:column="18">!<pos:position pos:line="20" pos:column="19"/></operator><call><name pos:line="20" pos:column="19">strcmp<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name><name pos:line="20" pos:column="26">active_cache<pos:position pos:line="20" pos:column="38"/></name><index pos:line="20" pos:column="38">[<expr><operator pos:line="20" pos:column="39">-<pos:position pos:line="20" pos:column="40"/></operator><literal type="number" pos:line="20" pos:column="40">1<pos:position pos:line="20" pos:column="41"/></literal> <operator pos:line="20" pos:column="42">-<pos:position pos:line="20" pos:column="43"/></operator> <name pos:line="20" pos:column="44">pos<pos:position pos:line="20" pos:column="47"/></name></expr>]<pos:position pos:line="20" pos:column="48"/></index></name><operator pos:line="20" pos:column="48">-&gt;<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="50">name<pos:position pos:line="20" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="56">path<pos:position pos:line="20" pos:column="60"/></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="62"/></condition><then pos:line="20" pos:column="62">
		<block type="pseudo"><empty_stmt pos:line="21" pos:column="17">;<pos:position pos:line="21" pos:column="18"/></empty_stmt></block></then></if></elseif> <comment type="block" pos:line="21" pos:column="19">/* path is in the index, unmerged */</comment>
	<else pos:line="22" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">die<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><literal type="string" pos:line="23" pos:column="21">"no such path '%s' in HEAD"<pos:position pos:line="23" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">path<pos:position pos:line="23" pos:column="54"/></name></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt></block></else></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

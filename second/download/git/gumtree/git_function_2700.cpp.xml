<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2700.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">color_atom_parser<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">used_atom<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">atom<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">color_value<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">color_value<pos:position pos:line="3" pos:column="25"/></name></expr>)<pos:position pos:line="3" pos:column="26"/></condition><then pos:line="3" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="17">die<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><call><name pos:line="4" pos:column="21">_<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><literal type="string" pos:line="4" pos:column="23">"expected format: %%(color:&lt;color&gt;)"<pos:position pos:line="4" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="62"/></expr_stmt></block></then></if>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">color_parse<pos:position pos:line="5" pos:column="24"/></name><argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">color_value<pos:position pos:line="5" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="38">atom<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">u<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">.<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">color<pos:position pos:line="5" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call> <operator pos:line="5" pos:column="53">&lt;<pos:position pos:line="5" pos:column="57"/></operator> <literal type="number" pos:line="5" pos:column="55">0<pos:position pos:line="5" pos:column="56"/></literal></expr>)<pos:position pos:line="5" pos:column="57"/></condition><then pos:line="5" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">die<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><call><name pos:line="6" pos:column="21">_<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><literal type="string" pos:line="6" pos:column="23">"unrecognized color: %%(color:%s)"<pos:position pos:line="6" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="6" pos:column="60">color_value<pos:position pos:line="6" pos:column="71"/></name></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="73"/></expr_stmt></block></then></if>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

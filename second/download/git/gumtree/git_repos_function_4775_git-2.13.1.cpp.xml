<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4775_git-2.13.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ewah_set<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">ewah_bitmap<pos:position pos:line="1" pos:column="33"/></name></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">self<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">size_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">i<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">size_t<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">dist<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">=
		<expr><operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">i<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">+<pos:position pos:line="4" pos:column="21"/></operator> <name pos:line="4" pos:column="22">BITS_IN_EWORD<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">)<pos:position pos:line="4" pos:column="36"/></operator> <operator pos:line="4" pos:column="37">/<pos:position pos:line="4" pos:column="38"/></operator> <name pos:line="4" pos:column="39">BITS_IN_EWORD<pos:position pos:line="4" pos:column="52"/></name> <operator pos:line="4" pos:column="53">-<pos:position pos:line="4" pos:column="54"/></operator>
		<operator pos:line="5" pos:column="17">(<pos:position pos:line="5" pos:column="18"/></operator><name><name pos:line="5" pos:column="18">self<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">bit_size<pos:position pos:line="5" pos:column="32"/></name></name> <operator pos:line="5" pos:column="33">+<pos:position pos:line="5" pos:column="34"/></operator> <name pos:line="5" pos:column="35">BITS_IN_EWORD<pos:position pos:line="5" pos:column="48"/></name> <operator pos:line="5" pos:column="49">-<pos:position pos:line="5" pos:column="50"/></operator> <literal type="number" pos:line="5" pos:column="51">1<pos:position pos:line="5" pos:column="52"/></literal><operator pos:line="5" pos:column="52">)<pos:position pos:line="5" pos:column="53"/></operator> <operator pos:line="5" pos:column="54">/<pos:position pos:line="5" pos:column="55"/></operator> <name pos:line="5" pos:column="56">BITS_IN_EWORD<pos:position pos:line="5" pos:column="69"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="70"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">assert<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">i<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">&gt;=<pos:position pos:line="7" pos:column="23"/></operator> <name><name pos:line="7" pos:column="21">self<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">bit_size<pos:position pos:line="7" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="9" pos:column="9">self<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">bit_size<pos:position pos:line="9" pos:column="23"/></name></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">i<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">+<pos:position pos:line="9" pos:column="29"/></operator> <literal type="number" pos:line="9" pos:column="30">1<pos:position pos:line="9" pos:column="31"/></literal></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">dist<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">&gt;<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22"> <block pos:line="11" pos:column="23">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">dist<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">&gt;<pos:position pos:line="12" pos:column="30"/></operator> <literal type="number" pos:line="12" pos:column="28">1<pos:position pos:line="12" pos:column="29"/></literal></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="25">add_empty_words<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><expr><name pos:line="13" pos:column="41">self<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="47">0<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">dist<pos:position pos:line="13" pos:column="54"/></name> <operator pos:line="13" pos:column="55">-<pos:position pos:line="13" pos:column="56"/></operator> <literal type="number" pos:line="13" pos:column="57">1<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="15" pos:column="17">add_literal<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">self<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="35">(<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">eword_t<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">)<pos:position pos:line="15" pos:column="44"/></operator><literal type="number" pos:line="15" pos:column="44">1<pos:position pos:line="15" pos:column="45"/></literal> <operator pos:line="15" pos:column="46">&lt;&lt;<pos:position pos:line="15" pos:column="54"/></operator> <operator pos:line="15" pos:column="49">(<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">i<pos:position pos:line="15" pos:column="51"/></name> <operator pos:line="15" pos:column="52">%<pos:position pos:line="15" pos:column="53"/></operator> <name pos:line="15" pos:column="54">BITS_IN_EWORD<pos:position pos:line="15" pos:column="67"/></name><operator pos:line="15" pos:column="67">)<pos:position pos:line="15" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt>
		<return pos:line="16" pos:column="17">return;<pos:position pos:line="16" pos:column="24"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">rlw_get_literal_words<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><name><name pos:line="19" pos:column="35">self<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">rlw<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call> <operator pos:line="19" pos:column="46">==<pos:position pos:line="19" pos:column="48"/></operator> <literal type="number" pos:line="19" pos:column="49">0<pos:position pos:line="19" pos:column="50"/></literal></expr>)<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51"> <block pos:line="19" pos:column="52">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">rlw_set_running_len<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name><name pos:line="20" pos:column="37">self<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">-&gt;<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="43">rlw<pos:position pos:line="20" pos:column="46"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="21" pos:column="25">rlw_get_running_len<pos:position pos:line="21" pos:column="44"/></name><argument_list pos:line="21" pos:column="44">(<argument><expr><name><name pos:line="21" pos:column="45">self<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">-&gt;<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="51">rlw<pos:position pos:line="21" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call> <operator pos:line="21" pos:column="56">-<pos:position pos:line="21" pos:column="57"/></operator> <literal type="number" pos:line="21" pos:column="58">1<pos:position pos:line="21" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">add_literal<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">self<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="35">(<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">eword_t<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">)<pos:position pos:line="22" pos:column="44"/></operator><literal type="number" pos:line="22" pos:column="44">1<pos:position pos:line="22" pos:column="45"/></literal> <operator pos:line="22" pos:column="46">&lt;&lt;<pos:position pos:line="22" pos:column="54"/></operator> <operator pos:line="22" pos:column="49">(<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="50">i<pos:position pos:line="22" pos:column="51"/></name> <operator pos:line="22" pos:column="52">%<pos:position pos:line="22" pos:column="53"/></operator> <name pos:line="22" pos:column="54">BITS_IN_EWORD<pos:position pos:line="22" pos:column="67"/></name><operator pos:line="22" pos:column="67">)<pos:position pos:line="22" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="22" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="70"/></expr_stmt>
		<return pos:line="23" pos:column="17">return;<pos:position pos:line="23" pos:column="24"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="26" pos:column="9">self<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">-&gt;<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="15">buffer<pos:position pos:line="26" pos:column="21"/></name><index pos:line="26" pos:column="21">[<expr><name><name pos:line="26" pos:column="22">self<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">buffer_size<pos:position pos:line="26" pos:column="39"/></name></name> <operator pos:line="26" pos:column="40">-<pos:position pos:line="26" pos:column="41"/></operator> <literal type="number" pos:line="26" pos:column="42">1<pos:position pos:line="26" pos:column="43"/></literal></expr>]<pos:position pos:line="26" pos:column="44"/></index></name> <operator pos:line="26" pos:column="45">|=<pos:position pos:line="26" pos:column="47"/></operator>
		<operator pos:line="27" pos:column="17">(<pos:position pos:line="27" pos:column="18"/></operator><operator pos:line="27" pos:column="18">(<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">eword_t<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">)<pos:position pos:line="27" pos:column="27"/></operator><literal type="number" pos:line="27" pos:column="27">1<pos:position pos:line="27" pos:column="28"/></literal> <operator pos:line="27" pos:column="29">&lt;&lt;<pos:position pos:line="27" pos:column="37"/></operator> <operator pos:line="27" pos:column="32">(<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="33">i<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">%<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">BITS_IN_EWORD<pos:position pos:line="27" pos:column="50"/></name><operator pos:line="27" pos:column="50">)<pos:position pos:line="27" pos:column="51"/></operator><operator pos:line="27" pos:column="51">)<pos:position pos:line="27" pos:column="52"/></operator></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>

	<comment type="block" pos:line="29" pos:column="9">/* check if we just completed a stream of 1s */</comment>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">self<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">buffer<pos:position pos:line="30" pos:column="25"/></name><index pos:line="30" pos:column="25">[<expr><name><name pos:line="30" pos:column="26">self<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">-&gt;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="32">buffer_size<pos:position pos:line="30" pos:column="43"/></name></name> <operator pos:line="30" pos:column="44">-<pos:position pos:line="30" pos:column="45"/></operator> <literal type="number" pos:line="30" pos:column="46">1<pos:position pos:line="30" pos:column="47"/></literal></expr>]<pos:position pos:line="30" pos:column="48"/></index></name> <operator pos:line="30" pos:column="49">==<pos:position pos:line="30" pos:column="51"/></operator> <call pos:line="30" pos:column="52">(<name pos:line="30" pos:column="53">eword_t<pos:position pos:line="30" pos:column="60"/></name>)<argument_list pos:line="30" pos:column="61">(<argument><expr><operator pos:line="30" pos:column="62">~<pos:position pos:line="30" pos:column="63"/></operator><literal type="number" pos:line="30" pos:column="63">0<pos:position pos:line="30" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="66"/></condition><then pos:line="30" pos:column="66"> <block pos:line="30" pos:column="67">{
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">self<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">buffer<pos:position pos:line="31" pos:column="29"/></name><index pos:line="31" pos:column="29">[<expr><operator pos:line="31" pos:column="30">--<pos:position pos:line="31" pos:column="32"/></operator><name><name pos:line="31" pos:column="32">self<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">buffer_size<pos:position pos:line="31" pos:column="49"/></name></name></expr>]<pos:position pos:line="31" pos:column="50"/></index></name> <operator pos:line="31" pos:column="51">=<pos:position pos:line="31" pos:column="52"/></operator> <literal type="number" pos:line="31" pos:column="53">0<pos:position pos:line="31" pos:column="54"/></literal></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">rlw_set_literal_words<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name><name pos:line="32" pos:column="39">self<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">-&gt;<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="45">rlw<pos:position pos:line="32" pos:column="48"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="33" pos:column="25">rlw_get_literal_words<pos:position pos:line="33" pos:column="46"/></name><argument_list pos:line="33" pos:column="46">(<argument><expr><name><name pos:line="33" pos:column="47">self<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">-&gt;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="53">rlw<pos:position pos:line="33" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call> <operator pos:line="33" pos:column="58">-<pos:position pos:line="33" pos:column="59"/></operator> <literal type="number" pos:line="33" pos:column="60">1<pos:position pos:line="33" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">add_empty_word<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">self<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="38">1<pos:position pos:line="34" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2961_git-2.11.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_compare_entry_piecewise<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name><name pos:line="1" pos:column="45">struct<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">cache_entry<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">ce<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="69">const<pos:position pos:line="1" pos:column="74"/></specifier> <name><name pos:line="1" pos:column="75">struct<pos:position pos:line="1" pos:column="81"/></name> <name pos:line="1" pos:column="82">traverse_info<pos:position pos:line="1" pos:column="95"/></name></name> <modifier pos:line="1" pos:column="96">*<pos:position pos:line="1" pos:column="97"/></modifier></type><name pos:line="1" pos:column="97">info<pos:position pos:line="1" pos:column="101"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="103">const<pos:position pos:line="1" pos:column="108"/></specifier> <name><name pos:line="1" pos:column="109">struct<pos:position pos:line="1" pos:column="115"/></name> <name pos:line="1" pos:column="116">name_entry<pos:position pos:line="1" pos:column="126"/></name></name> <modifier pos:line="1" pos:column="127">*<pos:position pos:line="1" pos:column="128"/></modifier></type><name pos:line="1" pos:column="128">n<pos:position pos:line="1" pos:column="129"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="130"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">len<pos:position pos:line="3" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="18">pathlen<pos:position pos:line="3" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="27">ce_len<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">ce_name<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">info<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">prev<pos:position pos:line="6" pos:column="23"/></name></name></expr>)<pos:position pos:line="6" pos:column="24"/></condition><then pos:line="6" pos:column="24"> <block pos:line="6" pos:column="25">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">cmp<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><call><name pos:line="7" pos:column="27">do_compare_entry_piecewise<pos:position pos:line="7" pos:column="53"/></name><argument_list pos:line="7" pos:column="53">(<argument><expr><name pos:line="7" pos:column="54">ce<pos:position pos:line="7" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="58">info<pos:position pos:line="7" pos:column="62"/></name><operator pos:line="7" pos:column="62">-&gt;<pos:position pos:line="7" pos:column="67"/></operator><name pos:line="7" pos:column="64">prev<pos:position pos:line="7" pos:column="68"/></name></name></expr></argument>,
						     <argument><expr><operator pos:line="8" pos:column="54">&amp;<pos:position pos:line="8" pos:column="59"/></operator><name><name pos:line="8" pos:column="55">info<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">-&gt;<pos:position pos:line="8" pos:column="64"/></operator><name pos:line="8" pos:column="61">name<pos:position pos:line="8" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="67"/></decl_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">cmp<pos:position pos:line="9" pos:column="24"/></name></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><name pos:line="10" pos:column="32">cmp<pos:position pos:line="10" pos:column="35"/></name></expr>;<pos:position pos:line="10" pos:column="36"/></return></block></then></if>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="12" pos:column="9">pathlen<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name><name pos:line="12" pos:column="19">info<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">pathlen<pos:position pos:line="12" pos:column="32"/></name></name></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">ce_len<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">ce_namelen<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">ce<pos:position pos:line="13" pos:column="31"/></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>

	<comment type="block" pos:line="15" pos:column="9">/* If ce_len &lt; pathlen then we must have previously hit "name == directory" entry */</comment>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">ce_len<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">&lt;<pos:position pos:line="16" pos:column="24"/></operator> <name pos:line="16" pos:column="22">pathlen<pos:position pos:line="16" pos:column="29"/></name></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">-<pos:position pos:line="17" pos:column="25"/></operator><literal type="number" pos:line="17" pos:column="25">1<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="19" pos:column="9">ce_len<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">-=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">pathlen<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">ce_name<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <name><name pos:line="20" pos:column="19">ce<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">name<pos:position pos:line="20" pos:column="27"/></name></name> <operator pos:line="20" pos:column="28">+<pos:position pos:line="20" pos:column="29"/></operator> <name pos:line="20" pos:column="30">pathlen<pos:position pos:line="20" pos:column="37"/></name></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><name pos:line="22" pos:column="9">len<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">tree_entry_len<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">n<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
	<return pos:line="23" pos:column="9">return <expr><call><name pos:line="23" pos:column="16">df_name_compare<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">ce_name<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">ce_len<pos:position pos:line="23" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="49">S_IFREG<pos:position pos:line="23" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="58">n<pos:position pos:line="23" pos:column="59"/></name><operator pos:line="23" pos:column="59">-&gt;<pos:position pos:line="23" pos:column="64"/></operator><name pos:line="23" pos:column="61">path<pos:position pos:line="23" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="67">len<pos:position pos:line="23" pos:column="70"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="72">n<pos:position pos:line="23" pos:column="73"/></name><operator pos:line="23" pos:column="73">-&gt;<pos:position pos:line="23" pos:column="78"/></operator><name pos:line="23" pos:column="75">mode<pos:position pos:line="23" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="81"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4418_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_branches_file<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">remote<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">remote<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">frag<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">FILE<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">f<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><call><name pos:line="5" pos:column="19">fopen_or_warn<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><call><name pos:line="5" pos:column="33">git_path<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><literal type="string" pos:line="5" pos:column="42">"branches/%s"<pos:position pos:line="5" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="57">remote<pos:position pos:line="5" pos:column="63"/></name><operator pos:line="5" pos:column="63">-&gt;<pos:position pos:line="5" pos:column="68"/></operator><name pos:line="5" pos:column="65">name<pos:position pos:line="5" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="72">"r"<pos:position pos:line="5" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="77"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">f<pos:position pos:line="7" pos:column="15"/></name></expr>)<pos:position pos:line="7" pos:column="16"/></condition><then pos:line="7" pos:column="16">
		<block type="pseudo"><return pos:line="8" pos:column="17">return;<pos:position pos:line="8" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">strbuf_getline_lf<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><operator pos:line="10" pos:column="27">&amp;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="28">buf<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">f<pos:position pos:line="10" pos:column="34"/></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">fclose<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">f<pos:position pos:line="11" pos:column="17"/></name></expr></argument>)<pos:position pos:line="11" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">strbuf_trim<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><operator pos:line="12" pos:column="21">&amp;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="22">buf<pos:position pos:line="12" pos:column="25"/></name></expr></argument>)<pos:position pos:line="12" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name><name pos:line="13" pos:column="14">buf<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">len<pos:position pos:line="13" pos:column="21"/></name></name></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22"> <block pos:line="13" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">strbuf_release<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><operator pos:line="14" pos:column="32">&amp;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="33">buf<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
		<return pos:line="15" pos:column="17">return;<pos:position pos:line="15" pos:column="24"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="18" pos:column="9">remote<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">configured_in_repo<pos:position pos:line="18" pos:column="35"/></name></name> <operator pos:line="18" pos:column="36">=<pos:position pos:line="18" pos:column="37"/></operator> <literal type="number" pos:line="18" pos:column="38">1<pos:position pos:line="18" pos:column="39"/></literal></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">remote<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">origin<pos:position pos:line="19" pos:column="23"/></name></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">REMOTE_BRANCHES<pos:position pos:line="19" pos:column="41"/></name></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>

	<comment type="block" pos:line="21" pos:column="9">/*
	 * The branches file would have URL and optionally
	 * #branch specified.  The "master" (or specified) branch is
	 * fetched and stored in the local branch matching the
	 * remote name.
	 */</comment>
	<expr_stmt><expr><name pos:line="27" pos:column="9">frag<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">strchr<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name><name pos:line="27" pos:column="23">buf<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">.<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">buf<pos:position pos:line="27" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="27" pos:column="32">'#'<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">frag<pos:position pos:line="28" pos:column="17"/></name></expr>)<pos:position pos:line="28" pos:column="18"/></condition><then pos:line="28" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="29" pos:column="17">*<pos:position pos:line="29" pos:column="18"/></operator><operator pos:line="29" pos:column="18">(<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">frag<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">++<pos:position pos:line="29" pos:column="25"/></operator><operator pos:line="29" pos:column="25">)<pos:position pos:line="29" pos:column="26"/></operator> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <literal type="char" pos:line="29" pos:column="29">'\0'<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt></block></then>
	<else pos:line="30" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="17">frag<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <literal type="string" pos:line="31" pos:column="24">"master"<pos:position pos:line="31" pos:column="32"/></literal></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="33" pos:column="9">add_url_alias<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">remote<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="31">strbuf_detach<pos:position pos:line="33" pos:column="44"/></name><argument_list pos:line="33" pos:column="44">(<argument><expr><operator pos:line="33" pos:column="45">&amp;<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="46">buf<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">NULL<pos:position pos:line="33" pos:column="55"/></name></expr></argument>)<pos:position pos:line="33" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">add_fetch_refspec<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">remote<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="35">xstrfmt<pos:position pos:line="34" pos:column="42"/></name><argument_list pos:line="34" pos:column="42">(<argument><expr><literal type="string" pos:line="34" pos:column="43">"refs/heads/%s:refs/heads/%s"<pos:position pos:line="34" pos:column="72"/></literal></expr></argument>,
					  <argument><expr><name pos:line="35" pos:column="43">frag<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="49">remote<pos:position pos:line="35" pos:column="55"/></name><operator pos:line="35" pos:column="55">-&gt;<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="57">name<pos:position pos:line="35" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="64"/></expr_stmt>

	<comment type="block" pos:line="37" pos:column="9">/*
	 * Cogito compatible push: push current HEAD to remote #branch
	 * (master if missing)
	 */</comment>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">add_push_refspec<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">remote<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="34">xstrfmt<pos:position pos:line="41" pos:column="41"/></name><argument_list pos:line="41" pos:column="41">(<argument><expr><literal type="string" pos:line="41" pos:column="42">"HEAD:refs/heads/%s"<pos:position pos:line="41" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="64">frag<pos:position pos:line="41" pos:column="68"/></name></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="42" pos:column="9">remote<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">-&gt;<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="17">fetch_tags<pos:position pos:line="42" pos:column="27"/></name></name> <operator pos:line="42" pos:column="28">=<pos:position pos:line="42" pos:column="29"/></operator> <literal type="number" pos:line="42" pos:column="30">1<pos:position pos:line="42" pos:column="31"/></literal></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt> <comment type="block" pos:line="42" pos:column="33">/* always auto-follow */</comment>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

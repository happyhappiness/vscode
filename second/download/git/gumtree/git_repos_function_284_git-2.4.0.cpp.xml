<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_284_git-2.4.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">index_name_pos_also_unmerged<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">index_state<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">istate<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
	<parameter><decl><type><specifier pos:line="2" pos:column="9">const<pos:position pos:line="2" pos:column="14"/></specifier> <name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">path<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">int<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">namelen<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">pos<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">index_name_pos<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><name pos:line="4" pos:column="34">istate<pos:position pos:line="4" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="42">path<pos:position pos:line="4" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="48">namelen<pos:position pos:line="4" pos:column="55"/></name></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">cache_entry<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">ce<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">pos<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&gt;=<pos:position pos:line="7" pos:column="22"/></operator> <literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><name pos:line="8" pos:column="24">pos<pos:position pos:line="8" pos:column="27"/></name></expr>;<pos:position pos:line="8" pos:column="28"/></return></block></then></if>

	<comment type="block" pos:line="10" pos:column="9">/* maybe unmerged? */</comment>
	<expr_stmt><expr><name pos:line="11" pos:column="9">pos<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <operator pos:line="11" pos:column="15">-<pos:position pos:line="11" pos:column="16"/></operator><literal type="number" pos:line="11" pos:column="16">1<pos:position pos:line="11" pos:column="17"/></literal> <operator pos:line="11" pos:column="18">-<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">pos<pos:position pos:line="11" pos:column="23"/></name></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">pos<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&gt;=<pos:position pos:line="12" pos:column="22"/></operator> <name><name pos:line="12" pos:column="20">istate<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">cache_nr<pos:position pos:line="12" pos:column="36"/></name></name> <operator pos:line="12" pos:column="37">||<pos:position pos:line="12" pos:column="39"/></operator>
			<call><name pos:line="13" pos:column="25">compare_name<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><operator pos:line="13" pos:column="38">(<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">ce<pos:position pos:line="13" pos:column="41"/></name> <operator pos:line="13" pos:column="42">=<pos:position pos:line="13" pos:column="43"/></operator> <name><name pos:line="13" pos:column="44">istate<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">-&gt;<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="52">cache<pos:position pos:line="13" pos:column="57"/></name><index pos:line="13" pos:column="57">[<expr><name pos:line="13" pos:column="58">pos<pos:position pos:line="13" pos:column="61"/></name></expr>]<pos:position pos:line="13" pos:column="62"/></index></name><operator pos:line="13" pos:column="62">)<pos:position pos:line="13" pos:column="63"/></operator></expr></argument>, <argument><expr><name pos:line="13" pos:column="65">path<pos:position pos:line="13" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="71">namelen<pos:position pos:line="13" pos:column="78"/></name></expr></argument>)<pos:position pos:line="13" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="80"/></condition><then pos:line="13" pos:column="80">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return></block></then></if>

	<comment type="block" pos:line="16" pos:column="9">/* order of preference: stage 2, 1, 3 */</comment>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">ce_stage<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">ce<pos:position pos:line="17" pos:column="24"/></name></expr></argument>)<pos:position pos:line="17" pos:column="25"/></argument_list></call> <operator pos:line="17" pos:column="26">==<pos:position pos:line="17" pos:column="28"/></operator> <literal type="number" pos:line="17" pos:column="29">1<pos:position pos:line="17" pos:column="30"/></literal> <operator pos:line="17" pos:column="31">&amp;&amp;<pos:position pos:line="17" pos:column="41"/></operator> <name pos:line="17" pos:column="34">pos<pos:position pos:line="17" pos:column="37"/></name> <operator pos:line="17" pos:column="38">+<pos:position pos:line="17" pos:column="39"/></operator> <literal type="number" pos:line="17" pos:column="40">1<pos:position pos:line="17" pos:column="41"/></literal> <operator pos:line="17" pos:column="42">&lt;<pos:position pos:line="17" pos:column="46"/></operator> <name><name pos:line="17" pos:column="44">istate<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">-&gt;<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="52">cache_nr<pos:position pos:line="17" pos:column="60"/></name></name> <operator pos:line="17" pos:column="61">&amp;&amp;<pos:position pos:line="17" pos:column="71"/></operator>
			<call><name pos:line="18" pos:column="25">ce_stage<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><operator pos:line="18" pos:column="34">(<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">ce<pos:position pos:line="18" pos:column="37"/></name> <operator pos:line="18" pos:column="38">=<pos:position pos:line="18" pos:column="39"/></operator> <name><name pos:line="18" pos:column="40">istate<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">-&gt;<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="48">cache<pos:position pos:line="18" pos:column="53"/></name><index pos:line="18" pos:column="53">[<expr><name pos:line="18" pos:column="54">pos<pos:position pos:line="18" pos:column="57"/></name> <operator pos:line="18" pos:column="58">+<pos:position pos:line="18" pos:column="59"/></operator> <literal type="number" pos:line="18" pos:column="60">1<pos:position pos:line="18" pos:column="61"/></literal></expr>]<pos:position pos:line="18" pos:column="62"/></index></name><operator pos:line="18" pos:column="62">)<pos:position pos:line="18" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call> <operator pos:line="18" pos:column="65">==<pos:position pos:line="18" pos:column="67"/></operator> <literal type="number" pos:line="18" pos:column="68">2<pos:position pos:line="18" pos:column="69"/></literal> <operator pos:line="18" pos:column="70">&amp;&amp;<pos:position pos:line="18" pos:column="80"/></operator>
			<operator pos:line="19" pos:column="25">!<pos:position pos:line="19" pos:column="26"/></operator><call><name pos:line="19" pos:column="26">compare_name<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name pos:line="19" pos:column="39">ce<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">path<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="49">namelen<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="58"/></condition><then pos:line="19" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="17">pos<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">++<pos:position pos:line="20" pos:column="22"/></operator></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt></block></then></if>
	<return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">pos<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

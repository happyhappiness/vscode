<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5366_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fmt_merge_msg_sigs<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">strbuf<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">out<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">tag_number<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><literal type="number" pos:line="3" pos:column="29">0<pos:position pos:line="3" pos:column="30"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="32">first_tag<pos:position pos:line="3" pos:column="41"/></name> <init pos:line="3" pos:column="42">= <expr><literal type="number" pos:line="3" pos:column="44">0<pos:position pos:line="3" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">tagbuf<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">STRBUF_INIT<pos:position pos:line="4" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name><name pos:line="6" pos:column="25">origins<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">nr<pos:position pos:line="6" pos:column="35"/></name></name></expr>;<pos:position pos:line="6" pos:column="36"/></condition> <incr><expr><name pos:line="6" pos:column="37">i<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">++<pos:position pos:line="6" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="41"/></control> <block pos:line="6" pos:column="42">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">unsigned<pos:position pos:line="7" pos:column="25"/></name> <name pos:line="7" pos:column="26">char<pos:position pos:line="7" pos:column="30"/></name> <modifier pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></modifier></type><name pos:line="7" pos:column="32">sha1<pos:position pos:line="7" pos:column="36"/></name> <init pos:line="7" pos:column="37">= <expr><name><name pos:line="7" pos:column="39">origins<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">.<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="47">items<pos:position pos:line="7" pos:column="52"/></name><index pos:line="7" pos:column="52">[<expr><name pos:line="7" pos:column="53">i<pos:position pos:line="7" pos:column="54"/></name></expr>]<pos:position pos:line="7" pos:column="55"/></index></name><operator pos:line="7" pos:column="55">.<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="56">util<pos:position pos:line="7" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="61"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">enum<pos:position pos:line="8" pos:column="21"/></name> <name pos:line="8" pos:column="22">object_type<pos:position pos:line="8" pos:column="33"/></name></name></type> <name pos:line="8" pos:column="34">type<pos:position pos:line="8" pos:column="38"/></name></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">unsigned<pos:position pos:line="9" pos:column="25"/></name> <name pos:line="9" pos:column="26">long<pos:position pos:line="9" pos:column="30"/></name></type> <name pos:line="9" pos:column="31">size<pos:position pos:line="9" pos:column="35"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="37">len<pos:position pos:line="9" pos:column="40"/></name></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">char<pos:position pos:line="10" pos:column="21"/></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">buf<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><call><name pos:line="10" pos:column="29">read_sha1_file<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">sha1<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="50">&amp;<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="51">type<pos:position pos:line="10" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="57">&amp;<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="58">size<pos:position pos:line="10" pos:column="62"/></name></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="64"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">strbuf<pos:position pos:line="11" pos:column="30"/></name></name></type> <name pos:line="11" pos:column="31">sig<pos:position pos:line="11" pos:column="34"/></name> <init pos:line="11" pos:column="35">= <expr><name pos:line="11" pos:column="37">STRBUF_INIT<pos:position pos:line="11" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="49"/></decl_stmt>

		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">buf<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">||<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="29">type<pos:position pos:line="13" pos:column="33"/></name> <operator pos:line="13" pos:column="34">!=<pos:position pos:line="13" pos:column="36"/></operator> <name pos:line="13" pos:column="37">OBJ_TAG<pos:position pos:line="13" pos:column="44"/></name></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45">
			<block type="pseudo"><goto pos:line="14" pos:column="25">goto <name pos:line="14" pos:column="30">next<pos:position pos:line="14" pos:column="34"/></name>;<pos:position pos:line="14" pos:column="35"/></goto></block></then></if>
		<expr_stmt><expr><name pos:line="15" pos:column="17">len<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <call><name pos:line="15" pos:column="23">parse_signature<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><name pos:line="15" pos:column="39">buf<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">size<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">size<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">==<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">len<pos:position pos:line="17" pos:column="32"/></name></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33">
			<block type="pseudo"><empty_stmt pos:line="18" pos:column="25">;<pos:position pos:line="18" pos:column="26"/></empty_stmt></block></then> <comment type="block" pos:line="18" pos:column="27">/* merely annotated */</comment>
		<elseif pos:line="19" pos:column="17">else <if pos:line="19" pos:column="22">if <condition pos:line="19" pos:column="25">(<expr><call><name pos:line="19" pos:column="26">verify_signed_buffer<pos:position pos:line="19" pos:column="46"/></name><argument_list pos:line="19" pos:column="46">(<argument><expr><name pos:line="19" pos:column="47">buf<pos:position pos:line="19" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="52">len<pos:position pos:line="19" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="57">buf<pos:position pos:line="19" pos:column="60"/></name> <operator pos:line="19" pos:column="61">+<pos:position pos:line="19" pos:column="62"/></operator> <name pos:line="19" pos:column="63">len<pos:position pos:line="19" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="68">size<pos:position pos:line="19" pos:column="72"/></name> <operator pos:line="19" pos:column="73">-<pos:position pos:line="19" pos:column="74"/></operator> <name pos:line="19" pos:column="75">len<pos:position pos:line="19" pos:column="78"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="80">&amp;<pos:position pos:line="19" pos:column="85"/></operator><name pos:line="19" pos:column="81">sig<pos:position pos:line="19" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="86">NULL<pos:position pos:line="19" pos:column="90"/></name></expr></argument>)<pos:position pos:line="19" pos:column="91"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="92"/></condition><then pos:line="19" pos:column="92"> <block pos:line="19" pos:column="93">{
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><operator pos:line="20" pos:column="29">!<pos:position pos:line="20" pos:column="30"/></operator><name><name pos:line="20" pos:column="30">sig<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">.<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">len<pos:position pos:line="20" pos:column="37"/></name></name></expr>)<pos:position pos:line="20" pos:column="38"/></condition><then pos:line="20" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="33">strbuf_addstr<pos:position pos:line="21" pos:column="46"/></name><argument_list pos:line="21" pos:column="46">(<argument><expr><operator pos:line="21" pos:column="47">&amp;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="48">sig<pos:position pos:line="21" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="53">"gpg verification failed.\n"<pos:position pos:line="21" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="83"/></expr_stmt></block></then></if>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if></elseif></if>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">tag_number<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">++<pos:position pos:line="24" pos:column="34"/></operator></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35"> <block pos:line="24" pos:column="36">{
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">fmt_tag_signature<pos:position pos:line="25" pos:column="42"/></name><argument_list pos:line="25" pos:column="42">(<argument><expr><operator pos:line="25" pos:column="43">&amp;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="44">tagbuf<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="52">&amp;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="53">sig<pos:position pos:line="25" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="58">buf<pos:position pos:line="25" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="63">len<pos:position pos:line="25" pos:column="66"/></name></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><name pos:line="26" pos:column="25">first_tag<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">=<pos:position pos:line="26" pos:column="36"/></operator> <name pos:line="26" pos:column="37">i<pos:position pos:line="26" pos:column="38"/></name></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></then> <else pos:line="27" pos:column="19">else <block pos:line="27" pos:column="24">{
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><name pos:line="28" pos:column="29">tag_number<pos:position pos:line="28" pos:column="39"/></name> <operator pos:line="28" pos:column="40">==<pos:position pos:line="28" pos:column="42"/></operator> <literal type="number" pos:line="28" pos:column="43">2<pos:position pos:line="28" pos:column="44"/></literal></expr>)<pos:position pos:line="28" pos:column="45"/></condition><then pos:line="28" pos:column="45"> <block pos:line="28" pos:column="46">{
				<decl_stmt><decl><type><name><name pos:line="29" pos:column="33">struct<pos:position pos:line="29" pos:column="39"/></name> <name pos:line="29" pos:column="40">strbuf<pos:position pos:line="29" pos:column="46"/></name></name></type> <name pos:line="29" pos:column="47">tagline<pos:position pos:line="29" pos:column="54"/></name> <init pos:line="29" pos:column="55">= <expr><name pos:line="29" pos:column="57">STRBUF_INIT<pos:position pos:line="29" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="69"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="30" pos:column="33">strbuf_addch<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><operator pos:line="30" pos:column="46">&amp;<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="47">tagline<pos:position pos:line="30" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="30" pos:column="56">'\n'<pos:position pos:line="30" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="31" pos:column="33">strbuf_add_commented_lines<pos:position pos:line="31" pos:column="59"/></name><argument_list pos:line="31" pos:column="59">(<argument><expr><operator pos:line="31" pos:column="60">&amp;<pos:position pos:line="31" pos:column="65"/></operator><name pos:line="31" pos:column="61">tagline<pos:position pos:line="31" pos:column="68"/></name></expr></argument>,
						<argument><expr><name><name pos:line="32" pos:column="49">origins<pos:position pos:line="32" pos:column="56"/></name><operator pos:line="32" pos:column="56">.<pos:position pos:line="32" pos:column="57"/></operator><name pos:line="32" pos:column="57">items<pos:position pos:line="32" pos:column="62"/></name><index pos:line="32" pos:column="62">[<expr><name pos:line="32" pos:column="63">first_tag<pos:position pos:line="32" pos:column="72"/></name></expr>]<pos:position pos:line="32" pos:column="73"/></index></name><operator pos:line="32" pos:column="73">.<pos:position pos:line="32" pos:column="74"/></operator><name pos:line="32" pos:column="74">string<pos:position pos:line="32" pos:column="80"/></name></expr></argument>,
						<argument><expr><call><name pos:line="33" pos:column="49">strlen<pos:position pos:line="33" pos:column="55"/></name><argument_list pos:line="33" pos:column="55">(<argument><expr><name><name pos:line="33" pos:column="56">origins<pos:position pos:line="33" pos:column="63"/></name><operator pos:line="33" pos:column="63">.<pos:position pos:line="33" pos:column="64"/></operator><name pos:line="33" pos:column="64">items<pos:position pos:line="33" pos:column="69"/></name><index pos:line="33" pos:column="69">[<expr><name pos:line="33" pos:column="70">first_tag<pos:position pos:line="33" pos:column="79"/></name></expr>]<pos:position pos:line="33" pos:column="80"/></index></name><operator pos:line="33" pos:column="80">.<pos:position pos:line="33" pos:column="81"/></operator><name pos:line="33" pos:column="81">string<pos:position pos:line="33" pos:column="87"/></name></expr></argument>)<pos:position pos:line="33" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="90"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="34" pos:column="33">strbuf_insert<pos:position pos:line="34" pos:column="46"/></name><argument_list pos:line="34" pos:column="46">(<argument><expr><operator pos:line="34" pos:column="47">&amp;<pos:position pos:line="34" pos:column="52"/></operator><name pos:line="34" pos:column="48">tagbuf<pos:position pos:line="34" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="56">0<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="59">tagline<pos:position pos:line="34" pos:column="66"/></name><operator pos:line="34" pos:column="66">.<pos:position pos:line="34" pos:column="67"/></operator><name pos:line="34" pos:column="67">buf<pos:position pos:line="34" pos:column="70"/></name></name></expr></argument>,
					      <argument><expr><name><name pos:line="35" pos:column="47">tagline<pos:position pos:line="35" pos:column="54"/></name><operator pos:line="35" pos:column="54">.<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="55">len<pos:position pos:line="35" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="36" pos:column="33">strbuf_release<pos:position pos:line="36" pos:column="47"/></name><argument_list pos:line="36" pos:column="47">(<argument><expr><operator pos:line="36" pos:column="48">&amp;<pos:position pos:line="36" pos:column="53"/></operator><name pos:line="36" pos:column="49">tagline<pos:position pos:line="36" pos:column="56"/></name></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>
			}<pos:position pos:line="37" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">strbuf_addch<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><operator pos:line="38" pos:column="38">&amp;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="39">tagbuf<pos:position pos:line="38" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="47">'\n'<pos:position pos:line="38" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">strbuf_add_commented_lines<pos:position pos:line="39" pos:column="51"/></name><argument_list pos:line="39" pos:column="51">(<argument><expr><operator pos:line="39" pos:column="52">&amp;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="53">tagbuf<pos:position pos:line="39" pos:column="59"/></name></expr></argument>,
					<argument><expr><name><name pos:line="40" pos:column="41">origins<pos:position pos:line="40" pos:column="48"/></name><operator pos:line="40" pos:column="48">.<pos:position pos:line="40" pos:column="49"/></operator><name pos:line="40" pos:column="49">items<pos:position pos:line="40" pos:column="54"/></name><index pos:line="40" pos:column="54">[<expr><name pos:line="40" pos:column="55">i<pos:position pos:line="40" pos:column="56"/></name></expr>]<pos:position pos:line="40" pos:column="57"/></index></name><operator pos:line="40" pos:column="57">.<pos:position pos:line="40" pos:column="58"/></operator><name pos:line="40" pos:column="58">string<pos:position pos:line="40" pos:column="64"/></name></expr></argument>,
					<argument><expr><call><name pos:line="41" pos:column="41">strlen<pos:position pos:line="41" pos:column="47"/></name><argument_list pos:line="41" pos:column="47">(<argument><expr><name><name pos:line="41" pos:column="48">origins<pos:position pos:line="41" pos:column="55"/></name><operator pos:line="41" pos:column="55">.<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="56">items<pos:position pos:line="41" pos:column="61"/></name><index pos:line="41" pos:column="61">[<expr><name pos:line="41" pos:column="62">i<pos:position pos:line="41" pos:column="63"/></name></expr>]<pos:position pos:line="41" pos:column="64"/></index></name><operator pos:line="41" pos:column="64">.<pos:position pos:line="41" pos:column="65"/></operator><name pos:line="41" pos:column="65">string<pos:position pos:line="41" pos:column="71"/></name></expr></argument>)<pos:position pos:line="41" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">fmt_tag_signature<pos:position pos:line="42" pos:column="42"/></name><argument_list pos:line="42" pos:column="42">(<argument><expr><operator pos:line="42" pos:column="43">&amp;<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="44">tagbuf<pos:position pos:line="42" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="52">&amp;<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="53">sig<pos:position pos:line="42" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="58">buf<pos:position pos:line="42" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="63">len<pos:position pos:line="42" pos:column="66"/></name></expr></argument>)<pos:position pos:line="42" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">strbuf_release<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><operator pos:line="44" pos:column="32">&amp;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="33">sig<pos:position pos:line="44" pos:column="36"/></name></expr></argument>)<pos:position pos:line="44" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="38"/></expr_stmt>
	<label><name pos:line="45" pos:column="9">next<pos:position pos:line="45" pos:column="13"/></name>:<pos:position pos:line="45" pos:column="14"/></label>
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">free<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">buf<pos:position pos:line="46" pos:column="25"/></name></expr></argument>)<pos:position pos:line="46" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="47" pos:column="10"/></block></for>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">tagbuf<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">len<pos:position pos:line="48" pos:column="23"/></name></name></expr>)<pos:position pos:line="48" pos:column="24"/></condition><then pos:line="48" pos:column="24"> <block pos:line="48" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">strbuf_addch<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><name pos:line="49" pos:column="30">out<pos:position pos:line="49" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="49" pos:column="35">'\n'<pos:position pos:line="49" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">strbuf_addbuf<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">out<pos:position pos:line="50" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="36">&amp;<pos:position pos:line="50" pos:column="41"/></operator><name pos:line="50" pos:column="37">tagbuf<pos:position pos:line="50" pos:column="43"/></name></expr></argument>)<pos:position pos:line="50" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">strbuf_release<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><operator pos:line="52" pos:column="24">&amp;<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="25">tagbuf<pos:position pos:line="52" pos:column="31"/></name></expr></argument>)<pos:position pos:line="52" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

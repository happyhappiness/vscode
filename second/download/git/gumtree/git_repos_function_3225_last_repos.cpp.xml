<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3225_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">unpack_nondirectories<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">n<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">unsigned<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">long<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">mask<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="2" pos:column="34">unsigned<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">long<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">dirmask<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
				 <parameter><decl><type><name><name pos:line="3" pos:column="34">struct<pos:position pos:line="3" pos:column="40"/></name> <name pos:line="3" pos:column="41">cache_entry<pos:position pos:line="3" pos:column="52"/></name></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier><modifier pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></modifier></type><name pos:line="3" pos:column="55">src<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="4" pos:column="34">const<pos:position pos:line="4" pos:column="39"/></specifier> <name><name pos:line="4" pos:column="40">struct<pos:position pos:line="4" pos:column="46"/></name> <name pos:line="4" pos:column="47">name_entry<pos:position pos:line="4" pos:column="57"/></name></name> <modifier pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></modifier></type><name pos:line="4" pos:column="59">names<pos:position pos:line="4" pos:column="64"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="5" pos:column="34">const<pos:position pos:line="5" pos:column="39"/></specifier> <name><name pos:line="5" pos:column="40">struct<pos:position pos:line="5" pos:column="46"/></name> <name pos:line="5" pos:column="47">traverse_info<pos:position pos:line="5" pos:column="60"/></name></name> <modifier pos:line="5" pos:column="61">*<pos:position pos:line="5" pos:column="62"/></modifier></type><name pos:line="5" pos:column="62">info<pos:position pos:line="5" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="67"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">unpack_trees_options<pos:position pos:line="8" pos:column="36"/></name></name> <modifier pos:line="8" pos:column="37">*<pos:position pos:line="8" pos:column="38"/></modifier></type><name pos:line="8" pos:column="38">o<pos:position pos:line="8" pos:column="39"/></name> <init pos:line="8" pos:column="40">= <expr><name><name pos:line="8" pos:column="42">info<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">-&gt;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="48">data<pos:position pos:line="8" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">long<pos:position pos:line="9" pos:column="22"/></name></type> <name pos:line="9" pos:column="23">conflicts<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><name><name pos:line="9" pos:column="35">info<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">df_conflicts<pos:position pos:line="9" pos:column="53"/></name></name> <operator pos:line="9" pos:column="54">|<pos:position pos:line="9" pos:column="55"/></operator> <name pos:line="9" pos:column="56">dirmask<pos:position pos:line="9" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="64"/></decl_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* Do we have *only* directories? Nothing to do */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">mask<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">==<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">dirmask<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">&amp;&amp;<pos:position pos:line="12" pos:column="39"/></operator> <operator pos:line="12" pos:column="32">!<pos:position pos:line="12" pos:column="33"/></operator><name><name pos:line="12" pos:column="33">src<pos:position pos:line="12" pos:column="36"/></name><index pos:line="12" pos:column="36">[<expr><literal type="number" pos:line="12" pos:column="37">0<pos:position pos:line="12" pos:column="38"/></literal></expr>]<pos:position pos:line="12" pos:column="39"/></index></name></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="15" pos:column="9">/*
	 * Ok, we've filled in up to any potential index entry in src[0],
	 * now do the rest.
	 */</comment>
	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="25">n<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></condition> <incr><expr><name pos:line="19" pos:column="28">i<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">++<pos:position pos:line="19" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="32"/></control> <block pos:line="19" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">int<pos:position pos:line="20" pos:column="20"/></name></type> <name pos:line="20" pos:column="21">stage<pos:position pos:line="20" pos:column="26"/></name></decl>;<pos:position pos:line="20" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">unsigned<pos:position pos:line="21" pos:column="25"/></name> <name pos:line="21" pos:column="26">int<pos:position pos:line="21" pos:column="29"/></name></type> <name pos:line="21" pos:column="30">bit<pos:position pos:line="21" pos:column="33"/></name> <init pos:line="21" pos:column="34">= <expr><literal type="number" pos:line="21" pos:column="36">1ul<pos:position pos:line="21" pos:column="39"/></literal> <operator pos:line="21" pos:column="40">&lt;&lt;<pos:position pos:line="21" pos:column="48"/></operator> <name pos:line="21" pos:column="43">i<pos:position pos:line="21" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="45"/></decl_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">conflicts<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">&amp;<pos:position pos:line="22" pos:column="36"/></operator> <name pos:line="22" pos:column="33">bit<pos:position pos:line="22" pos:column="36"/></name></expr>)<pos:position pos:line="22" pos:column="37"/></condition><then pos:line="22" pos:column="37"> <block pos:line="22" pos:column="38">{
			<expr_stmt><expr><name><name pos:line="23" pos:column="25">src<pos:position pos:line="23" pos:column="28"/></name><index pos:line="23" pos:column="28">[<expr><name pos:line="23" pos:column="29">i<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">+<pos:position pos:line="23" pos:column="32"/></operator> <name><name pos:line="23" pos:column="33">o<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">merge<pos:position pos:line="23" pos:column="41"/></name></name></expr>]<pos:position pos:line="23" pos:column="42"/></index></name> <operator pos:line="23" pos:column="43">=<pos:position pos:line="23" pos:column="44"/></operator> <name><name pos:line="23" pos:column="45">o<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">-&gt;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="48">df_conflict_entry<pos:position pos:line="23" pos:column="65"/></name></name></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt>
			<continue pos:line="24" pos:column="25">continue;<pos:position pos:line="24" pos:column="34"/></continue>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><operator pos:line="26" pos:column="22">(<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">mask<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">&amp;<pos:position pos:line="26" pos:column="33"/></operator> <name pos:line="26" pos:column="30">bit<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">)<pos:position pos:line="26" pos:column="34"/></operator></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35">
			<block type="pseudo"><continue pos:line="27" pos:column="25">continue;<pos:position pos:line="27" pos:column="34"/></continue></block></then></if>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><name><name pos:line="28" pos:column="22">o<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">merge<pos:position pos:line="28" pos:column="30"/></name></name></expr>)<pos:position pos:line="28" pos:column="31"/></condition><then pos:line="28" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="25">stage<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">=<pos:position pos:line="29" pos:column="32"/></operator> <literal type="number" pos:line="29" pos:column="33">0<pos:position pos:line="29" pos:column="34"/></literal></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt></block></then>
		<elseif pos:line="30" pos:column="17">else <if pos:line="30" pos:column="22">if <condition pos:line="30" pos:column="25">(<expr><name pos:line="30" pos:column="26">i<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">+<pos:position pos:line="30" pos:column="29"/></operator> <literal type="number" pos:line="30" pos:column="30">1<pos:position pos:line="30" pos:column="31"/></literal> <operator pos:line="30" pos:column="32">&lt;<pos:position pos:line="30" pos:column="36"/></operator> <name><name pos:line="30" pos:column="34">o<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">head_idx<pos:position pos:line="30" pos:column="45"/></name></name></expr>)<pos:position pos:line="30" pos:column="46"/></condition><then pos:line="30" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="25">stage<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">=<pos:position pos:line="31" pos:column="32"/></operator> <literal type="number" pos:line="31" pos:column="33">1<pos:position pos:line="31" pos:column="34"/></literal></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="32" pos:column="17">else <if pos:line="32" pos:column="22">if <condition pos:line="32" pos:column="25">(<expr><name pos:line="32" pos:column="26">i<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">+<pos:position pos:line="32" pos:column="29"/></operator> <literal type="number" pos:line="32" pos:column="30">1<pos:position pos:line="32" pos:column="31"/></literal> <operator pos:line="32" pos:column="32">&gt;<pos:position pos:line="32" pos:column="36"/></operator> <name><name pos:line="32" pos:column="34">o<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">head_idx<pos:position pos:line="32" pos:column="45"/></name></name></expr>)<pos:position pos:line="32" pos:column="46"/></condition><then pos:line="32" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="25">stage<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">=<pos:position pos:line="33" pos:column="32"/></operator> <literal type="number" pos:line="33" pos:column="33">3<pos:position pos:line="33" pos:column="34"/></literal></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt></block></then></if></elseif>
		<else pos:line="34" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="25">stage<pos:position pos:line="35" pos:column="30"/></name> <operator pos:line="35" pos:column="31">=<pos:position pos:line="35" pos:column="32"/></operator> <literal type="number" pos:line="35" pos:column="33">2<pos:position pos:line="35" pos:column="34"/></literal></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name><name pos:line="36" pos:column="17">src<pos:position pos:line="36" pos:column="20"/></name><index pos:line="36" pos:column="20">[<expr><name pos:line="36" pos:column="21">i<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">+<pos:position pos:line="36" pos:column="24"/></operator> <name><name pos:line="36" pos:column="25">o<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">merge<pos:position pos:line="36" pos:column="33"/></name></name></expr>]<pos:position pos:line="36" pos:column="34"/></index></name> <operator pos:line="36" pos:column="35">=<pos:position pos:line="36" pos:column="36"/></operator> <call><name pos:line="36" pos:column="37">create_ce_entry<pos:position pos:line="36" pos:column="52"/></name><argument_list pos:line="36" pos:column="52">(<argument><expr><name pos:line="36" pos:column="53">info<pos:position pos:line="36" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="59">names<pos:position pos:line="36" pos:column="64"/></name> <operator pos:line="36" pos:column="65">+<pos:position pos:line="36" pos:column="66"/></operator> <name pos:line="36" pos:column="67">i<pos:position pos:line="36" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="70">stage<pos:position pos:line="36" pos:column="75"/></name></expr></argument>)<pos:position pos:line="36" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></for>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">o<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">-&gt;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="16">merge<pos:position pos:line="39" pos:column="21"/></name></name></expr>)<pos:position pos:line="39" pos:column="22"/></condition><then pos:line="39" pos:column="22"> <block pos:line="39" pos:column="23">{
		<decl_stmt><decl><type><name pos:line="40" pos:column="17">int<pos:position pos:line="40" pos:column="20"/></name></type> <name pos:line="40" pos:column="21">rc<pos:position pos:line="40" pos:column="23"/></name> <init pos:line="40" pos:column="24">= <expr><call><name pos:line="40" pos:column="26">call_unpack_fn<pos:position pos:line="40" pos:column="40"/></name><argument_list pos:line="40" pos:column="40">(<argument><expr><operator pos:line="40" pos:column="41">(<pos:position pos:line="40" pos:column="42"/></operator><specifier pos:line="40" pos:column="42">const<pos:position pos:line="40" pos:column="47"/></specifier> struct <name pos:line="40" pos:column="55">cache_entry<pos:position pos:line="40" pos:column="66"/></name> <operator pos:line="40" pos:column="67">*<pos:position pos:line="40" pos:column="68"/></operator> <specifier pos:line="40" pos:column="69">const<pos:position pos:line="40" pos:column="74"/></specifier> <operator pos:line="40" pos:column="75">*<pos:position pos:line="40" pos:column="76"/></operator><operator pos:line="40" pos:column="76">)<pos:position pos:line="40" pos:column="77"/></operator><name pos:line="40" pos:column="77">src<pos:position pos:line="40" pos:column="80"/></name></expr></argument>,
					<argument><expr><name pos:line="41" pos:column="41">o<pos:position pos:line="41" pos:column="42"/></name></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="44"/></decl_stmt>
		<for pos:line="42" pos:column="17">for <control pos:line="42" pos:column="21">(<init><expr><name pos:line="42" pos:column="22">i<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <literal type="number" pos:line="42" pos:column="26">0<pos:position pos:line="42" pos:column="27"/></literal></expr>;<pos:position pos:line="42" pos:column="28"/></init> <condition><expr><name pos:line="42" pos:column="29">i<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">&lt;<pos:position pos:line="42" pos:column="35"/></operator> <name pos:line="42" pos:column="33">n<pos:position pos:line="42" pos:column="34"/></name></expr>;<pos:position pos:line="42" pos:column="35"/></condition> <incr><expr><name pos:line="42" pos:column="36">i<pos:position pos:line="42" pos:column="37"/></name><operator pos:line="42" pos:column="37">++<pos:position pos:line="42" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="40"/></control> <block pos:line="42" pos:column="41">{
			<decl_stmt><decl><type><name><name pos:line="43" pos:column="25">struct<pos:position pos:line="43" pos:column="31"/></name> <name pos:line="43" pos:column="32">cache_entry<pos:position pos:line="43" pos:column="43"/></name></name> <modifier pos:line="43" pos:column="44">*<pos:position pos:line="43" pos:column="45"/></modifier></type><name pos:line="43" pos:column="45">ce<pos:position pos:line="43" pos:column="47"/></name> <init pos:line="43" pos:column="48">= <expr><name><name pos:line="43" pos:column="50">src<pos:position pos:line="43" pos:column="53"/></name><index pos:line="43" pos:column="53">[<expr><name pos:line="43" pos:column="54">i<pos:position pos:line="43" pos:column="55"/></name> <operator pos:line="43" pos:column="56">+<pos:position pos:line="43" pos:column="57"/></operator> <name><name pos:line="43" pos:column="58">o<pos:position pos:line="43" pos:column="59"/></name><operator pos:line="43" pos:column="59">-&gt;<pos:position pos:line="43" pos:column="64"/></operator><name pos:line="43" pos:column="61">merge<pos:position pos:line="43" pos:column="66"/></name></name></expr>]<pos:position pos:line="43" pos:column="67"/></index></name></expr></init></decl>;<pos:position pos:line="43" pos:column="68"/></decl_stmt>
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><name pos:line="44" pos:column="29">ce<pos:position pos:line="44" pos:column="31"/></name> <operator pos:line="44" pos:column="32">!=<pos:position pos:line="44" pos:column="34"/></operator> <name><name pos:line="44" pos:column="35">o<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">-&gt;<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="38">df_conflict_entry<pos:position pos:line="44" pos:column="55"/></name></name></expr>)<pos:position pos:line="44" pos:column="56"/></condition><then pos:line="44" pos:column="56">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="33">free<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name pos:line="45" pos:column="38">ce<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt></block></then></if>
		}<pos:position pos:line="46" pos:column="18"/></block></for>
		<return pos:line="47" pos:column="17">return <expr><name pos:line="47" pos:column="24">rc<pos:position pos:line="47" pos:column="26"/></name></expr>;<pos:position pos:line="47" pos:column="27"/></return>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>

	<for pos:line="50" pos:column="9">for <control pos:line="50" pos:column="13">(<init><expr><name pos:line="50" pos:column="14">i<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <literal type="number" pos:line="50" pos:column="18">0<pos:position pos:line="50" pos:column="19"/></literal></expr>;<pos:position pos:line="50" pos:column="20"/></init> <condition><expr><name pos:line="50" pos:column="21">i<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">&lt;<pos:position pos:line="50" pos:column="27"/></operator> <name pos:line="50" pos:column="25">n<pos:position pos:line="50" pos:column="26"/></name></expr>;<pos:position pos:line="50" pos:column="27"/></condition> <incr><expr><name pos:line="50" pos:column="28">i<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">++<pos:position pos:line="50" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="50" pos:column="32"/></control>
		<block type="pseudo"><if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name><name pos:line="51" pos:column="21">src<pos:position pos:line="51" pos:column="24"/></name><index pos:line="51" pos:column="24">[<expr><name pos:line="51" pos:column="25">i<pos:position pos:line="51" pos:column="26"/></name></expr>]<pos:position pos:line="51" pos:column="27"/></index></name> <operator pos:line="51" pos:column="28">&amp;&amp;<pos:position pos:line="51" pos:column="38"/></operator> <name><name pos:line="51" pos:column="31">src<pos:position pos:line="51" pos:column="34"/></name><index pos:line="51" pos:column="34">[<expr><name pos:line="51" pos:column="35">i<pos:position pos:line="51" pos:column="36"/></name></expr>]<pos:position pos:line="51" pos:column="37"/></index></name> <operator pos:line="51" pos:column="38">!=<pos:position pos:line="51" pos:column="40"/></operator> <name><name pos:line="51" pos:column="41">o<pos:position pos:line="51" pos:column="42"/></name><operator pos:line="51" pos:column="42">-&gt;<pos:position pos:line="51" pos:column="47"/></operator><name pos:line="51" pos:column="44">df_conflict_entry<pos:position pos:line="51" pos:column="61"/></name></name></expr>)<pos:position pos:line="51" pos:column="62"/></condition><then pos:line="51" pos:column="62">
			<block type="pseudo"><if pos:line="52" pos:column="25">if <condition pos:line="52" pos:column="28">(<expr><call><name pos:line="52" pos:column="29">do_add_entry<pos:position pos:line="52" pos:column="41"/></name><argument_list pos:line="52" pos:column="41">(<argument><expr><name pos:line="52" pos:column="42">o<pos:position pos:line="52" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="45">src<pos:position pos:line="52" pos:column="48"/></name><index pos:line="52" pos:column="48">[<expr><name pos:line="52" pos:column="49">i<pos:position pos:line="52" pos:column="50"/></name></expr>]<pos:position pos:line="52" pos:column="51"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="53">0<pos:position pos:line="52" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="56">0<pos:position pos:line="52" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="59"/></condition><then pos:line="52" pos:column="59">
				<block type="pseudo"><return pos:line="53" pos:column="33">return <expr><operator pos:line="53" pos:column="40">-<pos:position pos:line="53" pos:column="41"/></operator><literal type="number" pos:line="53" pos:column="41">1<pos:position pos:line="53" pos:column="42"/></literal></expr>;<pos:position pos:line="53" pos:column="43"/></return></block></then></if></block></then></if></block></for>

	<return pos:line="55" pos:column="9">return <expr><literal type="number" pos:line="55" pos:column="16">0<pos:position pos:line="55" pos:column="17"/></literal></expr>;<pos:position pos:line="55" pos:column="18"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

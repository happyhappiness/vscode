<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5905_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_refspec_config<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">src_ref_prefix<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name><name pos:line="2" pos:column="23">struct<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">ref<pos:position pos:line="2" pos:column="33"/></name></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">our_head_points_at<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="3" pos:column="17">const<pos:position pos:line="3" pos:column="22"/></specifier> <name><name pos:line="3" pos:column="23">struct<pos:position pos:line="3" pos:column="29"/></name> <name pos:line="3" pos:column="30">ref<pos:position pos:line="3" pos:column="33"/></name></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">remote_head_points_at<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="4" pos:column="17">struct<pos:position pos:line="4" pos:column="23"/></name> <name pos:line="4" pos:column="24">strbuf<pos:position pos:line="4" pos:column="30"/></name></name> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type><name pos:line="4" pos:column="32">branch_top<pos:position pos:line="4" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="43"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">key<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">STRBUF_INIT<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">value<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><name pos:line="7" pos:column="31">STRBUF_INIT<pos:position pos:line="7" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">option_mirror<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">||<pos:position pos:line="9" pos:column="29"/></operator> <operator pos:line="9" pos:column="30">!<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">option_bare<pos:position pos:line="9" pos:column="42"/></name></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43"> <block pos:line="9" pos:column="44">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">option_single_branch<pos:position pos:line="10" pos:column="41"/></name> <operator pos:line="10" pos:column="42">&amp;&amp;<pos:position pos:line="10" pos:column="52"/></operator> <operator pos:line="10" pos:column="45">!<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="46">option_mirror<pos:position pos:line="10" pos:column="59"/></name></expr>)<pos:position pos:line="10" pos:column="60"/></condition><then pos:line="10" pos:column="60"> <block pos:line="10" pos:column="61">{
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><name pos:line="11" pos:column="29">option_branch<pos:position pos:line="11" pos:column="42"/></name></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43"> <block pos:line="11" pos:column="44">{
				<if pos:line="12" pos:column="33">if <condition pos:line="12" pos:column="36">(<expr><call><name pos:line="12" pos:column="37">starts_with<pos:position pos:line="12" pos:column="48"/></name><argument_list pos:line="12" pos:column="48">(<argument><expr><name><name pos:line="12" pos:column="49">our_head_points_at<pos:position pos:line="12" pos:column="67"/></name><operator pos:line="12" pos:column="67">-&gt;<pos:position pos:line="12" pos:column="72"/></operator><name pos:line="12" pos:column="69">name<pos:position pos:line="12" pos:column="73"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="75">"refs/tags/"<pos:position pos:line="12" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="88"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="89"/></condition><then pos:line="12" pos:column="89">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="41">strbuf_addf<pos:position pos:line="13" pos:column="52"/></name><argument_list pos:line="13" pos:column="52">(<argument><expr><operator pos:line="13" pos:column="53">&amp;<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="54">value<pos:position pos:line="13" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="61">"+%s:%s"<pos:position pos:line="13" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="71">our_head_points_at<pos:position pos:line="13" pos:column="89"/></name><operator pos:line="13" pos:column="89">-&gt;<pos:position pos:line="13" pos:column="94"/></operator><name pos:line="13" pos:column="91">name<pos:position pos:line="13" pos:column="95"/></name></name></expr></argument>,
						<argument><expr><name><name pos:line="14" pos:column="49">our_head_points_at<pos:position pos:line="14" pos:column="67"/></name><operator pos:line="14" pos:column="67">-&gt;<pos:position pos:line="14" pos:column="72"/></operator><name pos:line="14" pos:column="69">name<pos:position pos:line="14" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="75"/></expr_stmt></block></then>
				<else pos:line="15" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="41">strbuf_addf<pos:position pos:line="16" pos:column="52"/></name><argument_list pos:line="16" pos:column="52">(<argument><expr><operator pos:line="16" pos:column="53">&amp;<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="54">value<pos:position pos:line="16" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="61">"+%s:%s%s"<pos:position pos:line="16" pos:column="71"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="73">our_head_points_at<pos:position pos:line="16" pos:column="91"/></name><operator pos:line="16" pos:column="91">-&gt;<pos:position pos:line="16" pos:column="96"/></operator><name pos:line="16" pos:column="93">name<pos:position pos:line="16" pos:column="97"/></name></name></expr></argument>,
						<argument><expr><name><name pos:line="17" pos:column="49">branch_top<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">-&gt;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="61">buf<pos:position pos:line="17" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="66">option_branch<pos:position pos:line="17" pos:column="79"/></name></expr></argument>)<pos:position pos:line="17" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="81"/></expr_stmt></block></else></if>
			}<pos:position pos:line="18" pos:column="26"/></block></then> <elseif pos:line="18" pos:column="27">else <if pos:line="18" pos:column="32">if <condition pos:line="18" pos:column="35">(<expr><name pos:line="18" pos:column="36">remote_head_points_at<pos:position pos:line="18" pos:column="57"/></name></expr>)<pos:position pos:line="18" pos:column="58"/></condition><then pos:line="18" pos:column="58"> <block pos:line="18" pos:column="59">{
				<decl_stmt><decl><type><specifier pos:line="19" pos:column="33">const<pos:position pos:line="19" pos:column="38"/></specifier> <name pos:line="19" pos:column="39">char<pos:position pos:line="19" pos:column="43"/></name> <modifier pos:line="19" pos:column="44">*<pos:position pos:line="19" pos:column="45"/></modifier></type><name pos:line="19" pos:column="45">head<pos:position pos:line="19" pos:column="49"/></name> <init pos:line="19" pos:column="50">= <expr><name><name pos:line="19" pos:column="52">remote_head_points_at<pos:position pos:line="19" pos:column="73"/></name><operator pos:line="19" pos:column="73">-&gt;<pos:position pos:line="19" pos:column="78"/></operator><name pos:line="19" pos:column="75">name<pos:position pos:line="19" pos:column="79"/></name></name></expr></init></decl>;<pos:position pos:line="19" pos:column="80"/></decl_stmt>
				<if pos:line="20" pos:column="33">if <condition pos:line="20" pos:column="36">(<expr><operator pos:line="20" pos:column="37">!<pos:position pos:line="20" pos:column="38"/></operator><call><name pos:line="20" pos:column="38">skip_prefix<pos:position pos:line="20" pos:column="49"/></name><argument_list pos:line="20" pos:column="49">(<argument><expr><name pos:line="20" pos:column="50">head<pos:position pos:line="20" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="56">"refs/heads/"<pos:position pos:line="20" pos:column="69"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="71">&amp;<pos:position pos:line="20" pos:column="76"/></operator><name pos:line="20" pos:column="72">head<pos:position pos:line="20" pos:column="76"/></name></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="78"/></condition><then pos:line="20" pos:column="78">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="41">die<pos:position pos:line="21" pos:column="44"/></name><argument_list pos:line="21" pos:column="44">(<argument><expr><literal type="string" pos:line="21" pos:column="45">"BUG: remote HEAD points at non-head?"<pos:position pos:line="21" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="85"/></expr_stmt></block></then></if>

				<expr_stmt><expr><call><name pos:line="23" pos:column="33">strbuf_addf<pos:position pos:line="23" pos:column="44"/></name><argument_list pos:line="23" pos:column="44">(<argument><expr><operator pos:line="23" pos:column="45">&amp;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="46">value<pos:position pos:line="23" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="53">"+%s:%s%s"<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="65">remote_head_points_at<pos:position pos:line="23" pos:column="86"/></name><operator pos:line="23" pos:column="86">-&gt;<pos:position pos:line="23" pos:column="91"/></operator><name pos:line="23" pos:column="88">name<pos:position pos:line="23" pos:column="92"/></name></name></expr></argument>,
						<argument><expr><name><name pos:line="24" pos:column="49">branch_top<pos:position pos:line="24" pos:column="59"/></name><operator pos:line="24" pos:column="59">-&gt;<pos:position pos:line="24" pos:column="64"/></operator><name pos:line="24" pos:column="61">buf<pos:position pos:line="24" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="66">head<pos:position pos:line="24" pos:column="70"/></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt>
			}<pos:position pos:line="25" pos:column="26"/></block></then></if></elseif></if>
			<comment type="block" pos:line="26" pos:column="25">/*
			 * otherwise, the next "git fetch" will
			 * simply fetch from HEAD without updating
			 * any remote-tracking branch, which is what
			 * we want.
			 */</comment>
		}<pos:position pos:line="32" pos:column="18"/></block></then> <else pos:line="32" pos:column="19">else <block pos:line="32" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">strbuf_addf<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><operator pos:line="33" pos:column="37">&amp;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="38">value<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="45">"+%s*:%s*"<pos:position pos:line="33" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="57">src_ref_prefix<pos:position pos:line="33" pos:column="71"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="73">branch_top<pos:position pos:line="33" pos:column="83"/></name><operator pos:line="33" pos:column="83">-&gt;<pos:position pos:line="33" pos:column="88"/></operator><name pos:line="33" pos:column="85">buf<pos:position pos:line="33" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="90"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></else></if>
		<comment type="block" pos:line="35" pos:column="17">/* Configure the remote */</comment>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name><name pos:line="36" pos:column="21">value<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">.<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">len<pos:position pos:line="36" pos:column="30"/></name></name></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31"> <block pos:line="36" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">strbuf_addf<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><operator pos:line="37" pos:column="37">&amp;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="38">key<pos:position pos:line="37" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="43">"remote.%s.fetch"<pos:position pos:line="37" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="62">option_origin<pos:position pos:line="37" pos:column="75"/></name></expr></argument>)<pos:position pos:line="37" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">git_config_set_multivar<pos:position pos:line="38" pos:column="48"/></name><argument_list pos:line="38" pos:column="48">(<argument><expr><name><name pos:line="38" pos:column="49">key<pos:position pos:line="38" pos:column="52"/></name><operator pos:line="38" pos:column="52">.<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="53">buf<pos:position pos:line="38" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="58">value<pos:position pos:line="38" pos:column="63"/></name><operator pos:line="38" pos:column="63">.<pos:position pos:line="38" pos:column="64"/></operator><name pos:line="38" pos:column="64">buf<pos:position pos:line="38" pos:column="67"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="69">"^$"<pos:position pos:line="38" pos:column="73"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="75">0<pos:position pos:line="38" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">strbuf_reset<pos:position pos:line="39" pos:column="37"/></name><argument_list pos:line="39" pos:column="37">(<argument><expr><operator pos:line="39" pos:column="38">&amp;<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="39">key<pos:position pos:line="39" pos:column="42"/></name></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>

			<if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><name pos:line="41" pos:column="29">option_mirror<pos:position pos:line="41" pos:column="42"/></name></expr>)<pos:position pos:line="41" pos:column="43"/></condition><then pos:line="41" pos:column="43"> <block pos:line="41" pos:column="44">{
				<expr_stmt><expr><call><name pos:line="42" pos:column="33">strbuf_addf<pos:position pos:line="42" pos:column="44"/></name><argument_list pos:line="42" pos:column="44">(<argument><expr><operator pos:line="42" pos:column="45">&amp;<pos:position pos:line="42" pos:column="50"/></operator><name pos:line="42" pos:column="46">key<pos:position pos:line="42" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="51">"remote.%s.mirror"<pos:position pos:line="42" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="71">option_origin<pos:position pos:line="42" pos:column="84"/></name></expr></argument>)<pos:position pos:line="42" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="86"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="43" pos:column="33">git_config_set<pos:position pos:line="43" pos:column="47"/></name><argument_list pos:line="43" pos:column="47">(<argument><expr><name><name pos:line="43" pos:column="48">key<pos:position pos:line="43" pos:column="51"/></name><operator pos:line="43" pos:column="51">.<pos:position pos:line="43" pos:column="52"/></operator><name pos:line="43" pos:column="52">buf<pos:position pos:line="43" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="57">"true"<pos:position pos:line="43" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="44" pos:column="33">strbuf_reset<pos:position pos:line="44" pos:column="45"/></name><argument_list pos:line="44" pos:column="45">(<argument><expr><operator pos:line="44" pos:column="46">&amp;<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="47">key<pos:position pos:line="44" pos:column="50"/></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="45" pos:column="26"/></block></then></if>
		}<pos:position pos:line="46" pos:column="18"/></block></then></if>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="49" pos:column="9">strbuf_release<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><operator pos:line="49" pos:column="24">&amp;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="25">key<pos:position pos:line="49" pos:column="28"/></name></expr></argument>)<pos:position pos:line="49" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">strbuf_release<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><operator pos:line="50" pos:column="24">&amp;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="25">value<pos:position pos:line="50" pos:column="30"/></name></expr></argument>)<pos:position pos:line="50" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

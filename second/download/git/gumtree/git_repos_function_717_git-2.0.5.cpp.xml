<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_717_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">wt_status_print_submodule_summary<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">wt_status<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">s<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">int<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">uncommitted<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">child_process<pos:position pos:line="3" pos:column="29"/></name></name></type> <name pos:line="3" pos:column="30">sm_summary<pos:position pos:line="3" pos:column="40"/></name></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">summary_limit<pos:position pos:line="4" pos:column="27"/></name><index pos:line="4" pos:column="27">[<expr><literal type="number" pos:line="4" pos:column="28">64<pos:position pos:line="4" pos:column="30"/></literal></expr>]<pos:position pos:line="4" pos:column="31"/></index></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">index<pos:position pos:line="5" pos:column="19"/></name><index pos:line="5" pos:column="19">[<expr><name pos:line="5" pos:column="20">PATH_MAX<pos:position pos:line="5" pos:column="28"/></name></expr>]<pos:position pos:line="5" pos:column="29"/></index></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name><name pos:line="6" pos:column="21">env<pos:position pos:line="6" pos:column="24"/></name><index pos:line="6" pos:column="24">[]<pos:position pos:line="6" pos:column="26"/></index></name> <init pos:line="6" pos:column="27">= <expr><block pos:line="6" pos:column="29">{ <expr><name pos:line="6" pos:column="31">NULL<pos:position pos:line="6" pos:column="35"/></name></expr>, <expr><name pos:line="6" pos:column="37">NULL<pos:position pos:line="6" pos:column="41"/></name></expr> }<pos:position pos:line="6" pos:column="43"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">argv_array<pos:position pos:line="7" pos:column="26"/></name></name></type> <name pos:line="7" pos:column="27">argv<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name pos:line="7" pos:column="34">ARGV_ARRAY_INIT<pos:position pos:line="7" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">cmd_stdout<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><name pos:line="8" pos:column="36">STRBUF_INIT<pos:position pos:line="8" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">strbuf<pos:position pos:line="9" pos:column="22"/></name></name></type> <name pos:line="9" pos:column="23">summary<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><name pos:line="9" pos:column="33">STRBUF_INIT<pos:position pos:line="9" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">summary_content<pos:position pos:line="10" pos:column="30"/></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">size_t<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">len<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">sprintf<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">summary_limit<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="32">"%d"<pos:position pos:line="13" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="38">s<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">submodule_summary<pos:position pos:line="13" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">snprintf<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">index<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="25">sizeof<argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">index<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="40">"GIT_INDEX_FILE=%s"<pos:position pos:line="14" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="61">s<pos:position pos:line="14" pos:column="62"/></name><operator pos:line="14" pos:column="62">-&gt;<pos:position pos:line="14" pos:column="67"/></operator><name pos:line="14" pos:column="64">index_file<pos:position pos:line="14" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="76"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="16" pos:column="9">env<pos:position pos:line="16" pos:column="12"/></name><index pos:line="16" pos:column="12">[<expr><literal type="number" pos:line="16" pos:column="13">0<pos:position pos:line="16" pos:column="14"/></literal></expr>]<pos:position pos:line="16" pos:column="15"/></index></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">index<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">argv_array_push<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><operator pos:line="17" pos:column="25">&amp;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="26">argv<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="32">"submodule"<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">argv_array_push<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><operator pos:line="18" pos:column="25">&amp;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="26">argv<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="32">"summary"<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">argv_array_push<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><operator pos:line="19" pos:column="25">&amp;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="26">argv<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="19" pos:column="32">uncommitted<pos:position pos:line="19" pos:column="43"/></name></expr> ?<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45"> <expr><literal type="string" pos:line="19" pos:column="46">"--files"<pos:position pos:line="19" pos:column="55"/></literal></expr> <pos:position pos:line="19" pos:column="56"/></then><else pos:line="19" pos:column="56">: <expr><literal type="string" pos:line="19" pos:column="58">"--cached"<pos:position pos:line="19" pos:column="68"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="19" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">argv_array_push<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><operator pos:line="20" pos:column="25">&amp;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="26">argv<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="32">"--for-status"<pos:position pos:line="20" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">argv_array_push<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><operator pos:line="21" pos:column="25">&amp;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="26">argv<pos:position pos:line="21" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="32">"--summary-limit"<pos:position pos:line="21" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">argv_array_push<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><operator pos:line="22" pos:column="25">&amp;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="26">argv<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="32">summary_limit<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">uncommitted<pos:position pos:line="23" pos:column="25"/></name></expr>)<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">argv_array_push<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><operator pos:line="24" pos:column="33">&amp;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="34">argv<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="24" pos:column="40">s<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">-&gt;<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="43">amend<pos:position pos:line="24" pos:column="48"/></name></name></expr> ?<pos:position pos:line="24" pos:column="50"/></condition><then pos:line="24" pos:column="50"> <expr><literal type="string" pos:line="24" pos:column="51">"HEAD^"<pos:position pos:line="24" pos:column="58"/></literal></expr> <pos:position pos:line="24" pos:column="59"/></then><else pos:line="24" pos:column="59">: <expr><literal type="string" pos:line="24" pos:column="61">"HEAD"<pos:position pos:line="24" pos:column="67"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="69"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">memset<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><operator pos:line="26" pos:column="16">&amp;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="17">sm_summary<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="29">0<pos:position pos:line="26" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="32">sizeof<argument_list pos:line="26" pos:column="38">(<argument><expr><name pos:line="26" pos:column="39">sm_summary<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">sm_summary<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">.<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">argv<pos:position pos:line="27" pos:column="24"/></name></name> <operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <name><name pos:line="27" pos:column="27">argv<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">.<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">argv<pos:position pos:line="27" pos:column="36"/></name></name></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">sm_summary<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">.<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">env<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <name pos:line="28" pos:column="26">env<pos:position pos:line="28" pos:column="29"/></name></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">sm_summary<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">.<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">git_cmd<pos:position pos:line="29" pos:column="27"/></name></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <literal type="number" pos:line="29" pos:column="30">1<pos:position pos:line="29" pos:column="31"/></literal></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">sm_summary<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">.<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">no_stdin<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <literal type="number" pos:line="30" pos:column="31">1<pos:position pos:line="30" pos:column="32"/></literal></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">fflush<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name><name pos:line="31" pos:column="16">s<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">fp<pos:position pos:line="31" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="32" pos:column="9">sm_summary<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">.<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">out<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <operator pos:line="32" pos:column="26">-<pos:position pos:line="32" pos:column="27"/></operator><literal type="number" pos:line="32" pos:column="27">1<pos:position pos:line="32" pos:column="28"/></literal></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="34" pos:column="9">run_command<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><operator pos:line="34" pos:column="21">&amp;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="22">sm_summary<pos:position pos:line="34" pos:column="32"/></name></expr></argument>)<pos:position pos:line="34" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">argv_array_clear<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><operator pos:line="35" pos:column="26">&amp;<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="27">argv<pos:position pos:line="35" pos:column="31"/></name></expr></argument>)<pos:position pos:line="35" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><name pos:line="37" pos:column="9">len<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <call><name pos:line="37" pos:column="15">strbuf_read<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><operator pos:line="37" pos:column="27">&amp;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="28">cmd_stdout<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="40">sm_summary<pos:position pos:line="37" pos:column="50"/></name><operator pos:line="37" pos:column="50">.<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="51">out<pos:position pos:line="37" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="56">1024<pos:position pos:line="37" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="62"/></expr_stmt>

	<comment type="block" pos:line="39" pos:column="9">/* prepend header, only if there's an actual output */</comment>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">len<pos:position pos:line="40" pos:column="16"/></name></expr>)<pos:position pos:line="40" pos:column="17"/></condition><then pos:line="40" pos:column="17"> <block pos:line="40" pos:column="18">{
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">uncommitted<pos:position pos:line="41" pos:column="32"/></name></expr>)<pos:position pos:line="41" pos:column="33"/></condition><then pos:line="41" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="25">strbuf_addstr<pos:position pos:line="42" pos:column="38"/></name><argument_list pos:line="42" pos:column="38">(<argument><expr><operator pos:line="42" pos:column="39">&amp;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="40">summary<pos:position pos:line="42" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="49">_<pos:position pos:line="42" pos:column="50"/></name><argument_list pos:line="42" pos:column="50">(<argument><expr><literal type="string" pos:line="42" pos:column="51">"Submodules changed but not updated:"<pos:position pos:line="42" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="91"/></expr_stmt></block></then>
		<else pos:line="43" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="25">strbuf_addstr<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">(<argument><expr><operator pos:line="44" pos:column="39">&amp;<pos:position pos:line="44" pos:column="44"/></operator><name pos:line="44" pos:column="40">summary<pos:position pos:line="44" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="49">_<pos:position pos:line="44" pos:column="50"/></name><argument_list pos:line="44" pos:column="50">(<argument><expr><literal type="string" pos:line="44" pos:column="51">"Submodule changes to be committed:"<pos:position pos:line="44" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="90"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">strbuf_addstr<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><operator pos:line="45" pos:column="31">&amp;<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="32">summary<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="41">"\n\n"<pos:position pos:line="45" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">strbuf_addbuf<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><operator pos:line="47" pos:column="23">&amp;<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="24">summary<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="33">&amp;<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="34">cmd_stdout<pos:position pos:line="47" pos:column="44"/></name></expr></argument>)<pos:position pos:line="47" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">strbuf_release<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><operator pos:line="48" pos:column="24">&amp;<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="25">cmd_stdout<pos:position pos:line="48" pos:column="35"/></name></expr></argument>)<pos:position pos:line="48" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>

	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name><name pos:line="50" pos:column="13">s<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">-&gt;<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="16">display_comment_prefix<pos:position pos:line="50" pos:column="38"/></name></name></expr>)<pos:position pos:line="50" pos:column="39"/></condition><then pos:line="50" pos:column="39"> <block pos:line="50" pos:column="40">{
		<expr_stmt><expr><name pos:line="51" pos:column="17">summary_content<pos:position pos:line="51" pos:column="32"/></name> <operator pos:line="51" pos:column="33">=<pos:position pos:line="51" pos:column="34"/></operator> <call><name pos:line="51" pos:column="35">strbuf_detach<pos:position pos:line="51" pos:column="48"/></name><argument_list pos:line="51" pos:column="48">(<argument><expr><operator pos:line="51" pos:column="49">&amp;<pos:position pos:line="51" pos:column="54"/></operator><name pos:line="51" pos:column="50">summary<pos:position pos:line="51" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="59">&amp;<pos:position pos:line="51" pos:column="64"/></operator><name pos:line="51" pos:column="60">len<pos:position pos:line="51" pos:column="63"/></name></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">strbuf_add_commented_lines<pos:position pos:line="52" pos:column="43"/></name><argument_list pos:line="52" pos:column="43">(<argument><expr><operator pos:line="52" pos:column="44">&amp;<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="45">summary<pos:position pos:line="52" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="54">summary_content<pos:position pos:line="52" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="71">len<pos:position pos:line="52" pos:column="74"/></name></expr></argument>)<pos:position pos:line="52" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">free<pos:position pos:line="53" pos:column="21"/></name><argument_list pos:line="53" pos:column="21">(<argument><expr><name pos:line="53" pos:column="22">summary_content<pos:position pos:line="53" pos:column="37"/></name></expr></argument>)<pos:position pos:line="53" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="56" pos:column="9">fputs<pos:position pos:line="56" pos:column="14"/></name><argument_list pos:line="56" pos:column="14">(<argument><expr><name><name pos:line="56" pos:column="15">summary<pos:position pos:line="56" pos:column="22"/></name><operator pos:line="56" pos:column="22">.<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="23">buf<pos:position pos:line="56" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="28">s<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">-&gt;<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="31">fp<pos:position pos:line="56" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="57" pos:column="9">strbuf_release<pos:position pos:line="57" pos:column="23"/></name><argument_list pos:line="57" pos:column="23">(<argument><expr><operator pos:line="57" pos:column="24">&amp;<pos:position pos:line="57" pos:column="29"/></operator><name pos:line="57" pos:column="25">summary<pos:position pos:line="57" pos:column="32"/></name></expr></argument>)<pos:position pos:line="57" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="34"/></expr_stmt>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5508_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fsck_obj_buffer<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">object_id<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">oid<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="57">enum<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">object_type<pos:position pos:line="1" pos:column="73"/></name></name></type> <name pos:line="1" pos:column="74">type<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="2" pos:column="28">unsigned<pos:position pos:line="2" pos:column="36"/></name> <name pos:line="2" pos:column="37">long<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">size<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">void<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">buffer<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">int<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">eaten<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<comment type="block" pos:line="4" pos:column="9">/*
	 * Note, buffer may be NULL if type is OBJ_BLOB. See
	 * verify_packfile(), data_valid variable for details.
	 */</comment>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">object<pos:position pos:line="8" pos:column="22"/></name></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">obj<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">obj<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">parse_object_buffer<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">oid<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">type<pos:position pos:line="9" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">size<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="52">buffer<pos:position pos:line="9" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="60">eaten<pos:position pos:line="9" pos:column="65"/></name></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="67"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">obj<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18"> <block pos:line="10" pos:column="19">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">errors_found<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">|=<pos:position pos:line="11" pos:column="32"/></operator> <name pos:line="11" pos:column="33">ERROR_OBJECT<pos:position pos:line="11" pos:column="45"/></name></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><call><name pos:line="12" pos:column="24">error<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><literal type="string" pos:line="12" pos:column="30">"%s: object corrupt or missing"<pos:position pos:line="12" pos:column="61"/></literal></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="63">oid_to_hex<pos:position pos:line="12" pos:column="73"/></name><argument_list pos:line="12" pos:column="73">(<argument><expr><name pos:line="12" pos:column="74">oid<pos:position pos:line="12" pos:column="77"/></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="80"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">obj<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">flags<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">&amp;=<pos:position pos:line="14" pos:column="26"/></operator> <operator pos:line="14" pos:column="23">~<pos:position pos:line="14" pos:column="24"/></operator><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">REACHABLE<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">|<pos:position pos:line="14" pos:column="36"/></operator> <name pos:line="14" pos:column="37">SEEN<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">)<pos:position pos:line="14" pos:column="42"/></operator></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">obj<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">flags<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">|=<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="23">HAS_OBJ<pos:position pos:line="15" pos:column="30"/></name></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
	<return pos:line="16" pos:column="9">return <expr><call><name pos:line="16" pos:column="16">fsck_obj<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">obj<pos:position pos:line="16" pos:column="28"/></name></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

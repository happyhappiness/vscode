<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4997_git-2.13.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pass_blame<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">scoreboard<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">sb<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">origin<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">origin<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">int<pos:position pos:line="1" pos:column="73"/></name></type> <name pos:line="1" pos:column="74">opt<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_info<pos:position pos:line="3" pos:column="24"/></name></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">revs<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><name><name pos:line="3" pos:column="33">sb<pos:position pos:line="3" pos:column="35"/></name><operator pos:line="3" pos:column="35">-&gt;<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="37">revs<pos:position pos:line="3" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">pass<pos:position pos:line="4" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">num_sg<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">commit<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><name><name pos:line="5" pos:column="33">origin<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">-&gt;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="41">commit<pos:position pos:line="5" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit_list<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">sg<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">origin<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name><name pos:line="7" pos:column="24">sg_buf<pos:position pos:line="7" pos:column="30"/></name><index pos:line="7" pos:column="30">[<expr><name pos:line="7" pos:column="31">MAXSG<pos:position pos:line="7" pos:column="36"/></name></expr>]<pos:position pos:line="7" pos:column="37"/></index></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">origin<pos:position pos:line="8" pos:column="22"/></name></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">porigin<pos:position pos:line="8" pos:column="31"/></name></decl>, <modifier pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></modifier><modifier pos:line="8" pos:column="34">*<pos:position pos:line="8" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="35">sg_origin<pos:position pos:line="8" pos:column="44"/></name> <init pos:line="8" pos:column="45">= <expr><name pos:line="8" pos:column="47">sg_buf<pos:position pos:line="8" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">blame_entry<pos:position pos:line="9" pos:column="27"/></name></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">toosmall<pos:position pos:line="9" pos:column="37"/></name> <init pos:line="9" pos:column="38">= <expr><name pos:line="9" pos:column="40">NULL<pos:position pos:line="9" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">blame_entry<pos:position pos:line="10" pos:column="27"/></name></name> <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">blames<pos:position pos:line="10" pos:column="35"/></name></decl>, <modifier pos:line="10" pos:column="37">*<pos:position pos:line="10" pos:column="38"/></modifier><modifier pos:line="10" pos:column="38">*<pos:position pos:line="10" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="39">blametail<pos:position pos:line="10" pos:column="48"/></name> <init pos:line="10" pos:column="49">= <expr><operator pos:line="10" pos:column="51">&amp;<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="52">blames<pos:position pos:line="10" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="59"/></decl_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">num_sg<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">num_scapegoats<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">revs<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="39">commit<pos:position pos:line="12" pos:column="45"/></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">num_sg<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21">
		<block type="pseudo"><goto pos:line="14" pos:column="17">goto <name pos:line="14" pos:column="22">finish<pos:position pos:line="14" pos:column="28"/></name>;<pos:position pos:line="14" pos:column="29"/></goto></block></then>
	<elseif pos:line="15" pos:column="9">else <if pos:line="15" pos:column="14">if <condition pos:line="15" pos:column="17">(<expr><name pos:line="15" pos:column="18">num_sg<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">&lt;<pos:position pos:line="15" pos:column="29"/></operator> <call><name pos:line="15" pos:column="27">ARRAY_SIZE<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">sg_buf<pos:position pos:line="15" pos:column="44"/></name></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="46"/></condition><then pos:line="15" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">memset<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">sg_buf<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="32">0<pos:position pos:line="16" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="35">sizeof<argument_list pos:line="16" pos:column="41">(<argument><expr><name pos:line="16" pos:column="42">sg_buf<pos:position pos:line="16" pos:column="48"/></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt></block></then></if></elseif>
	<else pos:line="17" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">sg_origin<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <call><name pos:line="18" pos:column="29">xcalloc<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">num_sg<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="45">sizeof<argument_list pos:line="18" pos:column="51">(<argument><expr><operator pos:line="18" pos:column="52">*<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="53">sg_origin<pos:position pos:line="18" pos:column="62"/></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="65"/></expr_stmt></block></else></if>

	<comment type="block" pos:line="20" pos:column="9">/*
	 * The first pass looks for unrenamed path to optimize for
	 * common cases, then we look for renames in the second pass.
	 */</comment>
	<for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">pass<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <literal type="number" pos:line="24" pos:column="21">0<pos:position pos:line="24" pos:column="22"/></literal></expr>;<pos:position pos:line="24" pos:column="23"/></init> <condition><expr><name pos:line="24" pos:column="24">pass<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">&lt;<pos:position pos:line="24" pos:column="33"/></operator> <literal type="number" pos:line="24" pos:column="31">2<pos:position pos:line="24" pos:column="32"/></literal> <operator pos:line="24" pos:column="33">-<pos:position pos:line="24" pos:column="34"/></operator> <name pos:line="24" pos:column="35">no_whole_file_rename<pos:position pos:line="24" pos:column="55"/></name></expr>;<pos:position pos:line="24" pos:column="56"/></condition> <incr><expr><name pos:line="24" pos:column="57">pass<pos:position pos:line="24" pos:column="61"/></name><operator pos:line="24" pos:column="61">++<pos:position pos:line="24" pos:column="63"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="64"/></control> <block pos:line="24" pos:column="65">{
		<decl_stmt><decl><type><name><name pos:line="25" pos:column="17">struct<pos:position pos:line="25" pos:column="23"/></name> <name pos:line="25" pos:column="24">origin<pos:position pos:line="25" pos:column="30"/></name></name> <modifier pos:line="25" pos:column="31">*<pos:position pos:line="25" pos:column="32"/></modifier></type><argument_list pos:line="25" pos:column="32">(<argument><expr><operator pos:line="25" pos:column="33">*<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="34">find<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list><argument_list pos:line="25" pos:column="39">(<argument><expr pos:line="25" pos:column="40">struct <name pos:line="25" pos:column="47">scoreboard<pos:position pos:line="25" pos:column="57"/></name> <operator pos:line="25" pos:column="58">*<pos:position pos:line="25" pos:column="59"/></operator></expr></argument>,
				       <argument><expr pos:line="26" pos:column="40">struct <name pos:line="26" pos:column="47">commit<pos:position pos:line="26" pos:column="53"/></name> <operator pos:line="26" pos:column="54">*<pos:position pos:line="26" pos:column="55"/></operator></expr></argument>, <argument><expr pos:line="26" pos:column="57">struct <name pos:line="26" pos:column="64">origin<pos:position pos:line="26" pos:column="70"/></name> <operator pos:line="26" pos:column="71">*<pos:position pos:line="26" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></decl>;<pos:position pos:line="26" pos:column="74"/></decl_stmt>
		<expr_stmt><expr><name pos:line="27" pos:column="17">find<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="27" pos:column="24">pass<pos:position pos:line="27" pos:column="28"/></name></expr> ?<pos:position pos:line="27" pos:column="30"/></condition><then pos:line="27" pos:column="30"> <expr><name pos:line="27" pos:column="31">find_rename<pos:position pos:line="27" pos:column="42"/></name></expr> <pos:position pos:line="27" pos:column="43"/></then><else pos:line="27" pos:column="43">: <expr><name pos:line="27" pos:column="45">find_origin<pos:position pos:line="27" pos:column="56"/></name></expr></else></ternary></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>

		<for pos:line="29" pos:column="17">for <control pos:line="29" pos:column="21">(<init><expr><name pos:line="29" pos:column="22">i<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <literal type="number" pos:line="29" pos:column="26">0<pos:position pos:line="29" pos:column="27"/></literal></expr><operator pos:line="29" pos:column="27">,<pos:position pos:line="29" pos:column="28"/></operator> <expr><name pos:line="29" pos:column="29">sg<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">=<pos:position pos:line="29" pos:column="33"/></operator> <call><name pos:line="29" pos:column="34">first_scapegoat<pos:position pos:line="29" pos:column="49"/></name><argument_list pos:line="29" pos:column="49">(<argument><expr><name pos:line="29" pos:column="50">revs<pos:position pos:line="29" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="56">commit<pos:position pos:line="29" pos:column="62"/></name></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="64"/></init>
		     <condition><expr><name pos:line="30" pos:column="22">i<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">&lt;<pos:position pos:line="30" pos:column="28"/></operator> <name pos:line="30" pos:column="26">num_sg<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">&amp;&amp;<pos:position pos:line="30" pos:column="43"/></operator> <name pos:line="30" pos:column="36">sg<pos:position pos:line="30" pos:column="38"/></name></expr>;<pos:position pos:line="30" pos:column="39"/></condition>
		     <incr><expr><name pos:line="31" pos:column="22">sg<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <name><name pos:line="31" pos:column="27">sg<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">next<pos:position pos:line="31" pos:column="35"/></name></name></expr><operator pos:line="31" pos:column="35">,<pos:position pos:line="31" pos:column="36"/></operator> <expr><name pos:line="31" pos:column="37">i<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">++<pos:position pos:line="31" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="41"/></control> <block pos:line="31" pos:column="42">{
			<decl_stmt><decl><type><name><name pos:line="32" pos:column="25">struct<pos:position pos:line="32" pos:column="31"/></name> <name pos:line="32" pos:column="32">commit<pos:position pos:line="32" pos:column="38"/></name></name> <modifier pos:line="32" pos:column="39">*<pos:position pos:line="32" pos:column="40"/></modifier></type><name pos:line="32" pos:column="40">p<pos:position pos:line="32" pos:column="41"/></name> <init pos:line="32" pos:column="42">= <expr><name><name pos:line="32" pos:column="44">sg<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">-&gt;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="48">item<pos:position pos:line="32" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="32" pos:column="53"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="33" pos:column="25">int<pos:position pos:line="33" pos:column="28"/></name></type> <name pos:line="33" pos:column="29">j<pos:position pos:line="33" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="33" pos:column="32">same<pos:position pos:line="33" pos:column="36"/></name></decl>;<pos:position pos:line="33" pos:column="37"/></decl_stmt>

			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><name><name pos:line="35" pos:column="29">sg_origin<pos:position pos:line="35" pos:column="38"/></name><index pos:line="35" pos:column="38">[<expr><name pos:line="35" pos:column="39">i<pos:position pos:line="35" pos:column="40"/></name></expr>]<pos:position pos:line="35" pos:column="41"/></index></name></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42">
				<block type="pseudo"><continue pos:line="36" pos:column="33">continue;<pos:position pos:line="36" pos:column="42"/></continue></block></then></if>
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><call><name pos:line="37" pos:column="29">parse_commit<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">(<argument><expr><name pos:line="37" pos:column="42">p<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="45"/></condition><then pos:line="37" pos:column="45">
				<block type="pseudo"><continue pos:line="38" pos:column="33">continue;<pos:position pos:line="38" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="39" pos:column="25">porigin<pos:position pos:line="39" pos:column="32"/></name> <operator pos:line="39" pos:column="33">=<pos:position pos:line="39" pos:column="34"/></operator> <call><name pos:line="39" pos:column="35">find<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><name pos:line="39" pos:column="40">sb<pos:position pos:line="39" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="44">p<pos:position pos:line="39" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="47">origin<pos:position pos:line="39" pos:column="53"/></name></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="55"/></expr_stmt>
			<if pos:line="40" pos:column="25">if <condition pos:line="40" pos:column="28">(<expr><operator pos:line="40" pos:column="29">!<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="30">porigin<pos:position pos:line="40" pos:column="37"/></name></expr>)<pos:position pos:line="40" pos:column="38"/></condition><then pos:line="40" pos:column="38">
				<block type="pseudo"><continue pos:line="41" pos:column="33">continue;<pos:position pos:line="41" pos:column="42"/></continue></block></then></if>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><operator pos:line="42" pos:column="29">!<pos:position pos:line="42" pos:column="30"/></operator><call><name pos:line="42" pos:column="30">oidcmp<pos:position pos:line="42" pos:column="36"/></name><argument_list pos:line="42" pos:column="36">(<argument><expr><operator pos:line="42" pos:column="37">&amp;<pos:position pos:line="42" pos:column="42"/></operator><name><name pos:line="42" pos:column="38">porigin<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">-&gt;<pos:position pos:line="42" pos:column="50"/></operator><name pos:line="42" pos:column="47">blob_oid<pos:position pos:line="42" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="57">&amp;<pos:position pos:line="42" pos:column="62"/></operator><name><name pos:line="42" pos:column="58">origin<pos:position pos:line="42" pos:column="64"/></name><operator pos:line="42" pos:column="64">-&gt;<pos:position pos:line="42" pos:column="69"/></operator><name pos:line="42" pos:column="66">blob_oid<pos:position pos:line="42" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="76"/></condition><then pos:line="42" pos:column="76"> <block pos:line="42" pos:column="77">{
				<expr_stmt><expr><call><name pos:line="43" pos:column="33">pass_whole_blame<pos:position pos:line="43" pos:column="49"/></name><argument_list pos:line="43" pos:column="49">(<argument><expr><name pos:line="43" pos:column="50">sb<pos:position pos:line="43" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="54">origin<pos:position pos:line="43" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="62">porigin<pos:position pos:line="43" pos:column="69"/></name></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="71"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="44" pos:column="33">origin_decref<pos:position pos:line="44" pos:column="46"/></name><argument_list pos:line="44" pos:column="46">(<argument><expr><name pos:line="44" pos:column="47">porigin<pos:position pos:line="44" pos:column="54"/></name></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt>
				<goto pos:line="45" pos:column="33">goto <name pos:line="45" pos:column="38">finish<pos:position pos:line="45" pos:column="44"/></name>;<pos:position pos:line="45" pos:column="45"/></goto>
			}<pos:position pos:line="46" pos:column="26"/></block></then></if>
			<for pos:line="47" pos:column="25">for <control pos:line="47" pos:column="29">(<init><expr><name pos:line="47" pos:column="30">j<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">=<pos:position pos:line="47" pos:column="33"/></operator> <name pos:line="47" pos:column="34">same<pos:position pos:line="47" pos:column="38"/></name> <operator pos:line="47" pos:column="39">=<pos:position pos:line="47" pos:column="40"/></operator> <literal type="number" pos:line="47" pos:column="41">0<pos:position pos:line="47" pos:column="42"/></literal></expr>;<pos:position pos:line="47" pos:column="43"/></init> <condition><expr><name pos:line="47" pos:column="44">j<pos:position pos:line="47" pos:column="45"/></name> <operator pos:line="47" pos:column="46">&lt;<pos:position pos:line="47" pos:column="50"/></operator> <name pos:line="47" pos:column="48">i<pos:position pos:line="47" pos:column="49"/></name></expr>;<pos:position pos:line="47" pos:column="50"/></condition> <incr><expr><name pos:line="47" pos:column="51">j<pos:position pos:line="47" pos:column="52"/></name><operator pos:line="47" pos:column="52">++<pos:position pos:line="47" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="47" pos:column="55"/></control>
				<block type="pseudo"><if pos:line="48" pos:column="33">if <condition pos:line="48" pos:column="36">(<expr><name><name pos:line="48" pos:column="37">sg_origin<pos:position pos:line="48" pos:column="46"/></name><index pos:line="48" pos:column="46">[<expr><name pos:line="48" pos:column="47">j<pos:position pos:line="48" pos:column="48"/></name></expr>]<pos:position pos:line="48" pos:column="49"/></index></name> <operator pos:line="48" pos:column="50">&amp;&amp;<pos:position pos:line="48" pos:column="60"/></operator>
				    <operator pos:line="49" pos:column="37">!<pos:position pos:line="49" pos:column="38"/></operator><call><name pos:line="49" pos:column="38">oidcmp<pos:position pos:line="49" pos:column="44"/></name><argument_list pos:line="49" pos:column="44">(<argument><expr><operator pos:line="49" pos:column="45">&amp;<pos:position pos:line="49" pos:column="50"/></operator><name><name pos:line="49" pos:column="46">sg_origin<pos:position pos:line="49" pos:column="55"/></name><index pos:line="49" pos:column="55">[<expr><name pos:line="49" pos:column="56">j<pos:position pos:line="49" pos:column="57"/></name></expr>]<pos:position pos:line="49" pos:column="58"/></index></name><operator pos:line="49" pos:column="58">-&gt;<pos:position pos:line="49" pos:column="63"/></operator><name pos:line="49" pos:column="60">blob_oid<pos:position pos:line="49" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="70">&amp;<pos:position pos:line="49" pos:column="75"/></operator><name><name pos:line="49" pos:column="71">porigin<pos:position pos:line="49" pos:column="78"/></name><operator pos:line="49" pos:column="78">-&gt;<pos:position pos:line="49" pos:column="83"/></operator><name pos:line="49" pos:column="80">blob_oid<pos:position pos:line="49" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="89"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="90"/></condition><then pos:line="49" pos:column="90"> <block pos:line="49" pos:column="91">{
					<expr_stmt><expr><name pos:line="50" pos:column="41">same<pos:position pos:line="50" pos:column="45"/></name> <operator pos:line="50" pos:column="46">=<pos:position pos:line="50" pos:column="47"/></operator> <literal type="number" pos:line="50" pos:column="48">1<pos:position pos:line="50" pos:column="49"/></literal></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt>
					<break pos:line="51" pos:column="41">break;<pos:position pos:line="51" pos:column="47"/></break>
				}<pos:position pos:line="52" pos:column="34"/></block></then></if></block></for>
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><operator pos:line="53" pos:column="29">!<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="30">same<pos:position pos:line="53" pos:column="34"/></name></expr>)<pos:position pos:line="53" pos:column="35"/></condition><then pos:line="53" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="33">sg_origin<pos:position pos:line="54" pos:column="42"/></name><index pos:line="54" pos:column="42">[<expr><name pos:line="54" pos:column="43">i<pos:position pos:line="54" pos:column="44"/></name></expr>]<pos:position pos:line="54" pos:column="45"/></index></name> <operator pos:line="54" pos:column="46">=<pos:position pos:line="54" pos:column="47"/></operator> <name pos:line="54" pos:column="48">porigin<pos:position pos:line="54" pos:column="55"/></name></expr>;<pos:position pos:line="54" pos:column="56"/></expr_stmt></block></then>
			<else pos:line="55" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="33">origin_decref<pos:position pos:line="56" pos:column="46"/></name><argument_list pos:line="56" pos:column="46">(<argument><expr><name pos:line="56" pos:column="47">porigin<pos:position pos:line="56" pos:column="54"/></name></expr></argument>)<pos:position pos:line="56" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="56"/></expr_stmt></block></else></if>
		}<pos:position pos:line="57" pos:column="18"/></block></for>
	}<pos:position pos:line="58" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="60" pos:column="9">num_commits<pos:position pos:line="60" pos:column="20"/></name><operator pos:line="60" pos:column="20">++<pos:position pos:line="60" pos:column="22"/></operator></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>
	<for pos:line="61" pos:column="9">for <control pos:line="61" pos:column="13">(<init><expr><name pos:line="61" pos:column="14">i<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <literal type="number" pos:line="61" pos:column="18">0<pos:position pos:line="61" pos:column="19"/></literal></expr><operator pos:line="61" pos:column="19">,<pos:position pos:line="61" pos:column="20"/></operator> <expr><name pos:line="61" pos:column="21">sg<pos:position pos:line="61" pos:column="23"/></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <call><name pos:line="61" pos:column="26">first_scapegoat<pos:position pos:line="61" pos:column="41"/></name><argument_list pos:line="61" pos:column="41">(<argument><expr><name pos:line="61" pos:column="42">revs<pos:position pos:line="61" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="48">commit<pos:position pos:line="61" pos:column="54"/></name></expr></argument>)<pos:position pos:line="61" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="56"/></init>
	     <condition><expr><name pos:line="62" pos:column="14">i<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">&lt;<pos:position pos:line="62" pos:column="20"/></operator> <name pos:line="62" pos:column="18">num_sg<pos:position pos:line="62" pos:column="24"/></name> <operator pos:line="62" pos:column="25">&amp;&amp;<pos:position pos:line="62" pos:column="35"/></operator> <name pos:line="62" pos:column="28">sg<pos:position pos:line="62" pos:column="30"/></name></expr>;<pos:position pos:line="62" pos:column="31"/></condition>
	     <incr><expr><name pos:line="63" pos:column="14">sg<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <name><name pos:line="63" pos:column="19">sg<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">-&gt;<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="23">next<pos:position pos:line="63" pos:column="27"/></name></name></expr><operator pos:line="63" pos:column="27">,<pos:position pos:line="63" pos:column="28"/></operator> <expr><name pos:line="63" pos:column="29">i<pos:position pos:line="63" pos:column="30"/></name><operator pos:line="63" pos:column="30">++<pos:position pos:line="63" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="63" pos:column="33"/></control> <block pos:line="63" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="64" pos:column="17">struct<pos:position pos:line="64" pos:column="23"/></name> <name pos:line="64" pos:column="24">origin<pos:position pos:line="64" pos:column="30"/></name></name> <modifier pos:line="64" pos:column="31">*<pos:position pos:line="64" pos:column="32"/></modifier></type><name pos:line="64" pos:column="32">porigin<pos:position pos:line="64" pos:column="39"/></name> <init pos:line="64" pos:column="40">= <expr><name><name pos:line="64" pos:column="42">sg_origin<pos:position pos:line="64" pos:column="51"/></name><index pos:line="64" pos:column="51">[<expr><name pos:line="64" pos:column="52">i<pos:position pos:line="64" pos:column="53"/></name></expr>]<pos:position pos:line="64" pos:column="54"/></index></name></expr></init></decl>;<pos:position pos:line="64" pos:column="55"/></decl_stmt>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><operator pos:line="65" pos:column="21">!<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="22">porigin<pos:position pos:line="65" pos:column="29"/></name></expr>)<pos:position pos:line="65" pos:column="30"/></condition><then pos:line="65" pos:column="30">
			<block type="pseudo"><continue pos:line="66" pos:column="25">continue;<pos:position pos:line="66" pos:column="34"/></continue></block></then></if>
		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><operator pos:line="67" pos:column="21">!<pos:position pos:line="67" pos:column="22"/></operator><name><name pos:line="67" pos:column="22">origin<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">-&gt;<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="30">previous<pos:position pos:line="67" pos:column="38"/></name></name></expr>)<pos:position pos:line="67" pos:column="39"/></condition><then pos:line="67" pos:column="39"> <block pos:line="67" pos:column="40">{
			<expr_stmt><expr><call><name pos:line="68" pos:column="25">origin_incref<pos:position pos:line="68" pos:column="38"/></name><argument_list pos:line="68" pos:column="38">(<argument><expr><name pos:line="68" pos:column="39">porigin<pos:position pos:line="68" pos:column="46"/></name></expr></argument>)<pos:position pos:line="68" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="69" pos:column="25">origin<pos:position pos:line="69" pos:column="31"/></name><operator pos:line="69" pos:column="31">-&gt;<pos:position pos:line="69" pos:column="36"/></operator><name pos:line="69" pos:column="33">previous<pos:position pos:line="69" pos:column="41"/></name></name> <operator pos:line="69" pos:column="42">=<pos:position pos:line="69" pos:column="43"/></operator> <name pos:line="69" pos:column="44">porigin<pos:position pos:line="69" pos:column="51"/></name></expr>;<pos:position pos:line="69" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="70" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="71" pos:column="17">pass_blame_to_parent<pos:position pos:line="71" pos:column="37"/></name><argument_list pos:line="71" pos:column="37">(<argument><expr><name pos:line="71" pos:column="38">sb<pos:position pos:line="71" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="42">origin<pos:position pos:line="71" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="50">porigin<pos:position pos:line="71" pos:column="57"/></name></expr></argument>)<pos:position pos:line="71" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="59"/></expr_stmt>
		<if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><operator pos:line="72" pos:column="21">!<pos:position pos:line="72" pos:column="22"/></operator><name><name pos:line="72" pos:column="22">origin<pos:position pos:line="72" pos:column="28"/></name><operator pos:line="72" pos:column="28">-&gt;<pos:position pos:line="72" pos:column="33"/></operator><name pos:line="72" pos:column="30">suspects<pos:position pos:line="72" pos:column="38"/></name></name></expr>)<pos:position pos:line="72" pos:column="39"/></condition><then pos:line="72" pos:column="39">
			<block type="pseudo"><goto pos:line="73" pos:column="25">goto <name pos:line="73" pos:column="30">finish<pos:position pos:line="73" pos:column="36"/></name>;<pos:position pos:line="73" pos:column="37"/></goto></block></then></if>
	}<pos:position pos:line="74" pos:column="10"/></block></for>

	<comment type="block" pos:line="76" pos:column="9">/*
	 * Optionally find moves in parents' files.
	 */</comment>
	<if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name pos:line="79" pos:column="13">opt<pos:position pos:line="79" pos:column="16"/></name> <operator pos:line="79" pos:column="17">&amp;<pos:position pos:line="79" pos:column="22"/></operator> <name pos:line="79" pos:column="19">PICKAXE_BLAME_MOVE<pos:position pos:line="79" pos:column="37"/></name></expr>)<pos:position pos:line="79" pos:column="38"/></condition><then pos:line="79" pos:column="38"> <block pos:line="79" pos:column="39">{
		<expr_stmt><expr><call><name pos:line="80" pos:column="17">filter_small<pos:position pos:line="80" pos:column="29"/></name><argument_list pos:line="80" pos:column="29">(<argument><expr><name pos:line="80" pos:column="30">sb<pos:position pos:line="80" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="34">&amp;<pos:position pos:line="80" pos:column="39"/></operator><name pos:line="80" pos:column="35">toosmall<pos:position pos:line="80" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="45">&amp;<pos:position pos:line="80" pos:column="50"/></operator><name><name pos:line="80" pos:column="46">origin<pos:position pos:line="80" pos:column="52"/></name><operator pos:line="80" pos:column="52">-&gt;<pos:position pos:line="80" pos:column="57"/></operator><name pos:line="80" pos:column="54">suspects<pos:position pos:line="80" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="64">blame_move_score<pos:position pos:line="80" pos:column="80"/></name></expr></argument>)<pos:position pos:line="80" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="82"/></expr_stmt>
		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><name><name pos:line="81" pos:column="21">origin<pos:position pos:line="81" pos:column="27"/></name><operator pos:line="81" pos:column="27">-&gt;<pos:position pos:line="81" pos:column="32"/></operator><name pos:line="81" pos:column="29">suspects<pos:position pos:line="81" pos:column="37"/></name></name></expr>)<pos:position pos:line="81" pos:column="38"/></condition><then pos:line="81" pos:column="38"> <block pos:line="81" pos:column="39">{
			<for pos:line="82" pos:column="25">for <control pos:line="82" pos:column="29">(<init><expr><name pos:line="82" pos:column="30">i<pos:position pos:line="82" pos:column="31"/></name> <operator pos:line="82" pos:column="32">=<pos:position pos:line="82" pos:column="33"/></operator> <literal type="number" pos:line="82" pos:column="34">0<pos:position pos:line="82" pos:column="35"/></literal></expr><operator pos:line="82" pos:column="35">,<pos:position pos:line="82" pos:column="36"/></operator> <expr><name pos:line="82" pos:column="37">sg<pos:position pos:line="82" pos:column="39"/></name> <operator pos:line="82" pos:column="40">=<pos:position pos:line="82" pos:column="41"/></operator> <call><name pos:line="82" pos:column="42">first_scapegoat<pos:position pos:line="82" pos:column="57"/></name><argument_list pos:line="82" pos:column="57">(<argument><expr><name pos:line="82" pos:column="58">revs<pos:position pos:line="82" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="64">commit<pos:position pos:line="82" pos:column="70"/></name></expr></argument>)<pos:position pos:line="82" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="72"/></init>
			     <condition><expr><name pos:line="83" pos:column="30">i<pos:position pos:line="83" pos:column="31"/></name> <operator pos:line="83" pos:column="32">&lt;<pos:position pos:line="83" pos:column="36"/></operator> <name pos:line="83" pos:column="34">num_sg<pos:position pos:line="83" pos:column="40"/></name> <operator pos:line="83" pos:column="41">&amp;&amp;<pos:position pos:line="83" pos:column="51"/></operator> <name pos:line="83" pos:column="44">sg<pos:position pos:line="83" pos:column="46"/></name></expr>;<pos:position pos:line="83" pos:column="47"/></condition>
			     <incr><expr><name pos:line="84" pos:column="30">sg<pos:position pos:line="84" pos:column="32"/></name> <operator pos:line="84" pos:column="33">=<pos:position pos:line="84" pos:column="34"/></operator> <name><name pos:line="84" pos:column="35">sg<pos:position pos:line="84" pos:column="37"/></name><operator pos:line="84" pos:column="37">-&gt;<pos:position pos:line="84" pos:column="42"/></operator><name pos:line="84" pos:column="39">next<pos:position pos:line="84" pos:column="43"/></name></name></expr><operator pos:line="84" pos:column="43">,<pos:position pos:line="84" pos:column="44"/></operator> <expr><name pos:line="84" pos:column="45">i<pos:position pos:line="84" pos:column="46"/></name><operator pos:line="84" pos:column="46">++<pos:position pos:line="84" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="84" pos:column="49"/></control> <block pos:line="84" pos:column="50">{
				<decl_stmt><decl><type><name><name pos:line="85" pos:column="33">struct<pos:position pos:line="85" pos:column="39"/></name> <name pos:line="85" pos:column="40">origin<pos:position pos:line="85" pos:column="46"/></name></name> <modifier pos:line="85" pos:column="47">*<pos:position pos:line="85" pos:column="48"/></modifier></type><name pos:line="85" pos:column="48">porigin<pos:position pos:line="85" pos:column="55"/></name> <init pos:line="85" pos:column="56">= <expr><name><name pos:line="85" pos:column="58">sg_origin<pos:position pos:line="85" pos:column="67"/></name><index pos:line="85" pos:column="67">[<expr><name pos:line="85" pos:column="68">i<pos:position pos:line="85" pos:column="69"/></name></expr>]<pos:position pos:line="85" pos:column="70"/></index></name></expr></init></decl>;<pos:position pos:line="85" pos:column="71"/></decl_stmt>
				<if pos:line="86" pos:column="33">if <condition pos:line="86" pos:column="36">(<expr><operator pos:line="86" pos:column="37">!<pos:position pos:line="86" pos:column="38"/></operator><name pos:line="86" pos:column="38">porigin<pos:position pos:line="86" pos:column="45"/></name></expr>)<pos:position pos:line="86" pos:column="46"/></condition><then pos:line="86" pos:column="46">
					<block type="pseudo"><continue pos:line="87" pos:column="41">continue;<pos:position pos:line="87" pos:column="50"/></continue></block></then></if>
				<expr_stmt><expr><call><name pos:line="88" pos:column="33">find_move_in_parent<pos:position pos:line="88" pos:column="52"/></name><argument_list pos:line="88" pos:column="52">(<argument><expr><name pos:line="88" pos:column="53">sb<pos:position pos:line="88" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="57">&amp;<pos:position pos:line="88" pos:column="62"/></operator><name pos:line="88" pos:column="58">blametail<pos:position pos:line="88" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="69">&amp;<pos:position pos:line="88" pos:column="74"/></operator><name pos:line="88" pos:column="70">toosmall<pos:position pos:line="88" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="80">origin<pos:position pos:line="88" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="88">porigin<pos:position pos:line="88" pos:column="95"/></name></expr></argument>)<pos:position pos:line="88" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="97"/></expr_stmt>
				<if pos:line="89" pos:column="33">if <condition pos:line="89" pos:column="36">(<expr><operator pos:line="89" pos:column="37">!<pos:position pos:line="89" pos:column="38"/></operator><name><name pos:line="89" pos:column="38">origin<pos:position pos:line="89" pos:column="44"/></name><operator pos:line="89" pos:column="44">-&gt;<pos:position pos:line="89" pos:column="49"/></operator><name pos:line="89" pos:column="46">suspects<pos:position pos:line="89" pos:column="54"/></name></name></expr>)<pos:position pos:line="89" pos:column="55"/></condition><then pos:line="89" pos:column="55">
					<block type="pseudo"><break pos:line="90" pos:column="41">break;<pos:position pos:line="90" pos:column="47"/></break></block></then></if>
			}<pos:position pos:line="91" pos:column="26"/></block></for>
		}<pos:position pos:line="92" pos:column="18"/></block></then></if>
	}<pos:position pos:line="93" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="95" pos:column="9">/*
	 * Optionally find copies from parents' files.
	 */</comment>
	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name pos:line="98" pos:column="13">opt<pos:position pos:line="98" pos:column="16"/></name> <operator pos:line="98" pos:column="17">&amp;<pos:position pos:line="98" pos:column="22"/></operator> <name pos:line="98" pos:column="19">PICKAXE_BLAME_COPY<pos:position pos:line="98" pos:column="37"/></name></expr>)<pos:position pos:line="98" pos:column="38"/></condition><then pos:line="98" pos:column="38"> <block pos:line="98" pos:column="39">{
		<if pos:line="99" pos:column="17">if <condition pos:line="99" pos:column="20">(<expr><name pos:line="99" pos:column="21">blame_copy_score<pos:position pos:line="99" pos:column="37"/></name> <operator pos:line="99" pos:column="38">&gt;<pos:position pos:line="99" pos:column="42"/></operator> <name pos:line="99" pos:column="40">blame_move_score<pos:position pos:line="99" pos:column="56"/></name></expr>)<pos:position pos:line="99" pos:column="57"/></condition><then pos:line="99" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="100" pos:column="25">filter_small<pos:position pos:line="100" pos:column="37"/></name><argument_list pos:line="100" pos:column="37">(<argument><expr><name pos:line="100" pos:column="38">sb<pos:position pos:line="100" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="42">&amp;<pos:position pos:line="100" pos:column="47"/></operator><name pos:line="100" pos:column="43">toosmall<pos:position pos:line="100" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="53">&amp;<pos:position pos:line="100" pos:column="58"/></operator><name><name pos:line="100" pos:column="54">origin<pos:position pos:line="100" pos:column="60"/></name><operator pos:line="100" pos:column="60">-&gt;<pos:position pos:line="100" pos:column="65"/></operator><name pos:line="100" pos:column="62">suspects<pos:position pos:line="100" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="72">blame_copy_score<pos:position pos:line="100" pos:column="88"/></name></expr></argument>)<pos:position pos:line="100" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="90"/></expr_stmt></block></then>
		<elseif pos:line="101" pos:column="17">else <if pos:line="101" pos:column="22">if <condition pos:line="101" pos:column="25">(<expr><name pos:line="101" pos:column="26">blame_copy_score<pos:position pos:line="101" pos:column="42"/></name> <operator pos:line="101" pos:column="43">&lt;<pos:position pos:line="101" pos:column="47"/></operator> <name pos:line="101" pos:column="45">blame_move_score<pos:position pos:line="101" pos:column="61"/></name></expr>)<pos:position pos:line="101" pos:column="62"/></condition><then pos:line="101" pos:column="62"> <block pos:line="101" pos:column="63">{
			<expr_stmt><expr><name><name pos:line="102" pos:column="25">origin<pos:position pos:line="102" pos:column="31"/></name><operator pos:line="102" pos:column="31">-&gt;<pos:position pos:line="102" pos:column="36"/></operator><name pos:line="102" pos:column="33">suspects<pos:position pos:line="102" pos:column="41"/></name></name> <operator pos:line="102" pos:column="42">=<pos:position pos:line="102" pos:column="43"/></operator> <call><name pos:line="102" pos:column="44">blame_merge<pos:position pos:line="102" pos:column="55"/></name><argument_list pos:line="102" pos:column="55">(<argument><expr><name><name pos:line="102" pos:column="56">origin<pos:position pos:line="102" pos:column="62"/></name><operator pos:line="102" pos:column="62">-&gt;<pos:position pos:line="102" pos:column="67"/></operator><name pos:line="102" pos:column="64">suspects<pos:position pos:line="102" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="74">toosmall<pos:position pos:line="102" pos:column="82"/></name></expr></argument>)<pos:position pos:line="102" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="84"/></expr_stmt>
			<expr_stmt><expr><name pos:line="103" pos:column="25">toosmall<pos:position pos:line="103" pos:column="33"/></name> <operator pos:line="103" pos:column="34">=<pos:position pos:line="103" pos:column="35"/></operator> <name pos:line="103" pos:column="36">NULL<pos:position pos:line="103" pos:column="40"/></name></expr>;<pos:position pos:line="103" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="104" pos:column="25">filter_small<pos:position pos:line="104" pos:column="37"/></name><argument_list pos:line="104" pos:column="37">(<argument><expr><name pos:line="104" pos:column="38">sb<pos:position pos:line="104" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="42">&amp;<pos:position pos:line="104" pos:column="47"/></operator><name pos:line="104" pos:column="43">toosmall<pos:position pos:line="104" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="53">&amp;<pos:position pos:line="104" pos:column="58"/></operator><name><name pos:line="104" pos:column="54">origin<pos:position pos:line="104" pos:column="60"/></name><operator pos:line="104" pos:column="60">-&gt;<pos:position pos:line="104" pos:column="65"/></operator><name pos:line="104" pos:column="62">suspects<pos:position pos:line="104" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="72">blame_copy_score<pos:position pos:line="104" pos:column="88"/></name></expr></argument>)<pos:position pos:line="104" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="90"/></expr_stmt>
		}<pos:position pos:line="105" pos:column="18"/></block></then></if></elseif></if>
		<if pos:line="106" pos:column="17">if <condition pos:line="106" pos:column="20">(<expr><operator pos:line="106" pos:column="21">!<pos:position pos:line="106" pos:column="22"/></operator><name><name pos:line="106" pos:column="22">origin<pos:position pos:line="106" pos:column="28"/></name><operator pos:line="106" pos:column="28">-&gt;<pos:position pos:line="106" pos:column="33"/></operator><name pos:line="106" pos:column="30">suspects<pos:position pos:line="106" pos:column="38"/></name></name></expr>)<pos:position pos:line="106" pos:column="39"/></condition><then pos:line="106" pos:column="39">
			<block type="pseudo"><goto pos:line="107" pos:column="25">goto <name pos:line="107" pos:column="30">finish<pos:position pos:line="107" pos:column="36"/></name>;<pos:position pos:line="107" pos:column="37"/></goto></block></then></if>

		<for pos:line="109" pos:column="17">for <control pos:line="109" pos:column="21">(<init><expr><name pos:line="109" pos:column="22">i<pos:position pos:line="109" pos:column="23"/></name> <operator pos:line="109" pos:column="24">=<pos:position pos:line="109" pos:column="25"/></operator> <literal type="number" pos:line="109" pos:column="26">0<pos:position pos:line="109" pos:column="27"/></literal></expr><operator pos:line="109" pos:column="27">,<pos:position pos:line="109" pos:column="28"/></operator> <expr><name pos:line="109" pos:column="29">sg<pos:position pos:line="109" pos:column="31"/></name> <operator pos:line="109" pos:column="32">=<pos:position pos:line="109" pos:column="33"/></operator> <call><name pos:line="109" pos:column="34">first_scapegoat<pos:position pos:line="109" pos:column="49"/></name><argument_list pos:line="109" pos:column="49">(<argument><expr><name pos:line="109" pos:column="50">revs<pos:position pos:line="109" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="56">commit<pos:position pos:line="109" pos:column="62"/></name></expr></argument>)<pos:position pos:line="109" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="64"/></init>
		     <condition><expr><name pos:line="110" pos:column="22">i<pos:position pos:line="110" pos:column="23"/></name> <operator pos:line="110" pos:column="24">&lt;<pos:position pos:line="110" pos:column="28"/></operator> <name pos:line="110" pos:column="26">num_sg<pos:position pos:line="110" pos:column="32"/></name> <operator pos:line="110" pos:column="33">&amp;&amp;<pos:position pos:line="110" pos:column="43"/></operator> <name pos:line="110" pos:column="36">sg<pos:position pos:line="110" pos:column="38"/></name></expr>;<pos:position pos:line="110" pos:column="39"/></condition>
		     <incr><expr><name pos:line="111" pos:column="22">sg<pos:position pos:line="111" pos:column="24"/></name> <operator pos:line="111" pos:column="25">=<pos:position pos:line="111" pos:column="26"/></operator> <name><name pos:line="111" pos:column="27">sg<pos:position pos:line="111" pos:column="29"/></name><operator pos:line="111" pos:column="29">-&gt;<pos:position pos:line="111" pos:column="34"/></operator><name pos:line="111" pos:column="31">next<pos:position pos:line="111" pos:column="35"/></name></name></expr><operator pos:line="111" pos:column="35">,<pos:position pos:line="111" pos:column="36"/></operator> <expr><name pos:line="111" pos:column="37">i<pos:position pos:line="111" pos:column="38"/></name><operator pos:line="111" pos:column="38">++<pos:position pos:line="111" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="111" pos:column="41"/></control> <block pos:line="111" pos:column="42">{
			<decl_stmt><decl><type><name><name pos:line="112" pos:column="25">struct<pos:position pos:line="112" pos:column="31"/></name> <name pos:line="112" pos:column="32">origin<pos:position pos:line="112" pos:column="38"/></name></name> <modifier pos:line="112" pos:column="39">*<pos:position pos:line="112" pos:column="40"/></modifier></type><name pos:line="112" pos:column="40">porigin<pos:position pos:line="112" pos:column="47"/></name> <init pos:line="112" pos:column="48">= <expr><name><name pos:line="112" pos:column="50">sg_origin<pos:position pos:line="112" pos:column="59"/></name><index pos:line="112" pos:column="59">[<expr><name pos:line="112" pos:column="60">i<pos:position pos:line="112" pos:column="61"/></name></expr>]<pos:position pos:line="112" pos:column="62"/></index></name></expr></init></decl>;<pos:position pos:line="112" pos:column="63"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="113" pos:column="25">find_copy_in_parent<pos:position pos:line="113" pos:column="44"/></name><argument_list pos:line="113" pos:column="44">(<argument><expr><name pos:line="113" pos:column="45">sb<pos:position pos:line="113" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="113" pos:column="49">&amp;<pos:position pos:line="113" pos:column="54"/></operator><name pos:line="113" pos:column="50">blametail<pos:position pos:line="113" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="113" pos:column="61">&amp;<pos:position pos:line="113" pos:column="66"/></operator><name pos:line="113" pos:column="62">toosmall<pos:position pos:line="113" pos:column="70"/></name></expr></argument>,
					    <argument><expr><name pos:line="114" pos:column="45">origin<pos:position pos:line="114" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="53">sg<pos:position pos:line="114" pos:column="55"/></name><operator pos:line="114" pos:column="55">-&gt;<pos:position pos:line="114" pos:column="60"/></operator><name pos:line="114" pos:column="57">item<pos:position pos:line="114" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="63">porigin<pos:position pos:line="114" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="72">opt<pos:position pos:line="114" pos:column="75"/></name></expr></argument>)<pos:position pos:line="114" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="77"/></expr_stmt>
			<if pos:line="115" pos:column="25">if <condition pos:line="115" pos:column="28">(<expr><operator pos:line="115" pos:column="29">!<pos:position pos:line="115" pos:column="30"/></operator><name><name pos:line="115" pos:column="30">origin<pos:position pos:line="115" pos:column="36"/></name><operator pos:line="115" pos:column="36">-&gt;<pos:position pos:line="115" pos:column="41"/></operator><name pos:line="115" pos:column="38">suspects<pos:position pos:line="115" pos:column="46"/></name></name></expr>)<pos:position pos:line="115" pos:column="47"/></condition><then pos:line="115" pos:column="47">
				<block type="pseudo"><goto pos:line="116" pos:column="33">goto <name pos:line="116" pos:column="38">finish<pos:position pos:line="116" pos:column="44"/></name>;<pos:position pos:line="116" pos:column="45"/></goto></block></then></if>
		}<pos:position pos:line="117" pos:column="18"/></block></for>
	}<pos:position pos:line="118" pos:column="10"/></block></then></if>

<label><name pos:line="120" pos:column="1">finish<pos:position pos:line="120" pos:column="7"/></name>:<pos:position pos:line="120" pos:column="8"/></label>
	<expr_stmt><expr><operator pos:line="121" pos:column="9">*<pos:position pos:line="121" pos:column="10"/></operator><name pos:line="121" pos:column="10">blametail<pos:position pos:line="121" pos:column="19"/></name> <operator pos:line="121" pos:column="20">=<pos:position pos:line="121" pos:column="21"/></operator> <name pos:line="121" pos:column="22">NULL<pos:position pos:line="121" pos:column="26"/></name></expr>;<pos:position pos:line="121" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="122" pos:column="9">distribute_blame<pos:position pos:line="122" pos:column="25"/></name><argument_list pos:line="122" pos:column="25">(<argument><expr><name pos:line="122" pos:column="26">sb<pos:position pos:line="122" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="30">blames<pos:position pos:line="122" pos:column="36"/></name></expr></argument>)<pos:position pos:line="122" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="38"/></expr_stmt>
	<comment type="block" pos:line="123" pos:column="9">/*
	 * prepend toosmall to origin-&gt;suspects
	 *
	 * There is no point in sorting: this ends up on a big
	 * unsorted list in the caller anyway.
	 */</comment>
	<if pos:line="129" pos:column="9">if <condition pos:line="129" pos:column="12">(<expr><name pos:line="129" pos:column="13">toosmall<pos:position pos:line="129" pos:column="21"/></name></expr>)<pos:position pos:line="129" pos:column="22"/></condition><then pos:line="129" pos:column="22"> <block pos:line="129" pos:column="23">{
		<decl_stmt><decl><type><name><name pos:line="130" pos:column="17">struct<pos:position pos:line="130" pos:column="23"/></name> <name pos:line="130" pos:column="24">blame_entry<pos:position pos:line="130" pos:column="35"/></name></name> <modifier pos:line="130" pos:column="36">*<pos:position pos:line="130" pos:column="37"/></modifier><modifier pos:line="130" pos:column="37">*<pos:position pos:line="130" pos:column="38"/></modifier></type><name pos:line="130" pos:column="38">tail<pos:position pos:line="130" pos:column="42"/></name> <init pos:line="130" pos:column="43">= <expr><operator pos:line="130" pos:column="45">&amp;<pos:position pos:line="130" pos:column="50"/></operator><name pos:line="130" pos:column="46">toosmall<pos:position pos:line="130" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="130" pos:column="55"/></decl_stmt>
		<while pos:line="131" pos:column="17">while <condition pos:line="131" pos:column="23">(<expr><operator pos:line="131" pos:column="24">*<pos:position pos:line="131" pos:column="25"/></operator><name pos:line="131" pos:column="25">tail<pos:position pos:line="131" pos:column="29"/></name></expr>)<pos:position pos:line="131" pos:column="30"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="132" pos:column="25">tail<pos:position pos:line="132" pos:column="29"/></name> <operator pos:line="132" pos:column="30">=<pos:position pos:line="132" pos:column="31"/></operator> <operator pos:line="132" pos:column="32">&amp;<pos:position pos:line="132" pos:column="37"/></operator><name><operator pos:line="132" pos:column="33">(<pos:position pos:line="132" pos:column="34"/></operator><operator pos:line="132" pos:column="34">*<pos:position pos:line="132" pos:column="35"/></operator><name pos:line="132" pos:column="35">tail<pos:position pos:line="132" pos:column="39"/></name><operator pos:line="132" pos:column="39">)<pos:position pos:line="132" pos:column="40"/></operator><operator pos:line="132" pos:column="40">-&gt;<pos:position pos:line="132" pos:column="45"/></operator><name pos:line="132" pos:column="42">next<pos:position pos:line="132" pos:column="46"/></name></name></expr>;<pos:position pos:line="132" pos:column="47"/></expr_stmt></block></while>
		<expr_stmt><expr><operator pos:line="133" pos:column="17">*<pos:position pos:line="133" pos:column="18"/></operator><name pos:line="133" pos:column="18">tail<pos:position pos:line="133" pos:column="22"/></name> <operator pos:line="133" pos:column="23">=<pos:position pos:line="133" pos:column="24"/></operator> <name><name pos:line="133" pos:column="25">origin<pos:position pos:line="133" pos:column="31"/></name><operator pos:line="133" pos:column="31">-&gt;<pos:position pos:line="133" pos:column="36"/></operator><name pos:line="133" pos:column="33">suspects<pos:position pos:line="133" pos:column="41"/></name></name></expr>;<pos:position pos:line="133" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="134" pos:column="17">origin<pos:position pos:line="134" pos:column="23"/></name><operator pos:line="134" pos:column="23">-&gt;<pos:position pos:line="134" pos:column="28"/></operator><name pos:line="134" pos:column="25">suspects<pos:position pos:line="134" pos:column="33"/></name></name> <operator pos:line="134" pos:column="34">=<pos:position pos:line="134" pos:column="35"/></operator> <name pos:line="134" pos:column="36">toosmall<pos:position pos:line="134" pos:column="44"/></name></expr>;<pos:position pos:line="134" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="135" pos:column="10"/></block></then></if>
	<for pos:line="136" pos:column="9">for <control pos:line="136" pos:column="13">(<init><expr><name pos:line="136" pos:column="14">i<pos:position pos:line="136" pos:column="15"/></name> <operator pos:line="136" pos:column="16">=<pos:position pos:line="136" pos:column="17"/></operator> <literal type="number" pos:line="136" pos:column="18">0<pos:position pos:line="136" pos:column="19"/></literal></expr>;<pos:position pos:line="136" pos:column="20"/></init> <condition><expr><name pos:line="136" pos:column="21">i<pos:position pos:line="136" pos:column="22"/></name> <operator pos:line="136" pos:column="23">&lt;<pos:position pos:line="136" pos:column="27"/></operator> <name pos:line="136" pos:column="25">num_sg<pos:position pos:line="136" pos:column="31"/></name></expr>;<pos:position pos:line="136" pos:column="32"/></condition> <incr><expr><name pos:line="136" pos:column="33">i<pos:position pos:line="136" pos:column="34"/></name><operator pos:line="136" pos:column="34">++<pos:position pos:line="136" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="136" pos:column="37"/></control> <block pos:line="136" pos:column="38">{
		<if pos:line="137" pos:column="17">if <condition pos:line="137" pos:column="20">(<expr><name><name pos:line="137" pos:column="21">sg_origin<pos:position pos:line="137" pos:column="30"/></name><index pos:line="137" pos:column="30">[<expr><name pos:line="137" pos:column="31">i<pos:position pos:line="137" pos:column="32"/></name></expr>]<pos:position pos:line="137" pos:column="33"/></index></name></expr>)<pos:position pos:line="137" pos:column="34"/></condition><then pos:line="137" pos:column="34"> <block pos:line="137" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="138" pos:column="25">drop_origin_blob<pos:position pos:line="138" pos:column="41"/></name><argument_list pos:line="138" pos:column="41">(<argument><expr><name><name pos:line="138" pos:column="42">sg_origin<pos:position pos:line="138" pos:column="51"/></name><index pos:line="138" pos:column="51">[<expr><name pos:line="138" pos:column="52">i<pos:position pos:line="138" pos:column="53"/></name></expr>]<pos:position pos:line="138" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="138" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="139" pos:column="25">origin_decref<pos:position pos:line="139" pos:column="38"/></name><argument_list pos:line="139" pos:column="38">(<argument><expr><name><name pos:line="139" pos:column="39">sg_origin<pos:position pos:line="139" pos:column="48"/></name><index pos:line="139" pos:column="48">[<expr><name pos:line="139" pos:column="49">i<pos:position pos:line="139" pos:column="50"/></name></expr>]<pos:position pos:line="139" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="139" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="140" pos:column="18"/></block></then></if>
	}<pos:position pos:line="141" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="142" pos:column="9">drop_origin_blob<pos:position pos:line="142" pos:column="25"/></name><argument_list pos:line="142" pos:column="25">(<argument><expr><name pos:line="142" pos:column="26">origin<pos:position pos:line="142" pos:column="32"/></name></expr></argument>)<pos:position pos:line="142" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="34"/></expr_stmt>
	<if pos:line="143" pos:column="9">if <condition pos:line="143" pos:column="12">(<expr><name pos:line="143" pos:column="13">sg_buf<pos:position pos:line="143" pos:column="19"/></name> <operator pos:line="143" pos:column="20">!=<pos:position pos:line="143" pos:column="22"/></operator> <name pos:line="143" pos:column="23">sg_origin<pos:position pos:line="143" pos:column="32"/></name></expr>)<pos:position pos:line="143" pos:column="33"/></condition><then pos:line="143" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="144" pos:column="17">free<pos:position pos:line="144" pos:column="21"/></name><argument_list pos:line="144" pos:column="21">(<argument><expr><name pos:line="144" pos:column="22">sg_origin<pos:position pos:line="144" pos:column="31"/></name></expr></argument>)<pos:position pos:line="144" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="33"/></expr_stmt></block></then></if>
}<pos:position pos:line="145" pos:column="2"/></block></function></unit>

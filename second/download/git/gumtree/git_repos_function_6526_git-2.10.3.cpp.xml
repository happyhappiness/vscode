<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6526_git-2.10.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">reg_errcode_t<pos:position pos:line="1" pos:column="21"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">re_string_realloc_buffers<pos:position pos:line="3" pos:column="26"/></name> <parameter_list pos:line="3" pos:column="27">(<parameter><decl><type><name pos:line="3" pos:column="28">re_string_t<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">pstr<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="47">int<pos:position pos:line="3" pos:column="50"/></name></type> <name pos:line="3" pos:column="51">new_buf_len<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>
<block pos:line="4" pos:column="1">{
<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">RE_ENABLE_I18N<pos:position pos:line="5" pos:column="22"/></name></cpp:ifdef>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">pstr<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">mb_cur_max<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">&gt;<pos:position pos:line="6" pos:column="28"/></operator> <literal type="number" pos:line="6" pos:column="26">1<pos:position pos:line="6" pos:column="27"/></literal></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28">
    <block pos:line="7" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="8" pos:column="7">wint_t<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">new_wcs<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

      <comment type="block" pos:line="10" pos:column="7">/* Avoid overflow in realloc.  */</comment>
      <decl_stmt><decl><type><specifier pos:line="11" pos:column="7">const<pos:position pos:line="11" pos:column="12"/></specifier> <name pos:line="11" pos:column="13">size_t<pos:position pos:line="11" pos:column="19"/></name></type> <name pos:line="11" pos:column="20">max_object_size<pos:position pos:line="11" pos:column="35"/></name> <init pos:line="11" pos:column="36">= <expr><call><name pos:line="11" pos:column="38">MAX<pos:position pos:line="11" pos:column="41"/></name> <argument_list pos:line="11" pos:column="42">(<argument><expr><sizeof pos:line="11" pos:column="43">sizeof <argument_list pos:line="11" pos:column="50">(<argument><expr><name pos:line="11" pos:column="51">wint_t<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="60">sizeof <argument_list pos:line="11" pos:column="67">(<argument><expr><name pos:line="11" pos:column="68">int<pos:position pos:line="11" pos:column="71"/></name></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="74"/></decl_stmt>
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><call><name pos:line="12" pos:column="11">BE<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">SIZE_MAX<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">/<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">max_object_size<pos:position pos:line="12" pos:column="41"/></name> <operator pos:line="12" pos:column="42">&lt;<pos:position pos:line="12" pos:column="46"/></operator> <name pos:line="12" pos:column="44">new_buf_len<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="57">0<pos:position pos:line="12" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="60"/></condition><then pos:line="12" pos:column="60">
	<block type="pseudo"><return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">REG_ESPACE<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if>

      <expr_stmt><expr><name pos:line="15" pos:column="7">new_wcs<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">re_realloc<pos:position pos:line="15" pos:column="27"/></name> <argument_list pos:line="15" pos:column="28">(<argument><expr><name><name pos:line="15" pos:column="29">pstr<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">wcs<pos:position pos:line="15" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="40">wint_t<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="48">new_buf_len<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt>
      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><call><name pos:line="16" pos:column="11">BE<pos:position pos:line="16" pos:column="13"/></name> <argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">new_wcs<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">==<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">NULL<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="32">0<pos:position pos:line="16" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35">
	<block type="pseudo"><return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">REG_ESPACE<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="18" pos:column="7">pstr<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">wcs<pos:position pos:line="18" pos:column="16"/></name></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">new_wcs<pos:position pos:line="18" pos:column="26"/></name></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><name><name pos:line="19" pos:column="11">pstr<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">offsets<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">!=<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">NULL<pos:position pos:line="19" pos:column="32"/></name></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33">
	<block pos:line="20" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="21" pos:column="11">int<pos:position pos:line="21" pos:column="14"/></name> <modifier pos:line="21" pos:column="15">*<pos:position pos:line="21" pos:column="16"/></modifier></type><name pos:line="21" pos:column="16">new_offsets<pos:position pos:line="21" pos:column="27"/></name> <init pos:line="21" pos:column="28">= <expr><call><name pos:line="21" pos:column="30">re_realloc<pos:position pos:line="21" pos:column="40"/></name> <argument_list pos:line="21" pos:column="41">(<argument><expr><name><name pos:line="21" pos:column="42">pstr<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">-&gt;<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="48">offsets<pos:position pos:line="21" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="57">int<pos:position pos:line="21" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="62">new_buf_len<pos:position pos:line="21" pos:column="73"/></name></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="75"/></decl_stmt>
	  <if pos:line="22" pos:column="11">if <condition pos:line="22" pos:column="14">(<expr><call><name pos:line="22" pos:column="15">BE<pos:position pos:line="22" pos:column="17"/></name> <argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">new_offsets<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">==<pos:position pos:line="22" pos:column="33"/></operator> <name pos:line="22" pos:column="34">NULL<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="40">0<pos:position pos:line="22" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43">
	    <block type="pseudo"><return pos:line="23" pos:column="13">return <expr><name pos:line="23" pos:column="20">REG_ESPACE<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></return></block></then></if>
	  <expr_stmt><expr><name><name pos:line="24" pos:column="11">pstr<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">offsets<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">new_offsets<pos:position pos:line="24" pos:column="38"/></name></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="27" pos:column="8">/* RE_ENABLE_I18N  */</comment>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name><name pos:line="28" pos:column="7">pstr<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">mbs_allocated<pos:position pos:line="28" pos:column="26"/></name></name></expr>)<pos:position pos:line="28" pos:column="27"/></condition><then pos:line="28" pos:column="27">
    <block pos:line="29" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="30" pos:column="7">unsigned<pos:position pos:line="30" pos:column="15"/></name> <name pos:line="30" pos:column="16">char<pos:position pos:line="30" pos:column="20"/></name> <modifier pos:line="30" pos:column="21">*<pos:position pos:line="30" pos:column="22"/></modifier></type><name pos:line="30" pos:column="22">new_mbs<pos:position pos:line="30" pos:column="29"/></name> <init pos:line="30" pos:column="30">= <macro><name pos:line="30" pos:column="32">re_realloc<pos:position pos:line="30" pos:column="42"/></name> <argument_list pos:line="30" pos:column="43">(<argument pos:line="30" pos:column="44">pstr-&gt;mbs<pos:position pos:line="30" pos:column="53"/></argument>, <argument pos:line="30" pos:column="55">unsigned char<pos:position pos:line="30" pos:column="68"/></argument>,
					   <argument pos:line="31" pos:column="44">new_buf_len<pos:position pos:line="31" pos:column="55"/></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></macro></init></decl>;<pos:position pos:line="31" pos:column="57"/></decl_stmt>
      <if pos:line="32" pos:column="7">if <condition pos:line="32" pos:column="10">(<expr><call><name pos:line="32" pos:column="11">BE<pos:position pos:line="32" pos:column="13"/></name> <argument_list pos:line="32" pos:column="14">(<argument><expr><name pos:line="32" pos:column="15">new_mbs<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">==<pos:position pos:line="32" pos:column="25"/></operator> <name pos:line="32" pos:column="26">NULL<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="32">0<pos:position pos:line="32" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="35"/></condition><then pos:line="32" pos:column="35">
	<block type="pseudo"><return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">REG_ESPACE<pos:position pos:line="33" pos:column="26"/></name></expr>;<pos:position pos:line="33" pos:column="27"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="34" pos:column="7">pstr<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">mbs<pos:position pos:line="34" pos:column="16"/></name></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <name pos:line="34" pos:column="19">new_mbs<pos:position pos:line="34" pos:column="26"/></name></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="36" pos:column="3">pstr<pos:position pos:line="36" pos:column="7"/></name><operator pos:line="36" pos:column="7">-&gt;<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="9">bufs_len<pos:position pos:line="36" pos:column="17"/></name></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <name pos:line="36" pos:column="20">new_buf_len<pos:position pos:line="36" pos:column="31"/></name></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
  <return pos:line="37" pos:column="3">return <expr><name pos:line="37" pos:column="10">REG_NOERROR<pos:position pos:line="37" pos:column="21"/></name></expr>;<pos:position pos:line="37" pos:column="22"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3141_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">line_log_data<pos:position pos:line="1" pos:column="28"/></name></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type>
<name pos:line="2" pos:column="1">search_line_log_data<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">struct<pos:position pos:line="2" pos:column="28"/></name> <name pos:line="2" pos:column="29">line_log_data<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">list<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <name pos:line="2" pos:column="56">char<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">path<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
		     <parameter><decl><type><name><name pos:line="3" pos:column="22">struct<pos:position pos:line="3" pos:column="28"/></name> <name pos:line="3" pos:column="29">line_log_data<pos:position pos:line="3" pos:column="42"/></name></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier><modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">insertion_point<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="61"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">line_log_data<pos:position pos:line="5" pos:column="29"/></name></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">p<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name pos:line="5" pos:column="35">list<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">insertion_point<pos:position pos:line="6" pos:column="28"/></name></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">insertion_point<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">=<pos:position pos:line="7" pos:column="35"/></operator> <name pos:line="7" pos:column="36">NULL<pos:position pos:line="7" pos:column="40"/></name></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt></block></then></if>
	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name pos:line="8" pos:column="16">p<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition> <block pos:line="8" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">cmp<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><call><name pos:line="9" pos:column="27">strcmp<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name><name pos:line="9" pos:column="34">p<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">path<pos:position pos:line="9" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="43">path<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">cmp<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><name pos:line="11" pos:column="32">p<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></return></block></then></if>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">insertion_point<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">&amp;&amp;<pos:position pos:line="12" pos:column="47"/></operator> <name pos:line="12" pos:column="40">cmp<pos:position pos:line="12" pos:column="43"/></name> <operator pos:line="12" pos:column="44">&lt;<pos:position pos:line="12" pos:column="48"/></operator> <literal type="number" pos:line="12" pos:column="46">0<pos:position pos:line="12" pos:column="47"/></literal></expr>)<pos:position pos:line="12" pos:column="48"/></condition><then pos:line="12" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">insertion_point<pos:position pos:line="13" pos:column="41"/></name> <operator pos:line="13" pos:column="42">=<pos:position pos:line="13" pos:column="43"/></operator> <name pos:line="13" pos:column="44">p<pos:position pos:line="13" pos:column="45"/></name></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="14" pos:column="17">p<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name><name pos:line="14" pos:column="21">p<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">next<pos:position pos:line="14" pos:column="28"/></name></name></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></while>
	<return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

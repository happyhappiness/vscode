<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6057_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_new_style_cacheinfo<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">arg<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
				     <parameter><decl><type><name pos:line="2" pos:column="38">unsigned<pos:position pos:line="2" pos:column="46"/></name> <name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">mode<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
				     <parameter><decl><type><name><name pos:line="3" pos:column="38">struct<pos:position pos:line="3" pos:column="44"/></name> <name pos:line="3" pos:column="45">object_id<pos:position pos:line="3" pos:column="54"/></name></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">oid<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>,
				     <parameter><decl><type><specifier pos:line="4" pos:column="38">const<pos:position pos:line="4" pos:column="43"/></specifier> <name pos:line="4" pos:column="44">char<pos:position pos:line="4" pos:column="48"/></name> <modifier pos:line="4" pos:column="49">*<pos:position pos:line="4" pos:column="50"/></modifier><modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier></type><name pos:line="4" pos:column="51">path<pos:position pos:line="4" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="56"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">ul<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">endp<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">arg<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">errno<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">ul<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">strtoul<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">arg<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="27">&amp;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="28">endp<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="34">8<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">errno<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">||<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">endp<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">==<pos:position pos:line="14" pos:column="29"/></operator> <name pos:line="14" pos:column="30">arg<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">||<pos:position pos:line="14" pos:column="36"/></operator> <operator pos:line="14" pos:column="37">*<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">endp<pos:position pos:line="14" pos:column="42"/></name> <operator pos:line="14" pos:column="43">!=<pos:position pos:line="14" pos:column="45"/></operator> <literal type="char" pos:line="14" pos:column="46">','<pos:position pos:line="14" pos:column="49"/></literal> <operator pos:line="14" pos:column="50">||<pos:position pos:line="14" pos:column="52"/></operator> <operator pos:line="14" pos:column="53">(<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="54">unsigned<pos:position pos:line="14" pos:column="62"/></name> <name pos:line="14" pos:column="63">int<pos:position pos:line="14" pos:column="66"/></name><operator pos:line="14" pos:column="66">)<pos:position pos:line="14" pos:column="67"/></operator> <name pos:line="14" pos:column="68">ul<pos:position pos:line="14" pos:column="70"/></name> <operator pos:line="14" pos:column="71">!=<pos:position pos:line="14" pos:column="73"/></operator> <name pos:line="14" pos:column="74">ul<pos:position pos:line="14" pos:column="76"/></name></expr>)<pos:position pos:line="14" pos:column="77"/></condition><then pos:line="14" pos:column="77">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">-<pos:position pos:line="15" pos:column="25"/></operator><literal type="number" pos:line="15" pos:column="25">1<pos:position pos:line="15" pos:column="26"/></literal></expr>;<pos:position pos:line="15" pos:column="27"/></return></block></then></if> <comment type="block" pos:line="15" pos:column="28">/* not a new-style cacheinfo */</comment>
	<expr_stmt><expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">mode<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">ul<pos:position pos:line="16" pos:column="19"/></name></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">endp<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">++<pos:position pos:line="17" pos:column="15"/></operator></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">get_oid_hex<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">endp<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="31">oid<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call> <operator pos:line="18" pos:column="36">||<pos:position pos:line="18" pos:column="38"/></operator> <name><name pos:line="18" pos:column="39">endp<pos:position pos:line="18" pos:column="43"/></name><index pos:line="18" pos:column="43">[<expr><name pos:line="18" pos:column="44">GIT_SHA1_HEXSZ<pos:position pos:line="18" pos:column="58"/></name></expr>]<pos:position pos:line="18" pos:column="59"/></index></name> <operator pos:line="18" pos:column="60">!=<pos:position pos:line="18" pos:column="62"/></operator> <literal type="char" pos:line="18" pos:column="63">','<pos:position pos:line="18" pos:column="66"/></literal></expr>)<pos:position pos:line="18" pos:column="67"/></condition><then pos:line="18" pos:column="67">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">-<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">path<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">endp<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">+<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="24">GIT_SHA1_HEXSZ<pos:position pos:line="20" pos:column="38"/></name> <operator pos:line="20" pos:column="39">+<pos:position pos:line="20" pos:column="40"/></operator> <literal type="number" pos:line="20" pos:column="41">1<pos:position pos:line="20" pos:column="42"/></literal></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
	<return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_811.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_alternate_allowed<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">url<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name><name pos:line="3" pos:column="21">protocols<pos:position pos:line="3" pos:column="30"/></name><index pos:line="3" pos:column="30">[]<pos:position pos:line="3" pos:column="32"/></index></name> <init pos:line="3" pos:column="33">= <expr><block pos:line="3" pos:column="35">{
		<expr><literal type="string" pos:line="4" pos:column="17">"http"<pos:position pos:line="4" pos:column="23"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="25">"https"<pos:position pos:line="4" pos:column="32"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="34">"ftp"<pos:position pos:line="4" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="41">"ftps"<pos:position pos:line="4" pos:column="47"/></literal></expr>
	}<pos:position pos:line="5" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr>;<pos:position pos:line="8" pos:column="20"/></init> <condition><expr><name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;<pos:position pos:line="8" pos:column="27"/></operator> <call><name pos:line="8" pos:column="25">ARRAY_SIZE<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">protocols<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></condition> <incr><expr><name pos:line="8" pos:column="48">i<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">++<pos:position pos:line="8" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="52"/></control> <block pos:line="8" pos:column="53">{
		<decl_stmt><decl><type><specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">end<pos:position pos:line="9" pos:column="32"/></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><call><name pos:line="10" pos:column="21">skip_prefix<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">url<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="38">protocols<pos:position pos:line="10" pos:column="47"/></name><index pos:line="10" pos:column="47">[<expr><name pos:line="10" pos:column="48">i<pos:position pos:line="10" pos:column="49"/></name></expr>]<pos:position pos:line="10" pos:column="50"/></index></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="52">&amp;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="53">end<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call> <operator pos:line="10" pos:column="58">&amp;&amp;<pos:position pos:line="10" pos:column="68"/></operator>
		    <call><name pos:line="11" pos:column="21">starts_with<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">end<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="38">"://"<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="45"/></condition><then pos:line="11" pos:column="45">
			<block type="pseudo"><break pos:line="12" pos:column="25">break;<pos:position pos:line="12" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block></for>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">i<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">&gt;=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="18">ARRAY_SIZE<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">protocols<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40"> <block pos:line="15" pos:column="41">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">warning<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><literal type="string" pos:line="16" pos:column="25">"ignoring alternate with unknown protocol: %s"<pos:position pos:line="16" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="73">url<pos:position pos:line="16" pos:column="76"/></name></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="78"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">is_transport_allowed<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><name><name pos:line="19" pos:column="35">protocols<pos:position pos:line="19" pos:column="44"/></name><index pos:line="19" pos:column="44">[<expr><name pos:line="19" pos:column="45">i<pos:position pos:line="19" pos:column="46"/></name></expr>]<pos:position pos:line="19" pos:column="47"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="49">0<pos:position pos:line="19" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="52"/></condition><then pos:line="19" pos:column="52"> <block pos:line="19" pos:column="53">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">warning<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><literal type="string" pos:line="20" pos:column="25">"ignoring alternate with restricted protocol: %s"<pos:position pos:line="20" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="76">url<pos:position pos:line="20" pos:column="79"/></name></expr></argument>)<pos:position pos:line="20" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="81"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<return pos:line="24" pos:column="9">return <expr><literal type="number" pos:line="24" pos:column="16">1<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

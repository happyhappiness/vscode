<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3643_git-2.5.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">hashmap_init<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name><name pos:line="1" pos:column="19">struct<pos:position pos:line="1" pos:column="25"/></name> <name pos:line="1" pos:column="26">hashmap<pos:position pos:line="1" pos:column="33"/></name></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">map<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">hashmap_cmp_fn<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">equals_function<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">size_t<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">initial_size<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">size<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">HASHMAP_INITIAL_SIZE<pos:position pos:line="4" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
	<expr_stmt><expr><name><name pos:line="5" pos:column="9">map<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">size<pos:position pos:line="5" pos:column="18"/></name></name> <operator pos:line="5" pos:column="19">=<pos:position pos:line="5" pos:column="20"/></operator> <literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="6" pos:column="9">map<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">cmpfn<pos:position pos:line="6" pos:column="19"/></name></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <ternary><condition><expr><name pos:line="6" pos:column="22">equals_function<pos:position pos:line="6" pos:column="37"/></name></expr> ?<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39"> <expr><name pos:line="6" pos:column="40">equals_function<pos:position pos:line="6" pos:column="55"/></name></expr> <pos:position pos:line="6" pos:column="56"/></then><else pos:line="6" pos:column="56">: <expr><name pos:line="6" pos:column="58">always_equal<pos:position pos:line="6" pos:column="70"/></name></expr></else></ternary></expr>;<pos:position pos:line="6" pos:column="71"/></expr_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* calculate initial table size and allocate the table */</comment>
	<expr_stmt><expr><name pos:line="9" pos:column="9">initial_size<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator> <call pos:line="9" pos:column="24">(<name pos:line="9" pos:column="25">unsigned<pos:position pos:line="9" pos:column="33"/></name> <name pos:line="9" pos:column="34">int<pos:position pos:line="9" pos:column="37"/></name>) <argument_list pos:line="9" pos:column="39">(<argument><expr><operator pos:line="9" pos:column="40">(<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="41">uint64_t<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">)<pos:position pos:line="9" pos:column="50"/></operator> <name pos:line="9" pos:column="51">initial_size<pos:position pos:line="9" pos:column="63"/></name> <operator pos:line="9" pos:column="64">*<pos:position pos:line="9" pos:column="65"/></operator> <literal type="number" pos:line="9" pos:column="66">100<pos:position pos:line="9" pos:column="69"/></literal>
			<operator pos:line="10" pos:column="25">/<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="27">HASHMAP_LOAD_FACTOR<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
	<while pos:line="11" pos:column="9">while <condition pos:line="11" pos:column="15">(<expr><name pos:line="11" pos:column="16">initial_size<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">&gt;<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="31">size<pos:position pos:line="11" pos:column="35"/></name></expr>)<pos:position pos:line="11" pos:column="36"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">size<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">&lt;&lt;=<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="26">HASHMAP_RESIZE_BITS<pos:position pos:line="12" pos:column="45"/></name></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt></block></while>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">alloc_table<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">map<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="26">size<pos:position pos:line="13" pos:column="30"/></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

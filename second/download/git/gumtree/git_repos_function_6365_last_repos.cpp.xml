<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6365_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">prune<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">argc<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">argv<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">prefix<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">notes_tree<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">t<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">show_only<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="28">verbose<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><literal type="number" pos:line="4" pos:column="38">0<pos:position pos:line="4" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">option<pos:position pos:line="5" pos:column="22"/></name></name></type> <name><name pos:line="5" pos:column="23">options<pos:position pos:line="5" pos:column="30"/></name><index pos:line="5" pos:column="30">[]<pos:position pos:line="5" pos:column="32"/></index></name> <init pos:line="5" pos:column="33">= <expr><block pos:line="5" pos:column="35">{
		<expr><call><name pos:line="6" pos:column="17">OPT__DRY_RUN<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><operator pos:line="6" pos:column="30">&amp;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="31">show_only<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="42">N_<pos:position pos:line="6" pos:column="44"/></name><argument_list pos:line="6" pos:column="44">(<argument><expr><literal type="string" pos:line="6" pos:column="45">"do not remove, show only"<pos:position pos:line="6" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr>,
		<expr><call><name pos:line="7" pos:column="17">OPT__VERBOSE<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><operator pos:line="7" pos:column="30">&amp;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="31">verbose<pos:position pos:line="7" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="40">N_<pos:position pos:line="7" pos:column="42"/></name><argument_list pos:line="7" pos:column="42">(<argument><expr><literal type="string" pos:line="7" pos:column="43">"report pruned notes"<pos:position pos:line="7" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr>,
		<macro><name pos:line="8" pos:column="17">OPT_END<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">()<pos:position pos:line="8" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="9" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">argc<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">parse_options<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">argc<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="36">argv<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">prefix<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">options<pos:position pos:line="11" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="59">git_notes_prune_usage<pos:position pos:line="11" pos:column="80"/></name></expr></argument>,
			     <argument><expr><literal type="number" pos:line="12" pos:column="30">0<pos:position pos:line="12" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">argc<pos:position pos:line="14" pos:column="17"/></name></expr>)<pos:position pos:line="14" pos:column="18"/></condition><then pos:line="14" pos:column="18"> <block pos:line="14" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">error<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><call><name pos:line="15" pos:column="23">_<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><literal type="string" pos:line="15" pos:column="25">"too many parameters"<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">usage_with_options<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">git_notes_prune_usage<pos:position pos:line="16" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="59">options<pos:position pos:line="16" pos:column="66"/></name></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="19" pos:column="9">t<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name pos:line="19" pos:column="13">init_notes_check<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><literal type="string" pos:line="19" pos:column="30">"prune"<pos:position pos:line="19" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">NOTES_INIT_WRITABLE<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="60"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="21" pos:column="9">prune_notes<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">t<pos:position pos:line="21" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><ternary><condition><expr><name pos:line="21" pos:column="25">verbose<pos:position pos:line="21" pos:column="32"/></name></expr> ?<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34"> <expr><name pos:line="21" pos:column="35">NOTES_PRUNE_VERBOSE<pos:position pos:line="21" pos:column="54"/></name></expr> <pos:position pos:line="21" pos:column="55"/></then><else pos:line="21" pos:column="55">: <expr><literal type="number" pos:line="21" pos:column="57">0<pos:position pos:line="21" pos:column="58"/></literal></expr></else></ternary><operator pos:line="21" pos:column="58">)<pos:position pos:line="21" pos:column="59"/></operator> <operator pos:line="21" pos:column="60">|<pos:position pos:line="21" pos:column="61"/></operator>
		<operator pos:line="22" pos:column="17">(<pos:position pos:line="22" pos:column="18"/></operator><ternary><condition><expr><name pos:line="22" pos:column="18">show_only<pos:position pos:line="22" pos:column="27"/></name></expr> ?<pos:position pos:line="22" pos:column="29"/></condition><then pos:line="22" pos:column="29"> <expr><name pos:line="22" pos:column="30">NOTES_PRUNE_VERBOSE<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">|<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="50">NOTES_PRUNE_DRYRUN<pos:position pos:line="22" pos:column="68"/></name></expr> <pos:position pos:line="22" pos:column="69"/></then><else pos:line="22" pos:column="69">: <expr><literal type="number" pos:line="22" pos:column="71">0<pos:position pos:line="22" pos:column="72"/></literal></expr></else></ternary><operator pos:line="22" pos:column="72">)<pos:position pos:line="22" pos:column="73"/></operator></expr></argument> )<pos:position pos:line="22" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="76"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">show_only<pos:position pos:line="23" pos:column="23"/></name></expr>)<pos:position pos:line="23" pos:column="24"/></condition><then pos:line="23" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">commit_notes<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">t<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="33">"Notes removed by 'git notes prune'"<pos:position pos:line="24" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">free_notes<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">t<pos:position pos:line="25" pos:column="21"/></name></expr></argument>)<pos:position pos:line="25" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
	<return pos:line="26" pos:column="9">return <expr><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4439_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">query_refspecs_multiple<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">refspec<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">refs<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">ref_count<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="74">struct<pos:position pos:line="1" pos:column="80"/></name> <name pos:line="1" pos:column="81">refspec<pos:position pos:line="1" pos:column="88"/></name></name> <modifier pos:line="1" pos:column="89">*<pos:position pos:line="1" pos:column="90"/></modifier></type><name pos:line="1" pos:column="90">query<pos:position pos:line="1" pos:column="95"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="97">struct<pos:position pos:line="1" pos:column="103"/></name> <name pos:line="1" pos:column="104">string_list<pos:position pos:line="1" pos:column="115"/></name></name> <modifier pos:line="1" pos:column="116">*<pos:position pos:line="1" pos:column="117"/></modifier></type><name pos:line="1" pos:column="117">results<pos:position pos:line="1" pos:column="124"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="125"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">find_src<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><operator pos:line="4" pos:column="24">!<pos:position pos:line="4" pos:column="25"/></operator><name><name pos:line="4" pos:column="25">query<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">-&gt;<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="32">src<pos:position pos:line="4" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">find_src<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">&amp;&amp;<pos:position pos:line="6" pos:column="32"/></operator> <operator pos:line="6" pos:column="25">!<pos:position pos:line="6" pos:column="26"/></operator><name><name pos:line="6" pos:column="26">query<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">-&gt;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="33">dst<pos:position pos:line="6" pos:column="36"/></name></name></expr>)<pos:position pos:line="6" pos:column="37"/></condition><then pos:line="6" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">error<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><literal type="string" pos:line="7" pos:column="23">"query_refspecs_multiple: need either src or dst"<pos:position pos:line="7" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="74"/></expr_stmt></block></then></if>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><name pos:line="9" pos:column="21">i<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="25">ref_count<pos:position pos:line="9" pos:column="34"/></name></expr>;<pos:position pos:line="9" pos:column="35"/></condition> <incr><expr><name pos:line="9" pos:column="36">i<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">++<pos:position pos:line="9" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="40"/></control> <block pos:line="9" pos:column="41">{
		<decl_stmt><decl><type><name><name pos:line="10" pos:column="17">struct<pos:position pos:line="10" pos:column="23"/></name> <name pos:line="10" pos:column="24">refspec<pos:position pos:line="10" pos:column="31"/></name></name> <modifier pos:line="10" pos:column="32">*<pos:position pos:line="10" pos:column="33"/></modifier></type><name pos:line="10" pos:column="33">refspec<pos:position pos:line="10" pos:column="40"/></name> <init pos:line="10" pos:column="41">= <expr><operator pos:line="10" pos:column="43">&amp;<pos:position pos:line="10" pos:column="48"/></operator><name><name pos:line="10" pos:column="44">refs<pos:position pos:line="10" pos:column="48"/></name><index pos:line="10" pos:column="48">[<expr><name pos:line="10" pos:column="49">i<pos:position pos:line="10" pos:column="50"/></name></expr>]<pos:position pos:line="10" pos:column="51"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="52"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="11" pos:column="17">const<pos:position pos:line="11" pos:column="22"/></specifier> <name pos:line="11" pos:column="23">char<pos:position pos:line="11" pos:column="27"/></name> <modifier pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></modifier></type><name pos:line="11" pos:column="29">key<pos:position pos:line="11" pos:column="32"/></name> <init pos:line="11" pos:column="33">= <expr><ternary><condition><expr><name pos:line="11" pos:column="35">find_src<pos:position pos:line="11" pos:column="43"/></name></expr> ?<pos:position pos:line="11" pos:column="45"/></condition><then pos:line="11" pos:column="45"> <expr><name><name pos:line="11" pos:column="46">refspec<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">-&gt;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="55">dst<pos:position pos:line="11" pos:column="58"/></name></name></expr> <pos:position pos:line="11" pos:column="59"/></then><else pos:line="11" pos:column="59">: <expr><name><name pos:line="11" pos:column="61">refspec<pos:position pos:line="11" pos:column="68"/></name><operator pos:line="11" pos:column="68">-&gt;<pos:position pos:line="11" pos:column="73"/></operator><name pos:line="11" pos:column="70">src<pos:position pos:line="11" pos:column="73"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="11" pos:column="74"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="12" pos:column="17">const<pos:position pos:line="12" pos:column="22"/></specifier> <name pos:line="12" pos:column="23">char<pos:position pos:line="12" pos:column="27"/></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">value<pos:position pos:line="12" pos:column="34"/></name> <init pos:line="12" pos:column="35">= <expr><ternary><condition><expr><name pos:line="12" pos:column="37">find_src<pos:position pos:line="12" pos:column="45"/></name></expr> ?<pos:position pos:line="12" pos:column="47"/></condition><then pos:line="12" pos:column="47"> <expr><name><name pos:line="12" pos:column="48">refspec<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">-&gt;<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="57">src<pos:position pos:line="12" pos:column="60"/></name></name></expr> <pos:position pos:line="12" pos:column="61"/></then><else pos:line="12" pos:column="61">: <expr><name><name pos:line="12" pos:column="63">refspec<pos:position pos:line="12" pos:column="70"/></name><operator pos:line="12" pos:column="70">-&gt;<pos:position pos:line="12" pos:column="75"/></operator><name pos:line="12" pos:column="72">dst<pos:position pos:line="12" pos:column="75"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="12" pos:column="76"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name pos:line="13" pos:column="23">char<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">needle<pos:position pos:line="13" pos:column="35"/></name> <init pos:line="13" pos:column="36">= <expr><ternary><condition><expr><name pos:line="13" pos:column="38">find_src<pos:position pos:line="13" pos:column="46"/></name></expr> ?<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48"> <expr><name><name pos:line="13" pos:column="49">query<pos:position pos:line="13" pos:column="54"/></name><operator pos:line="13" pos:column="54">-&gt;<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="56">dst<pos:position pos:line="13" pos:column="59"/></name></name></expr> <pos:position pos:line="13" pos:column="60"/></then><else pos:line="13" pos:column="60">: <expr><name><name pos:line="13" pos:column="62">query<pos:position pos:line="13" pos:column="67"/></name><operator pos:line="13" pos:column="67">-&gt;<pos:position pos:line="13" pos:column="72"/></operator><name pos:line="13" pos:column="69">src<pos:position pos:line="13" pos:column="72"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="13" pos:column="73"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">char<pos:position pos:line="14" pos:column="21"/></name> <modifier pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></modifier><modifier pos:line="14" pos:column="23">*<pos:position pos:line="14" pos:column="24"/></modifier></type><name pos:line="14" pos:column="24">result<pos:position pos:line="14" pos:column="30"/></name> <init pos:line="14" pos:column="31">= <expr><ternary><condition><expr><name pos:line="14" pos:column="33">find_src<pos:position pos:line="14" pos:column="41"/></name></expr> ?<pos:position pos:line="14" pos:column="43"/></condition><then pos:line="14" pos:column="43"> <expr><operator pos:line="14" pos:column="44">&amp;<pos:position pos:line="14" pos:column="49"/></operator><name><name pos:line="14" pos:column="45">query<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">src<pos:position pos:line="14" pos:column="55"/></name></name></expr> <pos:position pos:line="14" pos:column="56"/></then><else pos:line="14" pos:column="56">: <expr><operator pos:line="14" pos:column="58">&amp;<pos:position pos:line="14" pos:column="63"/></operator><name><name pos:line="14" pos:column="59">query<pos:position pos:line="14" pos:column="64"/></name><operator pos:line="14" pos:column="64">-&gt;<pos:position pos:line="14" pos:column="69"/></operator><name pos:line="14" pos:column="66">dst<pos:position pos:line="14" pos:column="69"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="14" pos:column="70"/></decl_stmt>

		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name><name pos:line="16" pos:column="22">refspec<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">dst<pos:position pos:line="16" pos:column="34"/></name></name></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35">
			<block type="pseudo"><continue pos:line="17" pos:column="25">continue;<pos:position pos:line="17" pos:column="34"/></continue></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">refspec<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">pattern<pos:position pos:line="18" pos:column="37"/></name></name></expr>)<pos:position pos:line="18" pos:column="38"/></condition><then pos:line="18" pos:column="38"> <block pos:line="18" pos:column="39">{
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><call><name pos:line="19" pos:column="29">match_name_with_pattern<pos:position pos:line="19" pos:column="52"/></name><argument_list pos:line="19" pos:column="52">(<argument><expr><name pos:line="19" pos:column="53">key<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="58">needle<pos:position pos:line="19" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="66">value<pos:position pos:line="19" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="73">result<pos:position pos:line="19" pos:column="79"/></name></expr></argument>)<pos:position pos:line="19" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="81"/></condition><then pos:line="19" pos:column="81">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="33">string_list_append_nodup<pos:position pos:line="20" pos:column="57"/></name><argument_list pos:line="20" pos:column="57">(<argument><expr><name pos:line="20" pos:column="58">results<pos:position pos:line="20" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="67">*<pos:position pos:line="20" pos:column="68"/></operator><name pos:line="20" pos:column="68">result<pos:position pos:line="20" pos:column="74"/></name></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="76"/></expr_stmt></block></then></if>
		}<pos:position pos:line="21" pos:column="18"/></block></then> <elseif pos:line="21" pos:column="19">else <if pos:line="21" pos:column="24">if <condition pos:line="21" pos:column="27">(<expr><operator pos:line="21" pos:column="28">!<pos:position pos:line="21" pos:column="29"/></operator><call><name pos:line="21" pos:column="29">strcmp<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">needle<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">key<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49"> <block pos:line="21" pos:column="50">{
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">string_list_append<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><name pos:line="22" pos:column="44">results<pos:position pos:line="22" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="53">value<pos:position pos:line="22" pos:column="58"/></name></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="60"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="24" pos:column="10"/></block></for>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

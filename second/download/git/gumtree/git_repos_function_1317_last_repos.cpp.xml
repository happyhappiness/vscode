<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1317_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">clear_image<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">image<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">image<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">free<pos:position pos:line="3" pos:column="13"/></name><argument_list pos:line="3" pos:column="13">(<argument><expr><name><name pos:line="3" pos:column="14">image<pos:position pos:line="3" pos:column="19"/></name><operator pos:line="3" pos:column="19">-&gt;<pos:position pos:line="3" pos:column="24"/></operator><name pos:line="3" pos:column="21">buf<pos:position pos:line="3" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">free<pos:position pos:line="4" pos:column="13"/></name><argument_list pos:line="4" pos:column="13">(<argument><expr><name><name pos:line="4" pos:column="14">image<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">line_allocated<pos:position pos:line="4" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">memset<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">image<pos:position pos:line="5" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="26">sizeof<argument_list pos:line="5" pos:column="32">(<argument><expr><operator pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="34">image<pos:position pos:line="5" pos:column="39"/></name></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

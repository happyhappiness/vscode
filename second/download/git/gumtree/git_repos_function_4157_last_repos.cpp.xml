<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4157_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">tree<pos:position pos:line="1" pos:column="12"/></name></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">parse_tree_indirect<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name><name pos:line="1" pos:column="40">struct<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">object_id<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">oid<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">obj<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><call><name pos:line="3" pos:column="30">parse_object<pos:position pos:line="3" pos:column="42"/></name><argument_list pos:line="3" pos:column="42">(<argument><expr><name pos:line="3" pos:column="43">oid<pos:position pos:line="3" pos:column="46"/></name></expr></argument>)<pos:position pos:line="3" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
	<do pos:line="4" pos:column="9">do <block pos:line="4" pos:column="12">{
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><operator pos:line="5" pos:column="21">!<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">obj<pos:position pos:line="5" pos:column="25"/></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26">
			<block type="pseudo"><return pos:line="6" pos:column="25">return <expr><name pos:line="6" pos:column="32">NULL<pos:position pos:line="6" pos:column="36"/></name></expr>;<pos:position pos:line="6" pos:column="37"/></return></block></then></if>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name><name pos:line="7" pos:column="21">obj<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">type<pos:position pos:line="7" pos:column="30"/></name></name> <operator pos:line="7" pos:column="31">==<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="34">OBJ_TREE<pos:position pos:line="7" pos:column="42"/></name></expr>)<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43">
			<block type="pseudo"><return pos:line="8" pos:column="25">return <expr><operator pos:line="8" pos:column="32">(<pos:position pos:line="8" pos:column="33"/></operator>struct <name pos:line="8" pos:column="40">tree<pos:position pos:line="8" pos:column="44"/></name> <operator pos:line="8" pos:column="45">*<pos:position pos:line="8" pos:column="46"/></operator><operator pos:line="8" pos:column="46">)<pos:position pos:line="8" pos:column="47"/></operator> <name pos:line="8" pos:column="48">obj<pos:position pos:line="8" pos:column="51"/></name></expr>;<pos:position pos:line="8" pos:column="52"/></return></block></then>
		<elseif pos:line="9" pos:column="17">else <if pos:line="9" pos:column="22">if <condition pos:line="9" pos:column="25">(<expr><name><name pos:line="9" pos:column="26">obj<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">type<pos:position pos:line="9" pos:column="35"/></name></name> <operator pos:line="9" pos:column="36">==<pos:position pos:line="9" pos:column="38"/></operator> <name pos:line="9" pos:column="39">OBJ_COMMIT<pos:position pos:line="9" pos:column="49"/></name></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="25">obj<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <operator pos:line="10" pos:column="31">&amp;<pos:position pos:line="10" pos:column="36"/></operator><operator pos:line="10" pos:column="32">(<pos:position pos:line="10" pos:column="33"/></operator><operator pos:line="10" pos:column="33">(<pos:position pos:line="10" pos:column="34"/></operator><operator pos:line="10" pos:column="34">(<pos:position pos:line="10" pos:column="35"/></operator>struct <name pos:line="10" pos:column="42">commit<pos:position pos:line="10" pos:column="48"/></name> <operator pos:line="10" pos:column="49">*<pos:position pos:line="10" pos:column="50"/></operator><operator pos:line="10" pos:column="50">)<pos:position pos:line="10" pos:column="51"/></operator> <name pos:line="10" pos:column="52">obj<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">)<pos:position pos:line="10" pos:column="56"/></operator><operator pos:line="10" pos:column="56">-&gt;<pos:position pos:line="10" pos:column="61"/></operator><name><name pos:line="10" pos:column="58">tree<pos:position pos:line="10" pos:column="62"/></name><operator pos:line="10" pos:column="62">-&gt;<pos:position pos:line="10" pos:column="67"/></operator><name pos:line="10" pos:column="64">object<pos:position pos:line="10" pos:column="70"/></name></name><operator pos:line="10" pos:column="70">)<pos:position pos:line="10" pos:column="71"/></operator></expr>;<pos:position pos:line="10" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="11" pos:column="17">else <if pos:line="11" pos:column="22">if <condition pos:line="11" pos:column="25">(<expr><name><name pos:line="11" pos:column="26">obj<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">-&gt;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="31">type<pos:position pos:line="11" pos:column="35"/></name></name> <operator pos:line="11" pos:column="36">==<pos:position pos:line="11" pos:column="38"/></operator> <name pos:line="11" pos:column="39">OBJ_TAG<pos:position pos:line="11" pos:column="46"/></name></expr>)<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">obj<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">=<pos:position pos:line="12" pos:column="30"/></operator> <operator pos:line="12" pos:column="31">(<pos:position pos:line="12" pos:column="32"/></operator><operator pos:line="12" pos:column="32">(<pos:position pos:line="12" pos:column="33"/></operator>struct <name pos:line="12" pos:column="40">tag<pos:position pos:line="12" pos:column="43"/></name> <operator pos:line="12" pos:column="44">*<pos:position pos:line="12" pos:column="45"/></operator><operator pos:line="12" pos:column="45">)<pos:position pos:line="12" pos:column="46"/></operator> <name pos:line="12" pos:column="47">obj<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">)<pos:position pos:line="12" pos:column="51"/></operator><operator pos:line="12" pos:column="51">-&gt;<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="53">tagged<pos:position pos:line="12" pos:column="59"/></name></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt></block></then></if></elseif>
		<else pos:line="13" pos:column="17">else
			<block type="pseudo"><return pos:line="14" pos:column="25">return <expr><name pos:line="14" pos:column="32">NULL<pos:position pos:line="14" pos:column="36"/></name></expr>;<pos:position pos:line="14" pos:column="37"/></return></block></else></if>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name><name pos:line="15" pos:column="22">obj<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">parsed<pos:position pos:line="15" pos:column="33"/></name></name></expr>)<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">parse_object<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><operator pos:line="16" pos:column="38">&amp;<pos:position pos:line="16" pos:column="43"/></operator><name><name pos:line="16" pos:column="39">obj<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">-&gt;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="44">oid<pos:position pos:line="16" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt></block></then></if>
	}<pos:position pos:line="17" pos:column="10"/></block> while <condition pos:line="17" pos:column="17">(<expr><literal type="number" pos:line="17" pos:column="18">1<pos:position pos:line="17" pos:column="19"/></literal></expr>)<pos:position pos:line="17" pos:column="20"/></condition>;<pos:position pos:line="17" pos:column="21"/></do>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

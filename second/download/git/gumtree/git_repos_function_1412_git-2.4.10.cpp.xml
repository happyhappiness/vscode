<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1412_git-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">string_list_item<pos:position pos:line="1" pos:column="31"/></name></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">lookup_prefix<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">string_list<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">map<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
					      <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">string<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="67">size_t<pos:position pos:line="2" pos:column="73"/></name></type> <name pos:line="2" pos:column="74">len<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><call><name pos:line="4" pos:column="17">string_list_find_insert_index<pos:position pos:line="4" pos:column="46"/></name><argument_list pos:line="4" pos:column="46">(<argument><expr><name pos:line="4" pos:column="47">map<pos:position pos:line="4" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="52">string<pos:position pos:line="4" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="60">1<pos:position pos:line="4" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="63"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">&lt;<pos:position pos:line="5" pos:column="19"/></operator> <literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19"> <block pos:line="5" pos:column="20">{
		<comment type="block" pos:line="6" pos:column="17">/* exact match */</comment>
		<expr_stmt><expr><name pos:line="7" pos:column="17">i<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <operator pos:line="7" pos:column="21">-<pos:position pos:line="7" pos:column="22"/></operator><literal type="number" pos:line="7" pos:column="22">1<pos:position pos:line="7" pos:column="23"/></literal> <operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">i<pos:position pos:line="7" pos:column="27"/></name></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><name><name pos:line="8" pos:column="22">string<pos:position pos:line="8" pos:column="28"/></name><index pos:line="8" pos:column="28">[<expr><name pos:line="8" pos:column="29">len<pos:position pos:line="8" pos:column="32"/></name></expr>]<pos:position pos:line="8" pos:column="33"/></index></name></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34">
			<block type="pseudo"><return pos:line="9" pos:column="25">return <expr><operator pos:line="9" pos:column="32">&amp;<pos:position pos:line="9" pos:column="37"/></operator><name><name pos:line="9" pos:column="33">map<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">items<pos:position pos:line="9" pos:column="43"/></name><index pos:line="9" pos:column="43">[<expr><name pos:line="9" pos:column="44">i<pos:position pos:line="9" pos:column="45"/></name></expr>]<pos:position pos:line="9" pos:column="46"/></index></name></expr>;<pos:position pos:line="9" pos:column="47"/></return></block></then></if>
		<comment type="block" pos:line="10" pos:column="17">/*
		 * that map entry matches exactly to the string, including
		 * the cruft at the end beyond "len".  That is not a match
		 * with string[0:len] that we are looking for.
		 */</comment>
	}<pos:position pos:line="15" pos:column="10"/></block></then> <elseif pos:line="15" pos:column="11">else <if pos:line="15" pos:column="16">if <condition pos:line="15" pos:column="19">(<expr><operator pos:line="15" pos:column="20">!<pos:position pos:line="15" pos:column="21"/></operator><name><name pos:line="15" pos:column="21">string<pos:position pos:line="15" pos:column="27"/></name><index pos:line="15" pos:column="27">[<expr><name pos:line="15" pos:column="28">len<pos:position pos:line="15" pos:column="31"/></name></expr>]<pos:position pos:line="15" pos:column="32"/></index></name></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <block pos:line="15" pos:column="34">{
		<comment type="block" pos:line="16" pos:column="17">/*
		 * asked with the whole string, and got nothing.  No
		 * matching entry can exist in the map.
		 */</comment>
		<return pos:line="20" pos:column="17">return <expr><name pos:line="20" pos:column="24">NULL<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if></elseif></if>

	<comment type="block" pos:line="23" pos:column="9">/*
	 * i is at the exact match to an overlong key, or location the
	 * overlong key would be inserted, which must come after the
	 * real location of the key if one exists.
	 */</comment>
	<while pos:line="28" pos:column="9">while <condition pos:line="28" pos:column="15">(<expr><literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal> <operator pos:line="28" pos:column="18">&lt;=<pos:position pos:line="28" pos:column="23"/></operator> <operator pos:line="28" pos:column="21">--<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">i<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">&amp;&amp;<pos:position pos:line="28" pos:column="35"/></operator> <name pos:line="28" pos:column="28">i<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">&lt;<pos:position pos:line="28" pos:column="34"/></operator> <name><name pos:line="28" pos:column="32">map<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">nr<pos:position pos:line="28" pos:column="39"/></name></name></expr>)<pos:position pos:line="28" pos:column="40"/></condition> <block pos:line="28" pos:column="41">{
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">int<pos:position pos:line="29" pos:column="20"/></name></type> <name pos:line="29" pos:column="21">cmp<pos:position pos:line="29" pos:column="24"/></name> <init pos:line="29" pos:column="25">= <expr><call><name pos:line="29" pos:column="27">strncasecmp<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><name><name pos:line="29" pos:column="39">map<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">items<pos:position pos:line="29" pos:column="49"/></name><index pos:line="29" pos:column="49">[<expr><name pos:line="29" pos:column="50">i<pos:position pos:line="29" pos:column="51"/></name></expr>]<pos:position pos:line="29" pos:column="52"/></index></name><operator pos:line="29" pos:column="52">.<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="53">string<pos:position pos:line="29" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="61">string<pos:position pos:line="29" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="69">len<pos:position pos:line="29" pos:column="72"/></name></expr></argument>)<pos:position pos:line="29" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="74"/></decl_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">cmp<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">&lt;<pos:position pos:line="30" pos:column="29"/></operator> <literal type="number" pos:line="30" pos:column="27">0<pos:position pos:line="30" pos:column="28"/></literal></expr>)<pos:position pos:line="30" pos:column="29"/></condition><then pos:line="30" pos:column="29">
			<comment type="block" pos:line="31" pos:column="25">/*
			 * "i" points at a key definitely below the prefix;
			 * the map does not have string[0:len] in it.
			 */</comment>
			<block type="pseudo"><break pos:line="35" pos:column="25">break;<pos:position pos:line="35" pos:column="31"/></break></block></then>
		<elseif pos:line="36" pos:column="17">else <if pos:line="36" pos:column="22">if <condition pos:line="36" pos:column="25">(<expr><operator pos:line="36" pos:column="26">!<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">cmp<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">&amp;&amp;<pos:position pos:line="36" pos:column="41"/></operator> <operator pos:line="36" pos:column="34">!<pos:position pos:line="36" pos:column="35"/></operator><name><name pos:line="36" pos:column="35">map<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">-&gt;<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="40">items<pos:position pos:line="36" pos:column="45"/></name><index pos:line="36" pos:column="45">[<expr><name pos:line="36" pos:column="46">i<pos:position pos:line="36" pos:column="47"/></name></expr>]<pos:position pos:line="36" pos:column="48"/></index></name><operator pos:line="36" pos:column="48">.<pos:position pos:line="36" pos:column="49"/></operator><name><name pos:line="36" pos:column="49">string<pos:position pos:line="36" pos:column="55"/></name><index pos:line="36" pos:column="55">[<expr><name pos:line="36" pos:column="56">len<pos:position pos:line="36" pos:column="59"/></name></expr>]<pos:position pos:line="36" pos:column="60"/></index></name></expr>)<pos:position pos:line="36" pos:column="61"/></condition><then pos:line="36" pos:column="61">
			<comment type="block" pos:line="37" pos:column="25">/* found it */</comment>
			<block type="pseudo"><return pos:line="38" pos:column="25">return <expr><operator pos:line="38" pos:column="32">&amp;<pos:position pos:line="38" pos:column="37"/></operator><name><name pos:line="38" pos:column="33">map<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">items<pos:position pos:line="38" pos:column="43"/></name><index pos:line="38" pos:column="43">[<expr><name pos:line="38" pos:column="44">i<pos:position pos:line="38" pos:column="45"/></name></expr>]<pos:position pos:line="38" pos:column="46"/></index></name></expr>;<pos:position pos:line="38" pos:column="47"/></return></block></then></if></elseif></if>
		<comment type="block" pos:line="39" pos:column="17">/*
		 * otherwise, the string at "i" may be string[0:len]
		 * followed by a string that sorts later than string[len:];
		 * keep trying.
		 */</comment>
	}<pos:position pos:line="44" pos:column="10"/></block></while>
	<return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">NULL<pos:position pos:line="45" pos:column="20"/></name></expr>;<pos:position pos:line="45" pos:column="21"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6982_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">find_collation_sequence_value<pos:position pos:line="3" pos:column="30"/></name> <parameter_list pos:line="3" pos:column="31">(<parameter><decl><type><specifier pos:line="3" pos:column="32">const<pos:position pos:line="3" pos:column="37"/></specifier> <name pos:line="3" pos:column="38">unsigned<pos:position pos:line="3" pos:column="46"/></name> <name pos:line="3" pos:column="47">char<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">mbs<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="58">size_t<pos:position pos:line="3" pos:column="64"/></name></type> <name pos:line="3" pos:column="65">mbs_len<pos:position pos:line="3" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="73"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">uint32_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">nrules<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><call><name pos:line="5" pos:column="21">_NL_CURRENT_WORD<pos:position pos:line="5" pos:column="37"/></name> <argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">LC_COLLATE<pos:position pos:line="5" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="51">_NL_COLLATE_NRULES<pos:position pos:line="5" pos:column="69"/></name></expr></argument>)<pos:position pos:line="5" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="71"/></decl_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">nrules<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19">
    <block pos:line="7" pos:column="5">{
      <if pos:line="8" pos:column="7">if <condition pos:line="8" pos:column="10">(<expr><name pos:line="8" pos:column="11">mbs_len<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">==<pos:position pos:line="8" pos:column="21"/></operator> <literal type="number" pos:line="8" pos:column="22">1<pos:position pos:line="8" pos:column="23"/></literal></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24">
	<block pos:line="9" pos:column="9">{
	  <comment type="block" pos:line="10" pos:column="11">/* No valid character.  Match it as a single byte character.  */</comment>
	  <decl_stmt><decl><type><specifier pos:line="11" pos:column="11">const<pos:position pos:line="11" pos:column="16"/></specifier> <name pos:line="11" pos:column="17">unsigned<pos:position pos:line="11" pos:column="25"/></name> <name pos:line="11" pos:column="26">char<pos:position pos:line="11" pos:column="30"/></name> <modifier pos:line="11" pos:column="31">*<pos:position pos:line="11" pos:column="32"/></modifier></type><name pos:line="11" pos:column="32">collseq<pos:position pos:line="11" pos:column="39"/></name> <init pos:line="11" pos:column="40">= <expr><operator pos:line="11" pos:column="42">(<pos:position pos:line="11" pos:column="43"/></operator><specifier pos:line="11" pos:column="43">const<pos:position pos:line="11" pos:column="48"/></specifier> <name pos:line="11" pos:column="49">unsigned<pos:position pos:line="11" pos:column="57"/></name> <name pos:line="11" pos:column="58">char<pos:position pos:line="11" pos:column="62"/></name> <operator pos:line="11" pos:column="63">*<pos:position pos:line="11" pos:column="64"/></operator><operator pos:line="11" pos:column="64">)<pos:position pos:line="11" pos:column="65"/></operator>
	    <call><name pos:line="12" pos:column="13">_NL_CURRENT<pos:position pos:line="12" pos:column="24"/></name> <argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">LC_COLLATE<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">_NL_COLLATE_COLLSEQMB<pos:position pos:line="12" pos:column="59"/></name></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="61"/></decl_stmt>
	  <return pos:line="13" pos:column="11">return <expr><name><name pos:line="13" pos:column="18">collseq<pos:position pos:line="13" pos:column="25"/></name><index pos:line="13" pos:column="25">[<expr><name><name pos:line="13" pos:column="26">mbs<pos:position pos:line="13" pos:column="29"/></name><index pos:line="13" pos:column="29">[<expr><literal type="number" pos:line="13" pos:column="30">0<pos:position pos:line="13" pos:column="31"/></literal></expr>]<pos:position pos:line="13" pos:column="32"/></index></name></expr>]<pos:position pos:line="13" pos:column="33"/></index></name></expr>;<pos:position pos:line="13" pos:column="34"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
      <return pos:line="15" pos:column="7">return <expr><name pos:line="15" pos:column="14">UINT_MAX<pos:position pos:line="15" pos:column="22"/></name></expr>;<pos:position pos:line="15" pos:column="23"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then>
  <else pos:line="17" pos:column="3">else
    <block pos:line="18" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">int32_t<pos:position pos:line="19" pos:column="14"/></name></type> <name pos:line="19" pos:column="15">idx<pos:position pos:line="19" pos:column="18"/></name></decl>;<pos:position pos:line="19" pos:column="19"/></decl_stmt>
      <decl_stmt><decl><type><specifier pos:line="20" pos:column="7">const<pos:position pos:line="20" pos:column="12"/></specifier> <name pos:line="20" pos:column="13">unsigned<pos:position pos:line="20" pos:column="21"/></name> <name pos:line="20" pos:column="22">char<pos:position pos:line="20" pos:column="26"/></name> <modifier pos:line="20" pos:column="27">*<pos:position pos:line="20" pos:column="28"/></modifier></type><name pos:line="20" pos:column="28">extra<pos:position pos:line="20" pos:column="33"/></name> <init pos:line="20" pos:column="34">= <expr><operator pos:line="20" pos:column="36">(<pos:position pos:line="20" pos:column="37"/></operator><specifier pos:line="20" pos:column="37">const<pos:position pos:line="20" pos:column="42"/></specifier> <name pos:line="20" pos:column="43">unsigned<pos:position pos:line="20" pos:column="51"/></name> <name pos:line="20" pos:column="52">char<pos:position pos:line="20" pos:column="56"/></name> <operator pos:line="20" pos:column="57">*<pos:position pos:line="20" pos:column="58"/></operator><operator pos:line="20" pos:column="58">)<pos:position pos:line="20" pos:column="59"/></operator>
	<call><name pos:line="21" pos:column="9">_NL_CURRENT<pos:position pos:line="21" pos:column="20"/></name> <argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">LC_COLLATE<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">_NL_COLLATE_SYMB_EXTRAMB<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="60"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="22" pos:column="7">int32_t<pos:position pos:line="22" pos:column="14"/></name></type> <name pos:line="22" pos:column="15">extrasize<pos:position pos:line="22" pos:column="24"/></name> <init pos:line="22" pos:column="25">= <expr><operator pos:line="22" pos:column="27">(<pos:position pos:line="22" pos:column="28"/></operator><specifier pos:line="22" pos:column="28">const<pos:position pos:line="22" pos:column="33"/></specifier> <name pos:line="22" pos:column="34">unsigned<pos:position pos:line="22" pos:column="42"/></name> <name pos:line="22" pos:column="43">char<pos:position pos:line="22" pos:column="47"/></name> <operator pos:line="22" pos:column="48">*<pos:position pos:line="22" pos:column="49"/></operator><operator pos:line="22" pos:column="49">)<pos:position pos:line="22" pos:column="50"/></operator>
	<call><name pos:line="23" pos:column="9">_NL_CURRENT<pos:position pos:line="23" pos:column="20"/></name> <argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">LC_COLLATE<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">_NL_COLLATE_SYMB_EXTRAMB<pos:position pos:line="23" pos:column="58"/></name> <operator pos:line="23" pos:column="59">+<pos:position pos:line="23" pos:column="60"/></operator> <literal type="number" pos:line="23" pos:column="61">1<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call> <operator pos:line="23" pos:column="64">-<pos:position pos:line="23" pos:column="65"/></operator> <name pos:line="23" pos:column="66">extra<pos:position pos:line="23" pos:column="71"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="72"/></decl_stmt>

      <for pos:line="25" pos:column="7">for <control pos:line="25" pos:column="11">(<init><expr><name pos:line="25" pos:column="12">idx<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></init> <condition><expr><name pos:line="25" pos:column="21">idx<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">&lt;<pos:position pos:line="25" pos:column="29"/></operator> <name pos:line="25" pos:column="27">extrasize<pos:position pos:line="25" pos:column="36"/></name></expr>;<pos:position pos:line="25" pos:column="37"/></condition><incr/>)<pos:position pos:line="25" pos:column="38"/></control>
	<block pos:line="26" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="27" pos:column="11">int<pos:position pos:line="27" pos:column="14"/></name></type> <name pos:line="27" pos:column="15">mbs_cnt<pos:position pos:line="27" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="27" pos:column="24">found<pos:position pos:line="27" pos:column="29"/></name> <init pos:line="27" pos:column="30">= <expr><literal type="number" pos:line="27" pos:column="32">0<pos:position pos:line="27" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="34"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="28" pos:column="11">int32_t<pos:position pos:line="28" pos:column="18"/></name></type> <name pos:line="28" pos:column="19">elem_mbs_len<pos:position pos:line="28" pos:column="31"/></name></decl>;<pos:position pos:line="28" pos:column="32"/></decl_stmt>
	  <comment type="block" pos:line="29" pos:column="11">/* Skip the name of collating element name.  */</comment>
	  <expr_stmt><expr><name pos:line="30" pos:column="11">idx<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <name pos:line="30" pos:column="17">idx<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">+<pos:position pos:line="30" pos:column="22"/></operator> <name><name pos:line="30" pos:column="23">extra<pos:position pos:line="30" pos:column="28"/></name><index pos:line="30" pos:column="28">[<expr><name pos:line="30" pos:column="29">idx<pos:position pos:line="30" pos:column="32"/></name></expr>]<pos:position pos:line="30" pos:column="33"/></index></name> <operator pos:line="30" pos:column="34">+<pos:position pos:line="30" pos:column="35"/></operator> <literal type="number" pos:line="30" pos:column="36">1<pos:position pos:line="30" pos:column="37"/></literal></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="31" pos:column="11">elem_mbs_len<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <name><name pos:line="31" pos:column="26">extra<pos:position pos:line="31" pos:column="31"/></name><index pos:line="31" pos:column="31">[<expr><name pos:line="31" pos:column="32">idx<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">++<pos:position pos:line="31" pos:column="37"/></operator></expr>]<pos:position pos:line="31" pos:column="38"/></index></name></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
	  <if pos:line="32" pos:column="11">if <condition pos:line="32" pos:column="14">(<expr><name pos:line="32" pos:column="15">mbs_len<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">==<pos:position pos:line="32" pos:column="25"/></operator> <name pos:line="32" pos:column="26">elem_mbs_len<pos:position pos:line="32" pos:column="38"/></name></expr>)<pos:position pos:line="32" pos:column="39"/></condition><then pos:line="32" pos:column="39">
	    <block pos:line="33" pos:column="13">{
	      <for pos:line="34" pos:column="15">for <control pos:line="34" pos:column="19">(<init><expr><name pos:line="34" pos:column="20">mbs_cnt<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <literal type="number" pos:line="34" pos:column="30">0<pos:position pos:line="34" pos:column="31"/></literal></expr>;<pos:position pos:line="34" pos:column="32"/></init> <condition><expr><name pos:line="34" pos:column="33">mbs_cnt<pos:position pos:line="34" pos:column="40"/></name> <operator pos:line="34" pos:column="41">&lt;<pos:position pos:line="34" pos:column="45"/></operator> <name pos:line="34" pos:column="43">elem_mbs_len<pos:position pos:line="34" pos:column="55"/></name></expr>;<pos:position pos:line="34" pos:column="56"/></condition> <incr><expr><operator pos:line="34" pos:column="57">++<pos:position pos:line="34" pos:column="59"/></operator><name pos:line="34" pos:column="59">mbs_cnt<pos:position pos:line="34" pos:column="66"/></name></expr></incr>)<pos:position pos:line="34" pos:column="67"/></control>
		<block type="pseudo"><if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name><name pos:line="35" pos:column="21">extra<pos:position pos:line="35" pos:column="26"/></name><index pos:line="35" pos:column="26">[<expr><name pos:line="35" pos:column="27">idx<pos:position pos:line="35" pos:column="30"/></name> <operator pos:line="35" pos:column="31">+<pos:position pos:line="35" pos:column="32"/></operator> <name pos:line="35" pos:column="33">mbs_cnt<pos:position pos:line="35" pos:column="40"/></name></expr>]<pos:position pos:line="35" pos:column="41"/></index></name> <operator pos:line="35" pos:column="42">!=<pos:position pos:line="35" pos:column="44"/></operator> <name><name pos:line="35" pos:column="45">mbs<pos:position pos:line="35" pos:column="48"/></name><index pos:line="35" pos:column="48">[<expr><name pos:line="35" pos:column="49">mbs_cnt<pos:position pos:line="35" pos:column="56"/></name></expr>]<pos:position pos:line="35" pos:column="57"/></index></name></expr>)<pos:position pos:line="35" pos:column="58"/></condition><then pos:line="35" pos:column="58">
		  <block type="pseudo"><break pos:line="36" pos:column="19">break;<pos:position pos:line="36" pos:column="25"/></break></block></then></if></block></for>
	      <if pos:line="37" pos:column="15">if <condition pos:line="37" pos:column="18">(<expr><name pos:line="37" pos:column="19">mbs_cnt<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">==<pos:position pos:line="37" pos:column="29"/></operator> <name pos:line="37" pos:column="30">elem_mbs_len<pos:position pos:line="37" pos:column="42"/></name></expr>)<pos:position pos:line="37" pos:column="43"/></condition><then pos:line="37" pos:column="43">
		<comment type="block" pos:line="38" pos:column="17">/* Found the entry.  */</comment>
		<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="17">found<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <literal type="number" pos:line="39" pos:column="25">1<pos:position pos:line="39" pos:column="26"/></literal></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt></block></then></if>
	    }<pos:position pos:line="40" pos:column="14"/></block></then></if>
	  <comment type="block" pos:line="41" pos:column="11">/* Skip the byte sequence of the collating element.  */</comment>
	  <expr_stmt><expr><name pos:line="42" pos:column="11">idx<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">+=<pos:position pos:line="42" pos:column="17"/></operator> <name pos:line="42" pos:column="18">elem_mbs_len<pos:position pos:line="42" pos:column="30"/></name></expr>;<pos:position pos:line="42" pos:column="31"/></expr_stmt>
	  <comment type="block" pos:line="43" pos:column="11">/* Adjust for the alignment.  */</comment>
	  <expr_stmt><expr><name pos:line="44" pos:column="11">idx<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <operator pos:line="44" pos:column="17">(<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">idx<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">+<pos:position pos:line="44" pos:column="23"/></operator> <literal type="number" pos:line="44" pos:column="24">3<pos:position pos:line="44" pos:column="25"/></literal><operator pos:line="44" pos:column="25">)<pos:position pos:line="44" pos:column="26"/></operator> <operator pos:line="44" pos:column="27">&amp;<pos:position pos:line="44" pos:column="32"/></operator> <operator pos:line="44" pos:column="29">~<pos:position pos:line="44" pos:column="30"/></operator><literal type="number" pos:line="44" pos:column="30">3<pos:position pos:line="44" pos:column="31"/></literal></expr>;<pos:position pos:line="44" pos:column="32"/></expr_stmt>
	  <comment type="block" pos:line="45" pos:column="11">/* Skip the collation sequence value.  */</comment>
	  <expr_stmt><expr><name pos:line="46" pos:column="11">idx<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">+=<pos:position pos:line="46" pos:column="17"/></operator> <sizeof pos:line="46" pos:column="18">sizeof <argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">uint32_t<pos:position pos:line="46" pos:column="34"/></name></expr></argument>)<pos:position pos:line="46" pos:column="35"/></argument_list></sizeof></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt>
	  <comment type="block" pos:line="47" pos:column="11">/* Skip the wide char sequence of the collating element.  */</comment>
	  <expr_stmt><expr><name pos:line="48" pos:column="11">idx<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">=<pos:position pos:line="48" pos:column="16"/></operator> <name pos:line="48" pos:column="17">idx<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">+<pos:position pos:line="48" pos:column="22"/></operator> <sizeof pos:line="48" pos:column="23">sizeof <argument_list pos:line="48" pos:column="30">(<argument><expr><name pos:line="48" pos:column="31">uint32_t<pos:position pos:line="48" pos:column="39"/></name></expr></argument>)<pos:position pos:line="48" pos:column="40"/></argument_list></sizeof> <operator pos:line="48" pos:column="41">*<pos:position pos:line="48" pos:column="42"/></operator> <operator pos:line="48" pos:column="43">(<pos:position pos:line="48" pos:column="44"/></operator><name><name pos:line="48" pos:column="44">extra<pos:position pos:line="48" pos:column="49"/></name><index pos:line="48" pos:column="49">[<expr><name pos:line="48" pos:column="50">idx<pos:position pos:line="48" pos:column="53"/></name></expr>]<pos:position pos:line="48" pos:column="54"/></index></name> <operator pos:line="48" pos:column="55">+<pos:position pos:line="48" pos:column="56"/></operator> <literal type="number" pos:line="48" pos:column="57">1<pos:position pos:line="48" pos:column="58"/></literal><operator pos:line="48" pos:column="58">)<pos:position pos:line="48" pos:column="59"/></operator></expr>;<pos:position pos:line="48" pos:column="60"/></expr_stmt>
	  <comment type="block" pos:line="49" pos:column="11">/* If we found the entry, return the sequence value.  */</comment>
	  <if pos:line="50" pos:column="11">if <condition pos:line="50" pos:column="14">(<expr><name pos:line="50" pos:column="15">found<pos:position pos:line="50" pos:column="20"/></name></expr>)<pos:position pos:line="50" pos:column="21"/></condition><then pos:line="50" pos:column="21">
	    <block type="pseudo"><return pos:line="51" pos:column="13">return <expr><operator pos:line="51" pos:column="20">*<pos:position pos:line="51" pos:column="21"/></operator><operator pos:line="51" pos:column="21">(<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">uint32_t<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">*<pos:position pos:line="51" pos:column="32"/></operator><operator pos:line="51" pos:column="32">)<pos:position pos:line="51" pos:column="33"/></operator> <operator pos:line="51" pos:column="34">(<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="35">extra<pos:position pos:line="51" pos:column="40"/></name> <operator pos:line="51" pos:column="41">+<pos:position pos:line="51" pos:column="42"/></operator> <name pos:line="51" pos:column="43">idx<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">)<pos:position pos:line="51" pos:column="47"/></operator></expr>;<pos:position pos:line="51" pos:column="48"/></return></block></then></if>
	  <comment type="block" pos:line="52" pos:column="11">/* Skip the collation sequence value.  */</comment>
	  <expr_stmt><expr><name pos:line="53" pos:column="11">idx<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">+=<pos:position pos:line="53" pos:column="17"/></operator> <sizeof pos:line="53" pos:column="18">sizeof <argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">uint32_t<pos:position pos:line="53" pos:column="34"/></name></expr></argument>)<pos:position pos:line="53" pos:column="35"/></argument_list></sizeof></expr>;<pos:position pos:line="53" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></for>
      <return pos:line="55" pos:column="7">return <expr><name pos:line="55" pos:column="14">UINT_MAX<pos:position pos:line="55" pos:column="22"/></name></expr>;<pos:position pos:line="55" pos:column="23"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></else></if>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

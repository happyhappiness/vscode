<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3007_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">error_with_patch<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">commit<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">commit<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
	<parameter><decl><type><specifier pos:line="2" pos:column="9">const<pos:position pos:line="2" pos:column="14"/></specifier> <name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">subject<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">subject_len<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">replay_opts<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">opts<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="35">int<pos:position pos:line="3" pos:column="38"/></name></type> <name pos:line="3" pos:column="39">exit_code<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="50">int<pos:position pos:line="3" pos:column="53"/></name></type> <name pos:line="3" pos:column="54">to_amend<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">make_patch<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">commit<pos:position pos:line="5" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="32">opts<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="38"/></condition><then pos:line="5" pos:column="38">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">-<pos:position pos:line="6" pos:column="25"/></operator><literal type="number" pos:line="6" pos:column="25">1<pos:position pos:line="6" pos:column="26"/></literal></expr>;<pos:position pos:line="6" pos:column="27"/></return></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">to_amend<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22"> <block pos:line="8" pos:column="23">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">intend_to_amend<pos:position pos:line="9" pos:column="36"/></name><argument_list pos:line="9" pos:column="36">()<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><operator pos:line="10" pos:column="32">-<pos:position pos:line="10" pos:column="33"/></operator><literal type="number" pos:line="10" pos:column="33">1<pos:position pos:line="10" pos:column="34"/></literal></expr>;<pos:position pos:line="10" pos:column="35"/></return></block></then></if>

		<expr_stmt><expr><call><name pos:line="12" pos:column="17">fprintf<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">stderr<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="33">"You can amend the commit now, with\n"<pos:position pos:line="12" pos:column="71"/></literal>
			<literal type="string" pos:line="13" pos:column="25">"\n"<pos:position pos:line="13" pos:column="29"/></literal>
			<literal type="string" pos:line="14" pos:column="25">"  git commit --amend %s\n"<pos:position pos:line="14" pos:column="52"/></literal>
			<literal type="string" pos:line="15" pos:column="25">"\n"<pos:position pos:line="15" pos:column="29"/></literal>
			<literal type="string" pos:line="16" pos:column="25">"Once you are satisfied with your changes, run\n"<pos:position pos:line="16" pos:column="74"/></literal>
			<literal type="string" pos:line="17" pos:column="25">"\n"<pos:position pos:line="17" pos:column="29"/></literal>
			<literal type="string" pos:line="18" pos:column="25">"  git rebase --continue\n"<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="54">gpg_sign_opt_quoted<pos:position pos:line="18" pos:column="73"/></name><argument_list pos:line="18" pos:column="73">(<argument><expr><name pos:line="18" pos:column="74">opts<pos:position pos:line="18" pos:column="78"/></name></expr></argument>)<pos:position pos:line="18" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="81"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then> <elseif pos:line="19" pos:column="11">else <if pos:line="19" pos:column="16">if <condition pos:line="19" pos:column="19">(<expr><name pos:line="19" pos:column="20">exit_code<pos:position pos:line="19" pos:column="29"/></name></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">fprintf<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">stderr<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="33">"Could not apply %s... %.*s\n"<pos:position pos:line="20" pos:column="63"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="21" pos:column="25">short_commit_name<pos:position pos:line="21" pos:column="42"/></name><argument_list pos:line="21" pos:column="42">(<argument><expr><name pos:line="21" pos:column="43">commit<pos:position pos:line="21" pos:column="49"/></name></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="52">subject_len<pos:position pos:line="21" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="65">subject<pos:position pos:line="21" pos:column="72"/></name></expr></argument>)<pos:position pos:line="21" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="74"/></expr_stmt></block></then></if></elseif></if>

	<return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">exit_code<pos:position pos:line="23" pos:column="25"/></name></expr>;<pos:position pos:line="23" pos:column="26"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

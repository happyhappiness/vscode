<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1645_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">diff_scoreopt_parse<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">opt<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">opt1<pos:position pos:line="3" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="19">opt2<pos:position pos:line="3" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="25">cmd<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">opt<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">++<pos:position pos:line="5" pos:column="19"/></operator> <operator pos:line="5" pos:column="20">!=<pos:position pos:line="5" pos:column="22"/></operator> <literal type="char" pos:line="5" pos:column="23">'-'<pos:position pos:line="5" pos:column="26"/></literal></expr>)<pos:position pos:line="5" pos:column="27"/></condition><then pos:line="5" pos:column="27">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">-<pos:position pos:line="6" pos:column="25"/></operator><literal type="number" pos:line="6" pos:column="25">1<pos:position pos:line="6" pos:column="26"/></literal></expr>;<pos:position pos:line="6" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="7" pos:column="9">cmd<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <operator pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">opt<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">++<pos:position pos:line="7" pos:column="21"/></operator></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">cmd<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">==<pos:position pos:line="8" pos:column="19"/></operator> <literal type="char" pos:line="8" pos:column="20">'-'<pos:position pos:line="8" pos:column="23"/></literal></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24"> <block pos:line="8" pos:column="25">{
		<comment type="block" pos:line="9" pos:column="17">/* convert the long-form arguments into short-form versions */</comment>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><call><name pos:line="10" pos:column="21">skip_prefix<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">opt<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="38">"break-rewrites"<pos:position pos:line="10" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="56">&amp;<pos:position pos:line="10" pos:column="61"/></operator><name pos:line="10" pos:column="57">opt<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="62"/></condition><then pos:line="10" pos:column="62"> <block pos:line="10" pos:column="63">{
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><operator pos:line="11" pos:column="29">*<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">opt<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">==<pos:position pos:line="11" pos:column="36"/></operator> <literal type="number" pos:line="11" pos:column="37">0<pos:position pos:line="11" pos:column="38"/></literal> <operator pos:line="11" pos:column="39">||<pos:position pos:line="11" pos:column="41"/></operator> <operator pos:line="11" pos:column="42">*<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="43">opt<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">++<pos:position pos:line="11" pos:column="48"/></operator> <operator pos:line="11" pos:column="49">==<pos:position pos:line="11" pos:column="51"/></operator> <literal type="char" pos:line="11" pos:column="52">'='<pos:position pos:line="11" pos:column="55"/></literal></expr>)<pos:position pos:line="11" pos:column="56"/></condition><then pos:line="11" pos:column="56">
				<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="33">cmd<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">=<pos:position pos:line="12" pos:column="38"/></operator> <literal type="char" pos:line="12" pos:column="39">'B'<pos:position pos:line="12" pos:column="42"/></literal></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt></block></then></if>
		}<pos:position pos:line="13" pos:column="18"/></block></then> <elseif pos:line="13" pos:column="19">else <if pos:line="13" pos:column="24">if <condition pos:line="13" pos:column="27">(<expr><call><name pos:line="13" pos:column="28">skip_prefix<pos:position pos:line="13" pos:column="39"/></name><argument_list pos:line="13" pos:column="39">(<argument><expr><name pos:line="13" pos:column="40">opt<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="45">"find-copies"<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="60">&amp;<pos:position pos:line="13" pos:column="65"/></operator><name pos:line="13" pos:column="61">opt<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="66"/></condition><then pos:line="13" pos:column="66"> <block pos:line="13" pos:column="67">{
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><operator pos:line="14" pos:column="29">*<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">opt<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">==<pos:position pos:line="14" pos:column="36"/></operator> <literal type="number" pos:line="14" pos:column="37">0<pos:position pos:line="14" pos:column="38"/></literal> <operator pos:line="14" pos:column="39">||<pos:position pos:line="14" pos:column="41"/></operator> <operator pos:line="14" pos:column="42">*<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="43">opt<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">++<pos:position pos:line="14" pos:column="48"/></operator> <operator pos:line="14" pos:column="49">==<pos:position pos:line="14" pos:column="51"/></operator> <literal type="char" pos:line="14" pos:column="52">'='<pos:position pos:line="14" pos:column="55"/></literal></expr>)<pos:position pos:line="14" pos:column="56"/></condition><then pos:line="14" pos:column="56">
				<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="33">cmd<pos:position pos:line="15" pos:column="36"/></name> <operator pos:line="15" pos:column="37">=<pos:position pos:line="15" pos:column="38"/></operator> <literal type="char" pos:line="15" pos:column="39">'C'<pos:position pos:line="15" pos:column="42"/></literal></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt></block></then></if>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if></elseif> <elseif pos:line="16" pos:column="19">else <if pos:line="16" pos:column="24">if <condition pos:line="16" pos:column="27">(<expr><call><name pos:line="16" pos:column="28">skip_prefix<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><name pos:line="16" pos:column="40">opt<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="45">"find-renames"<pos:position pos:line="16" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="61">&amp;<pos:position pos:line="16" pos:column="66"/></operator><name pos:line="16" pos:column="62">opt<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="67"/></condition><then pos:line="16" pos:column="67"> <block pos:line="16" pos:column="68">{
			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><operator pos:line="17" pos:column="29">*<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">opt<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">==<pos:position pos:line="17" pos:column="36"/></operator> <literal type="number" pos:line="17" pos:column="37">0<pos:position pos:line="17" pos:column="38"/></literal> <operator pos:line="17" pos:column="39">||<pos:position pos:line="17" pos:column="41"/></operator> <operator pos:line="17" pos:column="42">*<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">opt<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">++<pos:position pos:line="17" pos:column="48"/></operator> <operator pos:line="17" pos:column="49">==<pos:position pos:line="17" pos:column="51"/></operator> <literal type="char" pos:line="17" pos:column="52">'='<pos:position pos:line="17" pos:column="55"/></literal></expr>)<pos:position pos:line="17" pos:column="56"/></condition><then pos:line="17" pos:column="56">
				<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="33">cmd<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">=<pos:position pos:line="18" pos:column="38"/></operator> <literal type="char" pos:line="18" pos:column="39">'M'<pos:position pos:line="18" pos:column="42"/></literal></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt></block></then></if>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">cmd<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">!=<pos:position pos:line="21" pos:column="19"/></operator> <literal type="char" pos:line="21" pos:column="20">'M'<pos:position pos:line="21" pos:column="23"/></literal> <operator pos:line="21" pos:column="24">&amp;&amp;<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="27">cmd<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">!=<pos:position pos:line="21" pos:column="33"/></operator> <literal type="char" pos:line="21" pos:column="34">'C'<pos:position pos:line="21" pos:column="37"/></literal> <operator pos:line="21" pos:column="38">&amp;&amp;<pos:position pos:line="21" pos:column="48"/></operator> <name pos:line="21" pos:column="41">cmd<pos:position pos:line="21" pos:column="44"/></name> <operator pos:line="21" pos:column="45">!=<pos:position pos:line="21" pos:column="47"/></operator> <literal type="char" pos:line="21" pos:column="48">'B'<pos:position pos:line="21" pos:column="51"/></literal></expr>)<pos:position pos:line="21" pos:column="52"/></condition><then pos:line="21" pos:column="52">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">-<pos:position pos:line="22" pos:column="25"/></operator><literal type="number" pos:line="22" pos:column="25">1<pos:position pos:line="22" pos:column="26"/></literal></expr>;<pos:position pos:line="22" pos:column="27"/></return></block></then></if> <comment type="block" pos:line="22" pos:column="28">/* that is not a -M, -C, or -B option */</comment>

	<expr_stmt><expr><name pos:line="24" pos:column="9">opt1<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">parse_rename_score<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><operator pos:line="24" pos:column="35">&amp;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="36">opt<pos:position pos:line="24" pos:column="39"/></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">cmd<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">!=<pos:position pos:line="25" pos:column="19"/></operator> <literal type="char" pos:line="25" pos:column="20">'B'<pos:position pos:line="25" pos:column="23"/></literal></expr>)<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="17">opt2<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <literal type="number" pos:line="26" pos:column="24">0<pos:position pos:line="26" pos:column="25"/></literal></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt></block></then>
	<else pos:line="27" pos:column="9">else <block pos:line="27" pos:column="14">{
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">*<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">opt<pos:position pos:line="28" pos:column="25"/></name> <operator pos:line="28" pos:column="26">==<pos:position pos:line="28" pos:column="28"/></operator> <literal type="number" pos:line="28" pos:column="29">0<pos:position pos:line="28" pos:column="30"/></literal></expr>)<pos:position pos:line="28" pos:column="31"/></condition><then pos:line="28" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="25">opt2<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <literal type="number" pos:line="29" pos:column="32">0<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt></block></then>
		<elseif pos:line="30" pos:column="17">else <if pos:line="30" pos:column="22">if <condition pos:line="30" pos:column="25">(<expr><operator pos:line="30" pos:column="26">*<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="27">opt<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">!=<pos:position pos:line="30" pos:column="33"/></operator> <literal type="char" pos:line="30" pos:column="34">'/'<pos:position pos:line="30" pos:column="37"/></literal></expr>)<pos:position pos:line="30" pos:column="38"/></condition><then pos:line="30" pos:column="38">
			<block type="pseudo"><return pos:line="31" pos:column="25">return <expr><operator pos:line="31" pos:column="32">-<pos:position pos:line="31" pos:column="33"/></operator><literal type="number" pos:line="31" pos:column="33">1<pos:position pos:line="31" pos:column="34"/></literal></expr>;<pos:position pos:line="31" pos:column="35"/></return></block></then></if></elseif> <comment type="block" pos:line="31" pos:column="36">/* we expect -B80/99 or -B80 */</comment>
		<else pos:line="32" pos:column="17">else <block pos:line="32" pos:column="22">{
			<expr_stmt><expr><name pos:line="33" pos:column="25">opt<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">++<pos:position pos:line="33" pos:column="30"/></operator></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
			<expr_stmt><expr><name pos:line="34" pos:column="25">opt2<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">=<pos:position pos:line="34" pos:column="31"/></operator> <call><name pos:line="34" pos:column="32">parse_rename_score<pos:position pos:line="34" pos:column="50"/></name><argument_list pos:line="34" pos:column="50">(<argument><expr><operator pos:line="34" pos:column="51">&amp;<pos:position pos:line="34" pos:column="56"/></operator><name pos:line="34" pos:column="52">opt<pos:position pos:line="34" pos:column="55"/></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="35" pos:column="18"/></block></else></if>
	}<pos:position pos:line="36" pos:column="10"/></block></else></if>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">*<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">opt<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">!=<pos:position pos:line="37" pos:column="20"/></operator> <literal type="number" pos:line="37" pos:column="21">0<pos:position pos:line="37" pos:column="22"/></literal></expr>)<pos:position pos:line="37" pos:column="23"/></condition><then pos:line="37" pos:column="23">
		<block type="pseudo"><return pos:line="38" pos:column="17">return <expr><operator pos:line="38" pos:column="24">-<pos:position pos:line="38" pos:column="25"/></operator><literal type="number" pos:line="38" pos:column="25">1<pos:position pos:line="38" pos:column="26"/></literal></expr>;<pos:position pos:line="38" pos:column="27"/></return></block></then></if>
	<return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">opt1<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">|<pos:position pos:line="39" pos:column="22"/></operator> <operator pos:line="39" pos:column="23">(<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">opt2<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">&lt;&lt;<pos:position pos:line="39" pos:column="37"/></operator> <literal type="number" pos:line="39" pos:column="32">16<pos:position pos:line="39" pos:column="34"/></literal><operator pos:line="39" pos:column="34">)<pos:position pos:line="39" pos:column="35"/></operator></expr>;<pos:position pos:line="39" pos:column="36"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

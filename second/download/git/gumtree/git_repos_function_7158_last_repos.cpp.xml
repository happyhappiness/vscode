<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7158_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name><name pos:line="1" pos:column="26">argv<pos:position pos:line="1" pos:column="30"/></name><index pos:line="1" pos:column="30">[]<pos:position pos:line="1" pos:column="32"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">EXIT_SUCCESS<pos:position pos:line="3" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">credential_operation<pos:position pos:line="5" pos:column="36"/></name></name> <specifier pos:line="5" pos:column="37">const<pos:position pos:line="5" pos:column="42"/></specifier> <modifier pos:line="5" pos:column="43">*<pos:position pos:line="5" pos:column="44"/></modifier></type><name pos:line="5" pos:column="44">try_op<pos:position pos:line="5" pos:column="50"/></name> <init pos:line="5" pos:column="51">= <expr><name pos:line="5" pos:column="53">credential_helper_ops<pos:position pos:line="5" pos:column="74"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="75"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">credential<pos:position pos:line="6" pos:column="26"/></name></name></type> <name pos:line="6" pos:column="27">cred<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><name pos:line="6" pos:column="34">CREDENTIAL_INIT<pos:position pos:line="6" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name><name pos:line="8" pos:column="14">argv<pos:position pos:line="8" pos:column="18"/></name><index pos:line="8" pos:column="18">[<expr><literal type="number" pos:line="8" pos:column="19">1<pos:position pos:line="8" pos:column="20"/></literal></expr>]<pos:position pos:line="8" pos:column="21"/></index></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22"> <block pos:line="8" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">usage<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name><name pos:line="9" pos:column="23">argv<pos:position pos:line="9" pos:column="27"/></name><index pos:line="9" pos:column="27">[<expr><literal type="number" pos:line="9" pos:column="28">0<pos:position pos:line="9" pos:column="29"/></literal></expr>]<pos:position pos:line="9" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">exit<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">EXIT_FAILURE<pos:position pos:line="10" pos:column="34"/></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">g_set_application_name<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><literal type="string" pos:line="13" pos:column="32">"Git Credential Helper"<pos:position pos:line="13" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="57"/></expr_stmt>

	<comment type="block" pos:line="15" pos:column="9">/* lookup operation callback */</comment>
	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><name><name pos:line="16" pos:column="16">try_op<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">name<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">&amp;&amp;<pos:position pos:line="16" pos:column="39"/></operator> <call><name pos:line="16" pos:column="32">strcmp<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name><name pos:line="16" pos:column="39">argv<pos:position pos:line="16" pos:column="43"/></name><index pos:line="16" pos:column="43">[<expr><literal type="number" pos:line="16" pos:column="44">1<pos:position pos:line="16" pos:column="45"/></literal></expr>]<pos:position pos:line="16" pos:column="46"/></index></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="48">try_op<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">-&gt;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="56">name<pos:position pos:line="16" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="62"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">try_op<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">++<pos:position pos:line="17" pos:column="25"/></operator></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt></block></while>

	<comment type="block" pos:line="19" pos:column="9">/* unsupported operation given -- ignore silently */</comment>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name><name pos:line="20" pos:column="14">try_op<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">-&gt;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">name<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">||<pos:position pos:line="20" pos:column="29"/></operator> <operator pos:line="20" pos:column="30">!<pos:position pos:line="20" pos:column="31"/></operator><name><name pos:line="20" pos:column="31">try_op<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">op<pos:position pos:line="20" pos:column="41"/></name></name></expr>)<pos:position pos:line="20" pos:column="42"/></condition><then pos:line="20" pos:column="42">
		<block type="pseudo"><goto pos:line="21" pos:column="17">goto <name pos:line="21" pos:column="22">out<pos:position pos:line="21" pos:column="25"/></name>;<pos:position pos:line="21" pos:column="26"/></goto></block></then></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">ret<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">credential_read<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><operator pos:line="23" pos:column="31">&amp;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="32">cred<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">ret<pos:position pos:line="24" pos:column="16"/></name></expr>)<pos:position pos:line="24" pos:column="17"/></condition><then pos:line="24" pos:column="17">
		<block type="pseudo"><goto pos:line="25" pos:column="17">goto <name pos:line="25" pos:column="22">out<pos:position pos:line="25" pos:column="25"/></name>;<pos:position pos:line="25" pos:column="26"/></goto></block></then></if>

	<comment type="block" pos:line="27" pos:column="9">/* perform credential operation */</comment>
	<expr_stmt><expr><name pos:line="28" pos:column="9">ret<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <call pos:line="28" pos:column="15">(<modifier pos:line="28" pos:column="16">*<pos:position pos:line="28" pos:column="17"/></modifier><name><name pos:line="28" pos:column="17">try_op<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">op<pos:position pos:line="28" pos:column="27"/></name></name>)<argument_list pos:line="28" pos:column="28">(<argument><expr><operator pos:line="28" pos:column="29">&amp;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="30">cred<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="30" pos:column="9">credential_write<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><operator pos:line="30" pos:column="26">&amp;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="27">cred<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>

<label><name pos:line="32" pos:column="1">out<pos:position pos:line="32" pos:column="4"/></name>:<pos:position pos:line="32" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">credential_clear<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><operator pos:line="33" pos:column="26">&amp;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="27">cred<pos:position pos:line="33" pos:column="31"/></name></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
	<return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">ret<pos:position pos:line="34" pos:column="19"/></name></expr>;<pos:position pos:line="34" pos:column="20"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2883_git-2.4.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">show_submodule_summary<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">FILE<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">f<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">path<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">line_prefix<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">unsigned<pos:position pos:line="3" pos:column="25"/></name> <name pos:line="3" pos:column="26">char<pos:position pos:line="3" pos:column="30"/></name></type> <name><name pos:line="3" pos:column="31">one<pos:position pos:line="3" pos:column="34"/></name><index pos:line="3" pos:column="34">[<expr><literal type="number" pos:line="3" pos:column="35">20<pos:position pos:line="3" pos:column="37"/></literal></expr>]<pos:position pos:line="3" pos:column="38"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="40">unsigned<pos:position pos:line="3" pos:column="48"/></name> <name pos:line="3" pos:column="49">char<pos:position pos:line="3" pos:column="53"/></name></type> <name><name pos:line="3" pos:column="54">two<pos:position pos:line="3" pos:column="57"/></name><index pos:line="3" pos:column="57">[<expr><literal type="number" pos:line="3" pos:column="58">20<pos:position pos:line="3" pos:column="60"/></literal></expr>]<pos:position pos:line="3" pos:column="61"/></index></name></decl></parameter>,
		<parameter><decl><type><name pos:line="4" pos:column="17">unsigned<pos:position pos:line="4" pos:column="25"/></name></type> <name pos:line="4" pos:column="26">dirty_submodule<pos:position pos:line="4" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="43">const<pos:position pos:line="4" pos:column="48"/></specifier> <name pos:line="4" pos:column="49">char<pos:position pos:line="4" pos:column="53"/></name> <modifier pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></modifier></type><name pos:line="4" pos:column="55">meta<pos:position pos:line="4" pos:column="59"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="5" pos:column="17">const<pos:position pos:line="5" pos:column="22"/></specifier> <name pos:line="5" pos:column="23">char<pos:position pos:line="5" pos:column="27"/></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">del<pos:position pos:line="5" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="5" pos:column="34">const<pos:position pos:line="5" pos:column="39"/></specifier> <name pos:line="5" pos:column="40">char<pos:position pos:line="5" pos:column="44"/></name> <modifier pos:line="5" pos:column="45">*<pos:position pos:line="5" pos:column="46"/></modifier></type><name pos:line="5" pos:column="46">add<pos:position pos:line="5" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="5" pos:column="51">const<pos:position pos:line="5" pos:column="56"/></specifier> <name pos:line="5" pos:column="57">char<pos:position pos:line="5" pos:column="61"/></name> <modifier pos:line="5" pos:column="62">*<pos:position pos:line="5" pos:column="63"/></modifier></type><name pos:line="5" pos:column="63">reset<pos:position pos:line="5" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="69"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">rev_info<pos:position pos:line="7" pos:column="24"/></name></name></type> <name pos:line="7" pos:column="25">rev<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">commit<pos:position pos:line="8" pos:column="22"/></name></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">left<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name pos:line="8" pos:column="31">NULL<pos:position pos:line="8" pos:column="35"/></name></expr></init></decl>, <modifier pos:line="8" pos:column="37">*<pos:position pos:line="8" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="38">right<pos:position pos:line="8" pos:column="43"/></name> <init pos:line="8" pos:column="44">= <expr><name pos:line="8" pos:column="46">NULL<pos:position pos:line="8" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">message<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><name pos:line="9" pos:column="31">NULL<pos:position pos:line="9" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">strbuf<pos:position pos:line="10" pos:column="22"/></name></name></type> <name pos:line="10" pos:column="23">sb<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><name pos:line="10" pos:column="28">STRBUF_INIT<pos:position pos:line="10" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">fast_forward<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><literal type="number" pos:line="11" pos:column="28">0<pos:position pos:line="11" pos:column="29"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="31">fast_backward<pos:position pos:line="11" pos:column="44"/></name> <init pos:line="11" pos:column="45">= <expr><literal type="number" pos:line="11" pos:column="47">0<pos:position pos:line="11" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="49"/></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">is_null_sha1<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">two<pos:position pos:line="13" pos:column="29"/></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">message<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <literal type="string" pos:line="14" pos:column="27">"(submodule deleted)"<pos:position pos:line="14" pos:column="48"/></literal></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt></block></then>
	<elseif pos:line="15" pos:column="9">else <if pos:line="15" pos:column="14">if <condition pos:line="15" pos:column="17">(<expr><call><name pos:line="15" pos:column="18">add_submodule_odb<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">path<pos:position pos:line="15" pos:column="40"/></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="17">message<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <literal type="string" pos:line="16" pos:column="27">"(not checked out)"<pos:position pos:line="16" pos:column="46"/></literal></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="17" pos:column="9">else <if pos:line="17" pos:column="14">if <condition pos:line="17" pos:column="17">(<expr><call><name pos:line="17" pos:column="18">is_null_sha1<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">one<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">message<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <literal type="string" pos:line="18" pos:column="27">"(new submodule)"<pos:position pos:line="18" pos:column="44"/></literal></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="19" pos:column="9">else <if pos:line="19" pos:column="14">if <condition pos:line="19" pos:column="17">(<expr><operator pos:line="19" pos:column="18">!<pos:position pos:line="19" pos:column="19"/></operator><operator pos:line="19" pos:column="19">(<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">left<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <call><name pos:line="19" pos:column="27">lookup_commit_reference<pos:position pos:line="19" pos:column="50"/></name><argument_list pos:line="19" pos:column="50">(<argument><expr><name pos:line="19" pos:column="51">one<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call><operator pos:line="19" pos:column="55">)<pos:position pos:line="19" pos:column="56"/></operator> <operator pos:line="19" pos:column="57">||<pos:position pos:line="19" pos:column="59"/></operator>
		 <operator pos:line="20" pos:column="18">!<pos:position pos:line="20" pos:column="19"/></operator><operator pos:line="20" pos:column="19">(<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">right<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">=<pos:position pos:line="20" pos:column="27"/></operator> <call><name pos:line="20" pos:column="28">lookup_commit_reference<pos:position pos:line="20" pos:column="51"/></name><argument_list pos:line="20" pos:column="51">(<argument><expr><name pos:line="20" pos:column="52">two<pos:position pos:line="20" pos:column="55"/></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call><operator pos:line="20" pos:column="56">)<pos:position pos:line="20" pos:column="57"/></operator></expr>)<pos:position pos:line="20" pos:column="58"/></condition><then pos:line="20" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">message<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <literal type="string" pos:line="21" pos:column="27">"(commits not present)"<pos:position pos:line="21" pos:column="50"/></literal></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="22" pos:column="9">else <if pos:line="22" pos:column="14">if <condition pos:line="22" pos:column="17">(<expr><call><name pos:line="22" pos:column="18">prepare_submodule_summary<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><operator pos:line="22" pos:column="44">&amp;<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="45">rev<pos:position pos:line="22" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="50">path<pos:position pos:line="22" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="56">left<pos:position pos:line="22" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="62">right<pos:position pos:line="22" pos:column="67"/></name></expr></argument>,
					   <argument><expr><operator pos:line="23" pos:column="44">&amp;<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="45">fast_forward<pos:position pos:line="23" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="59">&amp;<pos:position pos:line="23" pos:column="64"/></operator><name pos:line="23" pos:column="60">fast_backward<pos:position pos:line="23" pos:column="73"/></name></expr></argument>)<pos:position pos:line="23" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="75"/></condition><then pos:line="23" pos:column="75">
		<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">message<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <literal type="string" pos:line="24" pos:column="27">"(revision walker failed)"<pos:position pos:line="24" pos:column="53"/></literal></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">dirty_submodule<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">&amp;<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="31">DIRTY_SUBMODULE_UNTRACKED<pos:position pos:line="26" pos:column="56"/></name></expr>)<pos:position pos:line="26" pos:column="57"/></condition><then pos:line="26" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">fprintf<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">f<pos:position pos:line="27" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="28">"%sSubmodule %s contains untracked content\n"<pos:position pos:line="27" pos:column="73"/></literal></expr></argument>,
			<argument><expr><name pos:line="28" pos:column="25">line_prefix<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">path<pos:position pos:line="28" pos:column="42"/></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt></block></then></if>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">dirty_submodule<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">&amp;<pos:position pos:line="29" pos:column="34"/></operator> <name pos:line="29" pos:column="31">DIRTY_SUBMODULE_MODIFIED<pos:position pos:line="29" pos:column="55"/></name></expr>)<pos:position pos:line="29" pos:column="56"/></condition><then pos:line="29" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="17">fprintf<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">f<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="28">"%sSubmodule %s contains modified content\n"<pos:position pos:line="30" pos:column="72"/></literal></expr></argument>,
			<argument><expr><name pos:line="31" pos:column="25">line_prefix<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">path<pos:position pos:line="31" pos:column="42"/></name></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><call><name pos:line="33" pos:column="14">hashcmp<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">one<pos:position pos:line="33" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="27">two<pos:position pos:line="33" pos:column="30"/></name></expr></argument>)<pos:position pos:line="33" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="32"/></condition><then pos:line="33" pos:column="32"> <block pos:line="33" pos:column="33">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">strbuf_release<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><operator pos:line="34" pos:column="32">&amp;<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="33">sb<pos:position pos:line="34" pos:column="35"/></name></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt>
		<return pos:line="35" pos:column="17">return;<pos:position pos:line="35" pos:column="24"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="38" pos:column="9">strbuf_addf<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><operator pos:line="38" pos:column="21">&amp;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="22">sb<pos:position pos:line="38" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="26">"%s%sSubmodule %s %s.."<pos:position pos:line="38" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="51">line_prefix<pos:position pos:line="38" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="64">meta<pos:position pos:line="38" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="70">path<pos:position pos:line="38" pos:column="74"/></name></expr></argument>,
			<argument><expr><call><name pos:line="39" pos:column="25">find_unique_abbrev<pos:position pos:line="39" pos:column="43"/></name><argument_list pos:line="39" pos:column="43">(<argument><expr><name pos:line="39" pos:column="44">one<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="49">DEFAULT_ABBREV<pos:position pos:line="39" pos:column="63"/></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="66"/></expr_stmt>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">fast_backward<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">&amp;&amp;<pos:position pos:line="40" pos:column="38"/></operator> <operator pos:line="40" pos:column="31">!<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="32">fast_forward<pos:position pos:line="40" pos:column="44"/></name></expr>)<pos:position pos:line="40" pos:column="45"/></condition><then pos:line="40" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">strbuf_addch<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><operator pos:line="41" pos:column="30">&amp;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="31">sb<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="41" pos:column="35">'.'<pos:position pos:line="41" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">strbuf_addf<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><operator pos:line="42" pos:column="21">&amp;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="22">sb<pos:position pos:line="42" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="26">"%s"<pos:position pos:line="42" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="32">find_unique_abbrev<pos:position pos:line="42" pos:column="50"/></name><argument_list pos:line="42" pos:column="50">(<argument><expr><name pos:line="42" pos:column="51">two<pos:position pos:line="42" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="56">DEFAULT_ABBREV<pos:position pos:line="42" pos:column="70"/></name></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="73"/></expr_stmt>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">message<pos:position pos:line="43" pos:column="20"/></name></expr>)<pos:position pos:line="43" pos:column="21"/></condition><then pos:line="43" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="17">strbuf_addf<pos:position pos:line="44" pos:column="28"/></name><argument_list pos:line="44" pos:column="28">(<argument><expr><operator pos:line="44" pos:column="29">&amp;<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="30">sb<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="34">" %s%s\n"<pos:position pos:line="44" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="45">message<pos:position pos:line="44" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="54">reset<pos:position pos:line="44" pos:column="59"/></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt></block></then>
	<else pos:line="45" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="17">strbuf_addf<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><operator pos:line="46" pos:column="29">&amp;<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="30">sb<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="34">"%s:%s\n"<pos:position pos:line="46" pos:column="43"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="46" pos:column="45">fast_backward<pos:position pos:line="46" pos:column="58"/></name></expr> ?<pos:position pos:line="46" pos:column="60"/></condition><then pos:line="46" pos:column="60"> <expr><literal type="string" pos:line="46" pos:column="61">" (rewind)"<pos:position pos:line="46" pos:column="72"/></literal></expr> <pos:position pos:line="46" pos:column="73"/></then><else pos:line="46" pos:column="73">: <expr><literal type="string" pos:line="46" pos:column="75">""<pos:position pos:line="46" pos:column="77"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="46" pos:column="79">reset<pos:position pos:line="46" pos:column="84"/></name></expr></argument>)<pos:position pos:line="46" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="86"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">fwrite<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">(<argument><expr><name><name pos:line="47" pos:column="16">sb<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">.<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="19">buf<pos:position pos:line="47" pos:column="22"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="24">sb<pos:position pos:line="47" pos:column="26"/></name><operator pos:line="47" pos:column="26">.<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="27">len<pos:position pos:line="47" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="32">1<pos:position pos:line="47" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="35">f<pos:position pos:line="47" pos:column="36"/></name></expr></argument>)<pos:position pos:line="47" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>

	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">message<pos:position pos:line="49" pos:column="21"/></name></expr>)<pos:position pos:line="49" pos:column="22"/></condition><then pos:line="49" pos:column="22"> <comment type="block" pos:line="49" pos:column="23">/* only NULL if we succeeded in setting up the walk */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="17">print_submodule_summary<pos:position pos:line="50" pos:column="40"/></name><argument_list pos:line="50" pos:column="40">(<argument><expr><operator pos:line="50" pos:column="41">&amp;<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="42">rev<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">f<pos:position pos:line="50" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="50">line_prefix<pos:position pos:line="50" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="63">del<pos:position pos:line="50" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="68">add<pos:position pos:line="50" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="73">reset<pos:position pos:line="50" pos:column="78"/></name></expr></argument>)<pos:position pos:line="50" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="80"/></expr_stmt></block></then></if>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">left<pos:position pos:line="51" pos:column="17"/></name></expr>)<pos:position pos:line="51" pos:column="18"/></condition><then pos:line="51" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="17">clear_commit_marks<pos:position pos:line="52" pos:column="35"/></name><argument_list pos:line="52" pos:column="35">(<argument><expr><name pos:line="52" pos:column="36">left<pos:position pos:line="52" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="42">~<pos:position pos:line="52" pos:column="43"/></operator><literal type="number" pos:line="52" pos:column="43">0<pos:position pos:line="52" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="46"/></expr_stmt></block></then></if>
	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">right<pos:position pos:line="53" pos:column="18"/></name></expr>)<pos:position pos:line="53" pos:column="19"/></condition><then pos:line="53" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="17">clear_commit_marks<pos:position pos:line="54" pos:column="35"/></name><argument_list pos:line="54" pos:column="35">(<argument><expr><name pos:line="54" pos:column="36">right<pos:position pos:line="54" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="43">~<pos:position pos:line="54" pos:column="44"/></operator><literal type="number" pos:line="54" pos:column="44">0<pos:position pos:line="54" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="47"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="56" pos:column="9">strbuf_release<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">(<argument><expr><operator pos:line="56" pos:column="24">&amp;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="25">sb<pos:position pos:line="56" pos:column="27"/></name></expr></argument>)<pos:position pos:line="56" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5156_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">checkout_file<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">name<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">prefix<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">namelen<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><call><name pos:line="3" pos:column="23">strlen<pos:position pos:line="3" pos:column="29"/></name><argument_list pos:line="3" pos:column="29">(<argument><expr><name pos:line="3" pos:column="30">name<pos:position pos:line="3" pos:column="34"/></name></expr></argument>)<pos:position pos:line="3" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">pos<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">cache_name_pos<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><name pos:line="4" pos:column="34">name<pos:position pos:line="4" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="40">namelen<pos:position pos:line="4" pos:column="47"/></name></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">has_same_name<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">did_checkout<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">errs<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">pos<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&lt;<pos:position pos:line="9" pos:column="21"/></operator> <literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">pos<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <operator pos:line="10" pos:column="23">-<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">pos<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">-<pos:position pos:line="10" pos:column="29"/></operator> <literal type="number" pos:line="10" pos:column="30">1<pos:position pos:line="10" pos:column="31"/></literal></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt></block></then></if>

	<while pos:line="12" pos:column="9">while <condition pos:line="12" pos:column="15">(<expr><name pos:line="12" pos:column="16">pos<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">&lt;<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="22">active_nr<pos:position pos:line="12" pos:column="31"/></name></expr>)<pos:position pos:line="12" pos:column="32"/></condition> <block pos:line="12" pos:column="33">{
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">struct<pos:position pos:line="13" pos:column="23"/></name> <name pos:line="13" pos:column="24">cache_entry<pos:position pos:line="13" pos:column="35"/></name></name> <modifier pos:line="13" pos:column="36">*<pos:position pos:line="13" pos:column="37"/></modifier></type><name pos:line="13" pos:column="37">ce<pos:position pos:line="13" pos:column="39"/></name> <init pos:line="13" pos:column="40">= <expr><name><name pos:line="13" pos:column="42">active_cache<pos:position pos:line="13" pos:column="54"/></name><index pos:line="13" pos:column="54">[<expr><name pos:line="13" pos:column="55">pos<pos:position pos:line="13" pos:column="58"/></name></expr>]<pos:position pos:line="13" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="13" pos:column="60"/></decl_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">ce_namelen<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">ce<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call> <operator pos:line="14" pos:column="36">!=<pos:position pos:line="14" pos:column="38"/></operator> <name pos:line="14" pos:column="39">namelen<pos:position pos:line="14" pos:column="46"/></name> <operator pos:line="14" pos:column="47">||<pos:position pos:line="14" pos:column="49"/></operator>
		    <call><name pos:line="15" pos:column="21">memcmp<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name><name pos:line="15" pos:column="28">ce<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">name<pos:position pos:line="15" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">name<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">namelen<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="53"/></condition><then pos:line="15" pos:column="53">
			<block type="pseudo"><break pos:line="16" pos:column="25">break;<pos:position pos:line="16" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="17" pos:column="17">has_same_name<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">=<pos:position pos:line="17" pos:column="32"/></operator> <literal type="number" pos:line="17" pos:column="33">1<pos:position pos:line="17" pos:column="34"/></literal></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">pos<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">++<pos:position pos:line="18" pos:column="22"/></operator></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><call><name pos:line="19" pos:column="21">ce_stage<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">ce<pos:position pos:line="19" pos:column="32"/></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call> <operator pos:line="19" pos:column="34">!=<pos:position pos:line="19" pos:column="36"/></operator> <name pos:line="19" pos:column="37">checkout_stage<pos:position pos:line="19" pos:column="51"/></name>
		    <operator pos:line="20" pos:column="21">&amp;&amp;<pos:position pos:line="20" pos:column="31"/></operator> <operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">CHECKOUT_ALL<pos:position pos:line="20" pos:column="37"/></name> <operator pos:line="20" pos:column="38">!=<pos:position pos:line="20" pos:column="40"/></operator> <name pos:line="20" pos:column="41">checkout_stage<pos:position pos:line="20" pos:column="55"/></name> <operator pos:line="20" pos:column="56">||<pos:position pos:line="20" pos:column="58"/></operator> <operator pos:line="20" pos:column="59">!<pos:position pos:line="20" pos:column="60"/></operator><call><name pos:line="20" pos:column="60">ce_stage<pos:position pos:line="20" pos:column="68"/></name><argument_list pos:line="20" pos:column="68">(<argument><expr><name pos:line="20" pos:column="69">ce<pos:position pos:line="20" pos:column="71"/></name></expr></argument>)<pos:position pos:line="20" pos:column="72"/></argument_list></call><operator pos:line="20" pos:column="72">)<pos:position pos:line="20" pos:column="73"/></operator></expr>)<pos:position pos:line="20" pos:column="74"/></condition><then pos:line="20" pos:column="74">
			<block type="pseudo"><continue pos:line="21" pos:column="25">continue;<pos:position pos:line="21" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="22" pos:column="17">did_checkout<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <literal type="number" pos:line="22" pos:column="32">1<pos:position pos:line="22" pos:column="33"/></literal></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">checkout_entry<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">ce<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="40">&amp;<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="41">state<pos:position pos:line="23" pos:column="46"/></name></expr></argument>,
		    <argument><expr><ternary><condition><expr><name pos:line="24" pos:column="21">to_tempfile<pos:position pos:line="24" pos:column="32"/></name></expr> ?<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34"> <expr><name><name pos:line="24" pos:column="35">topath<pos:position pos:line="24" pos:column="41"/></name><index pos:line="24" pos:column="41">[<expr><call><name pos:line="24" pos:column="42">ce_stage<pos:position pos:line="24" pos:column="50"/></name><argument_list pos:line="24" pos:column="50">(<argument><expr><name pos:line="24" pos:column="51">ce<pos:position pos:line="24" pos:column="53"/></name></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr>]<pos:position pos:line="24" pos:column="55"/></index></name></expr> <pos:position pos:line="24" pos:column="56"/></then><else pos:line="24" pos:column="56">: <expr><name pos:line="24" pos:column="58">NULL<pos:position pos:line="24" pos:column="62"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call> <operator pos:line="24" pos:column="64">&lt;<pos:position pos:line="24" pos:column="68"/></operator> <literal type="number" pos:line="24" pos:column="66">0<pos:position pos:line="24" pos:column="67"/></literal></expr>)<pos:position pos:line="24" pos:column="68"/></condition><then pos:line="24" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="25">errs<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">++<pos:position pos:line="25" pos:column="31"/></operator></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></while>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">did_checkout<pos:position pos:line="28" pos:column="25"/></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26"> <block pos:line="28" pos:column="27">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">to_tempfile<pos:position pos:line="29" pos:column="32"/></name></expr>)<pos:position pos:line="29" pos:column="33"/></condition><then pos:line="29" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">write_tempfile_record<pos:position pos:line="30" pos:column="46"/></name><argument_list pos:line="30" pos:column="46">(<argument><expr><name pos:line="30" pos:column="47">name<pos:position pos:line="30" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="53">prefix<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt></block></then></if>
		<return pos:line="31" pos:column="17">return <expr><ternary><condition><expr><name pos:line="31" pos:column="24">errs<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">&gt;<pos:position pos:line="31" pos:column="33"/></operator> <literal type="number" pos:line="31" pos:column="31">0<pos:position pos:line="31" pos:column="32"/></literal></expr> ?<pos:position pos:line="31" pos:column="34"/></condition><then pos:line="31" pos:column="34"> <expr><operator pos:line="31" pos:column="35">-<pos:position pos:line="31" pos:column="36"/></operator><literal type="number" pos:line="31" pos:column="36">1<pos:position pos:line="31" pos:column="37"/></literal></expr> <pos:position pos:line="31" pos:column="38"/></then><else pos:line="31" pos:column="38">: <expr><literal type="number" pos:line="31" pos:column="40">0<pos:position pos:line="31" pos:column="41"/></literal></expr></else></ternary></expr>;<pos:position pos:line="31" pos:column="42"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><name><name pos:line="34" pos:column="14">state<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">.<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="20">quiet<pos:position pos:line="34" pos:column="25"/></name></name></expr>)<pos:position pos:line="34" pos:column="26"/></condition><then pos:line="34" pos:column="26"> <block pos:line="34" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">fprintf<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">stderr<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="33">"git checkout-index: %s "<pos:position pos:line="35" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="60">name<pos:position pos:line="35" pos:column="64"/></name></expr></argument>)<pos:position pos:line="35" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="66"/></expr_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">has_same_name<pos:position pos:line="36" pos:column="35"/></name></expr>)<pos:position pos:line="36" pos:column="36"/></condition><then pos:line="36" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">fprintf<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">stderr<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="41">"is not in the cache"<pos:position pos:line="37" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="64"/></expr_stmt></block></then>
		<elseif pos:line="38" pos:column="17">else <if pos:line="38" pos:column="22">if <condition pos:line="38" pos:column="25">(<expr><name pos:line="38" pos:column="26">checkout_stage<pos:position pos:line="38" pos:column="40"/></name></expr>)<pos:position pos:line="38" pos:column="41"/></condition><then pos:line="38" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">fprintf<pos:position pos:line="39" pos:column="32"/></name><argument_list pos:line="39" pos:column="32">(<argument><expr><name pos:line="39" pos:column="33">stderr<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="41">"does not exist at stage %d"<pos:position pos:line="39" pos:column="69"/></literal></expr></argument>,
				<argument><expr><name pos:line="40" pos:column="33">checkout_stage<pos:position pos:line="40" pos:column="47"/></name></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt></block></then></if></elseif>
		<else pos:line="41" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="25">fprintf<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">stderr<pos:position pos:line="42" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="41">"is unmerged"<pos:position pos:line="42" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="56"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">fputc<pos:position pos:line="43" pos:column="22"/></name><argument_list pos:line="43" pos:column="22">(<argument><expr><literal type="char" pos:line="43" pos:column="23">'\n'<pos:position pos:line="43" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="29">stderr<pos:position pos:line="43" pos:column="35"/></name></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>
	<return pos:line="45" pos:column="9">return <expr><operator pos:line="45" pos:column="16">-<pos:position pos:line="45" pos:column="17"/></operator><literal type="number" pos:line="45" pos:column="17">1<pos:position pos:line="45" pos:column="18"/></literal></expr>;<pos:position pos:line="45" pos:column="19"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2458_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">match_pathspec<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">pathspec<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ps<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>,
		   <parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">name<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">namelen<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="3" pos:column="20">int<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">prefix<pos:position pos:line="3" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="32">char<pos:position pos:line="3" pos:column="36"/></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">seen<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="44">int<pos:position pos:line="3" pos:column="47"/></name></type> <name pos:line="3" pos:column="48">is_dir<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="55"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">positive<pos:position pos:line="5" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="23">negative<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">flags<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><ternary><condition><expr><name pos:line="6" pos:column="26">is_dir<pos:position pos:line="6" pos:column="32"/></name></expr> ?<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34"> <expr><name pos:line="6" pos:column="35">DO_MATCH_DIRECTORY<pos:position pos:line="6" pos:column="53"/></name></expr> <pos:position pos:line="6" pos:column="54"/></then><else pos:line="6" pos:column="54">: <expr><literal type="number" pos:line="6" pos:column="56">0<pos:position pos:line="6" pos:column="57"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="58"/></decl_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">positive<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <call><name pos:line="7" pos:column="20">do_match_pathspec<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><name pos:line="7" pos:column="38">ps<pos:position pos:line="7" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="42">name<pos:position pos:line="7" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="48">namelen<pos:position pos:line="7" pos:column="55"/></name></expr></argument>,
				     <argument><expr><name pos:line="8" pos:column="38">prefix<pos:position pos:line="8" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="46">seen<pos:position pos:line="8" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="52">flags<pos:position pos:line="8" pos:column="57"/></name></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><operator pos:line="9" pos:column="14">(<pos:position pos:line="9" pos:column="15"/></operator><name><name pos:line="9" pos:column="15">ps<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">magic<pos:position pos:line="9" pos:column="24"/></name></name> <operator pos:line="9" pos:column="25">&amp;<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="27">PATHSPEC_EXCLUDE<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">)<pos:position pos:line="9" pos:column="44"/></operator> <operator pos:line="9" pos:column="45">||<pos:position pos:line="9" pos:column="47"/></operator> <operator pos:line="9" pos:column="48">!<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="49">positive<pos:position pos:line="9" pos:column="57"/></name></expr>)<pos:position pos:line="9" pos:column="58"/></condition><then pos:line="9" pos:column="58">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><name pos:line="10" pos:column="24">positive<pos:position pos:line="10" pos:column="32"/></name></expr>;<pos:position pos:line="10" pos:column="33"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="11" pos:column="9">negative<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <call><name pos:line="11" pos:column="20">do_match_pathspec<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">ps<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">name<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">namelen<pos:position pos:line="11" pos:column="55"/></name></expr></argument>,
				     <argument><expr><name pos:line="12" pos:column="38">prefix<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">seen<pos:position pos:line="12" pos:column="50"/></name></expr></argument>,
				     <argument><expr><name pos:line="13" pos:column="38">flags<pos:position pos:line="13" pos:column="43"/></name> <operator pos:line="13" pos:column="44">|<pos:position pos:line="13" pos:column="45"/></operator> <name pos:line="13" pos:column="46">DO_MATCH_EXCLUDE<pos:position pos:line="13" pos:column="62"/></name></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>
	<return pos:line="14" pos:column="9">return <expr><ternary><condition><expr><name pos:line="14" pos:column="16">negative<pos:position pos:line="14" pos:column="24"/></name></expr> ?<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26"> <expr><literal type="number" pos:line="14" pos:column="27">0<pos:position pos:line="14" pos:column="28"/></literal></expr> <pos:position pos:line="14" pos:column="29"/></then><else pos:line="14" pos:column="29">: <expr><name pos:line="14" pos:column="31">positive<pos:position pos:line="14" pos:column="39"/></name></expr></else></ternary></expr>;<pos:position pos:line="14" pos:column="40"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

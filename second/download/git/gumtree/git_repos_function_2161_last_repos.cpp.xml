<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2161_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mkdir_in_gitdir<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">path<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">mkdir<pos:position pos:line="3" pos:column="18"/></name><argument_list pos:line="3" pos:column="18">(<argument><expr><name pos:line="3" pos:column="19">path<pos:position pos:line="3" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="25">0777<pos:position pos:line="3" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="31"/></condition><then pos:line="3" pos:column="31"> <block pos:line="3" pos:column="32">{
		<decl_stmt><decl><type><name pos:line="4" pos:column="17">int<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">saved_errno<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name pos:line="4" pos:column="35">errno<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="5" pos:column="17">struct<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">stat<pos:position pos:line="5" pos:column="28"/></name></name></type> <name pos:line="5" pos:column="29">st<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">struct<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">strbuf<pos:position pos:line="6" pos:column="30"/></name></name></type> <name pos:line="6" pos:column="31">sb<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><name pos:line="6" pos:column="36">STRBUF_INIT<pos:position pos:line="6" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>

		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">errno<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">!=<pos:position pos:line="8" pos:column="29"/></operator> <name pos:line="8" pos:column="30">EEXIST<pos:position pos:line="8" pos:column="36"/></name></expr>)<pos:position pos:line="8" pos:column="37"/></condition><then pos:line="8" pos:column="37">
			<block type="pseudo"><return pos:line="9" pos:column="25">return <expr><operator pos:line="9" pos:column="32">-<pos:position pos:line="9" pos:column="33"/></operator><literal type="number" pos:line="9" pos:column="33">1<pos:position pos:line="9" pos:column="34"/></literal></expr>;<pos:position pos:line="9" pos:column="35"/></return></block></then></if>
		<comment type="block" pos:line="10" pos:column="17">/*
		 * Are we looking at a path in a symlinked worktree
		 * whose original repository does not yet have it?
		 * e.g. .git/rr-cache pointing at its original
		 * repository in which the user hasn't performed any
		 * conflict resolution yet?
		 */</comment>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">lstat<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">path<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="33">&amp;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="34">st<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call> <operator pos:line="17" pos:column="38">||<pos:position pos:line="17" pos:column="40"/></operator> <operator pos:line="17" pos:column="41">!<pos:position pos:line="17" pos:column="42"/></operator><call><name pos:line="17" pos:column="42">S_ISLNK<pos:position pos:line="17" pos:column="49"/></name><argument_list pos:line="17" pos:column="49">(<argument><expr><name><name pos:line="17" pos:column="50">st<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">.<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="53">st_mode<pos:position pos:line="17" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call> <operator pos:line="17" pos:column="62">||<pos:position pos:line="17" pos:column="64"/></operator>
		    <call><name pos:line="18" pos:column="21">strbuf_readlink<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><operator pos:line="18" pos:column="37">&amp;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="38">sb<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="42">path<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="48">st<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">.<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="51">st_size<pos:position pos:line="18" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call> <operator pos:line="18" pos:column="60">||<pos:position pos:line="18" pos:column="62"/></operator>
		    <operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><call><name pos:line="19" pos:column="22">is_absolute_path<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name><name pos:line="19" pos:column="39">sb<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">.<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">buf<pos:position pos:line="19" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call> <operator pos:line="19" pos:column="47">||<pos:position pos:line="19" pos:column="49"/></operator>
		    <call><name pos:line="20" pos:column="21">mkdir<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name><name pos:line="20" pos:column="27">sb<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">.<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">buf<pos:position pos:line="20" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="35">0777<pos:position pos:line="20" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">strbuf_release<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><operator pos:line="21" pos:column="40">&amp;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="41">sb<pos:position pos:line="21" pos:column="43"/></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">errno<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">=<pos:position pos:line="22" pos:column="32"/></operator> <name pos:line="22" pos:column="33">saved_errno<pos:position pos:line="22" pos:column="44"/></name></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
			<return pos:line="23" pos:column="25">return <expr><operator pos:line="23" pos:column="32">-<pos:position pos:line="23" pos:column="33"/></operator><literal type="number" pos:line="23" pos:column="33">1<pos:position pos:line="23" pos:column="34"/></literal></expr>;<pos:position pos:line="23" pos:column="35"/></return>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">strbuf_release<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><operator pos:line="25" pos:column="32">&amp;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="33">sb<pos:position pos:line="25" pos:column="35"/></name></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>
	<return pos:line="27" pos:column="9">return <expr><call><name pos:line="27" pos:column="16">adjust_shared_perm<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">path<pos:position pos:line="27" pos:column="39"/></name></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="41"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

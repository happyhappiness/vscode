<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6857_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">msegmentptr<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">segment_holding<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">mstate<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">m<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type> <name pos:line="1" pos:column="52">addr<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list> <block pos:line="1" pos:column="58">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">msegmentptr<pos:position pos:line="2" pos:column="14"/></name></type> <name pos:line="2" pos:column="15">sp<pos:position pos:line="2" pos:column="17"/></name> <init pos:line="2" pos:column="18">= <expr><operator pos:line="2" pos:column="20">&amp;<pos:position pos:line="2" pos:column="25"/></operator><name><name pos:line="2" pos:column="21">m<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">-&gt;<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="24">seg<pos:position pos:line="2" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="2" pos:column="28"/></decl_stmt>
  <for pos:line="3" pos:column="3">for <control pos:line="3" pos:column="7">(<init pos:line="3" pos:column="8">;<pos:position pos:line="3" pos:column="9"/></init><condition pos:line="3" pos:column="9">;<pos:position pos:line="3" pos:column="10"/></condition><incr/>)<pos:position pos:line="3" pos:column="11"/></control> <block pos:line="3" pos:column="12">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">addr<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">&gt;=<pos:position pos:line="4" pos:column="19"/></operator> <name><name pos:line="4" pos:column="17">sp<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">base<pos:position pos:line="4" pos:column="25"/></name></name> <operator pos:line="4" pos:column="26">&amp;&amp;<pos:position pos:line="4" pos:column="36"/></operator> <name pos:line="4" pos:column="29">addr<pos:position pos:line="4" pos:column="33"/></name> <operator pos:line="4" pos:column="34">&lt;<pos:position pos:line="4" pos:column="38"/></operator> <name><name pos:line="4" pos:column="36">sp<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">-&gt;<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="40">base<pos:position pos:line="4" pos:column="44"/></name></name> <operator pos:line="4" pos:column="45">+<pos:position pos:line="4" pos:column="46"/></operator> <name><name pos:line="4" pos:column="47">sp<pos:position pos:line="4" pos:column="49"/></name><operator pos:line="4" pos:column="49">-&gt;<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="51">size<pos:position pos:line="4" pos:column="55"/></name></name></expr>)<pos:position pos:line="4" pos:column="56"/></condition><then pos:line="4" pos:column="56">
      <block type="pseudo"><return pos:line="5" pos:column="7">return <expr><name pos:line="5" pos:column="14">sp<pos:position pos:line="5" pos:column="16"/></name></expr>;<pos:position pos:line="5" pos:column="17"/></return></block></then></if>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">sp<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <name><name pos:line="6" pos:column="15">sp<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">next<pos:position pos:line="6" pos:column="23"/></name></name><operator pos:line="6" pos:column="23">)<pos:position pos:line="6" pos:column="24"/></operator> <operator pos:line="6" pos:column="25">==<pos:position pos:line="6" pos:column="27"/></operator> <literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr>)<pos:position pos:line="6" pos:column="30"/></condition><then pos:line="6" pos:column="30">
      <block type="pseudo"><return pos:line="7" pos:column="7">return <expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr>;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>
  }<pos:position pos:line="8" pos:column="4"/></block></for>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

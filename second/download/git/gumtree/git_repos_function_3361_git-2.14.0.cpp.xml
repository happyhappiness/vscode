<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3361_git-2.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name><modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type> <name pos:line="1" pos:column="14">getdir<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">buf<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">STRBUF_INIT<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">pathinfo<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><call><name pos:line="4" pos:column="26">getenv<pos:position pos:line="4" pos:column="32"/></name><argument_list pos:line="4" pos:column="32">(<argument><expr><literal type="string" pos:line="4" pos:column="33">"PATH_INFO"<pos:position pos:line="4" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">root<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><call><name pos:line="5" pos:column="22">getenv<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><literal type="string" pos:line="5" pos:column="29">"GIT_PROJECT_ROOT"<pos:position pos:line="5" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">path<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><call><name pos:line="6" pos:column="22">getenv<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><literal type="string" pos:line="6" pos:column="29">"PATH_TRANSLATED"<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">root<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&amp;&amp;<pos:position pos:line="8" pos:column="28"/></operator> <operator pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">root<pos:position pos:line="8" pos:column="26"/></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27"> <block pos:line="8" pos:column="28">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">pathinfo<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">||<pos:position pos:line="9" pos:column="33"/></operator> <operator pos:line="9" pos:column="34">!<pos:position pos:line="9" pos:column="35"/></operator><operator pos:line="9" pos:column="35">*<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="36">pathinfo<pos:position pos:line="9" pos:column="44"/></name></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">die<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><literal type="string" pos:line="10" pos:column="29">"GIT_PROJECT_ROOT is set but PATH_INFO is not"<pos:position pos:line="10" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></expr_stmt></block></then></if>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">daemon_avoid_alias<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">pathinfo<pos:position pos:line="11" pos:column="48"/></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="50"/></condition><then pos:line="11" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">die<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><literal type="string" pos:line="12" pos:column="29">"'%s': aliased"<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">pathinfo<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">end_url_with_slash<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><operator pos:line="13" pos:column="36">&amp;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="37">buf<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">root<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name><name pos:line="14" pos:column="21">pathinfo<pos:position pos:line="14" pos:column="29"/></name><index pos:line="14" pos:column="29">[<expr><literal type="number" pos:line="14" pos:column="30">0<pos:position pos:line="14" pos:column="31"/></literal></expr>]<pos:position pos:line="14" pos:column="32"/></index></name> <operator pos:line="14" pos:column="33">==<pos:position pos:line="14" pos:column="35"/></operator> <literal type="char" pos:line="14" pos:column="36">'/'<pos:position pos:line="14" pos:column="39"/></literal></expr>)<pos:position pos:line="14" pos:column="40"/></condition><then pos:line="14" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">pathinfo<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">++<pos:position pos:line="15" pos:column="35"/></operator></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">strbuf_addstr<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><operator pos:line="16" pos:column="31">&amp;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="32">buf<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">pathinfo<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><call><name pos:line="17" pos:column="24">strbuf_detach<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><operator pos:line="17" pos:column="38">&amp;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="39">buf<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">NULL<pos:position pos:line="17" pos:column="48"/></name></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="50"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then> <elseif pos:line="18" pos:column="11">else <if pos:line="18" pos:column="16">if <condition pos:line="18" pos:column="19">(<expr><name pos:line="18" pos:column="20">path<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">&amp;&amp;<pos:position pos:line="18" pos:column="35"/></operator> <operator pos:line="18" pos:column="28">*<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">path<pos:position pos:line="18" pos:column="33"/></name></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34"> <block pos:line="18" pos:column="35">{
		<return pos:line="19" pos:column="17">return <expr><call><name pos:line="19" pos:column="24">xstrdup<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">path<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if></elseif> <else pos:line="20" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">die<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><literal type="string" pos:line="21" pos:column="21">"No GIT_PROJECT_ROOT or PATH_TRANSLATED from server"<pos:position pos:line="21" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="75"/></expr_stmt></block></else></if>
	<return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">NULL<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4461_git-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">create_one_file<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">path<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">unsigned<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">mode<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">buf<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="73">unsigned<pos:position pos:line="1" pos:column="81"/></name> <name pos:line="1" pos:column="82">long<pos:position pos:line="1" pos:column="86"/></name></type> <name pos:line="1" pos:column="87">size<pos:position pos:line="1" pos:column="91"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="92"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">cached<pos:position pos:line="3" pos:column="19"/></name></expr>)<pos:position pos:line="3" pos:column="20"/></condition><then pos:line="3" pos:column="20">
		<block type="pseudo"><return pos:line="4" pos:column="17">return;<pos:position pos:line="4" pos:column="24"/></return></block></then></if>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><call><name pos:line="5" pos:column="14">try_create_file<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">path<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="36">mode<pos:position pos:line="5" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="42">buf<pos:position pos:line="5" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="47">size<pos:position pos:line="5" pos:column="51"/></name></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="53"/></condition><then pos:line="5" pos:column="53">
		<block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">errno<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">==<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="22">ENOENT<pos:position pos:line="8" pos:column="28"/></name></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <block pos:line="8" pos:column="30">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">safe_create_leading_directories<pos:position pos:line="9" pos:column="52"/></name><argument_list pos:line="9" pos:column="52">(<argument><expr><name pos:line="9" pos:column="53">path<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="59"/></condition><then pos:line="9" pos:column="59">
			<block type="pseudo"><return pos:line="10" pos:column="25">return;<pos:position pos:line="10" pos:column="32"/></return></block></then></if>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><call><name pos:line="11" pos:column="22">try_create_file<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">path<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="44">mode<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">buf<pos:position pos:line="11" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="55">size<pos:position pos:line="11" pos:column="59"/></name></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="61"/></condition><then pos:line="11" pos:column="61">
			<block type="pseudo"><return pos:line="12" pos:column="25">return;<pos:position pos:line="12" pos:column="32"/></return></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">errno<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">==<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="22">EEXIST<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">||<pos:position pos:line="15" pos:column="31"/></operator> <name pos:line="15" pos:column="32">errno<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">==<pos:position pos:line="15" pos:column="40"/></operator> <name pos:line="15" pos:column="41">EACCES<pos:position pos:line="15" pos:column="47"/></name></expr>)<pos:position pos:line="15" pos:column="48"/></condition><then pos:line="15" pos:column="48"> <block pos:line="15" pos:column="49">{
		<comment type="block" pos:line="16" pos:column="17">/* We may be trying to create a file where a directory
		 * used to be.
		 */</comment>
		<decl_stmt><decl><type><name><name pos:line="19" pos:column="17">struct<pos:position pos:line="19" pos:column="23"/></name> <name pos:line="19" pos:column="24">stat<pos:position pos:line="19" pos:column="28"/></name></name></type> <name pos:line="19" pos:column="29">st<pos:position pos:line="19" pos:column="31"/></name></decl>;<pos:position pos:line="19" pos:column="32"/></decl_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><call><name pos:line="20" pos:column="22">lstat<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">path<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="34">&amp;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="35">st<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call> <operator pos:line="20" pos:column="39">&amp;&amp;<pos:position pos:line="20" pos:column="49"/></operator> <operator pos:line="20" pos:column="42">(<pos:position pos:line="20" pos:column="43"/></operator><operator pos:line="20" pos:column="43">!<pos:position pos:line="20" pos:column="44"/></operator><call><name pos:line="20" pos:column="44">S_ISDIR<pos:position pos:line="20" pos:column="51"/></name><argument_list pos:line="20" pos:column="51">(<argument><expr><name><name pos:line="20" pos:column="52">st<pos:position pos:line="20" pos:column="54"/></name><operator pos:line="20" pos:column="54">.<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="55">st_mode<pos:position pos:line="20" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call> <operator pos:line="20" pos:column="64">||<pos:position pos:line="20" pos:column="66"/></operator> <operator pos:line="20" pos:column="67">!<pos:position pos:line="20" pos:column="68"/></operator><call><name pos:line="20" pos:column="68">rmdir<pos:position pos:line="20" pos:column="73"/></name><argument_list pos:line="20" pos:column="73">(<argument><expr><name pos:line="20" pos:column="74">path<pos:position pos:line="20" pos:column="78"/></name></expr></argument>)<pos:position pos:line="20" pos:column="79"/></argument_list></call><operator pos:line="20" pos:column="79">)<pos:position pos:line="20" pos:column="80"/></operator></expr>)<pos:position pos:line="20" pos:column="81"/></condition><then pos:line="20" pos:column="81">
			<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="25">errno<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="33">EEXIST<pos:position pos:line="21" pos:column="39"/></name></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">errno<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">==<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">EEXIST<pos:position pos:line="24" pos:column="28"/></name></expr>)<pos:position pos:line="24" pos:column="29"/></condition><then pos:line="24" pos:column="29"> <block pos:line="24" pos:column="30">{
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">unsigned<pos:position pos:line="25" pos:column="25"/></name> <name pos:line="25" pos:column="26">int<pos:position pos:line="25" pos:column="29"/></name></type> <name pos:line="25" pos:column="30">nr<pos:position pos:line="25" pos:column="32"/></name> <init pos:line="25" pos:column="33">= <expr><call><name pos:line="25" pos:column="35">getpid<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">()<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="44"/></decl_stmt>

		<for pos:line="27" pos:column="17">for <control pos:line="27" pos:column="21">(<init pos:line="27" pos:column="22">;<pos:position pos:line="27" pos:column="23"/></init><condition pos:line="27" pos:column="23">;<pos:position pos:line="27" pos:column="24"/></condition><incr/>)<pos:position pos:line="27" pos:column="25"/></control> <block pos:line="27" pos:column="26">{
			<decl_stmt><decl><type><name pos:line="28" pos:column="25">char<pos:position pos:line="28" pos:column="29"/></name></type> <name><name pos:line="28" pos:column="30">newpath<pos:position pos:line="28" pos:column="37"/></name><index pos:line="28" pos:column="37">[<expr><name pos:line="28" pos:column="38">PATH_MAX<pos:position pos:line="28" pos:column="46"/></name></expr>]<pos:position pos:line="28" pos:column="47"/></index></name></decl>;<pos:position pos:line="28" pos:column="48"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">mksnpath<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">newpath<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="43">sizeof<argument_list pos:line="29" pos:column="49">(<argument><expr><name pos:line="29" pos:column="50">newpath<pos:position pos:line="29" pos:column="57"/></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="60">"%s~%u"<pos:position pos:line="29" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="69">path<pos:position pos:line="29" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="75">nr<pos:position pos:line="29" pos:column="77"/></name></expr></argument>)<pos:position pos:line="29" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="79"/></expr_stmt>
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><operator pos:line="30" pos:column="29">!<pos:position pos:line="30" pos:column="30"/></operator><call><name pos:line="30" pos:column="30">try_create_file<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><name pos:line="30" pos:column="46">newpath<pos:position pos:line="30" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="55">mode<pos:position pos:line="30" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="61">buf<pos:position pos:line="30" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="66">size<pos:position pos:line="30" pos:column="70"/></name></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="72"/></condition><then pos:line="30" pos:column="72"> <block pos:line="30" pos:column="73">{
				<if pos:line="31" pos:column="33">if <condition pos:line="31" pos:column="36">(<expr><operator pos:line="31" pos:column="37">!<pos:position pos:line="31" pos:column="38"/></operator><call><name pos:line="31" pos:column="38">rename<pos:position pos:line="31" pos:column="44"/></name><argument_list pos:line="31" pos:column="44">(<argument><expr><name pos:line="31" pos:column="45">newpath<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="54">path<pos:position pos:line="31" pos:column="58"/></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="60"/></condition><then pos:line="31" pos:column="60">
					<block type="pseudo"><return pos:line="32" pos:column="41">return;<pos:position pos:line="32" pos:column="48"/></return></block></then></if>
				<expr_stmt><expr><call><name pos:line="33" pos:column="33">unlink_or_warn<pos:position pos:line="33" pos:column="47"/></name><argument_list pos:line="33" pos:column="47">(<argument><expr><name pos:line="33" pos:column="48">newpath<pos:position pos:line="33" pos:column="55"/></name></expr></argument>)<pos:position pos:line="33" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="57"/></expr_stmt>
				<break pos:line="34" pos:column="33">break;<pos:position pos:line="34" pos:column="39"/></break>
			}<pos:position pos:line="35" pos:column="26"/></block></then></if>
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><name pos:line="36" pos:column="29">errno<pos:position pos:line="36" pos:column="34"/></name> <operator pos:line="36" pos:column="35">!=<pos:position pos:line="36" pos:column="37"/></operator> <name pos:line="36" pos:column="38">EEXIST<pos:position pos:line="36" pos:column="44"/></name></expr>)<pos:position pos:line="36" pos:column="45"/></condition><then pos:line="36" pos:column="45">
				<block type="pseudo"><break pos:line="37" pos:column="33">break;<pos:position pos:line="37" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><operator pos:line="38" pos:column="25">++<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="27">nr<pos:position pos:line="38" pos:column="29"/></name></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></for>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">die_errno<pos:position pos:line="41" pos:column="18"/></name><argument_list pos:line="41" pos:column="18">(<argument><expr><call><name pos:line="41" pos:column="19">_<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><literal type="string" pos:line="41" pos:column="21">"unable to write file '%s' mode %o"<pos:position pos:line="41" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="41" pos:column="59">path<pos:position pos:line="41" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="65">mode<pos:position pos:line="41" pos:column="69"/></name></expr></argument>)<pos:position pos:line="41" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="71"/></expr_stmt>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

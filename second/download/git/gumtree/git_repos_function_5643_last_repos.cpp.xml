<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5643_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_aliased_updates<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">command<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">commands<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">command<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">cmd<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">string_list<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">ref_list<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><name pos:line="4" pos:column="39">STRING_LIST_INIT_NODUP<pos:position pos:line="4" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="62"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">cmd<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">commands<pos:position pos:line="6" pos:column="28"/></name></expr>;<pos:position pos:line="6" pos:column="29"/></init> <condition><expr><name pos:line="6" pos:column="30">cmd<pos:position pos:line="6" pos:column="33"/></name></expr>;<pos:position pos:line="6" pos:column="34"/></condition> <incr><expr><name pos:line="6" pos:column="35">cmd<pos:position pos:line="6" pos:column="38"/></name> <operator pos:line="6" pos:column="39">=<pos:position pos:line="6" pos:column="40"/></operator> <name><name pos:line="6" pos:column="41">cmd<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">next<pos:position pos:line="6" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="51"/></control> <block pos:line="6" pos:column="52">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">string_list_item<pos:position pos:line="7" pos:column="40"/></name></name> <modifier pos:line="7" pos:column="41">*<pos:position pos:line="7" pos:column="42"/></modifier></type><name pos:line="7" pos:column="42">item<pos:position pos:line="7" pos:column="46"/></name> <init pos:line="7" pos:column="47">=
			<expr><call><name pos:line="8" pos:column="25">string_list_append<pos:position pos:line="8" pos:column="43"/></name><argument_list pos:line="8" pos:column="43">(<argument><expr><operator pos:line="8" pos:column="44">&amp;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="45">ref_list<pos:position pos:line="8" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="55">cmd<pos:position pos:line="8" pos:column="58"/></name><operator pos:line="8" pos:column="58">-&gt;<pos:position pos:line="8" pos:column="63"/></operator><name pos:line="8" pos:column="60">ref_name<pos:position pos:line="8" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="70"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">item<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">util<pos:position pos:line="9" pos:column="27"/></name></name> <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <operator pos:line="9" pos:column="30">(<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">void<pos:position pos:line="9" pos:column="35"/></name> <operator pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></operator><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">cmd<pos:position pos:line="9" pos:column="41"/></name></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">string_list_sort<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><operator pos:line="11" pos:column="26">&amp;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="27">ref_list<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>

	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">cmd<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">commands<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></init> <condition><expr><name pos:line="13" pos:column="30">cmd<pos:position pos:line="13" pos:column="33"/></name></expr>;<pos:position pos:line="13" pos:column="34"/></condition> <incr><expr><name pos:line="13" pos:column="35">cmd<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">=<pos:position pos:line="13" pos:column="40"/></operator> <name><name pos:line="13" pos:column="41">cmd<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">-&gt;<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="46">next<pos:position pos:line="13" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="13" pos:column="51"/></control> <block pos:line="13" pos:column="52">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name><name pos:line="14" pos:column="22">cmd<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">error_string<pos:position pos:line="14" pos:column="39"/></name></name></expr>)<pos:position pos:line="14" pos:column="40"/></condition><then pos:line="14" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">check_aliased_update<pos:position pos:line="15" pos:column="45"/></name><argument_list pos:line="15" pos:column="45">(<argument><expr><name pos:line="15" pos:column="46">cmd<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="51">&amp;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="52">ref_list<pos:position pos:line="15" pos:column="60"/></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt></block></then></if>
	}<pos:position pos:line="16" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">string_list_clear<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><operator pos:line="18" pos:column="27">&amp;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="28">ref_list<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="38">0<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

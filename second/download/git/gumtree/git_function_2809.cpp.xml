<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2809.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_repository_format_gently<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">gitdir<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">nongit_ok<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">sb<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name pos:line="3" pos:column="28">STRBUF_INIT<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">repo_config<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">config_fn_t<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">fn<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ret<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">string_list_clear<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><operator pos:line="8" pos:column="27">&amp;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="28">unknown_extensions<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="48">0<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="51"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">get_common_dir<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><operator pos:line="10" pos:column="28">&amp;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="29">sb<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">gitdir<pos:position pos:line="10" pos:column="39"/></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="41"/></condition><then pos:line="10" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">fn<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">check_repo_format<pos:position pos:line="11" pos:column="39"/></name></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt></block></then>
	<else pos:line="12" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">fn<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">check_repository_format_version<pos:position pos:line="13" pos:column="53"/></name></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">strbuf_addstr<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><operator pos:line="14" pos:column="23">&amp;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="24">sb<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="28">"/config"<pos:position pos:line="14" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">repo_config<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <name><name pos:line="15" pos:column="23">sb<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">.<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">buf<pos:position pos:line="15" pos:column="29"/></name></name></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>

	<comment type="block" pos:line="17" pos:column="9">/*
	 * git_config() can't be used here because it calls git_pathdup()
	 * to get $GIT_CONFIG/config. That call will make setup_git_env()
	 * set git_dir to ".git".
	 *
	 * We are in gitdir setup, no git dir has been found useable yet.
	 * Use a gentler version of git_config() to check if this repo
	 * is a good one.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">git_config_early<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">fn<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="30">NULL<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">repo_config<pos:position pos:line="26" pos:column="47"/></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">GIT_REPO_VERSION_READ<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">&lt;<pos:position pos:line="27" pos:column="39"/></operator> <name pos:line="27" pos:column="37">repository_format_version<pos:position pos:line="27" pos:column="62"/></name></expr>)<pos:position pos:line="27" pos:column="63"/></condition><then pos:line="27" pos:column="63"> <block pos:line="27" pos:column="64">{
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">nongit_ok<pos:position pos:line="28" pos:column="31"/></name></expr>)<pos:position pos:line="28" pos:column="32"/></condition><then pos:line="28" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="25">die<pos:position pos:line="29" pos:column="28"/></name> <argument_list pos:line="29" pos:column="29">(<argument><expr><literal type="string" pos:line="29" pos:column="30">"Expected git repo version &lt;= %d, found %d"<pos:position pos:line="29" pos:column="76"/></literal></expr></argument>,
			     <argument><expr><name pos:line="30" pos:column="30">GIT_REPO_VERSION_READ<pos:position pos:line="30" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="53">repository_format_version<pos:position pos:line="30" pos:column="78"/></name></expr></argument>)<pos:position pos:line="30" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="80"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">warning<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="string" pos:line="31" pos:column="25">"Expected git repo version &lt;= %d, found %d"<pos:position pos:line="31" pos:column="71"/></literal></expr></argument>,
			<argument><expr><name pos:line="32" pos:column="25">GIT_REPO_VERSION_READ<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">repository_format_version<pos:position pos:line="32" pos:column="73"/></name></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">warning<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><literal type="string" pos:line="33" pos:column="25">"Please upgrade Git"<pos:position pos:line="33" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="34" pos:column="17">*<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">nongit_ok<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <operator pos:line="34" pos:column="30">-<pos:position pos:line="34" pos:column="31"/></operator><literal type="number" pos:line="34" pos:column="31">1<pos:position pos:line="34" pos:column="32"/></literal></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">ret<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <operator pos:line="35" pos:column="23">-<pos:position pos:line="35" pos:column="24"/></operator><literal type="number" pos:line="35" pos:column="24">1<pos:position pos:line="35" pos:column="25"/></literal></expr>;<pos:position pos:line="35" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">repository_format_version<pos:position pos:line="38" pos:column="38"/></name> <operator pos:line="38" pos:column="39">&gt;=<pos:position pos:line="38" pos:column="44"/></operator> <literal type="number" pos:line="38" pos:column="42">1<pos:position pos:line="38" pos:column="43"/></literal> <operator pos:line="38" pos:column="44">&amp;&amp;<pos:position pos:line="38" pos:column="54"/></operator> <name><name pos:line="38" pos:column="47">unknown_extensions<pos:position pos:line="38" pos:column="65"/></name><operator pos:line="38" pos:column="65">.<pos:position pos:line="38" pos:column="66"/></operator><name pos:line="38" pos:column="66">nr<pos:position pos:line="38" pos:column="68"/></name></name></expr>)<pos:position pos:line="38" pos:column="69"/></condition><then pos:line="38" pos:column="69"> <block pos:line="38" pos:column="70">{
		<decl_stmt><decl><type><name pos:line="39" pos:column="17">int<pos:position pos:line="39" pos:column="20"/></name></type> <name pos:line="39" pos:column="21">i<pos:position pos:line="39" pos:column="22"/></name></decl>;<pos:position pos:line="39" pos:column="23"/></decl_stmt>

		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">!<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">nongit_ok<pos:position pos:line="41" pos:column="31"/></name></expr>)<pos:position pos:line="41" pos:column="32"/></condition><then pos:line="41" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="25">die<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><literal type="string" pos:line="42" pos:column="29">"unknown repository extension: %s"<pos:position pos:line="42" pos:column="63"/></literal></expr></argument>,
			    <argument><expr><name><name pos:line="43" pos:column="29">unknown_extensions<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">.<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="48">items<pos:position pos:line="43" pos:column="53"/></name><index pos:line="43" pos:column="53">[<expr><literal type="number" pos:line="43" pos:column="54">0<pos:position pos:line="43" pos:column="55"/></literal></expr>]<pos:position pos:line="43" pos:column="56"/></index></name><operator pos:line="43" pos:column="56">.<pos:position pos:line="43" pos:column="57"/></operator><name pos:line="43" pos:column="57">string<pos:position pos:line="43" pos:column="63"/></name></expr></argument>)<pos:position pos:line="43" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="65"/></expr_stmt></block></then></if>

		<for pos:line="45" pos:column="17">for <control pos:line="45" pos:column="21">(<init><expr><name pos:line="45" pos:column="22">i<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">=<pos:position pos:line="45" pos:column="25"/></operator> <literal type="number" pos:line="45" pos:column="26">0<pos:position pos:line="45" pos:column="27"/></literal></expr>;<pos:position pos:line="45" pos:column="28"/></init> <condition><expr><name pos:line="45" pos:column="29">i<pos:position pos:line="45" pos:column="30"/></name> <operator pos:line="45" pos:column="31">&lt;<pos:position pos:line="45" pos:column="35"/></operator> <name><name pos:line="45" pos:column="33">unknown_extensions<pos:position pos:line="45" pos:column="51"/></name><operator pos:line="45" pos:column="51">.<pos:position pos:line="45" pos:column="52"/></operator><name pos:line="45" pos:column="52">nr<pos:position pos:line="45" pos:column="54"/></name></name></expr>;<pos:position pos:line="45" pos:column="55"/></condition> <incr><expr><name pos:line="45" pos:column="56">i<pos:position pos:line="45" pos:column="57"/></name><operator pos:line="45" pos:column="57">++<pos:position pos:line="45" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="45" pos:column="60"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">warning<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><literal type="string" pos:line="46" pos:column="33">"unknown repository extension: %s"<pos:position pos:line="46" pos:column="67"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="47" pos:column="33">unknown_extensions<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">.<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="52">items<pos:position pos:line="47" pos:column="57"/></name><index pos:line="47" pos:column="57">[<expr><name pos:line="47" pos:column="58">i<pos:position pos:line="47" pos:column="59"/></name></expr>]<pos:position pos:line="47" pos:column="60"/></index></name><operator pos:line="47" pos:column="60">.<pos:position pos:line="47" pos:column="61"/></operator><name pos:line="47" pos:column="61">string<pos:position pos:line="47" pos:column="67"/></name></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="69"/></expr_stmt></block></for>
		<expr_stmt><expr><operator pos:line="48" pos:column="17">*<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">nongit_ok<pos:position pos:line="48" pos:column="27"/></name> <operator pos:line="48" pos:column="28">=<pos:position pos:line="48" pos:column="29"/></operator> <operator pos:line="48" pos:column="30">-<pos:position pos:line="48" pos:column="31"/></operator><literal type="number" pos:line="48" pos:column="31">1<pos:position pos:line="48" pos:column="32"/></literal></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="49" pos:column="17">ret<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">=<pos:position pos:line="49" pos:column="22"/></operator> <operator pos:line="49" pos:column="23">-<pos:position pos:line="49" pos:column="24"/></operator><literal type="number" pos:line="49" pos:column="24">1<pos:position pos:line="49" pos:column="25"/></literal></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="52" pos:column="9">strbuf_release<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><operator pos:line="52" pos:column="24">&amp;<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="25">sb<pos:position pos:line="52" pos:column="27"/></name></expr></argument>)<pos:position pos:line="52" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt>
	<return pos:line="53" pos:column="9">return <expr><name pos:line="53" pos:column="16">ret<pos:position pos:line="53" pos:column="19"/></name></expr>;<pos:position pos:line="53" pos:column="20"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

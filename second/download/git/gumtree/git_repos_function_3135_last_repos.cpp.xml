<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3135_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">detach_advice<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">new_name<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">fmt<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">=
	<expr><call><name pos:line="4" pos:column="9">_<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">(<argument><expr><literal type="string" pos:line="4" pos:column="11">"Note: checking out '%s'.\n\n"<pos:position pos:line="4" pos:column="41"/></literal>
	<literal type="string" pos:line="5" pos:column="9">"You are in 'detached HEAD' state. You can look around, make experimental\n"<pos:position pos:line="5" pos:column="85"/></literal>
	<literal type="string" pos:line="6" pos:column="9">"changes and commit them, and you can discard any commits you make in this\n"<pos:position pos:line="6" pos:column="86"/></literal>
	<literal type="string" pos:line="7" pos:column="9">"state without impacting any branches by performing another checkout.\n\n"<pos:position pos:line="7" pos:column="83"/></literal>
	<literal type="string" pos:line="8" pos:column="9">"If you want to create a new branch to retain commits you create, you may\n"<pos:position pos:line="8" pos:column="85"/></literal>
	<literal type="string" pos:line="9" pos:column="9">"do so (now or later) by using -b with the checkout command again. Example:\n\n"<pos:position pos:line="9" pos:column="89"/></literal>
	<literal type="string" pos:line="10" pos:column="9">"  git checkout -b &lt;new-branch-name&gt;\n\n"<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="52"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">fprintf<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">stderr<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="25">fmt<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="30">new_name<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

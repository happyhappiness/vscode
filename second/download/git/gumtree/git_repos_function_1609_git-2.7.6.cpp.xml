<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1609_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">grow_object_hash<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<comment type="block" pos:line="4" pos:column="9">/*
	 * Note that this size must always be power-of-2 to match hash_obj
	 * above.
	 */</comment>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">new_hash_size<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><ternary><condition><expr><name pos:line="8" pos:column="29">obj_hash_size<pos:position pos:line="8" pos:column="42"/></name> <operator pos:line="8" pos:column="43">&lt;<pos:position pos:line="8" pos:column="47"/></operator> <literal type="number" pos:line="8" pos:column="45">32<pos:position pos:line="8" pos:column="47"/></literal></expr> ?<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49"> <expr><literal type="number" pos:line="8" pos:column="50">32<pos:position pos:line="8" pos:column="52"/></literal></expr> <pos:position pos:line="8" pos:column="53"/></then><else pos:line="8" pos:column="53">: <expr><literal type="number" pos:line="8" pos:column="55">2<pos:position pos:line="8" pos:column="56"/></literal> <operator pos:line="8" pos:column="57">*<pos:position pos:line="8" pos:column="58"/></operator> <name pos:line="8" pos:column="59">obj_hash_size<pos:position pos:line="8" pos:column="72"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="8" pos:column="73"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">object<pos:position pos:line="9" pos:column="22"/></name></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier><modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">new_hash<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">new_hash<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <call><name pos:line="11" pos:column="20">xcalloc<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">new_hash_size<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="43">sizeof<argument_list pos:line="11" pos:column="49">(<argument><expr pos:line="11" pos:column="50">struct <name pos:line="11" pos:column="57">object<pos:position pos:line="11" pos:column="63"/></name> <operator pos:line="11" pos:column="64">*<pos:position pos:line="11" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="68"/></expr_stmt>
	<for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">i<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></init> <condition><expr><name pos:line="12" pos:column="21">i<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&lt;<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="25">obj_hash_size<pos:position pos:line="12" pos:column="38"/></name></expr>;<pos:position pos:line="12" pos:column="39"/></condition> <incr><expr><name pos:line="12" pos:column="40">i<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">++<pos:position pos:line="12" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="44"/></control> <block pos:line="12" pos:column="45">{
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">struct<pos:position pos:line="13" pos:column="23"/></name> <name pos:line="13" pos:column="24">object<pos:position pos:line="13" pos:column="30"/></name></name> <modifier pos:line="13" pos:column="31">*<pos:position pos:line="13" pos:column="32"/></modifier></type><name pos:line="13" pos:column="32">obj<pos:position pos:line="13" pos:column="35"/></name> <init pos:line="13" pos:column="36">= <expr><name><name pos:line="13" pos:column="38">obj_hash<pos:position pos:line="13" pos:column="46"/></name><index pos:line="13" pos:column="46">[<expr><name pos:line="13" pos:column="47">i<pos:position pos:line="13" pos:column="48"/></name></expr>]<pos:position pos:line="13" pos:column="49"/></index></name></expr></init></decl>;<pos:position pos:line="13" pos:column="50"/></decl_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">obj<pos:position pos:line="14" pos:column="25"/></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
			<block type="pseudo"><continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">insert_obj_hash<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">obj<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">new_hash<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">new_hash_size<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">free<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name pos:line="18" pos:column="14">obj_hash<pos:position pos:line="18" pos:column="22"/></name></expr></argument>)<pos:position pos:line="18" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">obj_hash<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">new_hash<pos:position pos:line="19" pos:column="28"/></name></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">obj_hash_size<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">new_hash_size<pos:position pos:line="20" pos:column="38"/></name></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

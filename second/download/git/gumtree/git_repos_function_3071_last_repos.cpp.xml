<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3071_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">find_separator<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">line<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">separators<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">whitespace_found<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><literal type="number" pos:line="3" pos:column="32">0<pos:position pos:line="3" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">c<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">c<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">line<pos:position pos:line="5" pos:column="22"/></name></expr>;<pos:position pos:line="5" pos:column="23"/></init> <condition><expr><operator pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">c<pos:position pos:line="5" pos:column="26"/></name></expr>;<pos:position pos:line="5" pos:column="27"/></condition> <incr><expr><name pos:line="5" pos:column="28">c<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">++<pos:position pos:line="5" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="32"/></control> <block pos:line="5" pos:column="33">{
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><call><name pos:line="6" pos:column="21">strchr<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">separators<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="40">*<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="41">c<pos:position pos:line="6" pos:column="42"/></name></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44">
			<block type="pseudo"><return pos:line="7" pos:column="25">return <expr><name pos:line="7" pos:column="32">c<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">-<pos:position pos:line="7" pos:column="35"/></operator> <name pos:line="7" pos:column="36">line<pos:position pos:line="7" pos:column="40"/></name></expr>;<pos:position pos:line="7" pos:column="41"/></return></block></then></if>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">whitespace_found<pos:position pos:line="8" pos:column="38"/></name> <operator pos:line="8" pos:column="39">&amp;&amp;<pos:position pos:line="8" pos:column="49"/></operator> <operator pos:line="8" pos:column="42">(<pos:position pos:line="8" pos:column="43"/></operator><call><name pos:line="8" pos:column="43">isalnum<pos:position pos:line="8" pos:column="50"/></name><argument_list pos:line="8" pos:column="50">(<argument><expr><operator pos:line="8" pos:column="51">*<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="52">c<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call> <operator pos:line="8" pos:column="55">||<pos:position pos:line="8" pos:column="57"/></operator> <operator pos:line="8" pos:column="58">*<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="59">c<pos:position pos:line="8" pos:column="60"/></name> <operator pos:line="8" pos:column="61">==<pos:position pos:line="8" pos:column="63"/></operator> <literal type="char" pos:line="8" pos:column="64">'-'<pos:position pos:line="8" pos:column="67"/></literal><operator pos:line="8" pos:column="67">)<pos:position pos:line="8" pos:column="68"/></operator></expr>)<pos:position pos:line="8" pos:column="69"/></condition><then pos:line="8" pos:column="69">
			<block type="pseudo"><continue pos:line="9" pos:column="25">continue;<pos:position pos:line="9" pos:column="34"/></continue></block></then></if>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">c<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">!=<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">line<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">&amp;&amp;<pos:position pos:line="10" pos:column="41"/></operator> <operator pos:line="10" pos:column="34">(<pos:position pos:line="10" pos:column="35"/></operator><operator pos:line="10" pos:column="35">*<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">c<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">==<pos:position pos:line="10" pos:column="40"/></operator> <literal type="char" pos:line="10" pos:column="41">' '<pos:position pos:line="10" pos:column="44"/></literal> <operator pos:line="10" pos:column="45">||<pos:position pos:line="10" pos:column="47"/></operator> <operator pos:line="10" pos:column="48">*<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="49">c<pos:position pos:line="10" pos:column="50"/></name> <operator pos:line="10" pos:column="51">==<pos:position pos:line="10" pos:column="53"/></operator> <literal type="char" pos:line="10" pos:column="54">'\t'<pos:position pos:line="10" pos:column="58"/></literal><operator pos:line="10" pos:column="58">)<pos:position pos:line="10" pos:column="59"/></operator></expr>)<pos:position pos:line="10" pos:column="60"/></condition><then pos:line="10" pos:column="60"> <block pos:line="10" pos:column="61">{
			<expr_stmt><expr><name pos:line="11" pos:column="25">whitespace_found<pos:position pos:line="11" pos:column="41"/></name> <operator pos:line="11" pos:column="42">=<pos:position pos:line="11" pos:column="43"/></operator> <literal type="number" pos:line="11" pos:column="44">1<pos:position pos:line="11" pos:column="45"/></literal></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
			<continue pos:line="12" pos:column="25">continue;<pos:position pos:line="12" pos:column="34"/></continue>
		}<pos:position pos:line="13" pos:column="18"/></block></then></if>
		<break pos:line="14" pos:column="17">break;<pos:position pos:line="14" pos:column="23"/></break>
	}<pos:position pos:line="15" pos:column="10"/></block></for>
	<return pos:line="16" pos:column="9">return <expr><operator pos:line="16" pos:column="16">-<pos:position pos:line="16" pos:column="17"/></operator><literal type="number" pos:line="16" pos:column="17">1<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_149.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">unable_to_lock_error<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">path<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">err<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">msg<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><call><name pos:line="3" pos:column="21">unable_to_lock_message<pos:position pos:line="3" pos:column="43"/></name><argument_list pos:line="3" pos:column="43">(<argument><expr><name pos:line="3" pos:column="44">path<pos:position pos:line="3" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="50">err<pos:position pos:line="3" pos:column="53"/></name></expr></argument>)<pos:position pos:line="3" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="55"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">error<pos:position pos:line="4" pos:column="14"/></name><argument_list pos:line="4" pos:column="14">(<argument><expr><literal type="string" pos:line="4" pos:column="15">"%s"<pos:position pos:line="4" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="21">msg<pos:position pos:line="4" pos:column="24"/></name></expr></argument>)<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">free<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><name pos:line="5" pos:column="14">msg<pos:position pos:line="5" pos:column="17"/></name></expr></argument>)<pos:position pos:line="5" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="19"/></expr_stmt>
	<return pos:line="6" pos:column="9">return <expr><operator pos:line="6" pos:column="16">-<pos:position pos:line="6" pos:column="17"/></operator><literal type="number" pos:line="6" pos:column="17">1<pos:position pos:line="6" pos:column="18"/></literal></expr>;<pos:position pos:line="6" pos:column="19"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

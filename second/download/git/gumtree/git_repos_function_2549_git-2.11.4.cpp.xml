<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2549_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">generate_push_cert<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">strbuf<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">req_buf<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name><name pos:line="2" pos:column="37">struct<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">ref<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">remote_refs<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="3" pos:column="31">struct<pos:position pos:line="3" pos:column="37"/></name> <name pos:line="3" pos:column="38">send_pack_args<pos:position pos:line="3" pos:column="52"/></name></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">args<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="4" pos:column="31">const<pos:position pos:line="4" pos:column="36"/></specifier> <name pos:line="4" pos:column="37">char<pos:position pos:line="4" pos:column="41"/></name> <modifier pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></modifier></type><name pos:line="4" pos:column="43">cap_string<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="5" pos:column="31">const<pos:position pos:line="5" pos:column="36"/></specifier> <name pos:line="5" pos:column="37">char<pos:position pos:line="5" pos:column="41"/></name> <modifier pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></modifier></type><name pos:line="5" pos:column="43">push_cert_nonce<pos:position pos:line="5" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="59"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name><name pos:line="7" pos:column="15">struct<pos:position pos:line="7" pos:column="21"/></name> <name pos:line="7" pos:column="22">ref<pos:position pos:line="7" pos:column="25"/></name></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">ref<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">string_list_item<pos:position pos:line="8" pos:column="32"/></name></name> <modifier pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></modifier></type><name pos:line="8" pos:column="34">item<pos:position pos:line="8" pos:column="38"/></name></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">signing_key<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><call><name pos:line="9" pos:column="29">xstrdup<pos:position pos:line="9" pos:column="36"/></name><argument_list pos:line="9" pos:column="36">(<argument><expr><call><name pos:line="9" pos:column="37">get_signing_key<pos:position pos:line="9" pos:column="52"/></name><argument_list pos:line="9" pos:column="52">()<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">cp<pos:position pos:line="10" pos:column="23"/></name></decl>, <modifier pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="26">np<pos:position pos:line="10" pos:column="28"/></name></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">strbuf<pos:position pos:line="11" pos:column="22"/></name></name></type> <name pos:line="11" pos:column="23">cert<pos:position pos:line="11" pos:column="27"/></name> <init pos:line="11" pos:column="28">= <expr><name pos:line="11" pos:column="30">STRBUF_INIT<pos:position pos:line="11" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">update_seen<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><literal type="number" pos:line="12" pos:column="27">0<pos:position pos:line="12" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">strbuf_addstr<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><operator pos:line="14" pos:column="23">&amp;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="24">cert<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="30">"certificate version 0.1\n"<pos:position pos:line="14" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">strbuf_addf<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><operator pos:line="15" pos:column="21">&amp;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="22">cert<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="28">"pusher %s "<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">signing_key<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">datestamp<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><operator pos:line="16" pos:column="19">&amp;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="20">cert<pos:position pos:line="16" pos:column="24"/></name></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">strbuf_addch<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><operator pos:line="17" pos:column="22">&amp;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="23">cert<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="29">'\n'<pos:position pos:line="17" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">args<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">url<pos:position pos:line="18" pos:column="22"/></name></name> <operator pos:line="18" pos:column="23">&amp;&amp;<pos:position pos:line="18" pos:column="33"/></operator> <operator pos:line="18" pos:column="26">*<pos:position pos:line="18" pos:column="27"/></operator><name><name pos:line="18" pos:column="27">args<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">url<pos:position pos:line="18" pos:column="36"/></name></name></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37"> <block pos:line="18" pos:column="38">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">char<pos:position pos:line="19" pos:column="21"/></name> <modifier pos:line="19" pos:column="22">*<pos:position pos:line="19" pos:column="23"/></modifier></type><name pos:line="19" pos:column="23">anon_url<pos:position pos:line="19" pos:column="31"/></name> <init pos:line="19" pos:column="32">= <expr><call><name pos:line="19" pos:column="34">transport_anonymize_url<pos:position pos:line="19" pos:column="57"/></name><argument_list pos:line="19" pos:column="57">(<argument><expr><name><name pos:line="19" pos:column="58">args<pos:position pos:line="19" pos:column="62"/></name><operator pos:line="19" pos:column="62">-&gt;<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="64">url<pos:position pos:line="19" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="69"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">strbuf_addf<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><operator pos:line="20" pos:column="29">&amp;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="30">cert<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="36">"pushee %s\n"<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">anon_url<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">free<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">anon_url<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">push_cert_nonce<pos:position pos:line="23" pos:column="28"/></name><index pos:line="23" pos:column="28">[<expr><literal type="number" pos:line="23" pos:column="29">0<pos:position pos:line="23" pos:column="30"/></literal></expr>]<pos:position pos:line="23" pos:column="31"/></index></name></expr>)<pos:position pos:line="23" pos:column="32"/></condition><then pos:line="23" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">strbuf_addf<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><operator pos:line="24" pos:column="29">&amp;<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="30">cert<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="36">"nonce %s\n"<pos:position pos:line="24" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="50">push_cert_nonce<pos:position pos:line="24" pos:column="65"/></name></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt></block></then></if>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">args<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">push_options<pos:position pos:line="25" pos:column="31"/></name></name></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
		<block type="pseudo"><macro><name pos:line="26" pos:column="17">for_each_string_list_item<pos:position pos:line="26" pos:column="42"/></name><argument_list pos:line="26" pos:column="42">(<argument pos:line="26" pos:column="43">item<pos:position pos:line="26" pos:column="47"/></argument>, <argument pos:line="26" pos:column="49">args-&gt;push_options<pos:position pos:line="26" pos:column="67"/></argument>)<pos:position pos:line="26" pos:column="68"/></argument_list></macro>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">strbuf_addf<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><operator pos:line="27" pos:column="37">&amp;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="38">cert<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="44">"push-option %s\n"<pos:position pos:line="27" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="64">item<pos:position pos:line="27" pos:column="68"/></name><operator pos:line="27" pos:column="68">-&gt;<pos:position pos:line="27" pos:column="73"/></operator><name pos:line="27" pos:column="70">string<pos:position pos:line="27" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="78"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">strbuf_addstr<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><operator pos:line="28" pos:column="23">&amp;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="24">cert<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="30">"\n"<pos:position pos:line="28" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>

	<for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">ref<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="20">remote_refs<pos:position pos:line="30" pos:column="31"/></name></expr>;<pos:position pos:line="30" pos:column="32"/></init> <condition><expr><name pos:line="30" pos:column="33">ref<pos:position pos:line="30" pos:column="36"/></name></expr>;<pos:position pos:line="30" pos:column="37"/></condition> <incr><expr><name pos:line="30" pos:column="38">ref<pos:position pos:line="30" pos:column="41"/></name> <operator pos:line="30" pos:column="42">=<pos:position pos:line="30" pos:column="43"/></operator> <name><name pos:line="30" pos:column="44">ref<pos:position pos:line="30" pos:column="47"/></name><operator pos:line="30" pos:column="47">-&gt;<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="49">next<pos:position pos:line="30" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="30" pos:column="54"/></control> <block pos:line="30" pos:column="55">{
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">check_to_send_update<pos:position pos:line="31" pos:column="41"/></name><argument_list pos:line="31" pos:column="41">(<argument><expr><name pos:line="31" pos:column="42">ref<pos:position pos:line="31" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="47">args<pos:position pos:line="31" pos:column="51"/></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call> <operator pos:line="31" pos:column="53">&lt;<pos:position pos:line="31" pos:column="57"/></operator> <literal type="number" pos:line="31" pos:column="55">0<pos:position pos:line="31" pos:column="56"/></literal></expr>)<pos:position pos:line="31" pos:column="57"/></condition><then pos:line="31" pos:column="57">
			<block type="pseudo"><continue pos:line="32" pos:column="25">continue;<pos:position pos:line="32" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="33" pos:column="17">update_seen<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">=<pos:position pos:line="33" pos:column="30"/></operator> <literal type="number" pos:line="33" pos:column="31">1<pos:position pos:line="33" pos:column="32"/></literal></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">strbuf_addf<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><operator pos:line="34" pos:column="29">&amp;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="30">cert<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="36">"%s %s %s\n"<pos:position pos:line="34" pos:column="48"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="35" pos:column="29">oid_to_hex<pos:position pos:line="35" pos:column="39"/></name><argument_list pos:line="35" pos:column="39">(<argument><expr><operator pos:line="35" pos:column="40">&amp;<pos:position pos:line="35" pos:column="45"/></operator><name><name pos:line="35" pos:column="41">ref<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">-&gt;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="46">old_oid<pos:position pos:line="35" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr></argument>,
			    <argument><expr><call><name pos:line="36" pos:column="29">oid_to_hex<pos:position pos:line="36" pos:column="39"/></name><argument_list pos:line="36" pos:column="39">(<argument><expr><operator pos:line="36" pos:column="40">&amp;<pos:position pos:line="36" pos:column="45"/></operator><name><name pos:line="36" pos:column="41">ref<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">-&gt;<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="46">new_oid<pos:position pos:line="36" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr></argument>,
			    <argument><expr><name><name pos:line="37" pos:column="29">ref<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">-&gt;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="34">name<pos:position pos:line="37" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></for>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">!<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">update_seen<pos:position pos:line="39" pos:column="25"/></name></expr>)<pos:position pos:line="39" pos:column="26"/></condition><then pos:line="39" pos:column="26">
		<block type="pseudo"><goto pos:line="40" pos:column="17">goto <name pos:line="40" pos:column="22">free_return<pos:position pos:line="40" pos:column="33"/></name>;<pos:position pos:line="40" pos:column="34"/></goto></block></then></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">sign_buffer<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><operator pos:line="42" pos:column="25">&amp;<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="26">cert<pos:position pos:line="42" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="32">&amp;<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="33">cert<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="39">signing_key<pos:position pos:line="42" pos:column="50"/></name></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="52"/></condition><then pos:line="42" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="17">die<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><call><name pos:line="43" pos:column="21">_<pos:position pos:line="43" pos:column="22"/></name><argument_list pos:line="43" pos:column="22">(<argument><expr><literal type="string" pos:line="43" pos:column="23">"failed to sign the push certificate"<pos:position pos:line="43" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="63"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="45" pos:column="9">packet_buf_write<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">req_buf<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="35">"push-cert%c%s"<pos:position pos:line="45" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="52">0<pos:position pos:line="45" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="55">cap_string<pos:position pos:line="45" pos:column="65"/></name></expr></argument>)<pos:position pos:line="45" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="67"/></expr_stmt>
	<for pos:line="46" pos:column="9">for <control pos:line="46" pos:column="13">(<init><expr><name pos:line="46" pos:column="14">cp<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <name><name pos:line="46" pos:column="19">cert<pos:position pos:line="46" pos:column="23"/></name><operator pos:line="46" pos:column="23">.<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="24">buf<pos:position pos:line="46" pos:column="27"/></name></name></expr>;<pos:position pos:line="46" pos:column="28"/></init> <condition><expr><name pos:line="46" pos:column="29">cp<pos:position pos:line="46" pos:column="31"/></name> <operator pos:line="46" pos:column="32">&lt;<pos:position pos:line="46" pos:column="36"/></operator> <name><name pos:line="46" pos:column="34">cert<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">.<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="39">buf<pos:position pos:line="46" pos:column="42"/></name></name> <operator pos:line="46" pos:column="43">+<pos:position pos:line="46" pos:column="44"/></operator> <name><name pos:line="46" pos:column="45">cert<pos:position pos:line="46" pos:column="49"/></name><operator pos:line="46" pos:column="49">.<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="50">len<pos:position pos:line="46" pos:column="53"/></name></name></expr>;<pos:position pos:line="46" pos:column="54"/></condition> <incr><expr><name pos:line="46" pos:column="55">cp<pos:position pos:line="46" pos:column="57"/></name> <operator pos:line="46" pos:column="58">=<pos:position pos:line="46" pos:column="59"/></operator> <name pos:line="46" pos:column="60">np<pos:position pos:line="46" pos:column="62"/></name></expr></incr>)<pos:position pos:line="46" pos:column="63"/></control> <block pos:line="46" pos:column="64">{
		<expr_stmt><expr><name pos:line="47" pos:column="17">np<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <call><name pos:line="47" pos:column="22">next_line<pos:position pos:line="47" pos:column="31"/></name><argument_list pos:line="47" pos:column="31">(<argument><expr><name pos:line="47" pos:column="32">cp<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="36">cert<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">.<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="41">buf<pos:position pos:line="47" pos:column="44"/></name></name> <operator pos:line="47" pos:column="45">+<pos:position pos:line="47" pos:column="46"/></operator> <name><name pos:line="47" pos:column="47">cert<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">.<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="52">len<pos:position pos:line="47" pos:column="55"/></name></name> <operator pos:line="47" pos:column="56">-<pos:position pos:line="47" pos:column="57"/></operator> <name pos:line="47" pos:column="58">cp<pos:position pos:line="47" pos:column="60"/></name></expr></argument>)<pos:position pos:line="47" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">packet_buf_write<pos:position pos:line="48" pos:column="33"/></name><argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">req_buf<pos:position pos:line="48" pos:column="41"/></name></expr></argument>,
				 <argument><expr><literal type="string" pos:line="49" pos:column="34">"%.*s"<pos:position pos:line="49" pos:column="40"/></literal></expr></argument>, <argument><expr><call pos:line="49" pos:column="42">(<name pos:line="49" pos:column="43">int<pos:position pos:line="49" pos:column="46"/></name>)<argument_list pos:line="49" pos:column="47">(<argument><expr><name pos:line="49" pos:column="48">np<pos:position pos:line="49" pos:column="50"/></name> <operator pos:line="49" pos:column="51">-<pos:position pos:line="49" pos:column="52"/></operator> <name pos:line="49" pos:column="53">cp<pos:position pos:line="49" pos:column="55"/></name></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="49" pos:column="58">cp<pos:position pos:line="49" pos:column="60"/></name></expr></argument>)<pos:position pos:line="49" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">packet_buf_write<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><name pos:line="51" pos:column="26">req_buf<pos:position pos:line="51" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="35">"push-cert-end\n"<pos:position pos:line="51" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="54"/></expr_stmt>

<label><name pos:line="53" pos:column="1">free_return<pos:position pos:line="53" pos:column="12"/></name>:<pos:position pos:line="53" pos:column="13"/></label>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">free<pos:position pos:line="54" pos:column="13"/></name><argument_list pos:line="54" pos:column="13">(<argument><expr><name pos:line="54" pos:column="14">signing_key<pos:position pos:line="54" pos:column="25"/></name></expr></argument>)<pos:position pos:line="54" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">strbuf_release<pos:position pos:line="55" pos:column="23"/></name><argument_list pos:line="55" pos:column="23">(<argument><expr><operator pos:line="55" pos:column="24">&amp;<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="25">cert<pos:position pos:line="55" pos:column="29"/></name></expr></argument>)<pos:position pos:line="55" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="31"/></expr_stmt>
	<return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">update_seen<pos:position pos:line="56" pos:column="27"/></name></expr>;<pos:position pos:line="56" pos:column="28"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

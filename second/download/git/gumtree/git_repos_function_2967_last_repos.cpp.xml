<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2967_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">update_abort_safety_file<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">void<pos:position pos:line="1" pos:column="42"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object_id<pos:position pos:line="3" pos:column="25"/></name></name></type> <name pos:line="3" pos:column="26">head<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* Do nothing on a single-pick */</comment>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">file_exists<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><call><name pos:line="6" pos:column="26">git_path_seq_dir<pos:position pos:line="6" pos:column="42"/></name><argument_list pos:line="6" pos:column="42">()<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="46"/></condition><then pos:line="6" pos:column="46">
		<block type="pseudo"><return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></block></then></if>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">get_oid<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><literal type="string" pos:line="9" pos:column="22">"HEAD"<pos:position pos:line="9" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="30">&amp;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="31">head<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">write_file<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><call><name pos:line="10" pos:column="28">git_path_abort_safety_file<pos:position pos:line="10" pos:column="54"/></name><argument_list pos:line="10" pos:column="54">()<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="58">"%s"<pos:position pos:line="10" pos:column="62"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="64">oid_to_hex<pos:position pos:line="10" pos:column="74"/></name><argument_list pos:line="10" pos:column="74">(<argument><expr><operator pos:line="10" pos:column="75">&amp;<pos:position pos:line="10" pos:column="80"/></operator><name pos:line="10" pos:column="76">head<pos:position pos:line="10" pos:column="80"/></name></expr></argument>)<pos:position pos:line="10" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="83"/></expr_stmt></block></then>
	<else pos:line="11" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">write_file<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><call><name pos:line="12" pos:column="28">git_path_abort_safety_file<pos:position pos:line="12" pos:column="54"/></name><argument_list pos:line="12" pos:column="54">()<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="58">"%s"<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="64">""<pos:position pos:line="12" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="68"/></expr_stmt></block></else></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

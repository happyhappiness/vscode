<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2118.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">run_gpg_verify<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">unsigned<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">sha1<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">buf<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">unsigned<pos:position pos:line="1" pos:column="79"/></name> <name pos:line="1" pos:column="80">long<pos:position pos:line="1" pos:column="84"/></name></type> <name pos:line="1" pos:column="85">size<pos:position pos:line="1" pos:column="89"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="91">int<pos:position pos:line="1" pos:column="94"/></name></type> <name pos:line="1" pos:column="95">verbose<pos:position pos:line="1" pos:column="102"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="103"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">signature_check<pos:position pos:line="3" pos:column="31"/></name></name></type> <name pos:line="3" pos:column="32">signature_check<pos:position pos:line="3" pos:column="47"/></name></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">memset<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><operator pos:line="5" pos:column="16">&amp;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="17">signature_check<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="34">0<pos:position pos:line="5" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="37">sizeof<argument_list pos:line="5" pos:column="43">(<argument><expr><name pos:line="5" pos:column="44">signature_check<pos:position pos:line="5" pos:column="59"/></name></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="62"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">check_commit_signature<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><call><name pos:line="7" pos:column="32">lookup_commit<pos:position pos:line="7" pos:column="45"/></name><argument_list pos:line="7" pos:column="45">(<argument><expr><name pos:line="7" pos:column="46">sha1<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="7" pos:column="53">&amp;<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="54">signature_check<pos:position pos:line="7" pos:column="69"/></name></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="71"/></expr_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">verbose<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">&amp;&amp;<pos:position pos:line="9" pos:column="31"/></operator> <name><name pos:line="9" pos:column="24">signature_check<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">.<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="40">payload<pos:position pos:line="9" pos:column="47"/></name></name></expr>)<pos:position pos:line="9" pos:column="48"/></condition><then pos:line="9" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">fputs<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name><name pos:line="10" pos:column="23">signature_check<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">.<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="39">payload<pos:position pos:line="10" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">stdout<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">signature_check<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">.<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">gpg_output<pos:position pos:line="12" pos:column="39"/></name></name></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">fputs<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name><name pos:line="13" pos:column="23">signature_check<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">.<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">gpg_output<pos:position pos:line="13" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">stderr<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">signature_check_clear<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><operator pos:line="15" pos:column="31">&amp;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="32">signature_check<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
	<return pos:line="16" pos:column="9">return <expr><name><name pos:line="16" pos:column="16">signature_check<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">.<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">result<pos:position pos:line="16" pos:column="38"/></name></name> <operator pos:line="16" pos:column="39">!=<pos:position pos:line="16" pos:column="41"/></operator> <literal type="char" pos:line="16" pos:column="42">'G'<pos:position pos:line="16" pos:column="45"/></literal></expr>;<pos:position pos:line="16" pos:column="46"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

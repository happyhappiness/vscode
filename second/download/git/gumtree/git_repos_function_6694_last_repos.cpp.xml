<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6694_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mingw_open<pos:position pos:line="1" pos:column="15"/></name> <parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">filename<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">oflags<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="51">...<pos:position pos:line="1" pos:column="54"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">va_list<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">args<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">mode<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">fd<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">wchar_t<pos:position pos:line="6" pos:column="16"/></name></type> <name><name pos:line="6" pos:column="17">wfilename<pos:position pos:line="6" pos:column="26"/></name><index pos:line="6" pos:column="26">[<expr><name pos:line="6" pos:column="27">MAX_PATH<pos:position pos:line="6" pos:column="35"/></name></expr>]<pos:position pos:line="6" pos:column="36"/></index></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">va_start<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">args<pos:position pos:line="8" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="24">oflags<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">mode<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <call><name pos:line="9" pos:column="16">va_arg<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">args<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="29">int<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">va_end<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">args<pos:position pos:line="10" pos:column="20"/></name></expr></argument>)<pos:position pos:line="10" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">filename<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">&amp;&amp;<pos:position pos:line="12" pos:column="32"/></operator> <operator pos:line="12" pos:column="25">!<pos:position pos:line="12" pos:column="26"/></operator><call><name pos:line="12" pos:column="26">strcmp<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">filename<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="43">"/dev/null"<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">filename<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <literal type="string" pos:line="13" pos:column="28">"nul"<pos:position pos:line="13" pos:column="33"/></literal></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">xutftowcs_path<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">wfilename<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">filename<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call> <operator pos:line="15" pos:column="49">&lt;<pos:position pos:line="15" pos:column="53"/></operator> <literal type="number" pos:line="15" pos:column="51">0<pos:position pos:line="15" pos:column="52"/></literal></expr>)<pos:position pos:line="15" pos:column="53"/></condition><then pos:line="15" pos:column="53">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">fd<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">_wopen<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">wfilename<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="32">oflags<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">mode<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">fd<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">&lt;<pos:position pos:line="19" pos:column="20"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal> <operator pos:line="19" pos:column="20">&amp;&amp;<pos:position pos:line="19" pos:column="30"/></operator> <operator pos:line="19" pos:column="23">(<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">oflags<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">&amp;<pos:position pos:line="19" pos:column="36"/></operator> <name pos:line="19" pos:column="33">O_ACCMODE<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">)<pos:position pos:line="19" pos:column="43"/></operator> <operator pos:line="19" pos:column="44">!=<pos:position pos:line="19" pos:column="46"/></operator> <name pos:line="19" pos:column="47">O_RDONLY<pos:position pos:line="19" pos:column="55"/></name> <operator pos:line="19" pos:column="56">&amp;&amp;<pos:position pos:line="19" pos:column="66"/></operator> <name pos:line="19" pos:column="59">errno<pos:position pos:line="19" pos:column="64"/></name> <operator pos:line="19" pos:column="65">==<pos:position pos:line="19" pos:column="67"/></operator> <name pos:line="19" pos:column="68">EACCES<pos:position pos:line="19" pos:column="74"/></name></expr>)<pos:position pos:line="19" pos:column="75"/></condition><then pos:line="19" pos:column="75"> <block pos:line="19" pos:column="76">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">DWORD<pos:position pos:line="20" pos:column="22"/></name></type> <name pos:line="20" pos:column="23">attrs<pos:position pos:line="20" pos:column="28"/></name> <init pos:line="20" pos:column="29">= <expr><call><name pos:line="20" pos:column="31">GetFileAttributesW<pos:position pos:line="20" pos:column="49"/></name><argument_list pos:line="20" pos:column="49">(<argument><expr><name pos:line="20" pos:column="50">wfilename<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="61"/></decl_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">attrs<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">!=<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="30">INVALID_FILE_ATTRIBUTES<pos:position pos:line="21" pos:column="53"/></name> <operator pos:line="21" pos:column="54">&amp;&amp;<pos:position pos:line="21" pos:column="64"/></operator> <operator pos:line="21" pos:column="57">(<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="58">attrs<pos:position pos:line="21" pos:column="63"/></name> <operator pos:line="21" pos:column="64">&amp;<pos:position pos:line="21" pos:column="69"/></operator> <name pos:line="21" pos:column="66">FILE_ATTRIBUTE_DIRECTORY<pos:position pos:line="21" pos:column="90"/></name><operator pos:line="21" pos:column="90">)<pos:position pos:line="21" pos:column="91"/></operator></expr>)<pos:position pos:line="21" pos:column="92"/></condition><then pos:line="21" pos:column="92">
			<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="25">errno<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">=<pos:position pos:line="22" pos:column="32"/></operator> <name pos:line="22" pos:column="33">EISDIR<pos:position pos:line="22" pos:column="39"/></name></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt></block></then></if>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">oflags<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">&amp;<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="23">O_CREAT<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">)<pos:position pos:line="24" pos:column="31"/></operator> <operator pos:line="24" pos:column="32">&amp;&amp;<pos:position pos:line="24" pos:column="42"/></operator> <call><name pos:line="24" pos:column="35">needs_hiding<pos:position pos:line="24" pos:column="47"/></name><argument_list pos:line="24" pos:column="47">(<argument><expr><name pos:line="24" pos:column="48">filename<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="58"/></condition><then pos:line="24" pos:column="58"> <block pos:line="24" pos:column="59">{
		<comment type="block" pos:line="25" pos:column="17">/*
		 * Internally, _wopen() uses the CreateFile() API which errors
		 * out with an ERROR_ACCESS_DENIED if CREATE_ALWAYS was
		 * specified and an already existing file's attributes do not
		 * match *exactly*. As there is no mode or flag we can set that
		 * would correspond to FILE_ATTRIBUTE_HIDDEN, let's just try
		 * again *without* the O_CREAT flag (that corresponds to the
		 * CREATE_ALWAYS flag of CreateFile()).
		 */</comment>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">fd<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">&lt;<pos:position pos:line="34" pos:column="28"/></operator> <literal type="number" pos:line="34" pos:column="26">0<pos:position pos:line="34" pos:column="27"/></literal> <operator pos:line="34" pos:column="28">&amp;&amp;<pos:position pos:line="34" pos:column="38"/></operator> <name pos:line="34" pos:column="31">errno<pos:position pos:line="34" pos:column="36"/></name> <operator pos:line="34" pos:column="37">==<pos:position pos:line="34" pos:column="39"/></operator> <name pos:line="34" pos:column="40">EACCES<pos:position pos:line="34" pos:column="46"/></name></expr>)<pos:position pos:line="34" pos:column="47"/></condition><then pos:line="34" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="25">fd<pos:position pos:line="35" pos:column="27"/></name> <operator pos:line="35" pos:column="28">=<pos:position pos:line="35" pos:column="29"/></operator> <call><name pos:line="35" pos:column="30">_wopen<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">wfilename<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="48">oflags<pos:position pos:line="35" pos:column="54"/></name> <operator pos:line="35" pos:column="55">&amp;<pos:position pos:line="35" pos:column="60"/></operator> <operator pos:line="35" pos:column="57">~<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="58">O_CREAT<pos:position pos:line="35" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="67">mode<pos:position pos:line="35" pos:column="71"/></name></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="73"/></expr_stmt></block></then></if>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">fd<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">&gt;=<pos:position pos:line="36" pos:column="29"/></operator> <literal type="number" pos:line="36" pos:column="27">0<pos:position pos:line="36" pos:column="28"/></literal> <operator pos:line="36" pos:column="29">&amp;&amp;<pos:position pos:line="36" pos:column="39"/></operator> <call><name pos:line="36" pos:column="32">set_hidden_flag<pos:position pos:line="36" pos:column="47"/></name><argument_list pos:line="36" pos:column="47">(<argument><expr><name pos:line="36" pos:column="48">wfilename<pos:position pos:line="36" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="59">1<pos:position pos:line="36" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="62"/></condition><then pos:line="36" pos:column="62">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">warning<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><literal type="string" pos:line="37" pos:column="33">"could not mark '%s' as hidden."<pos:position pos:line="37" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="67">filename<pos:position pos:line="37" pos:column="75"/></name></expr></argument>)<pos:position pos:line="37" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="77"/></expr_stmt></block></then></if>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>
	<return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">fd<pos:position pos:line="39" pos:column="18"/></name></expr>;<pos:position pos:line="39" pos:column="19"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

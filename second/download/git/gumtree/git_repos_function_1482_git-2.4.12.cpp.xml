<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1482_git-2.4.12.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">string_list<pos:position pos:line="1" pos:column="19"/></name></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">resolve_undo_read<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">data<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">unsigned<pos:position pos:line="1" pos:column="65"/></name> <name pos:line="1" pos:column="66">long<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">size<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">resolve_undo<pos:position pos:line="3" pos:column="41"/></name></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">len<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">endptr<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">resolve_undo<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <call><name pos:line="8" pos:column="24">xcalloc<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><literal type="number" pos:line="8" pos:column="32">1<pos:position pos:line="8" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="35">sizeof<argument_list pos:line="8" pos:column="41">(<argument><expr><operator pos:line="8" pos:column="42">*<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="43">resolve_undo<pos:position pos:line="8" pos:column="55"/></name></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">resolve_undo<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">strdup_strings<pos:position pos:line="9" pos:column="37"/></name></name> <operator pos:line="9" pos:column="38">=<pos:position pos:line="9" pos:column="39"/></operator> <literal type="number" pos:line="9" pos:column="40">1<pos:position pos:line="9" pos:column="41"/></literal></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>

	<while pos:line="11" pos:column="9">while <condition pos:line="11" pos:column="15">(<expr><name pos:line="11" pos:column="16">size<pos:position pos:line="11" pos:column="20"/></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition> <block pos:line="11" pos:column="22">{
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">string_list_item<pos:position pos:line="12" pos:column="40"/></name></name> <modifier pos:line="12" pos:column="41">*<pos:position pos:line="12" pos:column="42"/></modifier></type><name pos:line="12" pos:column="42">lost<pos:position pos:line="12" pos:column="46"/></name></decl>;<pos:position pos:line="12" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">struct<pos:position pos:line="13" pos:column="23"/></name> <name pos:line="13" pos:column="24">resolve_undo_info<pos:position pos:line="13" pos:column="41"/></name></name> <modifier pos:line="13" pos:column="42">*<pos:position pos:line="13" pos:column="43"/></modifier></type><name pos:line="13" pos:column="43">ui<pos:position pos:line="13" pos:column="45"/></name></decl>;<pos:position pos:line="13" pos:column="46"/></decl_stmt>

		<expr_stmt><expr><name pos:line="15" pos:column="17">len<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <call><name pos:line="15" pos:column="23">strlen<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">data<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call> <operator pos:line="15" pos:column="36">+<pos:position pos:line="15" pos:column="37"/></operator> <literal type="number" pos:line="15" pos:column="38">1<pos:position pos:line="15" pos:column="39"/></literal></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">size<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">&lt;=<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="29">len<pos:position pos:line="16" pos:column="32"/></name></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33">
			<block type="pseudo"><goto pos:line="17" pos:column="25">goto <name pos:line="17" pos:column="30">error<pos:position pos:line="17" pos:column="35"/></name>;<pos:position pos:line="17" pos:column="36"/></goto></block></then></if>
		<expr_stmt><expr><name pos:line="18" pos:column="17">lost<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <call><name pos:line="18" pos:column="24">string_list_insert<pos:position pos:line="18" pos:column="42"/></name><argument_list pos:line="18" pos:column="42">(<argument><expr><name pos:line="18" pos:column="43">resolve_undo<pos:position pos:line="18" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="57">data<pos:position pos:line="18" pos:column="61"/></name></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="63"/></expr_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><name><name pos:line="19" pos:column="22">lost<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">-&gt;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="28">util<pos:position pos:line="19" pos:column="32"/></name></name></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="25">lost<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">util<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">=<pos:position pos:line="20" pos:column="37"/></operator> <call><name pos:line="20" pos:column="38">xcalloc<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><literal type="number" pos:line="20" pos:column="46">1<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="49">sizeof<argument_list pos:line="20" pos:column="55">(<argument><expr><operator pos:line="20" pos:column="56">*<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="57">ui<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="21" pos:column="17">ui<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <name><name pos:line="21" pos:column="22">lost<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">util<pos:position pos:line="21" pos:column="32"/></name></name></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">size<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">-=<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">len<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">data<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">+=<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">len<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>

		<for pos:line="25" pos:column="17">for <control pos:line="25" pos:column="21">(<init><expr><name pos:line="25" pos:column="22">i<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <literal type="number" pos:line="25" pos:column="26">0<pos:position pos:line="25" pos:column="27"/></literal></expr>;<pos:position pos:line="25" pos:column="28"/></init> <condition><expr><name pos:line="25" pos:column="29">i<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">&lt;<pos:position pos:line="25" pos:column="35"/></operator> <literal type="number" pos:line="25" pos:column="33">3<pos:position pos:line="25" pos:column="34"/></literal></expr>;<pos:position pos:line="25" pos:column="35"/></condition> <incr><expr><name pos:line="25" pos:column="36">i<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">++<pos:position pos:line="25" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="40"/></control> <block pos:line="25" pos:column="41">{
			<expr_stmt><expr><name><name pos:line="26" pos:column="25">ui<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">mode<pos:position pos:line="26" pos:column="33"/></name><index pos:line="26" pos:column="33">[<expr><name pos:line="26" pos:column="34">i<pos:position pos:line="26" pos:column="35"/></name></expr>]<pos:position pos:line="26" pos:column="36"/></index></name> <operator pos:line="26" pos:column="37">=<pos:position pos:line="26" pos:column="38"/></operator> <call><name pos:line="26" pos:column="39">strtoul<pos:position pos:line="26" pos:column="46"/></name><argument_list pos:line="26" pos:column="46">(<argument><expr><name pos:line="26" pos:column="47">data<pos:position pos:line="26" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="53">&amp;<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="54">endptr<pos:position pos:line="26" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="62">8<pos:position pos:line="26" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="65"/></expr_stmt>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><operator pos:line="27" pos:column="29">!<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">endptr<pos:position pos:line="27" pos:column="36"/></name> <operator pos:line="27" pos:column="37">||<pos:position pos:line="27" pos:column="39"/></operator> <name pos:line="27" pos:column="40">endptr<pos:position pos:line="27" pos:column="46"/></name> <operator pos:line="27" pos:column="47">==<pos:position pos:line="27" pos:column="49"/></operator> <name pos:line="27" pos:column="50">data<pos:position pos:line="27" pos:column="54"/></name> <operator pos:line="27" pos:column="55">||<pos:position pos:line="27" pos:column="57"/></operator> <operator pos:line="27" pos:column="58">*<pos:position pos:line="27" pos:column="59"/></operator><name pos:line="27" pos:column="59">endptr<pos:position pos:line="27" pos:column="65"/></name></expr>)<pos:position pos:line="27" pos:column="66"/></condition><then pos:line="27" pos:column="66">
				<block type="pseudo"><goto pos:line="28" pos:column="33">goto <name pos:line="28" pos:column="38">error<pos:position pos:line="28" pos:column="43"/></name>;<pos:position pos:line="28" pos:column="44"/></goto></block></then></if>
			<expr_stmt><expr><name pos:line="29" pos:column="25">len<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">=<pos:position pos:line="29" pos:column="30"/></operator> <operator pos:line="29" pos:column="31">(<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="32">endptr<pos:position pos:line="29" pos:column="38"/></name> <operator pos:line="29" pos:column="39">+<pos:position pos:line="29" pos:column="40"/></operator> <literal type="number" pos:line="29" pos:column="41">1<pos:position pos:line="29" pos:column="42"/></literal><operator pos:line="29" pos:column="42">)<pos:position pos:line="29" pos:column="43"/></operator> <operator pos:line="29" pos:column="44">-<pos:position pos:line="29" pos:column="45"/></operator> <operator pos:line="29" pos:column="46">(<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="47">char<pos:position pos:line="29" pos:column="51"/></name><operator pos:line="29" pos:column="51">*<pos:position pos:line="29" pos:column="52"/></operator><operator pos:line="29" pos:column="52">)<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="53">data<pos:position pos:line="29" pos:column="57"/></name></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt>
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><name pos:line="30" pos:column="29">size<pos:position pos:line="30" pos:column="33"/></name> <operator pos:line="30" pos:column="34">&lt;=<pos:position pos:line="30" pos:column="39"/></operator> <name pos:line="30" pos:column="37">len<pos:position pos:line="30" pos:column="40"/></name></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41">
				<block type="pseudo"><goto pos:line="31" pos:column="33">goto <name pos:line="31" pos:column="38">error<pos:position pos:line="31" pos:column="43"/></name>;<pos:position pos:line="31" pos:column="44"/></goto></block></then></if>
			<expr_stmt><expr><name pos:line="32" pos:column="25">size<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">-=<pos:position pos:line="32" pos:column="32"/></operator> <name pos:line="32" pos:column="33">len<pos:position pos:line="32" pos:column="36"/></name></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="33" pos:column="25">data<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">+=<pos:position pos:line="33" pos:column="32"/></operator> <name pos:line="33" pos:column="33">len<pos:position pos:line="33" pos:column="36"/></name></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></for>

		<for pos:line="36" pos:column="17">for <control pos:line="36" pos:column="21">(<init><expr><name pos:line="36" pos:column="22">i<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <literal type="number" pos:line="36" pos:column="26">0<pos:position pos:line="36" pos:column="27"/></literal></expr>;<pos:position pos:line="36" pos:column="28"/></init> <condition><expr><name pos:line="36" pos:column="29">i<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">&lt;<pos:position pos:line="36" pos:column="35"/></operator> <literal type="number" pos:line="36" pos:column="33">3<pos:position pos:line="36" pos:column="34"/></literal></expr>;<pos:position pos:line="36" pos:column="35"/></condition> <incr><expr><name pos:line="36" pos:column="36">i<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">++<pos:position pos:line="36" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="40"/></control> <block pos:line="36" pos:column="41">{
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><operator pos:line="37" pos:column="29">!<pos:position pos:line="37" pos:column="30"/></operator><name><name pos:line="37" pos:column="30">ui<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">-&gt;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="34">mode<pos:position pos:line="37" pos:column="38"/></name><index pos:line="37" pos:column="38">[<expr><name pos:line="37" pos:column="39">i<pos:position pos:line="37" pos:column="40"/></name></expr>]<pos:position pos:line="37" pos:column="41"/></index></name></expr>)<pos:position pos:line="37" pos:column="42"/></condition><then pos:line="37" pos:column="42">
				<block type="pseudo"><continue pos:line="38" pos:column="33">continue;<pos:position pos:line="38" pos:column="42"/></continue></block></then></if>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name pos:line="39" pos:column="29">size<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">&lt;<pos:position pos:line="39" pos:column="38"/></operator> <literal type="number" pos:line="39" pos:column="36">20<pos:position pos:line="39" pos:column="38"/></literal></expr>)<pos:position pos:line="39" pos:column="39"/></condition><then pos:line="39" pos:column="39">
				<block type="pseudo"><goto pos:line="40" pos:column="33">goto <name pos:line="40" pos:column="38">error<pos:position pos:line="40" pos:column="43"/></name>;<pos:position pos:line="40" pos:column="44"/></goto></block></then></if>
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">hashcpy<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name><name pos:line="41" pos:column="33">ui<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">-&gt;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="37">sha1<pos:position pos:line="41" pos:column="41"/></name><index pos:line="41" pos:column="41">[<expr><name pos:line="41" pos:column="42">i<pos:position pos:line="41" pos:column="43"/></name></expr>]<pos:position pos:line="41" pos:column="44"/></index></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="46">(<pos:position pos:line="41" pos:column="47"/></operator><specifier pos:line="41" pos:column="47">const<pos:position pos:line="41" pos:column="52"/></specifier> <name pos:line="41" pos:column="53">unsigned<pos:position pos:line="41" pos:column="61"/></name> <name pos:line="41" pos:column="62">char<pos:position pos:line="41" pos:column="66"/></name> <operator pos:line="41" pos:column="67">*<pos:position pos:line="41" pos:column="68"/></operator><operator pos:line="41" pos:column="68">)<pos:position pos:line="41" pos:column="69"/></operator><name pos:line="41" pos:column="69">data<pos:position pos:line="41" pos:column="73"/></name></expr></argument>)<pos:position pos:line="41" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><name pos:line="42" pos:column="25">size<pos:position pos:line="42" pos:column="29"/></name> <operator pos:line="42" pos:column="30">-=<pos:position pos:line="42" pos:column="32"/></operator> <literal type="number" pos:line="42" pos:column="33">20<pos:position pos:line="42" pos:column="35"/></literal></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="43" pos:column="25">data<pos:position pos:line="43" pos:column="29"/></name> <operator pos:line="43" pos:column="30">+=<pos:position pos:line="43" pos:column="32"/></operator> <literal type="number" pos:line="43" pos:column="33">20<pos:position pos:line="43" pos:column="35"/></literal></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></for>
	}<pos:position pos:line="45" pos:column="10"/></block></while>
	<return pos:line="46" pos:column="9">return <expr><name pos:line="46" pos:column="16">resolve_undo<pos:position pos:line="46" pos:column="28"/></name></expr>;<pos:position pos:line="46" pos:column="29"/></return>

<label><name pos:line="48" pos:column="1">error<pos:position pos:line="48" pos:column="6"/></name>:<pos:position pos:line="48" pos:column="7"/></label>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">string_list_clear<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><name pos:line="49" pos:column="27">resolve_undo<pos:position pos:line="49" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="41">1<pos:position pos:line="49" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">error<pos:position pos:line="50" pos:column="14"/></name><argument_list pos:line="50" pos:column="14">(<argument><expr><literal type="string" pos:line="50" pos:column="15">"Index records invalid resolve-undo information"<pos:position pos:line="50" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="65"/></expr_stmt>
	<return pos:line="51" pos:column="9">return <expr><name pos:line="51" pos:column="16">NULL<pos:position pos:line="51" pos:column="20"/></name></expr>;<pos:position pos:line="51" pos:column="21"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

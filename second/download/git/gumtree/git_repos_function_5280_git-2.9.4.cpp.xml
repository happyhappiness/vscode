<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5280_git-2.9.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_worktree<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">ac<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">av<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">prefix<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">option<pos:position pos:line="3" pos:column="22"/></name></name></type> <name><name pos:line="3" pos:column="23">options<pos:position pos:line="3" pos:column="30"/></name><index pos:line="3" pos:column="30">[]<pos:position pos:line="3" pos:column="32"/></index></name> <init pos:line="3" pos:column="33">= <expr><block pos:line="3" pos:column="35">{
		<macro><name pos:line="4" pos:column="17">OPT_END<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">()<pos:position pos:line="4" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="5" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">ac<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">&lt;<pos:position pos:line="7" pos:column="20"/></operator> <literal type="number" pos:line="7" pos:column="18">2<pos:position pos:line="7" pos:column="19"/></literal></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">usage_with_options<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">worktree_usage<pos:position pos:line="8" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="52">options<pos:position pos:line="8" pos:column="59"/></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">strcmp<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name><name pos:line="9" pos:column="21">av<pos:position pos:line="9" pos:column="23"/></name><index pos:line="9" pos:column="23">[<expr><literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr>]<pos:position pos:line="9" pos:column="26"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="28">"add"<pos:position pos:line="9" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><call><name pos:line="10" pos:column="24">add<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">ac<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">-<pos:position pos:line="10" pos:column="32"/></operator> <literal type="number" pos:line="10" pos:column="33">1<pos:position pos:line="10" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">av<pos:position pos:line="10" pos:column="38"/></name> <operator pos:line="10" pos:column="39">+<pos:position pos:line="10" pos:column="40"/></operator> <literal type="number" pos:line="10" pos:column="41">1<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">prefix<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></return></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">strcmp<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name><name pos:line="11" pos:column="21">av<pos:position pos:line="11" pos:column="23"/></name><index pos:line="11" pos:column="23">[<expr><literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr>]<pos:position pos:line="11" pos:column="26"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="28">"prune"<pos:position pos:line="11" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><call><name pos:line="12" pos:column="24">prune<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">ac<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">-<pos:position pos:line="12" pos:column="34"/></operator> <literal type="number" pos:line="12" pos:column="35">1<pos:position pos:line="12" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">av<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">+<pos:position pos:line="12" pos:column="42"/></operator> <literal type="number" pos:line="12" pos:column="43">1<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">prefix<pos:position pos:line="12" pos:column="52"/></name></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="54"/></return></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">strcmp<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name><name pos:line="13" pos:column="21">av<pos:position pos:line="13" pos:column="23"/></name><index pos:line="13" pos:column="23">[<expr><literal type="number" pos:line="13" pos:column="24">1<pos:position pos:line="13" pos:column="25"/></literal></expr>]<pos:position pos:line="13" pos:column="26"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="28">"list"<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><call><name pos:line="14" pos:column="24">list<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">ac<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">-<pos:position pos:line="14" pos:column="33"/></operator> <literal type="number" pos:line="14" pos:column="34">1<pos:position pos:line="14" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="37">av<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">+<pos:position pos:line="14" pos:column="41"/></operator> <literal type="number" pos:line="14" pos:column="42">1<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">prefix<pos:position pos:line="14" pos:column="51"/></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">usage_with_options<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">worktree_usage<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">options<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_907_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">wt_status_print_change_data<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">wt_status<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">s<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
					<parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">change_type<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
					<parameter><decl><type><name><name pos:line="3" pos:column="41">struct<pos:position pos:line="3" pos:column="47"/></name> <name pos:line="3" pos:column="48">string_list_item<pos:position pos:line="3" pos:column="64"/></name></name> <modifier pos:line="3" pos:column="65">*<pos:position pos:line="3" pos:column="66"/></modifier></type><name pos:line="3" pos:column="66">it<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="69"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">wt_status_change_data<pos:position pos:line="5" pos:column="37"/></name></name> <modifier pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></modifier></type><name pos:line="5" pos:column="39">d<pos:position pos:line="5" pos:column="40"/></name> <init pos:line="5" pos:column="41">= <expr><name><name pos:line="5" pos:column="43">it<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="47">util<pos:position pos:line="5" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">c<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><call><name pos:line="6" pos:column="25">color<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">change_type<pos:position pos:line="6" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="44">s<pos:position pos:line="6" pos:column="45"/></name></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">status<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">one_name<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">two_name<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">one<pos:position pos:line="10" pos:column="24"/></name></decl>, <modifier pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="27">two<pos:position pos:line="10" pos:column="30"/></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">strbuf<pos:position pos:line="11" pos:column="22"/></name></name></type> <name pos:line="11" pos:column="23">onebuf<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><name pos:line="11" pos:column="32">STRBUF_INIT<pos:position pos:line="11" pos:column="43"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="45">twobuf<pos:position pos:line="11" pos:column="51"/></name> <init pos:line="11" pos:column="52">= <expr><name pos:line="11" pos:column="54">STRBUF_INIT<pos:position pos:line="11" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">strbuf<pos:position pos:line="12" pos:column="22"/></name></name></type> <name pos:line="12" pos:column="23">extra<pos:position pos:line="12" pos:column="28"/></name> <init pos:line="12" pos:column="29">= <expr><name pos:line="12" pos:column="31">STRBUF_INIT<pos:position pos:line="12" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="13" pos:column="9">static<pos:position pos:line="13" pos:column="15"/></specifier> <type><name pos:line="13" pos:column="16">char<pos:position pos:line="13" pos:column="20"/></name> <modifier pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></modifier></type><name pos:line="13" pos:column="22">padding<pos:position pos:line="13" pos:column="29"/></name></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="14" pos:column="9">static<pos:position pos:line="14" pos:column="15"/></specifier> <type><name pos:line="14" pos:column="16">int<pos:position pos:line="14" pos:column="19"/></name></type> <name pos:line="14" pos:column="20">label_width<pos:position pos:line="14" pos:column="31"/></name></decl>;<pos:position pos:line="14" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="15" pos:column="9">const<pos:position pos:line="15" pos:column="14"/></specifier> <name pos:line="15" pos:column="15">char<pos:position pos:line="15" pos:column="19"/></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name pos:line="15" pos:column="21">what<pos:position pos:line="15" pos:column="25"/></name></decl>;<pos:position pos:line="15" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">len<pos:position pos:line="16" pos:column="16"/></name></decl>;<pos:position pos:line="16" pos:column="17"/></decl_stmt>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">padding<pos:position pos:line="18" pos:column="21"/></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22"> <block pos:line="18" pos:column="23">{
		<comment type="block" pos:line="19" pos:column="17">/* If DIFF_STATUS_* uses outside the range [A..Z], we're in trouble */</comment>
		<expr_stmt><expr><name pos:line="20" pos:column="17">label_width<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <call><name pos:line="20" pos:column="31">maxwidth<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">(<argument><expr><name pos:line="20" pos:column="40">wt_status_diff_status_string<pos:position pos:line="20" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="70">'A'<pos:position pos:line="20" pos:column="73"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="75">'Z'<pos:position pos:line="20" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">label_width<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">+=<pos:position pos:line="21" pos:column="31"/></operator> <call><name pos:line="21" pos:column="32">strlen<pos:position pos:line="21" pos:column="38"/></name><argument_list pos:line="21" pos:column="38">(<argument><expr><literal type="string" pos:line="21" pos:column="39">" "<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">padding<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <call><name pos:line="22" pos:column="27">xmallocz<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name pos:line="22" pos:column="36">label_width<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">memset<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">padding<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="33">' '<pos:position pos:line="23" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">label_width<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="26" pos:column="9">one_name<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">two_name<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <name><name pos:line="26" pos:column="31">it<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">string<pos:position pos:line="26" pos:column="41"/></name></name></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
	<switch pos:line="27" pos:column="9">switch <condition pos:line="27" pos:column="16">(<expr><name pos:line="27" pos:column="17">change_type<pos:position pos:line="27" pos:column="28"/></name></expr>)<pos:position pos:line="27" pos:column="29"/></condition> <block pos:line="27" pos:column="30">{
	<case pos:line="28" pos:column="9">case <expr><name pos:line="28" pos:column="14">WT_STATUS_UPDATED<pos:position pos:line="28" pos:column="31"/></name></expr>:<pos:position pos:line="28" pos:column="32"/></case>
		<expr_stmt><expr><name pos:line="29" pos:column="17">status<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <name><name pos:line="29" pos:column="26">d<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">index_status<pos:position pos:line="29" pos:column="41"/></name></name></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name><name pos:line="30" pos:column="21">d<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">head_path<pos:position pos:line="30" pos:column="33"/></name></name></expr>)<pos:position pos:line="30" pos:column="34"/></condition><then pos:line="30" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="25">one_name<pos:position pos:line="31" pos:column="33"/></name> <operator pos:line="31" pos:column="34">=<pos:position pos:line="31" pos:column="35"/></operator> <name><name pos:line="31" pos:column="36">d<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">-&gt;<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="39">head_path<pos:position pos:line="31" pos:column="48"/></name></name></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt></block></then></if>
		<break pos:line="32" pos:column="17">break;<pos:position pos:line="32" pos:column="23"/></break>
	<case pos:line="33" pos:column="9">case <expr><name pos:line="33" pos:column="14">WT_STATUS_CHANGED<pos:position pos:line="33" pos:column="31"/></name></expr>:<pos:position pos:line="33" pos:column="32"/></case>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name><name pos:line="34" pos:column="21">d<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">new_submodule_commits<pos:position pos:line="34" pos:column="45"/></name></name> <operator pos:line="34" pos:column="46">||<pos:position pos:line="34" pos:column="48"/></operator> <name><name pos:line="34" pos:column="49">d<pos:position pos:line="34" pos:column="50"/></name><operator pos:line="34" pos:column="50">-&gt;<pos:position pos:line="34" pos:column="55"/></operator><name pos:line="34" pos:column="52">dirty_submodule<pos:position pos:line="34" pos:column="67"/></name></name></expr>)<pos:position pos:line="34" pos:column="68"/></condition><then pos:line="34" pos:column="68"> <block pos:line="34" pos:column="69">{
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">strbuf_addstr<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><operator pos:line="35" pos:column="39">&amp;<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="40">extra<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="47">" ("<pos:position pos:line="35" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><name><name pos:line="36" pos:column="29">d<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">new_submodule_commits<pos:position pos:line="36" pos:column="53"/></name></name></expr>)<pos:position pos:line="36" pos:column="54"/></condition><then pos:line="36" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="33">strbuf_addf<pos:position pos:line="37" pos:column="44"/></name><argument_list pos:line="37" pos:column="44">(<argument><expr><operator pos:line="37" pos:column="45">&amp;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="46">extra<pos:position pos:line="37" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="53">_<pos:position pos:line="37" pos:column="54"/></name><argument_list pos:line="37" pos:column="54">(<argument><expr><literal type="string" pos:line="37" pos:column="55">"new commits, "<pos:position pos:line="37" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="73"/></expr_stmt></block></then></if>
			<if pos:line="38" pos:column="25">if <condition pos:line="38" pos:column="28">(<expr><name><name pos:line="38" pos:column="29">d<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">dirty_submodule<pos:position pos:line="38" pos:column="47"/></name></name> <operator pos:line="38" pos:column="48">&amp;<pos:position pos:line="38" pos:column="53"/></operator> <name pos:line="38" pos:column="50">DIRTY_SUBMODULE_MODIFIED<pos:position pos:line="38" pos:column="74"/></name></expr>)<pos:position pos:line="38" pos:column="75"/></condition><then pos:line="38" pos:column="75">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="33">strbuf_addf<pos:position pos:line="39" pos:column="44"/></name><argument_list pos:line="39" pos:column="44">(<argument><expr><operator pos:line="39" pos:column="45">&amp;<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="46">extra<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="53">_<pos:position pos:line="39" pos:column="54"/></name><argument_list pos:line="39" pos:column="54">(<argument><expr><literal type="string" pos:line="39" pos:column="55">"modified content, "<pos:position pos:line="39" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="78"/></expr_stmt></block></then></if>
			<if pos:line="40" pos:column="25">if <condition pos:line="40" pos:column="28">(<expr><name><name pos:line="40" pos:column="29">d<pos:position pos:line="40" pos:column="30"/></name><operator pos:line="40" pos:column="30">-&gt;<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="32">dirty_submodule<pos:position pos:line="40" pos:column="47"/></name></name> <operator pos:line="40" pos:column="48">&amp;<pos:position pos:line="40" pos:column="53"/></operator> <name pos:line="40" pos:column="50">DIRTY_SUBMODULE_UNTRACKED<pos:position pos:line="40" pos:column="75"/></name></expr>)<pos:position pos:line="40" pos:column="76"/></condition><then pos:line="40" pos:column="76">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="33">strbuf_addf<pos:position pos:line="41" pos:column="44"/></name><argument_list pos:line="41" pos:column="44">(<argument><expr><operator pos:line="41" pos:column="45">&amp;<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="46">extra<pos:position pos:line="41" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="53">_<pos:position pos:line="41" pos:column="54"/></name><argument_list pos:line="41" pos:column="54">(<argument><expr><literal type="string" pos:line="41" pos:column="55">"untracked content, "<pos:position pos:line="41" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="79"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">strbuf_setlen<pos:position pos:line="42" pos:column="38"/></name><argument_list pos:line="42" pos:column="38">(<argument><expr><operator pos:line="42" pos:column="39">&amp;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="40">extra<pos:position pos:line="42" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="47">extra<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">.<pos:position pos:line="42" pos:column="53"/></operator><name pos:line="42" pos:column="53">len<pos:position pos:line="42" pos:column="56"/></name></name> <operator pos:line="42" pos:column="57">-<pos:position pos:line="42" pos:column="58"/></operator> <literal type="number" pos:line="42" pos:column="59">2<pos:position pos:line="42" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">strbuf_addch<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><operator pos:line="43" pos:column="38">&amp;<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="39">extra<pos:position pos:line="43" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="43" pos:column="46">')'<pos:position pos:line="43" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="45" pos:column="17">status<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">=<pos:position pos:line="45" pos:column="25"/></operator> <name><name pos:line="45" pos:column="26">d<pos:position pos:line="45" pos:column="27"/></name><operator pos:line="45" pos:column="27">-&gt;<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="29">worktree_status<pos:position pos:line="45" pos:column="44"/></name></name></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt>
		<break pos:line="46" pos:column="17">break;<pos:position pos:line="46" pos:column="23"/></break>
	<default pos:line="47" pos:column="9">default:<pos:position pos:line="47" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">die<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><literal type="string" pos:line="48" pos:column="21">"BUG: unhandled change_type %d in wt_status_print_change_data"<pos:position pos:line="48" pos:column="83"/></literal></expr></argument>,
		    <argument><expr><name pos:line="49" pos:column="21">change_type<pos:position pos:line="49" pos:column="32"/></name></expr></argument>)<pos:position pos:line="49" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></switch>

	<expr_stmt><expr><name pos:line="52" pos:column="9">one<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">=<pos:position pos:line="52" pos:column="14"/></operator> <call><name pos:line="52" pos:column="15">quote_path<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">one_name<pos:position pos:line="52" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="36">s<pos:position pos:line="52" pos:column="37"/></name><operator pos:line="52" pos:column="37">-&gt;<pos:position pos:line="52" pos:column="42"/></operator><name pos:line="52" pos:column="39">prefix<pos:position pos:line="52" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="47">&amp;<pos:position pos:line="52" pos:column="52"/></operator><name pos:line="52" pos:column="48">onebuf<pos:position pos:line="52" pos:column="54"/></name></expr></argument>)<pos:position pos:line="52" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name pos:line="53" pos:column="9">two<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <call><name pos:line="53" pos:column="15">quote_path<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">two_name<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="36">s<pos:position pos:line="53" pos:column="37"/></name><operator pos:line="53" pos:column="37">-&gt;<pos:position pos:line="53" pos:column="42"/></operator><name pos:line="53" pos:column="39">prefix<pos:position pos:line="53" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="47">&amp;<pos:position pos:line="53" pos:column="52"/></operator><name pos:line="53" pos:column="48">twobuf<pos:position pos:line="53" pos:column="54"/></name></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="56"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="55" pos:column="9">status_printf<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">s<pos:position pos:line="55" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="26">color<pos:position pos:line="55" pos:column="31"/></name><argument_list pos:line="55" pos:column="31">(<argument><expr><name pos:line="55" pos:column="32">WT_STATUS_HEADER<pos:position pos:line="55" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="50">s<pos:position pos:line="55" pos:column="51"/></name></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="54">"\t"<pos:position pos:line="55" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name pos:line="56" pos:column="9">what<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">=<pos:position pos:line="56" pos:column="15"/></operator> <call><name pos:line="56" pos:column="16">wt_status_diff_status_string<pos:position pos:line="56" pos:column="44"/></name><argument_list pos:line="56" pos:column="44">(<argument><expr><name pos:line="56" pos:column="45">status<pos:position pos:line="56" pos:column="51"/></name></expr></argument>)<pos:position pos:line="56" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="53"/></expr_stmt>
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><operator pos:line="57" pos:column="13">!<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">what<pos:position pos:line="57" pos:column="18"/></name></expr>)<pos:position pos:line="57" pos:column="19"/></condition><then pos:line="57" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="17">die<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><call><name pos:line="58" pos:column="21">_<pos:position pos:line="58" pos:column="22"/></name><argument_list pos:line="58" pos:column="22">(<argument><expr><literal type="string" pos:line="58" pos:column="23">"bug: unhandled diff status %c"<pos:position pos:line="58" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="58" pos:column="57">status<pos:position pos:line="58" pos:column="63"/></name></expr></argument>)<pos:position pos:line="58" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="65"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="59" pos:column="9">len<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">=<pos:position pos:line="59" pos:column="14"/></operator> <name pos:line="59" pos:column="15">label_width<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">-<pos:position pos:line="59" pos:column="28"/></operator> <call><name pos:line="59" pos:column="29">utf8_strwidth<pos:position pos:line="59" pos:column="42"/></name><argument_list pos:line="59" pos:column="42">(<argument><expr><name pos:line="59" pos:column="43">what<pos:position pos:line="59" pos:column="47"/></name></expr></argument>)<pos:position pos:line="59" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">assert<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">(<argument><expr><name pos:line="60" pos:column="16">len<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">&gt;=<pos:position pos:line="60" pos:column="25"/></operator> <literal type="number" pos:line="60" pos:column="23">0<pos:position pos:line="60" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="26"/></expr_stmt>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">status<pos:position pos:line="61" pos:column="19"/></name> <operator pos:line="61" pos:column="20">==<pos:position pos:line="61" pos:column="22"/></operator> <name pos:line="61" pos:column="23">DIFF_STATUS_COPIED<pos:position pos:line="61" pos:column="41"/></name> <operator pos:line="61" pos:column="42">||<pos:position pos:line="61" pos:column="44"/></operator> <name pos:line="61" pos:column="45">status<pos:position pos:line="61" pos:column="51"/></name> <operator pos:line="61" pos:column="52">==<pos:position pos:line="61" pos:column="54"/></operator> <name pos:line="61" pos:column="55">DIFF_STATUS_RENAMED<pos:position pos:line="61" pos:column="74"/></name></expr>)<pos:position pos:line="61" pos:column="75"/></condition><then pos:line="61" pos:column="75">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="17">status_printf_more<pos:position pos:line="62" pos:column="35"/></name><argument_list pos:line="62" pos:column="35">(<argument><expr><name pos:line="62" pos:column="36">s<pos:position pos:line="62" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="39">c<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="42">"%s%.*s%s -&gt; %s"<pos:position pos:line="62" pos:column="61"/></literal></expr></argument>,
				   <argument><expr><name pos:line="63" pos:column="36">what<pos:position pos:line="63" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="42">len<pos:position pos:line="63" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="47">padding<pos:position pos:line="63" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="56">one<pos:position pos:line="63" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="61">two<pos:position pos:line="63" pos:column="64"/></name></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="66"/></expr_stmt></block></then>
	<else pos:line="64" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="17">status_printf_more<pos:position pos:line="65" pos:column="35"/></name><argument_list pos:line="65" pos:column="35">(<argument><expr><name pos:line="65" pos:column="36">s<pos:position pos:line="65" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="39">c<pos:position pos:line="65" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="42">"%s%.*s%s"<pos:position pos:line="65" pos:column="52"/></literal></expr></argument>,
				   <argument><expr><name pos:line="66" pos:column="36">what<pos:position pos:line="66" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="42">len<pos:position pos:line="66" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="47">padding<pos:position pos:line="66" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="56">one<pos:position pos:line="66" pos:column="59"/></name></expr></argument>)<pos:position pos:line="66" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="61"/></expr_stmt></block></else></if>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name><name pos:line="67" pos:column="13">extra<pos:position pos:line="67" pos:column="18"/></name><operator pos:line="67" pos:column="18">.<pos:position pos:line="67" pos:column="19"/></operator><name pos:line="67" pos:column="19">len<pos:position pos:line="67" pos:column="22"/></name></name></expr>)<pos:position pos:line="67" pos:column="23"/></condition><then pos:line="67" pos:column="23"> <block pos:line="67" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">status_printf_more<pos:position pos:line="68" pos:column="35"/></name><argument_list pos:line="68" pos:column="35">(<argument><expr><name pos:line="68" pos:column="36">s<pos:position pos:line="68" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="39">color<pos:position pos:line="68" pos:column="44"/></name><argument_list pos:line="68" pos:column="44">(<argument><expr><name pos:line="68" pos:column="45">WT_STATUS_HEADER<pos:position pos:line="68" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="63">s<pos:position pos:line="68" pos:column="64"/></name></expr></argument>)<pos:position pos:line="68" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="67">"%s"<pos:position pos:line="68" pos:column="71"/></literal></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="73">extra<pos:position pos:line="68" pos:column="78"/></name><operator pos:line="68" pos:column="78">.<pos:position pos:line="68" pos:column="79"/></operator><name pos:line="68" pos:column="79">buf<pos:position pos:line="68" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="84"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">strbuf_release<pos:position pos:line="69" pos:column="31"/></name><argument_list pos:line="69" pos:column="31">(<argument><expr><operator pos:line="69" pos:column="32">&amp;<pos:position pos:line="69" pos:column="37"/></operator><name pos:line="69" pos:column="33">extra<pos:position pos:line="69" pos:column="38"/></name></expr></argument>)<pos:position pos:line="69" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">status_printf_more<pos:position pos:line="71" pos:column="27"/></name><argument_list pos:line="71" pos:column="27">(<argument><expr><name pos:line="71" pos:column="28">s<pos:position pos:line="71" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="31">GIT_COLOR_NORMAL<pos:position pos:line="71" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="49">"\n"<pos:position pos:line="71" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="72" pos:column="9">strbuf_release<pos:position pos:line="72" pos:column="23"/></name><argument_list pos:line="72" pos:column="23">(<argument><expr><operator pos:line="72" pos:column="24">&amp;<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="25">onebuf<pos:position pos:line="72" pos:column="31"/></name></expr></argument>)<pos:position pos:line="72" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="73" pos:column="9">strbuf_release<pos:position pos:line="73" pos:column="23"/></name><argument_list pos:line="73" pos:column="23">(<argument><expr><operator pos:line="73" pos:column="24">&amp;<pos:position pos:line="73" pos:column="29"/></operator><name pos:line="73" pos:column="25">twobuf<pos:position pos:line="73" pos:column="31"/></name></expr></argument>)<pos:position pos:line="73" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

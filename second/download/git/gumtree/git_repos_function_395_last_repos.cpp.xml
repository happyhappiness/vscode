<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_395_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_shared_index<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">index_state<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">istate<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">lock_file<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">lock<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">unsigned<pos:position pos:line="2" pos:column="63"/></name></type> <name pos:line="2" pos:column="64">flags<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">split_index<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">si<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><name><name pos:line="4" pos:column="34">istate<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">-&gt;<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="42">split_index<pos:position pos:line="4" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">fd<pos:position pos:line="5" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="17">ret<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">fd<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <call><name pos:line="7" pos:column="14">mks_tempfile<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><operator pos:line="7" pos:column="27">&amp;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="28">temporary_sharedindex<pos:position pos:line="7" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="51">git_path<pos:position pos:line="7" pos:column="59"/></name><argument_list pos:line="7" pos:column="59">(<argument><expr><literal type="string" pos:line="7" pos:column="60">"sharedindex_XXXXXX"<pos:position pos:line="7" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="83"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">fd<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">&lt;<pos:position pos:line="8" pos:column="20"/></operator> <literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20"> <block pos:line="8" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">hashclr<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name><name pos:line="9" pos:column="25">si<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">base_sha1<pos:position pos:line="9" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><call><name pos:line="10" pos:column="24">do_write_locked_index<pos:position pos:line="10" pos:column="45"/></name><argument_list pos:line="10" pos:column="45">(<argument><expr><name pos:line="10" pos:column="46">istate<pos:position pos:line="10" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="54">lock<pos:position pos:line="10" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="60">flags<pos:position pos:line="10" pos:column="65"/></name></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="67"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">move_cache_to_base_index<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">istate<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">ret<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">do_write_index<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name><name pos:line="13" pos:column="30">si<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">-&gt;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="34">base<pos:position pos:line="13" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="40">&amp;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="41">temporary_sharedindex<pos:position pos:line="13" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="64">1<pos:position pos:line="13" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="67"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">ret<pos:position pos:line="14" pos:column="16"/></name></expr>)<pos:position pos:line="14" pos:column="17"/></condition><then pos:line="14" pos:column="17"> <block pos:line="14" pos:column="18">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">delete_tempfile<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><operator pos:line="15" pos:column="33">&amp;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="34">temporary_sharedindex<pos:position pos:line="15" pos:column="55"/></name></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">ret<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="18" pos:column="9">ret<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">adjust_shared_perm<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><call><name pos:line="18" pos:column="34">get_tempfile_path<pos:position pos:line="18" pos:column="51"/></name><argument_list pos:line="18" pos:column="51">(<argument><expr><operator pos:line="18" pos:column="52">&amp;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="53">temporary_sharedindex<pos:position pos:line="18" pos:column="74"/></name></expr></argument>)<pos:position pos:line="18" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="77"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">ret<pos:position pos:line="19" pos:column="16"/></name></expr>)<pos:position pos:line="19" pos:column="17"/></condition><then pos:line="19" pos:column="17"> <block pos:line="19" pos:column="18">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">int<pos:position pos:line="20" pos:column="20"/></name></type> <name pos:line="20" pos:column="21">save_errno<pos:position pos:line="20" pos:column="31"/></name> <init pos:line="20" pos:column="32">= <expr><name pos:line="20" pos:column="34">errno<pos:position pos:line="20" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="40"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">error<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><literal type="string" pos:line="21" pos:column="23">"cannot fix permission bits on %s"<pos:position pos:line="21" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="59">get_tempfile_path<pos:position pos:line="21" pos:column="76"/></name><argument_list pos:line="21" pos:column="76">(<argument><expr><operator pos:line="21" pos:column="77">&amp;<pos:position pos:line="21" pos:column="82"/></operator><name pos:line="21" pos:column="78">temporary_sharedindex<pos:position pos:line="21" pos:column="99"/></name></expr></argument>)<pos:position pos:line="21" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="102"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">delete_tempfile<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><operator pos:line="22" pos:column="33">&amp;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="34">temporary_sharedindex<pos:position pos:line="22" pos:column="55"/></name></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">errno<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">save_errno<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
		<return pos:line="24" pos:column="17">return <expr><name pos:line="24" pos:column="24">ret<pos:position pos:line="24" pos:column="27"/></name></expr>;<pos:position pos:line="24" pos:column="28"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="26" pos:column="9">ret<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <call><name pos:line="26" pos:column="15">rename_tempfile<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><operator pos:line="26" pos:column="31">&amp;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="32">temporary_sharedindex<pos:position pos:line="26" pos:column="53"/></name></expr></argument>,
			      <argument><expr><call><name pos:line="27" pos:column="31">git_path<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><literal type="string" pos:line="27" pos:column="40">"sharedindex.%s"<pos:position pos:line="27" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="58">sha1_to_hex<pos:position pos:line="27" pos:column="69"/></name><argument_list pos:line="27" pos:column="69">(<argument><expr><name><name pos:line="27" pos:column="70">si<pos:position pos:line="27" pos:column="72"/></name><operator pos:line="27" pos:column="72">-&gt;<pos:position pos:line="27" pos:column="77"/></operator><name pos:line="27" pos:column="74">base<pos:position pos:line="27" pos:column="78"/></name><operator pos:line="27" pos:column="78">-&gt;<pos:position pos:line="27" pos:column="83"/></operator><name pos:line="27" pos:column="80">sha1<pos:position pos:line="27" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="88"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">ret<pos:position pos:line="28" pos:column="17"/></name></expr>)<pos:position pos:line="28" pos:column="18"/></condition><then pos:line="28" pos:column="18"> <block pos:line="28" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">hashcpy<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name><name pos:line="29" pos:column="25">si<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">base_sha1<pos:position pos:line="29" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="40">si<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">base<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">-&gt;<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="50">sha1<pos:position pos:line="29" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">clean_shared_index_files<pos:position pos:line="30" pos:column="41"/></name><argument_list pos:line="30" pos:column="41">(<argument><expr><call><name pos:line="30" pos:column="42">sha1_to_hex<pos:position pos:line="30" pos:column="53"/></name><argument_list pos:line="30" pos:column="53">(<argument><expr><name><name pos:line="30" pos:column="54">si<pos:position pos:line="30" pos:column="56"/></name><operator pos:line="30" pos:column="56">-&gt;<pos:position pos:line="30" pos:column="61"/></operator><name pos:line="30" pos:column="58">base<pos:position pos:line="30" pos:column="62"/></name><operator pos:line="30" pos:column="62">-&gt;<pos:position pos:line="30" pos:column="67"/></operator><name pos:line="30" pos:column="64">sha1<pos:position pos:line="30" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="71"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">ret<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

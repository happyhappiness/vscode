<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1687.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">strbuf_add_absolute_path<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">strbuf<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">sb<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">path<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><operator pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="15">path<pos:position pos:line="3" pos:column="19"/></name></expr>)<pos:position pos:line="3" pos:column="20"/></condition><then pos:line="3" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="17">die<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><literal type="string" pos:line="4" pos:column="21">"The empty string is not a valid path"<pos:position pos:line="4" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="61"/></expr_stmt></block></then></if>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><call><name pos:line="5" pos:column="14">is_absolute_path<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><name pos:line="5" pos:column="31">path<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37"> <block pos:line="5" pos:column="38">{
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">struct<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">stat<pos:position pos:line="6" pos:column="28"/></name></name></type> <name pos:line="6" pos:column="29">cwd_stat<pos:position pos:line="6" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="39">pwd_stat<pos:position pos:line="6" pos:column="47"/></name></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">size_t<pos:position pos:line="7" pos:column="23"/></name></type> <name pos:line="7" pos:column="24">orig_len<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><name><name pos:line="7" pos:column="35">sb<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">len<pos:position pos:line="7" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">char<pos:position pos:line="8" pos:column="21"/></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">cwd<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><call><name pos:line="8" pos:column="29">xgetcwd<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">()<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">pwd<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><call><name pos:line="9" pos:column="29">getenv<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><literal type="string" pos:line="9" pos:column="36">"PWD"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="43"/></decl_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">pwd<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">&amp;&amp;<pos:position pos:line="10" pos:column="35"/></operator> <call><name pos:line="10" pos:column="28">strcmp<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">pwd<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">cwd<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call> <operator pos:line="10" pos:column="45">&amp;&amp;<pos:position pos:line="10" pos:column="55"/></operator>
		    <operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><call><name pos:line="11" pos:column="22">stat<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">cwd<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="32">&amp;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="33">cwd_stat<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call> <operator pos:line="11" pos:column="43">&amp;&amp;<pos:position pos:line="11" pos:column="53"/></operator>
		    <operator pos:line="12" pos:column="21">(<pos:position pos:line="12" pos:column="22"/></operator><name><name pos:line="12" pos:column="22">cwd_stat<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">.<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">st_dev<pos:position pos:line="12" pos:column="37"/></name></name> <operator pos:line="12" pos:column="38">||<pos:position pos:line="12" pos:column="40"/></operator> <name><name pos:line="12" pos:column="41">cwd_stat<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">.<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="50">st_ino<pos:position pos:line="12" pos:column="56"/></name></name><operator pos:line="12" pos:column="56">)<pos:position pos:line="12" pos:column="57"/></operator> <operator pos:line="12" pos:column="58">&amp;&amp;<pos:position pos:line="12" pos:column="68"/></operator>
		    <operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><call><name pos:line="13" pos:column="22">stat<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">pwd<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="32">&amp;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="33">pwd_stat<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call> <operator pos:line="13" pos:column="43">&amp;&amp;<pos:position pos:line="13" pos:column="53"/></operator>
		    <name><name pos:line="14" pos:column="21">pwd_stat<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">.<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">st_dev<pos:position pos:line="14" pos:column="36"/></name></name> <operator pos:line="14" pos:column="37">==<pos:position pos:line="14" pos:column="39"/></operator> <name><name pos:line="14" pos:column="40">cwd_stat<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">.<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="49">st_dev<pos:position pos:line="14" pos:column="55"/></name></name> <operator pos:line="14" pos:column="56">&amp;&amp;<pos:position pos:line="14" pos:column="66"/></operator>
		    <name><name pos:line="15" pos:column="21">pwd_stat<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">.<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">st_ino<pos:position pos:line="15" pos:column="36"/></name></name> <operator pos:line="15" pos:column="37">==<pos:position pos:line="15" pos:column="39"/></operator> <name><name pos:line="15" pos:column="40">cwd_stat<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">.<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="49">st_ino<pos:position pos:line="15" pos:column="55"/></name></name></expr>)<pos:position pos:line="15" pos:column="56"/></condition><then pos:line="15" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">strbuf_addstr<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">sb<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="43">pwd<pos:position pos:line="16" pos:column="46"/></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt></block></then>
		<else pos:line="17" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">strbuf_addstr<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name pos:line="18" pos:column="39">sb<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">cwd<pos:position pos:line="18" pos:column="46"/></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt></block></else></if>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name><name pos:line="19" pos:column="21">sb<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">len<pos:position pos:line="19" pos:column="28"/></name></name> <operator pos:line="19" pos:column="29">&gt;<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="31">orig_len<pos:position pos:line="19" pos:column="39"/></name> <operator pos:line="19" pos:column="40">&amp;&amp;<pos:position pos:line="19" pos:column="50"/></operator> <operator pos:line="19" pos:column="43">!<pos:position pos:line="19" pos:column="44"/></operator><call><name pos:line="19" pos:column="44">is_dir_sep<pos:position pos:line="19" pos:column="54"/></name><argument_list pos:line="19" pos:column="54">(<argument><expr><name><name pos:line="19" pos:column="55">sb<pos:position pos:line="19" pos:column="57"/></name><operator pos:line="19" pos:column="57">-&gt;<pos:position pos:line="19" pos:column="62"/></operator><name pos:line="19" pos:column="59">buf<pos:position pos:line="19" pos:column="62"/></name><index pos:line="19" pos:column="62">[<expr><name><name pos:line="19" pos:column="63">sb<pos:position pos:line="19" pos:column="65"/></name><operator pos:line="19" pos:column="65">-&gt;<pos:position pos:line="19" pos:column="70"/></operator><name pos:line="19" pos:column="67">len<pos:position pos:line="19" pos:column="70"/></name></name> <operator pos:line="19" pos:column="71">-<pos:position pos:line="19" pos:column="72"/></operator> <literal type="number" pos:line="19" pos:column="73">1<pos:position pos:line="19" pos:column="74"/></literal></expr>]<pos:position pos:line="19" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="77"/></condition><then pos:line="19" pos:column="77">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">strbuf_addch<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">sb<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="42">'/'<pos:position pos:line="20" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">free<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">cwd<pos:position pos:line="21" pos:column="25"/></name></expr></argument>)<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">strbuf_addstr<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">sb<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="27">path<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

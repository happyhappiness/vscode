<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1264_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">for_each_bisect_ref<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">submodule<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">each_ref_fn<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">fn<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">void<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">cb_data<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="86">const<pos:position pos:line="1" pos:column="91"/></specifier> <name pos:line="1" pos:column="92">char<pos:position pos:line="1" pos:column="96"/></name> <modifier pos:line="1" pos:column="97">*<pos:position pos:line="1" pos:column="98"/></modifier></type><name pos:line="1" pos:column="98">term<pos:position pos:line="1" pos:column="102"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="103"/></parameter_list> <block pos:line="1" pos:column="104">{
	<decl_stmt><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">strbuf<pos:position pos:line="2" pos:column="22"/></name></name></type> <name pos:line="2" pos:column="23">bisect_refs<pos:position pos:line="2" pos:column="34"/></name> <init pos:line="2" pos:column="35">= <expr><name pos:line="2" pos:column="37">STRBUF_INIT<pos:position pos:line="2" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">status<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">strbuf_addf<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><operator pos:line="4" pos:column="21">&amp;<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="22">bisect_refs<pos:position pos:line="4" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="35">"refs/bisect/%s"<pos:position pos:line="4" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="53">term<pos:position pos:line="4" pos:column="57"/></name></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name pos:line="5" pos:column="9">status<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <call><name pos:line="5" pos:column="18">for_each_fullref_in_submodule<pos:position pos:line="5" pos:column="47"/></name><argument_list pos:line="5" pos:column="47">(<argument><expr><name pos:line="5" pos:column="48">submodule<pos:position pos:line="5" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="59">bisect_refs<pos:position pos:line="5" pos:column="70"/></name><operator pos:line="5" pos:column="70">.<pos:position pos:line="5" pos:column="71"/></operator><name pos:line="5" pos:column="71">buf<pos:position pos:line="5" pos:column="74"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="76">fn<pos:position pos:line="5" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="80">cb_data<pos:position pos:line="5" pos:column="87"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="89">0<pos:position pos:line="5" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="92"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">strbuf_release<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><operator pos:line="6" pos:column="24">&amp;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="25">bisect_refs<pos:position pos:line="6" pos:column="36"/></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>
	<return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">status<pos:position pos:line="7" pos:column="22"/></name></expr>;<pos:position pos:line="7" pos:column="23"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

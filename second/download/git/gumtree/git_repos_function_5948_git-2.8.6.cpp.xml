<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5948_git-2.8.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">gitstrcasestr<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">haystack<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">needle<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">nlen<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><call><name pos:line="3" pos:column="20">strlen<pos:position pos:line="3" pos:column="26"/></name><argument_list pos:line="3" pos:column="26">(<argument><expr><name pos:line="3" pos:column="27">needle<pos:position pos:line="3" pos:column="33"/></name></expr></argument>)<pos:position pos:line="3" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">hlen<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><call><name pos:line="4" pos:column="20">strlen<pos:position pos:line="4" pos:column="26"/></name><argument_list pos:line="4" pos:column="26">(<argument><expr><name pos:line="4" pos:column="27">haystack<pos:position pos:line="4" pos:column="35"/></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call> <operator pos:line="4" pos:column="37">-<pos:position pos:line="4" pos:column="38"/></operator> <name pos:line="4" pos:column="39">nlen<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">+<pos:position pos:line="4" pos:column="45"/></operator> <literal type="number" pos:line="4" pos:column="46">1<pos:position pos:line="4" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="25">hlen<pos:position pos:line="7" pos:column="29"/></name></expr>;<pos:position pos:line="7" pos:column="30"/></condition> <incr><expr><name pos:line="7" pos:column="31">i<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">++<pos:position pos:line="7" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="35"/></control> <block pos:line="7" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">j<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
		<for pos:line="9" pos:column="17">for <control pos:line="9" pos:column="21">(<init><expr><name pos:line="9" pos:column="22">j<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <literal type="number" pos:line="9" pos:column="26">0<pos:position pos:line="9" pos:column="27"/></literal></expr>;<pos:position pos:line="9" pos:column="28"/></init> <condition><expr><name pos:line="9" pos:column="29">j<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">&lt;<pos:position pos:line="9" pos:column="35"/></operator> <name pos:line="9" pos:column="33">nlen<pos:position pos:line="9" pos:column="37"/></name></expr>;<pos:position pos:line="9" pos:column="38"/></condition> <incr><expr><name pos:line="9" pos:column="39">j<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">++<pos:position pos:line="9" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="43"/></control> <block pos:line="9" pos:column="44">{
			<decl_stmt><decl><type><name pos:line="10" pos:column="25">unsigned<pos:position pos:line="10" pos:column="33"/></name> <name pos:line="10" pos:column="34">char<pos:position pos:line="10" pos:column="38"/></name></type> <name pos:line="10" pos:column="39">c1<pos:position pos:line="10" pos:column="41"/></name> <init pos:line="10" pos:column="42">= <expr><name><name pos:line="10" pos:column="44">haystack<pos:position pos:line="10" pos:column="52"/></name><index pos:line="10" pos:column="52">[<expr><name pos:line="10" pos:column="53">i<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">+<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="55">j<pos:position pos:line="10" pos:column="56"/></name></expr>]<pos:position pos:line="10" pos:column="57"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="58"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="11" pos:column="25">unsigned<pos:position pos:line="11" pos:column="33"/></name> <name pos:line="11" pos:column="34">char<pos:position pos:line="11" pos:column="38"/></name></type> <name pos:line="11" pos:column="39">c2<pos:position pos:line="11" pos:column="41"/></name> <init pos:line="11" pos:column="42">= <expr><name><name pos:line="11" pos:column="44">needle<pos:position pos:line="11" pos:column="50"/></name><index pos:line="11" pos:column="50">[<expr><name pos:line="11" pos:column="51">j<pos:position pos:line="11" pos:column="52"/></name></expr>]<pos:position pos:line="11" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="11" pos:column="54"/></decl_stmt>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><call><name pos:line="12" pos:column="29">toupper<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><name pos:line="12" pos:column="37">c1<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call> <operator pos:line="12" pos:column="41">!=<pos:position pos:line="12" pos:column="43"/></operator> <call><name pos:line="12" pos:column="44">toupper<pos:position pos:line="12" pos:column="51"/></name><argument_list pos:line="12" pos:column="51">(<argument><expr><name pos:line="12" pos:column="52">c2<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56">
				<block type="pseudo"><goto pos:line="13" pos:column="33">goto <name pos:line="13" pos:column="38">next<pos:position pos:line="13" pos:column="42"/></name>;<pos:position pos:line="13" pos:column="43"/></goto></block></then></if>
		}<pos:position pos:line="14" pos:column="18"/></block></for>
		<return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">char<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">*<pos:position pos:line="15" pos:column="31"/></operator><operator pos:line="15" pos:column="31">)<pos:position pos:line="15" pos:column="32"/></operator> <name pos:line="15" pos:column="33">haystack<pos:position pos:line="15" pos:column="41"/></name> <operator pos:line="15" pos:column="42">+<pos:position pos:line="15" pos:column="43"/></operator> <name pos:line="15" pos:column="44">i<pos:position pos:line="15" pos:column="45"/></name></expr>;<pos:position pos:line="15" pos:column="46"/></return>
	<label><name pos:line="16" pos:column="9">next<pos:position pos:line="16" pos:column="13"/></name>:<pos:position pos:line="16" pos:column="14"/></label>
		<empty_stmt pos:line="17" pos:column="17">;<pos:position pos:line="17" pos:column="18"/></empty_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">NULL<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

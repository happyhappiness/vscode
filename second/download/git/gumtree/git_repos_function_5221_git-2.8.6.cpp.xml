<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5221_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_attr_stdin_paths<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">prefix<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">cnt<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">git_attr_check<pos:position pos:line="2" pos:column="30"/></name></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">check<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">unquoted<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">STRBUF_INIT<pos:position pos:line="5" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">strbuf_getline_fn<pos:position pos:line="6" pos:column="26"/></name></type> <name pos:line="6" pos:column="27">getline_fn<pos:position pos:line="6" pos:column="37"/></name></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">getline_fn<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <ternary><condition><expr><name pos:line="8" pos:column="22">nul_term_line<pos:position pos:line="8" pos:column="35"/></name></expr> ?<pos:position pos:line="8" pos:column="37"/></condition><then pos:line="8" pos:column="37"> <expr><name pos:line="8" pos:column="38">strbuf_getline_nul<pos:position pos:line="8" pos:column="56"/></name></expr> <pos:position pos:line="8" pos:column="57"/></then><else pos:line="8" pos:column="57">: <expr><name pos:line="8" pos:column="59">strbuf_getline_lf<pos:position pos:line="8" pos:column="76"/></name></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="77"/></expr_stmt>
	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><call><name pos:line="9" pos:column="16">getline_fn<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><operator pos:line="9" pos:column="27">&amp;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="28">buf<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="33">stdin<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call> <operator pos:line="9" pos:column="40">!=<pos:position pos:line="9" pos:column="42"/></operator> <name pos:line="9" pos:column="43">EOF<pos:position pos:line="9" pos:column="46"/></name></expr>)<pos:position pos:line="9" pos:column="47"/></condition> <block pos:line="9" pos:column="48">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">nul_term_line<pos:position pos:line="10" pos:column="35"/></name> <operator pos:line="10" pos:column="36">&amp;&amp;<pos:position pos:line="10" pos:column="46"/></operator> <name><name pos:line="10" pos:column="39">buf<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">.<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="43">buf<pos:position pos:line="10" pos:column="46"/></name><index pos:line="10" pos:column="46">[<expr><literal type="number" pos:line="10" pos:column="47">0<pos:position pos:line="10" pos:column="48"/></literal></expr>]<pos:position pos:line="10" pos:column="49"/></index></name> <operator pos:line="10" pos:column="50">==<pos:position pos:line="10" pos:column="52"/></operator> <literal type="char" pos:line="10" pos:column="53">'"'<pos:position pos:line="10" pos:column="56"/></literal></expr>)<pos:position pos:line="10" pos:column="57"/></condition><then pos:line="10" pos:column="57"> <block pos:line="10" pos:column="58">{
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">strbuf_reset<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><operator pos:line="11" pos:column="38">&amp;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="39">unquoted<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><call><name pos:line="12" pos:column="29">unquote_c_style<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><operator pos:line="12" pos:column="45">&amp;<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="46">unquoted<pos:position pos:line="12" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="56">buf<pos:position pos:line="12" pos:column="59"/></name><operator pos:line="12" pos:column="59">.<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="60">buf<pos:position pos:line="12" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="65">NULL<pos:position pos:line="12" pos:column="69"/></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="71"/></condition><then pos:line="12" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="33">die<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><literal type="string" pos:line="13" pos:column="37">"line is badly quoted"<pos:position pos:line="13" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">strbuf_swap<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><operator pos:line="14" pos:column="37">&amp;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="38">buf<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="43">&amp;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="44">unquoted<pos:position pos:line="14" pos:column="52"/></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">check_attr<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">prefix<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">cnt<pos:position pos:line="16" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="41">check<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="48">buf<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">.<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="52">buf<pos:position pos:line="16" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">maybe_flush_or_die<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">stdout<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="44">"attribute to stdout"<pos:position pos:line="17" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">strbuf_release<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><operator pos:line="19" pos:column="24">&amp;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="25">buf<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">strbuf_release<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="25">unquoted<pos:position pos:line="20" pos:column="33"/></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

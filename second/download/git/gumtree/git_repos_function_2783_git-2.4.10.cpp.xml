<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2783_git-2.4.10.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ws_fix_copy<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name><name pos:line="1" pos:column="18">struct<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">strbuf<pos:position pos:line="1" pos:column="31"/></name></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">dst<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">src<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">len<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">unsigned<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">ws_rule<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="82">int<pos:position pos:line="1" pos:column="85"/></name> <modifier pos:line="1" pos:column="86">*<pos:position pos:line="1" pos:column="87"/></modifier></type><name pos:line="1" pos:column="87">error_count<pos:position pos:line="1" pos:column="98"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="99"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * len is number of bytes to be copied from src, starting
	 * at src.  Typically src[len-1] is '\n', unless this is
	 * the incomplete last line.
	 */</comment>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">add_nl_to_tail<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><literal type="number" pos:line="9" pos:column="30">0<pos:position pos:line="9" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">add_cr_to_tail<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><literal type="number" pos:line="10" pos:column="30">0<pos:position pos:line="10" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">fixed<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><literal type="number" pos:line="11" pos:column="21">0<pos:position pos:line="11" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">last_tab_in_indent<pos:position pos:line="12" pos:column="31"/></name> <init pos:line="12" pos:column="32">= <expr><operator pos:line="12" pos:column="34">-<pos:position pos:line="12" pos:column="35"/></operator><literal type="number" pos:line="12" pos:column="35">1<pos:position pos:line="12" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">last_space_in_indent<pos:position pos:line="13" pos:column="33"/></name> <init pos:line="13" pos:column="34">= <expr><operator pos:line="13" pos:column="36">-<pos:position pos:line="13" pos:column="37"/></operator><literal type="number" pos:line="13" pos:column="37">1<pos:position pos:line="13" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">need_fix_leading_space<pos:position pos:line="14" pos:column="35"/></name> <init pos:line="14" pos:column="36">= <expr><literal type="number" pos:line="14" pos:column="38">0<pos:position pos:line="14" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="40"/></decl_stmt>

	<comment type="block" pos:line="16" pos:column="9">/*
	 * Strip trailing whitespace
	 */</comment>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">ws_rule<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">&amp;<pos:position pos:line="19" pos:column="26"/></operator> <name pos:line="19" pos:column="23">WS_BLANK_AT_EOL<pos:position pos:line="19" pos:column="38"/></name></expr>)<pos:position pos:line="19" pos:column="39"/></condition><then pos:line="19" pos:column="39"> <block pos:line="19" pos:column="40">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><literal type="number" pos:line="20" pos:column="21">0<pos:position pos:line="20" pos:column="22"/></literal> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="25">len<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">&amp;&amp;<pos:position pos:line="20" pos:column="39"/></operator> <name><name pos:line="20" pos:column="32">src<pos:position pos:line="20" pos:column="35"/></name><index pos:line="20" pos:column="35">[<expr><name pos:line="20" pos:column="36">len<pos:position pos:line="20" pos:column="39"/></name> <operator pos:line="20" pos:column="40">-<pos:position pos:line="20" pos:column="41"/></operator> <literal type="number" pos:line="20" pos:column="42">1<pos:position pos:line="20" pos:column="43"/></literal></expr>]<pos:position pos:line="20" pos:column="44"/></index></name> <operator pos:line="20" pos:column="45">==<pos:position pos:line="20" pos:column="47"/></operator> <literal type="char" pos:line="20" pos:column="48">'\n'<pos:position pos:line="20" pos:column="52"/></literal></expr>)<pos:position pos:line="20" pos:column="53"/></condition><then pos:line="20" pos:column="53"> <block pos:line="20" pos:column="54">{
			<expr_stmt><expr><name pos:line="21" pos:column="25">add_nl_to_tail<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">=<pos:position pos:line="21" pos:column="41"/></operator> <literal type="number" pos:line="21" pos:column="42">1<pos:position pos:line="21" pos:column="43"/></literal></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">len<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">--<pos:position pos:line="22" pos:column="30"/></operator></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><literal type="number" pos:line="23" pos:column="29">0<pos:position pos:line="23" pos:column="30"/></literal> <operator pos:line="23" pos:column="31">&lt;<pos:position pos:line="23" pos:column="35"/></operator> <name pos:line="23" pos:column="33">len<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">&amp;&amp;<pos:position pos:line="23" pos:column="47"/></operator> <name><name pos:line="23" pos:column="40">src<pos:position pos:line="23" pos:column="43"/></name><index pos:line="23" pos:column="43">[<expr><name pos:line="23" pos:column="44">len<pos:position pos:line="23" pos:column="47"/></name> <operator pos:line="23" pos:column="48">-<pos:position pos:line="23" pos:column="49"/></operator> <literal type="number" pos:line="23" pos:column="50">1<pos:position pos:line="23" pos:column="51"/></literal></expr>]<pos:position pos:line="23" pos:column="52"/></index></name> <operator pos:line="23" pos:column="53">==<pos:position pos:line="23" pos:column="55"/></operator> <literal type="char" pos:line="23" pos:column="56">'\r'<pos:position pos:line="23" pos:column="60"/></literal></expr>)<pos:position pos:line="23" pos:column="61"/></condition><then pos:line="23" pos:column="61"> <block pos:line="23" pos:column="62">{
				<expr_stmt><expr><name pos:line="24" pos:column="33">add_cr_to_tail<pos:position pos:line="24" pos:column="47"/></name> <operator pos:line="24" pos:column="48">=<pos:position pos:line="24" pos:column="49"/></operator> <operator pos:line="24" pos:column="50">!<pos:position pos:line="24" pos:column="51"/></operator><operator pos:line="24" pos:column="51">!<pos:position pos:line="24" pos:column="52"/></operator><operator pos:line="24" pos:column="52">(<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="53">ws_rule<pos:position pos:line="24" pos:column="60"/></name> <operator pos:line="24" pos:column="61">&amp;<pos:position pos:line="24" pos:column="66"/></operator> <name pos:line="24" pos:column="63">WS_CR_AT_EOL<pos:position pos:line="24" pos:column="75"/></name><operator pos:line="24" pos:column="75">)<pos:position pos:line="24" pos:column="76"/></operator></expr>;<pos:position pos:line="24" pos:column="77"/></expr_stmt>
				<expr_stmt><expr><name pos:line="25" pos:column="33">len<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">--<pos:position pos:line="25" pos:column="38"/></operator></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
			}<pos:position pos:line="26" pos:column="26"/></block></then></if>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><literal type="number" pos:line="28" pos:column="21">0<pos:position pos:line="28" pos:column="22"/></literal> <operator pos:line="28" pos:column="23">&lt;<pos:position pos:line="28" pos:column="27"/></operator> <name pos:line="28" pos:column="25">len<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">&amp;&amp;<pos:position pos:line="28" pos:column="39"/></operator> <call><name pos:line="28" pos:column="32">isspace<pos:position pos:line="28" pos:column="39"/></name><argument_list pos:line="28" pos:column="39">(<argument><expr><name><name pos:line="28" pos:column="40">src<pos:position pos:line="28" pos:column="43"/></name><index pos:line="28" pos:column="43">[<expr><name pos:line="28" pos:column="44">len<pos:position pos:line="28" pos:column="47"/></name> <operator pos:line="28" pos:column="48">-<pos:position pos:line="28" pos:column="49"/></operator> <literal type="number" pos:line="28" pos:column="50">1<pos:position pos:line="28" pos:column="51"/></literal></expr>]<pos:position pos:line="28" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="54"/></condition><then pos:line="28" pos:column="54"> <block pos:line="28" pos:column="55">{
			<while pos:line="29" pos:column="25">while <condition pos:line="29" pos:column="31">(<expr><literal type="number" pos:line="29" pos:column="32">0<pos:position pos:line="29" pos:column="33"/></literal> <operator pos:line="29" pos:column="34">&lt;<pos:position pos:line="29" pos:column="38"/></operator> <name pos:line="29" pos:column="36">len<pos:position pos:line="29" pos:column="39"/></name> <operator pos:line="29" pos:column="40">&amp;&amp;<pos:position pos:line="29" pos:column="50"/></operator> <call><name pos:line="29" pos:column="43">isspace<pos:position pos:line="29" pos:column="50"/></name><argument_list pos:line="29" pos:column="50">(<argument><expr><name><name pos:line="29" pos:column="51">src<pos:position pos:line="29" pos:column="54"/></name><index pos:line="29" pos:column="54">[<expr><name pos:line="29" pos:column="55">len<pos:position pos:line="29" pos:column="58"/></name><operator pos:line="29" pos:column="58">-<pos:position pos:line="29" pos:column="59"/></operator><literal type="number" pos:line="29" pos:column="59">1<pos:position pos:line="29" pos:column="60"/></literal></expr>]<pos:position pos:line="29" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="63"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="33">len<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">--<pos:position pos:line="30" pos:column="38"/></operator></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt></block></while>
			<expr_stmt><expr><name pos:line="31" pos:column="25">fixed<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">=<pos:position pos:line="31" pos:column="32"/></operator> <literal type="number" pos:line="31" pos:column="33">1<pos:position pos:line="31" pos:column="34"/></literal></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="35" pos:column="9">/*
	 * Check leading whitespaces (indent)
	 */</comment>
	<for pos:line="38" pos:column="9">for <control pos:line="38" pos:column="13">(<init><expr><name pos:line="38" pos:column="14">i<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>;<pos:position pos:line="38" pos:column="20"/></init> <condition><expr><name pos:line="38" pos:column="21">i<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">&lt;<pos:position pos:line="38" pos:column="27"/></operator> <name pos:line="38" pos:column="25">len<pos:position pos:line="38" pos:column="28"/></name></expr>;<pos:position pos:line="38" pos:column="29"/></condition> <incr><expr><name pos:line="38" pos:column="30">i<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">++<pos:position pos:line="38" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="34"/></control> <block pos:line="38" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="39" pos:column="17">char<pos:position pos:line="39" pos:column="21"/></name></type> <name pos:line="39" pos:column="22">ch<pos:position pos:line="39" pos:column="24"/></name> <init pos:line="39" pos:column="25">= <expr><name><name pos:line="39" pos:column="27">src<pos:position pos:line="39" pos:column="30"/></name><index pos:line="39" pos:column="30">[<expr><name pos:line="39" pos:column="31">i<pos:position pos:line="39" pos:column="32"/></name></expr>]<pos:position pos:line="39" pos:column="33"/></index></name></expr></init></decl>;<pos:position pos:line="39" pos:column="34"/></decl_stmt>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">ch<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">==<pos:position pos:line="40" pos:column="26"/></operator> <literal type="char" pos:line="40" pos:column="27">'\t'<pos:position pos:line="40" pos:column="31"/></literal></expr>)<pos:position pos:line="40" pos:column="32"/></condition><then pos:line="40" pos:column="32"> <block pos:line="40" pos:column="33">{
			<expr_stmt><expr><name pos:line="41" pos:column="25">last_tab_in_indent<pos:position pos:line="41" pos:column="43"/></name> <operator pos:line="41" pos:column="44">=<pos:position pos:line="41" pos:column="45"/></operator> <name pos:line="41" pos:column="46">i<pos:position pos:line="41" pos:column="47"/></name></expr>;<pos:position pos:line="41" pos:column="48"/></expr_stmt>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><operator pos:line="42" pos:column="29">(<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="30">ws_rule<pos:position pos:line="42" pos:column="37"/></name> <operator pos:line="42" pos:column="38">&amp;<pos:position pos:line="42" pos:column="43"/></operator> <name pos:line="42" pos:column="40">WS_SPACE_BEFORE_TAB<pos:position pos:line="42" pos:column="59"/></name><operator pos:line="42" pos:column="59">)<pos:position pos:line="42" pos:column="60"/></operator> <operator pos:line="42" pos:column="61">&amp;&amp;<pos:position pos:line="42" pos:column="71"/></operator>
			    <literal type="number" pos:line="43" pos:column="29">0<pos:position pos:line="43" pos:column="30"/></literal> <operator pos:line="43" pos:column="31">&lt;=<pos:position pos:line="43" pos:column="36"/></operator> <name pos:line="43" pos:column="34">last_space_in_indent<pos:position pos:line="43" pos:column="54"/></name></expr>)<pos:position pos:line="43" pos:column="55"/></condition><then pos:line="43" pos:column="55">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="29">need_fix_leading_space<pos:position pos:line="44" pos:column="51"/></name> <operator pos:line="44" pos:column="52">=<pos:position pos:line="44" pos:column="53"/></operator> <literal type="number" pos:line="44" pos:column="54">1<pos:position pos:line="44" pos:column="55"/></literal></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt></block></then></if>
		}<pos:position pos:line="45" pos:column="18"/></block></then> <elseif pos:line="45" pos:column="19">else <if pos:line="45" pos:column="24">if <condition pos:line="45" pos:column="27">(<expr><name pos:line="45" pos:column="28">ch<pos:position pos:line="45" pos:column="30"/></name> <operator pos:line="45" pos:column="31">==<pos:position pos:line="45" pos:column="33"/></operator> <literal type="char" pos:line="45" pos:column="34">' '<pos:position pos:line="45" pos:column="37"/></literal></expr>)<pos:position pos:line="45" pos:column="38"/></condition><then pos:line="45" pos:column="38"> <block pos:line="45" pos:column="39">{
			<expr_stmt><expr><name pos:line="46" pos:column="25">last_space_in_indent<pos:position pos:line="46" pos:column="45"/></name> <operator pos:line="46" pos:column="46">=<pos:position pos:line="46" pos:column="47"/></operator> <name pos:line="46" pos:column="48">i<pos:position pos:line="46" pos:column="49"/></name></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><operator pos:line="47" pos:column="29">(<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">ws_rule<pos:position pos:line="47" pos:column="37"/></name> <operator pos:line="47" pos:column="38">&amp;<pos:position pos:line="47" pos:column="43"/></operator> <name pos:line="47" pos:column="40">WS_INDENT_WITH_NON_TAB<pos:position pos:line="47" pos:column="62"/></name><operator pos:line="47" pos:column="62">)<pos:position pos:line="47" pos:column="63"/></operator> <operator pos:line="47" pos:column="64">&amp;&amp;<pos:position pos:line="47" pos:column="74"/></operator>
			    <call><name pos:line="48" pos:column="29">ws_tab_width<pos:position pos:line="48" pos:column="41"/></name><argument_list pos:line="48" pos:column="41">(<argument><expr><name pos:line="48" pos:column="42">ws_rule<pos:position pos:line="48" pos:column="49"/></name></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call> <operator pos:line="48" pos:column="51">&lt;=<pos:position pos:line="48" pos:column="56"/></operator> <name pos:line="48" pos:column="54">i<pos:position pos:line="48" pos:column="55"/></name> <operator pos:line="48" pos:column="56">-<pos:position pos:line="48" pos:column="57"/></operator> <name pos:line="48" pos:column="58">last_tab_in_indent<pos:position pos:line="48" pos:column="76"/></name></expr>)<pos:position pos:line="48" pos:column="77"/></condition><then pos:line="48" pos:column="77">
				<block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="33">need_fix_leading_space<pos:position pos:line="49" pos:column="55"/></name> <operator pos:line="49" pos:column="56">=<pos:position pos:line="49" pos:column="57"/></operator> <literal type="number" pos:line="49" pos:column="58">1<pos:position pos:line="49" pos:column="59"/></literal></expr>;<pos:position pos:line="49" pos:column="60"/></expr_stmt></block></then></if>
		}<pos:position pos:line="50" pos:column="18"/></block></then></if></elseif> <else pos:line="50" pos:column="19">else
			<block type="pseudo"><break pos:line="51" pos:column="25">break;<pos:position pos:line="51" pos:column="31"/></break></block></else></if>
	}<pos:position pos:line="52" pos:column="10"/></block></for>

	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">need_fix_leading_space<pos:position pos:line="54" pos:column="35"/></name></expr>)<pos:position pos:line="54" pos:column="36"/></condition><then pos:line="54" pos:column="36"> <block pos:line="54" pos:column="37">{
		<comment type="block" pos:line="55" pos:column="17">/* Process indent ourselves */</comment>
		<decl_stmt><decl><type><name pos:line="56" pos:column="17">int<pos:position pos:line="56" pos:column="20"/></name></type> <name pos:line="56" pos:column="21">consecutive_spaces<pos:position pos:line="56" pos:column="39"/></name> <init pos:line="56" pos:column="40">= <expr><literal type="number" pos:line="56" pos:column="42">0<pos:position pos:line="56" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="56" pos:column="44"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="57" pos:column="17">int<pos:position pos:line="57" pos:column="20"/></name></type> <name pos:line="57" pos:column="21">last<pos:position pos:line="57" pos:column="25"/></name> <init pos:line="57" pos:column="26">= <expr><name pos:line="57" pos:column="28">last_tab_in_indent<pos:position pos:line="57" pos:column="46"/></name> <operator pos:line="57" pos:column="47">+<pos:position pos:line="57" pos:column="48"/></operator> <literal type="number" pos:line="57" pos:column="49">1<pos:position pos:line="57" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="57" pos:column="51"/></decl_stmt>

		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">ws_rule<pos:position pos:line="59" pos:column="28"/></name> <operator pos:line="59" pos:column="29">&amp;<pos:position pos:line="59" pos:column="34"/></operator> <name pos:line="59" pos:column="31">WS_INDENT_WITH_NON_TAB<pos:position pos:line="59" pos:column="53"/></name></expr>)<pos:position pos:line="59" pos:column="54"/></condition><then pos:line="59" pos:column="54"> <block pos:line="59" pos:column="55">{
			<comment type="block" pos:line="60" pos:column="25">/* have "last" point at one past the indent */</comment>
			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><name pos:line="61" pos:column="29">last_tab_in_indent<pos:position pos:line="61" pos:column="47"/></name> <operator pos:line="61" pos:column="48">&lt;<pos:position pos:line="61" pos:column="52"/></operator> <name pos:line="61" pos:column="50">last_space_in_indent<pos:position pos:line="61" pos:column="70"/></name></expr>)<pos:position pos:line="61" pos:column="71"/></condition><then pos:line="61" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="33">last<pos:position pos:line="62" pos:column="37"/></name> <operator pos:line="62" pos:column="38">=<pos:position pos:line="62" pos:column="39"/></operator> <name pos:line="62" pos:column="40">last_space_in_indent<pos:position pos:line="62" pos:column="60"/></name> <operator pos:line="62" pos:column="61">+<pos:position pos:line="62" pos:column="62"/></operator> <literal type="number" pos:line="62" pos:column="63">1<pos:position pos:line="62" pos:column="64"/></literal></expr>;<pos:position pos:line="62" pos:column="65"/></expr_stmt></block></then>
			<else pos:line="63" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="33">last<pos:position pos:line="64" pos:column="37"/></name> <operator pos:line="64" pos:column="38">=<pos:position pos:line="64" pos:column="39"/></operator> <name pos:line="64" pos:column="40">last_tab_in_indent<pos:position pos:line="64" pos:column="58"/></name> <operator pos:line="64" pos:column="59">+<pos:position pos:line="64" pos:column="60"/></operator> <literal type="number" pos:line="64" pos:column="61">1<pos:position pos:line="64" pos:column="62"/></literal></expr>;<pos:position pos:line="64" pos:column="63"/></expr_stmt></block></else></if>
		}<pos:position pos:line="65" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="67" pos:column="17">/*
		 * between src[0..last-1], strip the funny spaces,
		 * updating them to tab as needed.
		 */</comment>
		<for pos:line="71" pos:column="17">for <control pos:line="71" pos:column="21">(<init><expr><name pos:line="71" pos:column="22">i<pos:position pos:line="71" pos:column="23"/></name> <operator pos:line="71" pos:column="24">=<pos:position pos:line="71" pos:column="25"/></operator> <literal type="number" pos:line="71" pos:column="26">0<pos:position pos:line="71" pos:column="27"/></literal></expr>;<pos:position pos:line="71" pos:column="28"/></init> <condition><expr><name pos:line="71" pos:column="29">i<pos:position pos:line="71" pos:column="30"/></name> <operator pos:line="71" pos:column="31">&lt;<pos:position pos:line="71" pos:column="35"/></operator> <name pos:line="71" pos:column="33">last<pos:position pos:line="71" pos:column="37"/></name></expr>;<pos:position pos:line="71" pos:column="38"/></condition> <incr><expr><name pos:line="71" pos:column="39">i<pos:position pos:line="71" pos:column="40"/></name><operator pos:line="71" pos:column="40">++<pos:position pos:line="71" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="71" pos:column="43"/></control> <block pos:line="71" pos:column="44">{
			<decl_stmt><decl><type><name pos:line="72" pos:column="25">char<pos:position pos:line="72" pos:column="29"/></name></type> <name pos:line="72" pos:column="30">ch<pos:position pos:line="72" pos:column="32"/></name> <init pos:line="72" pos:column="33">= <expr><name><name pos:line="72" pos:column="35">src<pos:position pos:line="72" pos:column="38"/></name><index pos:line="72" pos:column="38">[<expr><name pos:line="72" pos:column="39">i<pos:position pos:line="72" pos:column="40"/></name></expr>]<pos:position pos:line="72" pos:column="41"/></index></name></expr></init></decl>;<pos:position pos:line="72" pos:column="42"/></decl_stmt>
			<if pos:line="73" pos:column="25">if <condition pos:line="73" pos:column="28">(<expr><name pos:line="73" pos:column="29">ch<pos:position pos:line="73" pos:column="31"/></name> <operator pos:line="73" pos:column="32">!=<pos:position pos:line="73" pos:column="34"/></operator> <literal type="char" pos:line="73" pos:column="35">' '<pos:position pos:line="73" pos:column="38"/></literal></expr>)<pos:position pos:line="73" pos:column="39"/></condition><then pos:line="73" pos:column="39"> <block pos:line="73" pos:column="40">{
				<expr_stmt><expr><name pos:line="74" pos:column="33">consecutive_spaces<pos:position pos:line="74" pos:column="51"/></name> <operator pos:line="74" pos:column="52">=<pos:position pos:line="74" pos:column="53"/></operator> <literal type="number" pos:line="74" pos:column="54">0<pos:position pos:line="74" pos:column="55"/></literal></expr>;<pos:position pos:line="74" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="75" pos:column="33">strbuf_addch<pos:position pos:line="75" pos:column="45"/></name><argument_list pos:line="75" pos:column="45">(<argument><expr><name pos:line="75" pos:column="46">dst<pos:position pos:line="75" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="51">ch<pos:position pos:line="75" pos:column="53"/></name></expr></argument>)<pos:position pos:line="75" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="55"/></expr_stmt>
			}<pos:position pos:line="76" pos:column="26"/></block></then> <else pos:line="76" pos:column="27">else <block pos:line="76" pos:column="32">{
				<expr_stmt><expr><name pos:line="77" pos:column="33">consecutive_spaces<pos:position pos:line="77" pos:column="51"/></name><operator pos:line="77" pos:column="51">++<pos:position pos:line="77" pos:column="53"/></operator></expr>;<pos:position pos:line="77" pos:column="54"/></expr_stmt>
				<if pos:line="78" pos:column="33">if <condition pos:line="78" pos:column="36">(<expr><name pos:line="78" pos:column="37">consecutive_spaces<pos:position pos:line="78" pos:column="55"/></name> <operator pos:line="78" pos:column="56">==<pos:position pos:line="78" pos:column="58"/></operator> <call><name pos:line="78" pos:column="59">ws_tab_width<pos:position pos:line="78" pos:column="71"/></name><argument_list pos:line="78" pos:column="71">(<argument><expr><name pos:line="78" pos:column="72">ws_rule<pos:position pos:line="78" pos:column="79"/></name></expr></argument>)<pos:position pos:line="78" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="81"/></condition><then pos:line="78" pos:column="81"> <block pos:line="78" pos:column="82">{
					<expr_stmt><expr><call><name pos:line="79" pos:column="41">strbuf_addch<pos:position pos:line="79" pos:column="53"/></name><argument_list pos:line="79" pos:column="53">(<argument><expr><name pos:line="79" pos:column="54">dst<pos:position pos:line="79" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="79" pos:column="59">'\t'<pos:position pos:line="79" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="65"/></expr_stmt>
					<expr_stmt><expr><name pos:line="80" pos:column="41">consecutive_spaces<pos:position pos:line="80" pos:column="59"/></name> <operator pos:line="80" pos:column="60">=<pos:position pos:line="80" pos:column="61"/></operator> <literal type="number" pos:line="80" pos:column="62">0<pos:position pos:line="80" pos:column="63"/></literal></expr>;<pos:position pos:line="80" pos:column="64"/></expr_stmt>
				}<pos:position pos:line="81" pos:column="34"/></block></then></if>
			}<pos:position pos:line="82" pos:column="26"/></block></else></if>
		}<pos:position pos:line="83" pos:column="18"/></block></for>
		<while pos:line="84" pos:column="17">while <condition pos:line="84" pos:column="23">(<expr><literal type="number" pos:line="84" pos:column="24">0<pos:position pos:line="84" pos:column="25"/></literal> <operator pos:line="84" pos:column="26">&lt;<pos:position pos:line="84" pos:column="30"/></operator> <name pos:line="84" pos:column="28">consecutive_spaces<pos:position pos:line="84" pos:column="46"/></name><operator pos:line="84" pos:column="46">--<pos:position pos:line="84" pos:column="48"/></operator></expr>)<pos:position pos:line="84" pos:column="49"/></condition>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="25">strbuf_addch<pos:position pos:line="85" pos:column="37"/></name><argument_list pos:line="85" pos:column="37">(<argument><expr><name pos:line="85" pos:column="38">dst<pos:position pos:line="85" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="85" pos:column="43">' '<pos:position pos:line="85" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="48"/></expr_stmt></block></while>
		<expr_stmt><expr><name pos:line="86" pos:column="17">len<pos:position pos:line="86" pos:column="20"/></name> <operator pos:line="86" pos:column="21">-=<pos:position pos:line="86" pos:column="23"/></operator> <name pos:line="86" pos:column="24">last<pos:position pos:line="86" pos:column="28"/></name></expr>;<pos:position pos:line="86" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="87" pos:column="17">src<pos:position pos:line="87" pos:column="20"/></name> <operator pos:line="87" pos:column="21">+=<pos:position pos:line="87" pos:column="23"/></operator> <name pos:line="87" pos:column="24">last<pos:position pos:line="87" pos:column="28"/></name></expr>;<pos:position pos:line="87" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="88" pos:column="17">fixed<pos:position pos:line="88" pos:column="22"/></name> <operator pos:line="88" pos:column="23">=<pos:position pos:line="88" pos:column="24"/></operator> <literal type="number" pos:line="88" pos:column="25">1<pos:position pos:line="88" pos:column="26"/></literal></expr>;<pos:position pos:line="88" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="89" pos:column="10"/></block></then> <elseif pos:line="89" pos:column="11">else <if pos:line="89" pos:column="16">if <condition pos:line="89" pos:column="19">(<expr><operator pos:line="89" pos:column="20">(<pos:position pos:line="89" pos:column="21"/></operator><name pos:line="89" pos:column="21">ws_rule<pos:position pos:line="89" pos:column="28"/></name> <operator pos:line="89" pos:column="29">&amp;<pos:position pos:line="89" pos:column="34"/></operator> <name pos:line="89" pos:column="31">WS_TAB_IN_INDENT<pos:position pos:line="89" pos:column="47"/></name><operator pos:line="89" pos:column="47">)<pos:position pos:line="89" pos:column="48"/></operator> <operator pos:line="89" pos:column="49">&amp;&amp;<pos:position pos:line="89" pos:column="59"/></operator> <name pos:line="89" pos:column="52">last_tab_in_indent<pos:position pos:line="89" pos:column="70"/></name> <operator pos:line="89" pos:column="71">&gt;=<pos:position pos:line="89" pos:column="76"/></operator> <literal type="number" pos:line="89" pos:column="74">0<pos:position pos:line="89" pos:column="75"/></literal></expr>)<pos:position pos:line="89" pos:column="76"/></condition><then pos:line="89" pos:column="76"> <block pos:line="89" pos:column="77">{
		<comment type="block" pos:line="90" pos:column="17">/* Expand tabs into spaces */</comment>
		<decl_stmt><decl><type><name pos:line="91" pos:column="17">int<pos:position pos:line="91" pos:column="20"/></name></type> <name pos:line="91" pos:column="21">start<pos:position pos:line="91" pos:column="26"/></name> <init pos:line="91" pos:column="27">= <expr><name><name pos:line="91" pos:column="29">dst<pos:position pos:line="91" pos:column="32"/></name><operator pos:line="91" pos:column="32">-&gt;<pos:position pos:line="91" pos:column="37"/></operator><name pos:line="91" pos:column="34">len<pos:position pos:line="91" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="91" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="92" pos:column="17">int<pos:position pos:line="92" pos:column="20"/></name></type> <name pos:line="92" pos:column="21">last<pos:position pos:line="92" pos:column="25"/></name> <init pos:line="92" pos:column="26">= <expr><name pos:line="92" pos:column="28">last_tab_in_indent<pos:position pos:line="92" pos:column="46"/></name> <operator pos:line="92" pos:column="47">+<pos:position pos:line="92" pos:column="48"/></operator> <literal type="number" pos:line="92" pos:column="49">1<pos:position pos:line="92" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="92" pos:column="51"/></decl_stmt>
		<for pos:line="93" pos:column="17">for <control pos:line="93" pos:column="21">(<init><expr><name pos:line="93" pos:column="22">i<pos:position pos:line="93" pos:column="23"/></name> <operator pos:line="93" pos:column="24">=<pos:position pos:line="93" pos:column="25"/></operator> <literal type="number" pos:line="93" pos:column="26">0<pos:position pos:line="93" pos:column="27"/></literal></expr>;<pos:position pos:line="93" pos:column="28"/></init> <condition><expr><name pos:line="93" pos:column="29">i<pos:position pos:line="93" pos:column="30"/></name> <operator pos:line="93" pos:column="31">&lt;<pos:position pos:line="93" pos:column="35"/></operator> <name pos:line="93" pos:column="33">last<pos:position pos:line="93" pos:column="37"/></name></expr>;<pos:position pos:line="93" pos:column="38"/></condition> <incr><expr><name pos:line="93" pos:column="39">i<pos:position pos:line="93" pos:column="40"/></name><operator pos:line="93" pos:column="40">++<pos:position pos:line="93" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="93" pos:column="43"/></control> <block pos:line="93" pos:column="44">{
			<if pos:line="94" pos:column="25">if <condition pos:line="94" pos:column="28">(<expr><name><name pos:line="94" pos:column="29">src<pos:position pos:line="94" pos:column="32"/></name><index pos:line="94" pos:column="32">[<expr><name pos:line="94" pos:column="33">i<pos:position pos:line="94" pos:column="34"/></name></expr>]<pos:position pos:line="94" pos:column="35"/></index></name> <operator pos:line="94" pos:column="36">==<pos:position pos:line="94" pos:column="38"/></operator> <literal type="char" pos:line="94" pos:column="39">'\t'<pos:position pos:line="94" pos:column="43"/></literal></expr>)<pos:position pos:line="94" pos:column="44"/></condition><then pos:line="94" pos:column="44">
				<block type="pseudo"><do pos:line="95" pos:column="33">do <block pos:line="95" pos:column="36">{
					<expr_stmt><expr><call><name pos:line="96" pos:column="41">strbuf_addch<pos:position pos:line="96" pos:column="53"/></name><argument_list pos:line="96" pos:column="53">(<argument><expr><name pos:line="96" pos:column="54">dst<pos:position pos:line="96" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="96" pos:column="59">' '<pos:position pos:line="96" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="64"/></expr_stmt>
				}<pos:position pos:line="97" pos:column="34"/></block> while <condition pos:line="97" pos:column="41">(<expr><operator pos:line="97" pos:column="42">(<pos:position pos:line="97" pos:column="43"/></operator><name><name pos:line="97" pos:column="43">dst<pos:position pos:line="97" pos:column="46"/></name><operator pos:line="97" pos:column="46">-&gt;<pos:position pos:line="97" pos:column="51"/></operator><name pos:line="97" pos:column="48">len<pos:position pos:line="97" pos:column="51"/></name></name> <operator pos:line="97" pos:column="52">-<pos:position pos:line="97" pos:column="53"/></operator> <name pos:line="97" pos:column="54">start<pos:position pos:line="97" pos:column="59"/></name><operator pos:line="97" pos:column="59">)<pos:position pos:line="97" pos:column="60"/></operator> <operator pos:line="97" pos:column="61">%<pos:position pos:line="97" pos:column="62"/></operator> <call><name pos:line="97" pos:column="63">ws_tab_width<pos:position pos:line="97" pos:column="75"/></name><argument_list pos:line="97" pos:column="75">(<argument><expr><name pos:line="97" pos:column="76">ws_rule<pos:position pos:line="97" pos:column="83"/></name></expr></argument>)<pos:position pos:line="97" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="85"/></condition>;<pos:position pos:line="97" pos:column="86"/></do></block></then>
			<else pos:line="98" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="33">strbuf_addch<pos:position pos:line="99" pos:column="45"/></name><argument_list pos:line="99" pos:column="45">(<argument><expr><name pos:line="99" pos:column="46">dst<pos:position pos:line="99" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="51">src<pos:position pos:line="99" pos:column="54"/></name><index pos:line="99" pos:column="54">[<expr><name pos:line="99" pos:column="55">i<pos:position pos:line="99" pos:column="56"/></name></expr>]<pos:position pos:line="99" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="99" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="59"/></expr_stmt></block></else></if>
		}<pos:position pos:line="100" pos:column="18"/></block></for>
		<expr_stmt><expr><name pos:line="101" pos:column="17">len<pos:position pos:line="101" pos:column="20"/></name> <operator pos:line="101" pos:column="21">-=<pos:position pos:line="101" pos:column="23"/></operator> <name pos:line="101" pos:column="24">last<pos:position pos:line="101" pos:column="28"/></name></expr>;<pos:position pos:line="101" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="102" pos:column="17">src<pos:position pos:line="102" pos:column="20"/></name> <operator pos:line="102" pos:column="21">+=<pos:position pos:line="102" pos:column="23"/></operator> <name pos:line="102" pos:column="24">last<pos:position pos:line="102" pos:column="28"/></name></expr>;<pos:position pos:line="102" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="103" pos:column="17">fixed<pos:position pos:line="103" pos:column="22"/></name> <operator pos:line="103" pos:column="23">=<pos:position pos:line="103" pos:column="24"/></operator> <literal type="number" pos:line="103" pos:column="25">1<pos:position pos:line="103" pos:column="26"/></literal></expr>;<pos:position pos:line="103" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="104" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="106" pos:column="9">strbuf_add<pos:position pos:line="106" pos:column="19"/></name><argument_list pos:line="106" pos:column="19">(<argument><expr><name pos:line="106" pos:column="20">dst<pos:position pos:line="106" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="25">src<pos:position pos:line="106" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="30">len<pos:position pos:line="106" pos:column="33"/></name></expr></argument>)<pos:position pos:line="106" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="35"/></expr_stmt>
	<if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><name pos:line="107" pos:column="13">add_cr_to_tail<pos:position pos:line="107" pos:column="27"/></name></expr>)<pos:position pos:line="107" pos:column="28"/></condition><then pos:line="107" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="108" pos:column="17">strbuf_addch<pos:position pos:line="108" pos:column="29"/></name><argument_list pos:line="108" pos:column="29">(<argument><expr><name pos:line="108" pos:column="30">dst<pos:position pos:line="108" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="108" pos:column="35">'\r'<pos:position pos:line="108" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="41"/></expr_stmt></block></then></if>
	<if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name pos:line="109" pos:column="13">add_nl_to_tail<pos:position pos:line="109" pos:column="27"/></name></expr>)<pos:position pos:line="109" pos:column="28"/></condition><then pos:line="109" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="17">strbuf_addch<pos:position pos:line="110" pos:column="29"/></name><argument_list pos:line="110" pos:column="29">(<argument><expr><name pos:line="110" pos:column="30">dst<pos:position pos:line="110" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="110" pos:column="35">'\n'<pos:position pos:line="110" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="41"/></expr_stmt></block></then></if>
	<if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><name pos:line="111" pos:column="13">fixed<pos:position pos:line="111" pos:column="18"/></name> <operator pos:line="111" pos:column="19">&amp;&amp;<pos:position pos:line="111" pos:column="29"/></operator> <name pos:line="111" pos:column="22">error_count<pos:position pos:line="111" pos:column="33"/></name></expr>)<pos:position pos:line="111" pos:column="34"/></condition><then pos:line="111" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="112" pos:column="17">(<pos:position pos:line="112" pos:column="18"/></operator><operator pos:line="112" pos:column="18">*<pos:position pos:line="112" pos:column="19"/></operator><name pos:line="112" pos:column="19">error_count<pos:position pos:line="112" pos:column="30"/></name><operator pos:line="112" pos:column="30">)<pos:position pos:line="112" pos:column="31"/></operator><operator pos:line="112" pos:column="31">++<pos:position pos:line="112" pos:column="33"/></operator></expr>;<pos:position pos:line="112" pos:column="34"/></expr_stmt></block></then></if>
}<pos:position pos:line="113" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5564_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">open_pack_file<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">pack_name<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">from_stdin<pos:position pos:line="3" pos:column="23"/></name></expr>)<pos:position pos:line="3" pos:column="24"/></condition><then pos:line="3" pos:column="24"> <block pos:line="3" pos:column="25">{
		<expr_stmt><expr><name pos:line="4" pos:column="17">input_fd<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">=<pos:position pos:line="4" pos:column="27"/></operator> <literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal></expr>;<pos:position pos:line="4" pos:column="30"/></expr_stmt>
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><operator pos:line="5" pos:column="21">!<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">pack_name<pos:position pos:line="5" pos:column="31"/></name></expr>)<pos:position pos:line="5" pos:column="32"/></condition><then pos:line="5" pos:column="32"> <block pos:line="5" pos:column="33">{
			<decl_stmt><decl><type><name><name pos:line="6" pos:column="25">struct<pos:position pos:line="6" pos:column="31"/></name> <name pos:line="6" pos:column="32">strbuf<pos:position pos:line="6" pos:column="38"/></name></name></type> <name pos:line="6" pos:column="39">tmp_file<pos:position pos:line="6" pos:column="47"/></name> <init pos:line="6" pos:column="48">= <expr><name pos:line="6" pos:column="50">STRBUF_INIT<pos:position pos:line="6" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="62"/></decl_stmt>
			<expr_stmt><expr><name pos:line="7" pos:column="25">output_fd<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">=<pos:position pos:line="7" pos:column="36"/></operator> <call><name pos:line="7" pos:column="37">odb_mkstemp<pos:position pos:line="7" pos:column="48"/></name><argument_list pos:line="7" pos:column="48">(<argument><expr><operator pos:line="7" pos:column="49">&amp;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="50">tmp_file<pos:position pos:line="7" pos:column="58"/></name></expr></argument>,
						<argument><expr><literal type="string" pos:line="8" pos:column="49">"pack/tmp_pack_XXXXXX"<pos:position pos:line="8" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><name pos:line="9" pos:column="25">pack_name<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">=<pos:position pos:line="9" pos:column="36"/></operator> <call><name pos:line="9" pos:column="37">strbuf_detach<pos:position pos:line="9" pos:column="50"/></name><argument_list pos:line="9" pos:column="50">(<argument><expr><operator pos:line="9" pos:column="51">&amp;<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="52">tmp_file<pos:position pos:line="9" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="62">NULL<pos:position pos:line="9" pos:column="66"/></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="10" pos:column="18"/></block></then> <else pos:line="10" pos:column="19">else <block pos:line="10" pos:column="24">{
			<expr_stmt><expr><name pos:line="11" pos:column="25">output_fd<pos:position pos:line="11" pos:column="34"/></name> <operator pos:line="11" pos:column="35">=<pos:position pos:line="11" pos:column="36"/></operator> <call><name pos:line="11" pos:column="37">open<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">pack_name<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">O_CREAT<pos:position pos:line="11" pos:column="60"/></name><operator pos:line="11" pos:column="60">|<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="61">O_EXCL<pos:position pos:line="11" pos:column="67"/></name><operator pos:line="11" pos:column="67">|<pos:position pos:line="11" pos:column="68"/></operator><name pos:line="11" pos:column="68">O_RDWR<pos:position pos:line="11" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="76">0600<pos:position pos:line="11" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="82"/></expr_stmt>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><name pos:line="12" pos:column="29">output_fd<pos:position pos:line="12" pos:column="38"/></name> <operator pos:line="12" pos:column="39">&lt;<pos:position pos:line="12" pos:column="43"/></operator> <literal type="number" pos:line="12" pos:column="41">0<pos:position pos:line="12" pos:column="42"/></literal></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="33">die_errno<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><call><name pos:line="13" pos:column="43">_<pos:position pos:line="13" pos:column="44"/></name><argument_list pos:line="13" pos:column="44">(<argument><expr><literal type="string" pos:line="13" pos:column="45">"unable to create '%s'"<pos:position pos:line="13" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="71">pack_name<pos:position pos:line="13" pos:column="80"/></name></expr></argument>)<pos:position pos:line="13" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="82"/></expr_stmt></block></then></if>
		}<pos:position pos:line="14" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">nothread_data<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">.<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="31">pack_fd<pos:position pos:line="15" pos:column="38"/></name></name> <operator pos:line="15" pos:column="39">=<pos:position pos:line="15" pos:column="40"/></operator> <name pos:line="15" pos:column="41">output_fd<pos:position pos:line="15" pos:column="50"/></name></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then> <else pos:line="16" pos:column="11">else <block pos:line="16" pos:column="16">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">input_fd<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <call><name pos:line="17" pos:column="28">open<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">pack_name<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">O_RDONLY<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">input_fd<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">&lt;<pos:position pos:line="18" pos:column="34"/></operator> <literal type="number" pos:line="18" pos:column="32">0<pos:position pos:line="18" pos:column="33"/></literal></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">die_errno<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><call><name pos:line="19" pos:column="35">_<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><literal type="string" pos:line="19" pos:column="37">"cannot open packfile '%s'"<pos:position pos:line="19" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="19" pos:column="67">pack_name<pos:position pos:line="19" pos:column="76"/></name></expr></argument>)<pos:position pos:line="19" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="78"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="20" pos:column="17">output_fd<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <operator pos:line="20" pos:column="29">-<pos:position pos:line="20" pos:column="30"/></operator><literal type="number" pos:line="20" pos:column="30">1<pos:position pos:line="20" pos:column="31"/></literal></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">nothread_data<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">.<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">pack_fd<pos:position pos:line="21" pos:column="38"/></name></name> <operator pos:line="21" pos:column="39">=<pos:position pos:line="21" pos:column="40"/></operator> <name pos:line="21" pos:column="41">input_fd<pos:position pos:line="21" pos:column="49"/></name></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">git_SHA1_Init<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><operator pos:line="23" pos:column="23">&amp;<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="24">input_ctx<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
	<return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">pack_name<pos:position pos:line="24" pos:column="25"/></name></expr>;<pos:position pos:line="24" pos:column="26"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_283_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">loop<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name><name pos:line="1" pos:column="17">struct<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">walker<pos:position pos:line="1" pos:column="30"/></name></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">walker<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object_list<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">elem<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>

	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">process_queue<pos:position pos:line="5" pos:column="29"/></name></expr>)<pos:position pos:line="5" pos:column="30"/></condition> <block pos:line="5" pos:column="31">{
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">struct<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">object<pos:position pos:line="6" pos:column="30"/></name></name> <modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier></type><name pos:line="6" pos:column="32">obj<pos:position pos:line="6" pos:column="35"/></name> <init pos:line="6" pos:column="36">= <expr><name><name pos:line="6" pos:column="38">process_queue<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">-&gt;<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="53">item<pos:position pos:line="6" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="58"/></decl_stmt>
		<expr_stmt><expr><name pos:line="7" pos:column="17">elem<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">=<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">process_queue<pos:position pos:line="7" pos:column="37"/></name></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="8" pos:column="17">process_queue<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">=<pos:position pos:line="8" pos:column="32"/></operator> <name><name pos:line="8" pos:column="33">elem<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">next<pos:position pos:line="8" pos:column="43"/></name></name></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">free<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">elem<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">process_queue<pos:position pos:line="10" pos:column="35"/></name></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">process_queue_end<pos:position pos:line="11" pos:column="42"/></name> <operator pos:line="11" pos:column="43">=<pos:position pos:line="11" pos:column="44"/></operator> <operator pos:line="11" pos:column="45">&amp;<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="46">process_queue<pos:position pos:line="11" pos:column="59"/></name></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="13" pos:column="17">/* If we are not scanning this object, we placed it in
		 * the queue because we needed to fetch it first.
		 */</comment>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator> <operator pos:line="16" pos:column="23">(<pos:position pos:line="16" pos:column="24"/></operator><name><name pos:line="16" pos:column="24">obj<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">flags<pos:position pos:line="16" pos:column="34"/></name></name> <operator pos:line="16" pos:column="35">&amp;<pos:position pos:line="16" pos:column="40"/></operator> <name pos:line="16" pos:column="37">TO_SCAN<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">)<pos:position pos:line="16" pos:column="45"/></operator></expr>)<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46"> <block pos:line="16" pos:column="47">{
			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><call><name><name pos:line="17" pos:column="29">walker<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">fetch<pos:position pos:line="17" pos:column="42"/></name></name><argument_list pos:line="17" pos:column="42">(<argument><expr><name pos:line="17" pos:column="43">walker<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="51">obj<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">-&gt;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="56">oid<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">.<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="60">hash<pos:position pos:line="17" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="66"/></condition><then pos:line="17" pos:column="66"> <block pos:line="17" pos:column="67">{
				<expr_stmt><expr><call><name pos:line="18" pos:column="33">report_missing<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">(<argument><expr><name pos:line="18" pos:column="48">obj<pos:position pos:line="18" pos:column="51"/></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
				<return pos:line="19" pos:column="33">return <expr><operator pos:line="19" pos:column="40">-<pos:position pos:line="19" pos:column="41"/></operator><literal type="number" pos:line="19" pos:column="41">1<pos:position pos:line="19" pos:column="42"/></literal></expr>;<pos:position pos:line="19" pos:column="43"/></return>
			}<pos:position pos:line="20" pos:column="26"/></block></then></if>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><name><name pos:line="22" pos:column="22">obj<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">-&gt;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="27">type<pos:position pos:line="22" pos:column="31"/></name></name></expr>)<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">parse_object<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><name><name pos:line="23" pos:column="38">obj<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">-&gt;<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="43">oid<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">.<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="47">hash<pos:position pos:line="23" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt></block></then></if>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">process_object<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">walker<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="44">obj<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="49"/></condition><then pos:line="24" pos:column="49">
			<block type="pseudo"><return pos:line="25" pos:column="25">return <expr><operator pos:line="25" pos:column="32">-<pos:position pos:line="25" pos:column="33"/></operator><literal type="number" pos:line="25" pos:column="33">1<pos:position pos:line="25" pos:column="34"/></literal></expr>;<pos:position pos:line="25" pos:column="35"/></return></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></while>
	<return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

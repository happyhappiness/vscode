<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2720_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">strbuf_addstr_xml_quoted<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">strbuf<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">buf<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">s<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><operator pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">s<pos:position pos:line="3" pos:column="18"/></name></expr>)<pos:position pos:line="3" pos:column="19"/></condition> <block pos:line="3" pos:column="20">{
		<decl_stmt><decl><type><name pos:line="4" pos:column="17">size_t<pos:position pos:line="4" pos:column="23"/></name></type> <name pos:line="4" pos:column="24">len<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><call><name pos:line="4" pos:column="30">strcspn<pos:position pos:line="4" pos:column="37"/></name><argument_list pos:line="4" pos:column="37">(<argument><expr><name pos:line="4" pos:column="38">s<pos:position pos:line="4" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="41">"\"&lt;&gt;&amp;"<pos:position pos:line="4" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="5" pos:column="17">strbuf_add<pos:position pos:line="5" pos:column="27"/></name><argument_list pos:line="5" pos:column="27">(<argument><expr><name pos:line="5" pos:column="28">buf<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="33">s<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="36">len<pos:position pos:line="5" pos:column="39"/></name></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="6" pos:column="17">s<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">+=<pos:position pos:line="6" pos:column="21"/></operator> <name pos:line="6" pos:column="22">len<pos:position pos:line="6" pos:column="25"/></name></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
		<switch pos:line="7" pos:column="17">switch <condition pos:line="7" pos:column="24">(<expr><operator pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">s<pos:position pos:line="7" pos:column="27"/></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition> <block pos:line="7" pos:column="29">{
		<case pos:line="8" pos:column="17">case <expr><literal type="char" pos:line="8" pos:column="22">'"'<pos:position pos:line="8" pos:column="25"/></literal></expr>:<pos:position pos:line="8" pos:column="26"/></case>
			<expr_stmt><expr><call><name pos:line="9" pos:column="25">strbuf_addstr<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">(<argument><expr><name pos:line="9" pos:column="39">buf<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="44">"&amp;quot;"<pos:position pos:line="9" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt>
			<break pos:line="10" pos:column="25">break;<pos:position pos:line="10" pos:column="31"/></break>
		<case pos:line="11" pos:column="17">case <expr><literal type="char" pos:line="11" pos:column="22">'&lt;'<pos:position pos:line="11" pos:column="28"/></literal></expr>:<pos:position pos:line="11" pos:column="26"/></case>
			<expr_stmt><expr><call><name pos:line="12" pos:column="25">strbuf_addstr<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><name pos:line="12" pos:column="39">buf<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="44">"&amp;lt;"<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>
			<break pos:line="13" pos:column="25">break;<pos:position pos:line="13" pos:column="31"/></break>
		<case pos:line="14" pos:column="17">case <expr><literal type="char" pos:line="14" pos:column="22">'&gt;'<pos:position pos:line="14" pos:column="28"/></literal></expr>:<pos:position pos:line="14" pos:column="26"/></case>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">strbuf_addstr<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><name pos:line="15" pos:column="39">buf<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="44">"&amp;gt;"<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
			<break pos:line="16" pos:column="25">break;<pos:position pos:line="16" pos:column="31"/></break>
		<case pos:line="17" pos:column="17">case <expr><literal type="char" pos:line="17" pos:column="22">'&amp;'<pos:position pos:line="17" pos:column="29"/></literal></expr>:<pos:position pos:line="17" pos:column="26"/></case>
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">strbuf_addstr<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name pos:line="18" pos:column="39">buf<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="44">"&amp;amp;"<pos:position pos:line="18" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
			<break pos:line="19" pos:column="25">break;<pos:position pos:line="19" pos:column="31"/></break>
		<case pos:line="20" pos:column="17">case <expr><literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr>:<pos:position pos:line="20" pos:column="24"/></case>
			<return pos:line="21" pos:column="25">return;<pos:position pos:line="21" pos:column="32"/></return>
		}<pos:position pos:line="22" pos:column="18"/></block></switch>
		<expr_stmt><expr><name pos:line="23" pos:column="17">s<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">++<pos:position pos:line="23" pos:column="20"/></operator></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></while>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

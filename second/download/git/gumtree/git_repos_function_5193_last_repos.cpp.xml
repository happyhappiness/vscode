<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5193_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">checkout_branch<pos:position pos:line="1" pos:column="27"/></name><argument_list pos:line="1" pos:column="27">(<argument><expr pos:line="1" pos:column="28">struct <name pos:line="1" pos:column="35">checkout_opts<pos:position pos:line="1" pos:column="48"/></name> <operator pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></operator><name pos:line="1" pos:column="50">opts<pos:position pos:line="1" pos:column="54"/></name></expr></argument>,
			   <argument><expr pos:line="2" pos:column="28">struct <name pos:line="2" pos:column="35">branch_info<pos:position pos:line="2" pos:column="46"/></name> <operator pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></operator><operator pos:line="2" pos:column="48">new<pos:position pos:line="2" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="2" pos:column="52"/></argument_list>
<argument_list pos:line="3" pos:column="1">{
	if <argument><expr><operator pos:line="4" pos:column="12">(<pos:position pos:line="4" pos:column="13"/></operator><name><name pos:line="4" pos:column="13">opts<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">-&gt;<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="19">pathspec<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">.<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">nr<pos:position pos:line="4" pos:column="30"/></name></name><operator pos:line="4" pos:column="30">)<pos:position pos:line="4" pos:column="31"/></operator>
		<call><name pos:line="5" pos:column="17">die<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><call><name pos:line="5" pos:column="21">_<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><literal type="string" pos:line="5" pos:column="23">"paths cannot be used with switching branches"<pos:position pos:line="5" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="71"/></argument_list></call></expr></argument>;

	if <argument><expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name><name pos:line="7" pos:column="13">opts<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">patch_mode<pos:position pos:line="7" pos:column="29"/></name></name><operator pos:line="7" pos:column="29">)<pos:position pos:line="7" pos:column="30"/></operator>
		<call><name pos:line="8" pos:column="17">die<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><call><name pos:line="8" pos:column="21">_<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><literal type="string" pos:line="8" pos:column="23">"'%s' cannot be used with switching branches"<pos:position pos:line="8" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr></argument>,
		    <argument><expr><literal type="string" pos:line="9" pos:column="21">"--patch"<pos:position pos:line="9" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr></argument>;

	if <argument><expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name><name pos:line="11" pos:column="13">opts<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">writeout_stage<pos:position pos:line="11" pos:column="33"/></name></name><operator pos:line="11" pos:column="33">)<pos:position pos:line="11" pos:column="34"/></operator>
		<call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><call><name pos:line="12" pos:column="21">_<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><literal type="string" pos:line="12" pos:column="23">"'%s' cannot be used with switching branches"<pos:position pos:line="12" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr></argument>,
		    <argument><expr><literal type="string" pos:line="13" pos:column="21">"--ours/--theirs"<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr></argument>;

	if <argument><expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name><name pos:line="15" pos:column="13">opts<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">force<pos:position pos:line="15" pos:column="24"/></name></name> <operator pos:line="15" pos:column="25">&amp;&amp;<pos:position pos:line="15" pos:column="35"/></operator> <name><name pos:line="15" pos:column="28">opts<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">merge<pos:position pos:line="15" pos:column="39"/></name></name><operator pos:line="15" pos:column="39">)<pos:position pos:line="15" pos:column="40"/></operator>
		<call><name pos:line="16" pos:column="17">die<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><call><name pos:line="16" pos:column="21">_<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><literal type="string" pos:line="16" pos:column="23">"'%s' cannot be used with '%s'"<pos:position pos:line="16" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="57">"-f"<pos:position pos:line="16" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="63">"-m"<pos:position pos:line="16" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr></argument>;

	if <argument><expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name><name pos:line="18" pos:column="13">opts<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">force_detach<pos:position pos:line="18" pos:column="31"/></name></name> <operator pos:line="18" pos:column="32">&amp;&amp;<pos:position pos:line="18" pos:column="42"/></operator> <name><name pos:line="18" pos:column="35">opts<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">new_branch<pos:position pos:line="18" pos:column="51"/></name></name><operator pos:line="18" pos:column="51">)<pos:position pos:line="18" pos:column="52"/></operator>
		<call><name pos:line="19" pos:column="17">die<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><call><name pos:line="19" pos:column="21">_<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><literal type="string" pos:line="19" pos:column="23">"'%s' cannot be used with '%s'"<pos:position pos:line="19" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr></argument>,
		    <argument><expr><literal type="string" pos:line="20" pos:column="21">"--detach"<pos:position pos:line="20" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="33">"-b/-B/--orphan"<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr></argument>;

	if <argument><expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><name><name pos:line="22" pos:column="13">opts<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">new_orphan_branch<pos:position pos:line="22" pos:column="36"/></name></name><operator pos:line="22" pos:column="36">)<pos:position pos:line="22" pos:column="37"/></operator> <block pos:line="22" pos:column="38">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name><name pos:line="23" pos:column="21">opts<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">-&gt;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="27">track<pos:position pos:line="23" pos:column="32"/></name></name> <operator pos:line="23" pos:column="33">!=<pos:position pos:line="23" pos:column="35"/></operator> <name pos:line="23" pos:column="36">BRANCH_TRACK_UNSPECIFIED<pos:position pos:line="23" pos:column="60"/></name></expr>)<pos:position pos:line="23" pos:column="61"/></condition><then pos:line="23" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">die<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><call><name pos:line="24" pos:column="29">_<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><literal type="string" pos:line="24" pos:column="31">"'%s' cannot be used with '%s'"<pos:position pos:line="24" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="65">"--orphan"<pos:position pos:line="24" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="77">"-t"<pos:position pos:line="24" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="83"/></expr_stmt></block></then></if>
	}<pos:position pos:line="25" pos:column="10"/></block></expr></argument> <elseif pos:line="25" pos:column="11">else <if pos:line="25" pos:column="16">if <condition pos:line="25" pos:column="19">(<expr><name><name pos:line="25" pos:column="20">opts<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">-&gt;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="26">force_detach<pos:position pos:line="25" pos:column="38"/></name></name></expr>)<pos:position pos:line="25" pos:column="39"/></condition><then pos:line="25" pos:column="39"> <expr_stmt><expr><block pos:line="25" pos:column="40">{
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name><name pos:line="26" pos:column="21">opts<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">track<pos:position pos:line="26" pos:column="32"/></name></name> <operator pos:line="26" pos:column="33">!=<pos:position pos:line="26" pos:column="35"/></operator> <name pos:line="26" pos:column="36">BRANCH_TRACK_UNSPECIFIED<pos:position pos:line="26" pos:column="60"/></name></expr>)<pos:position pos:line="26" pos:column="61"/></condition><then pos:line="26" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="25">die<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><call><name pos:line="27" pos:column="29">_<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><literal type="string" pos:line="27" pos:column="31">"'%s' cannot be used with '%s'"<pos:position pos:line="27" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="65">"--detach"<pos:position pos:line="27" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="77">"-t"<pos:position pos:line="27" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="83"/></expr_stmt></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block></expr></expr_stmt></then></if></elseif> <elseif pos:line="28" pos:column="11">else <if pos:line="28" pos:column="16">if <condition pos:line="28" pos:column="19">(<expr><name><name pos:line="28" pos:column="20">opts<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">-&gt;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="26">track<pos:position pos:line="28" pos:column="31"/></name></name> <operator pos:line="28" pos:column="32">==<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="35">BRANCH_TRACK_UNSPECIFIED<pos:position pos:line="28" pos:column="59"/></name></expr>)<pos:position pos:line="28" pos:column="60"/></condition><then pos:line="28" pos:column="60">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="17">opts<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">track<pos:position pos:line="29" pos:column="28"/></name></name> <operator pos:line="29" pos:column="29">=<pos:position pos:line="29" pos:column="30"/></operator> <name pos:line="29" pos:column="31">git_branch_track<pos:position pos:line="29" pos:column="47"/></name></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt></block></then></if></elseif></argument_list></decl></decl_stmt>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">new<pos:position pos:line="31" pos:column="16"/></operator><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">name<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">&amp;&amp;<pos:position pos:line="31" pos:column="33"/></operator> <operator pos:line="31" pos:column="26">!<pos:position pos:line="31" pos:column="27"/></operator><operator pos:line="31" pos:column="27">new<pos:position pos:line="31" pos:column="30"/></operator><operator pos:line="31" pos:column="30">-&gt;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="32">commit<pos:position pos:line="31" pos:column="38"/></name></expr>)<pos:position pos:line="31" pos:column="39"/></condition><then pos:line="31" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">die<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><call><name pos:line="32" pos:column="21">_<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><literal type="string" pos:line="32" pos:column="23">"Cannot switch branch to a non-commit '%s'"<pos:position pos:line="32" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr></argument>,
		    <argument><expr><operator pos:line="33" pos:column="21">new<pos:position pos:line="33" pos:column="24"/></operator><operator pos:line="33" pos:column="24">-&gt;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="26">name<pos:position pos:line="33" pos:column="30"/></name></expr></argument>)<pos:position pos:line="33" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt></block></then></if>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">new<pos:position pos:line="35" pos:column="16"/></operator><operator pos:line="35" pos:column="16">-&gt;<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="18">path<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">&amp;&amp;<pos:position pos:line="35" pos:column="33"/></operator> <operator pos:line="35" pos:column="26">!<pos:position pos:line="35" pos:column="27"/></operator><name><name pos:line="35" pos:column="27">opts<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">-&gt;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="33">force_detach<pos:position pos:line="35" pos:column="45"/></name></name> <operator pos:line="35" pos:column="46">&amp;&amp;<pos:position pos:line="35" pos:column="56"/></operator> <operator pos:line="35" pos:column="49">!<pos:position pos:line="35" pos:column="50"/></operator><name><name pos:line="35" pos:column="50">opts<pos:position pos:line="35" pos:column="54"/></name><operator pos:line="35" pos:column="54">-&gt;<pos:position pos:line="35" pos:column="59"/></operator><name pos:line="35" pos:column="56">new_branch<pos:position pos:line="35" pos:column="66"/></name></name> <operator pos:line="35" pos:column="67">&amp;&amp;<pos:position pos:line="35" pos:column="77"/></operator>
	    <operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name><name pos:line="36" pos:column="14">opts<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">-&gt;<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="20">ignore_other_worktrees<pos:position pos:line="36" pos:column="42"/></name></name></expr>)<pos:position pos:line="36" pos:column="43"/></condition><then pos:line="36" pos:column="43"> <block pos:line="36" pos:column="44">{
		<decl_stmt><decl><type><name><name pos:line="37" pos:column="17">struct<pos:position pos:line="37" pos:column="23"/></name> <name pos:line="37" pos:column="24">object_id<pos:position pos:line="37" pos:column="33"/></name></name></type> <name pos:line="37" pos:column="34">oid<pos:position pos:line="37" pos:column="37"/></name></decl>;<pos:position pos:line="37" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="38" pos:column="17">int<pos:position pos:line="38" pos:column="20"/></name></type> <name pos:line="38" pos:column="21">flag<pos:position pos:line="38" pos:column="25"/></name></decl>;<pos:position pos:line="38" pos:column="26"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="39" pos:column="17">char<pos:position pos:line="39" pos:column="21"/></name> <modifier pos:line="39" pos:column="22">*<pos:position pos:line="39" pos:column="23"/></modifier></type><name pos:line="39" pos:column="23">head_ref<pos:position pos:line="39" pos:column="31"/></name> <init pos:line="39" pos:column="32">= <expr><call><name pos:line="39" pos:column="34">resolve_refdup<pos:position pos:line="39" pos:column="48"/></name><argument_list pos:line="39" pos:column="48">(<argument><expr><literal type="string" pos:line="39" pos:column="49">"HEAD"<pos:position pos:line="39" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="57">0<pos:position pos:line="39" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="60">oid<pos:position pos:line="39" pos:column="63"/></name><operator pos:line="39" pos:column="63">.<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="64">hash<pos:position pos:line="39" pos:column="68"/></name></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="70">&amp;<pos:position pos:line="39" pos:column="75"/></operator><name pos:line="39" pos:column="71">flag<pos:position pos:line="39" pos:column="75"/></name></expr></argument>)<pos:position pos:line="39" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="39" pos:column="77"/></decl_stmt>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">head_ref<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">&amp;&amp;<pos:position pos:line="40" pos:column="40"/></operator>
		    <operator pos:line="41" pos:column="21">(<pos:position pos:line="41" pos:column="22"/></operator><operator pos:line="41" pos:column="22">!<pos:position pos:line="41" pos:column="23"/></operator><operator pos:line="41" pos:column="23">(<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="24">flag<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">&amp;<pos:position pos:line="41" pos:column="34"/></operator> <name pos:line="41" pos:column="31">REF_ISSYMREF<pos:position pos:line="41" pos:column="43"/></name><operator pos:line="41" pos:column="43">)<pos:position pos:line="41" pos:column="44"/></operator> <operator pos:line="41" pos:column="45">||<pos:position pos:line="41" pos:column="47"/></operator> <call><name pos:line="41" pos:column="48">strcmp<pos:position pos:line="41" pos:column="54"/></name><argument_list pos:line="41" pos:column="54">(<argument><expr><name pos:line="41" pos:column="55">head_ref<pos:position pos:line="41" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="65">new<pos:position pos:line="41" pos:column="68"/></operator><operator pos:line="41" pos:column="68">-&gt;<pos:position pos:line="41" pos:column="73"/></operator><name pos:line="41" pos:column="70">path<pos:position pos:line="41" pos:column="74"/></name></expr></argument>)<pos:position pos:line="41" pos:column="75"/></argument_list></call><operator pos:line="41" pos:column="75">)<pos:position pos:line="41" pos:column="76"/></operator></expr>)<pos:position pos:line="41" pos:column="77"/></condition><then pos:line="41" pos:column="77">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="25">die_if_checked_out<pos:position pos:line="42" pos:column="43"/></name><argument_list pos:line="42" pos:column="43">(<argument><expr><operator pos:line="42" pos:column="44">new<pos:position pos:line="42" pos:column="47"/></operator><operator pos:line="42" pos:column="47">-&gt;<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="49">path<pos:position pos:line="42" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="55">1<pos:position pos:line="42" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="58"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">free<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">head_ref<pos:position pos:line="43" pos:column="30"/></name></expr></argument>)<pos:position pos:line="43" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">!<pos:position pos:line="46" pos:column="14"/></operator><operator pos:line="46" pos:column="14">new<pos:position pos:line="46" pos:column="17"/></operator><operator pos:line="46" pos:column="17">-&gt;<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="19">commit<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">&amp;&amp;<pos:position pos:line="46" pos:column="36"/></operator> <name><name pos:line="46" pos:column="29">opts<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">-&gt;<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="35">new_branch<pos:position pos:line="46" pos:column="45"/></name></name></expr>)<pos:position pos:line="46" pos:column="46"/></condition><then pos:line="46" pos:column="46"> <block pos:line="46" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="47" pos:column="17">struct<pos:position pos:line="47" pos:column="23"/></name> <name pos:line="47" pos:column="24">object_id<pos:position pos:line="47" pos:column="33"/></name></name></type> <name pos:line="47" pos:column="34">rev<pos:position pos:line="47" pos:column="37"/></name></decl>;<pos:position pos:line="47" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">int<pos:position pos:line="48" pos:column="20"/></name></type> <name pos:line="48" pos:column="21">flag<pos:position pos:line="48" pos:column="25"/></name></decl>;<pos:position pos:line="48" pos:column="26"/></decl_stmt>

		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><operator pos:line="50" pos:column="21">!<pos:position pos:line="50" pos:column="22"/></operator><call><name pos:line="50" pos:column="22">read_ref_full<pos:position pos:line="50" pos:column="35"/></name><argument_list pos:line="50" pos:column="35">(<argument><expr><literal type="string" pos:line="50" pos:column="36">"HEAD"<pos:position pos:line="50" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="44">0<pos:position pos:line="50" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="47">rev<pos:position pos:line="50" pos:column="50"/></name><operator pos:line="50" pos:column="50">.<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="51">hash<pos:position pos:line="50" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="57">&amp;<pos:position pos:line="50" pos:column="62"/></operator><name pos:line="50" pos:column="58">flag<pos:position pos:line="50" pos:column="62"/></name></expr></argument>)<pos:position pos:line="50" pos:column="63"/></argument_list></call> <operator pos:line="50" pos:column="64">&amp;&amp;<pos:position pos:line="50" pos:column="74"/></operator>
		    <operator pos:line="51" pos:column="21">(<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">flag<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">&amp;<pos:position pos:line="51" pos:column="32"/></operator> <name pos:line="51" pos:column="29">REF_ISSYMREF<pos:position pos:line="51" pos:column="41"/></name><operator pos:line="51" pos:column="41">)<pos:position pos:line="51" pos:column="42"/></operator> <operator pos:line="51" pos:column="43">&amp;&amp;<pos:position pos:line="51" pos:column="53"/></operator> <call><name pos:line="51" pos:column="46">is_null_oid<pos:position pos:line="51" pos:column="57"/></name><argument_list pos:line="51" pos:column="57">(<argument><expr><operator pos:line="51" pos:column="58">&amp;<pos:position pos:line="51" pos:column="63"/></operator><name pos:line="51" pos:column="59">rev<pos:position pos:line="51" pos:column="62"/></name></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="64"/></condition><then pos:line="51" pos:column="64">
			<block type="pseudo"><return pos:line="52" pos:column="25">return <expr><call><name pos:line="52" pos:column="32">switch_unborn_to_new_branch<pos:position pos:line="52" pos:column="59"/></name><argument_list pos:line="52" pos:column="59">(<argument><expr><name pos:line="52" pos:column="60">opts<pos:position pos:line="52" pos:column="64"/></name></expr></argument>)<pos:position pos:line="52" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="66"/></return></block></then></if>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>
	<return pos:line="54" pos:column="9">return <expr><call><name pos:line="54" pos:column="16">switch_branches<pos:position pos:line="54" pos:column="31"/></name><argument_list pos:line="54" pos:column="31">(<argument><expr><name pos:line="54" pos:column="32">opts<pos:position pos:line="54" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="38">new<pos:position pos:line="54" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="54" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="43"/></return>
}</unit>

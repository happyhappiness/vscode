<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2151.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">print_signature_buffer<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">signature_check<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">sigc<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">unsigned<pos:position pos:line="1" pos:column="73"/></name></type> <name pos:line="1" pos:column="74">flags<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">output<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><ternary><condition><expr><name pos:line="3" pos:column="30">flags<pos:position pos:line="3" pos:column="35"/></name> <operator pos:line="3" pos:column="36">&amp;<pos:position pos:line="3" pos:column="41"/></operator> <name pos:line="3" pos:column="38">GPG_VERIFY_RAW<pos:position pos:line="3" pos:column="52"/></name></expr> ?<pos:position pos:line="3" pos:column="54"/></condition><then pos:line="3" pos:column="54">
		<expr><name><name pos:line="4" pos:column="17">sigc<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">-&gt;<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="23">gpg_status<pos:position pos:line="4" pos:column="33"/></name></name></expr> <pos:position pos:line="4" pos:column="34"/></then><else pos:line="4" pos:column="34">: <expr><name><name pos:line="4" pos:column="36">sigc<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">-&gt;<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="42">gpg_output<pos:position pos:line="4" pos:column="52"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">flags<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&amp;<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="21">GPG_VERIFY_VERBOSE<pos:position pos:line="6" pos:column="39"/></name> <operator pos:line="6" pos:column="40">&amp;&amp;<pos:position pos:line="6" pos:column="50"/></operator> <name><name pos:line="6" pos:column="43">sigc<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">-&gt;<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="49">payload<pos:position pos:line="6" pos:column="56"/></name></name></expr>)<pos:position pos:line="6" pos:column="57"/></condition><then pos:line="6" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">fputs<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name><name pos:line="7" pos:column="23">sigc<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">payload<pos:position pos:line="7" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="38">stdout<pos:position pos:line="7" pos:column="44"/></name></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt></block></then></if>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">output<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">fputs<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">output<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="31">stderr<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt></block></then></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

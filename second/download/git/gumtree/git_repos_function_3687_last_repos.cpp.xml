<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3687_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">lookup_hostname<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">hostinfo<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">hi<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name><name pos:line="3" pos:column="14">hi<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">-&gt;<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="18">hostname_lookup_done<pos:position pos:line="3" pos:column="38"/></name></name> <operator pos:line="3" pos:column="39">&amp;&amp;<pos:position pos:line="3" pos:column="49"/></operator> <name><name pos:line="3" pos:column="42">hi<pos:position pos:line="3" pos:column="44"/></name><operator pos:line="3" pos:column="44">-&gt;<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="46">hostname<pos:position pos:line="3" pos:column="54"/></name><operator pos:line="3" pos:column="54">.<pos:position pos:line="3" pos:column="55"/></operator><name pos:line="3" pos:column="55">len<pos:position pos:line="3" pos:column="58"/></name></name></expr>)<pos:position pos:line="3" pos:column="59"/></condition><then pos:line="3" pos:column="59"> <block pos:line="3" pos:column="60">{
<cpp:ifndef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifndef<pos:position pos:line="4" pos:column="8"/></cpp:directive> <name pos:line="4" pos:column="9">NO_IPV6<pos:position pos:line="4" pos:column="16"/></name></cpp:ifndef>
		<decl_stmt><decl><type><name><name pos:line="5" pos:column="17">struct<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">addrinfo<pos:position pos:line="5" pos:column="32"/></name></name></type> <name pos:line="5" pos:column="33">hints<pos:position pos:line="5" pos:column="38"/></name></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">struct<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">addrinfo<pos:position pos:line="6" pos:column="32"/></name></name> <modifier pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></modifier></type><name pos:line="6" pos:column="34">ai<pos:position pos:line="6" pos:column="36"/></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">gai<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><specifier pos:line="8" pos:column="17">static<pos:position pos:line="8" pos:column="23"/></specifier> <type><name pos:line="8" pos:column="24">char<pos:position pos:line="8" pos:column="28"/></name></type> <name><name pos:line="8" pos:column="29">addrbuf<pos:position pos:line="8" pos:column="36"/></name><index pos:line="8" pos:column="36">[<expr><name pos:line="8" pos:column="37">HOST_NAME_MAX<pos:position pos:line="8" pos:column="50"/></name> <operator pos:line="8" pos:column="51">+<pos:position pos:line="8" pos:column="52"/></operator> <literal type="number" pos:line="8" pos:column="53">1<pos:position pos:line="8" pos:column="54"/></literal></expr>]<pos:position pos:line="8" pos:column="55"/></index></name></decl>;<pos:position pos:line="8" pos:column="56"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="10" pos:column="17">memset<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><operator pos:line="10" pos:column="24">&amp;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="25">hints<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="32">0<pos:position pos:line="10" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="35">sizeof<argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">hints<pos:position pos:line="10" pos:column="47"/></name></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="11" pos:column="17">hints<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">.<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">ai_flags<pos:position pos:line="11" pos:column="31"/></name></name> <operator pos:line="11" pos:column="32">=<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="34">AI_CANONNAME<pos:position pos:line="11" pos:column="46"/></name></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt>

		<expr_stmt><expr><name pos:line="13" pos:column="17">gai<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="23">getaddrinfo<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name><name pos:line="13" pos:column="35">hi<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">-&gt;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="39">hostname<pos:position pos:line="13" pos:column="47"/></name><operator pos:line="13" pos:column="47">.<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">buf<pos:position pos:line="13" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="53">NULL<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="59">&amp;<pos:position pos:line="13" pos:column="64"/></operator><name pos:line="13" pos:column="60">hints<pos:position pos:line="13" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="67">&amp;<pos:position pos:line="13" pos:column="72"/></operator><name pos:line="13" pos:column="68">ai<pos:position pos:line="13" pos:column="70"/></name></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">gai<pos:position pos:line="14" pos:column="25"/></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26"> <block pos:line="14" pos:column="27">{
			<decl_stmt><decl><type><name><name pos:line="15" pos:column="25">struct<pos:position pos:line="15" pos:column="31"/></name> <name pos:line="15" pos:column="32">sockaddr_in<pos:position pos:line="15" pos:column="43"/></name></name> <modifier pos:line="15" pos:column="44">*<pos:position pos:line="15" pos:column="45"/></modifier></type><name pos:line="15" pos:column="45">sin_addr<pos:position pos:line="15" pos:column="53"/></name> <init pos:line="15" pos:column="54">= <expr><operator pos:line="15" pos:column="56">(<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="57">void<pos:position pos:line="15" pos:column="61"/></name> <operator pos:line="15" pos:column="62">*<pos:position pos:line="15" pos:column="63"/></operator><operator pos:line="15" pos:column="63">)<pos:position pos:line="15" pos:column="64"/></operator><name><name pos:line="15" pos:column="64">ai<pos:position pos:line="15" pos:column="66"/></name><operator pos:line="15" pos:column="66">-&gt;<pos:position pos:line="15" pos:column="71"/></operator><name pos:line="15" pos:column="68">ai_addr<pos:position pos:line="15" pos:column="75"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="76"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="17" pos:column="25">inet_ntop<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">AF_INET<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="44">&amp;<pos:position pos:line="17" pos:column="49"/></operator><name><name pos:line="17" pos:column="45">sin_addr<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">-&gt;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="55">sin_addr<pos:position pos:line="17" pos:column="63"/></name></name></expr></argument>,
				  <argument><expr><name pos:line="18" pos:column="35">addrbuf<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="44">sizeof<argument_list pos:line="18" pos:column="50">(<argument><expr><name pos:line="18" pos:column="51">addrbuf<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">strbuf_addstr<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><operator pos:line="19" pos:column="39">&amp;<pos:position pos:line="19" pos:column="44"/></operator><name><name pos:line="19" pos:column="40">hi<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">ip_address<pos:position pos:line="19" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="56">addrbuf<pos:position pos:line="19" pos:column="63"/></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>

			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name><name pos:line="21" pos:column="29">ai<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">ai_canonname<pos:position pos:line="21" pos:column="45"/></name></name></expr>)<pos:position pos:line="21" pos:column="46"/></condition><then pos:line="21" pos:column="46">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="33">sanitize_client<pos:position pos:line="22" pos:column="48"/></name><argument_list pos:line="22" pos:column="48">(<argument><expr><operator pos:line="22" pos:column="49">&amp;<pos:position pos:line="22" pos:column="54"/></operator><name><name pos:line="22" pos:column="50">hi<pos:position pos:line="22" pos:column="52"/></name><operator pos:line="22" pos:column="52">-&gt;<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="54">canon_hostname<pos:position pos:line="22" pos:column="68"/></name></name></expr></argument>,
						<argument><expr><name><name pos:line="23" pos:column="49">ai<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">-&gt;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="53">ai_canonname<pos:position pos:line="23" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt></block></then>
			<else pos:line="24" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="33">strbuf_addbuf<pos:position pos:line="25" pos:column="46"/></name><argument_list pos:line="25" pos:column="46">(<argument><expr><operator pos:line="25" pos:column="47">&amp;<pos:position pos:line="25" pos:column="52"/></operator><name><name pos:line="25" pos:column="48">hi<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">-&gt;<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="52">canon_hostname<pos:position pos:line="25" pos:column="66"/></name></name></expr></argument>,
					      <argument><expr><operator pos:line="26" pos:column="47">&amp;<pos:position pos:line="26" pos:column="52"/></operator><name><name pos:line="26" pos:column="48">hi<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">-&gt;<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="52">ip_address<pos:position pos:line="26" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="64"/></expr_stmt></block></else></if>

			<expr_stmt><expr><call><name pos:line="28" pos:column="25">freeaddrinfo<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><name pos:line="28" pos:column="38">ai<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
<cpp:else pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">else<pos:position pos:line="30" pos:column="6"/></cpp:directive></cpp:else>
		<decl_stmt><decl><type><name><name pos:line="31" pos:column="17">struct<pos:position pos:line="31" pos:column="23"/></name> <name pos:line="31" pos:column="24">hostent<pos:position pos:line="31" pos:column="31"/></name></name> <modifier pos:line="31" pos:column="32">*<pos:position pos:line="31" pos:column="33"/></modifier></type><name pos:line="31" pos:column="33">hent<pos:position pos:line="31" pos:column="37"/></name></decl>;<pos:position pos:line="31" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="32" pos:column="17">struct<pos:position pos:line="32" pos:column="23"/></name> <name pos:line="32" pos:column="24">sockaddr_in<pos:position pos:line="32" pos:column="35"/></name></name></type> <name pos:line="32" pos:column="36">sa<pos:position pos:line="32" pos:column="38"/></name></decl>;<pos:position pos:line="32" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="33" pos:column="17">char<pos:position pos:line="33" pos:column="21"/></name> <modifier pos:line="33" pos:column="22">*<pos:position pos:line="33" pos:column="23"/></modifier><modifier pos:line="33" pos:column="23">*<pos:position pos:line="33" pos:column="24"/></modifier></type><name pos:line="33" pos:column="24">ap<pos:position pos:line="33" pos:column="26"/></name></decl>;<pos:position pos:line="33" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><specifier pos:line="34" pos:column="17">static<pos:position pos:line="34" pos:column="23"/></specifier> <type><name pos:line="34" pos:column="24">char<pos:position pos:line="34" pos:column="28"/></name></type> <name><name pos:line="34" pos:column="29">addrbuf<pos:position pos:line="34" pos:column="36"/></name><index pos:line="34" pos:column="36">[<expr><name pos:line="34" pos:column="37">HOST_NAME_MAX<pos:position pos:line="34" pos:column="50"/></name> <operator pos:line="34" pos:column="51">+<pos:position pos:line="34" pos:column="52"/></operator> <literal type="number" pos:line="34" pos:column="53">1<pos:position pos:line="34" pos:column="54"/></literal></expr>]<pos:position pos:line="34" pos:column="55"/></index></name></decl>;<pos:position pos:line="34" pos:column="56"/></decl_stmt>

		<expr_stmt><expr><name pos:line="36" pos:column="17">hent<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <call><name pos:line="36" pos:column="24">gethostbyname<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name><name pos:line="36" pos:column="38">hi<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">-&gt;<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="42">hostname<pos:position pos:line="36" pos:column="50"/></name><operator pos:line="36" pos:column="50">.<pos:position pos:line="36" pos:column="51"/></operator><name pos:line="36" pos:column="51">buf<pos:position pos:line="36" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">hent<pos:position pos:line="37" pos:column="25"/></name></expr>)<pos:position pos:line="37" pos:column="26"/></condition><then pos:line="37" pos:column="26"> <block pos:line="37" pos:column="27">{
			<expr_stmt><expr><name pos:line="38" pos:column="25">ap<pos:position pos:line="38" pos:column="27"/></name> <operator pos:line="38" pos:column="28">=<pos:position pos:line="38" pos:column="29"/></operator> <name><name pos:line="38" pos:column="30">hent<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">h_addr_list<pos:position pos:line="38" pos:column="47"/></name></name></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">memset<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><operator pos:line="39" pos:column="32">&amp;<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="33">sa<pos:position pos:line="39" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="37">0<pos:position pos:line="39" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="40">sizeof <name pos:line="39" pos:column="47">sa<pos:position pos:line="39" pos:column="49"/></name></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="40" pos:column="25">sa<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">.<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">sin_family<pos:position pos:line="40" pos:column="38"/></name></name> <operator pos:line="40" pos:column="39">=<pos:position pos:line="40" pos:column="40"/></operator> <name><name pos:line="40" pos:column="41">hent<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">h_addrtype<pos:position pos:line="40" pos:column="57"/></name></name></expr>;<pos:position pos:line="40" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="41" pos:column="25">sa<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">.<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="28">sin_port<pos:position pos:line="41" pos:column="36"/></name></name> <operator pos:line="41" pos:column="37">=<pos:position pos:line="41" pos:column="38"/></operator> <call><name pos:line="41" pos:column="39">htons<pos:position pos:line="41" pos:column="44"/></name><argument_list pos:line="41" pos:column="44">(<argument><expr><literal type="number" pos:line="41" pos:column="45">0<pos:position pos:line="41" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">memcpy<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><operator pos:line="42" pos:column="32">&amp;<pos:position pos:line="42" pos:column="37"/></operator><name><name pos:line="42" pos:column="33">sa<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">.<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="36">sin_addr<pos:position pos:line="42" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="46">*<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="47">ap<pos:position pos:line="42" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="51">hent<pos:position pos:line="42" pos:column="55"/></name><operator pos:line="42" pos:column="55">-&gt;<pos:position pos:line="42" pos:column="60"/></operator><name pos:line="42" pos:column="57">h_length<pos:position pos:line="42" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="67"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="44" pos:column="25">inet_ntop<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name><name pos:line="44" pos:column="35">hent<pos:position pos:line="44" pos:column="39"/></name><operator pos:line="44" pos:column="39">-&gt;<pos:position pos:line="44" pos:column="44"/></operator><name pos:line="44" pos:column="41">h_addrtype<pos:position pos:line="44" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="53">&amp;<pos:position pos:line="44" pos:column="58"/></operator><name><name pos:line="44" pos:column="54">sa<pos:position pos:line="44" pos:column="56"/></name><operator pos:line="44" pos:column="56">.<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="57">sin_addr<pos:position pos:line="44" pos:column="65"/></name></name></expr></argument>,
				  <argument><expr><name pos:line="45" pos:column="35">addrbuf<pos:position pos:line="45" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="44">sizeof<argument_list pos:line="45" pos:column="50">(<argument><expr><name pos:line="45" pos:column="51">addrbuf<pos:position pos:line="45" pos:column="58"/></name></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="61"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="47" pos:column="25">sanitize_client<pos:position pos:line="47" pos:column="40"/></name><argument_list pos:line="47" pos:column="40">(<argument><expr><operator pos:line="47" pos:column="41">&amp;<pos:position pos:line="47" pos:column="46"/></operator><name><name pos:line="47" pos:column="42">hi<pos:position pos:line="47" pos:column="44"/></name><operator pos:line="47" pos:column="44">-&gt;<pos:position pos:line="47" pos:column="49"/></operator><name pos:line="47" pos:column="46">canon_hostname<pos:position pos:line="47" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="62">hent<pos:position pos:line="47" pos:column="66"/></name><operator pos:line="47" pos:column="66">-&gt;<pos:position pos:line="47" pos:column="71"/></operator><name pos:line="47" pos:column="68">h_name<pos:position pos:line="47" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">strbuf_addstr<pos:position pos:line="48" pos:column="38"/></name><argument_list pos:line="48" pos:column="38">(<argument><expr><operator pos:line="48" pos:column="39">&amp;<pos:position pos:line="48" pos:column="44"/></operator><name><name pos:line="48" pos:column="40">hi<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">-&gt;<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="44">ip_address<pos:position pos:line="48" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="56">addrbuf<pos:position pos:line="48" pos:column="63"/></name></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="49" pos:column="18"/></block></then></if>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif>
		<expr_stmt><expr><name><name pos:line="51" pos:column="17">hi<pos:position pos:line="51" pos:column="19"/></name><operator pos:line="51" pos:column="19">-&gt;<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="21">hostname_lookup_done<pos:position pos:line="51" pos:column="41"/></name></name> <operator pos:line="51" pos:column="42">=<pos:position pos:line="51" pos:column="43"/></operator> <literal type="number" pos:line="51" pos:column="44">1<pos:position pos:line="51" pos:column="45"/></literal></expr>;<pos:position pos:line="51" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_588_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">enum<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">contains_result<pos:position pos:line="1" pos:column="28"/></name></name></type> <name pos:line="1" pos:column="29">contains_test<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">commit<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">candidate<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
					  <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name><name pos:line="2" pos:column="49">struct<pos:position pos:line="2" pos:column="55"/></name> <name pos:line="2" pos:column="56">commit_list<pos:position pos:line="2" pos:column="67"/></name></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">want<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>,
					  <parameter><decl><type><name><name pos:line="3" pos:column="43">struct<pos:position pos:line="3" pos:column="49"/></name> <name pos:line="3" pos:column="50">contains_cache<pos:position pos:line="3" pos:column="64"/></name></name> <modifier pos:line="3" pos:column="65">*<pos:position pos:line="3" pos:column="66"/></modifier></type><name pos:line="3" pos:column="66">cache<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="72"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">enum<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">contains_result<pos:position pos:line="5" pos:column="29"/></name></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">cached<pos:position pos:line="5" pos:column="37"/></name> <init pos:line="5" pos:column="38">= <expr><call><name pos:line="5" pos:column="40">contains_cache_at<pos:position pos:line="5" pos:column="57"/></name><argument_list pos:line="5" pos:column="57">(<argument><expr><name pos:line="5" pos:column="58">cache<pos:position pos:line="5" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="65">candidate<pos:position pos:line="5" pos:column="74"/></name></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="76"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* If we already have the answer cached, return that. */</comment>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">cached<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">cached<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></return></block></then></if>

	<comment type="block" pos:line="11" pos:column="9">/* or are we it? */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">in_commit_list<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">want<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="34">candidate<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="45"/></condition><then pos:line="12" pos:column="45"> <block pos:line="12" pos:column="46">{
		<expr_stmt><expr><operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">cached<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">CONTAINS_YES<pos:position pos:line="13" pos:column="39"/></name></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">CONTAINS_YES<pos:position pos:line="14" pos:column="36"/></name></expr>;<pos:position pos:line="14" pos:column="37"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/* Otherwise, we don't know; prepare to recurse */</comment>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">parse_commit_or_die<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">candidate<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
	<return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">CONTAINS_UNKNOWN<pos:position pos:line="19" pos:column="32"/></name></expr>;<pos:position pos:line="19" pos:column="33"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4071_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">set_helper_option<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">transport<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">transport<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
			  <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">name<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">value<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">helper_data<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">data<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><name><name pos:line="4" pos:column="36">transport<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">-&gt;<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="47">data<pos:position pos:line="4" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">buf<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">STRBUF_INIT<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">ret<pos:position pos:line="6" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="21">is_bool<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><literal type="number" pos:line="6" pos:column="31">0<pos:position pos:line="6" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">get_helper<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">transport<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name><name pos:line="10" pos:column="14">data<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">option<pos:position pos:line="10" pos:column="26"/></name></name></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">strcmp<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">name<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="27">"deepen-not"<pos:position pos:line="13" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><call><name pos:line="14" pos:column="24">string_list_set_helper_option<pos:position pos:line="14" pos:column="53"/></name><argument_list pos:line="14" pos:column="53">(<argument><expr><name pos:line="14" pos:column="54">data<pos:position pos:line="14" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="60">name<pos:position pos:line="14" pos:column="64"/></name></expr></argument>,
						     <argument><expr><operator pos:line="15" pos:column="54">(<pos:position pos:line="15" pos:column="55"/></operator>struct <name pos:line="15" pos:column="62">string_list<pos:position pos:line="15" pos:column="73"/></name> <operator pos:line="15" pos:column="74">*<pos:position pos:line="15" pos:column="75"/></operator><operator pos:line="15" pos:column="75">)<pos:position pos:line="15" pos:column="76"/></operator><name pos:line="15" pos:column="76">value<pos:position pos:line="15" pos:column="81"/></name></expr></argument>)<pos:position pos:line="15" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="83"/></return></block></then></if>

	<for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">i<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal></expr>;<pos:position pos:line="17" pos:column="20"/></init> <condition><expr><name pos:line="17" pos:column="21">i<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">&lt;<pos:position pos:line="17" pos:column="27"/></operator> <call><name pos:line="17" pos:column="25">ARRAY_SIZE<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">unsupported_options<pos:position pos:line="17" pos:column="55"/></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></condition> <incr><expr><name pos:line="17" pos:column="58">i<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">++<pos:position pos:line="17" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="62"/></control> <block pos:line="17" pos:column="63">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><call><name pos:line="18" pos:column="22">strcmp<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">name<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="35">unsupported_options<pos:position pos:line="18" pos:column="54"/></name><index pos:line="18" pos:column="54">[<expr><name pos:line="18" pos:column="55">i<pos:position pos:line="18" pos:column="56"/></name></expr>]<pos:position pos:line="18" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="59"/></condition><then pos:line="18" pos:column="59">
			<block type="pseudo"><return pos:line="19" pos:column="25">return <expr><literal type="number" pos:line="19" pos:column="32">1<pos:position pos:line="19" pos:column="33"/></literal></expr>;<pos:position pos:line="19" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="20" pos:column="10"/></block></for>

	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></init> <condition><expr><name pos:line="22" pos:column="21">i<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&lt;<pos:position pos:line="22" pos:column="27"/></operator> <call><name pos:line="22" pos:column="25">ARRAY_SIZE<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name pos:line="22" pos:column="36">boolean_options<pos:position pos:line="22" pos:column="51"/></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></condition> <incr><expr><name pos:line="22" pos:column="54">i<pos:position pos:line="22" pos:column="55"/></name><operator pos:line="22" pos:column="55">++<pos:position pos:line="22" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="58"/></control> <block pos:line="22" pos:column="59">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><call><name pos:line="23" pos:column="22">strcmp<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">name<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="35">boolean_options<pos:position pos:line="23" pos:column="50"/></name><index pos:line="23" pos:column="50">[<expr><name pos:line="23" pos:column="51">i<pos:position pos:line="23" pos:column="52"/></name></expr>]<pos:position pos:line="23" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="55"/></condition><then pos:line="23" pos:column="55"> <block pos:line="23" pos:column="56">{
			<expr_stmt><expr><name pos:line="24" pos:column="25">is_bool<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">=<pos:position pos:line="24" pos:column="34"/></operator> <literal type="number" pos:line="24" pos:column="35">1<pos:position pos:line="24" pos:column="36"/></literal></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
			<break pos:line="25" pos:column="25">break;<pos:position pos:line="25" pos:column="31"/></break>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="29" pos:column="9">strbuf_addf<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><operator pos:line="29" pos:column="21">&amp;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="22">buf<pos:position pos:line="29" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="27">"option %s "<pos:position pos:line="29" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="41">name<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">is_bool<pos:position pos:line="30" pos:column="20"/></name></expr>)<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">strbuf_addstr<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><operator pos:line="31" pos:column="31">&amp;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="32">buf<pos:position pos:line="31" pos:column="35"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="31" pos:column="37">value<pos:position pos:line="31" pos:column="42"/></name></expr> ?<pos:position pos:line="31" pos:column="44"/></condition><then pos:line="31" pos:column="44"> <expr><literal type="string" pos:line="31" pos:column="45">"true"<pos:position pos:line="31" pos:column="51"/></literal></expr> <pos:position pos:line="31" pos:column="52"/></then><else pos:line="31" pos:column="52">: <expr><literal type="string" pos:line="31" pos:column="54">"false"<pos:position pos:line="31" pos:column="61"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="63"/></expr_stmt></block></then>
	<else pos:line="32" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">quote_c_style<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">value<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="38">&amp;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="39">buf<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">NULL<pos:position pos:line="33" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="50">0<pos:position pos:line="33" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">strbuf_addch<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><operator pos:line="34" pos:column="22">&amp;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="23">buf<pos:position pos:line="34" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="34" pos:column="28">'\n'<pos:position pos:line="34" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><name pos:line="36" pos:column="9">ret<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <call><name pos:line="36" pos:column="15">strbuf_set_helper_option<pos:position pos:line="36" pos:column="39"/></name><argument_list pos:line="36" pos:column="39">(<argument><expr><name pos:line="36" pos:column="40">data<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="46">&amp;<pos:position pos:line="36" pos:column="51"/></operator><name pos:line="36" pos:column="47">buf<pos:position pos:line="36" pos:column="50"/></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">strbuf_release<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><operator pos:line="37" pos:column="24">&amp;<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="25">buf<pos:position pos:line="37" pos:column="28"/></name></expr></argument>)<pos:position pos:line="37" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt>
	<return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">ret<pos:position pos:line="38" pos:column="19"/></name></expr>;<pos:position pos:line="38" pos:column="20"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

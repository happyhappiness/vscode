<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1461.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handshake_version<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">child_process<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">process<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
			     <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">welcome_prefix<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">int<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">versions<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="3" pos:column="30">int<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">chosen_version<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="50"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">version_scratch<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">line<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">p<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">chosen_version<pos:position pos:line="10" pos:column="28"/></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">chosen_version<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">=<pos:position pos:line="11" pos:column="33"/></operator> <operator pos:line="11" pos:column="34">&amp;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="35">version_scratch<pos:position pos:line="11" pos:column="50"/></name></expr>;<pos:position pos:line="11" pos:column="51"/></expr_stmt></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">packet_write_fmt_gently<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name><name pos:line="13" pos:column="37">process<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">-&gt;<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="46">in<pos:position pos:line="13" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="50">"%s-client\n"<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>,
				    <argument><expr><name pos:line="14" pos:column="37">welcome_prefix<pos:position pos:line="14" pos:column="51"/></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="53"/></condition><then pos:line="14" pos:column="53">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><call><name pos:line="15" pos:column="24">error<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><literal type="string" pos:line="15" pos:column="30">"Could not write client identification"<pos:position pos:line="15" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="71"/></return></block></then></if>
	<for pos:line="16" pos:column="9">for <control pos:line="16" pos:column="13">(<init><expr><name pos:line="16" pos:column="14">i<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></init> <condition><expr><name><name pos:line="16" pos:column="21">versions<pos:position pos:line="16" pos:column="29"/></name><index pos:line="16" pos:column="29">[<expr><name pos:line="16" pos:column="30">i<pos:position pos:line="16" pos:column="31"/></name></expr>]<pos:position pos:line="16" pos:column="32"/></index></name></expr>;<pos:position pos:line="16" pos:column="33"/></condition> <incr><expr><name pos:line="16" pos:column="34">i<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">++<pos:position pos:line="16" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="38"/></control> <block pos:line="16" pos:column="39">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">packet_write_fmt_gently<pos:position pos:line="17" pos:column="44"/></name><argument_list pos:line="17" pos:column="44">(<argument><expr><name><name pos:line="17" pos:column="45">process<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">-&gt;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="54">in<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="58">"version=%d\n"<pos:position pos:line="17" pos:column="72"/></literal></expr></argument>,
					    <argument><expr><name><name pos:line="18" pos:column="45">versions<pos:position pos:line="18" pos:column="53"/></name><index pos:line="18" pos:column="53">[<expr><name pos:line="18" pos:column="54">i<pos:position pos:line="18" pos:column="55"/></name></expr>]<pos:position pos:line="18" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="58"/></condition><then pos:line="18" pos:column="58">
			<block type="pseudo"><return pos:line="19" pos:column="25">return <expr><call><name pos:line="19" pos:column="32">error<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><literal type="string" pos:line="19" pos:column="38">"Could not write requested version"<pos:position pos:line="19" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="75"/></return></block></then></if>
	}<pos:position pos:line="20" pos:column="10"/></block></for>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">packet_flush_gently<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name><name pos:line="21" pos:column="33">process<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">-&gt;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="42">in<pos:position pos:line="21" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="46"/></condition><then pos:line="21" pos:column="46">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><call><name pos:line="22" pos:column="24">error<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><literal type="string" pos:line="22" pos:column="30">"Could not write flush packet"<pos:position pos:line="22" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="62"/></return></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><operator pos:line="24" pos:column="14">(<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">line<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <call><name pos:line="24" pos:column="22">packet_read_line<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><name><name pos:line="24" pos:column="39">process<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">-&gt;<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="48">out<pos:position pos:line="24" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">NULL<pos:position pos:line="24" pos:column="57"/></name></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call><operator pos:line="24" pos:column="58">)<pos:position pos:line="24" pos:column="59"/></operator> <operator pos:line="24" pos:column="60">||<pos:position pos:line="24" pos:column="62"/></operator>
	    <operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><call><name pos:line="25" pos:column="14">skip_prefix<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">line<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">welcome_prefix<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="48">&amp;<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="49">p<pos:position pos:line="25" pos:column="50"/></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call> <operator pos:line="25" pos:column="52">||<pos:position pos:line="25" pos:column="54"/></operator>
	    <call><name pos:line="26" pos:column="13">strcmp<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">p<pos:position pos:line="26" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="23">"-server"<pos:position pos:line="26" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34">
		<block type="pseudo"><return pos:line="27" pos:column="17">return <expr><call><name pos:line="27" pos:column="24">error<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><literal type="string" pos:line="27" pos:column="30">"Unexpected line '%s', expected %s-server"<pos:position pos:line="27" pos:column="72"/></literal></expr></argument>,
			     <argument><expr><ternary><condition><expr><name pos:line="28" pos:column="30">line<pos:position pos:line="28" pos:column="34"/></name></expr> ?<pos:position pos:line="28" pos:column="36"/></condition><then pos:line="28" pos:column="36"> <expr><name pos:line="28" pos:column="37">line<pos:position pos:line="28" pos:column="41"/></name></expr> <pos:position pos:line="28" pos:column="42"/></then><else pos:line="28" pos:column="42">: <expr><literal type="string" pos:line="28" pos:column="44">"&lt;flush packet&gt;"<pos:position pos:line="28" pos:column="66"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="28" pos:column="62">welcome_prefix<pos:position pos:line="28" pos:column="76"/></name></expr></argument>)<pos:position pos:line="28" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="78"/></return></block></then></if>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><operator pos:line="29" pos:column="14">(<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">line<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <call><name pos:line="29" pos:column="22">packet_read_line<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><name><name pos:line="29" pos:column="39">process<pos:position pos:line="29" pos:column="46"/></name><operator pos:line="29" pos:column="46">-&gt;<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="48">out<pos:position pos:line="29" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="53">NULL<pos:position pos:line="29" pos:column="57"/></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call><operator pos:line="29" pos:column="58">)<pos:position pos:line="29" pos:column="59"/></operator> <operator pos:line="29" pos:column="60">||<pos:position pos:line="29" pos:column="62"/></operator>
	    <operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><call><name pos:line="30" pos:column="14">skip_prefix<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">line<pos:position pos:line="30" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="32">"version="<pos:position pos:line="30" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="44">&amp;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="45">p<pos:position pos:line="30" pos:column="46"/></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call> <operator pos:line="30" pos:column="48">||<pos:position pos:line="30" pos:column="50"/></operator>
	    <call><name pos:line="31" pos:column="13">strtol_i<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">p<pos:position pos:line="31" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="25">10<pos:position pos:line="31" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="29">chosen_version<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="45"/></condition><then pos:line="31" pos:column="45">
		<block type="pseudo"><return pos:line="32" pos:column="17">return <expr><call><name pos:line="32" pos:column="24">error<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><literal type="string" pos:line="32" pos:column="30">"Unexpected line '%s', expected version"<pos:position pos:line="32" pos:column="70"/></literal></expr></argument>,
			     <argument><expr><ternary><condition><expr><name pos:line="33" pos:column="30">line<pos:position pos:line="33" pos:column="34"/></name></expr> ?<pos:position pos:line="33" pos:column="36"/></condition><then pos:line="33" pos:column="36"> <expr><name pos:line="33" pos:column="37">line<pos:position pos:line="33" pos:column="41"/></name></expr> <pos:position pos:line="33" pos:column="42"/></then><else pos:line="33" pos:column="42">: <expr><literal type="string" pos:line="33" pos:column="44">"&lt;flush packet&gt;"<pos:position pos:line="33" pos:column="66"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></return></block></then></if>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">(<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">line<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <call><name pos:line="34" pos:column="21">packet_read_line<pos:position pos:line="34" pos:column="37"/></name><argument_list pos:line="34" pos:column="37">(<argument><expr><name><name pos:line="34" pos:column="38">process<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">-&gt;<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="47">out<pos:position pos:line="34" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="52">NULL<pos:position pos:line="34" pos:column="56"/></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call><operator pos:line="34" pos:column="57">)<pos:position pos:line="34" pos:column="58"/></operator></expr>)<pos:position pos:line="34" pos:column="59"/></condition><then pos:line="34" pos:column="59">
		<block type="pseudo"><return pos:line="35" pos:column="17">return <expr><call><name pos:line="35" pos:column="24">error<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><literal type="string" pos:line="35" pos:column="30">"Unexpected line '%s', expected flush"<pos:position pos:line="35" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="70">line<pos:position pos:line="35" pos:column="74"/></name></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="76"/></return></block></then></if>

	<comment type="block" pos:line="37" pos:column="9">/* Check to make sure that the version received is supported */</comment>
	<for pos:line="38" pos:column="9">for <control pos:line="38" pos:column="13">(<init><expr><name pos:line="38" pos:column="14">i<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>;<pos:position pos:line="38" pos:column="20"/></init> <condition><expr><name><name pos:line="38" pos:column="21">versions<pos:position pos:line="38" pos:column="29"/></name><index pos:line="38" pos:column="29">[<expr><name pos:line="38" pos:column="30">i<pos:position pos:line="38" pos:column="31"/></name></expr>]<pos:position pos:line="38" pos:column="32"/></index></name></expr>;<pos:position pos:line="38" pos:column="33"/></condition> <incr><expr><name pos:line="38" pos:column="34">i<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">++<pos:position pos:line="38" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="38"/></control> <block pos:line="38" pos:column="39">{
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name><name pos:line="39" pos:column="21">versions<pos:position pos:line="39" pos:column="29"/></name><index pos:line="39" pos:column="29">[<expr><name pos:line="39" pos:column="30">i<pos:position pos:line="39" pos:column="31"/></name></expr>]<pos:position pos:line="39" pos:column="32"/></index></name> <operator pos:line="39" pos:column="33">==<pos:position pos:line="39" pos:column="35"/></operator> <operator pos:line="39" pos:column="36">*<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="37">chosen_version<pos:position pos:line="39" pos:column="51"/></name></expr>)<pos:position pos:line="39" pos:column="52"/></condition><then pos:line="39" pos:column="52">
			<block type="pseudo"><break pos:line="40" pos:column="25">break;<pos:position pos:line="40" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="41" pos:column="10"/></block></for>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><name><name pos:line="42" pos:column="14">versions<pos:position pos:line="42" pos:column="22"/></name><index pos:line="42" pos:column="22">[<expr><name pos:line="42" pos:column="23">i<pos:position pos:line="42" pos:column="24"/></name></expr>]<pos:position pos:line="42" pos:column="25"/></index></name></expr>)<pos:position pos:line="42" pos:column="26"/></condition><then pos:line="42" pos:column="26">
		<block type="pseudo"><return pos:line="43" pos:column="17">return <expr><call><name pos:line="43" pos:column="24">error<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><literal type="string" pos:line="43" pos:column="30">"Version %d not supported"<pos:position pos:line="43" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="58">*<pos:position pos:line="43" pos:column="59"/></operator><name pos:line="43" pos:column="59">chosen_version<pos:position pos:line="43" pos:column="73"/></name></expr></argument>)<pos:position pos:line="43" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="75"/></return></block></then></if>

	<return pos:line="45" pos:column="9">return <expr><literal type="number" pos:line="45" pos:column="16">0<pos:position pos:line="45" pos:column="17"/></literal></expr>;<pos:position pos:line="45" pos:column="18"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2734_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">strbuf_add_unique_abbrev<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">strbuf<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">sb<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">unsigned<pos:position pos:line="1" pos:column="64"/></name> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">sha1<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">abbrev_len<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">r<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">strbuf_grow<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">sb<pos:position pos:line="5" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="25">GIT_SHA1_HEXSZ<pos:position pos:line="5" pos:column="39"/></name> <operator pos:line="5" pos:column="40">+<pos:position pos:line="5" pos:column="41"/></operator> <literal type="number" pos:line="5" pos:column="42">1<pos:position pos:line="5" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name pos:line="6" pos:column="9">r<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <call><name pos:line="6" pos:column="13">find_unique_abbrev_r<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name><name pos:line="6" pos:column="34">sb<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">buf<pos:position pos:line="6" pos:column="41"/></name></name> <operator pos:line="6" pos:column="42">+<pos:position pos:line="6" pos:column="43"/></operator> <name><name pos:line="6" pos:column="44">sb<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">-&gt;<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="48">len<pos:position pos:line="6" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="53">sha1<pos:position pos:line="6" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="59">abbrev_len<pos:position pos:line="6" pos:column="69"/></name></expr></argument>)<pos:position pos:line="6" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">strbuf_setlen<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">sb<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="27">sb<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">-&gt;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="31">len<pos:position pos:line="7" pos:column="34"/></name></name> <operator pos:line="7" pos:column="35">+<pos:position pos:line="7" pos:column="36"/></operator> <name pos:line="7" pos:column="37">r<pos:position pos:line="7" pos:column="38"/></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

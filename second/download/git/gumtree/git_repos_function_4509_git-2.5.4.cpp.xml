<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4509_git-2.5.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_blob_object<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">strbuf<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">buf<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">unsigned<pos:position pos:line="1" pos:column="63"/></name> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">sha1<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="76">unsigned<pos:position pos:line="1" pos:column="84"/></name></type> <name pos:line="1" pos:column="85">mode<pos:position pos:line="1" pos:column="89"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="90"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">S_ISGITLINK<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">(<argument><expr><name pos:line="3" pos:column="25">mode<pos:position pos:line="3" pos:column="29"/></name></expr></argument>)<pos:position pos:line="3" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="31"/></condition><then pos:line="3" pos:column="31"> <block pos:line="3" pos:column="32">{
		<expr_stmt><expr><call><name pos:line="4" pos:column="17">strbuf_grow<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><name pos:line="4" pos:column="29">buf<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="34">100<pos:position pos:line="4" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="5" pos:column="17">strbuf_addf<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name pos:line="5" pos:column="29">buf<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="34">"Subproject commit %s\n"<pos:position pos:line="5" pos:column="58"/></literal></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="60">sha1_to_hex<pos:position pos:line="5" pos:column="71"/></name><argument_list pos:line="5" pos:column="71">(<argument><expr><name pos:line="5" pos:column="72">sha1<pos:position pos:line="5" pos:column="76"/></name></expr></argument>)<pos:position pos:line="5" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="79"/></expr_stmt>
	}<pos:position pos:line="6" pos:column="10"/></block></then> <else pos:line="6" pos:column="11">else <block pos:line="6" pos:column="16">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">enum<pos:position pos:line="7" pos:column="21"/></name> <name pos:line="7" pos:column="22">object_type<pos:position pos:line="7" pos:column="33"/></name></name></type> <name pos:line="7" pos:column="34">type<pos:position pos:line="7" pos:column="38"/></name></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">unsigned<pos:position pos:line="8" pos:column="25"/></name> <name pos:line="8" pos:column="26">long<pos:position pos:line="8" pos:column="30"/></name></type> <name pos:line="8" pos:column="31">sz<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">result<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>

		<expr_stmt><expr><name pos:line="11" pos:column="17">result<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <call><name pos:line="11" pos:column="26">read_sha1_file<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">(<argument><expr><name pos:line="11" pos:column="41">sha1<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="47">&amp;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="48">type<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="54">&amp;<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="55">sz<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">result<pos:position pos:line="12" pos:column="28"/></name></expr>)<pos:position pos:line="12" pos:column="29"/></condition><then pos:line="12" pos:column="29">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><operator pos:line="13" pos:column="32">-<pos:position pos:line="13" pos:column="33"/></operator><literal type="number" pos:line="13" pos:column="33">1<pos:position pos:line="13" pos:column="34"/></literal></expr>;<pos:position pos:line="13" pos:column="35"/></return></block></then></if>
		<comment type="block" pos:line="14" pos:column="17">/* XXX read_sha1_file NUL-terminates */</comment>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">strbuf_attach<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">buf<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">result<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">sz<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="48">sz<pos:position pos:line="15" pos:column="50"/></name> <operator pos:line="15" pos:column="51">+<pos:position pos:line="15" pos:column="52"/></operator> <literal type="number" pos:line="15" pos:column="53">1<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></else></if>
	<return pos:line="17" pos:column="9">return <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

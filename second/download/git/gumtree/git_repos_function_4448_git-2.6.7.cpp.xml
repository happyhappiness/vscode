<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4448_git-2.6.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_cached_object<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">object<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">obj<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">obj_buffer<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">obj_buf<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">sha1<pos:position pos:line="3" pos:column="27"/></name><index pos:line="3" pos:column="27">[<expr><literal type="number" pos:line="3" pos:column="28">20<pos:position pos:line="3" pos:column="30"/></literal></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">write_sha1_file<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name><name pos:line="5" pos:column="29">obj_buf<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">buffer<pos:position pos:line="5" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="46">obj_buf<pos:position pos:line="5" pos:column="53"/></name><operator pos:line="5" pos:column="53">-&gt;<pos:position pos:line="5" pos:column="58"/></operator><name pos:line="5" pos:column="55">size<pos:position pos:line="5" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><typename pos:line="5" pos:column="61">typename<pos:position pos:line="5" pos:column="69"/></typename></name><operator pos:line="5" pos:column="69">(<pos:position pos:line="5" pos:column="70"/></operator><name><name pos:line="5" pos:column="70">obj<pos:position pos:line="5" pos:column="73"/></name><operator pos:line="5" pos:column="73">-&gt;<pos:position pos:line="5" pos:column="78"/></operator><name pos:line="5" pos:column="75">type<pos:position pos:line="5" pos:column="79"/></name></name><operator pos:line="5" pos:column="79">)<pos:position pos:line="5" pos:column="80"/></operator></expr></argument>, <argument><expr><name pos:line="5" pos:column="82">sha1<pos:position pos:line="5" pos:column="86"/></name></expr></argument>)<pos:position pos:line="5" pos:column="87"/></argument_list></call> <operator pos:line="5" pos:column="88">&lt;<pos:position pos:line="5" pos:column="92"/></operator> <literal type="number" pos:line="5" pos:column="90">0<pos:position pos:line="5" pos:column="91"/></literal></expr>)<pos:position pos:line="5" pos:column="92"/></condition><then pos:line="5" pos:column="92">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">die<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"failed to write object %s"<pos:position pos:line="6" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="50">sha1_to_hex<pos:position pos:line="6" pos:column="61"/></name><argument_list pos:line="6" pos:column="61">(<argument><expr><name><name pos:line="6" pos:column="62">obj<pos:position pos:line="6" pos:column="65"/></name><operator pos:line="6" pos:column="65">-&gt;<pos:position pos:line="6" pos:column="70"/></operator><name pos:line="6" pos:column="67">sha1<pos:position pos:line="6" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="74"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">obj<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">flags<pos:position pos:line="7" pos:column="19"/></name></name> <operator pos:line="7" pos:column="20">|=<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">FLAG_WRITTEN<pos:position pos:line="7" pos:column="35"/></name></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4947_git-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">debug_merge<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">cache_entry<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier> <specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">stages<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
		       <parameter><decl><type><name><name pos:line="2" pos:column="24">struct<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">unpack_trees_options<pos:position pos:line="2" pos:column="51"/></name></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">o<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">printf<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="string" pos:line="6" pos:column="16">"* %d-way merge\n"<pos:position pos:line="6" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="36">o<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">merge_size<pos:position pos:line="6" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">debug_stage<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><literal type="string" pos:line="7" pos:column="21">"index"<pos:position pos:line="7" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="30">stages<pos:position pos:line="7" pos:column="36"/></name><index pos:line="7" pos:column="36">[<expr><literal type="number" pos:line="7" pos:column="37">0<pos:position pos:line="7" pos:column="38"/></literal></expr>]<pos:position pos:line="7" pos:column="39"/></index></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="41">o<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <literal type="number" pos:line="8" pos:column="18">1<pos:position pos:line="8" pos:column="19"/></literal></expr>;<pos:position pos:line="8" pos:column="20"/></init> <condition><expr><name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;=<pos:position pos:line="8" pos:column="28"/></operator> <name><name pos:line="8" pos:column="26">o<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">merge_size<pos:position pos:line="8" pos:column="39"/></name></name></expr>;<pos:position pos:line="8" pos:column="40"/></condition> <incr><expr><name pos:line="8" pos:column="41">i<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">++<pos:position pos:line="8" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="45"/></control> <block pos:line="8" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name></type> <name><name pos:line="9" pos:column="22">buf<pos:position pos:line="9" pos:column="25"/></name><index pos:line="9" pos:column="25">[<expr><literal type="number" pos:line="9" pos:column="26">24<pos:position pos:line="9" pos:column="28"/></literal></expr>]<pos:position pos:line="9" pos:column="29"/></index></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">sprintf<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">buf<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="30">"ent#%d"<pos:position pos:line="10" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">i<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">debug_stage<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">buf<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="34">stages<pos:position pos:line="11" pos:column="40"/></name><index pos:line="11" pos:column="40">[<expr><name pos:line="11" pos:column="41">i<pos:position pos:line="11" pos:column="42"/></name></expr>]<pos:position pos:line="11" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">o<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></for>
	<return pos:line="13" pos:column="9">return <expr><literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

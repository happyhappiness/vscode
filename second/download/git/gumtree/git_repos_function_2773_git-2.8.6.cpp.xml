<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2773_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">process_all_files<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">line_log_data<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">range_out<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
			     <parameter><decl><type><name><name pos:line="2" pos:column="30">struct<pos:position pos:line="2" pos:column="36"/></name> <name pos:line="2" pos:column="37">rev_info<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">rev<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
			     <parameter><decl><type><name><name pos:line="3" pos:column="30">struct<pos:position pos:line="3" pos:column="36"/></name> <name pos:line="3" pos:column="37">diff_queue_struct<pos:position pos:line="3" pos:column="54"/></name></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">queue<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>,
			     <parameter><decl><type><name><name pos:line="4" pos:column="30">struct<pos:position pos:line="4" pos:column="36"/></name> <name pos:line="4" pos:column="37">line_log_data<pos:position pos:line="4" pos:column="50"/></name></name> <modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier></type><name pos:line="4" pos:column="52">range<pos:position pos:line="4" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="58"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">changed<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><literal type="number" pos:line="6" pos:column="26">0<pos:position pos:line="6" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><operator pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">range_out<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <call><name pos:line="8" pos:column="22">line_log_data_copy<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">(<argument><expr><name pos:line="8" pos:column="41">range<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></init> <condition><expr><name pos:line="10" pos:column="21">i<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">&lt;<pos:position pos:line="10" pos:column="27"/></operator> <name><name pos:line="10" pos:column="25">queue<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">-&gt;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="32">nr<pos:position pos:line="10" pos:column="34"/></name></name></expr>;<pos:position pos:line="10" pos:column="35"/></condition> <incr><expr><name pos:line="10" pos:column="36">i<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">++<pos:position pos:line="10" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="40"/></control> <block pos:line="10" pos:column="41">{
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">diff_ranges<pos:position pos:line="11" pos:column="35"/></name></name> <modifier pos:line="11" pos:column="36">*<pos:position pos:line="11" pos:column="37"/></modifier></type><name pos:line="11" pos:column="37">pairdiff<pos:position pos:line="11" pos:column="45"/></name> <init pos:line="11" pos:column="46">= <expr><name pos:line="11" pos:column="48">NULL<pos:position pos:line="11" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">diff_filepair<pos:position pos:line="12" pos:column="37"/></name></name> <modifier pos:line="12" pos:column="38">*<pos:position pos:line="12" pos:column="39"/></modifier></type><name pos:line="12" pos:column="39">pair<pos:position pos:line="12" pos:column="43"/></name> <init pos:line="12" pos:column="44">= <expr><name><name pos:line="12" pos:column="46">queue<pos:position pos:line="12" pos:column="51"/></name><operator pos:line="12" pos:column="51">-&gt;<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="53">queue<pos:position pos:line="12" pos:column="58"/></name><index pos:line="12" pos:column="58">[<expr><name pos:line="12" pos:column="59">i<pos:position pos:line="12" pos:column="60"/></name></expr>]<pos:position pos:line="12" pos:column="61"/></index></name></expr></init></decl>;<pos:position pos:line="12" pos:column="62"/></decl_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><call><name pos:line="13" pos:column="21">process_diff_filepair<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">rev<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">pair<pos:position pos:line="13" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="54">*<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="55">range_out<pos:position pos:line="13" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="66">&amp;<pos:position pos:line="13" pos:column="71"/></operator><name pos:line="13" pos:column="67">pairdiff<pos:position pos:line="13" pos:column="75"/></name></expr></argument>)<pos:position pos:line="13" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="77"/></condition><then pos:line="13" pos:column="77"> <block pos:line="13" pos:column="78">{
			<comment type="block" pos:line="14" pos:column="25">/*
			 * Store away the diff for later output.  We
			 * tuck it in the ranges we got as _input_,
			 * since that's the commit that caused the
			 * diff.
			 *
			 * NEEDSWORK not enough when we get around to
			 * doing something interesting with merges;
			 * currently each invocation on a merge parent
			 * trashes the previous one's diff.
			 *
			 * NEEDSWORK tramples over data structures not owned here
			 */</comment>
			<decl_stmt><decl><type><name><name pos:line="27" pos:column="25">struct<pos:position pos:line="27" pos:column="31"/></name> <name pos:line="27" pos:column="32">line_log_data<pos:position pos:line="27" pos:column="45"/></name></name> <modifier pos:line="27" pos:column="46">*<pos:position pos:line="27" pos:column="47"/></modifier></type><name pos:line="27" pos:column="47">rg<pos:position pos:line="27" pos:column="49"/></name> <init pos:line="27" pos:column="50">= <expr><name pos:line="27" pos:column="52">range<pos:position pos:line="27" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="58"/></decl_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">changed<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">++<pos:position pos:line="28" pos:column="34"/></operator></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
			<while pos:line="29" pos:column="25">while <condition pos:line="29" pos:column="31">(<expr><name pos:line="29" pos:column="32">rg<pos:position pos:line="29" pos:column="34"/></name> <operator pos:line="29" pos:column="35">&amp;&amp;<pos:position pos:line="29" pos:column="45"/></operator> <call><name pos:line="29" pos:column="38">strcmp<pos:position pos:line="29" pos:column="44"/></name><argument_list pos:line="29" pos:column="44">(<argument><expr><name><name pos:line="29" pos:column="45">rg<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">-&gt;<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="49">path<pos:position pos:line="29" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="55">pair<pos:position pos:line="29" pos:column="59"/></name><operator pos:line="29" pos:column="59">-&gt;<pos:position pos:line="29" pos:column="64"/></operator><name pos:line="29" pos:column="61">two<pos:position pos:line="29" pos:column="64"/></name><operator pos:line="29" pos:column="64">-&gt;<pos:position pos:line="29" pos:column="69"/></operator><name pos:line="29" pos:column="66">path<pos:position pos:line="29" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="72"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="33">rg<pos:position pos:line="30" pos:column="35"/></name> <operator pos:line="30" pos:column="36">=<pos:position pos:line="30" pos:column="37"/></operator> <name><name pos:line="30" pos:column="38">rg<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">next<pos:position pos:line="30" pos:column="46"/></name></name></expr>;<pos:position pos:line="30" pos:column="47"/></expr_stmt></block></while>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">assert<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">rg<pos:position pos:line="31" pos:column="34"/></name></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="32" pos:column="25">rg<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">pair<pos:position pos:line="32" pos:column="33"/></name></name> <operator pos:line="32" pos:column="34">=<pos:position pos:line="32" pos:column="35"/></operator> <call><name pos:line="32" pos:column="36">diff_filepair_dup<pos:position pos:line="32" pos:column="53"/></name><argument_list pos:line="32" pos:column="53">(<argument><expr><name><name pos:line="32" pos:column="54">queue<pos:position pos:line="32" pos:column="59"/></name><operator pos:line="32" pos:column="59">-&gt;<pos:position pos:line="32" pos:column="64"/></operator><name pos:line="32" pos:column="61">queue<pos:position pos:line="32" pos:column="66"/></name><index pos:line="32" pos:column="66">[<expr><name pos:line="32" pos:column="67">i<pos:position pos:line="32" pos:column="68"/></name></expr>]<pos:position pos:line="32" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">memcpy<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><operator pos:line="33" pos:column="32">&amp;<pos:position pos:line="33" pos:column="37"/></operator><name><name pos:line="33" pos:column="33">rg<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">diff<pos:position pos:line="33" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="43">pairdiff<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="53">sizeof<argument_list pos:line="33" pos:column="59">(<argument><expr pos:line="33" pos:column="60">struct <name pos:line="33" pos:column="67">diff_ranges<pos:position pos:line="33" pos:column="78"/></name></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="81"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">free<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name pos:line="35" pos:column="22">pairdiff<pos:position pos:line="35" pos:column="30"/></name></expr></argument>)<pos:position pos:line="35" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></for>

	<return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">changed<pos:position pos:line="38" pos:column="23"/></name></expr>;<pos:position pos:line="38" pos:column="24"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

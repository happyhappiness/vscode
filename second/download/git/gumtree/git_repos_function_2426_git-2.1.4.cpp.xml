<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2426_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">packed_ref_cache<pos:position pos:line="1" pos:column="31"/></name></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">get_packed_ref_cache<pos:position pos:line="1" pos:column="53"/></name><parameter_list pos:line="1" pos:column="53">(<parameter><decl><type><name><name pos:line="1" pos:column="54">struct<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">ref_cache<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">refs<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">packed_refs_file<pos:position pos:line="3" pos:column="37"/></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></operator><name><name pos:line="5" pos:column="14">refs<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">name<pos:position pos:line="5" pos:column="24"/></name></name></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">packed_refs_file<pos:position pos:line="6" pos:column="33"/></name> <operator pos:line="6" pos:column="34">=<pos:position pos:line="6" pos:column="35"/></operator> <call><name pos:line="6" pos:column="36">git_path_submodule<pos:position pos:line="6" pos:column="54"/></name><argument_list pos:line="6" pos:column="54">(<argument><expr><name><name pos:line="6" pos:column="55">refs<pos:position pos:line="6" pos:column="59"/></name><operator pos:line="6" pos:column="59">-&gt;<pos:position pos:line="6" pos:column="64"/></operator><name pos:line="6" pos:column="61">name<pos:position pos:line="6" pos:column="65"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="67">"packed-refs"<pos:position pos:line="6" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="82"/></expr_stmt></block></then>
	<else pos:line="7" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">packed_refs_file<pos:position pos:line="8" pos:column="33"/></name> <operator pos:line="8" pos:column="34">=<pos:position pos:line="8" pos:column="35"/></operator> <call><name pos:line="8" pos:column="36">git_path<pos:position pos:line="8" pos:column="44"/></name><argument_list pos:line="8" pos:column="44">(<argument><expr><literal type="string" pos:line="8" pos:column="45">"packed-refs"<pos:position pos:line="8" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="60"/></expr_stmt></block></else></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">refs<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">packed<pos:position pos:line="10" pos:column="25"/></name></name> <operator pos:line="10" pos:column="26">&amp;&amp;<pos:position pos:line="10" pos:column="36"/></operator>
	    <operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">stat_validity_check<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><operator pos:line="11" pos:column="34">&amp;<pos:position pos:line="11" pos:column="39"/></operator><name><name pos:line="11" pos:column="35">refs<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">packed<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">-&gt;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="49">validity<pos:position pos:line="11" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="59">packed_refs_file<pos:position pos:line="11" pos:column="75"/></name></expr></argument>)<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="77"/></condition><then pos:line="11" pos:column="77">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">clear_packed_ref_cache<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">refs<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name><name pos:line="14" pos:column="14">refs<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">packed<pos:position pos:line="14" pos:column="26"/></name></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27"> <block pos:line="14" pos:column="28">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">FILE<pos:position pos:line="15" pos:column="21"/></name> <modifier pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></modifier></type><name pos:line="15" pos:column="23">f<pos:position pos:line="15" pos:column="24"/></name></decl>;<pos:position pos:line="15" pos:column="25"/></decl_stmt>

		<expr_stmt><expr><name><name pos:line="17" pos:column="17">refs<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">packed<pos:position pos:line="17" pos:column="29"/></name></name> <operator pos:line="17" pos:column="30">=<pos:position pos:line="17" pos:column="31"/></operator> <call><name pos:line="17" pos:column="32">xcalloc<pos:position pos:line="17" pos:column="39"/></name><argument_list pos:line="17" pos:column="39">(<argument><expr><literal type="number" pos:line="17" pos:column="40">1<pos:position pos:line="17" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="43">sizeof<argument_list pos:line="17" pos:column="49">(<argument><expr><operator pos:line="17" pos:column="50">*<pos:position pos:line="17" pos:column="51"/></operator><name><name pos:line="17" pos:column="51">refs<pos:position pos:line="17" pos:column="55"/></name><operator pos:line="17" pos:column="55">-&gt;<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="57">packed<pos:position pos:line="17" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">acquire_packed_ref_cache<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">(<argument><expr><name><name pos:line="18" pos:column="42">refs<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">-&gt;<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="48">packed<pos:position pos:line="18" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">refs<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">packed<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">root<pos:position pos:line="19" pos:column="35"/></name></name> <operator pos:line="19" pos:column="36">=<pos:position pos:line="19" pos:column="37"/></operator> <call><name pos:line="19" pos:column="38">create_dir_entry<pos:position pos:line="19" pos:column="54"/></name><argument_list pos:line="19" pos:column="54">(<argument><expr><name pos:line="19" pos:column="55">refs<pos:position pos:line="19" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="61">""<pos:position pos:line="19" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="65">0<pos:position pos:line="19" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="68">0<pos:position pos:line="19" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">f<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <call><name pos:line="20" pos:column="21">fopen<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">packed_refs_file<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="45">"r"<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">f<pos:position pos:line="21" pos:column="22"/></name></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23"> <block pos:line="21" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">stat_validity_update<pos:position pos:line="22" pos:column="45"/></name><argument_list pos:line="22" pos:column="45">(<argument><expr><operator pos:line="22" pos:column="46">&amp;<pos:position pos:line="22" pos:column="51"/></operator><name><name pos:line="22" pos:column="47">refs<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">-&gt;<pos:position pos:line="22" pos:column="56"/></operator><name pos:line="22" pos:column="53">packed<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">-&gt;<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="61">validity<pos:position pos:line="22" pos:column="69"/></name></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="71">fileno<pos:position pos:line="22" pos:column="77"/></name><argument_list pos:line="22" pos:column="77">(<argument><expr><name pos:line="22" pos:column="78">f<pos:position pos:line="22" pos:column="79"/></name></expr></argument>)<pos:position pos:line="22" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="82"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">read_packed_refs<pos:position pos:line="23" pos:column="41"/></name><argument_list pos:line="23" pos:column="41">(<argument><expr><name pos:line="23" pos:column="42">f<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="45">get_ref_dir<pos:position pos:line="23" pos:column="56"/></name><argument_list pos:line="23" pos:column="56">(<argument><expr><name><name pos:line="23" pos:column="57">refs<pos:position pos:line="23" pos:column="61"/></name><operator pos:line="23" pos:column="61">-&gt;<pos:position pos:line="23" pos:column="66"/></operator><name pos:line="23" pos:column="63">packed<pos:position pos:line="23" pos:column="69"/></name><operator pos:line="23" pos:column="69">-&gt;<pos:position pos:line="23" pos:column="74"/></operator><name pos:line="23" pos:column="71">root<pos:position pos:line="23" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">fclose<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">f<pos:position pos:line="24" pos:column="33"/></name></expr></argument>)<pos:position pos:line="24" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>
	<return pos:line="27" pos:column="9">return <expr><name><name pos:line="27" pos:column="16">refs<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">packed<pos:position pos:line="27" pos:column="28"/></name></name></expr>;<pos:position pos:line="27" pos:column="29"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

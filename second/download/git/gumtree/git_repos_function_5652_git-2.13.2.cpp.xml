<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5652_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">option_parse_recurse_submodules<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">option<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">opt<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
				   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">arg<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">unset<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">unset<pos:position pos:line="4" pos:column="18"/></name></expr>)<pos:position pos:line="4" pos:column="19"/></condition><then pos:line="4" pos:column="19"> <block pos:line="4" pos:column="20">{
		<expr_stmt><expr><name pos:line="5" pos:column="17">recurse_submodules<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">=<pos:position pos:line="5" pos:column="37"/></operator> <name pos:line="5" pos:column="38">RECURSE_SUBMODULES_OFF<pos:position pos:line="5" pos:column="60"/></name></expr>;<pos:position pos:line="5" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="6" pos:column="10"/></block></then> <else pos:line="6" pos:column="11">else <block pos:line="6" pos:column="16">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">arg<pos:position pos:line="7" pos:column="24"/></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="25">recurse_submodules<pos:position pos:line="8" pos:column="43"/></name> <operator pos:line="8" pos:column="44">=<pos:position pos:line="8" pos:column="45"/></operator> <call><name pos:line="8" pos:column="46">parse_fetch_recurse_submodules_arg<pos:position pos:line="8" pos:column="80"/></name><argument_list pos:line="8" pos:column="80">(<argument><expr><name><name pos:line="8" pos:column="81">opt<pos:position pos:line="8" pos:column="84"/></name><operator pos:line="8" pos:column="84">-&gt;<pos:position pos:line="8" pos:column="89"/></operator><name pos:line="8" pos:column="86">long_name<pos:position pos:line="8" pos:column="95"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="97">arg<pos:position pos:line="8" pos:column="100"/></name></expr></argument>)<pos:position pos:line="8" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="102"/></expr_stmt></block></then>
		<else pos:line="9" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="25">recurse_submodules<pos:position pos:line="10" pos:column="43"/></name> <operator pos:line="10" pos:column="44">=<pos:position pos:line="10" pos:column="45"/></operator> <name pos:line="10" pos:column="46">RECURSE_SUBMODULES_ON<pos:position pos:line="10" pos:column="67"/></name></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt></block></else></if>
	}<pos:position pos:line="11" pos:column="10"/></block></else></if>
	<return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6114_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ensure_socket_initialization<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">void<pos:position pos:line="1" pos:column="46"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">WSADATA<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">wsa<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">int<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">initialized<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><literal type="number" pos:line="4" pos:column="34">0<pos:position pos:line="4" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name><name pos:line="5" pos:column="21">libraries<pos:position pos:line="5" pos:column="30"/></name><index pos:line="5" pos:column="30">[]<pos:position pos:line="5" pos:column="32"/></index></name> <init pos:line="5" pos:column="33">= <expr><block pos:line="5" pos:column="35">{ <expr><literal type="string" pos:line="5" pos:column="37">"ws2_32.dll"<pos:position pos:line="5" pos:column="49"/></literal></expr>, <expr><literal type="string" pos:line="5" pos:column="51">"wship6.dll"<pos:position pos:line="5" pos:column="63"/></literal></expr>, <expr><name pos:line="5" pos:column="65">NULL<pos:position pos:line="5" pos:column="69"/></name></expr> }<pos:position pos:line="5" pos:column="71"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="72"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier><modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">name<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">initialized<pos:position pos:line="8" pos:column="24"/></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25">
		<block type="pseudo"><return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">WSAStartup<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><call><name pos:line="11" pos:column="24">MAKEWORD<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><literal type="number" pos:line="11" pos:column="33">2<pos:position pos:line="11" pos:column="34"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="11" pos:column="35">2<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="11" pos:column="39">&amp;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="40">wsa<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="45"/></condition><then pos:line="11" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><literal type="string" pos:line="12" pos:column="21">"unable to initialize winsock subsystem, error %d"<pos:position pos:line="12" pos:column="71"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="13" pos:column="25">WSAGetLastError<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">()<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt></block></then></if>

	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">name<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="21">libraries<pos:position pos:line="15" pos:column="30"/></name></expr>;<pos:position pos:line="15" pos:column="31"/></init> <condition><expr><operator pos:line="15" pos:column="32">*<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">name<pos:position pos:line="15" pos:column="37"/></name></expr>;<pos:position pos:line="15" pos:column="38"/></condition> <incr><expr><name pos:line="15" pos:column="39">name<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">++<pos:position pos:line="15" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="46"/></control> <block pos:line="15" pos:column="47">{
		<expr_stmt><expr><name pos:line="16" pos:column="17">ipv6_dll<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">=<pos:position pos:line="16" pos:column="27"/></operator> <call><name pos:line="16" pos:column="28">LoadLibrary<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><operator pos:line="16" pos:column="40">*<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="41">name<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">ipv6_dll<pos:position pos:line="17" pos:column="30"/></name></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31">
			<block type="pseudo"><continue pos:line="18" pos:column="25">continue;<pos:position pos:line="18" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="20" pos:column="17">ipv6_freeaddrinfo<pos:position pos:line="20" pos:column="34"/></name> <operator pos:line="20" pos:column="35">=<pos:position pos:line="20" pos:column="36"/></operator> <operator pos:line="20" pos:column="37">(<pos:position pos:line="20" pos:column="38"/></operator><call><call><name pos:line="20" pos:column="38">void<pos:position pos:line="20" pos:column="42"/></name> <argument_list pos:line="20" pos:column="43">(<argument><expr><name pos:line="20" pos:column="44">WSAAPI<pos:position pos:line="20" pos:column="50"/></name> <operator pos:line="20" pos:column="51">*<pos:position pos:line="20" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call><argument_list pos:line="20" pos:column="53">(<argument><expr pos:line="20" pos:column="54">struct <name pos:line="20" pos:column="61">addrinfo<pos:position pos:line="20" pos:column="69"/></name> <operator pos:line="20" pos:column="70">*<pos:position pos:line="20" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="72"/></argument_list></call><operator pos:line="20" pos:column="72">)<pos:position pos:line="20" pos:column="73"/></operator>
			<call><name pos:line="21" pos:column="25">GetProcAddress<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><name pos:line="21" pos:column="40">ipv6_dll<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="50">"freeaddrinfo"<pos:position pos:line="21" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">ipv6_getaddrinfo<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">=<pos:position pos:line="22" pos:column="35"/></operator> <operator pos:line="22" pos:column="36">(<pos:position pos:line="22" pos:column="37"/></operator><call><call><name pos:line="22" pos:column="37">int<pos:position pos:line="22" pos:column="40"/></name> <argument_list pos:line="22" pos:column="41">(<argument><expr><name pos:line="22" pos:column="42">WSAAPI<pos:position pos:line="22" pos:column="48"/></name> <operator pos:line="22" pos:column="49">*<pos:position pos:line="22" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call><argument_list pos:line="22" pos:column="51">(<argument><expr><specifier pos:line="22" pos:column="52">const<pos:position pos:line="22" pos:column="57"/></specifier> <name pos:line="22" pos:column="58">char<pos:position pos:line="22" pos:column="62"/></name> <operator pos:line="22" pos:column="63">*<pos:position pos:line="22" pos:column="64"/></operator></expr></argument>, <argument><expr><specifier pos:line="22" pos:column="66">const<pos:position pos:line="22" pos:column="71"/></specifier> <name pos:line="22" pos:column="72">char<pos:position pos:line="22" pos:column="76"/></name> <operator pos:line="22" pos:column="77">*<pos:position pos:line="22" pos:column="78"/></operator></expr></argument>,
						   <argument><expr><specifier pos:line="23" pos:column="52">const<pos:position pos:line="23" pos:column="57"/></specifier> struct <name pos:line="23" pos:column="65">addrinfo<pos:position pos:line="23" pos:column="73"/></name> <operator pos:line="23" pos:column="74">*<pos:position pos:line="23" pos:column="75"/></operator></expr></argument>,
						   <argument><expr pos:line="24" pos:column="52">struct <name pos:line="24" pos:column="59">addrinfo<pos:position pos:line="24" pos:column="67"/></name> <operator pos:line="24" pos:column="68">*<pos:position pos:line="24" pos:column="69"/></operator><operator pos:line="24" pos:column="69">*<pos:position pos:line="24" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call><operator pos:line="24" pos:column="71">)<pos:position pos:line="24" pos:column="72"/></operator>
			<call><name pos:line="25" pos:column="25">GetProcAddress<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><name pos:line="25" pos:column="40">ipv6_dll<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="50">"getaddrinfo"<pos:position pos:line="25" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">ipv6_getnameinfo<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">=<pos:position pos:line="26" pos:column="35"/></operator> <operator pos:line="26" pos:column="36">(<pos:position pos:line="26" pos:column="37"/></operator><call><call><name pos:line="26" pos:column="37">int<pos:position pos:line="26" pos:column="40"/></name> <argument_list pos:line="26" pos:column="41">(<argument><expr><name pos:line="26" pos:column="42">WSAAPI<pos:position pos:line="26" pos:column="48"/></name> <operator pos:line="26" pos:column="49">*<pos:position pos:line="26" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call><argument_list pos:line="26" pos:column="51">(<argument><expr><specifier pos:line="26" pos:column="52">const<pos:position pos:line="26" pos:column="57"/></specifier> struct <name pos:line="26" pos:column="65">sockaddr<pos:position pos:line="26" pos:column="73"/></name> <operator pos:line="26" pos:column="74">*<pos:position pos:line="26" pos:column="75"/></operator></expr></argument>,
						   <argument><expr><name pos:line="27" pos:column="52">socklen_t<pos:position pos:line="27" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="63">char<pos:position pos:line="27" pos:column="67"/></name> <operator pos:line="27" pos:column="68">*<pos:position pos:line="27" pos:column="69"/></operator></expr></argument>, <argument><expr><name pos:line="27" pos:column="71">DWORD<pos:position pos:line="27" pos:column="76"/></name></expr></argument>,
						   <argument><expr><name pos:line="28" pos:column="52">char<pos:position pos:line="28" pos:column="56"/></name> <operator pos:line="28" pos:column="57">*<pos:position pos:line="28" pos:column="58"/></operator></expr></argument>, <argument><expr><name pos:line="28" pos:column="60">DWORD<pos:position pos:line="28" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="67">int<pos:position pos:line="28" pos:column="70"/></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call><operator pos:line="28" pos:column="71">)<pos:position pos:line="28" pos:column="72"/></operator>
			<call><name pos:line="29" pos:column="25">GetProcAddress<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">(<argument><expr><name pos:line="29" pos:column="40">ipv6_dll<pos:position pos:line="29" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="50">"getnameinfo"<pos:position pos:line="29" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">ipv6_freeaddrinfo<pos:position pos:line="30" pos:column="39"/></name> <operator pos:line="30" pos:column="40">||<pos:position pos:line="30" pos:column="42"/></operator> <operator pos:line="30" pos:column="43">!<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="44">ipv6_getaddrinfo<pos:position pos:line="30" pos:column="60"/></name> <operator pos:line="30" pos:column="61">||<pos:position pos:line="30" pos:column="63"/></operator> <operator pos:line="30" pos:column="64">!<pos:position pos:line="30" pos:column="65"/></operator><name pos:line="30" pos:column="65">ipv6_getnameinfo<pos:position pos:line="30" pos:column="81"/></name></expr>)<pos:position pos:line="30" pos:column="82"/></condition><then pos:line="30" pos:column="82"> <block pos:line="30" pos:column="83">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">FreeLibrary<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name pos:line="31" pos:column="37">ipv6_dll<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="32" pos:column="25">ipv6_dll<pos:position pos:line="32" pos:column="33"/></name> <operator pos:line="32" pos:column="34">=<pos:position pos:line="32" pos:column="35"/></operator> <name pos:line="32" pos:column="36">NULL<pos:position pos:line="32" pos:column="40"/></name></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then> <else pos:line="33" pos:column="19">else
			<block type="pseudo"><break pos:line="34" pos:column="25">break;<pos:position pos:line="34" pos:column="31"/></break></block></else></if>
	}<pos:position pos:line="35" pos:column="10"/></block></for>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">ipv6_freeaddrinfo<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">||<pos:position pos:line="36" pos:column="34"/></operator> <operator pos:line="36" pos:column="35">!<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="36">ipv6_getaddrinfo<pos:position pos:line="36" pos:column="52"/></name> <operator pos:line="36" pos:column="53">||<pos:position pos:line="36" pos:column="55"/></operator> <operator pos:line="36" pos:column="56">!<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="57">ipv6_getnameinfo<pos:position pos:line="36" pos:column="73"/></name></expr>)<pos:position pos:line="36" pos:column="74"/></condition><then pos:line="36" pos:column="74"> <block pos:line="36" pos:column="75">{
		<expr_stmt><expr><name pos:line="37" pos:column="17">ipv6_freeaddrinfo<pos:position pos:line="37" pos:column="34"/></name> <operator pos:line="37" pos:column="35">=<pos:position pos:line="37" pos:column="36"/></operator> <name pos:line="37" pos:column="37">freeaddrinfo_stub<pos:position pos:line="37" pos:column="54"/></name></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">ipv6_getaddrinfo<pos:position pos:line="38" pos:column="33"/></name> <operator pos:line="38" pos:column="34">=<pos:position pos:line="38" pos:column="35"/></operator> <name pos:line="38" pos:column="36">getaddrinfo_stub<pos:position pos:line="38" pos:column="52"/></name></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">ipv6_getnameinfo<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">=<pos:position pos:line="39" pos:column="35"/></operator> <name pos:line="39" pos:column="36">getnameinfo_stub<pos:position pos:line="39" pos:column="52"/></name></expr>;<pos:position pos:line="39" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="42" pos:column="9">atexit<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">socket_cleanup<pos:position pos:line="42" pos:column="30"/></name></expr></argument>)<pos:position pos:line="42" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="43" pos:column="9">initialized<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <literal type="number" pos:line="43" pos:column="23">1<pos:position pos:line="43" pos:column="24"/></literal></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

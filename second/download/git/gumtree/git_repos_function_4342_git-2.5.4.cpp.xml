<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4342_git-2.5.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">ref_sort<pos:position pos:line="1" pos:column="23"/></name></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">default_sort<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">void<pos:position pos:line="1" pos:column="42"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> <name pos:line="3" pos:column="22">char<pos:position pos:line="3" pos:column="26"/></name></type> <name><name pos:line="3" pos:column="27">cstr_name<pos:position pos:line="3" pos:column="36"/></name><index pos:line="3" pos:column="36">[]<pos:position pos:line="3" pos:column="38"/></index></name> <init pos:line="3" pos:column="39">= <expr><literal type="string" pos:line="3" pos:column="41">"refname"<pos:position pos:line="3" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ref_sort<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">sort<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><call><name pos:line="5" pos:column="33">xcalloc<pos:position pos:line="5" pos:column="40"/></name><argument_list pos:line="5" pos:column="40">(<argument><expr><literal type="number" pos:line="5" pos:column="41">1<pos:position pos:line="5" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="44">sizeof<argument_list pos:line="5" pos:column="50">(<argument><expr><operator pos:line="5" pos:column="51">*<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="52">sort<pos:position pos:line="5" pos:column="56"/></name></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="7" pos:column="9">sort<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">next<pos:position pos:line="7" pos:column="19"/></name></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">sort<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">atom<pos:position pos:line="8" pos:column="19"/></name></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <call><name pos:line="8" pos:column="22">parse_atom<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">cstr_name<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">cstr_name<pos:position pos:line="8" pos:column="53"/></name> <operator pos:line="8" pos:column="54">+<pos:position pos:line="8" pos:column="55"/></operator> <call><name pos:line="8" pos:column="56">strlen<pos:position pos:line="8" pos:column="62"/></name><argument_list pos:line="8" pos:column="62">(<argument><expr><name pos:line="8" pos:column="63">cstr_name<pos:position pos:line="8" pos:column="72"/></name></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="75"/></expr_stmt>
	<return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">sort<pos:position pos:line="9" pos:column="20"/></name></expr>;<pos:position pos:line="9" pos:column="21"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

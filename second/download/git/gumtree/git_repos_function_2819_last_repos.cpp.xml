<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2819_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">add_reflog_for_walk<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">reflog_walk_info<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">info<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">commit<pos:position pos:line="2" pos:column="30"/></name></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">commit<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">name<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">timestamp_t<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">timestamp<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><literal type="number" pos:line="4" pos:column="33">0<pos:position pos:line="4" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">recno<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><operator pos:line="5" pos:column="21">-<pos:position pos:line="5" pos:column="22"/></operator><literal type="number" pos:line="5" pos:column="22">1<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">string_list_item<pos:position pos:line="6" pos:column="32"/></name></name> <modifier pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></modifier></type><name pos:line="6" pos:column="34">item<pos:position pos:line="6" pos:column="38"/></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">complete_reflogs<pos:position pos:line="7" pos:column="32"/></name></name> <modifier pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></modifier></type><name pos:line="7" pos:column="34">reflogs<pos:position pos:line="7" pos:column="41"/></name></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">branch<pos:position pos:line="8" pos:column="21"/></name></decl>, <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="24">at<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><call><name pos:line="8" pos:column="29">strchr<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">name<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="42">'@'<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">commit_reflog<pos:position pos:line="9" pos:column="29"/></name></name> <modifier pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></modifier></type><name pos:line="9" pos:column="31">commit_reflog<pos:position pos:line="9" pos:column="44"/></name></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">enum<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">selector_type<pos:position pos:line="10" pos:column="27"/></name></name></type> <name pos:line="10" pos:column="28">selector<pos:position pos:line="10" pos:column="36"/></name> <init pos:line="10" pos:column="37">= <expr><name pos:line="10" pos:column="39">SELECTOR_NONE<pos:position pos:line="10" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="53"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">commit<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">object<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">.<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">flags<pos:position pos:line="12" pos:column="33"/></name></name> <operator pos:line="12" pos:column="34">&amp;<pos:position pos:line="12" pos:column="39"/></operator> <name pos:line="12" pos:column="36">UNINTERESTING<pos:position pos:line="12" pos:column="49"/></name></expr>)<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">die<pos:position pos:line="13" pos:column="20"/></name> <argument_list pos:line="13" pos:column="21">(<argument><expr><literal type="string" pos:line="13" pos:column="22">"Cannot walk reflogs for %s"<pos:position pos:line="13" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="52">name<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="15" pos:column="9">branch<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">xstrdup<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">name<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">at<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">&amp;&amp;<pos:position pos:line="16" pos:column="26"/></operator> <name><name pos:line="16" pos:column="19">at<pos:position pos:line="16" pos:column="21"/></name><index pos:line="16" pos:column="21">[<expr><literal type="number" pos:line="16" pos:column="22">1<pos:position pos:line="16" pos:column="23"/></literal></expr>]<pos:position pos:line="16" pos:column="24"/></index></name> <operator pos:line="16" pos:column="25">==<pos:position pos:line="16" pos:column="27"/></operator> <literal type="char" pos:line="16" pos:column="28">'{'<pos:position pos:line="16" pos:column="31"/></literal></expr>)<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32"> <block pos:line="16" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">char<pos:position pos:line="17" pos:column="21"/></name> <modifier pos:line="17" pos:column="22">*<pos:position pos:line="17" pos:column="23"/></modifier></type><name pos:line="17" pos:column="23">ep<pos:position pos:line="17" pos:column="25"/></name></decl>;<pos:position pos:line="17" pos:column="26"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">branch<pos:position pos:line="18" pos:column="23"/></name><index pos:line="18" pos:column="23">[<expr><name pos:line="18" pos:column="24">at<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">-<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">name<pos:position pos:line="18" pos:column="33"/></name></expr>]<pos:position pos:line="18" pos:column="34"/></index></name> <operator pos:line="18" pos:column="35">=<pos:position pos:line="18" pos:column="36"/></operator> <literal type="char" pos:line="18" pos:column="37">'\0'<pos:position pos:line="18" pos:column="41"/></literal></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">recno<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <call><name pos:line="19" pos:column="25">strtoul<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">at<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">+<pos:position pos:line="19" pos:column="37"/></operator> <literal type="number" pos:line="19" pos:column="38">2<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="41">&amp;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="42">ep<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="46">10<pos:position pos:line="19" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">*<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">ep<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">!=<pos:position pos:line="20" pos:column="27"/></operator> <literal type="char" pos:line="20" pos:column="28">'}'<pos:position pos:line="20" pos:column="31"/></literal></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32"> <block pos:line="20" pos:column="33">{
			<expr_stmt><expr><name pos:line="21" pos:column="25">recno<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <operator pos:line="21" pos:column="33">-<pos:position pos:line="21" pos:column="34"/></operator><literal type="number" pos:line="21" pos:column="34">1<pos:position pos:line="21" pos:column="35"/></literal></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">timestamp<pos:position pos:line="22" pos:column="34"/></name> <operator pos:line="22" pos:column="35">=<pos:position pos:line="22" pos:column="36"/></operator> <call><name pos:line="22" pos:column="37">approxidate<pos:position pos:line="22" pos:column="48"/></name><argument_list pos:line="22" pos:column="48">(<argument><expr><name pos:line="22" pos:column="49">at<pos:position pos:line="22" pos:column="51"/></name> <operator pos:line="22" pos:column="52">+<pos:position pos:line="22" pos:column="53"/></operator> <literal type="number" pos:line="22" pos:column="54">2<pos:position pos:line="22" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name pos:line="23" pos:column="25">selector<pos:position pos:line="23" pos:column="33"/></name> <operator pos:line="23" pos:column="34">=<pos:position pos:line="23" pos:column="35"/></operator> <name pos:line="23" pos:column="36">SELECTOR_DATE<pos:position pos:line="23" pos:column="49"/></name></expr>;<pos:position pos:line="23" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then>
		<else pos:line="25" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="25">selector<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">=<pos:position pos:line="26" pos:column="35"/></operator> <name pos:line="26" pos:column="36">SELECTOR_INDEX<pos:position pos:line="26" pos:column="50"/></name></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt></block></else></if>
	}<pos:position pos:line="27" pos:column="10"/></block></then> <else pos:line="27" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="17">recno<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <literal type="number" pos:line="28" pos:column="25">0<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="30" pos:column="9">item<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">string_list_lookup<pos:position pos:line="30" pos:column="34"/></name><argument_list pos:line="30" pos:column="34">(<argument><expr><operator pos:line="30" pos:column="35">&amp;<pos:position pos:line="30" pos:column="40"/></operator><name><name pos:line="30" pos:column="36">info<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">complete_reflogs<pos:position pos:line="30" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="60">branch<pos:position pos:line="30" pos:column="66"/></name></expr></argument>)<pos:position pos:line="30" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="68"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">item<pos:position pos:line="31" pos:column="17"/></name></expr>)<pos:position pos:line="31" pos:column="18"/></condition><then pos:line="31" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="17">reflogs<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">=<pos:position pos:line="32" pos:column="26"/></operator> <name><name pos:line="32" pos:column="27">item<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">-&gt;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="33">util<pos:position pos:line="32" pos:column="37"/></name></name></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt></block></then>
	<else pos:line="33" pos:column="9">else <block pos:line="33" pos:column="14">{
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><operator pos:line="34" pos:column="21">*<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">branch<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">==<pos:position pos:line="34" pos:column="31"/></operator> <literal type="char" pos:line="34" pos:column="32">'\0'<pos:position pos:line="34" pos:column="36"/></literal></expr>)<pos:position pos:line="34" pos:column="37"/></condition><then pos:line="34" pos:column="37"> <block pos:line="34" pos:column="38">{
			<decl_stmt><decl><type><name><name pos:line="35" pos:column="25">struct<pos:position pos:line="35" pos:column="31"/></name> <name pos:line="35" pos:column="32">object_id<pos:position pos:line="35" pos:column="41"/></name></name></type> <name pos:line="35" pos:column="42">oid<pos:position pos:line="35" pos:column="45"/></name></decl>;<pos:position pos:line="35" pos:column="46"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">free<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">branch<pos:position pos:line="36" pos:column="36"/></name></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><name pos:line="37" pos:column="25">branch<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <call><name pos:line="37" pos:column="34">resolve_refdup<pos:position pos:line="37" pos:column="48"/></name><argument_list pos:line="37" pos:column="48">(<argument><expr><literal type="string" pos:line="37" pos:column="49">"HEAD"<pos:position pos:line="37" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="57">0<pos:position pos:line="37" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="60">oid<pos:position pos:line="37" pos:column="63"/></name><operator pos:line="37" pos:column="63">.<pos:position pos:line="37" pos:column="64"/></operator><name pos:line="37" pos:column="64">hash<pos:position pos:line="37" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="70">NULL<pos:position pos:line="37" pos:column="74"/></name></expr></argument>)<pos:position pos:line="37" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="76"/></expr_stmt>
			<if pos:line="38" pos:column="25">if <condition pos:line="38" pos:column="28">(<expr><operator pos:line="38" pos:column="29">!<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="30">branch<pos:position pos:line="38" pos:column="36"/></name></expr>)<pos:position pos:line="38" pos:column="37"/></condition><then pos:line="38" pos:column="37">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="33">die<pos:position pos:line="39" pos:column="36"/></name> <argument_list pos:line="39" pos:column="37">(<argument><expr><literal type="string" pos:line="39" pos:column="38">"No current branch"<pos:position pos:line="39" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="59"/></expr_stmt></block></then></if>

		}<pos:position pos:line="41" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="42" pos:column="17">reflogs<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <call><name pos:line="42" pos:column="27">read_complete_reflog<pos:position pos:line="42" pos:column="47"/></name><argument_list pos:line="42" pos:column="47">(<argument><expr><name pos:line="42" pos:column="48">branch<pos:position pos:line="42" pos:column="54"/></name></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="56"/></expr_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">!<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">reflogs<pos:position pos:line="43" pos:column="29"/></name> <operator pos:line="43" pos:column="30">||<pos:position pos:line="43" pos:column="32"/></operator> <name><name pos:line="43" pos:column="33">reflogs<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">-&gt;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="42">nr<pos:position pos:line="43" pos:column="44"/></name></name> <operator pos:line="43" pos:column="45">==<pos:position pos:line="43" pos:column="47"/></operator> <literal type="number" pos:line="43" pos:column="48">0<pos:position pos:line="43" pos:column="49"/></literal></expr>)<pos:position pos:line="43" pos:column="50"/></condition><then pos:line="43" pos:column="50"> <block pos:line="43" pos:column="51">{
			<decl_stmt><decl><type><name><name pos:line="44" pos:column="25">struct<pos:position pos:line="44" pos:column="31"/></name> <name pos:line="44" pos:column="32">object_id<pos:position pos:line="44" pos:column="41"/></name></name></type> <name pos:line="44" pos:column="42">oid<pos:position pos:line="44" pos:column="45"/></name></decl>;<pos:position pos:line="44" pos:column="46"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="45" pos:column="25">char<pos:position pos:line="45" pos:column="29"/></name> <modifier pos:line="45" pos:column="30">*<pos:position pos:line="45" pos:column="31"/></modifier></type><name pos:line="45" pos:column="31">b<pos:position pos:line="45" pos:column="32"/></name></decl>;<pos:position pos:line="45" pos:column="33"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="46" pos:column="25">int<pos:position pos:line="46" pos:column="28"/></name></type> <name pos:line="46" pos:column="29">ret<pos:position pos:line="46" pos:column="32"/></name> <init pos:line="46" pos:column="33">= <expr><call><name pos:line="46" pos:column="35">dwim_log<pos:position pos:line="46" pos:column="43"/></name><argument_list pos:line="46" pos:column="43">(<argument><expr><name pos:line="46" pos:column="44">branch<pos:position pos:line="46" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="52">strlen<pos:position pos:line="46" pos:column="58"/></name><argument_list pos:line="46" pos:column="58">(<argument><expr><name pos:line="46" pos:column="59">branch<pos:position pos:line="46" pos:column="65"/></name></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr></argument>,
					   <argument><expr><name><name pos:line="47" pos:column="44">oid<pos:position pos:line="47" pos:column="47"/></name><operator pos:line="47" pos:column="47">.<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="48">hash<pos:position pos:line="47" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="54">&amp;<pos:position pos:line="47" pos:column="59"/></operator><name pos:line="47" pos:column="55">b<pos:position pos:line="47" pos:column="56"/></name></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="58"/></decl_stmt>
			<if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><name pos:line="48" pos:column="29">ret<pos:position pos:line="48" pos:column="32"/></name> <operator pos:line="48" pos:column="33">&gt;<pos:position pos:line="48" pos:column="37"/></operator> <literal type="number" pos:line="48" pos:column="35">1<pos:position pos:line="48" pos:column="36"/></literal></expr>)<pos:position pos:line="48" pos:column="37"/></condition><then pos:line="48" pos:column="37">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="33">free<pos:position pos:line="49" pos:column="37"/></name><argument_list pos:line="49" pos:column="37">(<argument><expr><name pos:line="49" pos:column="38">b<pos:position pos:line="49" pos:column="39"/></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt></block></then>
			<elseif pos:line="50" pos:column="25">else <if pos:line="50" pos:column="30">if <condition pos:line="50" pos:column="33">(<expr><name pos:line="50" pos:column="34">ret<pos:position pos:line="50" pos:column="37"/></name> <operator pos:line="50" pos:column="38">==<pos:position pos:line="50" pos:column="40"/></operator> <literal type="number" pos:line="50" pos:column="41">1<pos:position pos:line="50" pos:column="42"/></literal></expr>)<pos:position pos:line="50" pos:column="43"/></condition><then pos:line="50" pos:column="43"> <block pos:line="50" pos:column="44">{
				<expr_stmt><expr><call><name pos:line="51" pos:column="33">free_complete_reflog<pos:position pos:line="51" pos:column="53"/></name><argument_list pos:line="51" pos:column="53">(<argument><expr><name pos:line="51" pos:column="54">reflogs<pos:position pos:line="51" pos:column="61"/></name></expr></argument>)<pos:position pos:line="51" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="52" pos:column="33">free<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">(<argument><expr><name pos:line="52" pos:column="38">branch<pos:position pos:line="52" pos:column="44"/></name></expr></argument>)<pos:position pos:line="52" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="46"/></expr_stmt>
				<expr_stmt><expr><name pos:line="53" pos:column="33">branch<pos:position pos:line="53" pos:column="39"/></name> <operator pos:line="53" pos:column="40">=<pos:position pos:line="53" pos:column="41"/></operator> <name pos:line="53" pos:column="42">b<pos:position pos:line="53" pos:column="43"/></name></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>
				<expr_stmt><expr><name pos:line="54" pos:column="33">reflogs<pos:position pos:line="54" pos:column="40"/></name> <operator pos:line="54" pos:column="41">=<pos:position pos:line="54" pos:column="42"/></operator> <call><name pos:line="54" pos:column="43">read_complete_reflog<pos:position pos:line="54" pos:column="63"/></name><argument_list pos:line="54" pos:column="63">(<argument><expr><name pos:line="54" pos:column="64">branch<pos:position pos:line="54" pos:column="70"/></name></expr></argument>)<pos:position pos:line="54" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="72"/></expr_stmt>
			}<pos:position pos:line="55" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><operator pos:line="57" pos:column="21">!<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="22">reflogs<pos:position pos:line="57" pos:column="29"/></name> <operator pos:line="57" pos:column="30">||<pos:position pos:line="57" pos:column="32"/></operator> <name><name pos:line="57" pos:column="33">reflogs<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">-&gt;<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="42">nr<pos:position pos:line="57" pos:column="44"/></name></name> <operator pos:line="57" pos:column="45">==<pos:position pos:line="57" pos:column="47"/></operator> <literal type="number" pos:line="57" pos:column="48">0<pos:position pos:line="57" pos:column="49"/></literal></expr>)<pos:position pos:line="57" pos:column="50"/></condition><then pos:line="57" pos:column="50"> <block pos:line="57" pos:column="51">{
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">free_complete_reflog<pos:position pos:line="58" pos:column="45"/></name><argument_list pos:line="58" pos:column="45">(<argument><expr><name pos:line="58" pos:column="46">reflogs<pos:position pos:line="58" pos:column="53"/></name></expr></argument>)<pos:position pos:line="58" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">free<pos:position pos:line="59" pos:column="29"/></name><argument_list pos:line="59" pos:column="29">(<argument><expr><name pos:line="59" pos:column="30">branch<pos:position pos:line="59" pos:column="36"/></name></expr></argument>)<pos:position pos:line="59" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="38"/></expr_stmt>
			<return pos:line="60" pos:column="25">return <expr><operator pos:line="60" pos:column="32">-<pos:position pos:line="60" pos:column="33"/></operator><literal type="number" pos:line="60" pos:column="33">1<pos:position pos:line="60" pos:column="34"/></literal></expr>;<pos:position pos:line="60" pos:column="35"/></return>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">string_list_insert<pos:position pos:line="62" pos:column="35"/></name><argument_list pos:line="62" pos:column="35">(<argument><expr><operator pos:line="62" pos:column="36">&amp;<pos:position pos:line="62" pos:column="41"/></operator><name><name pos:line="62" pos:column="37">info<pos:position pos:line="62" pos:column="41"/></name><operator pos:line="62" pos:column="41">-&gt;<pos:position pos:line="62" pos:column="46"/></operator><name pos:line="62" pos:column="43">complete_reflogs<pos:position pos:line="62" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="61">branch<pos:position pos:line="62" pos:column="67"/></name></expr></argument>)<pos:position pos:line="62" pos:column="68"/></argument_list></call><operator pos:line="62" pos:column="68">-&gt;<pos:position pos:line="62" pos:column="73"/></operator><name pos:line="62" pos:column="70">util<pos:position pos:line="62" pos:column="74"/></name>
			<operator pos:line="63" pos:column="25">=<pos:position pos:line="63" pos:column="26"/></operator> <name pos:line="63" pos:column="27">reflogs<pos:position pos:line="63" pos:column="34"/></name></expr>;<pos:position pos:line="63" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="64" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">free<pos:position pos:line="65" pos:column="13"/></name><argument_list pos:line="65" pos:column="13">(<argument><expr><name pos:line="65" pos:column="14">branch<pos:position pos:line="65" pos:column="20"/></name></expr></argument>)<pos:position pos:line="65" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt>

	<expr_stmt><expr><name pos:line="67" pos:column="9">commit_reflog<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <call><name pos:line="67" pos:column="25">xcalloc<pos:position pos:line="67" pos:column="32"/></name><argument_list pos:line="67" pos:column="32">(<argument><expr><literal type="number" pos:line="67" pos:column="33">1<pos:position pos:line="67" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="36">sizeof<argument_list pos:line="67" pos:column="42">(<argument><expr pos:line="67" pos:column="43">struct <name pos:line="67" pos:column="50">commit_reflog<pos:position pos:line="67" pos:column="63"/></name></expr></argument>)<pos:position pos:line="67" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="67" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="66"/></expr_stmt>
	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">recno<pos:position pos:line="68" pos:column="18"/></name> <operator pos:line="68" pos:column="19">&lt;<pos:position pos:line="68" pos:column="23"/></operator> <literal type="number" pos:line="68" pos:column="21">0<pos:position pos:line="68" pos:column="22"/></literal></expr>)<pos:position pos:line="68" pos:column="23"/></condition><then pos:line="68" pos:column="23"> <block pos:line="68" pos:column="24">{
		<expr_stmt><expr><name><name pos:line="69" pos:column="17">commit_reflog<pos:position pos:line="69" pos:column="30"/></name><operator pos:line="69" pos:column="30">-&gt;<pos:position pos:line="69" pos:column="35"/></operator><name pos:line="69" pos:column="32">recno<pos:position pos:line="69" pos:column="37"/></name></name> <operator pos:line="69" pos:column="38">=<pos:position pos:line="69" pos:column="39"/></operator> <call><name pos:line="69" pos:column="40">get_reflog_recno_by_time<pos:position pos:line="69" pos:column="64"/></name><argument_list pos:line="69" pos:column="64">(<argument><expr><name pos:line="69" pos:column="65">reflogs<pos:position pos:line="69" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="74">timestamp<pos:position pos:line="69" pos:column="83"/></name></expr></argument>)<pos:position pos:line="69" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="85"/></expr_stmt>
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name><name pos:line="70" pos:column="21">commit_reflog<pos:position pos:line="70" pos:column="34"/></name><operator pos:line="70" pos:column="34">-&gt;<pos:position pos:line="70" pos:column="39"/></operator><name pos:line="70" pos:column="36">recno<pos:position pos:line="70" pos:column="41"/></name></name> <operator pos:line="70" pos:column="42">&lt;<pos:position pos:line="70" pos:column="46"/></operator> <literal type="number" pos:line="70" pos:column="44">0<pos:position pos:line="70" pos:column="45"/></literal></expr>)<pos:position pos:line="70" pos:column="46"/></condition><then pos:line="70" pos:column="46"> <block pos:line="70" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">free<pos:position pos:line="71" pos:column="29"/></name><argument_list pos:line="71" pos:column="29">(<argument><expr><name pos:line="71" pos:column="30">commit_reflog<pos:position pos:line="71" pos:column="43"/></name></expr></argument>)<pos:position pos:line="71" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="45"/></expr_stmt>
			<return pos:line="72" pos:column="25">return <expr><operator pos:line="72" pos:column="32">-<pos:position pos:line="72" pos:column="33"/></operator><literal type="number" pos:line="72" pos:column="33">1<pos:position pos:line="72" pos:column="34"/></literal></expr>;<pos:position pos:line="72" pos:column="35"/></return>
		}<pos:position pos:line="73" pos:column="18"/></block></then></if>
	}<pos:position pos:line="74" pos:column="10"/></block></then> <else pos:line="74" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="75" pos:column="17">commit_reflog<pos:position pos:line="75" pos:column="30"/></name><operator pos:line="75" pos:column="30">-&gt;<pos:position pos:line="75" pos:column="35"/></operator><name pos:line="75" pos:column="32">recno<pos:position pos:line="75" pos:column="37"/></name></name> <operator pos:line="75" pos:column="38">=<pos:position pos:line="75" pos:column="39"/></operator> <name><name pos:line="75" pos:column="40">reflogs<pos:position pos:line="75" pos:column="47"/></name><operator pos:line="75" pos:column="47">-&gt;<pos:position pos:line="75" pos:column="52"/></operator><name pos:line="75" pos:column="49">nr<pos:position pos:line="75" pos:column="51"/></name></name> <operator pos:line="75" pos:column="52">-<pos:position pos:line="75" pos:column="53"/></operator> <name pos:line="75" pos:column="54">recno<pos:position pos:line="75" pos:column="59"/></name> <operator pos:line="75" pos:column="60">-<pos:position pos:line="75" pos:column="61"/></operator> <literal type="number" pos:line="75" pos:column="62">1<pos:position pos:line="75" pos:column="63"/></literal></expr>;<pos:position pos:line="75" pos:column="64"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name><name pos:line="76" pos:column="9">commit_reflog<pos:position pos:line="76" pos:column="22"/></name><operator pos:line="76" pos:column="22">-&gt;<pos:position pos:line="76" pos:column="27"/></operator><name pos:line="76" pos:column="24">selector<pos:position pos:line="76" pos:column="32"/></name></name> <operator pos:line="76" pos:column="33">=<pos:position pos:line="76" pos:column="34"/></operator> <name pos:line="76" pos:column="35">selector<pos:position pos:line="76" pos:column="43"/></name></expr>;<pos:position pos:line="76" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="77" pos:column="9">commit_reflog<pos:position pos:line="77" pos:column="22"/></name><operator pos:line="77" pos:column="22">-&gt;<pos:position pos:line="77" pos:column="27"/></operator><name pos:line="77" pos:column="24">reflogs<pos:position pos:line="77" pos:column="31"/></name></name> <operator pos:line="77" pos:column="32">=<pos:position pos:line="77" pos:column="33"/></operator> <name pos:line="77" pos:column="34">reflogs<pos:position pos:line="77" pos:column="41"/></name></expr>;<pos:position pos:line="77" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="79" pos:column="9">ALLOC_GROW<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><name><name pos:line="79" pos:column="20">info<pos:position pos:line="79" pos:column="24"/></name><operator pos:line="79" pos:column="24">-&gt;<pos:position pos:line="79" pos:column="29"/></operator><name pos:line="79" pos:column="26">logs<pos:position pos:line="79" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="32">info<pos:position pos:line="79" pos:column="36"/></name><operator pos:line="79" pos:column="36">-&gt;<pos:position pos:line="79" pos:column="41"/></operator><name pos:line="79" pos:column="38">nr<pos:position pos:line="79" pos:column="40"/></name></name> <operator pos:line="79" pos:column="41">+<pos:position pos:line="79" pos:column="42"/></operator> <literal type="number" pos:line="79" pos:column="43">1<pos:position pos:line="79" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="46">info<pos:position pos:line="79" pos:column="50"/></name><operator pos:line="79" pos:column="50">-&gt;<pos:position pos:line="79" pos:column="55"/></operator><name pos:line="79" pos:column="52">alloc<pos:position pos:line="79" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="80" pos:column="9">info<pos:position pos:line="80" pos:column="13"/></name><operator pos:line="80" pos:column="13">-&gt;<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="15">logs<pos:position pos:line="80" pos:column="19"/></name><index pos:line="80" pos:column="19">[<expr><name><name pos:line="80" pos:column="20">info<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">-&gt;<pos:position pos:line="80" pos:column="29"/></operator><name pos:line="80" pos:column="26">nr<pos:position pos:line="80" pos:column="28"/></name></name><operator pos:line="80" pos:column="28">++<pos:position pos:line="80" pos:column="30"/></operator></expr>]<pos:position pos:line="80" pos:column="31"/></index></name> <operator pos:line="80" pos:column="32">=<pos:position pos:line="80" pos:column="33"/></operator> <name pos:line="80" pos:column="34">commit_reflog<pos:position pos:line="80" pos:column="47"/></name></expr>;<pos:position pos:line="80" pos:column="48"/></expr_stmt>

	<return pos:line="82" pos:column="9">return <expr><literal type="number" pos:line="82" pos:column="16">0<pos:position pos:line="82" pos:column="17"/></literal></expr>;<pos:position pos:line="82" pos:column="18"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

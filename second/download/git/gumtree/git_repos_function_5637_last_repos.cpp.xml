<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5637_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">push_to_deploy<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">unsigned<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">sha1<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
				  <parameter><decl><type><name><name pos:line="2" pos:column="35">struct<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">argv_array<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">env<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
				  <parameter><decl><type><specifier pos:line="3" pos:column="35">const<pos:position pos:line="3" pos:column="40"/></specifier> <name pos:line="3" pos:column="41">char<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">work_tree<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name><name pos:line="5" pos:column="21">update_refresh<pos:position pos:line="5" pos:column="35"/></name><index pos:line="5" pos:column="35">[]<pos:position pos:line="5" pos:column="37"/></index></name> <init pos:line="5" pos:column="38">= <expr><block pos:line="5" pos:column="40">{
		<expr><literal type="string" pos:line="6" pos:column="17">"update-index"<pos:position pos:line="6" pos:column="31"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="33">"-q"<pos:position pos:line="6" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="39">"--ignore-submodules"<pos:position pos:line="6" pos:column="60"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="62">"--refresh"<pos:position pos:line="6" pos:column="73"/></literal></expr>, <expr><name pos:line="6" pos:column="75">NULL<pos:position pos:line="6" pos:column="79"/></name></expr>
	}<pos:position pos:line="7" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name><name pos:line="8" pos:column="21">diff_files<pos:position pos:line="8" pos:column="31"/></name><index pos:line="8" pos:column="31">[]<pos:position pos:line="8" pos:column="33"/></index></name> <init pos:line="8" pos:column="34">= <expr><block pos:line="8" pos:column="36">{
		<expr><literal type="string" pos:line="9" pos:column="17">"diff-files"<pos:position pos:line="9" pos:column="29"/></literal></expr>, <expr><literal type="string" pos:line="9" pos:column="31">"--quiet"<pos:position pos:line="9" pos:column="40"/></literal></expr>, <expr><literal type="string" pos:line="9" pos:column="42">"--ignore-submodules"<pos:position pos:line="9" pos:column="63"/></literal></expr>, <expr><literal type="string" pos:line="9" pos:column="65">"--"<pos:position pos:line="9" pos:column="69"/></literal></expr>, <expr><name pos:line="9" pos:column="71">NULL<pos:position pos:line="9" pos:column="75"/></name></expr>
	}<pos:position pos:line="10" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="10" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name><name pos:line="11" pos:column="21">diff_index<pos:position pos:line="11" pos:column="31"/></name><index pos:line="11" pos:column="31">[]<pos:position pos:line="11" pos:column="33"/></index></name> <init pos:line="11" pos:column="34">= <expr><block pos:line="11" pos:column="36">{
		<expr><literal type="string" pos:line="12" pos:column="17">"diff-index"<pos:position pos:line="12" pos:column="29"/></literal></expr>, <expr><literal type="string" pos:line="12" pos:column="31">"--quiet"<pos:position pos:line="12" pos:column="40"/></literal></expr>, <expr><literal type="string" pos:line="12" pos:column="42">"--cached"<pos:position pos:line="12" pos:column="52"/></literal></expr>, <expr><literal type="string" pos:line="12" pos:column="54">"--ignore-submodules"<pos:position pos:line="12" pos:column="75"/></literal></expr>,
		<expr><name pos:line="13" pos:column="17">NULL<pos:position pos:line="13" pos:column="21"/></name></expr>, <expr><literal type="string" pos:line="13" pos:column="23">"--"<pos:position pos:line="13" pos:column="27"/></literal></expr>, <expr><name pos:line="13" pos:column="29">NULL<pos:position pos:line="13" pos:column="33"/></name></expr>
	}<pos:position pos:line="14" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="14" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="15" pos:column="9">const<pos:position pos:line="15" pos:column="14"/></specifier> <name pos:line="15" pos:column="15">char<pos:position pos:line="15" pos:column="19"/></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name><name pos:line="15" pos:column="21">read_tree<pos:position pos:line="15" pos:column="30"/></name><index pos:line="15" pos:column="30">[]<pos:position pos:line="15" pos:column="32"/></index></name> <init pos:line="15" pos:column="33">= <expr><block pos:line="15" pos:column="35">{
		<expr><literal type="string" pos:line="16" pos:column="17">"read-tree"<pos:position pos:line="16" pos:column="28"/></literal></expr>, <expr><literal type="string" pos:line="16" pos:column="30">"-u"<pos:position pos:line="16" pos:column="34"/></literal></expr>, <expr><literal type="string" pos:line="16" pos:column="36">"-m"<pos:position pos:line="16" pos:column="40"/></literal></expr>, <expr><name pos:line="16" pos:column="42">NULL<pos:position pos:line="16" pos:column="46"/></name></expr>, <expr><name pos:line="16" pos:column="48">NULL<pos:position pos:line="16" pos:column="52"/></name></expr>
	}<pos:position pos:line="17" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="17" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="18" pos:column="9">struct<pos:position pos:line="18" pos:column="15"/></name> <name pos:line="18" pos:column="16">child_process<pos:position pos:line="18" pos:column="29"/></name></name></type> <name pos:line="18" pos:column="30">child<pos:position pos:line="18" pos:column="35"/></name> <init pos:line="18" pos:column="36">= <expr><name pos:line="18" pos:column="38">CHILD_PROCESS_INIT<pos:position pos:line="18" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="57"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="20" pos:column="9">child<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">.<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">argv<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">update_refresh<pos:position pos:line="20" pos:column="36"/></name></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">child<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">.<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">env<pos:position pos:line="21" pos:column="18"/></name></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <name><name pos:line="21" pos:column="21">env<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">-&gt;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="26">argv<pos:position pos:line="21" pos:column="30"/></name></name></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">child<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">.<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">dir<pos:position pos:line="22" pos:column="18"/></name></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">work_tree<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">child<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">.<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">no_stdin<pos:position pos:line="23" pos:column="23"/></name></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <literal type="number" pos:line="23" pos:column="26">1<pos:position pos:line="23" pos:column="27"/></literal></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">child<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">.<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">stdout_to_stderr<pos:position pos:line="24" pos:column="31"/></name></name> <operator pos:line="24" pos:column="32">=<pos:position pos:line="24" pos:column="33"/></operator> <literal type="number" pos:line="24" pos:column="34">1<pos:position pos:line="24" pos:column="35"/></literal></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">child<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">.<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">git_cmd<pos:position pos:line="25" pos:column="22"/></name></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <literal type="number" pos:line="25" pos:column="25">1<pos:position pos:line="25" pos:column="26"/></literal></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">run_command<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><operator pos:line="26" pos:column="25">&amp;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="26">child<pos:position pos:line="26" pos:column="31"/></name></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="33"/></condition><then pos:line="26" pos:column="33">
		<block type="pseudo"><return pos:line="27" pos:column="17">return <expr><literal type="string" pos:line="27" pos:column="24">"Up-to-date check failed"<pos:position pos:line="27" pos:column="49"/></literal></expr>;<pos:position pos:line="27" pos:column="50"/></return></block></then></if>

	<comment type="block" pos:line="29" pos:column="9">/* run_command() does not clean up completely; reinitialize */</comment>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">child_process_init<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><operator pos:line="30" pos:column="28">&amp;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="29">child<pos:position pos:line="30" pos:column="34"/></name></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">child<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">.<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">argv<pos:position pos:line="31" pos:column="19"/></name></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">diff_files<pos:position pos:line="31" pos:column="32"/></name></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="32" pos:column="9">child<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">.<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">env<pos:position pos:line="32" pos:column="18"/></name></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <name><name pos:line="32" pos:column="21">env<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">argv<pos:position pos:line="32" pos:column="30"/></name></name></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="33" pos:column="9">child<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">.<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">dir<pos:position pos:line="33" pos:column="18"/></name></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <name pos:line="33" pos:column="21">work_tree<pos:position pos:line="33" pos:column="30"/></name></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">child<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">.<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">no_stdin<pos:position pos:line="34" pos:column="23"/></name></name> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <literal type="number" pos:line="34" pos:column="26">1<pos:position pos:line="34" pos:column="27"/></literal></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="35" pos:column="9">child<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">.<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">stdout_to_stderr<pos:position pos:line="35" pos:column="31"/></name></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <literal type="number" pos:line="35" pos:column="34">1<pos:position pos:line="35" pos:column="35"/></literal></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">child<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">.<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">git_cmd<pos:position pos:line="36" pos:column="22"/></name></name> <operator pos:line="36" pos:column="23">=<pos:position pos:line="36" pos:column="24"/></operator> <literal type="number" pos:line="36" pos:column="25">1<pos:position pos:line="36" pos:column="26"/></literal></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">run_command<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><operator pos:line="37" pos:column="25">&amp;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="26">child<pos:position pos:line="37" pos:column="31"/></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="33"/></condition><then pos:line="37" pos:column="33">
		<block type="pseudo"><return pos:line="38" pos:column="17">return <expr><literal type="string" pos:line="38" pos:column="24">"Working directory has unstaged changes"<pos:position pos:line="38" pos:column="64"/></literal></expr>;<pos:position pos:line="38" pos:column="65"/></return></block></then></if>

	<comment type="block" pos:line="40" pos:column="9">/* diff-index with either HEAD or an empty tree */</comment>
	<expr_stmt><expr><name><name pos:line="41" pos:column="9">diff_index<pos:position pos:line="41" pos:column="19"/></name><index pos:line="41" pos:column="19">[<expr><literal type="number" pos:line="41" pos:column="20">4<pos:position pos:line="41" pos:column="21"/></literal></expr>]<pos:position pos:line="41" pos:column="22"/></index></name> <operator pos:line="41" pos:column="23">=<pos:position pos:line="41" pos:column="24"/></operator> <ternary><condition><expr><call><name pos:line="41" pos:column="25">head_has_history<pos:position pos:line="41" pos:column="41"/></name><argument_list pos:line="41" pos:column="41">()<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr> ?<pos:position pos:line="41" pos:column="45"/></condition><then pos:line="41" pos:column="45"> <expr><literal type="string" pos:line="41" pos:column="46">"HEAD"<pos:position pos:line="41" pos:column="52"/></literal></expr> <pos:position pos:line="41" pos:column="53"/></then><else pos:line="41" pos:column="53">: <expr><name pos:line="41" pos:column="55">EMPTY_TREE_SHA1_HEX<pos:position pos:line="41" pos:column="74"/></name></expr></else></ternary></expr>;<pos:position pos:line="41" pos:column="75"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="43" pos:column="9">child_process_init<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><operator pos:line="43" pos:column="28">&amp;<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="29">child<pos:position pos:line="43" pos:column="34"/></name></expr></argument>)<pos:position pos:line="43" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">child<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">.<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">argv<pos:position pos:line="44" pos:column="19"/></name></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <name pos:line="44" pos:column="22">diff_index<pos:position pos:line="44" pos:column="32"/></name></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">child<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">.<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="15">env<pos:position pos:line="45" pos:column="18"/></name></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <name><name pos:line="45" pos:column="21">env<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">-&gt;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="26">argv<pos:position pos:line="45" pos:column="30"/></name></name></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">child<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">.<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">no_stdin<pos:position pos:line="46" pos:column="23"/></name></name> <operator pos:line="46" pos:column="24">=<pos:position pos:line="46" pos:column="25"/></operator> <literal type="number" pos:line="46" pos:column="26">1<pos:position pos:line="46" pos:column="27"/></literal></expr>;<pos:position pos:line="46" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="47" pos:column="9">child<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">.<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">no_stdout<pos:position pos:line="47" pos:column="24"/></name></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <literal type="number" pos:line="47" pos:column="27">1<pos:position pos:line="47" pos:column="28"/></literal></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="48" pos:column="9">child<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">.<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="15">stdout_to_stderr<pos:position pos:line="48" pos:column="31"/></name></name> <operator pos:line="48" pos:column="32">=<pos:position pos:line="48" pos:column="33"/></operator> <literal type="number" pos:line="48" pos:column="34">0<pos:position pos:line="48" pos:column="35"/></literal></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="49" pos:column="9">child<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">.<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="15">git_cmd<pos:position pos:line="49" pos:column="22"/></name></name> <operator pos:line="49" pos:column="23">=<pos:position pos:line="49" pos:column="24"/></operator> <literal type="number" pos:line="49" pos:column="25">1<pos:position pos:line="49" pos:column="26"/></literal></expr>;<pos:position pos:line="49" pos:column="27"/></expr_stmt>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><call><name pos:line="50" pos:column="13">run_command<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><operator pos:line="50" pos:column="25">&amp;<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="26">child<pos:position pos:line="50" pos:column="31"/></name></expr></argument>)<pos:position pos:line="50" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="33"/></condition><then pos:line="50" pos:column="33">
		<block type="pseudo"><return pos:line="51" pos:column="17">return <expr><literal type="string" pos:line="51" pos:column="24">"Working directory has staged changes"<pos:position pos:line="51" pos:column="62"/></literal></expr>;<pos:position pos:line="51" pos:column="63"/></return></block></then></if>

	<expr_stmt><expr><name><name pos:line="53" pos:column="9">read_tree<pos:position pos:line="53" pos:column="18"/></name><index pos:line="53" pos:column="18">[<expr><literal type="number" pos:line="53" pos:column="19">3<pos:position pos:line="53" pos:column="20"/></literal></expr>]<pos:position pos:line="53" pos:column="21"/></index></name> <operator pos:line="53" pos:column="22">=<pos:position pos:line="53" pos:column="23"/></operator> <call><name pos:line="53" pos:column="24">sha1_to_hex<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><name pos:line="53" pos:column="36">sha1<pos:position pos:line="53" pos:column="40"/></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">child_process_init<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><operator pos:line="54" pos:column="28">&amp;<pos:position pos:line="54" pos:column="33"/></operator><name pos:line="54" pos:column="29">child<pos:position pos:line="54" pos:column="34"/></name></expr></argument>)<pos:position pos:line="54" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="55" pos:column="9">child<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">.<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">argv<pos:position pos:line="55" pos:column="19"/></name></name> <operator pos:line="55" pos:column="20">=<pos:position pos:line="55" pos:column="21"/></operator> <name pos:line="55" pos:column="22">read_tree<pos:position pos:line="55" pos:column="31"/></name></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="56" pos:column="9">child<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">.<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="15">env<pos:position pos:line="56" pos:column="18"/></name></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <name><name pos:line="56" pos:column="21">env<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">-&gt;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="26">argv<pos:position pos:line="56" pos:column="30"/></name></name></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="57" pos:column="9">child<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">.<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="15">dir<pos:position pos:line="57" pos:column="18"/></name></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="21">work_tree<pos:position pos:line="57" pos:column="30"/></name></expr>;<pos:position pos:line="57" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="58" pos:column="9">child<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">.<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="15">no_stdin<pos:position pos:line="58" pos:column="23"/></name></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <literal type="number" pos:line="58" pos:column="26">1<pos:position pos:line="58" pos:column="27"/></literal></expr>;<pos:position pos:line="58" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="59" pos:column="9">child<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">.<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">no_stdout<pos:position pos:line="59" pos:column="24"/></name></name> <operator pos:line="59" pos:column="25">=<pos:position pos:line="59" pos:column="26"/></operator> <literal type="number" pos:line="59" pos:column="27">1<pos:position pos:line="59" pos:column="28"/></literal></expr>;<pos:position pos:line="59" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="60" pos:column="9">child<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">.<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="15">stdout_to_stderr<pos:position pos:line="60" pos:column="31"/></name></name> <operator pos:line="60" pos:column="32">=<pos:position pos:line="60" pos:column="33"/></operator> <literal type="number" pos:line="60" pos:column="34">0<pos:position pos:line="60" pos:column="35"/></literal></expr>;<pos:position pos:line="60" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="61" pos:column="9">child<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">.<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="15">git_cmd<pos:position pos:line="61" pos:column="22"/></name></name> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <literal type="number" pos:line="61" pos:column="25">1<pos:position pos:line="61" pos:column="26"/></literal></expr>;<pos:position pos:line="61" pos:column="27"/></expr_stmt>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><call><name pos:line="62" pos:column="13">run_command<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><operator pos:line="62" pos:column="25">&amp;<pos:position pos:line="62" pos:column="30"/></operator><name pos:line="62" pos:column="26">child<pos:position pos:line="62" pos:column="31"/></name></expr></argument>)<pos:position pos:line="62" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="33"/></condition><then pos:line="62" pos:column="33">
		<block type="pseudo"><return pos:line="63" pos:column="17">return <expr><literal type="string" pos:line="63" pos:column="24">"Could not update working tree to new HEAD"<pos:position pos:line="63" pos:column="67"/></literal></expr>;<pos:position pos:line="63" pos:column="68"/></return></block></then></if>

	<return pos:line="65" pos:column="9">return <expr><name pos:line="65" pos:column="16">NULL<pos:position pos:line="65" pos:column="20"/></name></expr>;<pos:position pos:line="65" pos:column="21"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4732_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">note_tree_consolidate<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">int_node<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">tree<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">int_node<pos:position pos:line="2" pos:column="24"/></name></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">parent<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">unsigned<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">index<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">i<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">void<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">p<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name pos:line="5" pos:column="19">NULL<pos:position pos:line="5" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">assert<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">tree<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">&amp;&amp;<pos:position pos:line="7" pos:column="31"/></operator> <name pos:line="7" pos:column="24">parent<pos:position pos:line="7" pos:column="30"/></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">assert<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><call><name pos:line="8" pos:column="16">CLR_PTR_TYPE<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name><name pos:line="8" pos:column="29">parent<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">a<pos:position pos:line="8" pos:column="38"/></name><index pos:line="8" pos:column="38">[<expr><name pos:line="8" pos:column="39">index<pos:position pos:line="8" pos:column="44"/></name></expr>]<pos:position pos:line="8" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call> <operator pos:line="8" pos:column="47">==<pos:position pos:line="8" pos:column="49"/></operator> <name pos:line="8" pos:column="50">tree<pos:position pos:line="8" pos:column="54"/></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></init> <condition><expr><name pos:line="10" pos:column="21">i<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">&lt;<pos:position pos:line="10" pos:column="27"/></operator> <literal type="number" pos:line="10" pos:column="25">16<pos:position pos:line="10" pos:column="27"/></literal></expr>;<pos:position pos:line="10" pos:column="28"/></condition> <incr><expr><name pos:line="10" pos:column="29">i<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">++<pos:position pos:line="10" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="33"/></control> <block pos:line="10" pos:column="34">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">GET_PTR_TYPE<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name><name pos:line="11" pos:column="34">tree<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">a<pos:position pos:line="11" pos:column="41"/></name><index pos:line="11" pos:column="41">[<expr><name pos:line="11" pos:column="42">i<pos:position pos:line="11" pos:column="43"/></name></expr>]<pos:position pos:line="11" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call> <operator pos:line="11" pos:column="46">!=<pos:position pos:line="11" pos:column="48"/></operator> <name pos:line="11" pos:column="49">PTR_TYPE_NULL<pos:position pos:line="11" pos:column="62"/></name></expr>)<pos:position pos:line="11" pos:column="63"/></condition><then pos:line="11" pos:column="63"> <block pos:line="11" pos:column="64">{
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><name pos:line="12" pos:column="29">p<pos:position pos:line="12" pos:column="30"/></name></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31"> <comment type="block" pos:line="12" pos:column="32">/* more than one entry */</comment>
				<block type="pseudo"><return pos:line="13" pos:column="33">return <expr><operator pos:line="13" pos:column="40">-<pos:position pos:line="13" pos:column="41"/></operator><literal type="number" pos:line="13" pos:column="41">2<pos:position pos:line="13" pos:column="42"/></literal></expr>;<pos:position pos:line="13" pos:column="43"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="14" pos:column="25">p<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">=<pos:position pos:line="14" pos:column="28"/></operator> <name><name pos:line="14" pos:column="29">tree<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">a<pos:position pos:line="14" pos:column="36"/></name><index pos:line="14" pos:column="36">[<expr><name pos:line="14" pos:column="37">i<pos:position pos:line="14" pos:column="38"/></name></expr>]<pos:position pos:line="14" pos:column="39"/></index></name></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
	}<pos:position pos:line="16" pos:column="10"/></block></for>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">p<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">&amp;&amp;<pos:position pos:line="18" pos:column="25"/></operator> <operator pos:line="18" pos:column="18">(<pos:position pos:line="18" pos:column="19"/></operator><call><name pos:line="18" pos:column="19">GET_PTR_TYPE<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">p<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call> <operator pos:line="18" pos:column="35">!=<pos:position pos:line="18" pos:column="37"/></operator> <name pos:line="18" pos:column="38">PTR_TYPE_NOTE<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">)<pos:position pos:line="18" pos:column="52"/></operator></expr>)<pos:position pos:line="18" pos:column="53"/></condition><then pos:line="18" pos:column="53">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">-<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">2<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></return></block></then></if>
	<comment type="block" pos:line="20" pos:column="9">/* replace tree with p in parent[index] */</comment>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">parent<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">a<pos:position pos:line="21" pos:column="18"/></name><index pos:line="21" pos:column="18">[<expr><name pos:line="21" pos:column="19">index<pos:position pos:line="21" pos:column="24"/></name></expr>]<pos:position pos:line="21" pos:column="25"/></index></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">p<pos:position pos:line="21" pos:column="29"/></name></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">free<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">tree<pos:position pos:line="22" pos:column="18"/></name></expr></argument>)<pos:position pos:line="22" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
	<return pos:line="23" pos:column="9">return <expr><literal type="number" pos:line="23" pos:column="16">0<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

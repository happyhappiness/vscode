<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7122_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name><name pos:line="1" pos:column="26">argv<pos:position pos:line="1" pos:column="30"/></name><index pos:line="1" pos:column="30">[]<pos:position pos:line="1" pos:column="32"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">usage<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">=
	    <expr><literal type="string" pos:line="4" pos:column="13">"usage: git credential-wincred &lt;get|store|erase&gt;\n"<pos:position pos:line="4" pos:column="70"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="65"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name><name pos:line="6" pos:column="14">argv<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><literal type="number" pos:line="6" pos:column="19">1<pos:position pos:line="6" pos:column="20"/></literal></expr>]<pos:position pos:line="6" pos:column="21"/></index></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">die<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">usage<pos:position pos:line="7" pos:column="26"/></name></expr></argument>)<pos:position pos:line="7" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="9" pos:column="9">/* git use binary pipes to avoid CRLF-issues */</comment>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">_setmode<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><call><name pos:line="10" pos:column="18">_fileno<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">stdin<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">_O_BINARY<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">_setmode<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><call><name pos:line="11" pos:column="18">_fileno<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">stdout<pos:position pos:line="11" pos:column="32"/></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">_O_BINARY<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">read_credential<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">()<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">load_cred_funcs<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">()<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">protocol<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">||<pos:position pos:line="17" pos:column="25"/></operator> <operator pos:line="17" pos:column="26">!<pos:position pos:line="17" pos:column="27"/></operator><operator pos:line="17" pos:column="27">(<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">host<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">||<pos:position pos:line="17" pos:column="35"/></operator> <name pos:line="17" pos:column="36">path<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">)<pos:position pos:line="17" pos:column="41"/></operator></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="20" pos:column="9">/* prepare 'target', the unique key for the credential */</comment>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">wcscpy<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">target<pos:position pos:line="21" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="24">L"git:"<pos:position pos:line="21" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">wcsncat<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">target<pos:position pos:line="22" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="25">protocol<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="35">ARRAY_SIZE<pos:position pos:line="22" pos:column="45"/></name><argument_list pos:line="22" pos:column="45">(<argument><expr><name pos:line="22" pos:column="46">target<pos:position pos:line="22" pos:column="52"/></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">wcsncat<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><name pos:line="23" pos:column="17">target<pos:position pos:line="23" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="25">L"://"<pos:position pos:line="23" pos:column="31"/></literal></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="33">ARRAY_SIZE<pos:position pos:line="23" pos:column="43"/></name><argument_list pos:line="23" pos:column="43">(<argument><expr><name pos:line="23" pos:column="44">target<pos:position pos:line="23" pos:column="50"/></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">wusername<pos:position pos:line="24" pos:column="22"/></name></expr>)<pos:position pos:line="24" pos:column="23"/></condition><then pos:line="24" pos:column="23"> <block pos:line="24" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">wcsncat<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">target<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="33">wusername<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="44">ARRAY_SIZE<pos:position pos:line="25" pos:column="54"/></name><argument_list pos:line="25" pos:column="54">(<argument><expr><name pos:line="25" pos:column="55">target<pos:position pos:line="25" pos:column="61"/></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">wcsncat<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">target<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="33">L"@"<pos:position pos:line="26" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="39">ARRAY_SIZE<pos:position pos:line="26" pos:column="49"/></name><argument_list pos:line="26" pos:column="49">(<argument><expr><name pos:line="26" pos:column="50">target<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">host<pos:position pos:line="28" pos:column="17"/></name></expr>)<pos:position pos:line="28" pos:column="18"/></condition><then pos:line="28" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">wcsncat<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">target<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">host<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="39">ARRAY_SIZE<pos:position pos:line="29" pos:column="49"/></name><argument_list pos:line="29" pos:column="49">(<argument><expr><name pos:line="29" pos:column="50">target<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">path<pos:position pos:line="30" pos:column="17"/></name></expr>)<pos:position pos:line="30" pos:column="18"/></condition><then pos:line="30" pos:column="18"> <block pos:line="30" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">wcsncat<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">target<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="33">L"/"<pos:position pos:line="31" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="39">ARRAY_SIZE<pos:position pos:line="31" pos:column="49"/></name><argument_list pos:line="31" pos:column="49">(<argument><expr><name pos:line="31" pos:column="50">target<pos:position pos:line="31" pos:column="56"/></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">wcsncat<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">target<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="33">path<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="39">ARRAY_SIZE<pos:position pos:line="32" pos:column="49"/></name><argument_list pos:line="32" pos:column="49">(<argument><expr><name pos:line="32" pos:column="50">target<pos:position pos:line="32" pos:column="56"/></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><call><name pos:line="35" pos:column="14">strcmp<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name><name pos:line="35" pos:column="21">argv<pos:position pos:line="35" pos:column="25"/></name><index pos:line="35" pos:column="25">[<expr><literal type="number" pos:line="35" pos:column="26">1<pos:position pos:line="35" pos:column="27"/></literal></expr>]<pos:position pos:line="35" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="30">"get"<pos:position pos:line="35" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="37"/></condition><then pos:line="35" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">get_credential<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">()<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt></block></then>
	<elseif pos:line="37" pos:column="9">else <if pos:line="37" pos:column="14">if <condition pos:line="37" pos:column="17">(<expr><operator pos:line="37" pos:column="18">!<pos:position pos:line="37" pos:column="19"/></operator><call><name pos:line="37" pos:column="19">strcmp<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name><name pos:line="37" pos:column="26">argv<pos:position pos:line="37" pos:column="30"/></name><index pos:line="37" pos:column="30">[<expr><literal type="number" pos:line="37" pos:column="31">1<pos:position pos:line="37" pos:column="32"/></literal></expr>]<pos:position pos:line="37" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="35">"store"<pos:position pos:line="37" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="44"/></condition><then pos:line="37" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="17">store_credential<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">()<pos:position pos:line="38" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="39" pos:column="9">else <if pos:line="39" pos:column="14">if <condition pos:line="39" pos:column="17">(<expr><operator pos:line="39" pos:column="18">!<pos:position pos:line="39" pos:column="19"/></operator><call><name pos:line="39" pos:column="19">strcmp<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name><name pos:line="39" pos:column="26">argv<pos:position pos:line="39" pos:column="30"/></name><index pos:line="39" pos:column="30">[<expr><literal type="number" pos:line="39" pos:column="31">1<pos:position pos:line="39" pos:column="32"/></literal></expr>]<pos:position pos:line="39" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="35">"erase"<pos:position pos:line="39" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="44"/></condition><then pos:line="39" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">erase_credential<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">()<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt></block></then></if></elseif></if>
	<comment type="block" pos:line="41" pos:column="9">/* otherwise, ignore unknown action */</comment>
	<return pos:line="42" pos:column="9">return <expr><literal type="number" pos:line="42" pos:column="16">0<pos:position pos:line="42" pos:column="17"/></literal></expr>;<pos:position pos:line="42" pos:column="18"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4140_git-2.10.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">xdl_change_compact<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">xdfile_t<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">xdf<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">xdfile_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">xdfo<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">long<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">flags<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list> <block pos:line="1" pos:column="67">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">long<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">ix<pos:position pos:line="2" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="18">ixo<pos:position pos:line="2" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="23">ixs<pos:position pos:line="2" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="28">ixref<pos:position pos:line="2" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="35">grpsiz<pos:position pos:line="2" pos:column="41"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="43">nrec<pos:position pos:line="2" pos:column="47"/></name> <init pos:line="2" pos:column="48">= <expr><name><name pos:line="2" pos:column="50">xdf<pos:position pos:line="2" pos:column="53"/></name><operator pos:line="2" pos:column="53">-&gt;<pos:position pos:line="2" pos:column="58"/></operator><name pos:line="2" pos:column="55">nrec<pos:position pos:line="2" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="2" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">rchg<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name><name pos:line="3" pos:column="22">xdf<pos:position pos:line="3" pos:column="25"/></name><operator pos:line="3" pos:column="25">-&gt;<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="27">rchg<pos:position pos:line="3" pos:column="31"/></name></name></expr></init></decl>, <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="34">rchgo<pos:position pos:line="3" pos:column="39"/></name> <init pos:line="3" pos:column="40">= <expr><name><name pos:line="3" pos:column="42">xdfo<pos:position pos:line="3" pos:column="46"/></name><operator pos:line="3" pos:column="46">-&gt;<pos:position pos:line="3" pos:column="51"/></operator><name pos:line="3" pos:column="48">rchg<pos:position pos:line="3" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">blank_lines<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">xrecord_t<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier><modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">recs<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">xdf<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">recs<pos:position pos:line="5" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/*
	 * This is the same of what GNU diff does. Move back and forward
	 * change groups for a consistent and pretty diff output. This also
	 * helps in finding joinable change groups and reduce the diff size.
	 */</comment>
	<for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">ix<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">ixo<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></init><condition pos:line="12" pos:column="27">;<pos:position pos:line="12" pos:column="28"/></condition><incr/>)<pos:position pos:line="12" pos:column="29"/></control> <block pos:line="12" pos:column="30">{
		<comment type="block" pos:line="13" pos:column="17">/*
		 * Find the first changed line in the to-be-compacted file.
		 * We need to keep track of both indexes, so if we find a
		 * changed lines group on the other file, while scanning the
		 * to-be-compacted file, we need to skip it properly. Note
		 * that loops that are testing for changed lines on rchg* do
		 * not need index bounding since the array is prepared with
		 * a zero at position -1 and N.
		 */</comment>
		<for pos:line="22" pos:column="17">for <control pos:line="22" pos:column="21">(<init pos:line="22" pos:column="22">;<pos:position pos:line="22" pos:column="23"/></init> <condition><expr><name pos:line="22" pos:column="24">ix<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">&lt;<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="29">nrec<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">&amp;&amp;<pos:position pos:line="22" pos:column="44"/></operator> <operator pos:line="22" pos:column="37">!<pos:position pos:line="22" pos:column="38"/></operator><name><name pos:line="22" pos:column="38">rchg<pos:position pos:line="22" pos:column="42"/></name><index pos:line="22" pos:column="42">[<expr><name pos:line="22" pos:column="43">ix<pos:position pos:line="22" pos:column="45"/></name></expr>]<pos:position pos:line="22" pos:column="46"/></index></name></expr>;<pos:position pos:line="22" pos:column="47"/></condition> <incr><expr><name pos:line="22" pos:column="48">ix<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">++<pos:position pos:line="22" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="53"/></control>
			<block type="pseudo"><while pos:line="23" pos:column="25">while <condition pos:line="23" pos:column="31">(<expr><name><name pos:line="23" pos:column="32">rchgo<pos:position pos:line="23" pos:column="37"/></name><index pos:line="23" pos:column="37">[<expr><name pos:line="23" pos:column="38">ixo<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">++<pos:position pos:line="23" pos:column="43"/></operator></expr>]<pos:position pos:line="23" pos:column="44"/></index></name></expr>)<pos:position pos:line="23" pos:column="45"/></condition><block type="pseudo"><empty_stmt pos:line="23" pos:column="45">;<pos:position pos:line="23" pos:column="46"/></empty_stmt></block></while></block></for>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">ix<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">==<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">nrec<pos:position pos:line="24" pos:column="31"/></name></expr>)<pos:position pos:line="24" pos:column="32"/></condition><then pos:line="24" pos:column="32">
			<block type="pseudo"><break pos:line="25" pos:column="25">break;<pos:position pos:line="25" pos:column="31"/></break></block></then></if>

		<comment type="block" pos:line="27" pos:column="17">/*
		 * Record the start of a changed-group in the to-be-compacted file
		 * and find the end of it, on both to-be-compacted and other file
		 * indexes (ix and ixo).
		 */</comment>
		<expr_stmt><expr><name pos:line="32" pos:column="17">ixs<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="23">ix<pos:position pos:line="32" pos:column="25"/></name></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
		<for pos:line="33" pos:column="17">for <control pos:line="33" pos:column="21">(<init><expr><name pos:line="33" pos:column="22">ix<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">++<pos:position pos:line="33" pos:column="26"/></operator></expr>;<pos:position pos:line="33" pos:column="27"/></init> <condition><expr><name><name pos:line="33" pos:column="28">rchg<pos:position pos:line="33" pos:column="32"/></name><index pos:line="33" pos:column="32">[<expr><name pos:line="33" pos:column="33">ix<pos:position pos:line="33" pos:column="35"/></name></expr>]<pos:position pos:line="33" pos:column="36"/></index></name></expr>;<pos:position pos:line="33" pos:column="37"/></condition> <incr><expr><name pos:line="33" pos:column="38">ix<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">++<pos:position pos:line="33" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="43"/></control><block type="pseudo"><empty_stmt pos:line="33" pos:column="43">;<pos:position pos:line="33" pos:column="44"/></empty_stmt></block></for>
		<for pos:line="34" pos:column="17">for <control pos:line="34" pos:column="21">(<init pos:line="34" pos:column="22">;<pos:position pos:line="34" pos:column="23"/></init> <condition><expr><name><name pos:line="34" pos:column="24">rchgo<pos:position pos:line="34" pos:column="29"/></name><index pos:line="34" pos:column="29">[<expr><name pos:line="34" pos:column="30">ixo<pos:position pos:line="34" pos:column="33"/></name></expr>]<pos:position pos:line="34" pos:column="34"/></index></name></expr>;<pos:position pos:line="34" pos:column="35"/></condition> <incr><expr><name pos:line="34" pos:column="36">ixo<pos:position pos:line="34" pos:column="39"/></name><operator pos:line="34" pos:column="39">++<pos:position pos:line="34" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="42"/></control><block type="pseudo"><empty_stmt pos:line="34" pos:column="42">;<pos:position pos:line="34" pos:column="43"/></empty_stmt></block></for>

		<do pos:line="36" pos:column="17">do <block pos:line="36" pos:column="20">{
			<expr_stmt><expr><name pos:line="37" pos:column="25">grpsiz<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <name pos:line="37" pos:column="34">ix<pos:position pos:line="37" pos:column="36"/></name> <operator pos:line="37" pos:column="37">-<pos:position pos:line="37" pos:column="38"/></operator> <name pos:line="37" pos:column="39">ixs<pos:position pos:line="37" pos:column="42"/></name></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="38" pos:column="25">blank_lines<pos:position pos:line="38" pos:column="36"/></name> <operator pos:line="38" pos:column="37">=<pos:position pos:line="38" pos:column="38"/></operator> <literal type="number" pos:line="38" pos:column="39">0<pos:position pos:line="38" pos:column="40"/></literal></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>

			<comment type="block" pos:line="40" pos:column="25">/*
			 * If the line before the current change group, is equal to
			 * the last line of the current change group, shift backward
			 * the group.
			 */</comment>
			<while pos:line="45" pos:column="25">while <condition pos:line="45" pos:column="31">(<expr><name pos:line="45" pos:column="32">ixs<pos:position pos:line="45" pos:column="35"/></name> <operator pos:line="45" pos:column="36">&gt;<pos:position pos:line="45" pos:column="40"/></operator> <literal type="number" pos:line="45" pos:column="38">0<pos:position pos:line="45" pos:column="39"/></literal> <operator pos:line="45" pos:column="40">&amp;&amp;<pos:position pos:line="45" pos:column="50"/></operator> <call><name pos:line="45" pos:column="43">recs_match<pos:position pos:line="45" pos:column="53"/></name><argument_list pos:line="45" pos:column="53">(<argument><expr><name pos:line="45" pos:column="54">recs<pos:position pos:line="45" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="60">ixs<pos:position pos:line="45" pos:column="63"/></name> <operator pos:line="45" pos:column="64">-<pos:position pos:line="45" pos:column="65"/></operator> <literal type="number" pos:line="45" pos:column="66">1<pos:position pos:line="45" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="69">ix<pos:position pos:line="45" pos:column="71"/></name> <operator pos:line="45" pos:column="72">-<pos:position pos:line="45" pos:column="73"/></operator> <literal type="number" pos:line="45" pos:column="74">1<pos:position pos:line="45" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="77">flags<pos:position pos:line="45" pos:column="82"/></name></expr></argument>)<pos:position pos:line="45" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="84"/></condition> <block pos:line="45" pos:column="85">{
				<expr_stmt><expr><name><name pos:line="46" pos:column="33">rchg<pos:position pos:line="46" pos:column="37"/></name><index pos:line="46" pos:column="37">[<expr><operator pos:line="46" pos:column="38">--<pos:position pos:line="46" pos:column="40"/></operator><name pos:line="46" pos:column="40">ixs<pos:position pos:line="46" pos:column="43"/></name></expr>]<pos:position pos:line="46" pos:column="44"/></index></name> <operator pos:line="46" pos:column="45">=<pos:position pos:line="46" pos:column="46"/></operator> <literal type="number" pos:line="46" pos:column="47">1<pos:position pos:line="46" pos:column="48"/></literal></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="47" pos:column="33">rchg<pos:position pos:line="47" pos:column="37"/></name><index pos:line="47" pos:column="37">[<expr><operator pos:line="47" pos:column="38">--<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="40">ix<pos:position pos:line="47" pos:column="42"/></name></expr>]<pos:position pos:line="47" pos:column="43"/></index></name> <operator pos:line="47" pos:column="44">=<pos:position pos:line="47" pos:column="45"/></operator> <literal type="number" pos:line="47" pos:column="46">0<pos:position pos:line="47" pos:column="47"/></literal></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt>

				<comment type="block" pos:line="49" pos:column="33">/*
				 * This change might have joined two change groups,
				 * so we try to take this scenario in account by moving
				 * the start index accordingly (and so the other-file
				 * end-of-group index).
				 */</comment>
				<for pos:line="55" pos:column="33">for <control pos:line="55" pos:column="37">(<init pos:line="55" pos:column="38">;<pos:position pos:line="55" pos:column="39"/></init> <condition><expr><name><name pos:line="55" pos:column="40">rchg<pos:position pos:line="55" pos:column="44"/></name><index pos:line="55" pos:column="44">[<expr><name pos:line="55" pos:column="45">ixs<pos:position pos:line="55" pos:column="48"/></name> <operator pos:line="55" pos:column="49">-<pos:position pos:line="55" pos:column="50"/></operator> <literal type="number" pos:line="55" pos:column="51">1<pos:position pos:line="55" pos:column="52"/></literal></expr>]<pos:position pos:line="55" pos:column="53"/></index></name></expr>;<pos:position pos:line="55" pos:column="54"/></condition> <incr><expr><name pos:line="55" pos:column="55">ixs<pos:position pos:line="55" pos:column="58"/></name><operator pos:line="55" pos:column="58">--<pos:position pos:line="55" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="55" pos:column="61"/></control><block type="pseudo"><empty_stmt pos:line="55" pos:column="61">;<pos:position pos:line="55" pos:column="62"/></empty_stmt></block></for>
				<while pos:line="56" pos:column="33">while <condition pos:line="56" pos:column="39">(<expr><name><name pos:line="56" pos:column="40">rchgo<pos:position pos:line="56" pos:column="45"/></name><index pos:line="56" pos:column="45">[<expr><operator pos:line="56" pos:column="46">--<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="48">ixo<pos:position pos:line="56" pos:column="51"/></name></expr>]<pos:position pos:line="56" pos:column="52"/></index></name></expr>)<pos:position pos:line="56" pos:column="53"/></condition><block type="pseudo"><empty_stmt pos:line="56" pos:column="53">;<pos:position pos:line="56" pos:column="54"/></empty_stmt></block></while>
			}<pos:position pos:line="57" pos:column="26"/></block></while>

			<comment type="block" pos:line="59" pos:column="25">/*
			 * Record the end-of-group position in case we are matched
			 * with a group of changes in the other file (that is, the
			 * change record before the end-of-group index in the other
			 * file is set).
			 */</comment>
			<expr_stmt><expr><name pos:line="65" pos:column="25">ixref<pos:position pos:line="65" pos:column="30"/></name> <operator pos:line="65" pos:column="31">=<pos:position pos:line="65" pos:column="32"/></operator> <ternary><condition><expr><name><name pos:line="65" pos:column="33">rchgo<pos:position pos:line="65" pos:column="38"/></name><index pos:line="65" pos:column="38">[<expr><name pos:line="65" pos:column="39">ixo<pos:position pos:line="65" pos:column="42"/></name> <operator pos:line="65" pos:column="43">-<pos:position pos:line="65" pos:column="44"/></operator> <literal type="number" pos:line="65" pos:column="45">1<pos:position pos:line="65" pos:column="46"/></literal></expr>]<pos:position pos:line="65" pos:column="47"/></index></name></expr> ?<pos:position pos:line="65" pos:column="49"/></condition><then pos:line="65" pos:column="49"> <expr><name pos:line="65" pos:column="50">ix<pos:position pos:line="65" pos:column="52"/></name></expr></then><else pos:line="65" pos:column="52">: <expr><name pos:line="65" pos:column="54">nrec<pos:position pos:line="65" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="65" pos:column="59"/></expr_stmt>

			<comment type="block" pos:line="67" pos:column="25">/*
			 * If the first line of the current change group, is equal to
			 * the line next of the current change group, shift forward
			 * the group.
			 */</comment>
			<while pos:line="72" pos:column="25">while <condition pos:line="72" pos:column="31">(<expr><name pos:line="72" pos:column="32">ix<pos:position pos:line="72" pos:column="34"/></name> <operator pos:line="72" pos:column="35">&lt;<pos:position pos:line="72" pos:column="39"/></operator> <name pos:line="72" pos:column="37">nrec<pos:position pos:line="72" pos:column="41"/></name> <operator pos:line="72" pos:column="42">&amp;&amp;<pos:position pos:line="72" pos:column="52"/></operator> <call><name pos:line="72" pos:column="45">recs_match<pos:position pos:line="72" pos:column="55"/></name><argument_list pos:line="72" pos:column="55">(<argument><expr><name pos:line="72" pos:column="56">recs<pos:position pos:line="72" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="62">ixs<pos:position pos:line="72" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="67">ix<pos:position pos:line="72" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="71">flags<pos:position pos:line="72" pos:column="76"/></name></expr></argument>)<pos:position pos:line="72" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="78"/></condition> <block pos:line="72" pos:column="79">{
				<expr_stmt><expr><name pos:line="73" pos:column="33">blank_lines<pos:position pos:line="73" pos:column="44"/></name> <operator pos:line="73" pos:column="45">+=<pos:position pos:line="73" pos:column="47"/></operator> <call><name pos:line="73" pos:column="48">is_blank_line<pos:position pos:line="73" pos:column="61"/></name><argument_list pos:line="73" pos:column="61">(<argument><expr><name pos:line="73" pos:column="62">recs<pos:position pos:line="73" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="68">ix<pos:position pos:line="73" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="72">flags<pos:position pos:line="73" pos:column="77"/></name></expr></argument>)<pos:position pos:line="73" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="79"/></expr_stmt>

				<expr_stmt><expr><name><name pos:line="75" pos:column="33">rchg<pos:position pos:line="75" pos:column="37"/></name><index pos:line="75" pos:column="37">[<expr><name pos:line="75" pos:column="38">ixs<pos:position pos:line="75" pos:column="41"/></name><operator pos:line="75" pos:column="41">++<pos:position pos:line="75" pos:column="43"/></operator></expr>]<pos:position pos:line="75" pos:column="44"/></index></name> <operator pos:line="75" pos:column="45">=<pos:position pos:line="75" pos:column="46"/></operator> <literal type="number" pos:line="75" pos:column="47">0<pos:position pos:line="75" pos:column="48"/></literal></expr>;<pos:position pos:line="75" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="76" pos:column="33">rchg<pos:position pos:line="76" pos:column="37"/></name><index pos:line="76" pos:column="37">[<expr><name pos:line="76" pos:column="38">ix<pos:position pos:line="76" pos:column="40"/></name><operator pos:line="76" pos:column="40">++<pos:position pos:line="76" pos:column="42"/></operator></expr>]<pos:position pos:line="76" pos:column="43"/></index></name> <operator pos:line="76" pos:column="44">=<pos:position pos:line="76" pos:column="45"/></operator> <literal type="number" pos:line="76" pos:column="46">1<pos:position pos:line="76" pos:column="47"/></literal></expr>;<pos:position pos:line="76" pos:column="48"/></expr_stmt>

				<comment type="block" pos:line="78" pos:column="33">/*
				 * This change might have joined two change groups,
				 * so we try to take this scenario in account by moving
				 * the start index accordingly (and so the other-file
				 * end-of-group index). Keep tracking the reference
				 * index in case we are shifting together with a
				 * corresponding group of changes in the other file.
				 */</comment>
				<for pos:line="86" pos:column="33">for <control pos:line="86" pos:column="37">(<init pos:line="86" pos:column="38">;<pos:position pos:line="86" pos:column="39"/></init> <condition><expr><name><name pos:line="86" pos:column="40">rchg<pos:position pos:line="86" pos:column="44"/></name><index pos:line="86" pos:column="44">[<expr><name pos:line="86" pos:column="45">ix<pos:position pos:line="86" pos:column="47"/></name></expr>]<pos:position pos:line="86" pos:column="48"/></index></name></expr>;<pos:position pos:line="86" pos:column="49"/></condition> <incr><expr><name pos:line="86" pos:column="50">ix<pos:position pos:line="86" pos:column="52"/></name><operator pos:line="86" pos:column="52">++<pos:position pos:line="86" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="86" pos:column="55"/></control><block type="pseudo"><empty_stmt pos:line="86" pos:column="55">;<pos:position pos:line="86" pos:column="56"/></empty_stmt></block></for>
				<while pos:line="87" pos:column="33">while <condition pos:line="87" pos:column="39">(<expr><name><name pos:line="87" pos:column="40">rchgo<pos:position pos:line="87" pos:column="45"/></name><index pos:line="87" pos:column="45">[<expr><operator pos:line="87" pos:column="46">++<pos:position pos:line="87" pos:column="48"/></operator><name pos:line="87" pos:column="48">ixo<pos:position pos:line="87" pos:column="51"/></name></expr>]<pos:position pos:line="87" pos:column="52"/></index></name></expr>)<pos:position pos:line="87" pos:column="53"/></condition>
					<block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="41">ixref<pos:position pos:line="88" pos:column="46"/></name> <operator pos:line="88" pos:column="47">=<pos:position pos:line="88" pos:column="48"/></operator> <name pos:line="88" pos:column="49">ix<pos:position pos:line="88" pos:column="51"/></name></expr>;<pos:position pos:line="88" pos:column="52"/></expr_stmt></block></while>
			}<pos:position pos:line="89" pos:column="26"/></block></while>
		}<pos:position pos:line="90" pos:column="18"/></block> while <condition pos:line="90" pos:column="25">(<expr><name pos:line="90" pos:column="26">grpsiz<pos:position pos:line="90" pos:column="32"/></name> <operator pos:line="90" pos:column="33">!=<pos:position pos:line="90" pos:column="35"/></operator> <name pos:line="90" pos:column="36">ix<pos:position pos:line="90" pos:column="38"/></name> <operator pos:line="90" pos:column="39">-<pos:position pos:line="90" pos:column="40"/></operator> <name pos:line="90" pos:column="41">ixs<pos:position pos:line="90" pos:column="44"/></name></expr>)<pos:position pos:line="90" pos:column="45"/></condition>;<pos:position pos:line="90" pos:column="46"/></do>

		<comment type="block" pos:line="92" pos:column="17">/*
		 * Try to move back the possibly merged group of changes, to match
		 * the recorded position in the other file.
		 */</comment>
		<while pos:line="96" pos:column="17">while <condition pos:line="96" pos:column="23">(<expr><name pos:line="96" pos:column="24">ixref<pos:position pos:line="96" pos:column="29"/></name> <operator pos:line="96" pos:column="30">&lt;<pos:position pos:line="96" pos:column="34"/></operator> <name pos:line="96" pos:column="32">ix<pos:position pos:line="96" pos:column="34"/></name></expr>)<pos:position pos:line="96" pos:column="35"/></condition> <block pos:line="96" pos:column="36">{
			<expr_stmt><expr><name><name pos:line="97" pos:column="25">rchg<pos:position pos:line="97" pos:column="29"/></name><index pos:line="97" pos:column="29">[<expr><operator pos:line="97" pos:column="30">--<pos:position pos:line="97" pos:column="32"/></operator><name pos:line="97" pos:column="32">ixs<pos:position pos:line="97" pos:column="35"/></name></expr>]<pos:position pos:line="97" pos:column="36"/></index></name> <operator pos:line="97" pos:column="37">=<pos:position pos:line="97" pos:column="38"/></operator> <literal type="number" pos:line="97" pos:column="39">1<pos:position pos:line="97" pos:column="40"/></literal></expr>;<pos:position pos:line="97" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="98" pos:column="25">rchg<pos:position pos:line="98" pos:column="29"/></name><index pos:line="98" pos:column="29">[<expr><operator pos:line="98" pos:column="30">--<pos:position pos:line="98" pos:column="32"/></operator><name pos:line="98" pos:column="32">ix<pos:position pos:line="98" pos:column="34"/></name></expr>]<pos:position pos:line="98" pos:column="35"/></index></name> <operator pos:line="98" pos:column="36">=<pos:position pos:line="98" pos:column="37"/></operator> <literal type="number" pos:line="98" pos:column="38">0<pos:position pos:line="98" pos:column="39"/></literal></expr>;<pos:position pos:line="98" pos:column="40"/></expr_stmt>
			<while pos:line="99" pos:column="25">while <condition pos:line="99" pos:column="31">(<expr><name><name pos:line="99" pos:column="32">rchgo<pos:position pos:line="99" pos:column="37"/></name><index pos:line="99" pos:column="37">[<expr><operator pos:line="99" pos:column="38">--<pos:position pos:line="99" pos:column="40"/></operator><name pos:line="99" pos:column="40">ixo<pos:position pos:line="99" pos:column="43"/></name></expr>]<pos:position pos:line="99" pos:column="44"/></index></name></expr>)<pos:position pos:line="99" pos:column="45"/></condition><block type="pseudo"><empty_stmt pos:line="99" pos:column="45">;<pos:position pos:line="99" pos:column="46"/></empty_stmt></block></while>
		}<pos:position pos:line="100" pos:column="18"/></block></while>

		<comment type="block" pos:line="102" pos:column="17">/*
		 * If a group can be moved back and forth, see if there is a
		 * blank line in the moving space. If there is a blank line,
		 * make sure the last blank line is the end of the group.
		 *
		 * As we already shifted the group forward as far as possible
		 * in the earlier loop, we need to shift it back only if at all.
		 */</comment>
		<if pos:line="110" pos:column="17">if <condition pos:line="110" pos:column="20">(<expr><operator pos:line="110" pos:column="21">(<pos:position pos:line="110" pos:column="22"/></operator><name pos:line="110" pos:column="22">flags<pos:position pos:line="110" pos:column="27"/></name> <operator pos:line="110" pos:column="28">&amp;<pos:position pos:line="110" pos:column="33"/></operator> <name pos:line="110" pos:column="30">XDF_COMPACTION_HEURISTIC<pos:position pos:line="110" pos:column="54"/></name><operator pos:line="110" pos:column="54">)<pos:position pos:line="110" pos:column="55"/></operator> <operator pos:line="110" pos:column="56">&amp;&amp;<pos:position pos:line="110" pos:column="66"/></operator> <name pos:line="110" pos:column="59">blank_lines<pos:position pos:line="110" pos:column="70"/></name></expr>)<pos:position pos:line="110" pos:column="71"/></condition><then pos:line="110" pos:column="71"> <block pos:line="110" pos:column="72">{
			<while pos:line="111" pos:column="25">while <condition pos:line="111" pos:column="31">(<expr><name pos:line="111" pos:column="32">ixs<pos:position pos:line="111" pos:column="35"/></name> <operator pos:line="111" pos:column="36">&gt;<pos:position pos:line="111" pos:column="40"/></operator> <literal type="number" pos:line="111" pos:column="38">0<pos:position pos:line="111" pos:column="39"/></literal> <operator pos:line="111" pos:column="40">&amp;&amp;<pos:position pos:line="111" pos:column="50"/></operator>
			       <operator pos:line="112" pos:column="32">!<pos:position pos:line="112" pos:column="33"/></operator><call><name pos:line="112" pos:column="33">is_blank_line<pos:position pos:line="112" pos:column="46"/></name><argument_list pos:line="112" pos:column="46">(<argument><expr><name pos:line="112" pos:column="47">recs<pos:position pos:line="112" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="53">ix<pos:position pos:line="112" pos:column="55"/></name> <operator pos:line="112" pos:column="56">-<pos:position pos:line="112" pos:column="57"/></operator> <literal type="number" pos:line="112" pos:column="58">1<pos:position pos:line="112" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="61">flags<pos:position pos:line="112" pos:column="66"/></name></expr></argument>)<pos:position pos:line="112" pos:column="67"/></argument_list></call> <operator pos:line="112" pos:column="68">&amp;&amp;<pos:position pos:line="112" pos:column="78"/></operator>
			       <call><name pos:line="113" pos:column="32">recs_match<pos:position pos:line="113" pos:column="42"/></name><argument_list pos:line="113" pos:column="42">(<argument><expr><name pos:line="113" pos:column="43">recs<pos:position pos:line="113" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="49">ixs<pos:position pos:line="113" pos:column="52"/></name> <operator pos:line="113" pos:column="53">-<pos:position pos:line="113" pos:column="54"/></operator> <literal type="number" pos:line="113" pos:column="55">1<pos:position pos:line="113" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="58">ix<pos:position pos:line="113" pos:column="60"/></name> <operator pos:line="113" pos:column="61">-<pos:position pos:line="113" pos:column="62"/></operator> <literal type="number" pos:line="113" pos:column="63">1<pos:position pos:line="113" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="66">flags<pos:position pos:line="113" pos:column="71"/></name></expr></argument>)<pos:position pos:line="113" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="73"/></condition> <block pos:line="113" pos:column="74">{
				<expr_stmt><expr><name><name pos:line="114" pos:column="33">rchg<pos:position pos:line="114" pos:column="37"/></name><index pos:line="114" pos:column="37">[<expr><operator pos:line="114" pos:column="38">--<pos:position pos:line="114" pos:column="40"/></operator><name pos:line="114" pos:column="40">ixs<pos:position pos:line="114" pos:column="43"/></name></expr>]<pos:position pos:line="114" pos:column="44"/></index></name> <operator pos:line="114" pos:column="45">=<pos:position pos:line="114" pos:column="46"/></operator> <literal type="number" pos:line="114" pos:column="47">1<pos:position pos:line="114" pos:column="48"/></literal></expr>;<pos:position pos:line="114" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="115" pos:column="33">rchg<pos:position pos:line="115" pos:column="37"/></name><index pos:line="115" pos:column="37">[<expr><operator pos:line="115" pos:column="38">--<pos:position pos:line="115" pos:column="40"/></operator><name pos:line="115" pos:column="40">ix<pos:position pos:line="115" pos:column="42"/></name></expr>]<pos:position pos:line="115" pos:column="43"/></index></name> <operator pos:line="115" pos:column="44">=<pos:position pos:line="115" pos:column="45"/></operator> <literal type="number" pos:line="115" pos:column="46">0<pos:position pos:line="115" pos:column="47"/></literal></expr>;<pos:position pos:line="115" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="116" pos:column="26"/></block></while>
		}<pos:position pos:line="117" pos:column="18"/></block></then></if>
	}<pos:position pos:line="118" pos:column="10"/></block></for>

	<return pos:line="120" pos:column="9">return <expr><literal type="number" pos:line="120" pos:column="16">0<pos:position pos:line="120" pos:column="17"/></literal></expr>;<pos:position pos:line="120" pos:column="18"/></return>
}<pos:position pos:line="121" pos:column="2"/></block></function></unit>

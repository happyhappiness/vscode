<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2602_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">trailer_item<pos:position pos:line="1" pos:column="27"/></name></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">new_trailer_item<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">trailer_item<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">conf_item<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
					     <parameter><decl><type><name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">tok<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">val<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
	struct <expr_stmt><expr><name pos:line="4" pos:column="16">trailer_item<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></operator><operator pos:line="4" pos:column="30">new<pos:position pos:line="4" pos:column="33"/></operator> <operator pos:line="4" pos:column="34">=<pos:position pos:line="4" pos:column="35"/></operator> <call><name pos:line="4" pos:column="36">xcalloc<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><sizeof pos:line="4" pos:column="44">sizeof<argument_list pos:line="4" pos:column="50">(<argument><expr><operator pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></operator><operator pos:line="4" pos:column="52">new<pos:position pos:line="4" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="58">1<pos:position pos:line="4" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="5" pos:column="9">new<pos:position pos:line="5" pos:column="12"/></operator><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">value<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">=<pos:position pos:line="5" pos:column="21"/></operator> <ternary><condition><expr><name pos:line="5" pos:column="22">val<pos:position pos:line="5" pos:column="25"/></name></expr> ?<pos:position pos:line="5" pos:column="27"/></condition><then pos:line="5" pos:column="27"> <expr><name pos:line="5" pos:column="28">val<pos:position pos:line="5" pos:column="31"/></name></expr> <pos:position pos:line="5" pos:column="32"/></then><else pos:line="5" pos:column="32">: <expr><call><name pos:line="5" pos:column="34">xstrdup<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><literal type="string" pos:line="5" pos:column="42">""<pos:position pos:line="5" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="5" pos:column="46"/></expr_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">conf_item<pos:position pos:line="7" pos:column="22"/></name></expr>)<pos:position pos:line="7" pos:column="23"/></condition><then pos:line="7" pos:column="23"> <block pos:line="7" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">duplicate_conf<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><operator pos:line="8" pos:column="32">&amp;<pos:position pos:line="8" pos:column="37"/></operator><operator pos:line="8" pos:column="33">new<pos:position pos:line="8" pos:column="36"/></operator><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">conf<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="44">&amp;<pos:position pos:line="8" pos:column="49"/></operator><name><name pos:line="8" pos:column="45">conf_item<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">-&gt;<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="56">conf<pos:position pos:line="8" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="9" pos:column="17">new<pos:position pos:line="9" pos:column="20"/></operator><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">token<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <call><name pos:line="9" pos:column="30">xstrdup<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><call><name pos:line="9" pos:column="38">token_from_item<pos:position pos:line="9" pos:column="53"/></name><argument_list pos:line="9" pos:column="53">(<argument><expr><name pos:line="9" pos:column="54">conf_item<pos:position pos:line="9" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="65">tok<pos:position pos:line="9" pos:column="68"/></name></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">free<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">tok<pos:position pos:line="10" pos:column="25"/></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then> <else pos:line="11" pos:column="11">else <block pos:line="11" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">duplicate_conf<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><operator pos:line="12" pos:column="32">&amp;<pos:position pos:line="12" pos:column="37"/></operator><operator pos:line="12" pos:column="33">new<pos:position pos:line="12" pos:column="36"/></operator><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">conf<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="44">&amp;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="45">default_conf_info<pos:position pos:line="12" pos:column="62"/></name></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="13" pos:column="17">new<pos:position pos:line="13" pos:column="20"/></operator><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">token<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="30">tok<pos:position pos:line="13" pos:column="33"/></name></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></else></if>

	<return pos:line="16" pos:column="9">return <expr><operator pos:line="16" pos:column="16">new<pos:position pos:line="16" pos:column="19"/></operator></expr>;<pos:position pos:line="16" pos:column="20"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

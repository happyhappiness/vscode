<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2238_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">unpack_sha1_header<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">git_zstream<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">stream<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="2" pos:column="24">unsigned<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">map<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">unsigned<pos:position pos:line="2" pos:column="52"/></name> <name pos:line="2" pos:column="53">long<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">mapsize<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="3" pos:column="24">void<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">buffer<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="38">unsigned<pos:position pos:line="3" pos:column="46"/></name> <name pos:line="3" pos:column="47">long<pos:position pos:line="3" pos:column="51"/></name></type> <name pos:line="3" pos:column="52">bufsiz<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="59"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">status<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><call><name pos:line="5" pos:column="22">unpack_sha1_short_header<pos:position pos:line="5" pos:column="46"/></name><argument_list pos:line="5" pos:column="46">(<argument><expr><name pos:line="5" pos:column="47">stream<pos:position pos:line="5" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="55">map<pos:position pos:line="5" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="60">mapsize<pos:position pos:line="5" pos:column="67"/></name></expr></argument>,
					      <argument><expr><name pos:line="6" pos:column="47">buffer<pos:position pos:line="6" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="55">bufsiz<pos:position pos:line="6" pos:column="61"/></name></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="63"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">status<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">&lt;<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="22">Z_OK<pos:position pos:line="8" pos:column="26"/></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><name pos:line="9" pos:column="24">status<pos:position pos:line="9" pos:column="30"/></name></expr>;<pos:position pos:line="9" pos:column="31"/></return></block></then></if>

	<comment type="block" pos:line="11" pos:column="9">/* Make sure we have the terminating NUL */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><call><name pos:line="12" pos:column="14">memchr<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">buffer<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="29">'\0'<pos:position pos:line="12" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="35">stream<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">-&gt;<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="43">next_out<pos:position pos:line="12" pos:column="51"/></name></name> <operator pos:line="12" pos:column="52">-<pos:position pos:line="12" pos:column="53"/></operator> <operator pos:line="12" pos:column="54">(<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="55">unsigned<pos:position pos:line="12" pos:column="63"/></name> <name pos:line="12" pos:column="64">char<pos:position pos:line="12" pos:column="68"/></name> <operator pos:line="12" pos:column="69">*<pos:position pos:line="12" pos:column="70"/></operator><operator pos:line="12" pos:column="70">)<pos:position pos:line="12" pos:column="71"/></operator><name pos:line="12" pos:column="71">buffer<pos:position pos:line="12" pos:column="77"/></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="79"/></condition><then pos:line="12" pos:column="79">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">-<pos:position pos:line="13" pos:column="25"/></operator><literal type="number" pos:line="13" pos:column="25">1<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if>
	<return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

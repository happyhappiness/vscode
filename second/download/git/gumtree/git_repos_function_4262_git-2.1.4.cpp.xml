<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4262_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">numstat_patch_list<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">patch<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">patch<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<for pos:line="3" pos:column="9">for <control pos:line="3" pos:column="13">( <init pos:line="3" pos:column="15">;<pos:position pos:line="3" pos:column="16"/></init> <condition><expr><name pos:line="3" pos:column="17">patch<pos:position pos:line="3" pos:column="22"/></name></expr>;<pos:position pos:line="3" pos:column="23"/></condition> <incr><expr><name pos:line="3" pos:column="24">patch<pos:position pos:line="3" pos:column="29"/></name> <operator pos:line="3" pos:column="30">=<pos:position pos:line="3" pos:column="31"/></operator> <name><name pos:line="3" pos:column="32">patch<pos:position pos:line="3" pos:column="37"/></name><operator pos:line="3" pos:column="37">-&gt;<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="39">next<pos:position pos:line="3" pos:column="43"/></name></name></expr></incr>)<pos:position pos:line="3" pos:column="44"/></control> <block pos:line="3" pos:column="45">{
		<decl_stmt><decl><type><specifier pos:line="4" pos:column="17">const<pos:position pos:line="4" pos:column="22"/></specifier> <name pos:line="4" pos:column="23">char<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">name<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
		<expr_stmt><expr><name pos:line="5" pos:column="17">name<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">=<pos:position pos:line="5" pos:column="23"/></operator> <ternary><condition><expr><name><name pos:line="5" pos:column="24">patch<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">new_name<pos:position pos:line="5" pos:column="39"/></name></name></expr> ?<pos:position pos:line="5" pos:column="41"/></condition><then pos:line="5" pos:column="41"> <expr><name><name pos:line="5" pos:column="42">patch<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">-&gt;<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="49">new_name<pos:position pos:line="5" pos:column="57"/></name></name></expr> <pos:position pos:line="5" pos:column="58"/></then><else pos:line="5" pos:column="58">: <expr><name><name pos:line="5" pos:column="60">patch<pos:position pos:line="5" pos:column="65"/></name><operator pos:line="5" pos:column="65">-&gt;<pos:position pos:line="5" pos:column="70"/></operator><name pos:line="5" pos:column="67">old_name<pos:position pos:line="5" pos:column="75"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="5" pos:column="76"/></expr_stmt>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><name><name pos:line="6" pos:column="21">patch<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">is_binary<pos:position pos:line="6" pos:column="37"/></name></name></expr>)<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="25">printf<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><literal type="string" pos:line="7" pos:column="32">"-\t-\t"<pos:position pos:line="7" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt></block></then>
		<else pos:line="8" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="25">printf<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><literal type="string" pos:line="9" pos:column="32">"%d\t%d\t"<pos:position pos:line="9" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="44">patch<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">-&gt;<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="51">lines_added<pos:position pos:line="9" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="64">patch<pos:position pos:line="9" pos:column="69"/></name><operator pos:line="9" pos:column="69">-&gt;<pos:position pos:line="9" pos:column="74"/></operator><name pos:line="9" pos:column="71">lines_deleted<pos:position pos:line="9" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="86"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">write_name_quoted<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">name<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">stdout<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">line_termination<pos:position pos:line="10" pos:column="65"/></name></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></for>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

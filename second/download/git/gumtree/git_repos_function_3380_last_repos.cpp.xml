<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3380_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_refname_component<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">refname<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">flags<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">cp<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">last<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="char" pos:line="4" pos:column="21">'\0'<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">cp<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">refname<pos:position pos:line="6" pos:column="26"/></name></expr>;<pos:position pos:line="6" pos:column="27"/></init> <condition pos:line="6" pos:column="28">;<pos:position pos:line="6" pos:column="29"/></condition> <incr><expr><name pos:line="6" pos:column="30">cp<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">++<pos:position pos:line="6" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="35"/></control> <block pos:line="6" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">ch<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><operator pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">cp<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">&amp;<pos:position pos:line="7" pos:column="35"/></operator> <literal type="number" pos:line="7" pos:column="32">255<pos:position pos:line="7" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">unsigned<pos:position pos:line="8" pos:column="25"/></name> <name pos:line="8" pos:column="26">char<pos:position pos:line="8" pos:column="30"/></name></type> <name pos:line="8" pos:column="31">disp<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><name><name pos:line="8" pos:column="38">refname_disposition<pos:position pos:line="8" pos:column="57"/></name><index pos:line="8" pos:column="57">[<expr><name pos:line="8" pos:column="58">ch<pos:position pos:line="8" pos:column="60"/></name></expr>]<pos:position pos:line="8" pos:column="61"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="62"/></decl_stmt>
		<switch pos:line="9" pos:column="17">switch <condition pos:line="9" pos:column="24">(<expr><name pos:line="9" pos:column="25">disp<pos:position pos:line="9" pos:column="29"/></name></expr>)<pos:position pos:line="9" pos:column="30"/></condition> <block pos:line="9" pos:column="31">{
		<case pos:line="10" pos:column="17">case <expr><literal type="number" pos:line="10" pos:column="22">1<pos:position pos:line="10" pos:column="23"/></literal></expr>:<pos:position pos:line="10" pos:column="24"/></case>
			<goto pos:line="11" pos:column="25">goto <name pos:line="11" pos:column="30">out<pos:position pos:line="11" pos:column="33"/></name>;<pos:position pos:line="11" pos:column="34"/></goto>
		<case pos:line="12" pos:column="17">case <expr><literal type="number" pos:line="12" pos:column="22">2<pos:position pos:line="12" pos:column="23"/></literal></expr>:<pos:position pos:line="12" pos:column="24"/></case>
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><name pos:line="13" pos:column="29">last<pos:position pos:line="13" pos:column="33"/></name> <operator pos:line="13" pos:column="34">==<pos:position pos:line="13" pos:column="36"/></operator> <literal type="char" pos:line="13" pos:column="37">'.'<pos:position pos:line="13" pos:column="40"/></literal></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41">
				<block type="pseudo"><return pos:line="14" pos:column="33">return <expr><operator pos:line="14" pos:column="40">-<pos:position pos:line="14" pos:column="41"/></operator><literal type="number" pos:line="14" pos:column="41">1<pos:position pos:line="14" pos:column="42"/></literal></expr>;<pos:position pos:line="14" pos:column="43"/></return></block></then></if> <comment type="block" pos:line="14" pos:column="44">/* Refname contains "..". */</comment>
			<break pos:line="15" pos:column="25">break;<pos:position pos:line="15" pos:column="31"/></break>
		<case pos:line="16" pos:column="17">case <expr><literal type="number" pos:line="16" pos:column="22">3<pos:position pos:line="16" pos:column="23"/></literal></expr>:<pos:position pos:line="16" pos:column="24"/></case>
			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><name pos:line="17" pos:column="29">last<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">==<pos:position pos:line="17" pos:column="36"/></operator> <literal type="char" pos:line="17" pos:column="37">'@'<pos:position pos:line="17" pos:column="40"/></literal></expr>)<pos:position pos:line="17" pos:column="41"/></condition><then pos:line="17" pos:column="41">
				<block type="pseudo"><return pos:line="18" pos:column="33">return <expr><operator pos:line="18" pos:column="40">-<pos:position pos:line="18" pos:column="41"/></operator><literal type="number" pos:line="18" pos:column="41">1<pos:position pos:line="18" pos:column="42"/></literal></expr>;<pos:position pos:line="18" pos:column="43"/></return></block></then></if> <comment type="block" pos:line="18" pos:column="44">/* Refname contains "@{". */</comment>
			<break pos:line="19" pos:column="25">break;<pos:position pos:line="19" pos:column="31"/></break>
		<case pos:line="20" pos:column="17">case <expr><literal type="number" pos:line="20" pos:column="22">4<pos:position pos:line="20" pos:column="23"/></literal></expr>:<pos:position pos:line="20" pos:column="24"/></case>
			<return pos:line="21" pos:column="25">return <expr><operator pos:line="21" pos:column="32">-<pos:position pos:line="21" pos:column="33"/></operator><literal type="number" pos:line="21" pos:column="33">1<pos:position pos:line="21" pos:column="34"/></literal></expr>;<pos:position pos:line="21" pos:column="35"/></return>
		<case pos:line="22" pos:column="17">case <expr><literal type="number" pos:line="22" pos:column="22">5<pos:position pos:line="22" pos:column="23"/></literal></expr>:<pos:position pos:line="22" pos:column="24"/></case>
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><operator pos:line="23" pos:column="29">!<pos:position pos:line="23" pos:column="30"/></operator><operator pos:line="23" pos:column="30">(<pos:position pos:line="23" pos:column="31"/></operator><operator pos:line="23" pos:column="31">*<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">flags<pos:position pos:line="23" pos:column="37"/></name> <operator pos:line="23" pos:column="38">&amp;<pos:position pos:line="23" pos:column="43"/></operator> <name pos:line="23" pos:column="40">REFNAME_REFSPEC_PATTERN<pos:position pos:line="23" pos:column="63"/></name><operator pos:line="23" pos:column="63">)<pos:position pos:line="23" pos:column="64"/></operator></expr>)<pos:position pos:line="23" pos:column="65"/></condition><then pos:line="23" pos:column="65">
				<block type="pseudo"><return pos:line="24" pos:column="33">return <expr><operator pos:line="24" pos:column="40">-<pos:position pos:line="24" pos:column="41"/></operator><literal type="number" pos:line="24" pos:column="41">1<pos:position pos:line="24" pos:column="42"/></literal></expr>;<pos:position pos:line="24" pos:column="43"/></return></block></then></if> <comment type="block" pos:line="24" pos:column="44">/* refspec can't be a pattern */</comment>

			<comment type="block" pos:line="26" pos:column="25">/*
			 * Unset the pattern flag so that we only accept
			 * a single asterisk for one side of refspec.
			 */</comment>
			<expr_stmt><expr><operator pos:line="30" pos:column="25">*<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="26">flags<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">&amp;=<pos:position pos:line="30" pos:column="38"/></operator> <operator pos:line="30" pos:column="35">~<pos:position pos:line="30" pos:column="36"/></operator> <name pos:line="30" pos:column="37">REFNAME_REFSPEC_PATTERN<pos:position pos:line="30" pos:column="60"/></name></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt>
			<break pos:line="31" pos:column="25">break;<pos:position pos:line="31" pos:column="31"/></break>
		}<pos:position pos:line="32" pos:column="18"/></block></switch>
		<expr_stmt><expr><name pos:line="33" pos:column="17">last<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">ch<pos:position pos:line="33" pos:column="26"/></name></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></for>
<label><name pos:line="35" pos:column="1">out<pos:position pos:line="35" pos:column="4"/></name>:<pos:position pos:line="35" pos:column="5"/></label>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">cp<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">==<pos:position pos:line="36" pos:column="18"/></operator> <name pos:line="36" pos:column="19">refname<pos:position pos:line="36" pos:column="26"/></name></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27">
		<block type="pseudo"><return pos:line="37" pos:column="17">return <expr><literal type="number" pos:line="37" pos:column="24">0<pos:position pos:line="37" pos:column="25"/></literal></expr>;<pos:position pos:line="37" pos:column="26"/></return></block></then></if> <comment type="block" pos:line="37" pos:column="27">/* Component has zero length. */</comment>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">refname<pos:position pos:line="38" pos:column="20"/></name><index pos:line="38" pos:column="20">[<expr><literal type="number" pos:line="38" pos:column="21">0<pos:position pos:line="38" pos:column="22"/></literal></expr>]<pos:position pos:line="38" pos:column="23"/></index></name> <operator pos:line="38" pos:column="24">==<pos:position pos:line="38" pos:column="26"/></operator> <literal type="char" pos:line="38" pos:column="27">'.'<pos:position pos:line="38" pos:column="30"/></literal></expr>)<pos:position pos:line="38" pos:column="31"/></condition><then pos:line="38" pos:column="31">
		<block type="pseudo"><return pos:line="39" pos:column="17">return <expr><operator pos:line="39" pos:column="24">-<pos:position pos:line="39" pos:column="25"/></operator><literal type="number" pos:line="39" pos:column="25">1<pos:position pos:line="39" pos:column="26"/></literal></expr>;<pos:position pos:line="39" pos:column="27"/></return></block></then></if> <comment type="block" pos:line="39" pos:column="28">/* Component starts with '.'. */</comment>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">cp<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">-<pos:position pos:line="40" pos:column="17"/></operator> <name pos:line="40" pos:column="18">refname<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">&gt;=<pos:position pos:line="40" pos:column="31"/></operator> <name pos:line="40" pos:column="29">LOCK_SUFFIX_LEN<pos:position pos:line="40" pos:column="44"/></name> <operator pos:line="40" pos:column="45">&amp;&amp;<pos:position pos:line="40" pos:column="55"/></operator>
	    <operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><call><name pos:line="41" pos:column="14">memcmp<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><name pos:line="41" pos:column="21">cp<pos:position pos:line="41" pos:column="23"/></name> <operator pos:line="41" pos:column="24">-<pos:position pos:line="41" pos:column="25"/></operator> <name pos:line="41" pos:column="26">LOCK_SUFFIX_LEN<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="43">LOCK_SUFFIX<pos:position pos:line="41" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="56">LOCK_SUFFIX_LEN<pos:position pos:line="41" pos:column="71"/></name></expr></argument>)<pos:position pos:line="41" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="73"/></condition><then pos:line="41" pos:column="73">
		<block type="pseudo"><return pos:line="42" pos:column="17">return <expr><operator pos:line="42" pos:column="24">-<pos:position pos:line="42" pos:column="25"/></operator><literal type="number" pos:line="42" pos:column="25">1<pos:position pos:line="42" pos:column="26"/></literal></expr>;<pos:position pos:line="42" pos:column="27"/></return></block></then></if> <comment type="block" pos:line="42" pos:column="28">/* Refname ends with ".lock". */</comment>
	<return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">cp<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">-<pos:position pos:line="43" pos:column="20"/></operator> <name pos:line="43" pos:column="21">refname<pos:position pos:line="43" pos:column="28"/></name></expr>;<pos:position pos:line="43" pos:column="29"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

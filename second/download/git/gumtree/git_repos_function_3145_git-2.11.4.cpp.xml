<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3145_git-2.11.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">expand_ref<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><specifier pos:line="1" pos:column="16">const<pos:position pos:line="1" pos:column="21"/></specifier> <name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">str<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">len<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">unsigned<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">sha1<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier><modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">ref<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier><modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">p<pos:position pos:line="3" pos:column="23"/></name></decl>, <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="26">r<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">refs_found<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><operator pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">ref<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">p<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="18">ref_rev_parse_rules<pos:position pos:line="7" pos:column="37"/></name></expr>;<pos:position pos:line="7" pos:column="38"/></init> <condition><expr><operator pos:line="7" pos:column="39">*<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">p<pos:position pos:line="7" pos:column="41"/></name></expr>;<pos:position pos:line="7" pos:column="42"/></condition> <incr><expr><name pos:line="7" pos:column="43">p<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">++<pos:position pos:line="7" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="47"/></control> <block pos:line="7" pos:column="48">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">char<pos:position pos:line="8" pos:column="21"/></name></type> <name><name pos:line="8" pos:column="22">fullref<pos:position pos:line="8" pos:column="29"/></name><index pos:line="8" pos:column="29">[<expr><name pos:line="8" pos:column="30">PATH_MAX<pos:position pos:line="8" pos:column="38"/></name></expr>]<pos:position pos:line="8" pos:column="39"/></index></name></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">unsigned<pos:position pos:line="9" pos:column="25"/></name> <name pos:line="9" pos:column="26">char<pos:position pos:line="9" pos:column="30"/></name></type> <name><name pos:line="9" pos:column="31">sha1_from_ref<pos:position pos:line="9" pos:column="44"/></name><index pos:line="9" pos:column="44">[<expr><literal type="number" pos:line="9" pos:column="45">20<pos:position pos:line="9" pos:column="47"/></literal></expr>]<pos:position pos:line="9" pos:column="48"/></index></name></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">unsigned<pos:position pos:line="10" pos:column="25"/></name> <name pos:line="10" pos:column="26">char<pos:position pos:line="10" pos:column="30"/></name> <modifier pos:line="10" pos:column="31">*<pos:position pos:line="10" pos:column="32"/></modifier></type><name pos:line="10" pos:column="32">this_result<pos:position pos:line="10" pos:column="43"/></name></decl>;<pos:position pos:line="10" pos:column="44"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">flag<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>

		<expr_stmt><expr><name pos:line="13" pos:column="17">this_result<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <ternary><condition><expr><name pos:line="13" pos:column="31">refs_found<pos:position pos:line="13" pos:column="41"/></name></expr> ?<pos:position pos:line="13" pos:column="43"/></condition><then pos:line="13" pos:column="43"> <expr><name pos:line="13" pos:column="44">sha1_from_ref<pos:position pos:line="13" pos:column="57"/></name></expr> <pos:position pos:line="13" pos:column="58"/></then><else pos:line="13" pos:column="58">: <expr><name pos:line="13" pos:column="60">sha1<pos:position pos:line="13" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">mksnpath<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">fullref<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="35">sizeof<argument_list pos:line="14" pos:column="41">(<argument><expr><name pos:line="14" pos:column="42">fullref<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="14" pos:column="52">*<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="53">p<pos:position pos:line="14" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="56">len<pos:position pos:line="14" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="61">str<pos:position pos:line="14" pos:column="64"/></name></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">r<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">resolve_ref_unsafe<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">fullref<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="49">RESOLVE_REF_READING<pos:position pos:line="15" pos:column="68"/></name></expr></argument>,
				       <argument><expr><name pos:line="16" pos:column="40">this_result<pos:position pos:line="16" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="53">&amp;<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="54">flag<pos:position pos:line="16" pos:column="58"/></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="60"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">r<pos:position pos:line="17" pos:column="22"/></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23"> <block pos:line="17" pos:column="24">{
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><operator pos:line="18" pos:column="29">!<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">refs_found<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">++<pos:position pos:line="18" pos:column="42"/></operator></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="19" pos:column="33">*<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">ref<pos:position pos:line="19" pos:column="37"/></name> <operator pos:line="19" pos:column="38">=<pos:position pos:line="19" pos:column="39"/></operator> <call><name pos:line="19" pos:column="40">xstrdup<pos:position pos:line="19" pos:column="47"/></name><argument_list pos:line="19" pos:column="47">(<argument><expr><name pos:line="19" pos:column="48">r<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt></block></then></if>
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><operator pos:line="20" pos:column="29">!<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">warn_ambiguous_refs<pos:position pos:line="20" pos:column="49"/></name></expr>)<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50">
				<block type="pseudo"><break pos:line="21" pos:column="33">break;<pos:position pos:line="21" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="22" pos:column="18"/></block></then> <elseif pos:line="22" pos:column="19">else <if pos:line="22" pos:column="24">if <condition pos:line="22" pos:column="27">(<expr><operator pos:line="22" pos:column="28">(<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">flag<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">&amp;<pos:position pos:line="22" pos:column="39"/></operator> <name pos:line="22" pos:column="36">REF_ISSYMREF<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">)<pos:position pos:line="22" pos:column="49"/></operator> <operator pos:line="22" pos:column="50">&amp;&amp;<pos:position pos:line="22" pos:column="60"/></operator> <call><name pos:line="22" pos:column="53">strcmp<pos:position pos:line="22" pos:column="59"/></name><argument_list pos:line="22" pos:column="59">(<argument><expr><name pos:line="22" pos:column="60">fullref<pos:position pos:line="22" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="69">"HEAD"<pos:position pos:line="22" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="77"/></condition><then pos:line="22" pos:column="77"> <block pos:line="22" pos:column="78">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">warning<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><literal type="string" pos:line="23" pos:column="33">"ignoring dangling symref %s."<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="65">fullref<pos:position pos:line="23" pos:column="72"/></name></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="74"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if></elseif> <elseif pos:line="24" pos:column="19">else <if pos:line="24" pos:column="24">if <condition pos:line="24" pos:column="27">(<expr><operator pos:line="24" pos:column="28">(<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="29">flag<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">&amp;<pos:position pos:line="24" pos:column="39"/></operator> <name pos:line="24" pos:column="36">REF_ISBROKEN<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">)<pos:position pos:line="24" pos:column="49"/></operator> <operator pos:line="24" pos:column="50">&amp;&amp;<pos:position pos:line="24" pos:column="60"/></operator> <call><name pos:line="24" pos:column="53">strchr<pos:position pos:line="24" pos:column="59"/></name><argument_list pos:line="24" pos:column="59">(<argument><expr><name pos:line="24" pos:column="60">fullref<pos:position pos:line="24" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="69">'/'<pos:position pos:line="24" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="74"/></condition><then pos:line="24" pos:column="74"> <block pos:line="24" pos:column="75">{
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">warning<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><literal type="string" pos:line="25" pos:column="33">"ignoring broken ref %s."<pos:position pos:line="25" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="60">fullref<pos:position pos:line="25" pos:column="67"/></name></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="27" pos:column="10"/></block></for>
	<return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">refs_found<pos:position pos:line="28" pos:column="26"/></name></expr>;<pos:position pos:line="28" pos:column="27"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

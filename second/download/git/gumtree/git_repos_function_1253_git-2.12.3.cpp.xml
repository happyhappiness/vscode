<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1253_git-2.12.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_patch_list<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">apply_state<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">state<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="56">struct<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">patch<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">patch<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">err<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">prepare_symlink_changes<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">state<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">patch<pos:position pos:line="5" pos:column="45"/></name></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">prepare_fn_table<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">state<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="33">patch<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">patch<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition> <block pos:line="7" pos:column="23">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">res<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name><name pos:line="9" pos:column="21">state<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">apply_verbosity<pos:position pos:line="9" pos:column="43"/></name></name> <operator pos:line="9" pos:column="44">&gt;<pos:position pos:line="9" pos:column="48"/></operator> <name pos:line="9" pos:column="46">verbosity_normal<pos:position pos:line="9" pos:column="62"/></name></expr>)<pos:position pos:line="9" pos:column="63"/></condition><then pos:line="9" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">say_patch_name<pos:position pos:line="10" pos:column="39"/></name><argument_list pos:line="10" pos:column="39">(<argument><expr><name pos:line="10" pos:column="40">stderr<pos:position pos:line="10" pos:column="46"/></name></expr></argument>,
				       <argument><expr><call><name pos:line="11" pos:column="40">_<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><literal type="string" pos:line="11" pos:column="42">"Checking patch %s..."<pos:position pos:line="11" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="67">patch<pos:position pos:line="11" pos:column="72"/></name></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="74"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="12" pos:column="17">res<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">check_patch<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">state<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">patch<pos:position pos:line="12" pos:column="47"/></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">res<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">==<pos:position pos:line="13" pos:column="27"/></operator> <operator pos:line="13" pos:column="28">-<pos:position pos:line="13" pos:column="29"/></operator><literal type="number" pos:line="13" pos:column="29">128<pos:position pos:line="13" pos:column="32"/></literal></expr>)<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33">
			<block type="pseudo"><return pos:line="14" pos:column="25">return <expr><operator pos:line="14" pos:column="32">-<pos:position pos:line="14" pos:column="33"/></operator><literal type="number" pos:line="14" pos:column="33">128<pos:position pos:line="14" pos:column="36"/></literal></expr>;<pos:position pos:line="14" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="15" pos:column="17">err<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">|=<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">res<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">patch<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <name><name pos:line="16" pos:column="25">patch<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">next<pos:position pos:line="16" pos:column="36"/></name></name></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></while>
	<return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">err<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

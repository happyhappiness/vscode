<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3035_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">log2i<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">n<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">log2<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><literal type="number" pos:line="3" pos:column="20">0<pos:position pos:line="3" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init pos:line="5" pos:column="14">;<pos:position pos:line="5" pos:column="15"/></init> <condition><expr><name pos:line="5" pos:column="16">n<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">&gt;<pos:position pos:line="5" pos:column="22"/></operator> <literal type="number" pos:line="5" pos:column="20">1<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></condition> <incr><expr><name pos:line="5" pos:column="23">n<pos:position pos:line="5" pos:column="24"/></name> <operator pos:line="5" pos:column="25">&gt;&gt;=<pos:position pos:line="5" pos:column="34"/></operator> <literal type="number" pos:line="5" pos:column="29">1<pos:position pos:line="5" pos:column="30"/></literal></expr></incr>)<pos:position pos:line="5" pos:column="31"/></control>
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">log2<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">++<pos:position pos:line="6" pos:column="23"/></operator></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt></block></for>

	<return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">log2<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

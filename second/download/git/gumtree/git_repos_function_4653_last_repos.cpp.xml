<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4653_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">update_shallow<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">fetch_pack_args<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">args<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">ref<pos:position pos:line="2" pos:column="38"/></name></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier><modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">sought<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">nr_sought<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="3" pos:column="28">struct<pos:position pos:line="3" pos:column="34"/></name> <name pos:line="3" pos:column="35">shallow_info<pos:position pos:line="3" pos:column="47"/></name></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">si<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">oid_array<pos:position pos:line="5" pos:column="25"/></name></name></type> <name pos:line="5" pos:column="26">ref<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name pos:line="5" pos:column="32">OID_ARRAY_INIT<pos:position pos:line="5" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name> <modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier></type><name pos:line="6" pos:column="14">status<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">args<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">deepen<pos:position pos:line="9" pos:column="25"/></name></name> <operator pos:line="9" pos:column="26">&amp;&amp;<pos:position pos:line="9" pos:column="36"/></operator> <name pos:line="9" pos:column="29">alternate_shallow_file<pos:position pos:line="9" pos:column="51"/></name></expr>)<pos:position pos:line="9" pos:column="52"/></condition><then pos:line="9" pos:column="52"> <block pos:line="9" pos:column="53">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">alternate_shallow_file<pos:position pos:line="10" pos:column="44"/></name> <operator pos:line="10" pos:column="45">==<pos:position pos:line="10" pos:column="47"/></operator> <literal type="char" pos:line="10" pos:column="48">'\0'<pos:position pos:line="10" pos:column="52"/></literal></expr>)<pos:position pos:line="10" pos:column="53"/></condition><then pos:line="10" pos:column="53"> <block pos:line="10" pos:column="54">{ <comment type="block" pos:line="10" pos:column="56">/* --unshallow */</comment>
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">unlink_or_warn<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><call><name pos:line="11" pos:column="40">git_path_shallow<pos:position pos:line="11" pos:column="56"/></name><argument_list pos:line="11" pos:column="56">()<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="12" pos:column="25">rollback_lock_file<pos:position pos:line="12" pos:column="43"/></name><argument_list pos:line="12" pos:column="43">(<argument><expr><operator pos:line="12" pos:column="44">&amp;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="45">shallow_lock<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="13" pos:column="18"/></block></then> <else pos:line="13" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="25">commit_lock_file<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><operator pos:line="14" pos:column="42">&amp;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="43">shallow_lock<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt></block></else></if>
		<return pos:line="15" pos:column="17">return;<pos:position pos:line="15" pos:column="24"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name><name pos:line="18" pos:column="14">si<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">shallow<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">||<pos:position pos:line="18" pos:column="28"/></operator> <operator pos:line="18" pos:column="29">!<pos:position pos:line="18" pos:column="30"/></operator><name><name pos:line="18" pos:column="30">si<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">shallow<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">-&gt;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="43">nr<pos:position pos:line="18" pos:column="45"/></name></name></expr>)<pos:position pos:line="18" pos:column="46"/></condition><then pos:line="18" pos:column="46">
		<block type="pseudo"><return pos:line="19" pos:column="17">return;<pos:position pos:line="19" pos:column="24"/></return></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">args<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">cloning<pos:position pos:line="21" pos:column="26"/></name></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
		<comment type="block" pos:line="22" pos:column="17">/*
		 * remote is shallow, but this is a clone, there are
		 * no objects in repo to worry about. Accept any
		 * shallow points that exist in the pack (iow in repo
		 * after get_pack() and reprepare_packed_git())
		 */</comment>
		<decl_stmt><decl><type><name><name pos:line="28" pos:column="17">struct<pos:position pos:line="28" pos:column="23"/></name> <name pos:line="28" pos:column="24">oid_array<pos:position pos:line="28" pos:column="33"/></name></name></type> <name pos:line="28" pos:column="34">extra<pos:position pos:line="28" pos:column="39"/></name> <init pos:line="28" pos:column="40">= <expr><name pos:line="28" pos:column="42">OID_ARRAY_INIT<pos:position pos:line="28" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="57"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="29" pos:column="17">struct<pos:position pos:line="29" pos:column="23"/></name> <name pos:line="29" pos:column="24">object_id<pos:position pos:line="29" pos:column="33"/></name></name> <modifier pos:line="29" pos:column="34">*<pos:position pos:line="29" pos:column="35"/></modifier></type><name pos:line="29" pos:column="35">oid<pos:position pos:line="29" pos:column="38"/></name> <init pos:line="29" pos:column="39">= <expr><name><name pos:line="29" pos:column="41">si<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">-&gt;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="45">shallow<pos:position pos:line="29" pos:column="52"/></name><operator pos:line="29" pos:column="52">-&gt;<pos:position pos:line="29" pos:column="57"/></operator><name pos:line="29" pos:column="54">oid<pos:position pos:line="29" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="29" pos:column="58"/></decl_stmt>
		<for pos:line="30" pos:column="17">for <control pos:line="30" pos:column="21">(<init><expr><name pos:line="30" pos:column="22">i<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <literal type="number" pos:line="30" pos:column="26">0<pos:position pos:line="30" pos:column="27"/></literal></expr>;<pos:position pos:line="30" pos:column="28"/></init> <condition><expr><name pos:line="30" pos:column="29">i<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">&lt;<pos:position pos:line="30" pos:column="35"/></operator> <name><name pos:line="30" pos:column="33">si<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">shallow<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">-&gt;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="46">nr<pos:position pos:line="30" pos:column="48"/></name></name></expr>;<pos:position pos:line="30" pos:column="49"/></condition> <incr><expr><name pos:line="30" pos:column="50">i<pos:position pos:line="30" pos:column="51"/></name><operator pos:line="30" pos:column="51">++<pos:position pos:line="30" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="54"/></control>
			<block type="pseudo"><if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><call><name pos:line="31" pos:column="29">has_object_file<pos:position pos:line="31" pos:column="44"/></name><argument_list pos:line="31" pos:column="44">(<argument><expr><operator pos:line="31" pos:column="45">&amp;<pos:position pos:line="31" pos:column="50"/></operator><name><name pos:line="31" pos:column="46">oid<pos:position pos:line="31" pos:column="49"/></name><index pos:line="31" pos:column="49">[<expr><name pos:line="31" pos:column="50">i<pos:position pos:line="31" pos:column="51"/></name></expr>]<pos:position pos:line="31" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="54"/></condition><then pos:line="31" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="33">oid_array_append<pos:position pos:line="32" pos:column="49"/></name><argument_list pos:line="32" pos:column="49">(<argument><expr><operator pos:line="32" pos:column="50">&amp;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="51">extra<pos:position pos:line="32" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="58">&amp;<pos:position pos:line="32" pos:column="63"/></operator><name><name pos:line="32" pos:column="59">oid<pos:position pos:line="32" pos:column="62"/></name><index pos:line="32" pos:column="62">[<expr><name pos:line="32" pos:column="63">i<pos:position pos:line="32" pos:column="64"/></name></expr>]<pos:position pos:line="32" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt></block></then></if></block></for>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name><name pos:line="33" pos:column="21">extra<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">.<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="27">nr<pos:position pos:line="33" pos:column="29"/></name></name></expr>)<pos:position pos:line="33" pos:column="30"/></condition><then pos:line="33" pos:column="30"> <block pos:line="33" pos:column="31">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">setup_alternate_shallow<pos:position pos:line="34" pos:column="48"/></name><argument_list pos:line="34" pos:column="48">(<argument><expr><operator pos:line="34" pos:column="49">&amp;<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="50">shallow_lock<pos:position pos:line="34" pos:column="62"/></name></expr></argument>,
						<argument><expr><operator pos:line="35" pos:column="49">&amp;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="50">alternate_shallow_file<pos:position pos:line="35" pos:column="72"/></name></expr></argument>,
						<argument><expr><operator pos:line="36" pos:column="49">&amp;<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="50">extra<pos:position pos:line="36" pos:column="55"/></name></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">commit_lock_file<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">(<argument><expr><operator pos:line="37" pos:column="42">&amp;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="43">shallow_lock<pos:position pos:line="37" pos:column="55"/></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">oid_array_clear<pos:position pos:line="39" pos:column="32"/></name><argument_list pos:line="39" pos:column="32">(<argument><expr><operator pos:line="39" pos:column="33">&amp;<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="34">extra<pos:position pos:line="39" pos:column="39"/></name></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
		<return pos:line="40" pos:column="17">return;<pos:position pos:line="40" pos:column="24"/></return>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><name><name pos:line="43" pos:column="14">si<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">nr_ours<pos:position pos:line="43" pos:column="25"/></name></name> <operator pos:line="43" pos:column="26">&amp;&amp;<pos:position pos:line="43" pos:column="36"/></operator> <operator pos:line="43" pos:column="29">!<pos:position pos:line="43" pos:column="30"/></operator><name><name pos:line="43" pos:column="30">si<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">-&gt;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="34">nr_theirs<pos:position pos:line="43" pos:column="43"/></name></name></expr>)<pos:position pos:line="43" pos:column="44"/></condition><then pos:line="43" pos:column="44">
		<block type="pseudo"><return pos:line="44" pos:column="17">return;<pos:position pos:line="44" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="46" pos:column="9">remove_nonexistent_theirs_shallow<pos:position pos:line="46" pos:column="42"/></name><argument_list pos:line="46" pos:column="42">(<argument><expr><name pos:line="46" pos:column="43">si<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="47"/></expr_stmt>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><name><name pos:line="47" pos:column="14">si<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">nr_ours<pos:position pos:line="47" pos:column="25"/></name></name> <operator pos:line="47" pos:column="26">&amp;&amp;<pos:position pos:line="47" pos:column="36"/></operator> <operator pos:line="47" pos:column="29">!<pos:position pos:line="47" pos:column="30"/></operator><name><name pos:line="47" pos:column="30">si<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">nr_theirs<pos:position pos:line="47" pos:column="43"/></name></name></expr>)<pos:position pos:line="47" pos:column="44"/></condition><then pos:line="47" pos:column="44">
		<block type="pseudo"><return pos:line="48" pos:column="17">return;<pos:position pos:line="48" pos:column="24"/></return></block></then></if>
	<for pos:line="49" pos:column="9">for <control pos:line="49" pos:column="13">(<init><expr><name pos:line="49" pos:column="14">i<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <literal type="number" pos:line="49" pos:column="18">0<pos:position pos:line="49" pos:column="19"/></literal></expr>;<pos:position pos:line="49" pos:column="20"/></init> <condition><expr><name pos:line="49" pos:column="21">i<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">&lt;<pos:position pos:line="49" pos:column="27"/></operator> <name pos:line="49" pos:column="25">nr_sought<pos:position pos:line="49" pos:column="34"/></name></expr>;<pos:position pos:line="49" pos:column="35"/></condition> <incr><expr><name pos:line="49" pos:column="36">i<pos:position pos:line="49" pos:column="37"/></name><operator pos:line="49" pos:column="37">++<pos:position pos:line="49" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="40"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="17">oid_array_append<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><operator pos:line="50" pos:column="34">&amp;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="35">ref<pos:position pos:line="50" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="40">&amp;<pos:position pos:line="50" pos:column="45"/></operator><name><name pos:line="50" pos:column="41">sought<pos:position pos:line="50" pos:column="47"/></name><index pos:line="50" pos:column="47">[<expr><name pos:line="50" pos:column="48">i<pos:position pos:line="50" pos:column="49"/></name></expr>]<pos:position pos:line="50" pos:column="50"/></index></name><operator pos:line="50" pos:column="50">-&gt;<pos:position pos:line="50" pos:column="55"/></operator><name pos:line="50" pos:column="52">old_oid<pos:position pos:line="50" pos:column="59"/></name></expr></argument>)<pos:position pos:line="50" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="61"/></expr_stmt></block></for>
	<expr_stmt><expr><name><name pos:line="51" pos:column="9">si<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">-&gt;<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="13">ref<pos:position pos:line="51" pos:column="16"/></name></name> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <operator pos:line="51" pos:column="19">&amp;<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="20">ref<pos:position pos:line="51" pos:column="23"/></name></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt>

	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name><name pos:line="53" pos:column="13">args<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">-&gt;<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="19">update_shallow<pos:position pos:line="53" pos:column="33"/></name></name></expr>)<pos:position pos:line="53" pos:column="34"/></condition><then pos:line="53" pos:column="34"> <block pos:line="53" pos:column="35">{
		<comment type="block" pos:line="54" pos:column="17">/*
		 * remote is also shallow, .git/shallow may be updated
		 * so all refs can be accepted. Make sure we only add
		 * shallow roots that are actually reachable from new
		 * refs.
		 */</comment>
		<decl_stmt><decl><type><name><name pos:line="60" pos:column="17">struct<pos:position pos:line="60" pos:column="23"/></name> <name pos:line="60" pos:column="24">oid_array<pos:position pos:line="60" pos:column="33"/></name></name></type> <name pos:line="60" pos:column="34">extra<pos:position pos:line="60" pos:column="39"/></name> <init pos:line="60" pos:column="40">= <expr><name pos:line="60" pos:column="42">OID_ARRAY_INIT<pos:position pos:line="60" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="60" pos:column="57"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="61" pos:column="17">struct<pos:position pos:line="61" pos:column="23"/></name> <name pos:line="61" pos:column="24">object_id<pos:position pos:line="61" pos:column="33"/></name></name> <modifier pos:line="61" pos:column="34">*<pos:position pos:line="61" pos:column="35"/></modifier></type><name pos:line="61" pos:column="35">oid<pos:position pos:line="61" pos:column="38"/></name> <init pos:line="61" pos:column="39">= <expr><name><name pos:line="61" pos:column="41">si<pos:position pos:line="61" pos:column="43"/></name><operator pos:line="61" pos:column="43">-&gt;<pos:position pos:line="61" pos:column="48"/></operator><name pos:line="61" pos:column="45">shallow<pos:position pos:line="61" pos:column="52"/></name><operator pos:line="61" pos:column="52">-&gt;<pos:position pos:line="61" pos:column="57"/></operator><name pos:line="61" pos:column="54">oid<pos:position pos:line="61" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="61" pos:column="58"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">assign_shallow_commits_to_refs<pos:position pos:line="62" pos:column="47"/></name><argument_list pos:line="62" pos:column="47">(<argument><expr><name pos:line="62" pos:column="48">si<pos:position pos:line="62" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="52">NULL<pos:position pos:line="62" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="58">NULL<pos:position pos:line="62" pos:column="62"/></name></expr></argument>)<pos:position pos:line="62" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="64"/></expr_stmt>
		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><operator pos:line="63" pos:column="21">!<pos:position pos:line="63" pos:column="22"/></operator><name><name pos:line="63" pos:column="22">si<pos:position pos:line="63" pos:column="24"/></name><operator pos:line="63" pos:column="24">-&gt;<pos:position pos:line="63" pos:column="29"/></operator><name pos:line="63" pos:column="26">nr_ours<pos:position pos:line="63" pos:column="33"/></name></name> <operator pos:line="63" pos:column="34">&amp;&amp;<pos:position pos:line="63" pos:column="44"/></operator> <operator pos:line="63" pos:column="37">!<pos:position pos:line="63" pos:column="38"/></operator><name><name pos:line="63" pos:column="38">si<pos:position pos:line="63" pos:column="40"/></name><operator pos:line="63" pos:column="40">-&gt;<pos:position pos:line="63" pos:column="45"/></operator><name pos:line="63" pos:column="42">nr_theirs<pos:position pos:line="63" pos:column="51"/></name></name></expr>)<pos:position pos:line="63" pos:column="52"/></condition><then pos:line="63" pos:column="52"> <block pos:line="63" pos:column="53">{
			<expr_stmt><expr><call><name pos:line="64" pos:column="25">oid_array_clear<pos:position pos:line="64" pos:column="40"/></name><argument_list pos:line="64" pos:column="40">(<argument><expr><operator pos:line="64" pos:column="41">&amp;<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="42">ref<pos:position pos:line="64" pos:column="45"/></name></expr></argument>)<pos:position pos:line="64" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="47"/></expr_stmt>
			<return pos:line="65" pos:column="25">return;<pos:position pos:line="65" pos:column="32"/></return>
		}<pos:position pos:line="66" pos:column="18"/></block></then></if>
		<for pos:line="67" pos:column="17">for <control pos:line="67" pos:column="21">(<init><expr><name pos:line="67" pos:column="22">i<pos:position pos:line="67" pos:column="23"/></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <literal type="number" pos:line="67" pos:column="26">0<pos:position pos:line="67" pos:column="27"/></literal></expr>;<pos:position pos:line="67" pos:column="28"/></init> <condition><expr><name pos:line="67" pos:column="29">i<pos:position pos:line="67" pos:column="30"/></name> <operator pos:line="67" pos:column="31">&lt;<pos:position pos:line="67" pos:column="35"/></operator> <name><name pos:line="67" pos:column="33">si<pos:position pos:line="67" pos:column="35"/></name><operator pos:line="67" pos:column="35">-&gt;<pos:position pos:line="67" pos:column="40"/></operator><name pos:line="67" pos:column="37">nr_ours<pos:position pos:line="67" pos:column="44"/></name></name></expr>;<pos:position pos:line="67" pos:column="45"/></condition> <incr><expr><name pos:line="67" pos:column="46">i<pos:position pos:line="67" pos:column="47"/></name><operator pos:line="67" pos:column="47">++<pos:position pos:line="67" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="50"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="25">oid_array_append<pos:position pos:line="68" pos:column="41"/></name><argument_list pos:line="68" pos:column="41">(<argument><expr><operator pos:line="68" pos:column="42">&amp;<pos:position pos:line="68" pos:column="47"/></operator><name pos:line="68" pos:column="43">extra<pos:position pos:line="68" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="50">&amp;<pos:position pos:line="68" pos:column="55"/></operator><name><name pos:line="68" pos:column="51">oid<pos:position pos:line="68" pos:column="54"/></name><index pos:line="68" pos:column="54">[<expr><name><name pos:line="68" pos:column="55">si<pos:position pos:line="68" pos:column="57"/></name><operator pos:line="68" pos:column="57">-&gt;<pos:position pos:line="68" pos:column="62"/></operator><name pos:line="68" pos:column="59">ours<pos:position pos:line="68" pos:column="63"/></name><index pos:line="68" pos:column="63">[<expr><name pos:line="68" pos:column="64">i<pos:position pos:line="68" pos:column="65"/></name></expr>]<pos:position pos:line="68" pos:column="66"/></index></name></expr>]<pos:position pos:line="68" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="68" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="69"/></expr_stmt></block></for>
		<for pos:line="69" pos:column="17">for <control pos:line="69" pos:column="21">(<init><expr><name pos:line="69" pos:column="22">i<pos:position pos:line="69" pos:column="23"/></name> <operator pos:line="69" pos:column="24">=<pos:position pos:line="69" pos:column="25"/></operator> <literal type="number" pos:line="69" pos:column="26">0<pos:position pos:line="69" pos:column="27"/></literal></expr>;<pos:position pos:line="69" pos:column="28"/></init> <condition><expr><name pos:line="69" pos:column="29">i<pos:position pos:line="69" pos:column="30"/></name> <operator pos:line="69" pos:column="31">&lt;<pos:position pos:line="69" pos:column="35"/></operator> <name><name pos:line="69" pos:column="33">si<pos:position pos:line="69" pos:column="35"/></name><operator pos:line="69" pos:column="35">-&gt;<pos:position pos:line="69" pos:column="40"/></operator><name pos:line="69" pos:column="37">nr_theirs<pos:position pos:line="69" pos:column="46"/></name></name></expr>;<pos:position pos:line="69" pos:column="47"/></condition> <incr><expr><name pos:line="69" pos:column="48">i<pos:position pos:line="69" pos:column="49"/></name><operator pos:line="69" pos:column="49">++<pos:position pos:line="69" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="69" pos:column="52"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="25">oid_array_append<pos:position pos:line="70" pos:column="41"/></name><argument_list pos:line="70" pos:column="41">(<argument><expr><operator pos:line="70" pos:column="42">&amp;<pos:position pos:line="70" pos:column="47"/></operator><name pos:line="70" pos:column="43">extra<pos:position pos:line="70" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="50">&amp;<pos:position pos:line="70" pos:column="55"/></operator><name><name pos:line="70" pos:column="51">oid<pos:position pos:line="70" pos:column="54"/></name><index pos:line="70" pos:column="54">[<expr><name><name pos:line="70" pos:column="55">si<pos:position pos:line="70" pos:column="57"/></name><operator pos:line="70" pos:column="57">-&gt;<pos:position pos:line="70" pos:column="62"/></operator><name pos:line="70" pos:column="59">theirs<pos:position pos:line="70" pos:column="65"/></name><index pos:line="70" pos:column="65">[<expr><name pos:line="70" pos:column="66">i<pos:position pos:line="70" pos:column="67"/></name></expr>]<pos:position pos:line="70" pos:column="68"/></index></name></expr>]<pos:position pos:line="70" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="70" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="71"/></expr_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="71" pos:column="17">setup_alternate_shallow<pos:position pos:line="71" pos:column="40"/></name><argument_list pos:line="71" pos:column="40">(<argument><expr><operator pos:line="71" pos:column="41">&amp;<pos:position pos:line="71" pos:column="46"/></operator><name pos:line="71" pos:column="42">shallow_lock<pos:position pos:line="71" pos:column="54"/></name></expr></argument>,
					<argument><expr><operator pos:line="72" pos:column="41">&amp;<pos:position pos:line="72" pos:column="46"/></operator><name pos:line="72" pos:column="42">alternate_shallow_file<pos:position pos:line="72" pos:column="64"/></name></expr></argument>,
					<argument><expr><operator pos:line="73" pos:column="41">&amp;<pos:position pos:line="73" pos:column="46"/></operator><name pos:line="73" pos:column="42">extra<pos:position pos:line="73" pos:column="47"/></name></expr></argument>)<pos:position pos:line="73" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">commit_lock_file<pos:position pos:line="74" pos:column="33"/></name><argument_list pos:line="74" pos:column="33">(<argument><expr><operator pos:line="74" pos:column="34">&amp;<pos:position pos:line="74" pos:column="39"/></operator><name pos:line="74" pos:column="35">shallow_lock<pos:position pos:line="74" pos:column="47"/></name></expr></argument>)<pos:position pos:line="74" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="75" pos:column="17">oid_array_clear<pos:position pos:line="75" pos:column="32"/></name><argument_list pos:line="75" pos:column="32">(<argument><expr><operator pos:line="75" pos:column="33">&amp;<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="34">extra<pos:position pos:line="75" pos:column="39"/></name></expr></argument>)<pos:position pos:line="75" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="76" pos:column="17">oid_array_clear<pos:position pos:line="76" pos:column="32"/></name><argument_list pos:line="76" pos:column="32">(<argument><expr><operator pos:line="76" pos:column="33">&amp;<pos:position pos:line="76" pos:column="38"/></operator><name pos:line="76" pos:column="34">ref<pos:position pos:line="76" pos:column="37"/></name></expr></argument>)<pos:position pos:line="76" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="39"/></expr_stmt>
		<return pos:line="77" pos:column="17">return;<pos:position pos:line="77" pos:column="24"/></return>
	}<pos:position pos:line="78" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="80" pos:column="9">/*
	 * remote is also shallow, check what ref is safe to update
	 * without updating .git/shallow
	 */</comment>
	<expr_stmt><expr><name pos:line="84" pos:column="9">status<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <call><name pos:line="84" pos:column="18">xcalloc<pos:position pos:line="84" pos:column="25"/></name><argument_list pos:line="84" pos:column="25">(<argument><expr><name pos:line="84" pos:column="26">nr_sought<pos:position pos:line="84" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="37">sizeof<argument_list pos:line="84" pos:column="43">(<argument><expr><operator pos:line="84" pos:column="44">*<pos:position pos:line="84" pos:column="45"/></operator><name pos:line="84" pos:column="45">status<pos:position pos:line="84" pos:column="51"/></name></expr></argument>)<pos:position pos:line="84" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="84" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="85" pos:column="9">assign_shallow_commits_to_refs<pos:position pos:line="85" pos:column="39"/></name><argument_list pos:line="85" pos:column="39">(<argument><expr><name pos:line="85" pos:column="40">si<pos:position pos:line="85" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="44">NULL<pos:position pos:line="85" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="50">status<pos:position pos:line="85" pos:column="56"/></name></expr></argument>)<pos:position pos:line="85" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="58"/></expr_stmt>
	<if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name><name pos:line="86" pos:column="13">si<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">-&gt;<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="17">nr_ours<pos:position pos:line="86" pos:column="24"/></name></name> <operator pos:line="86" pos:column="25">||<pos:position pos:line="86" pos:column="27"/></operator> <name><name pos:line="86" pos:column="28">si<pos:position pos:line="86" pos:column="30"/></name><operator pos:line="86" pos:column="30">-&gt;<pos:position pos:line="86" pos:column="35"/></operator><name pos:line="86" pos:column="32">nr_theirs<pos:position pos:line="86" pos:column="41"/></name></name></expr>)<pos:position pos:line="86" pos:column="42"/></condition><then pos:line="86" pos:column="42"> <block pos:line="86" pos:column="43">{
		<for pos:line="87" pos:column="17">for <control pos:line="87" pos:column="21">(<init><expr><name pos:line="87" pos:column="22">i<pos:position pos:line="87" pos:column="23"/></name> <operator pos:line="87" pos:column="24">=<pos:position pos:line="87" pos:column="25"/></operator> <literal type="number" pos:line="87" pos:column="26">0<pos:position pos:line="87" pos:column="27"/></literal></expr>;<pos:position pos:line="87" pos:column="28"/></init> <condition><expr><name pos:line="87" pos:column="29">i<pos:position pos:line="87" pos:column="30"/></name> <operator pos:line="87" pos:column="31">&lt;<pos:position pos:line="87" pos:column="35"/></operator> <name pos:line="87" pos:column="33">nr_sought<pos:position pos:line="87" pos:column="42"/></name></expr>;<pos:position pos:line="87" pos:column="43"/></condition> <incr><expr><name pos:line="87" pos:column="44">i<pos:position pos:line="87" pos:column="45"/></name><operator pos:line="87" pos:column="45">++<pos:position pos:line="87" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="87" pos:column="48"/></control>
			<block type="pseudo"><if pos:line="88" pos:column="25">if <condition pos:line="88" pos:column="28">(<expr><name><name pos:line="88" pos:column="29">status<pos:position pos:line="88" pos:column="35"/></name><index pos:line="88" pos:column="35">[<expr><name pos:line="88" pos:column="36">i<pos:position pos:line="88" pos:column="37"/></name></expr>]<pos:position pos:line="88" pos:column="38"/></index></name></expr>)<pos:position pos:line="88" pos:column="39"/></condition><then pos:line="88" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="89" pos:column="33">sought<pos:position pos:line="89" pos:column="39"/></name><index pos:line="89" pos:column="39">[<expr><name pos:line="89" pos:column="40">i<pos:position pos:line="89" pos:column="41"/></name></expr>]<pos:position pos:line="89" pos:column="42"/></index></name><operator pos:line="89" pos:column="42">-&gt;<pos:position pos:line="89" pos:column="47"/></operator><name pos:line="89" pos:column="44">status<pos:position pos:line="89" pos:column="50"/></name> <operator pos:line="89" pos:column="51">=<pos:position pos:line="89" pos:column="52"/></operator> <name pos:line="89" pos:column="53">REF_STATUS_REJECT_SHALLOW<pos:position pos:line="89" pos:column="78"/></name></expr>;<pos:position pos:line="89" pos:column="79"/></expr_stmt></block></then></if></block></for>
	}<pos:position pos:line="90" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="91" pos:column="9">free<pos:position pos:line="91" pos:column="13"/></name><argument_list pos:line="91" pos:column="13">(<argument><expr><name pos:line="91" pos:column="14">status<pos:position pos:line="91" pos:column="20"/></name></expr></argument>)<pos:position pos:line="91" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="92" pos:column="9">oid_array_clear<pos:position pos:line="92" pos:column="24"/></name><argument_list pos:line="92" pos:column="24">(<argument><expr><operator pos:line="92" pos:column="25">&amp;<pos:position pos:line="92" pos:column="30"/></operator><name pos:line="92" pos:column="26">ref<pos:position pos:line="92" pos:column="29"/></name></expr></argument>)<pos:position pos:line="92" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="31"/></expr_stmt>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1732_git-2.5.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">parse_attr<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">src<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">lineno<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">cp<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">attr_state<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">e<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">ep<pos:position pos:line="4" pos:column="23"/></name></decl>, <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="26">equals<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">ep<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">cp<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">+<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">strcspn<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">cp<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="31">blank<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">equals<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">strchr<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">cp<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="29">'='<pos:position pos:line="8" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">equals<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">&amp;&amp;<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="23">ep<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">&lt;<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="28">equals<pos:position pos:line="9" pos:column="34"/></name></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">equals<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">NULL<pos:position pos:line="10" pos:column="30"/></name></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">equals<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">len<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">equals<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">-<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="32">cp<pos:position pos:line="12" pos:column="34"/></name></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt></block></then>
	<else pos:line="13" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">len<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">ep<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">-<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="28">cp<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt></block></else></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">e<pos:position pos:line="15" pos:column="15"/></name></expr>)<pos:position pos:line="15" pos:column="16"/></condition><then pos:line="15" pos:column="16"> <block pos:line="15" pos:column="17">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">*<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">cp<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">==<pos:position pos:line="16" pos:column="27"/></operator> <literal type="char" pos:line="16" pos:column="28">'-'<pos:position pos:line="16" pos:column="31"/></literal> <operator pos:line="16" pos:column="32">||<pos:position pos:line="16" pos:column="34"/></operator> <operator pos:line="16" pos:column="35">*<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="36">cp<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">==<pos:position pos:line="16" pos:column="41"/></operator> <literal type="char" pos:line="16" pos:column="42">'!'<pos:position pos:line="16" pos:column="45"/></literal></expr>)<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46"> <block pos:line="16" pos:column="47">{
			<expr_stmt><expr><name pos:line="17" pos:column="25">cp<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">++<pos:position pos:line="17" pos:column="29"/></operator></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
			<expr_stmt><expr><name pos:line="18" pos:column="25">len<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">--<pos:position pos:line="18" pos:column="30"/></operator></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">invalid_attr_name<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">cp<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">len<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="48"/></condition><then pos:line="20" pos:column="48"> <block pos:line="20" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">fprintf<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">stderr<pos:position pos:line="21" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="22" pos:column="33">"%.*s is not a valid attribute name: %s:%d\n"<pos:position pos:line="22" pos:column="78"/></literal></expr></argument>,
				<argument><expr><name pos:line="23" pos:column="33">len<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">cp<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">src<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">lineno<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
			<return pos:line="24" pos:column="25">return <expr><name pos:line="24" pos:column="32">NULL<pos:position pos:line="24" pos:column="36"/></name></expr>;<pos:position pos:line="24" pos:column="37"/></return>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></then> <else pos:line="26" pos:column="11">else <block pos:line="26" pos:column="16">{
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">*<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">cp<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">==<pos:position pos:line="27" pos:column="27"/></operator> <literal type="char" pos:line="27" pos:column="28">'-'<pos:position pos:line="27" pos:column="31"/></literal> <operator pos:line="27" pos:column="32">||<pos:position pos:line="27" pos:column="34"/></operator> <operator pos:line="27" pos:column="35">*<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="36">cp<pos:position pos:line="27" pos:column="38"/></name> <operator pos:line="27" pos:column="39">==<pos:position pos:line="27" pos:column="41"/></operator> <literal type="char" pos:line="27" pos:column="42">'!'<pos:position pos:line="27" pos:column="45"/></literal></expr>)<pos:position pos:line="27" pos:column="46"/></condition><then pos:line="27" pos:column="46"> <block pos:line="27" pos:column="47">{
			<expr_stmt><expr><name><name pos:line="28" pos:column="25">e<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">setto<pos:position pos:line="28" pos:column="33"/></name></name> <operator pos:line="28" pos:column="34">=<pos:position pos:line="28" pos:column="35"/></operator> <ternary><condition><expr><operator pos:line="28" pos:column="36">(<pos:position pos:line="28" pos:column="37"/></operator><operator pos:line="28" pos:column="37">*<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="38">cp<pos:position pos:line="28" pos:column="40"/></name> <operator pos:line="28" pos:column="41">==<pos:position pos:line="28" pos:column="43"/></operator> <literal type="char" pos:line="28" pos:column="44">'-'<pos:position pos:line="28" pos:column="47"/></literal><operator pos:line="28" pos:column="47">)<pos:position pos:line="28" pos:column="48"/></operator></expr> ?<pos:position pos:line="28" pos:column="50"/></condition><then pos:line="28" pos:column="50"> <expr><name pos:line="28" pos:column="51">ATTR__FALSE<pos:position pos:line="28" pos:column="62"/></name></expr> <pos:position pos:line="28" pos:column="63"/></then><else pos:line="28" pos:column="63">: <expr><name pos:line="28" pos:column="65">ATTR__UNSET<pos:position pos:line="28" pos:column="76"/></name></expr></else></ternary></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><name pos:line="29" pos:column="25">cp<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">++<pos:position pos:line="29" pos:column="29"/></operator></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">len<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">--<pos:position pos:line="30" pos:column="30"/></operator></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></then>
		<elseif pos:line="32" pos:column="17">else <if pos:line="32" pos:column="22">if <condition pos:line="32" pos:column="25">(<expr><operator pos:line="32" pos:column="26">!<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="27">equals<pos:position pos:line="32" pos:column="33"/></name></expr>)<pos:position pos:line="32" pos:column="34"/></condition><then pos:line="32" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="25">e<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">-&gt;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="28">setto<pos:position pos:line="33" pos:column="33"/></name></name> <operator pos:line="33" pos:column="34">=<pos:position pos:line="33" pos:column="35"/></operator> <name pos:line="33" pos:column="36">ATTR__TRUE<pos:position pos:line="33" pos:column="46"/></name></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt></block></then></if></elseif>
		<else pos:line="34" pos:column="17">else <block pos:line="34" pos:column="22">{
			<expr_stmt><expr><name><name pos:line="35" pos:column="25">e<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">-&gt;<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="28">setto<pos:position pos:line="35" pos:column="33"/></name></name> <operator pos:line="35" pos:column="34">=<pos:position pos:line="35" pos:column="35"/></operator> <call><name pos:line="35" pos:column="36">xmemdupz<pos:position pos:line="35" pos:column="44"/></name><argument_list pos:line="35" pos:column="44">(<argument><expr><name pos:line="35" pos:column="45">equals<pos:position pos:line="35" pos:column="51"/></name> <operator pos:line="35" pos:column="52">+<pos:position pos:line="35" pos:column="53"/></operator> <literal type="number" pos:line="35" pos:column="54">1<pos:position pos:line="35" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="57">ep<pos:position pos:line="35" pos:column="59"/></name> <operator pos:line="35" pos:column="60">-<pos:position pos:line="35" pos:column="61"/></operator> <name pos:line="35" pos:column="62">equals<pos:position pos:line="35" pos:column="68"/></name> <operator pos:line="35" pos:column="69">-<pos:position pos:line="35" pos:column="70"/></operator> <literal type="number" pos:line="35" pos:column="71">1<pos:position pos:line="35" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="74"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name><name pos:line="37" pos:column="17">e<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">attr<pos:position pos:line="37" pos:column="24"/></name></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <call><name pos:line="37" pos:column="27">git_attr_internal<pos:position pos:line="37" pos:column="44"/></name><argument_list pos:line="37" pos:column="44">(<argument><expr><name pos:line="37" pos:column="45">cp<pos:position pos:line="37" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="49">len<pos:position pos:line="37" pos:column="52"/></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></else></if>
	<return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">ep<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">+<pos:position pos:line="39" pos:column="20"/></operator> <call><name pos:line="39" pos:column="21">strspn<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">ep<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">blank<pos:position pos:line="39" pos:column="37"/></name></expr></argument>)<pos:position pos:line="39" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="39"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

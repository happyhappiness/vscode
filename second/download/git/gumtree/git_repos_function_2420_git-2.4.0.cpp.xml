<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2420_git-2.4.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">merged_entry<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">cache_entry<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ce<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">cache_entry<pos:position pos:line="2" pos:column="49"/></name></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">old<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="3" pos:column="25">struct<pos:position pos:line="3" pos:column="31"/></name> <name pos:line="3" pos:column="32">unpack_trees_options<pos:position pos:line="3" pos:column="52"/></name></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">o<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">update<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">CE_UPDATE<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">cache_entry<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">merge<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><call><name pos:line="6" pos:column="37">dup_entry<pos:position pos:line="6" pos:column="46"/></name><argument_list pos:line="6" pos:column="46">(<argument><expr><name pos:line="6" pos:column="47">ce<pos:position pos:line="6" pos:column="49"/></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">old<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18"> <block pos:line="8" pos:column="19">{
		<comment type="block" pos:line="9" pos:column="17">/*
		 * New index entries. In sparse checkout, the following
		 * verify_absent() will be delayed until after
		 * traverse_trees() finishes in unpack_trees(), then:
		 *
		 *  - CE_NEW_SKIP_WORKTREE will be computed correctly
		 *  - verify_absent() be called again, this time with
		 *    correct CE_NEW_SKIP_WORKTREE
		 *
		 * verify_absent() call here does nothing in sparse
		 * checkout (i.e. o-&gt;skip_sparse_checkout == 0)
		 */</comment>
		<expr_stmt><expr><name pos:line="21" pos:column="17">update<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">|=<pos:position pos:line="21" pos:column="26"/></operator> <name pos:line="21" pos:column="27">CE_ADDED<pos:position pos:line="21" pos:column="35"/></name></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">merge<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">ce_flags<pos:position pos:line="22" pos:column="32"/></name></name> <operator pos:line="22" pos:column="33">|=<pos:position pos:line="22" pos:column="35"/></operator> <name pos:line="22" pos:column="36">CE_NEW_SKIP_WORKTREE<pos:position pos:line="22" pos:column="56"/></name></expr>;<pos:position pos:line="22" pos:column="57"/></expr_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">verify_absent<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">merge<pos:position pos:line="24" pos:column="40"/></name></expr></argument>,
				  <argument><expr><name pos:line="25" pos:column="35">ERROR_WOULD_LOSE_UNTRACKED_OVERWRITTEN<pos:position pos:line="25" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="75">o<pos:position pos:line="25" pos:column="76"/></name></expr></argument>)<pos:position pos:line="25" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="78"/></condition><then pos:line="25" pos:column="78"> <block pos:line="25" pos:column="79">{
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">free<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">merge<pos:position pos:line="26" pos:column="35"/></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
			<return pos:line="27" pos:column="25">return <expr><operator pos:line="27" pos:column="32">-<pos:position pos:line="27" pos:column="33"/></operator><literal type="number" pos:line="27" pos:column="33">1<pos:position pos:line="27" pos:column="34"/></literal></expr>;<pos:position pos:line="27" pos:column="35"/></return>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">invalidate_ce_path<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">merge<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">o<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></then> <elseif pos:line="30" pos:column="11">else <if pos:line="30" pos:column="16">if <condition pos:line="30" pos:column="19">(<expr><operator pos:line="30" pos:column="20">!<pos:position pos:line="30" pos:column="21"/></operator><operator pos:line="30" pos:column="21">(<pos:position pos:line="30" pos:column="22"/></operator><name><name pos:line="30" pos:column="22">old<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">ce_flags<pos:position pos:line="30" pos:column="35"/></name></name> <operator pos:line="30" pos:column="36">&amp;<pos:position pos:line="30" pos:column="41"/></operator> <name pos:line="30" pos:column="38">CE_CONFLICTED<pos:position pos:line="30" pos:column="51"/></name><operator pos:line="30" pos:column="51">)<pos:position pos:line="30" pos:column="52"/></operator></expr>)<pos:position pos:line="30" pos:column="53"/></condition><then pos:line="30" pos:column="53"> <block pos:line="30" pos:column="54">{
		<comment type="block" pos:line="31" pos:column="17">/*
		 * See if we can re-use the old CE directly?
		 * That way we get the uptodate stat info.
		 *
		 * This also removes the UPDATE flag on a match; otherwise
		 * we will end up overwriting local changes in the work tree.
		 */</comment>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">same<pos:position pos:line="38" pos:column="25"/></name><argument_list pos:line="38" pos:column="25">(<argument><expr><name pos:line="38" pos:column="26">old<pos:position pos:line="38" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="31">merge<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="38"/></condition><then pos:line="38" pos:column="38"> <block pos:line="38" pos:column="39">{
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">copy_cache_entry<pos:position pos:line="39" pos:column="41"/></name><argument_list pos:line="39" pos:column="41">(<argument><expr><name pos:line="39" pos:column="42">merge<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="49">old<pos:position pos:line="39" pos:column="52"/></name></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><name pos:line="40" pos:column="25">update<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">=<pos:position pos:line="40" pos:column="33"/></operator> <literal type="number" pos:line="40" pos:column="34">0<pos:position pos:line="40" pos:column="35"/></literal></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></then> <else pos:line="41" pos:column="19">else <block pos:line="41" pos:column="24">{
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><call><name pos:line="42" pos:column="29">verify_uptodate<pos:position pos:line="42" pos:column="44"/></name><argument_list pos:line="42" pos:column="44">(<argument><expr><name pos:line="42" pos:column="45">old<pos:position pos:line="42" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="50">o<pos:position pos:line="42" pos:column="51"/></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="53"/></condition><then pos:line="42" pos:column="53"> <block pos:line="42" pos:column="54">{
				<expr_stmt><expr><call><name pos:line="43" pos:column="33">free<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><name pos:line="43" pos:column="38">merge<pos:position pos:line="43" pos:column="43"/></name></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt>
				<return pos:line="44" pos:column="33">return <expr><operator pos:line="44" pos:column="40">-<pos:position pos:line="44" pos:column="41"/></operator><literal type="number" pos:line="44" pos:column="41">1<pos:position pos:line="44" pos:column="42"/></literal></expr>;<pos:position pos:line="44" pos:column="43"/></return>
			}<pos:position pos:line="45" pos:column="26"/></block></then></if>
			<comment type="block" pos:line="46" pos:column="25">/* Migrate old flags over */</comment>
			<expr_stmt><expr><name pos:line="47" pos:column="25">update<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">|=<pos:position pos:line="47" pos:column="34"/></operator> <name><name pos:line="47" pos:column="35">old<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">-&gt;<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="40">ce_flags<pos:position pos:line="47" pos:column="48"/></name></name> <operator pos:line="47" pos:column="49">&amp;<pos:position pos:line="47" pos:column="54"/></operator> <operator pos:line="47" pos:column="51">(<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="52">CE_SKIP_WORKTREE<pos:position pos:line="47" pos:column="68"/></name> <operator pos:line="47" pos:column="69">|<pos:position pos:line="47" pos:column="70"/></operator> <name pos:line="47" pos:column="71">CE_NEW_SKIP_WORKTREE<pos:position pos:line="47" pos:column="91"/></name><operator pos:line="47" pos:column="91">)<pos:position pos:line="47" pos:column="92"/></operator></expr>;<pos:position pos:line="47" pos:column="93"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">invalidate_ce_path<pos:position pos:line="48" pos:column="43"/></name><argument_list pos:line="48" pos:column="43">(<argument><expr><name pos:line="48" pos:column="44">old<pos:position pos:line="48" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="49">o<pos:position pos:line="48" pos:column="50"/></name></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="49" pos:column="18"/></block></else></if>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if></elseif> <else pos:line="50" pos:column="11">else <block pos:line="50" pos:column="16">{
		<comment type="block" pos:line="51" pos:column="17">/*
		 * Previously unmerged entry left as an existence
		 * marker by read_index_unmerged();
		 */</comment>
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">invalidate_ce_path<pos:position pos:line="55" pos:column="35"/></name><argument_list pos:line="55" pos:column="35">(<argument><expr><name pos:line="55" pos:column="36">old<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="41">o<pos:position pos:line="55" pos:column="42"/></name></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="56" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="58" pos:column="9">do_add_entry<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">o<pos:position pos:line="58" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="25">merge<pos:position pos:line="58" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="32">update<pos:position pos:line="58" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="40">CE_STAGEMASK<pos:position pos:line="58" pos:column="52"/></name></expr></argument>)<pos:position pos:line="58" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="54"/></expr_stmt>
	<return pos:line="59" pos:column="9">return <expr><literal type="number" pos:line="59" pos:column="16">1<pos:position pos:line="59" pos:column="17"/></literal></expr>;<pos:position pos:line="59" pos:column="18"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

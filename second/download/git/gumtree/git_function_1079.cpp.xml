<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1079.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">read_index_from<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">index_state<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">istate<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">path<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">split_index<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">split_index<pos:position pos:line="3" pos:column="40"/></name></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* istate-&gt;initialized covers both .git/index and .git/sharedindex.xxx */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">istate<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">initialized<pos:position pos:line="7" pos:column="32"/></name></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><name><name pos:line="8" pos:column="24">istate<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-&gt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="32">cache_nr<pos:position pos:line="8" pos:column="40"/></name></name></expr>;<pos:position pos:line="8" pos:column="41"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">ret<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">do_read_index<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">istate<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="37">path<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="43">0<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">split_index<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name><name pos:line="12" pos:column="23">istate<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">split_index<pos:position pos:line="12" pos:column="42"/></name></name></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">split_index<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">||<pos:position pos:line="13" pos:column="28"/></operator> <call><name pos:line="13" pos:column="29">is_null_sha1<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><name><name pos:line="13" pos:column="42">split_index<pos:position pos:line="13" pos:column="53"/></name><operator pos:line="13" pos:column="53">-&gt;<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="55">base_sha1<pos:position pos:line="13" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="66"/></condition><then pos:line="13" pos:column="66"> <block pos:line="13" pos:column="67">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">post_read_index_from<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">istate<pos:position pos:line="14" pos:column="44"/></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><name pos:line="15" pos:column="24">ret<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">split_index<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-&gt;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="26">base<pos:position pos:line="18" pos:column="30"/></name></name></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">discard_index<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name><name pos:line="19" pos:column="31">split_index<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">base<pos:position pos:line="19" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt></block></then>
	<else pos:line="20" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="17">split_index<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">base<pos:position pos:line="21" pos:column="34"/></name></name> <operator pos:line="21" pos:column="35">=<pos:position pos:line="21" pos:column="36"/></operator> <call><name pos:line="21" pos:column="37">xcalloc<pos:position pos:line="21" pos:column="44"/></name><argument_list pos:line="21" pos:column="44">(<argument><expr><literal type="number" pos:line="21" pos:column="45">1<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="48">sizeof<argument_list pos:line="21" pos:column="54">(<argument><expr><operator pos:line="21" pos:column="55">*<pos:position pos:line="21" pos:column="56"/></operator><name><name pos:line="21" pos:column="56">split_index<pos:position pos:line="21" pos:column="67"/></name><operator pos:line="21" pos:column="67">-&gt;<pos:position pos:line="21" pos:column="72"/></operator><name pos:line="21" pos:column="69">base<pos:position pos:line="21" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="76"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name pos:line="22" pos:column="9">ret<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">do_read_index<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name><name pos:line="22" pos:column="29">split_index<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">base<pos:position pos:line="22" pos:column="46"/></name></name></expr></argument>,
			    <argument><expr><call><name pos:line="23" pos:column="29">git_path<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><literal type="string" pos:line="23" pos:column="38">"sharedindex.%s"<pos:position pos:line="23" pos:column="54"/></literal></expr></argument>,
				     <argument><expr><call><name pos:line="24" pos:column="38">sha1_to_hex<pos:position pos:line="24" pos:column="49"/></name><argument_list pos:line="24" pos:column="49">(<argument><expr><name><name pos:line="24" pos:column="50">split_index<pos:position pos:line="24" pos:column="61"/></name><operator pos:line="24" pos:column="61">-&gt;<pos:position pos:line="24" pos:column="66"/></operator><name pos:line="24" pos:column="63">base_sha1<pos:position pos:line="24" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="76">1<pos:position pos:line="24" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="79"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">hashcmp<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name><name pos:line="25" pos:column="21">split_index<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">base_sha1<pos:position pos:line="25" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="45">split_index<pos:position pos:line="25" pos:column="56"/></name><operator pos:line="25" pos:column="56">-&gt;<pos:position pos:line="25" pos:column="61"/></operator><name pos:line="25" pos:column="58">base<pos:position pos:line="25" pos:column="62"/></name><operator pos:line="25" pos:column="62">-&gt;<pos:position pos:line="25" pos:column="67"/></operator><name pos:line="25" pos:column="64">sha1<pos:position pos:line="25" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="70"/></condition><then pos:line="25" pos:column="70">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">die<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><literal type="string" pos:line="26" pos:column="21">"broken index, expect %s in %s, got %s"<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>,
		    <argument><expr><call><name pos:line="27" pos:column="21">sha1_to_hex<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name><name pos:line="27" pos:column="33">split_index<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">-&gt;<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="46">base_sha1<pos:position pos:line="27" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr></argument>,
		    <argument><expr><call><name pos:line="28" pos:column="21">git_path<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><literal type="string" pos:line="28" pos:column="30">"sharedindex.%s"<pos:position pos:line="28" pos:column="46"/></literal></expr></argument>,
			     <argument><expr><call><name pos:line="29" pos:column="30">sha1_to_hex<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name><name pos:line="29" pos:column="42">split_index<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">-&gt;<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="55">base_sha1<pos:position pos:line="29" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr></argument>,
		    <argument><expr><call><name pos:line="30" pos:column="21">sha1_to_hex<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name><name pos:line="30" pos:column="33">split_index<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">-&gt;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="46">base<pos:position pos:line="30" pos:column="50"/></name><operator pos:line="30" pos:column="50">-&gt;<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="52">sha1<pos:position pos:line="30" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="59"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">merge_base_index<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">istate<pos:position pos:line="31" pos:column="32"/></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">post_read_index_from<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">istate<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
	<return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">ret<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

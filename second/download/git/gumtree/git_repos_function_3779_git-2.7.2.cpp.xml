<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3779_git-2.7.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">checkout_fast_forward<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">unsigned<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">head<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
			  <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">unsigned<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">remote<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="3" pos:column="27">int<pos:position pos:line="3" pos:column="30"/></name></type> <name pos:line="3" pos:column="31">overwrite_ignore<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">tree<pos:position pos:line="5" pos:column="20"/></name></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name><name pos:line="5" pos:column="22">trees<pos:position pos:line="5" pos:column="27"/></name><index pos:line="5" pos:column="27">[<expr><name pos:line="5" pos:column="28">MAX_UNPACK_TREES<pos:position pos:line="5" pos:column="44"/></name></expr>]<pos:position pos:line="5" pos:column="45"/></index></name></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">unpack_trees_options<pos:position pos:line="6" pos:column="36"/></name></name></type> <name pos:line="6" pos:column="37">opts<pos:position pos:line="6" pos:column="41"/></name></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">tree_desc<pos:position pos:line="7" pos:column="25"/></name></name></type> <name><name pos:line="7" pos:column="26">t<pos:position pos:line="7" pos:column="27"/></name><index pos:line="7" pos:column="27">[<expr><name pos:line="7" pos:column="28">MAX_UNPACK_TREES<pos:position pos:line="7" pos:column="44"/></name></expr>]<pos:position pos:line="7" pos:column="45"/></index></name></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="16">nr_trees<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><literal type="number" pos:line="8" pos:column="27">0<pos:position pos:line="8" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">dir_struct<pos:position pos:line="9" pos:column="26"/></name></name></type> <name pos:line="9" pos:column="27">dir<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">lock_file<pos:position pos:line="10" pos:column="25"/></name></name> <modifier pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></modifier></type><name pos:line="10" pos:column="27">lock_file<pos:position pos:line="10" pos:column="36"/></name> <init pos:line="10" pos:column="37">= <expr><call><name pos:line="10" pos:column="39">xcalloc<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><literal type="number" pos:line="10" pos:column="47">1<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="50">sizeof<argument_list pos:line="10" pos:column="56">(<argument><expr pos:line="10" pos:column="57">struct <name pos:line="10" pos:column="64">lock_file<pos:position pos:line="10" pos:column="73"/></name></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="76"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">refresh_cache<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">REFRESH_QUIET<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">hold_locked_index<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">lock_file<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="38">1<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">memset<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><operator pos:line="16" pos:column="16">&amp;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="17">trees<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="27">sizeof<argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">trees<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">memset<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><operator pos:line="17" pos:column="16">&amp;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="17">opts<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="23">0<pos:position pos:line="17" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="26">sizeof<argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">opts<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">memset<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><operator pos:line="18" pos:column="16">&amp;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="17">t<pos:position pos:line="18" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="20">0<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="23">sizeof<argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">t<pos:position pos:line="18" pos:column="31"/></name></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">overwrite_ignore<pos:position pos:line="19" pos:column="29"/></name></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30"> <block pos:line="19" pos:column="31">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">memset<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="25">dir<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="30">0<pos:position pos:line="20" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="33">sizeof<argument_list pos:line="20" pos:column="39">(<argument><expr><name pos:line="20" pos:column="40">dir<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">dir<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">.<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">flags<pos:position pos:line="21" pos:column="26"/></name></name> <operator pos:line="21" pos:column="27">|=<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="30">DIR_SHOW_IGNORED<pos:position pos:line="21" pos:column="46"/></name></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">setup_standard_excludes<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><operator pos:line="22" pos:column="41">&amp;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="42">dir<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="23" pos:column="17">opts<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">.<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">dir<pos:position pos:line="23" pos:column="25"/></name></name> <operator pos:line="23" pos:column="26">=<pos:position pos:line="23" pos:column="27"/></operator> <operator pos:line="23" pos:column="28">&amp;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="29">dir<pos:position pos:line="23" pos:column="32"/></name></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="26" pos:column="9">opts<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">.<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">head_idx<pos:position pos:line="26" pos:column="22"/></name></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <literal type="number" pos:line="26" pos:column="25">1<pos:position pos:line="26" pos:column="26"/></literal></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">opts<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">.<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">src_index<pos:position pos:line="27" pos:column="23"/></name></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <operator pos:line="27" pos:column="26">&amp;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="27">the_index<pos:position pos:line="27" pos:column="36"/></name></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">opts<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">.<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">dst_index<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <operator pos:line="28" pos:column="26">&amp;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="27">the_index<pos:position pos:line="28" pos:column="36"/></name></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">opts<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">.<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">update<pos:position pos:line="29" pos:column="20"/></name></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <literal type="number" pos:line="29" pos:column="23">1<pos:position pos:line="29" pos:column="24"/></literal></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">opts<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">.<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">verbose_update<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <literal type="number" pos:line="30" pos:column="31">1<pos:position pos:line="30" pos:column="32"/></literal></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">opts<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">.<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">merge<pos:position pos:line="31" pos:column="19"/></name></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <literal type="number" pos:line="31" pos:column="22">1<pos:position pos:line="31" pos:column="23"/></literal></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="32" pos:column="9">opts<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">.<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">fn<pos:position pos:line="32" pos:column="16"/></name></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name pos:line="32" pos:column="19">twoway_merge<pos:position pos:line="32" pos:column="31"/></name></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">setup_unpack_trees_porcelain<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">(<argument><expr><operator pos:line="33" pos:column="38">&amp;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="39">opts<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="45">"merge"<pos:position pos:line="33" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="35" pos:column="9">trees<pos:position pos:line="35" pos:column="14"/></name><index pos:line="35" pos:column="14">[<expr><name pos:line="35" pos:column="15">nr_trees<pos:position pos:line="35" pos:column="23"/></name></expr>]<pos:position pos:line="35" pos:column="24"/></index></name> <operator pos:line="35" pos:column="25">=<pos:position pos:line="35" pos:column="26"/></operator> <call><name pos:line="35" pos:column="27">parse_tree_indirect<pos:position pos:line="35" pos:column="46"/></name><argument_list pos:line="35" pos:column="46">(<argument><expr><name pos:line="35" pos:column="47">head<pos:position pos:line="35" pos:column="51"/></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name><name pos:line="36" pos:column="14">trees<pos:position pos:line="36" pos:column="19"/></name><index pos:line="36" pos:column="19">[<expr><name pos:line="36" pos:column="20">nr_trees<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">++<pos:position pos:line="36" pos:column="30"/></operator></expr>]<pos:position pos:line="36" pos:column="31"/></index></name></expr>)<pos:position pos:line="36" pos:column="32"/></condition><then pos:line="36" pos:column="32">
		<block type="pseudo"><return pos:line="37" pos:column="17">return <expr><operator pos:line="37" pos:column="24">-<pos:position pos:line="37" pos:column="25"/></operator><literal type="number" pos:line="37" pos:column="25">1<pos:position pos:line="37" pos:column="26"/></literal></expr>;<pos:position pos:line="37" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="38" pos:column="9">trees<pos:position pos:line="38" pos:column="14"/></name><index pos:line="38" pos:column="14">[<expr><name pos:line="38" pos:column="15">nr_trees<pos:position pos:line="38" pos:column="23"/></name></expr>]<pos:position pos:line="38" pos:column="24"/></index></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <call><name pos:line="38" pos:column="27">parse_tree_indirect<pos:position pos:line="38" pos:column="46"/></name><argument_list pos:line="38" pos:column="46">(<argument><expr><name pos:line="38" pos:column="47">remote<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">!<pos:position pos:line="39" pos:column="14"/></operator><name><name pos:line="39" pos:column="14">trees<pos:position pos:line="39" pos:column="19"/></name><index pos:line="39" pos:column="19">[<expr><name pos:line="39" pos:column="20">nr_trees<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">++<pos:position pos:line="39" pos:column="30"/></operator></expr>]<pos:position pos:line="39" pos:column="31"/></index></name></expr>)<pos:position pos:line="39" pos:column="32"/></condition><then pos:line="39" pos:column="32">
		<block type="pseudo"><return pos:line="40" pos:column="17">return <expr><operator pos:line="40" pos:column="24">-<pos:position pos:line="40" pos:column="25"/></operator><literal type="number" pos:line="40" pos:column="25">1<pos:position pos:line="40" pos:column="26"/></literal></expr>;<pos:position pos:line="40" pos:column="27"/></return></block></then></if>
	<for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init><expr><name pos:line="41" pos:column="14">i<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <literal type="number" pos:line="41" pos:column="18">0<pos:position pos:line="41" pos:column="19"/></literal></expr>;<pos:position pos:line="41" pos:column="20"/></init> <condition><expr><name pos:line="41" pos:column="21">i<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">&lt;<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="25">nr_trees<pos:position pos:line="41" pos:column="33"/></name></expr>;<pos:position pos:line="41" pos:column="34"/></condition> <incr><expr><name pos:line="41" pos:column="35">i<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">++<pos:position pos:line="41" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="39"/></control> <block pos:line="41" pos:column="40">{
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">parse_tree<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name><name pos:line="42" pos:column="28">trees<pos:position pos:line="42" pos:column="33"/></name><index pos:line="42" pos:column="33">[<expr><name pos:line="42" pos:column="34">i<pos:position pos:line="42" pos:column="35"/></name></expr>]<pos:position pos:line="42" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">init_tree_desc<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name pos:line="43" pos:column="32">t<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">+<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="34">i<pos:position pos:line="43" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="37">trees<pos:position pos:line="43" pos:column="42"/></name><index pos:line="43" pos:column="42">[<expr><name pos:line="43" pos:column="43">i<pos:position pos:line="43" pos:column="44"/></name></expr>]<pos:position pos:line="43" pos:column="45"/></index></name><operator pos:line="43" pos:column="45">-&gt;<pos:position pos:line="43" pos:column="50"/></operator><name pos:line="43" pos:column="47">buffer<pos:position pos:line="43" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="55">trees<pos:position pos:line="43" pos:column="60"/></name><index pos:line="43" pos:column="60">[<expr><name pos:line="43" pos:column="61">i<pos:position pos:line="43" pos:column="62"/></name></expr>]<pos:position pos:line="43" pos:column="63"/></index></name><operator pos:line="43" pos:column="63">-&gt;<pos:position pos:line="43" pos:column="68"/></operator><name pos:line="43" pos:column="65">size<pos:position pos:line="43" pos:column="69"/></name></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="71"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></for>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">unpack_trees<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">nr_trees<pos:position pos:line="45" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="36">t<pos:position pos:line="45" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="39">&amp;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="40">opts<pos:position pos:line="45" pos:column="44"/></name></expr></argument>)<pos:position pos:line="45" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="46"/></condition><then pos:line="45" pos:column="46">
		<block type="pseudo"><return pos:line="46" pos:column="17">return <expr><operator pos:line="46" pos:column="24">-<pos:position pos:line="46" pos:column="25"/></operator><literal type="number" pos:line="46" pos:column="25">1<pos:position pos:line="46" pos:column="26"/></literal></expr>;<pos:position pos:line="46" pos:column="27"/></return></block></then></if>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name pos:line="47" pos:column="13">write_locked_index<pos:position pos:line="47" pos:column="31"/></name><argument_list pos:line="47" pos:column="31">(<argument><expr><operator pos:line="47" pos:column="32">&amp;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="33">the_index<pos:position pos:line="47" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="44">lock_file<pos:position pos:line="47" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="55">COMMIT_LOCK<pos:position pos:line="47" pos:column="66"/></name></expr></argument>)<pos:position pos:line="47" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="68"/></condition><then pos:line="47" pos:column="68">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="17">die<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><call><name pos:line="48" pos:column="21">_<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><literal type="string" pos:line="48" pos:column="23">"unable to write new index file"<pos:position pos:line="48" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="58"/></expr_stmt></block></then></if>
	<return pos:line="49" pos:column="9">return <expr><literal type="number" pos:line="49" pos:column="16">0<pos:position pos:line="49" pos:column="17"/></literal></expr>;<pos:position pos:line="49" pos:column="18"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

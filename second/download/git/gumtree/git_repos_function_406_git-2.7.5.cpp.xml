<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_406_git-2.7.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">notes_cache_put<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">notes_cache<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">c<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">unsigned<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name></type> <name><name pos:line="1" pos:column="58">key_sha1<pos:position pos:line="1" pos:column="66"/></name><index pos:line="1" pos:column="66">[<expr><literal type="number" pos:line="1" pos:column="67">20<pos:position pos:line="1" pos:column="69"/></literal></expr>]<pos:position pos:line="1" pos:column="70"/></index></name></decl></parameter>,
		    <parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">data<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">size_t<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">size<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name></type> <name><name pos:line="4" pos:column="23">value_sha1<pos:position pos:line="4" pos:column="33"/></name><index pos:line="4" pos:column="33">[<expr><literal type="number" pos:line="4" pos:column="34">20<pos:position pos:line="4" pos:column="36"/></literal></expr>]<pos:position pos:line="4" pos:column="37"/></index></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">write_sha1_file<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><name pos:line="6" pos:column="29">data<pos:position pos:line="6" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="35">size<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="41">"blob"<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="49">value_sha1<pos:position pos:line="6" pos:column="59"/></name></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call> <operator pos:line="6" pos:column="61">&lt;<pos:position pos:line="6" pos:column="65"/></operator> <literal type="number" pos:line="6" pos:column="63">0<pos:position pos:line="6" pos:column="64"/></literal></expr>)<pos:position pos:line="6" pos:column="65"/></condition><then pos:line="6" pos:column="65">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr>;<pos:position pos:line="7" pos:column="27"/></return></block></then></if>
	<return pos:line="8" pos:column="9">return <expr><call><name pos:line="8" pos:column="16">add_note<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><operator pos:line="8" pos:column="25">&amp;<pos:position pos:line="8" pos:column="30"/></operator><name><name pos:line="8" pos:column="26">c<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">tree<pos:position pos:line="8" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">key_sha1<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="45">value_sha1<pos:position pos:line="8" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="57">NULL<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="63"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

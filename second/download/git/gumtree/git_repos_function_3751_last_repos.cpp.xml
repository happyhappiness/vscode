<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3751_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">find_unpushed_submodules<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">oid_array<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">commits<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">remotes_name<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="43">struct<pos:position pos:line="2" pos:column="49"/></name> <name pos:line="2" pos:column="50">string_list<pos:position pos:line="2" pos:column="61"/></name></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">needs_pushing<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">string_list<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">submodules<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><name pos:line="4" pos:column="41">STRING_LIST_INIT_DUP<pos:position pos:line="4" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">string_list_item<pos:position pos:line="5" pos:column="32"/></name></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">submodule<pos:position pos:line="5" pos:column="43"/></name></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">argv_array<pos:position pos:line="6" pos:column="26"/></name></name></type> <name pos:line="6" pos:column="27">argv<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><name pos:line="6" pos:column="34">ARGV_ARRAY_INIT<pos:position pos:line="6" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* argv.argv[0] will be ignored by setup_revisions */</comment>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">argv_array_push<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><operator pos:line="9" pos:column="25">&amp;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="26">argv<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="32">"find_unpushed_submodules"<pos:position pos:line="9" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">oid_array_for_each_unique<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">commits<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">append_oid_to_argv<pos:position pos:line="10" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="64">&amp;<pos:position pos:line="10" pos:column="69"/></operator><name pos:line="10" pos:column="65">argv<pos:position pos:line="10" pos:column="69"/></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">argv_array_push<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><operator pos:line="11" pos:column="25">&amp;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="26">argv<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="32">"--not"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">argv_array_pushf<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><operator pos:line="12" pos:column="26">&amp;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="27">argv<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="33">"--remotes=%s"<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">remotes_name<pos:position pos:line="12" pos:column="61"/></name></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="63"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">collect_changed_submodules<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><operator pos:line="14" pos:column="36">&amp;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="37">submodules<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="49">&amp;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="50">argv<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>

	<macro><name pos:line="16" pos:column="9">for_each_string_list_item<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument pos:line="16" pos:column="35">submodule<pos:position pos:line="16" pos:column="44"/></argument>, <argument pos:line="16" pos:column="46">&amp;submodules<pos:position pos:line="16" pos:column="57"/></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></macro> <block pos:line="16" pos:column="59">{
		<decl_stmt><decl><type><name><name pos:line="17" pos:column="17">struct<pos:position pos:line="17" pos:column="23"/></name> <name pos:line="17" pos:column="24">oid_array<pos:position pos:line="17" pos:column="33"/></name></name> <modifier pos:line="17" pos:column="34">*<pos:position pos:line="17" pos:column="35"/></modifier></type><name pos:line="17" pos:column="35">commits<pos:position pos:line="17" pos:column="42"/></name> <init pos:line="17" pos:column="43">= <expr><name><name pos:line="17" pos:column="45">submodule<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">-&gt;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="56">util<pos:position pos:line="17" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="61"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="18" pos:column="17">const<pos:position pos:line="18" pos:column="22"/></specifier> <name pos:line="18" pos:column="23">char<pos:position pos:line="18" pos:column="27"/></name> <modifier pos:line="18" pos:column="28">*<pos:position pos:line="18" pos:column="29"/></modifier></type><name pos:line="18" pos:column="29">path<pos:position pos:line="18" pos:column="33"/></name> <init pos:line="18" pos:column="34">= <expr><name><name pos:line="18" pos:column="36">submodule<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">-&gt;<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="47">string<pos:position pos:line="18" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="18" pos:column="54"/></decl_stmt>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">submodule_needs_pushing<pos:position pos:line="20" pos:column="44"/></name><argument_list pos:line="20" pos:column="44">(<argument><expr><name pos:line="20" pos:column="45">path<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">commits<pos:position pos:line="20" pos:column="58"/></name></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="60"/></condition><then pos:line="20" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">string_list_insert<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">needs_pushing<pos:position pos:line="21" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="59">path<pos:position pos:line="21" pos:column="63"/></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block>

	<expr_stmt><expr><call><name pos:line="24" pos:column="9">free_submodules_oids<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><operator pos:line="24" pos:column="30">&amp;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="31">submodules<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">argv_array_clear<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><operator pos:line="25" pos:column="26">&amp;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="27">argv<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>

	<return pos:line="27" pos:column="9">return <expr><name><name pos:line="27" pos:column="16">needs_pushing<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">nr<pos:position pos:line="27" pos:column="33"/></name></name></expr>;<pos:position pos:line="27" pos:column="34"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

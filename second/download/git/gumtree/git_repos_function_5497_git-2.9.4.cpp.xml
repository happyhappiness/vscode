<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5497_git-2.9.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_update_index<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">argc<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">argv<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">prefix<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">newfd<pos:position pos:line="3" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="20">entries<pos:position pos:line="3" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="29">has_errors<pos:position pos:line="3" pos:column="39"/></name> <init pos:line="3" pos:column="40">= <expr><literal type="number" pos:line="3" pos:column="42">0<pos:position pos:line="3" pos:column="43"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="45">nul_term_line<pos:position pos:line="3" pos:column="58"/></name> <init pos:line="3" pos:column="59">= <expr><literal type="number" pos:line="3" pos:column="61">0<pos:position pos:line="3" pos:column="62"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">enum<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">uc_mode<pos:position pos:line="4" pos:column="21"/></name></name></type> <name pos:line="4" pos:column="22">untracked_cache<pos:position pos:line="4" pos:column="37"/></name> <init pos:line="4" pos:column="38">= <expr><name pos:line="4" pos:column="40">UC_UNSPECIFIED<pos:position pos:line="4" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">read_from_stdin<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><literal type="number" pos:line="5" pos:column="31">0<pos:position pos:line="5" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">prefix_length<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><ternary><condition><expr><name pos:line="6" pos:column="29">prefix<pos:position pos:line="6" pos:column="35"/></name></expr> ?<pos:position pos:line="6" pos:column="37"/></condition><then pos:line="6" pos:column="37"> <expr><call><name pos:line="6" pos:column="38">strlen<pos:position pos:line="6" pos:column="44"/></name><argument_list pos:line="6" pos:column="44">(<argument><expr><name pos:line="6" pos:column="45">prefix<pos:position pos:line="6" pos:column="51"/></name></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr> <pos:position pos:line="6" pos:column="53"/></then><else pos:line="6" pos:column="53">: <expr><literal type="number" pos:line="6" pos:column="55">0<pos:position pos:line="6" pos:column="56"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">preferred_index_format<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><literal type="number" pos:line="7" pos:column="38">0<pos:position pos:line="7" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">set_executable_bit<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><literal type="number" pos:line="8" pos:column="35">0<pos:position pos:line="8" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">refresh_params<pos:position pos:line="9" pos:column="30"/></name></name></type> <name pos:line="9" pos:column="31">refresh_args<pos:position pos:line="9" pos:column="43"/></name> <init pos:line="9" pos:column="44">= <expr><block pos:line="9" pos:column="46">{<expr><literal type="number" pos:line="9" pos:column="47">0<pos:position pos:line="9" pos:column="48"/></literal></expr>, <expr><operator pos:line="9" pos:column="50">&amp;<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="51">has_errors<pos:position pos:line="9" pos:column="61"/></name></expr>}<pos:position pos:line="9" pos:column="62"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">lock_error<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><literal type="number" pos:line="10" pos:column="26">0<pos:position pos:line="10" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">split_index<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><operator pos:line="11" pos:column="27">-<pos:position pos:line="11" pos:column="28"/></operator><literal type="number" pos:line="11" pos:column="28">1<pos:position pos:line="11" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">lock_file<pos:position pos:line="12" pos:column="25"/></name></name> <modifier pos:line="12" pos:column="26">*<pos:position pos:line="12" pos:column="27"/></modifier></type><name pos:line="12" pos:column="27">lock_file<pos:position pos:line="12" pos:column="36"/></name></decl>;<pos:position pos:line="12" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">parse_opt_ctx_t<pos:position pos:line="13" pos:column="31"/></name></name></type> <name pos:line="13" pos:column="32">ctx<pos:position pos:line="13" pos:column="35"/></name></decl>;<pos:position pos:line="13" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">strbuf_getline_fn<pos:position pos:line="14" pos:column="26"/></name></type> <name pos:line="14" pos:column="27">getline_fn<pos:position pos:line="14" pos:column="37"/></name></decl>;<pos:position pos:line="14" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">parseopt_state<pos:position pos:line="15" pos:column="27"/></name> <init pos:line="15" pos:column="28">= <expr><name pos:line="15" pos:column="30">PARSE_OPT_UNKNOWN<pos:position pos:line="15" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="16" pos:column="9">struct<pos:position pos:line="16" pos:column="15"/></name> <name pos:line="16" pos:column="16">option<pos:position pos:line="16" pos:column="22"/></name></name></type> <name><name pos:line="16" pos:column="23">options<pos:position pos:line="16" pos:column="30"/></name><index pos:line="16" pos:column="30">[]<pos:position pos:line="16" pos:column="32"/></index></name> <init pos:line="16" pos:column="33">= <expr><block pos:line="16" pos:column="35">{
		<expr><call><name pos:line="17" pos:column="17">OPT_BIT<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><literal type="char" pos:line="17" pos:column="25">'q'<pos:position pos:line="17" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">NULL<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="36">&amp;<pos:position pos:line="17" pos:column="41"/></operator><name><name pos:line="17" pos:column="37">refresh_args<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">.<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="50">flags<pos:position pos:line="17" pos:column="55"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="18" pos:column="25">N_<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><literal type="string" pos:line="18" pos:column="28">"continue refresh even when index needs update"<pos:position pos:line="18" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="19" pos:column="25">REFRESH_QUIET<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>,
		<expr><call><name pos:line="20" pos:column="17">OPT_BIT<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="28">"ignore-submodules"<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="49">&amp;<pos:position pos:line="20" pos:column="54"/></operator><name><name pos:line="20" pos:column="50">refresh_args<pos:position pos:line="20" pos:column="62"/></name><operator pos:line="20" pos:column="62">.<pos:position pos:line="20" pos:column="63"/></operator><name pos:line="20" pos:column="63">flags<pos:position pos:line="20" pos:column="68"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="21" pos:column="25">N_<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><literal type="string" pos:line="21" pos:column="28">"refresh: ignore submodules"<pos:position pos:line="21" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="22" pos:column="25">REFRESH_IGNORE_SUBMODULES<pos:position pos:line="22" pos:column="50"/></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>,
		<expr><call><name pos:line="23" pos:column="17">OPT_SET_INT<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><literal type="number" pos:line="23" pos:column="29">0<pos:position pos:line="23" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="32">"add"<pos:position pos:line="23" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="39">&amp;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="40">allow_add<pos:position pos:line="23" pos:column="49"/></name></expr></argument>,
			<argument><expr><call><name pos:line="24" pos:column="25">N_<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><literal type="string" pos:line="24" pos:column="28">"do not ignore new files"<pos:position pos:line="24" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="56">1<pos:position pos:line="24" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr>,
		<expr><call><name pos:line="25" pos:column="17">OPT_SET_INT<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><literal type="number" pos:line="25" pos:column="29">0<pos:position pos:line="25" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="32">"replace"<pos:position pos:line="25" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="43">&amp;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="44">allow_replace<pos:position pos:line="25" pos:column="57"/></name></expr></argument>,
			<argument><expr><call><name pos:line="26" pos:column="25">N_<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><literal type="string" pos:line="26" pos:column="28">"let files replace directories and vice-versa"<pos:position pos:line="26" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="77">1<pos:position pos:line="26" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="79"/></argument_list></call></expr>,
		<expr><call><name pos:line="27" pos:column="17">OPT_SET_INT<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><literal type="number" pos:line="27" pos:column="29">0<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="32">"remove"<pos:position pos:line="27" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="42">&amp;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="43">allow_remove<pos:position pos:line="27" pos:column="55"/></name></expr></argument>,
			<argument><expr><call><name pos:line="28" pos:column="25">N_<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><literal type="string" pos:line="28" pos:column="28">"notice files missing from worktree"<pos:position pos:line="28" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="67">1<pos:position pos:line="28" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call></expr>,
		<expr><call><name pos:line="29" pos:column="17">OPT_BIT<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><literal type="number" pos:line="29" pos:column="25">0<pos:position pos:line="29" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="28">"unmerged"<pos:position pos:line="29" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="40">&amp;<pos:position pos:line="29" pos:column="45"/></operator><name><name pos:line="29" pos:column="41">refresh_args<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">.<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="54">flags<pos:position pos:line="29" pos:column="59"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="30" pos:column="25">N_<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><literal type="string" pos:line="30" pos:column="28">"refresh even if index contains unmerged entries"<pos:position pos:line="30" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="31" pos:column="25">REFRESH_UNMERGED<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>,
		<expr><block pos:line="32" pos:column="17">{<expr><name pos:line="32" pos:column="18">OPTION_CALLBACK<pos:position pos:line="32" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="32" pos:column="35">0<pos:position pos:line="32" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="32" pos:column="38">"refresh"<pos:position pos:line="32" pos:column="47"/></literal></expr>, <expr><operator pos:line="32" pos:column="49">&amp;<pos:position pos:line="32" pos:column="54"/></operator><name pos:line="32" pos:column="50">refresh_args<pos:position pos:line="32" pos:column="62"/></name></expr>, <expr><name pos:line="32" pos:column="64">NULL<pos:position pos:line="32" pos:column="68"/></name></expr>,
			<expr><call><name pos:line="33" pos:column="25">N_<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><literal type="string" pos:line="33" pos:column="28">"refresh stat information"<pos:position pos:line="33" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>,
			<expr><name pos:line="34" pos:column="25">PARSE_OPT_NOARG<pos:position pos:line="34" pos:column="40"/></name> <operator pos:line="34" pos:column="41">|<pos:position pos:line="34" pos:column="42"/></operator> <name pos:line="34" pos:column="43">PARSE_OPT_NONEG<pos:position pos:line="34" pos:column="58"/></name></expr>,
			<expr><name pos:line="35" pos:column="25">refresh_callback<pos:position pos:line="35" pos:column="41"/></name></expr>}<pos:position pos:line="35" pos:column="42"/></block></expr>,
		<expr><block pos:line="36" pos:column="17">{<expr><name pos:line="36" pos:column="18">OPTION_CALLBACK<pos:position pos:line="36" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="36" pos:column="35">0<pos:position pos:line="36" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="36" pos:column="38">"really-refresh"<pos:position pos:line="36" pos:column="54"/></literal></expr>, <expr><operator pos:line="36" pos:column="56">&amp;<pos:position pos:line="36" pos:column="61"/></operator><name pos:line="36" pos:column="57">refresh_args<pos:position pos:line="36" pos:column="69"/></name></expr>, <expr><name pos:line="36" pos:column="71">NULL<pos:position pos:line="36" pos:column="75"/></name></expr>,
			<expr><call><name pos:line="37" pos:column="25">N_<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><literal type="string" pos:line="37" pos:column="28">"like --refresh, but ignore assume-unchanged setting"<pos:position pos:line="37" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="82"/></argument_list></call></expr>,
			<expr><name pos:line="38" pos:column="25">PARSE_OPT_NOARG<pos:position pos:line="38" pos:column="40"/></name> <operator pos:line="38" pos:column="41">|<pos:position pos:line="38" pos:column="42"/></operator> <name pos:line="38" pos:column="43">PARSE_OPT_NONEG<pos:position pos:line="38" pos:column="58"/></name></expr>,
			<expr><name pos:line="39" pos:column="25">really_refresh_callback<pos:position pos:line="39" pos:column="48"/></name></expr>}<pos:position pos:line="39" pos:column="49"/></block></expr>,
		<expr><block pos:line="40" pos:column="17">{<expr><name pos:line="40" pos:column="18">OPTION_LOWLEVEL_CALLBACK<pos:position pos:line="40" pos:column="42"/></name></expr>, <expr><literal type="number" pos:line="40" pos:column="44">0<pos:position pos:line="40" pos:column="45"/></literal></expr>, <expr><literal type="string" pos:line="40" pos:column="47">"cacheinfo"<pos:position pos:line="40" pos:column="58"/></literal></expr>, <expr><name pos:line="40" pos:column="60">NULL<pos:position pos:line="40" pos:column="64"/></name></expr>,
			<expr><call><name pos:line="41" pos:column="25">N_<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><literal type="string" pos:line="41" pos:column="28">"&lt;mode&gt;,&lt;object&gt;,&lt;path&gt;"<pos:position pos:line="41" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>,
			<expr><call><name pos:line="42" pos:column="25">N_<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><literal type="string" pos:line="42" pos:column="28">"add the specified entry to the index"<pos:position pos:line="42" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="67"/></argument_list></call></expr>,
			<expr><name pos:line="43" pos:column="25">PARSE_OPT_NOARG<pos:position pos:line="43" pos:column="40"/></name> <operator pos:line="43" pos:column="41">|<pos:position pos:line="43" pos:column="42"/></operator> <comment type="block" pos:line="43" pos:column="43">/* disallow --cacheinfo=&lt;mode&gt; form */</comment>
			<name pos:line="44" pos:column="25">PARSE_OPT_NONEG<pos:position pos:line="44" pos:column="40"/></name> <operator pos:line="44" pos:column="41">|<pos:position pos:line="44" pos:column="42"/></operator> <name pos:line="44" pos:column="43">PARSE_OPT_LITERAL_ARGHELP<pos:position pos:line="44" pos:column="68"/></name></expr>,
			<expr><operator pos:line="45" pos:column="25">(<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="26">parse_opt_cb<pos:position pos:line="45" pos:column="38"/></name> <operator pos:line="45" pos:column="39">*<pos:position pos:line="45" pos:column="40"/></operator><operator pos:line="45" pos:column="40">)<pos:position pos:line="45" pos:column="41"/></operator> <name pos:line="45" pos:column="42">cacheinfo_callback<pos:position pos:line="45" pos:column="60"/></name></expr>}<pos:position pos:line="45" pos:column="61"/></block></expr>,
		<expr><block pos:line="46" pos:column="17">{<expr><name pos:line="46" pos:column="18">OPTION_CALLBACK<pos:position pos:line="46" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="46" pos:column="35">0<pos:position pos:line="46" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="46" pos:column="38">"chmod"<pos:position pos:line="46" pos:column="45"/></literal></expr>, <expr><operator pos:line="46" pos:column="47">&amp;<pos:position pos:line="46" pos:column="52"/></operator><name pos:line="46" pos:column="48">set_executable_bit<pos:position pos:line="46" pos:column="66"/></name></expr>, <expr><call><name pos:line="46" pos:column="68">N_<pos:position pos:line="46" pos:column="70"/></name><argument_list pos:line="46" pos:column="70">(<argument><expr><literal type="string" pos:line="46" pos:column="71">"(+/-)x"<pos:position pos:line="46" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="80"/></argument_list></call></expr>,
			<expr><call><name pos:line="47" pos:column="25">N_<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><literal type="string" pos:line="47" pos:column="28">"override the executable bit of the listed files"<pos:position pos:line="47" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr>,
			<expr><name pos:line="48" pos:column="25">PARSE_OPT_NONEG<pos:position pos:line="48" pos:column="40"/></name> <operator pos:line="48" pos:column="41">|<pos:position pos:line="48" pos:column="42"/></operator> <name pos:line="48" pos:column="43">PARSE_OPT_LITERAL_ARGHELP<pos:position pos:line="48" pos:column="68"/></name></expr>,
			<expr><name pos:line="49" pos:column="25">chmod_callback<pos:position pos:line="49" pos:column="39"/></name></expr>}<pos:position pos:line="49" pos:column="40"/></block></expr>,
		<expr><block pos:line="50" pos:column="17">{<expr><name pos:line="50" pos:column="18">OPTION_SET_INT<pos:position pos:line="50" pos:column="32"/></name></expr>, <expr><literal type="number" pos:line="50" pos:column="34">0<pos:position pos:line="50" pos:column="35"/></literal></expr>, <expr><literal type="string" pos:line="50" pos:column="37">"assume-unchanged"<pos:position pos:line="50" pos:column="55"/></literal></expr>, <expr><operator pos:line="50" pos:column="57">&amp;<pos:position pos:line="50" pos:column="62"/></operator><name pos:line="50" pos:column="58">mark_valid_only<pos:position pos:line="50" pos:column="73"/></name></expr>, <expr><name pos:line="50" pos:column="75">NULL<pos:position pos:line="50" pos:column="79"/></name></expr>,
			<expr><call><name pos:line="51" pos:column="25">N_<pos:position pos:line="51" pos:column="27"/></name><argument_list pos:line="51" pos:column="27">(<argument><expr><literal type="string" pos:line="51" pos:column="28">"mark files as \"not changing\""<pos:position pos:line="51" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="61"/></argument_list></call></expr>,
			<expr><name pos:line="52" pos:column="25">PARSE_OPT_NOARG<pos:position pos:line="52" pos:column="40"/></name> <operator pos:line="52" pos:column="41">|<pos:position pos:line="52" pos:column="42"/></operator> <name pos:line="52" pos:column="43">PARSE_OPT_NONEG<pos:position pos:line="52" pos:column="58"/></name></expr>, <expr><name pos:line="52" pos:column="60">NULL<pos:position pos:line="52" pos:column="64"/></name></expr>, <expr><name pos:line="52" pos:column="66">MARK_FLAG<pos:position pos:line="52" pos:column="75"/></name></expr>}<pos:position pos:line="52" pos:column="76"/></block></expr>,
		<expr><block pos:line="53" pos:column="17">{<expr><name pos:line="53" pos:column="18">OPTION_SET_INT<pos:position pos:line="53" pos:column="32"/></name></expr>, <expr><literal type="number" pos:line="53" pos:column="34">0<pos:position pos:line="53" pos:column="35"/></literal></expr>, <expr><literal type="string" pos:line="53" pos:column="37">"no-assume-unchanged"<pos:position pos:line="53" pos:column="58"/></literal></expr>, <expr><operator pos:line="53" pos:column="60">&amp;<pos:position pos:line="53" pos:column="65"/></operator><name pos:line="53" pos:column="61">mark_valid_only<pos:position pos:line="53" pos:column="76"/></name></expr>, <expr><name pos:line="53" pos:column="78">NULL<pos:position pos:line="53" pos:column="82"/></name></expr>,
			<expr><call><name pos:line="54" pos:column="25">N_<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><literal type="string" pos:line="54" pos:column="28">"clear assumed-unchanged bit"<pos:position pos:line="54" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></call></expr>,
			<expr><name pos:line="55" pos:column="25">PARSE_OPT_NOARG<pos:position pos:line="55" pos:column="40"/></name> <operator pos:line="55" pos:column="41">|<pos:position pos:line="55" pos:column="42"/></operator> <name pos:line="55" pos:column="43">PARSE_OPT_NONEG<pos:position pos:line="55" pos:column="58"/></name></expr>, <expr><name pos:line="55" pos:column="60">NULL<pos:position pos:line="55" pos:column="64"/></name></expr>, <expr><name pos:line="55" pos:column="66">UNMARK_FLAG<pos:position pos:line="55" pos:column="77"/></name></expr>}<pos:position pos:line="55" pos:column="78"/></block></expr>,
		<expr><block pos:line="56" pos:column="17">{<expr><name pos:line="56" pos:column="18">OPTION_SET_INT<pos:position pos:line="56" pos:column="32"/></name></expr>, <expr><literal type="number" pos:line="56" pos:column="34">0<pos:position pos:line="56" pos:column="35"/></literal></expr>, <expr><literal type="string" pos:line="56" pos:column="37">"skip-worktree"<pos:position pos:line="56" pos:column="52"/></literal></expr>, <expr><operator pos:line="56" pos:column="54">&amp;<pos:position pos:line="56" pos:column="59"/></operator><name pos:line="56" pos:column="55">mark_skip_worktree_only<pos:position pos:line="56" pos:column="78"/></name></expr>, <expr><name pos:line="56" pos:column="80">NULL<pos:position pos:line="56" pos:column="84"/></name></expr>,
			<expr><call><name pos:line="57" pos:column="25">N_<pos:position pos:line="57" pos:column="27"/></name><argument_list pos:line="57" pos:column="27">(<argument><expr><literal type="string" pos:line="57" pos:column="28">"mark files as \"index-only\""<pos:position pos:line="57" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="59"/></argument_list></call></expr>,
			<expr><name pos:line="58" pos:column="25">PARSE_OPT_NOARG<pos:position pos:line="58" pos:column="40"/></name> <operator pos:line="58" pos:column="41">|<pos:position pos:line="58" pos:column="42"/></operator> <name pos:line="58" pos:column="43">PARSE_OPT_NONEG<pos:position pos:line="58" pos:column="58"/></name></expr>, <expr><name pos:line="58" pos:column="60">NULL<pos:position pos:line="58" pos:column="64"/></name></expr>, <expr><name pos:line="58" pos:column="66">MARK_FLAG<pos:position pos:line="58" pos:column="75"/></name></expr>}<pos:position pos:line="58" pos:column="76"/></block></expr>,
		<expr><block pos:line="59" pos:column="17">{<expr><name pos:line="59" pos:column="18">OPTION_SET_INT<pos:position pos:line="59" pos:column="32"/></name></expr>, <expr><literal type="number" pos:line="59" pos:column="34">0<pos:position pos:line="59" pos:column="35"/></literal></expr>, <expr><literal type="string" pos:line="59" pos:column="37">"no-skip-worktree"<pos:position pos:line="59" pos:column="55"/></literal></expr>, <expr><operator pos:line="59" pos:column="57">&amp;<pos:position pos:line="59" pos:column="62"/></operator><name pos:line="59" pos:column="58">mark_skip_worktree_only<pos:position pos:line="59" pos:column="81"/></name></expr>, <expr><name pos:line="59" pos:column="83">NULL<pos:position pos:line="59" pos:column="87"/></name></expr>,
			<expr><call><name pos:line="60" pos:column="25">N_<pos:position pos:line="60" pos:column="27"/></name><argument_list pos:line="60" pos:column="27">(<argument><expr><literal type="string" pos:line="60" pos:column="28">"clear skip-worktree bit"<pos:position pos:line="60" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="54"/></argument_list></call></expr>,
			<expr><name pos:line="61" pos:column="25">PARSE_OPT_NOARG<pos:position pos:line="61" pos:column="40"/></name> <operator pos:line="61" pos:column="41">|<pos:position pos:line="61" pos:column="42"/></operator> <name pos:line="61" pos:column="43">PARSE_OPT_NONEG<pos:position pos:line="61" pos:column="58"/></name></expr>, <expr><name pos:line="61" pos:column="60">NULL<pos:position pos:line="61" pos:column="64"/></name></expr>, <expr><name pos:line="61" pos:column="66">UNMARK_FLAG<pos:position pos:line="61" pos:column="77"/></name></expr>}<pos:position pos:line="61" pos:column="78"/></block></expr>,
		<expr><call><name pos:line="62" pos:column="17">OPT_SET_INT<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><literal type="number" pos:line="62" pos:column="29">0<pos:position pos:line="62" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="32">"info-only"<pos:position pos:line="62" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="62" pos:column="45">&amp;<pos:position pos:line="62" pos:column="50"/></operator><name pos:line="62" pos:column="46">info_only<pos:position pos:line="62" pos:column="55"/></name></expr></argument>,
			<argument><expr><call><name pos:line="63" pos:column="25">N_<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><literal type="string" pos:line="63" pos:column="28">"add to index only; do not add content to object database"<pos:position pos:line="63" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="87"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="89">1<pos:position pos:line="63" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="91"/></argument_list></call></expr>,
		<expr><call><name pos:line="64" pos:column="17">OPT_SET_INT<pos:position pos:line="64" pos:column="28"/></name><argument_list pos:line="64" pos:column="28">(<argument><expr><literal type="number" pos:line="64" pos:column="29">0<pos:position pos:line="64" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="32">"force-remove"<pos:position pos:line="64" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="64" pos:column="48">&amp;<pos:position pos:line="64" pos:column="53"/></operator><name pos:line="64" pos:column="49">force_remove<pos:position pos:line="64" pos:column="61"/></name></expr></argument>,
			<argument><expr><call><name pos:line="65" pos:column="25">N_<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><literal type="string" pos:line="65" pos:column="28">"remove named paths even if present in worktree"<pos:position pos:line="65" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="79">1<pos:position pos:line="65" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="81"/></argument_list></call></expr>,
		<expr><call><name pos:line="66" pos:column="17">OPT_BOOL<pos:position pos:line="66" pos:column="25"/></name><argument_list pos:line="66" pos:column="25">(<argument><expr><literal type="char" pos:line="66" pos:column="26">'z'<pos:position pos:line="66" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="31">NULL<pos:position pos:line="66" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="37">&amp;<pos:position pos:line="66" pos:column="42"/></operator><name pos:line="66" pos:column="38">nul_term_line<pos:position pos:line="66" pos:column="51"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="67" pos:column="26">N_<pos:position pos:line="67" pos:column="28"/></name><argument_list pos:line="67" pos:column="28">(<argument><expr><literal type="string" pos:line="67" pos:column="29">"with --stdin: input lines are terminated by null bytes"<pos:position pos:line="67" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="87"/></argument_list></call></expr>,
		<expr><block pos:line="68" pos:column="17">{<expr><name pos:line="68" pos:column="18">OPTION_LOWLEVEL_CALLBACK<pos:position pos:line="68" pos:column="42"/></name></expr>, <expr><literal type="number" pos:line="68" pos:column="44">0<pos:position pos:line="68" pos:column="45"/></literal></expr>, <expr><literal type="string" pos:line="68" pos:column="47">"stdin"<pos:position pos:line="68" pos:column="54"/></literal></expr>, <expr><operator pos:line="68" pos:column="56">&amp;<pos:position pos:line="68" pos:column="61"/></operator><name pos:line="68" pos:column="57">read_from_stdin<pos:position pos:line="68" pos:column="72"/></name></expr>, <expr><name pos:line="68" pos:column="74">NULL<pos:position pos:line="68" pos:column="78"/></name></expr>,
			<expr><call><name pos:line="69" pos:column="25">N_<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><literal type="string" pos:line="69" pos:column="28">"read list of paths to be updated from standard input"<pos:position pos:line="69" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="83"/></argument_list></call></expr>,
			<expr><name pos:line="70" pos:column="25">PARSE_OPT_NONEG<pos:position pos:line="70" pos:column="40"/></name> <operator pos:line="70" pos:column="41">|<pos:position pos:line="70" pos:column="42"/></operator> <name pos:line="70" pos:column="43">PARSE_OPT_NOARG<pos:position pos:line="70" pos:column="58"/></name></expr>,
			<expr><operator pos:line="71" pos:column="25">(<pos:position pos:line="71" pos:column="26"/></operator><name pos:line="71" pos:column="26">parse_opt_cb<pos:position pos:line="71" pos:column="38"/></name> <operator pos:line="71" pos:column="39">*<pos:position pos:line="71" pos:column="40"/></operator><operator pos:line="71" pos:column="40">)<pos:position pos:line="71" pos:column="41"/></operator> <name pos:line="71" pos:column="42">stdin_callback<pos:position pos:line="71" pos:column="56"/></name></expr>}<pos:position pos:line="71" pos:column="57"/></block></expr>,
		<expr><block pos:line="72" pos:column="17">{<expr><name pos:line="72" pos:column="18">OPTION_LOWLEVEL_CALLBACK<pos:position pos:line="72" pos:column="42"/></name></expr>, <expr><literal type="number" pos:line="72" pos:column="44">0<pos:position pos:line="72" pos:column="45"/></literal></expr>, <expr><literal type="string" pos:line="72" pos:column="47">"index-info"<pos:position pos:line="72" pos:column="59"/></literal></expr>, <expr><operator pos:line="72" pos:column="61">&amp;<pos:position pos:line="72" pos:column="66"/></operator><name pos:line="72" pos:column="62">nul_term_line<pos:position pos:line="72" pos:column="75"/></name></expr>, <expr><name pos:line="72" pos:column="77">NULL<pos:position pos:line="72" pos:column="81"/></name></expr>,
			<expr><call><name pos:line="73" pos:column="25">N_<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><literal type="string" pos:line="73" pos:column="28">"add entries from standard input to the index"<pos:position pos:line="73" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="75"/></argument_list></call></expr>,
			<expr><name pos:line="74" pos:column="25">PARSE_OPT_NONEG<pos:position pos:line="74" pos:column="40"/></name> <operator pos:line="74" pos:column="41">|<pos:position pos:line="74" pos:column="42"/></operator> <name pos:line="74" pos:column="43">PARSE_OPT_NOARG<pos:position pos:line="74" pos:column="58"/></name></expr>,
			<expr><operator pos:line="75" pos:column="25">(<pos:position pos:line="75" pos:column="26"/></operator><name pos:line="75" pos:column="26">parse_opt_cb<pos:position pos:line="75" pos:column="38"/></name> <operator pos:line="75" pos:column="39">*<pos:position pos:line="75" pos:column="40"/></operator><operator pos:line="75" pos:column="40">)<pos:position pos:line="75" pos:column="41"/></operator> <name pos:line="75" pos:column="42">stdin_cacheinfo_callback<pos:position pos:line="75" pos:column="66"/></name></expr>}<pos:position pos:line="75" pos:column="67"/></block></expr>,
		<expr><block pos:line="76" pos:column="17">{<expr><name pos:line="76" pos:column="18">OPTION_LOWLEVEL_CALLBACK<pos:position pos:line="76" pos:column="42"/></name></expr>, <expr><literal type="number" pos:line="76" pos:column="44">0<pos:position pos:line="76" pos:column="45"/></literal></expr>, <expr><literal type="string" pos:line="76" pos:column="47">"unresolve"<pos:position pos:line="76" pos:column="58"/></literal></expr>, <expr><operator pos:line="76" pos:column="60">&amp;<pos:position pos:line="76" pos:column="65"/></operator><name pos:line="76" pos:column="61">has_errors<pos:position pos:line="76" pos:column="71"/></name></expr>, <expr><name pos:line="76" pos:column="73">NULL<pos:position pos:line="76" pos:column="77"/></name></expr>,
			<expr><call><name pos:line="77" pos:column="25">N_<pos:position pos:line="77" pos:column="27"/></name><argument_list pos:line="77" pos:column="27">(<argument><expr><literal type="string" pos:line="77" pos:column="28">"repopulate stages #2 and #3 for the listed paths"<pos:position pos:line="77" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="79"/></argument_list></call></expr>,
			<expr><name pos:line="78" pos:column="25">PARSE_OPT_NONEG<pos:position pos:line="78" pos:column="40"/></name> <operator pos:line="78" pos:column="41">|<pos:position pos:line="78" pos:column="42"/></operator> <name pos:line="78" pos:column="43">PARSE_OPT_NOARG<pos:position pos:line="78" pos:column="58"/></name></expr>,
			<expr><operator pos:line="79" pos:column="25">(<pos:position pos:line="79" pos:column="26"/></operator><name pos:line="79" pos:column="26">parse_opt_cb<pos:position pos:line="79" pos:column="38"/></name> <operator pos:line="79" pos:column="39">*<pos:position pos:line="79" pos:column="40"/></operator><operator pos:line="79" pos:column="40">)<pos:position pos:line="79" pos:column="41"/></operator> <name pos:line="79" pos:column="42">unresolve_callback<pos:position pos:line="79" pos:column="60"/></name></expr>}<pos:position pos:line="79" pos:column="61"/></block></expr>,
		<expr><block pos:line="80" pos:column="17">{<expr><name pos:line="80" pos:column="18">OPTION_LOWLEVEL_CALLBACK<pos:position pos:line="80" pos:column="42"/></name></expr>, <expr><literal type="char" pos:line="80" pos:column="44">'g'<pos:position pos:line="80" pos:column="47"/></literal></expr>, <expr><literal type="string" pos:line="80" pos:column="49">"again"<pos:position pos:line="80" pos:column="56"/></literal></expr>, <expr><operator pos:line="80" pos:column="58">&amp;<pos:position pos:line="80" pos:column="63"/></operator><name pos:line="80" pos:column="59">has_errors<pos:position pos:line="80" pos:column="69"/></name></expr>, <expr><name pos:line="80" pos:column="71">NULL<pos:position pos:line="80" pos:column="75"/></name></expr>,
			<expr><call><name pos:line="81" pos:column="25">N_<pos:position pos:line="81" pos:column="27"/></name><argument_list pos:line="81" pos:column="27">(<argument><expr><literal type="string" pos:line="81" pos:column="28">"only update entries that differ from HEAD"<pos:position pos:line="81" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="72"/></argument_list></call></expr>,
			<expr><name pos:line="82" pos:column="25">PARSE_OPT_NONEG<pos:position pos:line="82" pos:column="40"/></name> <operator pos:line="82" pos:column="41">|<pos:position pos:line="82" pos:column="42"/></operator> <name pos:line="82" pos:column="43">PARSE_OPT_NOARG<pos:position pos:line="82" pos:column="58"/></name></expr>,
			<expr><operator pos:line="83" pos:column="25">(<pos:position pos:line="83" pos:column="26"/></operator><name pos:line="83" pos:column="26">parse_opt_cb<pos:position pos:line="83" pos:column="38"/></name> <operator pos:line="83" pos:column="39">*<pos:position pos:line="83" pos:column="40"/></operator><operator pos:line="83" pos:column="40">)<pos:position pos:line="83" pos:column="41"/></operator> <name pos:line="83" pos:column="42">reupdate_callback<pos:position pos:line="83" pos:column="59"/></name></expr>}<pos:position pos:line="83" pos:column="60"/></block></expr>,
		<expr><call><name pos:line="84" pos:column="17">OPT_BIT<pos:position pos:line="84" pos:column="24"/></name><argument_list pos:line="84" pos:column="24">(<argument><expr><literal type="number" pos:line="84" pos:column="25">0<pos:position pos:line="84" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="28">"ignore-missing"<pos:position pos:line="84" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="84" pos:column="46">&amp;<pos:position pos:line="84" pos:column="51"/></operator><name><name pos:line="84" pos:column="47">refresh_args<pos:position pos:line="84" pos:column="59"/></name><operator pos:line="84" pos:column="59">.<pos:position pos:line="84" pos:column="60"/></operator><name pos:line="84" pos:column="60">flags<pos:position pos:line="84" pos:column="65"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="85" pos:column="25">N_<pos:position pos:line="85" pos:column="27"/></name><argument_list pos:line="85" pos:column="27">(<argument><expr><literal type="string" pos:line="85" pos:column="28">"ignore files missing from worktree"<pos:position pos:line="85" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="65"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="86" pos:column="25">REFRESH_IGNORE_MISSING<pos:position pos:line="86" pos:column="47"/></name></expr></argument>)<pos:position pos:line="86" pos:column="48"/></argument_list></call></expr>,
		<expr><call><name pos:line="87" pos:column="17">OPT_SET_INT<pos:position pos:line="87" pos:column="28"/></name><argument_list pos:line="87" pos:column="28">(<argument><expr><literal type="number" pos:line="87" pos:column="29">0<pos:position pos:line="87" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="32">"verbose"<pos:position pos:line="87" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="87" pos:column="43">&amp;<pos:position pos:line="87" pos:column="48"/></operator><name pos:line="87" pos:column="44">verbose<pos:position pos:line="87" pos:column="51"/></name></expr></argument>,
			<argument><expr><call><name pos:line="88" pos:column="25">N_<pos:position pos:line="88" pos:column="27"/></name><argument_list pos:line="88" pos:column="27">(<argument><expr><literal type="string" pos:line="88" pos:column="28">"report actions to standard output"<pos:position pos:line="88" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="66">1<pos:position pos:line="88" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="68"/></argument_list></call></expr>,
		<expr><block pos:line="89" pos:column="17">{<expr><name pos:line="89" pos:column="18">OPTION_CALLBACK<pos:position pos:line="89" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="89" pos:column="35">0<pos:position pos:line="89" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="89" pos:column="38">"clear-resolve-undo"<pos:position pos:line="89" pos:column="58"/></literal></expr>, <expr><name pos:line="89" pos:column="60">NULL<pos:position pos:line="89" pos:column="64"/></name></expr>, <expr><name pos:line="89" pos:column="66">NULL<pos:position pos:line="89" pos:column="70"/></name></expr>,
			<expr><call><name pos:line="90" pos:column="25">N_<pos:position pos:line="90" pos:column="27"/></name><argument_list pos:line="90" pos:column="27">(<argument><expr><literal type="string" pos:line="90" pos:column="28">"(for porcelains) forget saved unresolved conflicts"<pos:position pos:line="90" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="81"/></argument_list></call></expr>,
			<expr><name pos:line="91" pos:column="25">PARSE_OPT_NOARG<pos:position pos:line="91" pos:column="40"/></name> <operator pos:line="91" pos:column="41">|<pos:position pos:line="91" pos:column="42"/></operator> <name pos:line="91" pos:column="43">PARSE_OPT_NONEG<pos:position pos:line="91" pos:column="58"/></name></expr>,
			<expr><name pos:line="92" pos:column="25">resolve_undo_clear_callback<pos:position pos:line="92" pos:column="52"/></name></expr>}<pos:position pos:line="92" pos:column="53"/></block></expr>,
		<expr><call><name pos:line="93" pos:column="17">OPT_INTEGER<pos:position pos:line="93" pos:column="28"/></name><argument_list pos:line="93" pos:column="28">(<argument><expr><literal type="number" pos:line="93" pos:column="29">0<pos:position pos:line="93" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="32">"index-version"<pos:position pos:line="93" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="93" pos:column="49">&amp;<pos:position pos:line="93" pos:column="54"/></operator><name pos:line="93" pos:column="50">preferred_index_format<pos:position pos:line="93" pos:column="72"/></name></expr></argument>,
			<argument><expr><call><name pos:line="94" pos:column="25">N_<pos:position pos:line="94" pos:column="27"/></name><argument_list pos:line="94" pos:column="27">(<argument><expr><literal type="string" pos:line="94" pos:column="28">"write index in this format"<pos:position pos:line="94" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="58"/></argument_list></call></expr>,
		<expr><call><name pos:line="95" pos:column="17">OPT_BOOL<pos:position pos:line="95" pos:column="25"/></name><argument_list pos:line="95" pos:column="25">(<argument><expr><literal type="number" pos:line="95" pos:column="26">0<pos:position pos:line="95" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="29">"split-index"<pos:position pos:line="95" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="95" pos:column="44">&amp;<pos:position pos:line="95" pos:column="49"/></operator><name pos:line="95" pos:column="45">split_index<pos:position pos:line="95" pos:column="56"/></name></expr></argument>,
			<argument><expr><call><name pos:line="96" pos:column="25">N_<pos:position pos:line="96" pos:column="27"/></name><argument_list pos:line="96" pos:column="27">(<argument><expr><literal type="string" pos:line="96" pos:column="28">"enable or disable split index"<pos:position pos:line="96" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="61"/></argument_list></call></expr>,
		<expr><call><name pos:line="97" pos:column="17">OPT_BOOL<pos:position pos:line="97" pos:column="25"/></name><argument_list pos:line="97" pos:column="25">(<argument><expr><literal type="number" pos:line="97" pos:column="26">0<pos:position pos:line="97" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="29">"untracked-cache"<pos:position pos:line="97" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="97" pos:column="48">&amp;<pos:position pos:line="97" pos:column="53"/></operator><name pos:line="97" pos:column="49">untracked_cache<pos:position pos:line="97" pos:column="64"/></name></expr></argument>,
			<argument><expr><call><name pos:line="98" pos:column="25">N_<pos:position pos:line="98" pos:column="27"/></name><argument_list pos:line="98" pos:column="27">(<argument><expr><literal type="string" pos:line="98" pos:column="28">"enable/disable untracked cache"<pos:position pos:line="98" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="98" pos:column="62"/></argument_list></call></expr>,
		<expr><call><name pos:line="99" pos:column="17">OPT_SET_INT<pos:position pos:line="99" pos:column="28"/></name><argument_list pos:line="99" pos:column="28">(<argument><expr><literal type="number" pos:line="99" pos:column="29">0<pos:position pos:line="99" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="32">"test-untracked-cache"<pos:position pos:line="99" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="99" pos:column="56">&amp;<pos:position pos:line="99" pos:column="61"/></operator><name pos:line="99" pos:column="57">untracked_cache<pos:position pos:line="99" pos:column="72"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="100" pos:column="29">N_<pos:position pos:line="100" pos:column="31"/></name><argument_list pos:line="100" pos:column="31">(<argument><expr><literal type="string" pos:line="100" pos:column="32">"test if the filesystem supports untracked cache"<pos:position pos:line="100" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="100" pos:column="84">UC_TEST<pos:position pos:line="100" pos:column="91"/></name></expr></argument>)<pos:position pos:line="100" pos:column="92"/></argument_list></call></expr>,
		<expr><call><name pos:line="101" pos:column="17">OPT_SET_INT<pos:position pos:line="101" pos:column="28"/></name><argument_list pos:line="101" pos:column="28">(<argument><expr><literal type="number" pos:line="101" pos:column="29">0<pos:position pos:line="101" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="32">"force-untracked-cache"<pos:position pos:line="101" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="101" pos:column="57">&amp;<pos:position pos:line="101" pos:column="62"/></operator><name pos:line="101" pos:column="58">untracked_cache<pos:position pos:line="101" pos:column="73"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="102" pos:column="29">N_<pos:position pos:line="102" pos:column="31"/></name><argument_list pos:line="102" pos:column="31">(<argument><expr><literal type="string" pos:line="102" pos:column="32">"enable untracked cache without testing the filesystem"<pos:position pos:line="102" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="88"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="102" pos:column="90">UC_FORCE<pos:position pos:line="102" pos:column="98"/></name></expr></argument>)<pos:position pos:line="102" pos:column="99"/></argument_list></call></expr>,
		<macro><name pos:line="103" pos:column="17">OPT_END<pos:position pos:line="103" pos:column="24"/></name><argument_list pos:line="103" pos:column="24">()<pos:position pos:line="103" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="104" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="104" pos:column="11"/></decl_stmt>

	<if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><name pos:line="106" pos:column="13">argc<pos:position pos:line="106" pos:column="17"/></name> <operator pos:line="106" pos:column="18">==<pos:position pos:line="106" pos:column="20"/></operator> <literal type="number" pos:line="106" pos:column="21">2<pos:position pos:line="106" pos:column="22"/></literal> <operator pos:line="106" pos:column="23">&amp;&amp;<pos:position pos:line="106" pos:column="33"/></operator> <operator pos:line="106" pos:column="26">!<pos:position pos:line="106" pos:column="27"/></operator><call><name pos:line="106" pos:column="27">strcmp<pos:position pos:line="106" pos:column="33"/></name><argument_list pos:line="106" pos:column="33">(<argument><expr><name><name pos:line="106" pos:column="34">argv<pos:position pos:line="106" pos:column="38"/></name><index pos:line="106" pos:column="38">[<expr><literal type="number" pos:line="106" pos:column="39">1<pos:position pos:line="106" pos:column="40"/></literal></expr>]<pos:position pos:line="106" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="43">"-h"<pos:position pos:line="106" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="49"/></condition><then pos:line="106" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="17">usage_with_options<pos:position pos:line="107" pos:column="35"/></name><argument_list pos:line="107" pos:column="35">(<argument><expr><name pos:line="107" pos:column="36">update_index_usage<pos:position pos:line="107" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="56">options<pos:position pos:line="107" pos:column="63"/></name></expr></argument>)<pos:position pos:line="107" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="65"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="109" pos:column="9">git_config<pos:position pos:line="109" pos:column="19"/></name><argument_list pos:line="109" pos:column="19">(<argument><expr><name pos:line="109" pos:column="20">git_default_config<pos:position pos:line="109" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="40">NULL<pos:position pos:line="109" pos:column="44"/></name></expr></argument>)<pos:position pos:line="109" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="46"/></expr_stmt>

	<comment type="block" pos:line="111" pos:column="9">/* We can't free this memory, it becomes part of a linked list parsed atexit() */</comment>
	<expr_stmt><expr><name pos:line="112" pos:column="9">lock_file<pos:position pos:line="112" pos:column="18"/></name> <operator pos:line="112" pos:column="19">=<pos:position pos:line="112" pos:column="20"/></operator> <call><name pos:line="112" pos:column="21">xcalloc<pos:position pos:line="112" pos:column="28"/></name><argument_list pos:line="112" pos:column="28">(<argument><expr><literal type="number" pos:line="112" pos:column="29">1<pos:position pos:line="112" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="112" pos:column="32">sizeof<argument_list pos:line="112" pos:column="38">(<argument><expr pos:line="112" pos:column="39">struct <name pos:line="112" pos:column="46">lock_file<pos:position pos:line="112" pos:column="55"/></name></expr></argument>)<pos:position pos:line="112" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="112" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="58"/></expr_stmt>

	<expr_stmt><expr><name pos:line="114" pos:column="9">newfd<pos:position pos:line="114" pos:column="14"/></name> <operator pos:line="114" pos:column="15">=<pos:position pos:line="114" pos:column="16"/></operator> <call><name pos:line="114" pos:column="17">hold_locked_index<pos:position pos:line="114" pos:column="34"/></name><argument_list pos:line="114" pos:column="34">(<argument><expr><name pos:line="114" pos:column="35">lock_file<pos:position pos:line="114" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="46">0<pos:position pos:line="114" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="49"/></expr_stmt>
	<if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><name pos:line="115" pos:column="13">newfd<pos:position pos:line="115" pos:column="18"/></name> <operator pos:line="115" pos:column="19">&lt;<pos:position pos:line="115" pos:column="23"/></operator> <literal type="number" pos:line="115" pos:column="21">0<pos:position pos:line="115" pos:column="22"/></literal></expr>)<pos:position pos:line="115" pos:column="23"/></condition><then pos:line="115" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="116" pos:column="17">lock_error<pos:position pos:line="116" pos:column="27"/></name> <operator pos:line="116" pos:column="28">=<pos:position pos:line="116" pos:column="29"/></operator> <name pos:line="116" pos:column="30">errno<pos:position pos:line="116" pos:column="35"/></name></expr>;<pos:position pos:line="116" pos:column="36"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="118" pos:column="9">entries<pos:position pos:line="118" pos:column="16"/></name> <operator pos:line="118" pos:column="17">=<pos:position pos:line="118" pos:column="18"/></operator> <call><name pos:line="118" pos:column="19">read_cache<pos:position pos:line="118" pos:column="29"/></name><argument_list pos:line="118" pos:column="29">()<pos:position pos:line="118" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="32"/></expr_stmt>
	<if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name pos:line="119" pos:column="13">entries<pos:position pos:line="119" pos:column="20"/></name> <operator pos:line="119" pos:column="21">&lt;<pos:position pos:line="119" pos:column="25"/></operator> <literal type="number" pos:line="119" pos:column="23">0<pos:position pos:line="119" pos:column="24"/></literal></expr>)<pos:position pos:line="119" pos:column="25"/></condition><then pos:line="119" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="120" pos:column="17">die<pos:position pos:line="120" pos:column="20"/></name><argument_list pos:line="120" pos:column="20">(<argument><expr><literal type="string" pos:line="120" pos:column="21">"cache corrupted"<pos:position pos:line="120" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="40"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="122" pos:column="9">/*
	 * Custom copy of parse_options() because we want to handle
	 * filename arguments as they come.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="126" pos:column="9">parse_options_start<pos:position pos:line="126" pos:column="28"/></name><argument_list pos:line="126" pos:column="28">(<argument><expr><operator pos:line="126" pos:column="29">&amp;<pos:position pos:line="126" pos:column="34"/></operator><name pos:line="126" pos:column="30">ctx<pos:position pos:line="126" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="35">argc<pos:position pos:line="126" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="41">argv<pos:position pos:line="126" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="47">prefix<pos:position pos:line="126" pos:column="53"/></name></expr></argument>,
			    <argument><expr><name pos:line="127" pos:column="29">options<pos:position pos:line="127" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="38">PARSE_OPT_STOP_AT_NON_OPTION<pos:position pos:line="127" pos:column="66"/></name></expr></argument>)<pos:position pos:line="127" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="68"/></expr_stmt>
	<while pos:line="128" pos:column="9">while <condition pos:line="128" pos:column="15">(<expr><name><name pos:line="128" pos:column="16">ctx<pos:position pos:line="128" pos:column="19"/></name><operator pos:line="128" pos:column="19">.<pos:position pos:line="128" pos:column="20"/></operator><name pos:line="128" pos:column="20">argc<pos:position pos:line="128" pos:column="24"/></name></name></expr>)<pos:position pos:line="128" pos:column="25"/></condition> <block pos:line="128" pos:column="26">{
		<if pos:line="129" pos:column="17">if <condition pos:line="129" pos:column="20">(<expr><name pos:line="129" pos:column="21">parseopt_state<pos:position pos:line="129" pos:column="35"/></name> <operator pos:line="129" pos:column="36">!=<pos:position pos:line="129" pos:column="38"/></operator> <name pos:line="129" pos:column="39">PARSE_OPT_DONE<pos:position pos:line="129" pos:column="53"/></name></expr>)<pos:position pos:line="129" pos:column="54"/></condition><then pos:line="129" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name pos:line="130" pos:column="25">parseopt_state<pos:position pos:line="130" pos:column="39"/></name> <operator pos:line="130" pos:column="40">=<pos:position pos:line="130" pos:column="41"/></operator> <call><name pos:line="130" pos:column="42">parse_options_step<pos:position pos:line="130" pos:column="60"/></name><argument_list pos:line="130" pos:column="60">(<argument><expr><operator pos:line="130" pos:column="61">&amp;<pos:position pos:line="130" pos:column="66"/></operator><name pos:line="130" pos:column="62">ctx<pos:position pos:line="130" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="67">options<pos:position pos:line="130" pos:column="74"/></name></expr></argument>,
							    <argument><expr><name pos:line="131" pos:column="61">update_index_usage<pos:position pos:line="131" pos:column="79"/></name></expr></argument>)<pos:position pos:line="131" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="81"/></expr_stmt></block></then></if>
		<if pos:line="132" pos:column="17">if <condition pos:line="132" pos:column="20">(<expr><operator pos:line="132" pos:column="21">!<pos:position pos:line="132" pos:column="22"/></operator><name><name pos:line="132" pos:column="22">ctx<pos:position pos:line="132" pos:column="25"/></name><operator pos:line="132" pos:column="25">.<pos:position pos:line="132" pos:column="26"/></operator><name pos:line="132" pos:column="26">argc<pos:position pos:line="132" pos:column="30"/></name></name></expr>)<pos:position pos:line="132" pos:column="31"/></condition><then pos:line="132" pos:column="31">
			<block type="pseudo"><break pos:line="133" pos:column="25">break;<pos:position pos:line="133" pos:column="31"/></break></block></then></if>
		<switch pos:line="134" pos:column="17">switch <condition pos:line="134" pos:column="24">(<expr><name pos:line="134" pos:column="25">parseopt_state<pos:position pos:line="134" pos:column="39"/></name></expr>)<pos:position pos:line="134" pos:column="40"/></condition> <block pos:line="134" pos:column="41">{
		<case pos:line="135" pos:column="17">case <expr><name pos:line="135" pos:column="22">PARSE_OPT_HELP<pos:position pos:line="135" pos:column="36"/></name></expr>:<pos:position pos:line="135" pos:column="37"/></case>
			<expr_stmt><expr><call><name pos:line="136" pos:column="25">exit<pos:position pos:line="136" pos:column="29"/></name><argument_list pos:line="136" pos:column="29">(<argument><expr><literal type="number" pos:line="136" pos:column="30">129<pos:position pos:line="136" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="35"/></expr_stmt>
		<case pos:line="137" pos:column="17">case <expr><name pos:line="137" pos:column="22">PARSE_OPT_NON_OPTION<pos:position pos:line="137" pos:column="42"/></name></expr>:<pos:position pos:line="137" pos:column="43"/></case>
		<case pos:line="138" pos:column="17">case <expr><name pos:line="138" pos:column="22">PARSE_OPT_DONE<pos:position pos:line="138" pos:column="36"/></name></expr>:<pos:position pos:line="138" pos:column="37"/></case>
		<block pos:line="139" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="140" pos:column="25">const<pos:position pos:line="140" pos:column="30"/></specifier> <name pos:line="140" pos:column="31">char<pos:position pos:line="140" pos:column="35"/></name> <modifier pos:line="140" pos:column="36">*<pos:position pos:line="140" pos:column="37"/></modifier></type><name pos:line="140" pos:column="37">path<pos:position pos:line="140" pos:column="41"/></name> <init pos:line="140" pos:column="42">= <expr><name><name pos:line="140" pos:column="44">ctx<pos:position pos:line="140" pos:column="47"/></name><operator pos:line="140" pos:column="47">.<pos:position pos:line="140" pos:column="48"/></operator><name pos:line="140" pos:column="48">argv<pos:position pos:line="140" pos:column="52"/></name><index pos:line="140" pos:column="52">[<expr><literal type="number" pos:line="140" pos:column="53">0<pos:position pos:line="140" pos:column="54"/></literal></expr>]<pos:position pos:line="140" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="140" pos:column="56"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="141" pos:column="25">char<pos:position pos:line="141" pos:column="29"/></name> <modifier pos:line="141" pos:column="30">*<pos:position pos:line="141" pos:column="31"/></modifier></type><name pos:line="141" pos:column="31">p<pos:position pos:line="141" pos:column="32"/></name></decl>;<pos:position pos:line="141" pos:column="33"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="143" pos:column="25">setup_work_tree<pos:position pos:line="143" pos:column="40"/></name><argument_list pos:line="143" pos:column="40">()<pos:position pos:line="143" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="144" pos:column="25">p<pos:position pos:line="144" pos:column="26"/></name> <operator pos:line="144" pos:column="27">=<pos:position pos:line="144" pos:column="28"/></operator> <call><name pos:line="144" pos:column="29">prefix_path<pos:position pos:line="144" pos:column="40"/></name><argument_list pos:line="144" pos:column="40">(<argument><expr><name pos:line="144" pos:column="41">prefix<pos:position pos:line="144" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="49">prefix_length<pos:position pos:line="144" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="64">path<pos:position pos:line="144" pos:column="68"/></name></expr></argument>)<pos:position pos:line="144" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="145" pos:column="25">update_one<pos:position pos:line="145" pos:column="35"/></name><argument_list pos:line="145" pos:column="35">(<argument><expr><name pos:line="145" pos:column="36">p<pos:position pos:line="145" pos:column="37"/></name></expr></argument>)<pos:position pos:line="145" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="39"/></expr_stmt>
			<if pos:line="146" pos:column="25">if <condition pos:line="146" pos:column="28">(<expr><name pos:line="146" pos:column="29">set_executable_bit<pos:position pos:line="146" pos:column="47"/></name></expr>)<pos:position pos:line="146" pos:column="48"/></condition><then pos:line="146" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="147" pos:column="33">chmod_path<pos:position pos:line="147" pos:column="43"/></name><argument_list pos:line="147" pos:column="43">(<argument><expr><name pos:line="147" pos:column="44">set_executable_bit<pos:position pos:line="147" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="64">p<pos:position pos:line="147" pos:column="65"/></name></expr></argument>)<pos:position pos:line="147" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="67"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="148" pos:column="25">free<pos:position pos:line="148" pos:column="29"/></name><argument_list pos:line="148" pos:column="29">(<argument><expr><name pos:line="148" pos:column="30">p<pos:position pos:line="148" pos:column="31"/></name></expr></argument>)<pos:position pos:line="148" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="33"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="149" pos:column="25">ctx<pos:position pos:line="149" pos:column="28"/></name><operator pos:line="149" pos:column="28">.<pos:position pos:line="149" pos:column="29"/></operator><name pos:line="149" pos:column="29">argc<pos:position pos:line="149" pos:column="33"/></name></name><operator pos:line="149" pos:column="33">--<pos:position pos:line="149" pos:column="35"/></operator></expr>;<pos:position pos:line="149" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="150" pos:column="25">ctx<pos:position pos:line="150" pos:column="28"/></name><operator pos:line="150" pos:column="28">.<pos:position pos:line="150" pos:column="29"/></operator><name pos:line="150" pos:column="29">argv<pos:position pos:line="150" pos:column="33"/></name></name><operator pos:line="150" pos:column="33">++<pos:position pos:line="150" pos:column="35"/></operator></expr>;<pos:position pos:line="150" pos:column="36"/></expr_stmt>
			<break pos:line="151" pos:column="25">break;<pos:position pos:line="151" pos:column="31"/></break>
		}<pos:position pos:line="152" pos:column="18"/></block>
		<case pos:line="153" pos:column="17">case <expr><name pos:line="153" pos:column="22">PARSE_OPT_UNKNOWN<pos:position pos:line="153" pos:column="39"/></name></expr>:<pos:position pos:line="153" pos:column="40"/></case>
			<if pos:line="154" pos:column="25">if <condition pos:line="154" pos:column="28">(<expr><name><name pos:line="154" pos:column="29">ctx<pos:position pos:line="154" pos:column="32"/></name><operator pos:line="154" pos:column="32">.<pos:position pos:line="154" pos:column="33"/></operator><name pos:line="154" pos:column="33">argv<pos:position pos:line="154" pos:column="37"/></name><index pos:line="154" pos:column="37">[<expr><literal type="number" pos:line="154" pos:column="38">0<pos:position pos:line="154" pos:column="39"/></literal></expr>]<pos:position pos:line="154" pos:column="40"/></index><index pos:line="154" pos:column="40">[<expr><literal type="number" pos:line="154" pos:column="41">1<pos:position pos:line="154" pos:column="42"/></literal></expr>]<pos:position pos:line="154" pos:column="43"/></index></name> <operator pos:line="154" pos:column="44">==<pos:position pos:line="154" pos:column="46"/></operator> <literal type="char" pos:line="154" pos:column="47">'-'<pos:position pos:line="154" pos:column="50"/></literal></expr>)<pos:position pos:line="154" pos:column="51"/></condition><then pos:line="154" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="155" pos:column="33">error<pos:position pos:line="155" pos:column="38"/></name><argument_list pos:line="155" pos:column="38">(<argument><expr><literal type="string" pos:line="155" pos:column="39">"unknown option '%s'"<pos:position pos:line="155" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="155" pos:column="62">ctx<pos:position pos:line="155" pos:column="65"/></name><operator pos:line="155" pos:column="65">.<pos:position pos:line="155" pos:column="66"/></operator><name pos:line="155" pos:column="66">argv<pos:position pos:line="155" pos:column="70"/></name><index pos:line="155" pos:column="70">[<expr><literal type="number" pos:line="155" pos:column="71">0<pos:position pos:line="155" pos:column="72"/></literal></expr>]<pos:position pos:line="155" pos:column="73"/></index></name> <operator pos:line="155" pos:column="74">+<pos:position pos:line="155" pos:column="75"/></operator> <literal type="number" pos:line="155" pos:column="76">2<pos:position pos:line="155" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="79"/></expr_stmt></block></then>
			<else pos:line="156" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="157" pos:column="33">error<pos:position pos:line="157" pos:column="38"/></name><argument_list pos:line="157" pos:column="38">(<argument><expr><literal type="string" pos:line="157" pos:column="39">"unknown switch '%c'"<pos:position pos:line="157" pos:column="60"/></literal></expr></argument>, <argument><expr><operator pos:line="157" pos:column="62">*<pos:position pos:line="157" pos:column="63"/></operator><name><name pos:line="157" pos:column="63">ctx<pos:position pos:line="157" pos:column="66"/></name><operator pos:line="157" pos:column="66">.<pos:position pos:line="157" pos:column="67"/></operator><name pos:line="157" pos:column="67">opt<pos:position pos:line="157" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="72"/></expr_stmt></block></else></if>
			<expr_stmt><expr><call><name pos:line="158" pos:column="25">usage_with_options<pos:position pos:line="158" pos:column="43"/></name><argument_list pos:line="158" pos:column="43">(<argument><expr><name pos:line="158" pos:column="44">update_index_usage<pos:position pos:line="158" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="64">options<pos:position pos:line="158" pos:column="71"/></name></expr></argument>)<pos:position pos:line="158" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="73"/></expr_stmt>
		}<pos:position pos:line="159" pos:column="18"/></block></switch>
	}<pos:position pos:line="160" pos:column="10"/></block></while>
	<expr_stmt><expr><name pos:line="161" pos:column="9">argc<pos:position pos:line="161" pos:column="13"/></name> <operator pos:line="161" pos:column="14">=<pos:position pos:line="161" pos:column="15"/></operator> <call><name pos:line="161" pos:column="16">parse_options_end<pos:position pos:line="161" pos:column="33"/></name><argument_list pos:line="161" pos:column="33">(<argument><expr><operator pos:line="161" pos:column="34">&amp;<pos:position pos:line="161" pos:column="39"/></operator><name pos:line="161" pos:column="35">ctx<pos:position pos:line="161" pos:column="38"/></name></expr></argument>)<pos:position pos:line="161" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><name pos:line="163" pos:column="9">getline_fn<pos:position pos:line="163" pos:column="19"/></name> <operator pos:line="163" pos:column="20">=<pos:position pos:line="163" pos:column="21"/></operator> <ternary><condition><expr><name pos:line="163" pos:column="22">nul_term_line<pos:position pos:line="163" pos:column="35"/></name></expr> ?<pos:position pos:line="163" pos:column="37"/></condition><then pos:line="163" pos:column="37"> <expr><name pos:line="163" pos:column="38">strbuf_getline_nul<pos:position pos:line="163" pos:column="56"/></name></expr> <pos:position pos:line="163" pos:column="57"/></then><else pos:line="163" pos:column="57">: <expr><name pos:line="163" pos:column="59">strbuf_getline_lf<pos:position pos:line="163" pos:column="76"/></name></expr></else></ternary></expr>;<pos:position pos:line="163" pos:column="77"/></expr_stmt>
	<if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><name pos:line="164" pos:column="13">preferred_index_format<pos:position pos:line="164" pos:column="35"/></name></expr>)<pos:position pos:line="164" pos:column="36"/></condition><then pos:line="164" pos:column="36"> <block pos:line="164" pos:column="37">{
		<if pos:line="165" pos:column="17">if <condition pos:line="165" pos:column="20">(<expr><name pos:line="165" pos:column="21">preferred_index_format<pos:position pos:line="165" pos:column="43"/></name> <operator pos:line="165" pos:column="44">&lt;<pos:position pos:line="165" pos:column="48"/></operator> <name pos:line="165" pos:column="46">INDEX_FORMAT_LB<pos:position pos:line="165" pos:column="61"/></name> <operator pos:line="165" pos:column="62">||<pos:position pos:line="165" pos:column="64"/></operator>
		    <name pos:line="166" pos:column="21">INDEX_FORMAT_UB<pos:position pos:line="166" pos:column="36"/></name> <operator pos:line="166" pos:column="37">&lt;<pos:position pos:line="166" pos:column="41"/></operator> <name pos:line="166" pos:column="39">preferred_index_format<pos:position pos:line="166" pos:column="61"/></name></expr>)<pos:position pos:line="166" pos:column="62"/></condition><then pos:line="166" pos:column="62">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="167" pos:column="25">die<pos:position pos:line="167" pos:column="28"/></name><argument_list pos:line="167" pos:column="28">(<argument><expr><literal type="string" pos:line="167" pos:column="29">"index-version %d not in range: %d..%d"<pos:position pos:line="167" pos:column="68"/></literal></expr></argument>,
			    <argument><expr><name pos:line="168" pos:column="29">preferred_index_format<pos:position pos:line="168" pos:column="51"/></name></expr></argument>,
			    <argument><expr><name pos:line="169" pos:column="29">INDEX_FORMAT_LB<pos:position pos:line="169" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="46">INDEX_FORMAT_UB<pos:position pos:line="169" pos:column="61"/></name></expr></argument>)<pos:position pos:line="169" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="63"/></expr_stmt></block></then></if>

		<if pos:line="171" pos:column="17">if <condition pos:line="171" pos:column="20">(<expr><name><name pos:line="171" pos:column="21">the_index<pos:position pos:line="171" pos:column="30"/></name><operator pos:line="171" pos:column="30">.<pos:position pos:line="171" pos:column="31"/></operator><name pos:line="171" pos:column="31">version<pos:position pos:line="171" pos:column="38"/></name></name> <operator pos:line="171" pos:column="39">!=<pos:position pos:line="171" pos:column="41"/></operator> <name pos:line="171" pos:column="42">preferred_index_format<pos:position pos:line="171" pos:column="64"/></name></expr>)<pos:position pos:line="171" pos:column="65"/></condition><then pos:line="171" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><name pos:line="172" pos:column="25">active_cache_changed<pos:position pos:line="172" pos:column="45"/></name> <operator pos:line="172" pos:column="46">|=<pos:position pos:line="172" pos:column="48"/></operator> <name pos:line="172" pos:column="49">SOMETHING_CHANGED<pos:position pos:line="172" pos:column="66"/></name></expr>;<pos:position pos:line="172" pos:column="67"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="173" pos:column="17">the_index<pos:position pos:line="173" pos:column="26"/></name><operator pos:line="173" pos:column="26">.<pos:position pos:line="173" pos:column="27"/></operator><name pos:line="173" pos:column="27">version<pos:position pos:line="173" pos:column="34"/></name></name> <operator pos:line="173" pos:column="35">=<pos:position pos:line="173" pos:column="36"/></operator> <name pos:line="173" pos:column="37">preferred_index_format<pos:position pos:line="173" pos:column="59"/></name></expr>;<pos:position pos:line="173" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="174" pos:column="10"/></block></then></if>

	<if pos:line="176" pos:column="9">if <condition pos:line="176" pos:column="12">(<expr><name pos:line="176" pos:column="13">read_from_stdin<pos:position pos:line="176" pos:column="28"/></name></expr>)<pos:position pos:line="176" pos:column="29"/></condition><then pos:line="176" pos:column="29"> <block pos:line="176" pos:column="30">{
		<decl_stmt><decl><type><name><name pos:line="177" pos:column="17">struct<pos:position pos:line="177" pos:column="23"/></name> <name pos:line="177" pos:column="24">strbuf<pos:position pos:line="177" pos:column="30"/></name></name></type> <name pos:line="177" pos:column="31">buf<pos:position pos:line="177" pos:column="34"/></name> <init pos:line="177" pos:column="35">= <expr><name pos:line="177" pos:column="37">STRBUF_INIT<pos:position pos:line="177" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="177" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="178" pos:column="17">struct<pos:position pos:line="178" pos:column="23"/></name> <name pos:line="178" pos:column="24">strbuf<pos:position pos:line="178" pos:column="30"/></name></name></type> <name pos:line="178" pos:column="31">unquoted<pos:position pos:line="178" pos:column="39"/></name> <init pos:line="178" pos:column="40">= <expr><name pos:line="178" pos:column="42">STRBUF_INIT<pos:position pos:line="178" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="178" pos:column="54"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="180" pos:column="17">setup_work_tree<pos:position pos:line="180" pos:column="32"/></name><argument_list pos:line="180" pos:column="32">()<pos:position pos:line="180" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="35"/></expr_stmt>
		<while pos:line="181" pos:column="17">while <condition pos:line="181" pos:column="23">(<expr><call><name pos:line="181" pos:column="24">getline_fn<pos:position pos:line="181" pos:column="34"/></name><argument_list pos:line="181" pos:column="34">(<argument><expr><operator pos:line="181" pos:column="35">&amp;<pos:position pos:line="181" pos:column="40"/></operator><name pos:line="181" pos:column="36">buf<pos:position pos:line="181" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="41">stdin<pos:position pos:line="181" pos:column="46"/></name></expr></argument>)<pos:position pos:line="181" pos:column="47"/></argument_list></call> <operator pos:line="181" pos:column="48">!=<pos:position pos:line="181" pos:column="50"/></operator> <name pos:line="181" pos:column="51">EOF<pos:position pos:line="181" pos:column="54"/></name></expr>)<pos:position pos:line="181" pos:column="55"/></condition> <block pos:line="181" pos:column="56">{
			<decl_stmt><decl><type><name pos:line="182" pos:column="25">char<pos:position pos:line="182" pos:column="29"/></name> <modifier pos:line="182" pos:column="30">*<pos:position pos:line="182" pos:column="31"/></modifier></type><name pos:line="182" pos:column="31">p<pos:position pos:line="182" pos:column="32"/></name></decl>;<pos:position pos:line="182" pos:column="33"/></decl_stmt>
			<if pos:line="183" pos:column="25">if <condition pos:line="183" pos:column="28">(<expr><operator pos:line="183" pos:column="29">!<pos:position pos:line="183" pos:column="30"/></operator><name pos:line="183" pos:column="30">nul_term_line<pos:position pos:line="183" pos:column="43"/></name> <operator pos:line="183" pos:column="44">&amp;&amp;<pos:position pos:line="183" pos:column="54"/></operator> <name><name pos:line="183" pos:column="47">buf<pos:position pos:line="183" pos:column="50"/></name><operator pos:line="183" pos:column="50">.<pos:position pos:line="183" pos:column="51"/></operator><name pos:line="183" pos:column="51">buf<pos:position pos:line="183" pos:column="54"/></name><index pos:line="183" pos:column="54">[<expr><literal type="number" pos:line="183" pos:column="55">0<pos:position pos:line="183" pos:column="56"/></literal></expr>]<pos:position pos:line="183" pos:column="57"/></index></name> <operator pos:line="183" pos:column="58">==<pos:position pos:line="183" pos:column="60"/></operator> <literal type="char" pos:line="183" pos:column="61">'"'<pos:position pos:line="183" pos:column="64"/></literal></expr>)<pos:position pos:line="183" pos:column="65"/></condition><then pos:line="183" pos:column="65"> <block pos:line="183" pos:column="66">{
				<expr_stmt><expr><call><name pos:line="184" pos:column="33">strbuf_reset<pos:position pos:line="184" pos:column="45"/></name><argument_list pos:line="184" pos:column="45">(<argument><expr><operator pos:line="184" pos:column="46">&amp;<pos:position pos:line="184" pos:column="51"/></operator><name pos:line="184" pos:column="47">unquoted<pos:position pos:line="184" pos:column="55"/></name></expr></argument>)<pos:position pos:line="184" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="57"/></expr_stmt>
				<if pos:line="185" pos:column="33">if <condition pos:line="185" pos:column="36">(<expr><call><name pos:line="185" pos:column="37">unquote_c_style<pos:position pos:line="185" pos:column="52"/></name><argument_list pos:line="185" pos:column="52">(<argument><expr><operator pos:line="185" pos:column="53">&amp;<pos:position pos:line="185" pos:column="58"/></operator><name pos:line="185" pos:column="54">unquoted<pos:position pos:line="185" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="185" pos:column="64">buf<pos:position pos:line="185" pos:column="67"/></name><operator pos:line="185" pos:column="67">.<pos:position pos:line="185" pos:column="68"/></operator><name pos:line="185" pos:column="68">buf<pos:position pos:line="185" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="73">NULL<pos:position pos:line="185" pos:column="77"/></name></expr></argument>)<pos:position pos:line="185" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="185" pos:column="79"/></condition><then pos:line="185" pos:column="79">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="186" pos:column="41">die<pos:position pos:line="186" pos:column="44"/></name><argument_list pos:line="186" pos:column="44">(<argument><expr><literal type="string" pos:line="186" pos:column="45">"line is badly quoted"<pos:position pos:line="186" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="186" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="69"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="187" pos:column="33">strbuf_swap<pos:position pos:line="187" pos:column="44"/></name><argument_list pos:line="187" pos:column="44">(<argument><expr><operator pos:line="187" pos:column="45">&amp;<pos:position pos:line="187" pos:column="50"/></operator><name pos:line="187" pos:column="46">buf<pos:position pos:line="187" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="187" pos:column="51">&amp;<pos:position pos:line="187" pos:column="56"/></operator><name pos:line="187" pos:column="52">unquoted<pos:position pos:line="187" pos:column="60"/></name></expr></argument>)<pos:position pos:line="187" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="62"/></expr_stmt>
			}<pos:position pos:line="188" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="189" pos:column="25">p<pos:position pos:line="189" pos:column="26"/></name> <operator pos:line="189" pos:column="27">=<pos:position pos:line="189" pos:column="28"/></operator> <call><name pos:line="189" pos:column="29">prefix_path<pos:position pos:line="189" pos:column="40"/></name><argument_list pos:line="189" pos:column="40">(<argument><expr><name pos:line="189" pos:column="41">prefix<pos:position pos:line="189" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="49">prefix_length<pos:position pos:line="189" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="189" pos:column="64">buf<pos:position pos:line="189" pos:column="67"/></name><operator pos:line="189" pos:column="67">.<pos:position pos:line="189" pos:column="68"/></operator><name pos:line="189" pos:column="68">buf<pos:position pos:line="189" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="190" pos:column="25">update_one<pos:position pos:line="190" pos:column="35"/></name><argument_list pos:line="190" pos:column="35">(<argument><expr><name pos:line="190" pos:column="36">p<pos:position pos:line="190" pos:column="37"/></name></expr></argument>)<pos:position pos:line="190" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="39"/></expr_stmt>
			<if pos:line="191" pos:column="25">if <condition pos:line="191" pos:column="28">(<expr><name pos:line="191" pos:column="29">set_executable_bit<pos:position pos:line="191" pos:column="47"/></name></expr>)<pos:position pos:line="191" pos:column="48"/></condition><then pos:line="191" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="192" pos:column="33">chmod_path<pos:position pos:line="192" pos:column="43"/></name><argument_list pos:line="192" pos:column="43">(<argument><expr><name pos:line="192" pos:column="44">set_executable_bit<pos:position pos:line="192" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="64">p<pos:position pos:line="192" pos:column="65"/></name></expr></argument>)<pos:position pos:line="192" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="67"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="193" pos:column="25">free<pos:position pos:line="193" pos:column="29"/></name><argument_list pos:line="193" pos:column="29">(<argument><expr><name pos:line="193" pos:column="30">p<pos:position pos:line="193" pos:column="31"/></name></expr></argument>)<pos:position pos:line="193" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="194" pos:column="18"/></block></while>
		<expr_stmt><expr><call><name pos:line="195" pos:column="17">strbuf_release<pos:position pos:line="195" pos:column="31"/></name><argument_list pos:line="195" pos:column="31">(<argument><expr><operator pos:line="195" pos:column="32">&amp;<pos:position pos:line="195" pos:column="37"/></operator><name pos:line="195" pos:column="33">unquoted<pos:position pos:line="195" pos:column="41"/></name></expr></argument>)<pos:position pos:line="195" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="196" pos:column="17">strbuf_release<pos:position pos:line="196" pos:column="31"/></name><argument_list pos:line="196" pos:column="31">(<argument><expr><operator pos:line="196" pos:column="32">&amp;<pos:position pos:line="196" pos:column="37"/></operator><name pos:line="196" pos:column="33">buf<pos:position pos:line="196" pos:column="36"/></name></expr></argument>)<pos:position pos:line="196" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="197" pos:column="10"/></block></then></if>

	<if pos:line="199" pos:column="9">if <condition pos:line="199" pos:column="12">(<expr><name pos:line="199" pos:column="13">split_index<pos:position pos:line="199" pos:column="24"/></name> <operator pos:line="199" pos:column="25">&gt;<pos:position pos:line="199" pos:column="29"/></operator> <literal type="number" pos:line="199" pos:column="27">0<pos:position pos:line="199" pos:column="28"/></literal></expr>)<pos:position pos:line="199" pos:column="29"/></condition><then pos:line="199" pos:column="29"> <block pos:line="199" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="200" pos:column="17">init_split_index<pos:position pos:line="200" pos:column="33"/></name><argument_list pos:line="200" pos:column="33">(<argument><expr><operator pos:line="200" pos:column="34">&amp;<pos:position pos:line="200" pos:column="39"/></operator><name pos:line="200" pos:column="35">the_index<pos:position pos:line="200" pos:column="44"/></name></expr></argument>)<pos:position pos:line="200" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="201" pos:column="17">the_index<pos:position pos:line="201" pos:column="26"/></name><operator pos:line="201" pos:column="26">.<pos:position pos:line="201" pos:column="27"/></operator><name pos:line="201" pos:column="27">cache_changed<pos:position pos:line="201" pos:column="40"/></name></name> <operator pos:line="201" pos:column="41">|=<pos:position pos:line="201" pos:column="43"/></operator> <name pos:line="201" pos:column="44">SPLIT_INDEX_ORDERED<pos:position pos:line="201" pos:column="63"/></name></expr>;<pos:position pos:line="201" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="202" pos:column="10"/></block></then> <elseif pos:line="202" pos:column="11">else <if pos:line="202" pos:column="16">if <condition pos:line="202" pos:column="19">(<expr><operator pos:line="202" pos:column="20">!<pos:position pos:line="202" pos:column="21"/></operator><name pos:line="202" pos:column="21">split_index<pos:position pos:line="202" pos:column="32"/></name> <operator pos:line="202" pos:column="33">&amp;&amp;<pos:position pos:line="202" pos:column="43"/></operator> <name><name pos:line="202" pos:column="36">the_index<pos:position pos:line="202" pos:column="45"/></name><operator pos:line="202" pos:column="45">.<pos:position pos:line="202" pos:column="46"/></operator><name pos:line="202" pos:column="46">split_index<pos:position pos:line="202" pos:column="57"/></name></name></expr>)<pos:position pos:line="202" pos:column="58"/></condition><then pos:line="202" pos:column="58"> <block pos:line="202" pos:column="59">{
		<comment type="block" pos:line="203" pos:column="17">/*
		 * can't discard_split_index(&amp;the_index); because that
		 * will destroy split_index-&gt;base-&gt;cache[], which may
		 * be shared with the_index.cache[]. So yeah we're
		 * leaking a bit here.
		 */</comment>
		<expr_stmt><expr><name><name pos:line="209" pos:column="17">the_index<pos:position pos:line="209" pos:column="26"/></name><operator pos:line="209" pos:column="26">.<pos:position pos:line="209" pos:column="27"/></operator><name pos:line="209" pos:column="27">split_index<pos:position pos:line="209" pos:column="38"/></name></name> <operator pos:line="209" pos:column="39">=<pos:position pos:line="209" pos:column="40"/></operator> <name pos:line="209" pos:column="41">NULL<pos:position pos:line="209" pos:column="45"/></name></expr>;<pos:position pos:line="209" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="210" pos:column="17">the_index<pos:position pos:line="210" pos:column="26"/></name><operator pos:line="210" pos:column="26">.<pos:position pos:line="210" pos:column="27"/></operator><name pos:line="210" pos:column="27">cache_changed<pos:position pos:line="210" pos:column="40"/></name></name> <operator pos:line="210" pos:column="41">|=<pos:position pos:line="210" pos:column="43"/></operator> <name pos:line="210" pos:column="44">SOMETHING_CHANGED<pos:position pos:line="210" pos:column="61"/></name></expr>;<pos:position pos:line="210" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="211" pos:column="10"/></block></then></if></elseif></if>

	<switch pos:line="213" pos:column="9">switch <condition pos:line="213" pos:column="16">(<expr><name pos:line="213" pos:column="17">untracked_cache<pos:position pos:line="213" pos:column="32"/></name></expr>)<pos:position pos:line="213" pos:column="33"/></condition> <block pos:line="213" pos:column="34">{
	<case pos:line="214" pos:column="9">case <expr><name pos:line="214" pos:column="14">UC_UNSPECIFIED<pos:position pos:line="214" pos:column="28"/></name></expr>:<pos:position pos:line="214" pos:column="29"/></case>
		<break pos:line="215" pos:column="17">break;<pos:position pos:line="215" pos:column="23"/></break>
	<case pos:line="216" pos:column="9">case <expr><name pos:line="216" pos:column="14">UC_DISABLE<pos:position pos:line="216" pos:column="24"/></name></expr>:<pos:position pos:line="216" pos:column="25"/></case>
		<if pos:line="217" pos:column="17">if <condition pos:line="217" pos:column="20">(<expr><call><name pos:line="217" pos:column="21">git_config_get_untracked_cache<pos:position pos:line="217" pos:column="51"/></name><argument_list pos:line="217" pos:column="51">()<pos:position pos:line="217" pos:column="53"/></argument_list></call> <operator pos:line="217" pos:column="54">==<pos:position pos:line="217" pos:column="56"/></operator> <literal type="number" pos:line="217" pos:column="57">1<pos:position pos:line="217" pos:column="58"/></literal></expr>)<pos:position pos:line="217" pos:column="59"/></condition><then pos:line="217" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="218" pos:column="25">warning<pos:position pos:line="218" pos:column="32"/></name><argument_list pos:line="218" pos:column="32">(<argument><expr><literal type="string" pos:line="218" pos:column="33">"core.untrackedCache is set to true; "<pos:position pos:line="218" pos:column="71"/></literal>
				<literal type="string" pos:line="219" pos:column="33">"remove or change it, if you really want to "<pos:position pos:line="219" pos:column="78"/></literal>
				<literal type="string" pos:line="220" pos:column="33">"disable the untracked cache"<pos:position pos:line="220" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="220" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="64"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="221" pos:column="17">remove_untracked_cache<pos:position pos:line="221" pos:column="39"/></name><argument_list pos:line="221" pos:column="39">(<argument><expr><operator pos:line="221" pos:column="40">&amp;<pos:position pos:line="221" pos:column="45"/></operator><name pos:line="221" pos:column="41">the_index<pos:position pos:line="221" pos:column="50"/></name></expr></argument>)<pos:position pos:line="221" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="222" pos:column="17">report<pos:position pos:line="222" pos:column="23"/></name><argument_list pos:line="222" pos:column="23">(<argument><expr><call><name pos:line="222" pos:column="24">_<pos:position pos:line="222" pos:column="25"/></name><argument_list pos:line="222" pos:column="25">(<argument><expr><literal type="string" pos:line="222" pos:column="26">"Untracked cache disabled"<pos:position pos:line="222" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="222" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="55"/></expr_stmt>
		<break pos:line="223" pos:column="17">break;<pos:position pos:line="223" pos:column="23"/></break>
	<case pos:line="224" pos:column="9">case <expr><name pos:line="224" pos:column="14">UC_TEST<pos:position pos:line="224" pos:column="21"/></name></expr>:<pos:position pos:line="224" pos:column="22"/></case>
		<expr_stmt><expr><call><name pos:line="225" pos:column="17">setup_work_tree<pos:position pos:line="225" pos:column="32"/></name><argument_list pos:line="225" pos:column="32">()<pos:position pos:line="225" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="35"/></expr_stmt>
		<return pos:line="226" pos:column="17">return <expr><operator pos:line="226" pos:column="24">!<pos:position pos:line="226" pos:column="25"/></operator><call><name pos:line="226" pos:column="25">test_if_untracked_cache_is_supported<pos:position pos:line="226" pos:column="61"/></name><argument_list pos:line="226" pos:column="61">()<pos:position pos:line="226" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="64"/></return>
	<case pos:line="227" pos:column="9">case <expr><name pos:line="227" pos:column="14">UC_ENABLE<pos:position pos:line="227" pos:column="23"/></name></expr>:<pos:position pos:line="227" pos:column="24"/></case>
	<case pos:line="228" pos:column="9">case <expr><name pos:line="228" pos:column="14">UC_FORCE<pos:position pos:line="228" pos:column="22"/></name></expr>:<pos:position pos:line="228" pos:column="23"/></case>
		<if pos:line="229" pos:column="17">if <condition pos:line="229" pos:column="20">(<expr><call><name pos:line="229" pos:column="21">git_config_get_untracked_cache<pos:position pos:line="229" pos:column="51"/></name><argument_list pos:line="229" pos:column="51">()<pos:position pos:line="229" pos:column="53"/></argument_list></call> <operator pos:line="229" pos:column="54">==<pos:position pos:line="229" pos:column="56"/></operator> <literal type="number" pos:line="229" pos:column="57">0<pos:position pos:line="229" pos:column="58"/></literal></expr>)<pos:position pos:line="229" pos:column="59"/></condition><then pos:line="229" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="230" pos:column="25">warning<pos:position pos:line="230" pos:column="32"/></name><argument_list pos:line="230" pos:column="32">(<argument><expr><literal type="string" pos:line="230" pos:column="33">"core.untrackedCache is set to false; "<pos:position pos:line="230" pos:column="72"/></literal>
				<literal type="string" pos:line="231" pos:column="33">"remove or change it, if you really want to "<pos:position pos:line="231" pos:column="78"/></literal>
				<literal type="string" pos:line="232" pos:column="33">"enable the untracked cache"<pos:position pos:line="232" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="232" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="63"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="233" pos:column="17">add_untracked_cache<pos:position pos:line="233" pos:column="36"/></name><argument_list pos:line="233" pos:column="36">(<argument><expr><operator pos:line="233" pos:column="37">&amp;<pos:position pos:line="233" pos:column="42"/></operator><name pos:line="233" pos:column="38">the_index<pos:position pos:line="233" pos:column="47"/></name></expr></argument>)<pos:position pos:line="233" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="234" pos:column="17">report<pos:position pos:line="234" pos:column="23"/></name><argument_list pos:line="234" pos:column="23">(<argument><expr><call><name pos:line="234" pos:column="24">_<pos:position pos:line="234" pos:column="25"/></name><argument_list pos:line="234" pos:column="25">(<argument><expr><literal type="string" pos:line="234" pos:column="26">"Untracked cache enabled for '%s'"<pos:position pos:line="234" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="234" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="234" pos:column="63">get_git_work_tree<pos:position pos:line="234" pos:column="80"/></name><argument_list pos:line="234" pos:column="80">()<pos:position pos:line="234" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="234" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="84"/></expr_stmt>
		<break pos:line="235" pos:column="17">break;<pos:position pos:line="235" pos:column="23"/></break>
	<default pos:line="236" pos:column="9">default:<pos:position pos:line="236" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="237" pos:column="17">die<pos:position pos:line="237" pos:column="20"/></name><argument_list pos:line="237" pos:column="20">(<argument><expr><literal type="string" pos:line="237" pos:column="21">"Bug: bad untracked_cache value: %d"<pos:position pos:line="237" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="237" pos:column="59">untracked_cache<pos:position pos:line="237" pos:column="74"/></name></expr></argument>)<pos:position pos:line="237" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="76"/></expr_stmt>
	}<pos:position pos:line="238" pos:column="10"/></block></switch>

	<if pos:line="240" pos:column="9">if <condition pos:line="240" pos:column="12">(<expr><name pos:line="240" pos:column="13">active_cache_changed<pos:position pos:line="240" pos:column="33"/></name></expr>)<pos:position pos:line="240" pos:column="34"/></condition><then pos:line="240" pos:column="34"> <block pos:line="240" pos:column="35">{
		<if pos:line="241" pos:column="17">if <condition pos:line="241" pos:column="20">(<expr><name pos:line="241" pos:column="21">newfd<pos:position pos:line="241" pos:column="26"/></name> <operator pos:line="241" pos:column="27">&lt;<pos:position pos:line="241" pos:column="31"/></operator> <literal type="number" pos:line="241" pos:column="29">0<pos:position pos:line="241" pos:column="30"/></literal></expr>)<pos:position pos:line="241" pos:column="31"/></condition><then pos:line="241" pos:column="31"> <block pos:line="241" pos:column="32">{
			<if pos:line="242" pos:column="25">if <condition pos:line="242" pos:column="28">(<expr><name><name pos:line="242" pos:column="29">refresh_args<pos:position pos:line="242" pos:column="41"/></name><operator pos:line="242" pos:column="41">.<pos:position pos:line="242" pos:column="42"/></operator><name pos:line="242" pos:column="42">flags<pos:position pos:line="242" pos:column="47"/></name></name> <operator pos:line="242" pos:column="48">&amp;<pos:position pos:line="242" pos:column="53"/></operator> <name pos:line="242" pos:column="50">REFRESH_QUIET<pos:position pos:line="242" pos:column="63"/></name></expr>)<pos:position pos:line="242" pos:column="64"/></condition><then pos:line="242" pos:column="64">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="243" pos:column="33">exit<pos:position pos:line="243" pos:column="37"/></name><argument_list pos:line="243" pos:column="37">(<argument><expr><literal type="number" pos:line="243" pos:column="38">128<pos:position pos:line="243" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="243" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="43"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="244" pos:column="25">unable_to_lock_die<pos:position pos:line="244" pos:column="43"/></name><argument_list pos:line="244" pos:column="43">(<argument><expr><call><name pos:line="244" pos:column="44">get_index_file<pos:position pos:line="244" pos:column="58"/></name><argument_list pos:line="244" pos:column="58">()<pos:position pos:line="244" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="244" pos:column="62">lock_error<pos:position pos:line="244" pos:column="72"/></name></expr></argument>)<pos:position pos:line="244" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="74"/></expr_stmt>
		}<pos:position pos:line="245" pos:column="18"/></block></then></if>
		<if pos:line="246" pos:column="17">if <condition pos:line="246" pos:column="20">(<expr><call><name pos:line="246" pos:column="21">write_locked_index<pos:position pos:line="246" pos:column="39"/></name><argument_list pos:line="246" pos:column="39">(<argument><expr><operator pos:line="246" pos:column="40">&amp;<pos:position pos:line="246" pos:column="45"/></operator><name pos:line="246" pos:column="41">the_index<pos:position pos:line="246" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="52">lock_file<pos:position pos:line="246" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="63">COMMIT_LOCK<pos:position pos:line="246" pos:column="74"/></name></expr></argument>)<pos:position pos:line="246" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="246" pos:column="76"/></condition><then pos:line="246" pos:column="76">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="247" pos:column="25">die<pos:position pos:line="247" pos:column="28"/></name><argument_list pos:line="247" pos:column="28">(<argument><expr><literal type="string" pos:line="247" pos:column="29">"Unable to write new index file"<pos:position pos:line="247" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="247" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="63"/></expr_stmt></block></then></if>
	}<pos:position pos:line="248" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="250" pos:column="9">rollback_lock_file<pos:position pos:line="250" pos:column="27"/></name><argument_list pos:line="250" pos:column="27">(<argument><expr><name pos:line="250" pos:column="28">lock_file<pos:position pos:line="250" pos:column="37"/></name></expr></argument>)<pos:position pos:line="250" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="39"/></expr_stmt>

	<return pos:line="252" pos:column="9">return <expr><ternary><condition><expr><name pos:line="252" pos:column="16">has_errors<pos:position pos:line="252" pos:column="26"/></name></expr> ?<pos:position pos:line="252" pos:column="28"/></condition><then pos:line="252" pos:column="28"> <expr><literal type="number" pos:line="252" pos:column="29">1<pos:position pos:line="252" pos:column="30"/></literal></expr> <pos:position pos:line="252" pos:column="31"/></then><else pos:line="252" pos:column="31">: <expr><literal type="number" pos:line="252" pos:column="33">0<pos:position pos:line="252" pos:column="34"/></literal></expr></else></ternary></expr>;<pos:position pos:line="252" pos:column="35"/></return>
}<pos:position pos:line="253" pos:column="2"/></block></function></unit>

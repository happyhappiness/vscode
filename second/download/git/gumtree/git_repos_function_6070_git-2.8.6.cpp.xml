<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6070_git-2.8.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mingw_open_html<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">unixpath<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">htmlpath<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><call><name pos:line="3" pos:column="32">make_backslash_path<pos:position pos:line="3" pos:column="51"/></name><argument_list pos:line="3" pos:column="51">(<argument><expr><name pos:line="3" pos:column="52">unixpath<pos:position pos:line="3" pos:column="60"/></name></expr></argument>)<pos:position pos:line="3" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>
	<typedef pos:line="4" pos:column="9">typedef <function_decl><type><name pos:line="4" pos:column="17">HINSTANCE<pos:position pos:line="4" pos:column="26"/></name></type> (<name pos:line="4" pos:column="28">WINAPI<pos:position pos:line="4" pos:column="34"/></name> <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier><name pos:line="4" pos:column="36">T<pos:position pos:line="4" pos:column="37"/></name>)<parameter_list pos:line="4" pos:column="38">(<parameter><decl><type><name pos:line="4" pos:column="39">HWND<pos:position pos:line="4" pos:column="43"/></name></type></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="45">const<pos:position pos:line="4" pos:column="50"/></specifier> <name pos:line="4" pos:column="51">char<pos:position pos:line="4" pos:column="55"/></name> <modifier pos:line="4" pos:column="56">*<pos:position pos:line="4" pos:column="57"/></modifier></type></decl></parameter>,
			<parameter><decl><type><specifier pos:line="5" pos:column="25">const<pos:position pos:line="5" pos:column="30"/></specifier> <name pos:line="5" pos:column="31">char<pos:position pos:line="5" pos:column="35"/></name> <modifier pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></modifier></type></decl></parameter>, <parameter><decl><type><specifier pos:line="5" pos:column="39">const<pos:position pos:line="5" pos:column="44"/></specifier> <name pos:line="5" pos:column="45">char<pos:position pos:line="5" pos:column="49"/></name> <modifier pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></modifier></type></decl></parameter>, <parameter><decl><type><specifier pos:line="5" pos:column="53">const<pos:position pos:line="5" pos:column="58"/></specifier> <name pos:line="5" pos:column="59">char<pos:position pos:line="5" pos:column="63"/></name> <modifier pos:line="5" pos:column="64">*<pos:position pos:line="5" pos:column="65"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="67">INT<pos:position pos:line="5" pos:column="70"/></name></type></decl></parameter>)<pos:position pos:line="5" pos:column="71"/></parameter_list>;<pos:position pos:line="5" pos:column="72"/></function_decl></typedef>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">T<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">ShellExecute<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">HMODULE<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">shell32<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">r<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">shell32<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <call><name pos:line="10" pos:column="19">LoadLibrary<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><literal type="string" pos:line="10" pos:column="31">"shell32.dll"<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">shell32<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><literal type="string" pos:line="12" pos:column="21">"cannot load shell32.dll"<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="13" pos:column="9">ShellExecute<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">T<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">)<pos:position pos:line="13" pos:column="27"/></operator><call><name pos:line="13" pos:column="27">GetProcAddress<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><name pos:line="13" pos:column="42">shell32<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="51">"ShellExecuteA"<pos:position pos:line="13" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">ShellExecute<pos:position pos:line="14" pos:column="26"/></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">die<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><literal type="string" pos:line="15" pos:column="21">"cannot run browser"<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">printf<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="string" pos:line="17" pos:column="16">"Launching default browser to display HTML ...\n"<pos:position pos:line="17" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">r<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">HCAST<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">int<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="24">ShellExecute<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">NULL<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="43">"open"<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="51">htmlpath<pos:position pos:line="18" pos:column="59"/></name></expr></argument>,
				<argument><expr><name pos:line="19" pos:column="33">NULL<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="39">"\\"<pos:position pos:line="19" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">SW_SHOWNORMAL<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">FreeLibrary<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name pos:line="20" pos:column="21">shell32<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
	<comment type="block" pos:line="21" pos:column="9">/* see the MSDN documentation referring to the result codes here */</comment>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">r<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">&lt;=<pos:position pos:line="22" pos:column="20"/></operator> <literal type="number" pos:line="22" pos:column="18">32<pos:position pos:line="22" pos:column="20"/></literal></expr>)<pos:position pos:line="22" pos:column="21"/></condition><then pos:line="22" pos:column="21"> <block pos:line="22" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">die<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><literal type="string" pos:line="23" pos:column="21">"failed to launch browser for %.*s"<pos:position pos:line="23" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="58">MAX_PATH<pos:position pos:line="23" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="68">unixpath<pos:position pos:line="23" pos:column="76"/></name></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="78"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

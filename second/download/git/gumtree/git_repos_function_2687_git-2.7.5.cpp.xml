<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2687_git-2.7.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">twoway_merge<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><specifier pos:line="1" pos:column="18">const<pos:position pos:line="1" pos:column="23"/></specifier> <name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">cache_entry<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier> <specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">src<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
		 <parameter><decl><type><name><name pos:line="2" pos:column="18">struct<pos:position pos:line="2" pos:column="24"/></name> <name pos:line="2" pos:column="25">unpack_trees_options<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">o<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name><name pos:line="4" pos:column="15">struct<pos:position pos:line="4" pos:column="21"/></name> <name pos:line="4" pos:column="22">cache_entry<pos:position pos:line="4" pos:column="33"/></name></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">current<pos:position pos:line="4" pos:column="42"/></name> <init pos:line="4" pos:column="43">= <expr><name><name pos:line="4" pos:column="45">src<pos:position pos:line="4" pos:column="48"/></name><index pos:line="4" pos:column="48">[<expr><literal type="number" pos:line="4" pos:column="49">0<pos:position pos:line="4" pos:column="50"/></literal></expr>]<pos:position pos:line="4" pos:column="51"/></index></name></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name><name pos:line="5" pos:column="15">struct<pos:position pos:line="5" pos:column="21"/></name> <name pos:line="5" pos:column="22">cache_entry<pos:position pos:line="5" pos:column="33"/></name></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">oldtree<pos:position pos:line="5" pos:column="42"/></name> <init pos:line="5" pos:column="43">= <expr><name><name pos:line="5" pos:column="45">src<pos:position pos:line="5" pos:column="48"/></name><index pos:line="5" pos:column="48">[<expr><literal type="number" pos:line="5" pos:column="49">1<pos:position pos:line="5" pos:column="50"/></literal></expr>]<pos:position pos:line="5" pos:column="51"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name><name pos:line="6" pos:column="15">struct<pos:position pos:line="6" pos:column="21"/></name> <name pos:line="6" pos:column="22">cache_entry<pos:position pos:line="6" pos:column="33"/></name></name> <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier></type><name pos:line="6" pos:column="35">newtree<pos:position pos:line="6" pos:column="42"/></name> <init pos:line="6" pos:column="43">= <expr><name><name pos:line="6" pos:column="45">src<pos:position pos:line="6" pos:column="48"/></name><index pos:line="6" pos:column="48">[<expr><literal type="number" pos:line="6" pos:column="49">2<pos:position pos:line="6" pos:column="50"/></literal></expr>]<pos:position pos:line="6" pos:column="51"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">o<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">merge_size<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">!=<pos:position pos:line="8" pos:column="29"/></operator> <literal type="number" pos:line="8" pos:column="30">2<pos:position pos:line="8" pos:column="31"/></literal></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><call><name pos:line="9" pos:column="24">error<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><literal type="string" pos:line="9" pos:column="30">"Cannot do a twoway merge of %d trees"<pos:position pos:line="9" pos:column="68"/></literal></expr></argument>,
			     <argument><expr><name><name pos:line="10" pos:column="30">o<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">merge_size<pos:position pos:line="10" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></return></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">oldtree<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">==<pos:position pos:line="12" pos:column="23"/></operator> <name><name pos:line="12" pos:column="24">o<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">df_conflict_entry<pos:position pos:line="12" pos:column="44"/></name></name></expr>)<pos:position pos:line="12" pos:column="45"/></condition><then pos:line="12" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">oldtree<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">NULL<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">newtree<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">==<pos:position pos:line="14" pos:column="23"/></operator> <name><name pos:line="14" pos:column="24">o<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">df_conflict_entry<pos:position pos:line="14" pos:column="44"/></name></name></expr>)<pos:position pos:line="14" pos:column="45"/></condition><then pos:line="14" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">newtree<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <name pos:line="15" pos:column="27">NULL<pos:position pos:line="15" pos:column="31"/></name></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">current<pos:position pos:line="17" pos:column="20"/></name></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21"> <block pos:line="17" pos:column="22">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">current<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">ce_flags<pos:position pos:line="18" pos:column="38"/></name></name> <operator pos:line="18" pos:column="39">&amp;<pos:position pos:line="18" pos:column="44"/></operator> <name pos:line="18" pos:column="41">CE_CONFLICTED<pos:position pos:line="18" pos:column="54"/></name></expr>)<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55"> <block pos:line="18" pos:column="56">{
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><call><name pos:line="19" pos:column="29">same<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">oldtree<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">newtree<pos:position pos:line="19" pos:column="50"/></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call> <operator pos:line="19" pos:column="52">||<pos:position pos:line="19" pos:column="54"/></operator> <name><name pos:line="19" pos:column="55">o<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">-&gt;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="58">reset<pos:position pos:line="19" pos:column="63"/></name></name></expr>)<pos:position pos:line="19" pos:column="64"/></condition><then pos:line="19" pos:column="64"> <block pos:line="19" pos:column="65">{
				<if pos:line="20" pos:column="33">if <condition pos:line="20" pos:column="36">(<expr><operator pos:line="20" pos:column="37">!<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="38">newtree<pos:position pos:line="20" pos:column="45"/></name></expr>)<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46">
					<block type="pseudo"><return pos:line="21" pos:column="41">return <expr><call><name pos:line="21" pos:column="48">deleted_entry<pos:position pos:line="21" pos:column="61"/></name><argument_list pos:line="21" pos:column="61">(<argument><expr><name pos:line="21" pos:column="62">current<pos:position pos:line="21" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="71">current<pos:position pos:line="21" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="80">o<pos:position pos:line="21" pos:column="81"/></name></expr></argument>)<pos:position pos:line="21" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="83"/></return></block></then>
				<else pos:line="22" pos:column="33">else
					<block type="pseudo"><return pos:line="23" pos:column="41">return <expr><call><name pos:line="23" pos:column="48">merged_entry<pos:position pos:line="23" pos:column="60"/></name><argument_list pos:line="23" pos:column="60">(<argument><expr><name pos:line="23" pos:column="61">newtree<pos:position pos:line="23" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="70">current<pos:position pos:line="23" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="79">o<pos:position pos:line="23" pos:column="80"/></name></expr></argument>)<pos:position pos:line="23" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="82"/></return></block></else></if>
			}<pos:position pos:line="24" pos:column="26"/></block></then></if>
			<return pos:line="25" pos:column="25">return <expr><call><name pos:line="25" pos:column="32">reject_merge<pos:position pos:line="25" pos:column="44"/></name><argument_list pos:line="25" pos:column="44">(<argument><expr><name pos:line="25" pos:column="45">current<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">o<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="57"/></return>
		}<pos:position pos:line="26" pos:column="18"/></block></then> <elseif pos:line="26" pos:column="19">else <if pos:line="26" pos:column="24">if <condition pos:line="26" pos:column="27">(<expr><operator pos:line="26" pos:column="28">(<pos:position pos:line="26" pos:column="29"/></operator><operator pos:line="26" pos:column="29">!<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">oldtree<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">&amp;&amp;<pos:position pos:line="26" pos:column="48"/></operator> <operator pos:line="26" pos:column="41">!<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">newtree<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">)<pos:position pos:line="26" pos:column="50"/></operator> <operator pos:line="26" pos:column="51">||<pos:position pos:line="26" pos:column="53"/></operator> <comment type="block" pos:line="26" pos:column="54">/* 4 and 5 */</comment>
			 <operator pos:line="27" pos:column="26">(<pos:position pos:line="27" pos:column="27"/></operator><operator pos:line="27" pos:column="27">!<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">oldtree<pos:position pos:line="27" pos:column="35"/></name> <operator pos:line="27" pos:column="36">&amp;&amp;<pos:position pos:line="27" pos:column="46"/></operator> <name pos:line="27" pos:column="39">newtree<pos:position pos:line="27" pos:column="46"/></name> <operator pos:line="27" pos:column="47">&amp;&amp;<pos:position pos:line="27" pos:column="57"/></operator>
			  <call><name pos:line="28" pos:column="27">same<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">current<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="41">newtree<pos:position pos:line="28" pos:column="48"/></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call><operator pos:line="28" pos:column="49">)<pos:position pos:line="28" pos:column="50"/></operator> <operator pos:line="28" pos:column="51">||<pos:position pos:line="28" pos:column="53"/></operator> <comment type="block" pos:line="28" pos:column="54">/* 6 and 7 */</comment>
			 <operator pos:line="29" pos:column="26">(<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="27">oldtree<pos:position pos:line="29" pos:column="34"/></name> <operator pos:line="29" pos:column="35">&amp;&amp;<pos:position pos:line="29" pos:column="45"/></operator> <name pos:line="29" pos:column="38">newtree<pos:position pos:line="29" pos:column="45"/></name> <operator pos:line="29" pos:column="46">&amp;&amp;<pos:position pos:line="29" pos:column="56"/></operator>
			  <call><name pos:line="30" pos:column="27">same<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">oldtree<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="41">newtree<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call><operator pos:line="30" pos:column="49">)<pos:position pos:line="30" pos:column="50"/></operator> <operator pos:line="30" pos:column="51">||<pos:position pos:line="30" pos:column="53"/></operator> <comment type="block" pos:line="30" pos:column="54">/* 14 and 15 */</comment>
			 <operator pos:line="31" pos:column="26">(<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="27">oldtree<pos:position pos:line="31" pos:column="34"/></name> <operator pos:line="31" pos:column="35">&amp;&amp;<pos:position pos:line="31" pos:column="45"/></operator> <name pos:line="31" pos:column="38">newtree<pos:position pos:line="31" pos:column="45"/></name> <operator pos:line="31" pos:column="46">&amp;&amp;<pos:position pos:line="31" pos:column="56"/></operator>
			  <operator pos:line="32" pos:column="27">!<pos:position pos:line="32" pos:column="28"/></operator><call><name pos:line="32" pos:column="28">same<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">oldtree<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">newtree<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call> <operator pos:line="32" pos:column="51">&amp;&amp;<pos:position pos:line="32" pos:column="61"/></operator> <comment type="block" pos:line="32" pos:column="54">/* 18 and 19 */</comment>
			  <call><name pos:line="33" pos:column="27">same<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">current<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="41">newtree<pos:position pos:line="33" pos:column="48"/></name></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call><operator pos:line="33" pos:column="49">)<pos:position pos:line="33" pos:column="50"/></operator></expr>)<pos:position pos:line="33" pos:column="51"/></condition><then pos:line="33" pos:column="51"> <block pos:line="33" pos:column="52">{
			<return pos:line="34" pos:column="25">return <expr><call><name pos:line="34" pos:column="32">keep_entry<pos:position pos:line="34" pos:column="42"/></name><argument_list pos:line="34" pos:column="42">(<argument><expr><name pos:line="34" pos:column="43">current<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="52">o<pos:position pos:line="34" pos:column="53"/></name></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="55"/></return>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if></elseif> <elseif pos:line="35" pos:column="19">else <if pos:line="35" pos:column="24">if <condition pos:line="35" pos:column="27">(<expr><name pos:line="35" pos:column="28">oldtree<pos:position pos:line="35" pos:column="35"/></name> <operator pos:line="35" pos:column="36">&amp;&amp;<pos:position pos:line="35" pos:column="46"/></operator> <operator pos:line="35" pos:column="39">!<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="40">newtree<pos:position pos:line="35" pos:column="47"/></name> <operator pos:line="35" pos:column="48">&amp;&amp;<pos:position pos:line="35" pos:column="58"/></operator> <call><name pos:line="35" pos:column="51">same<pos:position pos:line="35" pos:column="55"/></name><argument_list pos:line="35" pos:column="55">(<argument><expr><name pos:line="35" pos:column="56">current<pos:position pos:line="35" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="65">oldtree<pos:position pos:line="35" pos:column="72"/></name></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="74"/></condition><then pos:line="35" pos:column="74"> <block pos:line="35" pos:column="75">{
			<comment type="block" pos:line="36" pos:column="25">/* 10 or 11 */</comment>
			<return pos:line="37" pos:column="25">return <expr><call><name pos:line="37" pos:column="32">deleted_entry<pos:position pos:line="37" pos:column="45"/></name><argument_list pos:line="37" pos:column="45">(<argument><expr><name pos:line="37" pos:column="46">oldtree<pos:position pos:line="37" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="55">current<pos:position pos:line="37" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="64">o<pos:position pos:line="37" pos:column="65"/></name></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="67"/></return>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if></elseif> <elseif pos:line="38" pos:column="19">else <if pos:line="38" pos:column="24">if <condition pos:line="38" pos:column="27">(<expr><name pos:line="38" pos:column="28">oldtree<pos:position pos:line="38" pos:column="35"/></name> <operator pos:line="38" pos:column="36">&amp;&amp;<pos:position pos:line="38" pos:column="46"/></operator> <name pos:line="38" pos:column="39">newtree<pos:position pos:line="38" pos:column="46"/></name> <operator pos:line="38" pos:column="47">&amp;&amp;<pos:position pos:line="38" pos:column="57"/></operator>
			 <call><name pos:line="39" pos:column="26">same<pos:position pos:line="39" pos:column="30"/></name><argument_list pos:line="39" pos:column="30">(<argument><expr><name pos:line="39" pos:column="31">current<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="40">oldtree<pos:position pos:line="39" pos:column="47"/></name></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call> <operator pos:line="39" pos:column="49">&amp;&amp;<pos:position pos:line="39" pos:column="59"/></operator> <operator pos:line="39" pos:column="52">!<pos:position pos:line="39" pos:column="53"/></operator><call><name pos:line="39" pos:column="53">same<pos:position pos:line="39" pos:column="57"/></name><argument_list pos:line="39" pos:column="57">(<argument><expr><name pos:line="39" pos:column="58">current<pos:position pos:line="39" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="67">newtree<pos:position pos:line="39" pos:column="74"/></name></expr></argument>)<pos:position pos:line="39" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="76"/></condition><then pos:line="39" pos:column="76"> <block pos:line="39" pos:column="77">{
			<comment type="block" pos:line="40" pos:column="25">/* 20 or 21 */</comment>
			<return pos:line="41" pos:column="25">return <expr><call><name pos:line="41" pos:column="32">merged_entry<pos:position pos:line="41" pos:column="44"/></name><argument_list pos:line="41" pos:column="44">(<argument><expr><name pos:line="41" pos:column="45">newtree<pos:position pos:line="41" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="54">current<pos:position pos:line="41" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="63">o<pos:position pos:line="41" pos:column="64"/></name></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="66"/></return>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if></elseif> <else pos:line="42" pos:column="19">else
			<block type="pseudo"><return pos:line="43" pos:column="25">return <expr><call><name pos:line="43" pos:column="32">reject_merge<pos:position pos:line="43" pos:column="44"/></name><argument_list pos:line="43" pos:column="44">(<argument><expr><name pos:line="43" pos:column="45">current<pos:position pos:line="43" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="54">o<pos:position pos:line="43" pos:column="55"/></name></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="57"/></return></block></else></if>
	}<pos:position pos:line="44" pos:column="10"/></block></then>
	<elseif pos:line="45" pos:column="9">else <if pos:line="45" pos:column="14">if <condition pos:line="45" pos:column="17">(<expr><name pos:line="45" pos:column="18">newtree<pos:position pos:line="45" pos:column="25"/></name></expr>)<pos:position pos:line="45" pos:column="26"/></condition><then pos:line="45" pos:column="26"> <block pos:line="45" pos:column="27">{
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">oldtree<pos:position pos:line="46" pos:column="28"/></name> <operator pos:line="46" pos:column="29">&amp;&amp;<pos:position pos:line="46" pos:column="39"/></operator> <operator pos:line="46" pos:column="32">!<pos:position pos:line="46" pos:column="33"/></operator><name><name pos:line="46" pos:column="33">o<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">-&gt;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="36">initial_checkout<pos:position pos:line="46" pos:column="52"/></name></name></expr>)<pos:position pos:line="46" pos:column="53"/></condition><then pos:line="46" pos:column="53"> <block pos:line="46" pos:column="54">{
			<comment type="block" pos:line="47" pos:column="25">/*
			 * deletion of the path was staged;
			 */</comment>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><call><name pos:line="50" pos:column="29">same<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><name pos:line="50" pos:column="34">oldtree<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="43">newtree<pos:position pos:line="50" pos:column="50"/></name></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="52"/></condition><then pos:line="50" pos:column="52">
				<block type="pseudo"><return pos:line="51" pos:column="33">return <expr><literal type="number" pos:line="51" pos:column="40">1<pos:position pos:line="51" pos:column="41"/></literal></expr>;<pos:position pos:line="51" pos:column="42"/></return></block></then></if>
			<return pos:line="52" pos:column="25">return <expr><call><name pos:line="52" pos:column="32">reject_merge<pos:position pos:line="52" pos:column="44"/></name><argument_list pos:line="52" pos:column="44">(<argument><expr><name pos:line="52" pos:column="45">oldtree<pos:position pos:line="52" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="54">o<pos:position pos:line="52" pos:column="55"/></name></expr></argument>)<pos:position pos:line="52" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="57"/></return>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if>
		<return pos:line="54" pos:column="17">return <expr><call><name pos:line="54" pos:column="24">merged_entry<pos:position pos:line="54" pos:column="36"/></name><argument_list pos:line="54" pos:column="36">(<argument><expr><name pos:line="54" pos:column="37">newtree<pos:position pos:line="54" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="46">current<pos:position pos:line="54" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="55">o<pos:position pos:line="54" pos:column="56"/></name></expr></argument>)<pos:position pos:line="54" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="58"/></return>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if></elseif></if>
	<return pos:line="56" pos:column="9">return <expr><call><name pos:line="56" pos:column="16">deleted_entry<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">oldtree<pos:position pos:line="56" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="39">current<pos:position pos:line="56" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="48">o<pos:position pos:line="56" pos:column="49"/></name></expr></argument>)<pos:position pos:line="56" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="51"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4729_git-2.6.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_ru_info<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list_item<pos:position pos:line="3" pos:column="32"/></name></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">item<pos:position pos:line="3" pos:column="38"/></name></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name><name pos:line="5" pos:column="14">the_index<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">.<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">resolve_undo<pos:position pos:line="5" pos:column="36"/></name></name></expr>)<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37">
		<block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>

	<macro><name pos:line="8" pos:column="9">for_each_string_list_item<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument pos:line="8" pos:column="35">item<pos:position pos:line="8" pos:column="39"/></argument>, <argument pos:line="8" pos:column="41">the_index.resolve_undo<pos:position pos:line="8" pos:column="63"/></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></macro> <block pos:line="8" pos:column="65">{
		<decl_stmt><decl><type><specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">path<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><name><name pos:line="9" pos:column="36">item<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">-&gt;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="42">string<pos:position pos:line="9" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="10" pos:column="17">struct<pos:position pos:line="10" pos:column="23"/></name> <name pos:line="10" pos:column="24">resolve_undo_info<pos:position pos:line="10" pos:column="41"/></name></name> <modifier pos:line="10" pos:column="42">*<pos:position pos:line="10" pos:column="43"/></modifier></type><name pos:line="10" pos:column="43">ui<pos:position pos:line="10" pos:column="45"/></name> <init pos:line="10" pos:column="46">= <expr><name><name pos:line="10" pos:column="48">item<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">-&gt;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="54">util<pos:position pos:line="10" pos:column="58"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="59"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="24">len<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="13" pos:column="17">len<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="23">strlen<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">path<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">len<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">&lt;<pos:position pos:line="14" pos:column="29"/></operator> <name pos:line="14" pos:column="27">max_prefix_len<pos:position pos:line="14" pos:column="41"/></name></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42">
			<block type="pseudo"><continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue></block></then></if> <comment type="block" pos:line="15" pos:column="35">/* outside of the prefix */</comment>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><call><name pos:line="16" pos:column="22">match_pathspec<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">(<argument><expr><operator pos:line="16" pos:column="37">&amp;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="38">pathspec<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">path<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="54">len<pos:position pos:line="16" pos:column="57"/></name></expr></argument>,
				    <argument><expr><name pos:line="17" pos:column="37">max_prefix_len<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="53">ps_matched<pos:position pos:line="17" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="65">0<pos:position pos:line="17" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="68"/></condition><then pos:line="17" pos:column="68">
			<block type="pseudo"><continue pos:line="18" pos:column="25">continue;<pos:position pos:line="18" pos:column="34"/></continue></block></then></if> <comment type="block" pos:line="18" pos:column="35">/* uninterested */</comment>
		<for pos:line="19" pos:column="17">for <control pos:line="19" pos:column="21">(<init><expr><name pos:line="19" pos:column="22">i<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <literal type="number" pos:line="19" pos:column="26">0<pos:position pos:line="19" pos:column="27"/></literal></expr>;<pos:position pos:line="19" pos:column="28"/></init> <condition><expr><name pos:line="19" pos:column="29">i<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">&lt;<pos:position pos:line="19" pos:column="35"/></operator> <literal type="number" pos:line="19" pos:column="33">3<pos:position pos:line="19" pos:column="34"/></literal></expr>;<pos:position pos:line="19" pos:column="35"/></condition> <incr><expr><name pos:line="19" pos:column="36">i<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">++<pos:position pos:line="19" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="40"/></control> <block pos:line="19" pos:column="41">{
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><operator pos:line="20" pos:column="29">!<pos:position pos:line="20" pos:column="30"/></operator><name><name pos:line="20" pos:column="30">ui<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">mode<pos:position pos:line="20" pos:column="38"/></name><index pos:line="20" pos:column="38">[<expr><name pos:line="20" pos:column="39">i<pos:position pos:line="20" pos:column="40"/></name></expr>]<pos:position pos:line="20" pos:column="41"/></index></name></expr>)<pos:position pos:line="20" pos:column="42"/></condition><then pos:line="20" pos:column="42">
				<block type="pseudo"><continue pos:line="21" pos:column="33">continue;<pos:position pos:line="21" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">printf<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><literal type="string" pos:line="22" pos:column="32">"%s%06o %s %d\t"<pos:position pos:line="22" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="50">tag_resolve_undo<pos:position pos:line="22" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="68">ui<pos:position pos:line="22" pos:column="70"/></name><operator pos:line="22" pos:column="70">-&gt;<pos:position pos:line="22" pos:column="75"/></operator><name pos:line="22" pos:column="72">mode<pos:position pos:line="22" pos:column="76"/></name><index pos:line="22" pos:column="76">[<expr><name pos:line="22" pos:column="77">i<pos:position pos:line="22" pos:column="78"/></name></expr>]<pos:position pos:line="22" pos:column="79"/></index></name></expr></argument>,
			       <argument><expr><call><name pos:line="23" pos:column="32">find_unique_abbrev<pos:position pos:line="23" pos:column="50"/></name><argument_list pos:line="23" pos:column="50">(<argument><expr><name><name pos:line="23" pos:column="51">ui<pos:position pos:line="23" pos:column="53"/></name><operator pos:line="23" pos:column="53">-&gt;<pos:position pos:line="23" pos:column="58"/></operator><name pos:line="23" pos:column="55">sha1<pos:position pos:line="23" pos:column="59"/></name><index pos:line="23" pos:column="59">[<expr><name pos:line="23" pos:column="60">i<pos:position pos:line="23" pos:column="61"/></name></expr>]<pos:position pos:line="23" pos:column="62"/></index></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="64">abbrev<pos:position pos:line="23" pos:column="70"/></name></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr></argument>,
			       <argument><expr><name pos:line="24" pos:column="32">i<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">+<pos:position pos:line="24" pos:column="35"/></operator> <literal type="number" pos:line="24" pos:column="36">1<pos:position pos:line="24" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">write_name<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name pos:line="25" pos:column="36">path<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></for>
	}<pos:position pos:line="27" pos:column="10"/></block>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1550.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_pack_data<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">bundle_fd<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">lock_file<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">lock<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="67">struct<pos:position pos:line="1" pos:column="73"/></name> <name pos:line="1" pos:column="74">rev_info<pos:position pos:line="1" pos:column="82"/></name></name> <modifier pos:line="1" pos:column="83">*<pos:position pos:line="1" pos:column="84"/></modifier></type><name pos:line="1" pos:column="84">revs<pos:position pos:line="1" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="89"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">child_process<pos:position pos:line="3" pos:column="29"/></name></name></type> <name pos:line="3" pos:column="30">pack_objects<pos:position pos:line="3" pos:column="42"/></name> <init pos:line="3" pos:column="43">= <expr><name pos:line="3" pos:column="45">CHILD_PROCESS_INIT<pos:position pos:line="3" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="64"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">argv_array_pushl<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><operator pos:line="6" pos:column="26">&amp;<pos:position pos:line="6" pos:column="31"/></operator><name><name pos:line="6" pos:column="27">pack_objects<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">.<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="40">args<pos:position pos:line="6" pos:column="44"/></name></name></expr></argument>,
			 <argument><expr><literal type="string" pos:line="7" pos:column="26">"pack-objects"<pos:position pos:line="7" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="42">"--all-progress-implied"<pos:position pos:line="7" pos:column="66"/></literal></expr></argument>,
			 <argument><expr><literal type="string" pos:line="8" pos:column="26">"--stdout"<pos:position pos:line="8" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="38">"--thin"<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="48">"--delta-base-offset"<pos:position pos:line="8" pos:column="69"/></literal></expr></argument>,
			 <argument><expr><name pos:line="9" pos:column="26">NULL<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">pack_objects<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">.<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">in<pos:position pos:line="10" pos:column="24"/></name></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <operator pos:line="10" pos:column="27">-<pos:position pos:line="10" pos:column="28"/></operator><literal type="number" pos:line="10" pos:column="28">1<pos:position pos:line="10" pos:column="29"/></literal></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">pack_objects<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">.<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">out<pos:position pos:line="11" pos:column="25"/></name></name> <operator pos:line="11" pos:column="26">=<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="28">bundle_fd<pos:position pos:line="11" pos:column="37"/></name></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">pack_objects<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">.<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">git_cmd<pos:position pos:line="12" pos:column="29"/></name></name> <operator pos:line="12" pos:column="30">=<pos:position pos:line="12" pos:column="31"/></operator> <literal type="number" pos:line="12" pos:column="32">1<pos:position pos:line="12" pos:column="33"/></literal></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">start_command<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><operator pos:line="13" pos:column="27">&amp;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="28">pack_objects<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="42"/></condition><then pos:line="13" pos:column="42">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><call><name pos:line="14" pos:column="24">error<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><call><name pos:line="14" pos:column="30">_<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><literal type="string" pos:line="14" pos:column="32">"Could not spawn pack-objects"<pos:position pos:line="14" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="65"/></return></block></then></if>

	<comment type="block" pos:line="16" pos:column="9">/*
	 * start_command closed bundle_fd if it was &gt; 1
	 * so set the lock fd to -1 so commit_lock_file()
	 * won't fail trying to close it.
	 */</comment>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">lock<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">fd<pos:position pos:line="21" pos:column="17"/></name></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <operator pos:line="21" pos:column="20">-<pos:position pos:line="21" pos:column="21"/></operator><literal type="number" pos:line="21" pos:column="21">1<pos:position pos:line="21" pos:column="22"/></literal></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>

	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">i<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></init> <condition><expr><name pos:line="23" pos:column="21">i<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&lt;<pos:position pos:line="23" pos:column="27"/></operator> <name><name pos:line="23" pos:column="25">revs<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">pending<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">.<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="39">nr<pos:position pos:line="23" pos:column="41"/></name></name></expr>;<pos:position pos:line="23" pos:column="42"/></condition> <incr><expr><name pos:line="23" pos:column="43">i<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">++<pos:position pos:line="23" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="47"/></control> <block pos:line="23" pos:column="48">{
		<decl_stmt><decl><type><name><name pos:line="24" pos:column="17">struct<pos:position pos:line="24" pos:column="23"/></name> <name pos:line="24" pos:column="24">object<pos:position pos:line="24" pos:column="30"/></name></name> <modifier pos:line="24" pos:column="31">*<pos:position pos:line="24" pos:column="32"/></modifier></type><name pos:line="24" pos:column="32">object<pos:position pos:line="24" pos:column="38"/></name> <init pos:line="24" pos:column="39">= <expr><name><name pos:line="24" pos:column="41">revs<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">pending<pos:position pos:line="24" pos:column="54"/></name><operator pos:line="24" pos:column="54">.<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="55">objects<pos:position pos:line="24" pos:column="62"/></name><index pos:line="24" pos:column="62">[<expr><name pos:line="24" pos:column="63">i<pos:position pos:line="24" pos:column="64"/></name></expr>]<pos:position pos:line="24" pos:column="65"/></index></name><operator pos:line="24" pos:column="65">.<pos:position pos:line="24" pos:column="66"/></operator><name pos:line="24" pos:column="66">item<pos:position pos:line="24" pos:column="70"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="71"/></decl_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">object<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">-&gt;<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="29">flags<pos:position pos:line="25" pos:column="34"/></name></name> <operator pos:line="25" pos:column="35">&amp;<pos:position pos:line="25" pos:column="40"/></operator> <name pos:line="25" pos:column="37">UNINTERESTING<pos:position pos:line="25" pos:column="50"/></name></expr>)<pos:position pos:line="25" pos:column="51"/></condition><then pos:line="25" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="25">write_or_die<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><name><name pos:line="26" pos:column="38">pack_objects<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">.<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="51">in<pos:position pos:line="26" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="55">"^"<pos:position pos:line="26" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="60">1<pos:position pos:line="26" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="63"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">write_or_die<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name><name pos:line="27" pos:column="30">pack_objects<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">.<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="43">in<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="47">sha1_to_hex<pos:position pos:line="27" pos:column="58"/></name><argument_list pos:line="27" pos:column="58">(<argument><expr><name><name pos:line="27" pos:column="59">object<pos:position pos:line="27" pos:column="65"/></name><operator pos:line="27" pos:column="65">-&gt;<pos:position pos:line="27" pos:column="70"/></operator><name pos:line="27" pos:column="67">sha1<pos:position pos:line="27" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="74">40<pos:position pos:line="27" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">write_or_die<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name><name pos:line="28" pos:column="30">pack_objects<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">.<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="43">in<pos:position pos:line="28" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="47">"\n"<pos:position pos:line="28" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="53">1<pos:position pos:line="28" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">close<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><name><name pos:line="30" pos:column="15">pack_objects<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">.<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="28">in<pos:position pos:line="30" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">finish_command<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><operator pos:line="31" pos:column="28">&amp;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="29">pack_objects<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="43"/></condition><then pos:line="31" pos:column="43">
		<block type="pseudo"><return pos:line="32" pos:column="17">return <expr><call><name pos:line="32" pos:column="24">error<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><call><name pos:line="32" pos:column="30">_<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><literal type="string" pos:line="32" pos:column="32">"pack-objects died"<pos:position pos:line="32" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="54"/></return></block></then></if>
	<return pos:line="33" pos:column="9">return <expr><literal type="number" pos:line="33" pos:column="16">0<pos:position pos:line="33" pos:column="17"/></literal></expr>;<pos:position pos:line="33" pos:column="18"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

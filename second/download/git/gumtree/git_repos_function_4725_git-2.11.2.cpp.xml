<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4725_git-2.11.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">origin_decref<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">origin<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">o<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">o<pos:position pos:line="3" pos:column="14"/></name> <operator pos:line="3" pos:column="15">&amp;&amp;<pos:position pos:line="3" pos:column="25"/></operator> <operator pos:line="3" pos:column="18">--<pos:position pos:line="3" pos:column="20"/></operator><name><name pos:line="3" pos:column="20">o<pos:position pos:line="3" pos:column="21"/></name><operator pos:line="3" pos:column="21">-&gt;<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="23">refcnt<pos:position pos:line="3" pos:column="29"/></name></name> <operator pos:line="3" pos:column="30">&lt;=<pos:position pos:line="3" pos:column="35"/></operator> <literal type="number" pos:line="3" pos:column="33">0<pos:position pos:line="3" pos:column="34"/></literal></expr>)<pos:position pos:line="3" pos:column="35"/></condition><then pos:line="3" pos:column="35"> <block pos:line="3" pos:column="36">{
		<decl_stmt><decl><type><name><name pos:line="4" pos:column="17">struct<pos:position pos:line="4" pos:column="23"/></name> <name pos:line="4" pos:column="24">origin<pos:position pos:line="4" pos:column="30"/></name></name> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type><name pos:line="4" pos:column="32">p<pos:position pos:line="4" pos:column="33"/></name></decl>, <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="36">l<pos:position pos:line="4" pos:column="37"/></name> <init pos:line="4" pos:column="38">= <expr><name pos:line="4" pos:column="40">NULL<pos:position pos:line="4" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><name><name pos:line="5" pos:column="21">o<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">previous<pos:position pos:line="5" pos:column="32"/></name></name></expr>)<pos:position pos:line="5" pos:column="33"/></condition><then pos:line="5" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="25">origin_decref<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><name><name pos:line="6" pos:column="39">o<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="42">previous<pos:position pos:line="6" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="52"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">free<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name><name pos:line="7" pos:column="22">o<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">file<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">.<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="30">ptr<pos:position pos:line="7" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
		<comment type="block" pos:line="8" pos:column="17">/* Should be present exactly once in commit chain */</comment>
		<for pos:line="9" pos:column="17">for <control pos:line="9" pos:column="21">(<init><expr><name pos:line="9" pos:column="22">p<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <name><name pos:line="9" pos:column="26">o<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">commit<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">util<pos:position pos:line="9" pos:column="41"/></name></name></expr>;<pos:position pos:line="9" pos:column="42"/></init> <condition><expr><name pos:line="9" pos:column="43">p<pos:position pos:line="9" pos:column="44"/></name></expr>;<pos:position pos:line="9" pos:column="45"/></condition> <incr><expr><name pos:line="9" pos:column="46">l<pos:position pos:line="9" pos:column="47"/></name> <operator pos:line="9" pos:column="48">=<pos:position pos:line="9" pos:column="49"/></operator> <name pos:line="9" pos:column="50">p<pos:position pos:line="9" pos:column="51"/></name></expr><operator pos:line="9" pos:column="51">,<pos:position pos:line="9" pos:column="52"/></operator> <expr><name pos:line="9" pos:column="53">p<pos:position pos:line="9" pos:column="54"/></name> <operator pos:line="9" pos:column="55">=<pos:position pos:line="9" pos:column="56"/></operator> <name><name pos:line="9" pos:column="57">p<pos:position pos:line="9" pos:column="58"/></name><operator pos:line="9" pos:column="58">-&gt;<pos:position pos:line="9" pos:column="63"/></operator><name pos:line="9" pos:column="60">next<pos:position pos:line="9" pos:column="64"/></name></name></expr></incr>)<pos:position pos:line="9" pos:column="65"/></control> <block pos:line="9" pos:column="66">{
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><name pos:line="10" pos:column="29">p<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">==<pos:position pos:line="10" pos:column="33"/></operator> <name pos:line="10" pos:column="34">o<pos:position pos:line="10" pos:column="35"/></name></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36"> <block pos:line="10" pos:column="37">{
				<if pos:line="11" pos:column="33">if <condition pos:line="11" pos:column="36">(<expr><name pos:line="11" pos:column="37">l<pos:position pos:line="11" pos:column="38"/></name></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="41">l<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">next<pos:position pos:line="12" pos:column="48"/></name></name> <operator pos:line="12" pos:column="49">=<pos:position pos:line="12" pos:column="50"/></operator> <name><name pos:line="12" pos:column="51">p<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">-&gt;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="54">next<pos:position pos:line="12" pos:column="58"/></name></name></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt></block></then>
				<else pos:line="13" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="41">o<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">commit<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">util<pos:position pos:line="14" pos:column="56"/></name></name> <operator pos:line="14" pos:column="57">=<pos:position pos:line="14" pos:column="58"/></operator> <name><name pos:line="14" pos:column="59">p<pos:position pos:line="14" pos:column="60"/></name><operator pos:line="14" pos:column="60">-&gt;<pos:position pos:line="14" pos:column="65"/></operator><name pos:line="14" pos:column="62">next<pos:position pos:line="14" pos:column="66"/></name></name></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt></block></else></if>
				<expr_stmt><expr><call><name pos:line="15" pos:column="33">free<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">o<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
				<return pos:line="16" pos:column="33">return;<pos:position pos:line="16" pos:column="40"/></return>
			}<pos:position pos:line="17" pos:column="26"/></block></then></if>
		}<pos:position pos:line="18" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">die<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><literal type="string" pos:line="19" pos:column="21">"internal error in blame::origin_decref"<pos:position pos:line="19" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_625.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">commit<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">parse_insn_line<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">bol<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">eol<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="61">struct<pos:position pos:line="1" pos:column="67"/></name> <name pos:line="1" pos:column="68">replay_opts<pos:position pos:line="1" pos:column="79"/></name></name> <modifier pos:line="1" pos:column="80">*<pos:position pos:line="1" pos:column="81"/></modifier></type><name pos:line="1" pos:column="81">opts<pos:position pos:line="1" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="86"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">commit_sha1<pos:position pos:line="3" pos:column="34"/></name><index pos:line="3" pos:column="34">[<expr><literal type="number" pos:line="3" pos:column="35">20<pos:position pos:line="3" pos:column="37"/></literal></expr>]<pos:position pos:line="3" pos:column="38"/></index></name></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">enum<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">replay_action<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">action<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">end_of_object_name<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">saved<pos:position pos:line="6" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="20">status<pos:position pos:line="6" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="28">padding<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">starts_with<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">bol<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="30">"pick"<pos:position pos:line="8" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38"> <block pos:line="8" pos:column="39">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">action<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">REPLAY_PICK<pos:position pos:line="9" pos:column="37"/></name></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">bol<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">+=<pos:position pos:line="10" pos:column="23"/></operator> <call><name pos:line="10" pos:column="24">strlen<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><literal type="string" pos:line="10" pos:column="31">"pick"<pos:position pos:line="10" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then> <elseif pos:line="11" pos:column="11">else <if pos:line="11" pos:column="16">if <condition pos:line="11" pos:column="19">(<expr><call><name pos:line="11" pos:column="20">starts_with<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">bol<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="37">"revert"<pos:position pos:line="11" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47"> <block pos:line="11" pos:column="48">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">action<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">REPLAY_REVERT<pos:position pos:line="12" pos:column="39"/></name></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="13" pos:column="17">bol<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">+=<pos:position pos:line="13" pos:column="23"/></operator> <call><name pos:line="13" pos:column="24">strlen<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><literal type="string" pos:line="13" pos:column="31">"revert"<pos:position pos:line="13" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if></elseif> <else pos:line="14" pos:column="11">else
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><name pos:line="15" pos:column="24">NULL<pos:position pos:line="15" pos:column="28"/></name></expr>;<pos:position pos:line="15" pos:column="29"/></return></block></else></if>

	<comment type="block" pos:line="17" pos:column="9">/* Eat up extra spaces/ tabs before object name */</comment>
	<expr_stmt><expr><name pos:line="18" pos:column="9">padding<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <call><name pos:line="18" pos:column="19">strspn<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">bol<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="31">" \t"<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">padding<pos:position pos:line="19" pos:column="21"/></name></expr>)<pos:position pos:line="19" pos:column="22"/></condition><then pos:line="19" pos:column="22">
		<block type="pseudo"><return pos:line="20" pos:column="17">return <expr><name pos:line="20" pos:column="24">NULL<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="21" pos:column="9">bol<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">+=<pos:position pos:line="21" pos:column="15"/></operator> <name pos:line="21" pos:column="16">padding<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>

	<expr_stmt><expr><name pos:line="23" pos:column="9">end_of_object_name<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">=<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">bol<pos:position pos:line="23" pos:column="33"/></name> <operator pos:line="23" pos:column="34">+<pos:position pos:line="23" pos:column="35"/></operator> <call><name pos:line="23" pos:column="36">strcspn<pos:position pos:line="23" pos:column="43"/></name><argument_list pos:line="23" pos:column="43">(<argument><expr><name pos:line="23" pos:column="44">bol<pos:position pos:line="23" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="49">" \t\n"<pos:position pos:line="23" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">saved<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <operator pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">end_of_object_name<pos:position pos:line="24" pos:column="36"/></name></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="25" pos:column="9">*<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">end_of_object_name<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <literal type="char" pos:line="25" pos:column="31">'\0'<pos:position pos:line="25" pos:column="35"/></literal></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">status<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <call><name pos:line="26" pos:column="18">get_sha1<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">bol<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="32">commit_sha1<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="27" pos:column="9">*<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">end_of_object_name<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">saved<pos:position pos:line="27" pos:column="36"/></name></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>

	<comment type="block" pos:line="29" pos:column="9">/*
	 * Verify that the action matches up with the one in
	 * opts; we don't support arbitrary instructions
	 */</comment>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">action<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">!=<pos:position pos:line="33" pos:column="22"/></operator> <name><name pos:line="33" pos:column="23">opts<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">action<pos:position pos:line="33" pos:column="35"/></name></name></expr>)<pos:position pos:line="33" pos:column="36"/></condition><then pos:line="33" pos:column="36"> <block pos:line="33" pos:column="37">{
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">action<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">==<pos:position pos:line="34" pos:column="30"/></operator> <name pos:line="34" pos:column="31">REPLAY_REVERT<pos:position pos:line="34" pos:column="44"/></name></expr>)<pos:position pos:line="34" pos:column="45"/></condition><then pos:line="34" pos:column="45">
		      <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="23">error<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><ternary><condition><expr><operator pos:line="35" pos:column="29">(<pos:position pos:line="35" pos:column="30"/></operator><name><name pos:line="35" pos:column="30">opts<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">-&gt;<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="36">action<pos:position pos:line="35" pos:column="42"/></name></name> <operator pos:line="35" pos:column="43">==<pos:position pos:line="35" pos:column="45"/></operator> <name pos:line="35" pos:column="46">REPLAY_REVERT<pos:position pos:line="35" pos:column="59"/></name><operator pos:line="35" pos:column="59">)<pos:position pos:line="35" pos:column="60"/></operator></expr>
			    ?<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30"> <expr><call><name pos:line="36" pos:column="31">_<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><literal type="string" pos:line="36" pos:column="33">"Cannot revert during another revert."<pos:position pos:line="36" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="72"/></argument_list></call></expr>
			    <pos:position pos:line="37" pos:column="8"/></then><else pos:line="37" pos:column="29">: <expr><call><name pos:line="37" pos:column="31">_<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><literal type="string" pos:line="37" pos:column="33">"Cannot revert during a cherry-pick."<pos:position pos:line="37" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="37" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="73"/></expr_stmt></block></then>
		<else pos:line="38" pos:column="17">else
		      <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="23">error<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><ternary><condition><expr><operator pos:line="39" pos:column="29">(<pos:position pos:line="39" pos:column="30"/></operator><name><name pos:line="39" pos:column="30">opts<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">-&gt;<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="36">action<pos:position pos:line="39" pos:column="42"/></name></name> <operator pos:line="39" pos:column="43">==<pos:position pos:line="39" pos:column="45"/></operator> <name pos:line="39" pos:column="46">REPLAY_REVERT<pos:position pos:line="39" pos:column="59"/></name><operator pos:line="39" pos:column="59">)<pos:position pos:line="39" pos:column="60"/></operator></expr>
			    ?<pos:position pos:line="40" pos:column="30"/></condition><then pos:line="40" pos:column="30"> <expr><call><name pos:line="40" pos:column="31">_<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><literal type="string" pos:line="40" pos:column="33">"Cannot cherry-pick during a revert."<pos:position pos:line="40" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="71"/></argument_list></call></expr>
			    <pos:position pos:line="41" pos:column="8"/></then><else pos:line="41" pos:column="29">: <expr><call><name pos:line="41" pos:column="31">_<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><literal type="string" pos:line="41" pos:column="33">"Cannot cherry-pick during another cherry-pick."<pos:position pos:line="41" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="82"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="41" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="84"/></expr_stmt></block></else></if>
		<return pos:line="42" pos:column="17">return <expr><name pos:line="42" pos:column="24">NULL<pos:position pos:line="42" pos:column="28"/></name></expr>;<pos:position pos:line="42" pos:column="29"/></return>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">status<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">&lt;<pos:position pos:line="45" pos:column="24"/></operator> <literal type="number" pos:line="45" pos:column="22">0<pos:position pos:line="45" pos:column="23"/></literal></expr>)<pos:position pos:line="45" pos:column="24"/></condition><then pos:line="45" pos:column="24">
		<block type="pseudo"><return pos:line="46" pos:column="17">return <expr><name pos:line="46" pos:column="24">NULL<pos:position pos:line="46" pos:column="28"/></name></expr>;<pos:position pos:line="46" pos:column="29"/></return></block></then></if>

	<return pos:line="48" pos:column="9">return <expr><call><name pos:line="48" pos:column="16">lookup_commit_reference<pos:position pos:line="48" pos:column="39"/></name><argument_list pos:line="48" pos:column="39">(<argument><expr><name pos:line="48" pos:column="40">commit_sha1<pos:position pos:line="48" pos:column="51"/></name></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="53"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_120_git-2.11.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">format_commit_message<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">commit<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">commit<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
			   <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">format<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="48">struct<pos:position pos:line="2" pos:column="54"/></name> <name pos:line="2" pos:column="55">strbuf<pos:position pos:line="2" pos:column="61"/></name></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">sb<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
			   <parameter><decl><type><specifier pos:line="3" pos:column="28">const<pos:position pos:line="3" pos:column="33"/></specifier> <name><name pos:line="3" pos:column="34">struct<pos:position pos:line="3" pos:column="40"/></name> <name pos:line="3" pos:column="41">pretty_print_context<pos:position pos:line="3" pos:column="61"/></name></name> <modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier></type><name pos:line="3" pos:column="63">pretty_ctx<pos:position pos:line="3" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="74"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">format_commit_context<pos:position pos:line="5" pos:column="37"/></name></name></type> <name pos:line="5" pos:column="38">context<pos:position pos:line="5" pos:column="45"/></name></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">output_enc<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><name><name pos:line="6" pos:column="34">pretty_ctx<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">output_encoding<pos:position pos:line="6" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">utf8<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><literal type="string" pos:line="7" pos:column="28">"UTF-8"<pos:position pos:line="7" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">memset<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><operator pos:line="9" pos:column="16">&amp;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="17">context<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="26">0<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="29">sizeof<argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">context<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">context<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">.<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">commit<pos:position pos:line="10" pos:column="23"/></name></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">commit<pos:position pos:line="10" pos:column="32"/></name></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">context<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">.<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">pretty_ctx<pos:position pos:line="11" pos:column="27"/></name></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">pretty_ctx<pos:position pos:line="11" pos:column="40"/></name></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">context<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">.<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">wrap_start<pos:position pos:line="12" pos:column="27"/></name></name> <operator pos:line="12" pos:column="28">=<pos:position pos:line="12" pos:column="29"/></operator> <name><name pos:line="12" pos:column="30">sb<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">len<pos:position pos:line="12" pos:column="37"/></name></name></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
	<comment type="block" pos:line="13" pos:column="9">/*
	 * convert a commit message to UTF-8 first
	 * as far as 'format_commit_item' assumes it in UTF-8
	 */</comment>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">context<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">.<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">message<pos:position pos:line="17" pos:column="24"/></name></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <call><name pos:line="17" pos:column="27">logmsg_reencode<pos:position pos:line="17" pos:column="42"/></name><argument_list pos:line="17" pos:column="42">(<argument><expr><name pos:line="17" pos:column="43">commit<pos:position pos:line="17" pos:column="49"/></name></expr></argument>,
					  <argument><expr><operator pos:line="18" pos:column="43">&amp;<pos:position pos:line="18" pos:column="48"/></operator><name><name pos:line="18" pos:column="44">context<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">.<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="52">commit_encoding<pos:position pos:line="18" pos:column="67"/></name></name></expr></argument>,
					  <argument><expr><name pos:line="19" pos:column="43">utf8<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="21" pos:column="9">strbuf_expand<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">sb<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="27">format<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">format_commit_item<pos:position pos:line="21" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="55">&amp;<pos:position pos:line="21" pos:column="60"/></operator><name pos:line="21" pos:column="56">context<pos:position pos:line="21" pos:column="63"/></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">rewrap_message_tail<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">sb<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="33">&amp;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="34">context<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="43">0<pos:position pos:line="22" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="46">0<pos:position pos:line="22" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="49">0<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>

	<comment type="block" pos:line="24" pos:column="9">/* then convert a commit message to an actual output encoding */</comment>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">output_enc<pos:position pos:line="25" pos:column="23"/></name></expr>)<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24"> <block pos:line="25" pos:column="25">{
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><call><name pos:line="26" pos:column="21">same_encoding<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><name pos:line="26" pos:column="35">utf8<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">output_enc<pos:position pos:line="26" pos:column="51"/></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">output_enc<pos:position pos:line="27" pos:column="35"/></name> <operator pos:line="27" pos:column="36">=<pos:position pos:line="27" pos:column="37"/></operator> <name pos:line="27" pos:column="38">NULL<pos:position pos:line="27" pos:column="42"/></name></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block></then> <else pos:line="28" pos:column="11">else <block pos:line="28" pos:column="16">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name><name pos:line="29" pos:column="21">context<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">.<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="29">commit_encoding<pos:position pos:line="29" pos:column="44"/></name></name> <operator pos:line="29" pos:column="45">&amp;&amp;<pos:position pos:line="29" pos:column="55"/></operator>
		    <operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><call><name pos:line="30" pos:column="22">same_encoding<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name><name pos:line="30" pos:column="36">context<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">.<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="44">commit_encoding<pos:position pos:line="30" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="61">utf8<pos:position pos:line="30" pos:column="65"/></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="67"/></condition><then pos:line="30" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="25">output_enc<pos:position pos:line="31" pos:column="35"/></name> <operator pos:line="31" pos:column="36">=<pos:position pos:line="31" pos:column="37"/></operator> <name><name pos:line="31" pos:column="38">context<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">.<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="46">commit_encoding<pos:position pos:line="31" pos:column="61"/></name></name></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt></block></then></if>
	}<pos:position pos:line="32" pos:column="10"/></block></else></if>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">output_enc<pos:position pos:line="34" pos:column="23"/></name></expr>)<pos:position pos:line="34" pos:column="24"/></condition><then pos:line="34" pos:column="24"> <block pos:line="34" pos:column="25">{
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">int<pos:position pos:line="35" pos:column="20"/></name></type> <name pos:line="35" pos:column="21">outsz<pos:position pos:line="35" pos:column="26"/></name></decl>;<pos:position pos:line="35" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">char<pos:position pos:line="36" pos:column="21"/></name> <modifier pos:line="36" pos:column="22">*<pos:position pos:line="36" pos:column="23"/></modifier></type><name pos:line="36" pos:column="23">out<pos:position pos:line="36" pos:column="26"/></name> <init pos:line="36" pos:column="27">= <expr><call><name pos:line="36" pos:column="29">reencode_string_len<pos:position pos:line="36" pos:column="48"/></name><argument_list pos:line="36" pos:column="48">(<argument><expr><name><name pos:line="36" pos:column="49">sb<pos:position pos:line="36" pos:column="51"/></name><operator pos:line="36" pos:column="51">-&gt;<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="53">buf<pos:position pos:line="36" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="58">sb<pos:position pos:line="36" pos:column="60"/></name><operator pos:line="36" pos:column="60">-&gt;<pos:position pos:line="36" pos:column="65"/></operator><name pos:line="36" pos:column="62">len<pos:position pos:line="36" pos:column="65"/></name></name></expr></argument>,
						<argument><expr><name pos:line="37" pos:column="49">output_enc<pos:position pos:line="37" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="61">utf8<pos:position pos:line="37" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="67">&amp;<pos:position pos:line="37" pos:column="72"/></operator><name pos:line="37" pos:column="68">outsz<pos:position pos:line="37" pos:column="73"/></name></expr></argument>)<pos:position pos:line="37" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="75"/></decl_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">out<pos:position pos:line="38" pos:column="24"/></name></expr>)<pos:position pos:line="38" pos:column="25"/></condition><then pos:line="38" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">strbuf_attach<pos:position pos:line="39" pos:column="38"/></name><argument_list pos:line="39" pos:column="38">(<argument><expr><name pos:line="39" pos:column="39">sb<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">out<pos:position pos:line="39" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="48">outsz<pos:position pos:line="39" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="55">outsz<pos:position pos:line="39" pos:column="60"/></name> <operator pos:line="39" pos:column="61">+<pos:position pos:line="39" pos:column="62"/></operator> <literal type="number" pos:line="39" pos:column="63">1<pos:position pos:line="39" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="66"/></expr_stmt></block></then></if>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="42" pos:column="9">free<pos:position pos:line="42" pos:column="13"/></name><argument_list pos:line="42" pos:column="13">(<argument><expr><name><name pos:line="42" pos:column="14">context<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">.<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">commit_encoding<pos:position pos:line="42" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">unuse_commit_buffer<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><name pos:line="43" pos:column="29">commit<pos:position pos:line="43" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="37">context<pos:position pos:line="43" pos:column="44"/></name><operator pos:line="43" pos:column="44">.<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="45">message<pos:position pos:line="43" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

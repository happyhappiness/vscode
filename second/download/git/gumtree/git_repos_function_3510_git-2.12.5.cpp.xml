<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3510_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">err<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name><name pos:line="1" pos:column="16">struct<pos:position pos:line="1" pos:column="22"/></name> <name pos:line="1" pos:column="23">merge_options<pos:position pos:line="1" pos:column="36"/></name></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">o<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">err<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="58">...<pos:position pos:line="1" pos:column="61"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">va_list<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">params<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">o<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">buffer_output<pos:position pos:line="5" pos:column="29"/></name></name> <operator pos:line="5" pos:column="30">&lt;<pos:position pos:line="5" pos:column="34"/></operator> <literal type="number" pos:line="5" pos:column="32">2<pos:position pos:line="5" pos:column="33"/></literal></expr>)<pos:position pos:line="5" pos:column="34"/></condition><then pos:line="5" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">flush_output<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><name pos:line="6" pos:column="30">o<pos:position pos:line="6" pos:column="31"/></name></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt></block></then>
	<else pos:line="7" pos:column="9">else <block pos:line="7" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">strbuf_complete<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><operator pos:line="8" pos:column="33">&amp;<pos:position pos:line="8" pos:column="38"/></operator><name><name pos:line="8" pos:column="34">o<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">obuf<pos:position pos:line="8" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="43">'\n'<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">strbuf_addstr<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><operator pos:line="9" pos:column="31">&amp;<pos:position pos:line="9" pos:column="36"/></operator><name><name pos:line="9" pos:column="32">o<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">obuf<pos:position pos:line="9" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="41">"error: "<pos:position pos:line="9" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">va_start<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">params<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="26">err<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">strbuf_vaddf<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><operator pos:line="12" pos:column="22">&amp;<pos:position pos:line="12" pos:column="27"/></operator><name><name pos:line="12" pos:column="23">o<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">obuf<pos:position pos:line="12" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">err<pos:position pos:line="12" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="37">params<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">va_end<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">params<pos:position pos:line="13" pos:column="22"/></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">o<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">buffer_output<pos:position pos:line="14" pos:column="29"/></name></name> <operator pos:line="14" pos:column="30">&gt;<pos:position pos:line="14" pos:column="34"/></operator> <literal type="number" pos:line="14" pos:column="32">1<pos:position pos:line="14" pos:column="33"/></literal></expr>)<pos:position pos:line="14" pos:column="34"/></condition><then pos:line="14" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">strbuf_addch<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><operator pos:line="15" pos:column="30">&amp;<pos:position pos:line="15" pos:column="35"/></operator><name><name pos:line="15" pos:column="31">o<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">obuf<pos:position pos:line="15" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="40">'\n'<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt></block></then>
	<else pos:line="16" pos:column="9">else <block pos:line="16" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">error<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><literal type="string" pos:line="17" pos:column="23">"%s"<pos:position pos:line="17" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="29">o<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">obuf<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">.<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">buf<pos:position pos:line="17" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">strbuf_reset<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><operator pos:line="18" pos:column="30">&amp;<pos:position pos:line="18" pos:column="35"/></operator><name><name pos:line="18" pos:column="31">o<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">obuf<pos:position pos:line="18" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></else></if>

	<return pos:line="21" pos:column="9">return <expr><operator pos:line="21" pos:column="16">-<pos:position pos:line="21" pos:column="17"/></operator><literal type="number" pos:line="21" pos:column="17">1<pos:position pos:line="21" pos:column="18"/></literal></expr>;<pos:position pos:line="21" pos:column="19"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

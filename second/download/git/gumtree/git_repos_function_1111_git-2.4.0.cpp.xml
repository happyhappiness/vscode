<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1111_git-2.4.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_diff_filter_opt<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">optarg<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="54">struct<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">diff_options<pos:position pos:line="1" pos:column="73"/></name></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">opt<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">optch<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">prepare_filter_bits<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">()<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>

	<comment type="block" pos:line="7" pos:column="9">/*
	 * If there is a negation e.g. 'd' in the input, and we haven't
	 * initialized the filter field with another --diff-filter, start
	 * from full set of bits, except for AON.
	 */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="14">opt<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">filter<pos:position pos:line="12" pos:column="25"/></name></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26"> <block pos:line="12" pos:column="27">{
		<for pos:line="13" pos:column="17">for <control pos:line="13" pos:column="21">(<init><expr><name pos:line="13" pos:column="22">i<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr>;<pos:position pos:line="13" pos:column="28"/></init> <condition><expr><operator pos:line="13" pos:column="29">(<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">optch<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">=<pos:position pos:line="13" pos:column="37"/></operator> <name><name pos:line="13" pos:column="38">optarg<pos:position pos:line="13" pos:column="44"/></name><index pos:line="13" pos:column="44">[<expr><name pos:line="13" pos:column="45">i<pos:position pos:line="13" pos:column="46"/></name></expr>]<pos:position pos:line="13" pos:column="47"/></index></name><operator pos:line="13" pos:column="47">)<pos:position pos:line="13" pos:column="48"/></operator> <operator pos:line="13" pos:column="49">!=<pos:position pos:line="13" pos:column="51"/></operator> <literal type="char" pos:line="13" pos:column="52">'\0'<pos:position pos:line="13" pos:column="56"/></literal></expr>;<pos:position pos:line="13" pos:column="57"/></condition> <incr><expr><name pos:line="13" pos:column="58">i<pos:position pos:line="13" pos:column="59"/></name><operator pos:line="13" pos:column="59">++<pos:position pos:line="13" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="62"/></control> <block pos:line="13" pos:column="63">{
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><name pos:line="14" pos:column="29">optch<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">&lt;<pos:position pos:line="14" pos:column="39"/></operator> <literal type="char" pos:line="14" pos:column="37">'a'<pos:position pos:line="14" pos:column="40"/></literal> <operator pos:line="14" pos:column="41">||<pos:position pos:line="14" pos:column="43"/></operator> <literal type="char" pos:line="14" pos:column="44">'z'<pos:position pos:line="14" pos:column="47"/></literal> <operator pos:line="14" pos:column="48">&lt;<pos:position pos:line="14" pos:column="52"/></operator> <name pos:line="14" pos:column="50">optch<pos:position pos:line="14" pos:column="55"/></name></expr>)<pos:position pos:line="14" pos:column="56"/></condition><then pos:line="14" pos:column="56">
				<block type="pseudo"><continue pos:line="15" pos:column="33">continue;<pos:position pos:line="15" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name><name pos:line="16" pos:column="25">opt<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">filter<pos:position pos:line="16" pos:column="36"/></name></name> <operator pos:line="16" pos:column="37">=<pos:position pos:line="16" pos:column="38"/></operator> <operator pos:line="16" pos:column="39">(<pos:position pos:line="16" pos:column="40"/></operator><literal type="number" pos:line="16" pos:column="40">1<pos:position pos:line="16" pos:column="41"/></literal> <operator pos:line="16" pos:column="42">&lt;&lt;<pos:position pos:line="16" pos:column="50"/></operator> <operator pos:line="16" pos:column="45">(<pos:position pos:line="16" pos:column="46"/></operator><call><name pos:line="16" pos:column="46">ARRAY_SIZE<pos:position pos:line="16" pos:column="56"/></name><argument_list pos:line="16" pos:column="56">(<argument><expr><name pos:line="16" pos:column="57">diff_status_letters<pos:position pos:line="16" pos:column="76"/></name></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call> <operator pos:line="16" pos:column="78">-<pos:position pos:line="16" pos:column="79"/></operator> <literal type="number" pos:line="16" pos:column="80">1<pos:position pos:line="16" pos:column="81"/></literal><operator pos:line="16" pos:column="81">)<pos:position pos:line="16" pos:column="82"/></operator><operator pos:line="16" pos:column="82">)<pos:position pos:line="16" pos:column="83"/></operator> <operator pos:line="16" pos:column="84">-<pos:position pos:line="16" pos:column="85"/></operator> <literal type="number" pos:line="16" pos:column="86">1<pos:position pos:line="16" pos:column="87"/></literal></expr>;<pos:position pos:line="16" pos:column="88"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="17" pos:column="25">opt<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">filter<pos:position pos:line="17" pos:column="36"/></name></name> <operator pos:line="17" pos:column="37">&amp;=<pos:position pos:line="17" pos:column="43"/></operator> <operator pos:line="17" pos:column="40">~<pos:position pos:line="17" pos:column="41"/></operator><name><name pos:line="17" pos:column="41">filter_bit<pos:position pos:line="17" pos:column="51"/></name><index pos:line="17" pos:column="51">[<expr><name pos:line="17" pos:column="52">DIFF_STATUS_FILTER_AON<pos:position pos:line="17" pos:column="74"/></name></expr>]<pos:position pos:line="17" pos:column="75"/></index></name></expr>;<pos:position pos:line="17" pos:column="76"/></expr_stmt>
			<break pos:line="18" pos:column="25">break;<pos:position pos:line="18" pos:column="31"/></break>
		}<pos:position pos:line="19" pos:column="18"/></block></for>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></init> <condition><expr><operator pos:line="22" pos:column="21">(<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">optch<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <name><name pos:line="22" pos:column="30">optarg<pos:position pos:line="22" pos:column="36"/></name><index pos:line="22" pos:column="36">[<expr><name pos:line="22" pos:column="37">i<pos:position pos:line="22" pos:column="38"/></name></expr>]<pos:position pos:line="22" pos:column="39"/></index></name><operator pos:line="22" pos:column="39">)<pos:position pos:line="22" pos:column="40"/></operator> <operator pos:line="22" pos:column="41">!=<pos:position pos:line="22" pos:column="43"/></operator> <literal type="char" pos:line="22" pos:column="44">'\0'<pos:position pos:line="22" pos:column="48"/></literal></expr>;<pos:position pos:line="22" pos:column="49"/></condition> <incr><expr><name pos:line="22" pos:column="50">i<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">++<pos:position pos:line="22" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="54"/></control> <block pos:line="22" pos:column="55">{
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">unsigned<pos:position pos:line="23" pos:column="25"/></name> <name pos:line="23" pos:column="26">int<pos:position pos:line="23" pos:column="29"/></name></type> <name pos:line="23" pos:column="30">bit<pos:position pos:line="23" pos:column="33"/></name></decl>;<pos:position pos:line="23" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">int<pos:position pos:line="24" pos:column="20"/></name></type> <name pos:line="24" pos:column="21">negate<pos:position pos:line="24" pos:column="27"/></name></decl>;<pos:position pos:line="24" pos:column="28"/></decl_stmt>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><literal type="char" pos:line="26" pos:column="21">'a'<pos:position pos:line="26" pos:column="24"/></literal> <operator pos:line="26" pos:column="25">&lt;=<pos:position pos:line="26" pos:column="30"/></operator> <name pos:line="26" pos:column="28">optch<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">&amp;&amp;<pos:position pos:line="26" pos:column="44"/></operator> <name pos:line="26" pos:column="37">optch<pos:position pos:line="26" pos:column="42"/></name> <operator pos:line="26" pos:column="43">&lt;=<pos:position pos:line="26" pos:column="48"/></operator> <literal type="char" pos:line="26" pos:column="46">'z'<pos:position pos:line="26" pos:column="49"/></literal></expr>)<pos:position pos:line="26" pos:column="50"/></condition><then pos:line="26" pos:column="50"> <block pos:line="26" pos:column="51">{
			<expr_stmt><expr><name pos:line="27" pos:column="25">negate<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">=<pos:position pos:line="27" pos:column="33"/></operator> <literal type="number" pos:line="27" pos:column="34">1<pos:position pos:line="27" pos:column="35"/></literal></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">optch<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">=<pos:position pos:line="28" pos:column="32"/></operator> <call><name pos:line="28" pos:column="33">toupper<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">optch<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></then> <else pos:line="29" pos:column="19">else <block pos:line="29" pos:column="24">{
			<expr_stmt><expr><name pos:line="30" pos:column="25">negate<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">=<pos:position pos:line="30" pos:column="33"/></operator> <literal type="number" pos:line="30" pos:column="34">0<pos:position pos:line="30" pos:column="35"/></literal></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name pos:line="33" pos:column="17">bit<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <ternary><condition><expr><operator pos:line="33" pos:column="23">(<pos:position pos:line="33" pos:column="24"/></operator><literal type="number" pos:line="33" pos:column="24">0<pos:position pos:line="33" pos:column="25"/></literal> <operator pos:line="33" pos:column="26">&lt;=<pos:position pos:line="33" pos:column="31"/></operator> <name pos:line="33" pos:column="29">optch<pos:position pos:line="33" pos:column="34"/></name> <operator pos:line="33" pos:column="35">&amp;&amp;<pos:position pos:line="33" pos:column="45"/></operator> <name pos:line="33" pos:column="38">optch<pos:position pos:line="33" pos:column="43"/></name> <operator pos:line="33" pos:column="44">&lt;=<pos:position pos:line="33" pos:column="49"/></operator> <literal type="char" pos:line="33" pos:column="47">'Z'<pos:position pos:line="33" pos:column="50"/></literal><operator pos:line="33" pos:column="50">)<pos:position pos:line="33" pos:column="51"/></operator></expr> ?<pos:position pos:line="33" pos:column="53"/></condition><then pos:line="33" pos:column="53"> <expr><name><name pos:line="33" pos:column="54">filter_bit<pos:position pos:line="33" pos:column="64"/></name><index pos:line="33" pos:column="64">[<expr><name pos:line="33" pos:column="65">optch<pos:position pos:line="33" pos:column="70"/></name></expr>]<pos:position pos:line="33" pos:column="71"/></index></name></expr> <pos:position pos:line="33" pos:column="72"/></then><else pos:line="33" pos:column="72">: <expr><literal type="number" pos:line="33" pos:column="74">0<pos:position pos:line="33" pos:column="75"/></literal></expr></else></ternary></expr>;<pos:position pos:line="33" pos:column="76"/></expr_stmt>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><operator pos:line="34" pos:column="21">!<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">bit<pos:position pos:line="34" pos:column="25"/></name></expr>)<pos:position pos:line="34" pos:column="26"/></condition><then pos:line="34" pos:column="26">
			<block type="pseudo"><return pos:line="35" pos:column="25">return <expr><name><name pos:line="35" pos:column="32">optarg<pos:position pos:line="35" pos:column="38"/></name><index pos:line="35" pos:column="38">[<expr><name pos:line="35" pos:column="39">i<pos:position pos:line="35" pos:column="40"/></name></expr>]<pos:position pos:line="35" pos:column="41"/></index></name></expr>;<pos:position pos:line="35" pos:column="42"/></return></block></then></if>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">negate<pos:position pos:line="36" pos:column="27"/></name></expr>)<pos:position pos:line="36" pos:column="28"/></condition><then pos:line="36" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="25">opt<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">-&gt;<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="30">filter<pos:position pos:line="37" pos:column="36"/></name></name> <operator pos:line="37" pos:column="37">&amp;=<pos:position pos:line="37" pos:column="43"/></operator> <operator pos:line="37" pos:column="40">~<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="41">bit<pos:position pos:line="37" pos:column="44"/></name></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt></block></then>
		<else pos:line="38" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="25">opt<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">filter<pos:position pos:line="39" pos:column="36"/></name></name> <operator pos:line="39" pos:column="37">|=<pos:position pos:line="39" pos:column="39"/></operator> <name pos:line="39" pos:column="40">bit<pos:position pos:line="39" pos:column="43"/></name></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt></block></else></if>
	}<pos:position pos:line="40" pos:column="10"/></block></for>
	<return pos:line="41" pos:column="9">return <expr><literal type="number" pos:line="41" pos:column="16">0<pos:position pos:line="41" pos:column="17"/></literal></expr>;<pos:position pos:line="41" pos:column="18"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4252_git-2.5.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_prune<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">argc<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">argv<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">prefix<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_info<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">revs<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">progress<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">progress<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><name pos:line="4" pos:column="37">NULL<pos:position pos:line="4" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name><name pos:line="5" pos:column="15">struct<pos:position pos:line="5" pos:column="21"/></name> <name pos:line="5" pos:column="22">option<pos:position pos:line="5" pos:column="28"/></name></name></type> <name><name pos:line="5" pos:column="29">options<pos:position pos:line="5" pos:column="36"/></name><index pos:line="5" pos:column="36">[]<pos:position pos:line="5" pos:column="38"/></index></name> <init pos:line="5" pos:column="39">= <expr><block pos:line="5" pos:column="41">{
		<expr><call><name pos:line="6" pos:column="17">OPT__DRY_RUN<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><operator pos:line="6" pos:column="30">&amp;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="31">show_only<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="42">N_<pos:position pos:line="6" pos:column="44"/></name><argument_list pos:line="6" pos:column="44">(<argument><expr><literal type="string" pos:line="6" pos:column="45">"do not remove, show only"<pos:position pos:line="6" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr>,
		<expr><call><name pos:line="7" pos:column="17">OPT__VERBOSE<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><operator pos:line="7" pos:column="30">&amp;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="31">verbose<pos:position pos:line="7" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="40">N_<pos:position pos:line="7" pos:column="42"/></name><argument_list pos:line="7" pos:column="42">(<argument><expr><literal type="string" pos:line="7" pos:column="43">"report pruned objects"<pos:position pos:line="7" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="68"/></argument_list></call></expr>,
		<expr><call><name pos:line="8" pos:column="17">OPT_BOOL<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="29">"progress"<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="41">&amp;<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="42">show_progress<pos:position pos:line="8" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="57">N_<pos:position pos:line="8" pos:column="59"/></name><argument_list pos:line="8" pos:column="59">(<argument><expr><literal type="string" pos:line="8" pos:column="60">"show progress"<pos:position pos:line="8" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call></expr>,
		<expr><call><name pos:line="9" pos:column="17">OPT_EXPIRY_DATE<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><literal type="number" pos:line="9" pos:column="33">0<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="36">"expire"<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="46">&amp;<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="47">expire<pos:position pos:line="9" pos:column="53"/></name></expr></argument>,
				<argument><expr><call><name pos:line="10" pos:column="33">N_<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><literal type="string" pos:line="10" pos:column="36">"expire objects older than &lt;time&gt;"<pos:position pos:line="10" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr>,
		<macro><name pos:line="11" pos:column="17">OPT_END<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">()<pos:position pos:line="11" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="12" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="12" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">s<pos:position pos:line="13" pos:column="16"/></name></decl>;<pos:position pos:line="13" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">expire<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">ULONG_MAX<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">save_commit_buffer<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <literal type="number" pos:line="16" pos:column="30">0<pos:position pos:line="16" pos:column="31"/></literal></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">check_replace_refs<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <literal type="number" pos:line="17" pos:column="30">0<pos:position pos:line="17" pos:column="31"/></literal></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">ref_paranoia<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <literal type="number" pos:line="18" pos:column="24">1<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">init_revisions<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><operator pos:line="19" pos:column="24">&amp;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="25">revs<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="31">prefix<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><name pos:line="21" pos:column="9">argc<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">parse_options<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">argc<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="36">argv<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">prefix<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">options<pos:position pos:line="21" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="59">prune_usage<pos:position pos:line="21" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="72">0<pos:position pos:line="21" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="75"/></expr_stmt>

	<while pos:line="23" pos:column="9">while <condition pos:line="23" pos:column="15">(<expr><name pos:line="23" pos:column="16">argc<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">--<pos:position pos:line="23" pos:column="22"/></operator></expr>)<pos:position pos:line="23" pos:column="23"/></condition> <block pos:line="23" pos:column="24">{
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">unsigned<pos:position pos:line="24" pos:column="25"/></name> <name pos:line="24" pos:column="26">char<pos:position pos:line="24" pos:column="30"/></name></type> <name><name pos:line="24" pos:column="31">sha1<pos:position pos:line="24" pos:column="35"/></name><index pos:line="24" pos:column="35">[<expr><literal type="number" pos:line="24" pos:column="36">20<pos:position pos:line="24" pos:column="38"/></literal></expr>]<pos:position pos:line="24" pos:column="39"/></index></name></decl>;<pos:position pos:line="24" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="25" pos:column="17">const<pos:position pos:line="25" pos:column="22"/></specifier> <name pos:line="25" pos:column="23">char<pos:position pos:line="25" pos:column="27"/></name> <modifier pos:line="25" pos:column="28">*<pos:position pos:line="25" pos:column="29"/></modifier></type><name pos:line="25" pos:column="29">name<pos:position pos:line="25" pos:column="33"/></name> <init pos:line="25" pos:column="34">= <expr><operator pos:line="25" pos:column="36">*<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="37">argv<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">++<pos:position pos:line="25" pos:column="43"/></operator></expr></init></decl>;<pos:position pos:line="25" pos:column="44"/></decl_stmt>

		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><call><name pos:line="27" pos:column="22">get_sha1<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">name<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">sha1<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43"> <block pos:line="27" pos:column="44">{
			<decl_stmt><decl><type><name><name pos:line="28" pos:column="25">struct<pos:position pos:line="28" pos:column="31"/></name> <name pos:line="28" pos:column="32">object<pos:position pos:line="28" pos:column="38"/></name></name> <modifier pos:line="28" pos:column="39">*<pos:position pos:line="28" pos:column="40"/></modifier></type><name pos:line="28" pos:column="40">object<pos:position pos:line="28" pos:column="46"/></name> <init pos:line="28" pos:column="47">= <expr><call><name pos:line="28" pos:column="49">parse_object_or_die<pos:position pos:line="28" pos:column="68"/></name><argument_list pos:line="28" pos:column="68">(<argument><expr><name pos:line="28" pos:column="69">sha1<pos:position pos:line="28" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="75">name<pos:position pos:line="28" pos:column="79"/></name></expr></argument>)<pos:position pos:line="28" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="81"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">add_pending_object<pos:position pos:line="29" pos:column="43"/></name><argument_list pos:line="29" pos:column="43">(<argument><expr><operator pos:line="29" pos:column="44">&amp;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="45">revs<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">object<pos:position pos:line="29" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="59">""<pos:position pos:line="29" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="63"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></then>
		<else pos:line="31" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="25">die<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><literal type="string" pos:line="32" pos:column="29">"unrecognized argument: %s"<pos:position pos:line="32" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="58">name<pos:position pos:line="32" pos:column="62"/></name></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="64"/></expr_stmt></block></else></if>
	}<pos:position pos:line="33" pos:column="10"/></block></while>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">show_progress<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">==<pos:position pos:line="35" pos:column="29"/></operator> <operator pos:line="35" pos:column="30">-<pos:position pos:line="35" pos:column="31"/></operator><literal type="number" pos:line="35" pos:column="31">1<pos:position pos:line="35" pos:column="32"/></literal></expr>)<pos:position pos:line="35" pos:column="33"/></condition><then pos:line="35" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="17">show_progress<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">=<pos:position pos:line="36" pos:column="32"/></operator> <call><name pos:line="36" pos:column="33">isatty<pos:position pos:line="36" pos:column="39"/></name><argument_list pos:line="36" pos:column="39">(<argument><expr><literal type="number" pos:line="36" pos:column="40">2<pos:position pos:line="36" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">show_progress<pos:position pos:line="37" pos:column="26"/></name></expr>)<pos:position pos:line="37" pos:column="27"/></condition><then pos:line="37" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="17">progress<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator> <call><name pos:line="38" pos:column="28">start_progress_delay<pos:position pos:line="38" pos:column="48"/></name><argument_list pos:line="38" pos:column="48">(<argument><expr><call><name pos:line="38" pos:column="49">_<pos:position pos:line="38" pos:column="50"/></name><argument_list pos:line="38" pos:column="50">(<argument><expr><literal type="string" pos:line="38" pos:column="51">"Checking connectivity"<pos:position pos:line="38" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="77">0<pos:position pos:line="38" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="80">0<pos:position pos:line="38" pos:column="81"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="83">2<pos:position pos:line="38" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="86"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="40" pos:column="9">mark_reachable_objects<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><operator pos:line="40" pos:column="32">&amp;<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="33">revs<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="39">1<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="42">expire<pos:position pos:line="40" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="50">progress<pos:position pos:line="40" pos:column="58"/></name></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">stop_progress<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><operator pos:line="41" pos:column="23">&amp;<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="24">progress<pos:position pos:line="41" pos:column="32"/></name></expr></argument>)<pos:position pos:line="41" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">for_each_loose_file_in_objdir<pos:position pos:line="42" pos:column="38"/></name><argument_list pos:line="42" pos:column="38">(<argument><expr><call><name pos:line="42" pos:column="39">get_object_directory<pos:position pos:line="42" pos:column="59"/></name><argument_list pos:line="42" pos:column="59">()<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="42" pos:column="63">prune_object<pos:position pos:line="42" pos:column="75"/></name></expr></argument>,
				      <argument><expr><name pos:line="43" pos:column="39">prune_cruft<pos:position pos:line="43" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="52">prune_subdir<pos:position pos:line="43" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="66">NULL<pos:position pos:line="43" pos:column="70"/></name></expr></argument>)<pos:position pos:line="43" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="72"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="45" pos:column="9">prune_packed_objects<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><ternary><condition><expr><name pos:line="45" pos:column="30">show_only<pos:position pos:line="45" pos:column="39"/></name></expr> ?<pos:position pos:line="45" pos:column="41"/></condition><then pos:line="45" pos:column="41"> <expr><name pos:line="45" pos:column="42">PRUNE_PACKED_DRY_RUN<pos:position pos:line="45" pos:column="62"/></name></expr> <pos:position pos:line="45" pos:column="63"/></then><else pos:line="45" pos:column="63">: <expr><literal type="number" pos:line="45" pos:column="65">0<pos:position pos:line="45" pos:column="66"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="45" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">remove_temporary_files<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><call><name pos:line="46" pos:column="32">get_object_directory<pos:position pos:line="46" pos:column="52"/></name><argument_list pos:line="46" pos:column="52">()<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name pos:line="47" pos:column="9">s<pos:position pos:line="47" pos:column="10"/></name> <operator pos:line="47" pos:column="11">=<pos:position pos:line="47" pos:column="12"/></operator> <call><name pos:line="47" pos:column="13">mkpathdup<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><literal type="string" pos:line="47" pos:column="23">"%s/pack"<pos:position pos:line="47" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="34">get_object_directory<pos:position pos:line="47" pos:column="54"/></name><argument_list pos:line="47" pos:column="54">()<pos:position pos:line="47" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">remove_temporary_files<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><name pos:line="48" pos:column="32">s<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">free<pos:position pos:line="49" pos:column="13"/></name><argument_list pos:line="49" pos:column="13">(<argument><expr><name pos:line="49" pos:column="14">s<pos:position pos:line="49" pos:column="15"/></name></expr></argument>)<pos:position pos:line="49" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="17"/></expr_stmt>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><call><name pos:line="51" pos:column="13">is_repository_shallow<pos:position pos:line="51" pos:column="34"/></name><argument_list pos:line="51" pos:column="34">()<pos:position pos:line="51" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="37"/></condition><then pos:line="51" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="17">prune_shallow<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">show_only<pos:position pos:line="52" pos:column="40"/></name></expr></argument>)<pos:position pos:line="52" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt></block></then></if>

	<return pos:line="54" pos:column="9">return <expr><literal type="number" pos:line="54" pos:column="16">0<pos:position pos:line="54" pos:column="17"/></literal></expr>;<pos:position pos:line="54" pos:column="18"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

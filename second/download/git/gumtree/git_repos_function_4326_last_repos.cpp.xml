<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4326_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">append_header_grep_pattern<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">grep_opt<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">opt<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="2" pos:column="33">enum<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">grep_header_field<pos:position pos:line="2" pos:column="55"/></name></name></type> <name pos:line="2" pos:column="56">field<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="63">const<pos:position pos:line="2" pos:column="68"/></specifier> <name pos:line="2" pos:column="69">char<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">pat<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">grep_pat<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">p<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><call><name pos:line="4" pos:column="30">create_grep_pat<pos:position pos:line="4" pos:column="45"/></name><argument_list pos:line="4" pos:column="45">(<argument><expr><name pos:line="4" pos:column="46">pat<pos:position pos:line="4" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="51">strlen<pos:position pos:line="4" pos:column="57"/></name><argument_list pos:line="4" pos:column="57">(<argument><expr><name pos:line="4" pos:column="58">pat<pos:position pos:line="4" pos:column="61"/></name></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="64">"header"<pos:position pos:line="4" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="74">0<pos:position pos:line="4" pos:column="75"/></literal></expr></argument>,
					     <argument><expr><name pos:line="5" pos:column="46">GREP_PATTERN_HEAD<pos:position pos:line="5" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="65">field<pos:position pos:line="5" pos:column="70"/></name></expr></argument>)<pos:position pos:line="5" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="72"/></decl_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">field<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">==<pos:position pos:line="6" pos:column="21"/></operator> <name pos:line="6" pos:column="22">GREP_HEADER_REFLOG<pos:position pos:line="6" pos:column="40"/></name></expr>)<pos:position pos:line="6" pos:column="41"/></condition><then pos:line="6" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="7" pos:column="17">opt<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">use_reflog_filter<pos:position pos:line="7" pos:column="39"/></name></name> <operator pos:line="7" pos:column="40">=<pos:position pos:line="7" pos:column="41"/></operator> <literal type="number" pos:line="7" pos:column="42">1<pos:position pos:line="7" pos:column="43"/></literal></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">do_append_grep_pat<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><operator pos:line="8" pos:column="28">&amp;<pos:position pos:line="8" pos:column="33"/></operator><name><name pos:line="8" pos:column="29">opt<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">header_tail<pos:position pos:line="8" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="47">p<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

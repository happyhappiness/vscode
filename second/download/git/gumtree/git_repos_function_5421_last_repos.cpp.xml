<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5421_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">split_mail_conv<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">mail_conv_fn<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">fn<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="45">struct<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">am_state<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">state<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier><modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">paths<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">keep_cr<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><specifier pos:line="4" pos:column="16">const<pos:position pos:line="4" pos:column="21"/></specifier> <name pos:line="4" pos:column="22">char<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name><name pos:line="4" pos:column="28">stdin_only<pos:position pos:line="4" pos:column="38"/></name><index pos:line="4" pos:column="38">[]<pos:position pos:line="4" pos:column="40"/></index></name> <init pos:line="4" pos:column="41">= <expr><block pos:line="4" pos:column="43">{<expr><literal type="string" pos:line="4" pos:column="44">"-"<pos:position pos:line="4" pos:column="47"/></literal></expr>, <expr><name pos:line="4" pos:column="49">NULL<pos:position pos:line="4" pos:column="53"/></name></expr>}<pos:position pos:line="4" pos:column="54"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><operator pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">paths<pos:position pos:line="7" pos:column="20"/></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition><then pos:line="7" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">paths<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">stdin_only<pos:position pos:line="8" pos:column="35"/></name></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt></block></then></if>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></init> <condition><expr><operator pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">paths<pos:position pos:line="10" pos:column="27"/></name></expr>;<pos:position pos:line="10" pos:column="28"/></condition> <incr><expr><name pos:line="10" pos:column="29">paths<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">++<pos:position pos:line="10" pos:column="36"/></operator></expr><operator pos:line="10" pos:column="36">,<pos:position pos:line="10" pos:column="37"/></operator> <expr><name pos:line="10" pos:column="38">i<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">++<pos:position pos:line="10" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="42"/></control> <block pos:line="10" pos:column="43">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">FILE<pos:position pos:line="11" pos:column="21"/></name> <modifier pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></modifier></type><name pos:line="11" pos:column="23">in<pos:position pos:line="11" pos:column="25"/></name></decl>, <modifier pos:line="11" pos:column="27">*<pos:position pos:line="11" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="28">out<pos:position pos:line="11" pos:column="31"/></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="12" pos:column="17">const<pos:position pos:line="12" pos:column="22"/></specifier> <name pos:line="12" pos:column="23">char<pos:position pos:line="12" pos:column="27"/></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">mail<pos:position pos:line="12" pos:column="33"/></name></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">ret<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><call><name pos:line="15" pos:column="22">strcmp<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><operator pos:line="15" pos:column="29">*<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">paths<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="37">"-"<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="25">in<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="30">stdin<pos:position pos:line="16" pos:column="35"/></name></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt></block></then>
		<else pos:line="17" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">in<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <call><name pos:line="18" pos:column="30">fopen<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><operator pos:line="18" pos:column="36">*<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="37">paths<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="44">"r"<pos:position pos:line="18" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt></block></else></if>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">in<pos:position pos:line="20" pos:column="24"/></name></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25">
			<block type="pseudo"><return pos:line="21" pos:column="25">return <expr><call><name pos:line="21" pos:column="32">error_errno<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><call><name pos:line="21" pos:column="44">_<pos:position pos:line="21" pos:column="45"/></name><argument_list pos:line="21" pos:column="45">(<argument><expr><literal type="string" pos:line="21" pos:column="46">"could not open '%s' for reading"<pos:position pos:line="21" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="80"/></argument_list></call></expr></argument>,
					   <argument><expr><operator pos:line="22" pos:column="44">*<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="45">paths<pos:position pos:line="22" pos:column="50"/></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="24" pos:column="17">mail<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <call><name pos:line="24" pos:column="24">mkpath<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><literal type="string" pos:line="24" pos:column="31">"%s/%0*d"<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="42">state<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">dir<pos:position pos:line="24" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="54">state<pos:position pos:line="24" pos:column="59"/></name><operator pos:line="24" pos:column="59">-&gt;<pos:position pos:line="24" pos:column="64"/></operator><name pos:line="24" pos:column="61">prec<pos:position pos:line="24" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="67">i<pos:position pos:line="24" pos:column="68"/></name> <operator pos:line="24" pos:column="69">+<pos:position pos:line="24" pos:column="70"/></operator> <literal type="number" pos:line="24" pos:column="71">1<pos:position pos:line="24" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="74"/></expr_stmt>

		<expr_stmt><expr><name pos:line="26" pos:column="17">out<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <call><name pos:line="26" pos:column="23">fopen<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">mail<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="35">"w"<pos:position pos:line="26" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">out<pos:position pos:line="27" pos:column="25"/></name></expr>)<pos:position pos:line="27" pos:column="26"/></condition><then pos:line="27" pos:column="26"> <block pos:line="27" pos:column="27">{
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><name pos:line="28" pos:column="29">in<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">!=<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="35">stdin<pos:position pos:line="28" pos:column="40"/></name></expr>)<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="33">fclose<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">(<argument><expr><name pos:line="29" pos:column="40">in<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt></block></then></if>
			<return pos:line="30" pos:column="25">return <expr><call><name pos:line="30" pos:column="32">error_errno<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><call><name pos:line="30" pos:column="44">_<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><literal type="string" pos:line="30" pos:column="46">"could not open '%s' for writing"<pos:position pos:line="30" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="80"/></argument_list></call></expr></argument>,
					   <argument><expr><name pos:line="31" pos:column="44">mail<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="50"/></return>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="34" pos:column="17">ret<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <call><name pos:line="34" pos:column="23">fn<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">out<pos:position pos:line="34" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="31">in<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="35">keep_cr<pos:position pos:line="34" pos:column="42"/></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="36" pos:column="17">fclose<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">out<pos:position pos:line="36" pos:column="27"/></name></expr></argument>)<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">in<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">!=<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="27">stdin<pos:position pos:line="37" pos:column="32"/></name></expr>)<pos:position pos:line="37" pos:column="33"/></condition><then pos:line="37" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="25">fclose<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">in<pos:position pos:line="38" pos:column="34"/></name></expr></argument>)<pos:position pos:line="38" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt></block></then></if>

		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">ret<pos:position pos:line="40" pos:column="24"/></name></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25">
			<block type="pseudo"><return pos:line="41" pos:column="25">return <expr><call><name pos:line="41" pos:column="32">error<pos:position pos:line="41" pos:column="37"/></name><argument_list pos:line="41" pos:column="37">(<argument><expr><call><name pos:line="41" pos:column="38">_<pos:position pos:line="41" pos:column="39"/></name><argument_list pos:line="41" pos:column="39">(<argument><expr><literal type="string" pos:line="41" pos:column="40">"could not parse patch '%s'"<pos:position pos:line="41" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="41" pos:column="71">*<pos:position pos:line="41" pos:column="72"/></operator><name pos:line="41" pos:column="72">paths<pos:position pos:line="41" pos:column="77"/></name></expr></argument>)<pos:position pos:line="41" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="79"/></return></block></then></if>
	}<pos:position pos:line="42" pos:column="10"/></block></for>

	<expr_stmt><expr><name><name pos:line="44" pos:column="9">state<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">cur<pos:position pos:line="44" pos:column="19"/></name></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <literal type="number" pos:line="44" pos:column="22">1<pos:position pos:line="44" pos:column="23"/></literal></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">state<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">-&gt;<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="16">last<pos:position pos:line="45" pos:column="20"/></name></name> <operator pos:line="45" pos:column="21">=<pos:position pos:line="45" pos:column="22"/></operator> <name pos:line="45" pos:column="23">i<pos:position pos:line="45" pos:column="24"/></name></expr>;<pos:position pos:line="45" pos:column="25"/></expr_stmt>
	<return pos:line="46" pos:column="9">return <expr><literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr>;<pos:position pos:line="46" pos:column="18"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

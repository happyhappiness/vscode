<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4977_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">create_reflog_msg<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">object_id<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">oid<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="60">struct<pos:position pos:line="1" pos:column="66"/></name> <name pos:line="1" pos:column="67">strbuf<pos:position pos:line="1" pos:column="73"/></name></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">sb<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">enum<pos:position pos:line="3" pos:column="13"/></name> <name pos:line="3" pos:column="14">object_type<pos:position pos:line="3" pos:column="25"/></name></name></type> <name pos:line="3" pos:column="26">type<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">c<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">buf<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">size<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">subject_len<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><literal type="number" pos:line="7" pos:column="27">0<pos:position pos:line="7" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">subject_start<pos:position pos:line="8" pos:column="34"/></name></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">rla<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><call><name pos:line="10" pos:column="21">getenv<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><literal type="string" pos:line="10" pos:column="28">"GIT_REFLOG_ACTION"<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="49"/></decl_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">rla<pos:position pos:line="11" pos:column="16"/></name></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17"> <block pos:line="11" pos:column="18">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">strbuf_addstr<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">sb<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">rla<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then> <else pos:line="13" pos:column="11">else <block pos:line="13" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">strbuf_addstr<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">sb<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="35">"tag: tagging "<pos:position pos:line="14" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">strbuf_add_unique_abbrev<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">sb<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="46">oid<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">-&gt;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="51">hash<pos:position pos:line="15" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="57">DEFAULT_ABBREV<pos:position pos:line="15" pos:column="71"/></name></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">strbuf_addstr<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">sb<pos:position pos:line="18" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="27">" ("<pos:position pos:line="18" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">type<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">sha1_object_info<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name><name pos:line="19" pos:column="33">oid<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">hash<pos:position pos:line="19" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="44">NULL<pos:position pos:line="19" pos:column="48"/></name></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
	<switch pos:line="20" pos:column="9">switch <condition pos:line="20" pos:column="16">(<expr><name pos:line="20" pos:column="17">type<pos:position pos:line="20" pos:column="21"/></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition> <block pos:line="20" pos:column="23">{
	<default pos:line="21" pos:column="9">default:<pos:position pos:line="21" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">strbuf_addstr<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">sb<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="35">"object of unknown type"<pos:position pos:line="22" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>
		<break pos:line="23" pos:column="17">break;<pos:position pos:line="23" pos:column="23"/></break>
	<case pos:line="24" pos:column="9">case <expr><name pos:line="24" pos:column="14">OBJ_COMMIT<pos:position pos:line="24" pos:column="24"/></name></expr>:<pos:position pos:line="24" pos:column="25"/></case>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">(<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">buf<pos:position pos:line="25" pos:column="25"/></name> <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <call><name pos:line="25" pos:column="28">read_sha1_file<pos:position pos:line="25" pos:column="42"/></name><argument_list pos:line="25" pos:column="42">(<argument><expr><name><name pos:line="25" pos:column="43">oid<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">hash<pos:position pos:line="25" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="54">&amp;<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="55">type<pos:position pos:line="25" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="61">&amp;<pos:position pos:line="25" pos:column="66"/></operator><name pos:line="25" pos:column="62">size<pos:position pos:line="25" pos:column="66"/></name></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call><operator pos:line="25" pos:column="67">)<pos:position pos:line="25" pos:column="68"/></operator> <operator pos:line="25" pos:column="69">!=<pos:position pos:line="25" pos:column="71"/></operator> <name pos:line="25" pos:column="72">NULL<pos:position pos:line="25" pos:column="76"/></name></expr>)<pos:position pos:line="25" pos:column="77"/></condition><then pos:line="25" pos:column="77"> <block pos:line="25" pos:column="78">{
			<expr_stmt><expr><name pos:line="26" pos:column="25">subject_len<pos:position pos:line="26" pos:column="36"/></name> <operator pos:line="26" pos:column="37">=<pos:position pos:line="26" pos:column="38"/></operator> <call><name pos:line="26" pos:column="39">find_commit_subject<pos:position pos:line="26" pos:column="58"/></name><argument_list pos:line="26" pos:column="58">(<argument><expr><name pos:line="26" pos:column="59">buf<pos:position pos:line="26" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="64">&amp;<pos:position pos:line="26" pos:column="69"/></operator><name pos:line="26" pos:column="65">subject_start<pos:position pos:line="26" pos:column="78"/></name></expr></argument>)<pos:position pos:line="26" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="80"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">strbuf_insert<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">sb<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="43">sb<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">-&gt;<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="47">len<pos:position pos:line="27" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="52">subject_start<pos:position pos:line="27" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="67">subject_len<pos:position pos:line="27" pos:column="78"/></name></expr></argument>)<pos:position pos:line="27" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="80"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then> <else pos:line="28" pos:column="19">else <block pos:line="28" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">strbuf_addstr<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><name pos:line="29" pos:column="39">sb<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="43">"commit object"<pos:position pos:line="29" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">free<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">buf<pos:position pos:line="31" pos:column="25"/></name></expr></argument>)<pos:position pos:line="31" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">(<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">c<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <call><name pos:line="33" pos:column="26">lookup_commit_reference<pos:position pos:line="33" pos:column="49"/></name><argument_list pos:line="33" pos:column="49">(<argument><expr><name pos:line="33" pos:column="50">oid<pos:position pos:line="33" pos:column="53"/></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call><operator pos:line="33" pos:column="54">)<pos:position pos:line="33" pos:column="55"/></operator> <operator pos:line="33" pos:column="56">!=<pos:position pos:line="33" pos:column="58"/></operator> <name pos:line="33" pos:column="59">NULL<pos:position pos:line="33" pos:column="63"/></name></expr>)<pos:position pos:line="33" pos:column="64"/></condition><then pos:line="33" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="25">strbuf_addf<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><name pos:line="34" pos:column="37">sb<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="41">", %s"<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="49">show_date<pos:position pos:line="34" pos:column="58"/></name><argument_list pos:line="34" pos:column="58">(<argument><expr><name><name pos:line="34" pos:column="59">c<pos:position pos:line="34" pos:column="60"/></name><operator pos:line="34" pos:column="60">-&gt;<pos:position pos:line="34" pos:column="65"/></operator><name pos:line="34" pos:column="62">date<pos:position pos:line="34" pos:column="66"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="68">0<pos:position pos:line="34" pos:column="69"/></literal></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="71">DATE_MODE<pos:position pos:line="34" pos:column="80"/></name><argument_list pos:line="34" pos:column="80">(<argument><expr><name pos:line="34" pos:column="81">SHORT<pos:position pos:line="34" pos:column="86"/></name></expr></argument>)<pos:position pos:line="34" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="90"/></expr_stmt></block></then></if>
		<break pos:line="35" pos:column="17">break;<pos:position pos:line="35" pos:column="23"/></break>
	<case pos:line="36" pos:column="9">case <expr><name pos:line="36" pos:column="14">OBJ_TREE<pos:position pos:line="36" pos:column="22"/></name></expr>:<pos:position pos:line="36" pos:column="23"/></case>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">strbuf_addstr<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">sb<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="35">"tree object"<pos:position pos:line="37" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt>
		<break pos:line="38" pos:column="17">break;<pos:position pos:line="38" pos:column="23"/></break>
	<case pos:line="39" pos:column="9">case <expr><name pos:line="39" pos:column="14">OBJ_BLOB<pos:position pos:line="39" pos:column="22"/></name></expr>:<pos:position pos:line="39" pos:column="23"/></case>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">strbuf_addstr<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">sb<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="35">"blob object"<pos:position pos:line="40" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="50"/></expr_stmt>
		<break pos:line="41" pos:column="17">break;<pos:position pos:line="41" pos:column="23"/></break>
	<case pos:line="42" pos:column="9">case <expr><name pos:line="42" pos:column="14">OBJ_TAG<pos:position pos:line="42" pos:column="21"/></name></expr>:<pos:position pos:line="42" pos:column="22"/></case>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">strbuf_addstr<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">sb<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="35">"other tag object"<pos:position pos:line="43" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="55"/></expr_stmt>
		<break pos:line="44" pos:column="17">break;<pos:position pos:line="44" pos:column="23"/></break>
	}<pos:position pos:line="45" pos:column="10"/></block></switch>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">strbuf_addch<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">sb<pos:position pos:line="46" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="46" pos:column="26">')'<pos:position pos:line="46" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4884_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_octopus_merge_base<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">object_id<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">merge_base<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name><name pos:line="2" pos:column="23">struct<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">object_id<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">curr_head<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="3" pos:column="17">const<pos:position pos:line="3" pos:column="22"/></specifier> <name><name pos:line="3" pos:column="23">struct<pos:position pos:line="3" pos:column="29"/></name> <name pos:line="3" pos:column="30">object_id<pos:position pos:line="3" pos:column="39"/></name></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">merge_head<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="4" pos:column="17">const<pos:position pos:line="4" pos:column="22"/></specifier> <name><name pos:line="4" pos:column="23">struct<pos:position pos:line="4" pos:column="29"/></name> <name pos:line="4" pos:column="30">object_id<pos:position pos:line="4" pos:column="39"/></name></name> <modifier pos:line="4" pos:column="40">*<pos:position pos:line="4" pos:column="41"/></modifier></type><name pos:line="4" pos:column="41">fork_point<pos:position pos:line="4" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="52"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit_list<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">revs<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><name pos:line="6" pos:column="36">NULL<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="42">*<pos:position pos:line="6" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="43">result<pos:position pos:line="6" pos:column="49"/></name></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">commit_list_insert<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><call><name pos:line="8" pos:column="28">lookup_commit_reference<pos:position pos:line="8" pos:column="51"/></name><argument_list pos:line="8" pos:column="51">(<argument><expr><name><name pos:line="8" pos:column="52">curr_head<pos:position pos:line="8" pos:column="61"/></name><operator pos:line="8" pos:column="61">-&gt;<pos:position pos:line="8" pos:column="66"/></operator><name pos:line="8" pos:column="63">hash<pos:position pos:line="8" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="8" pos:column="70">&amp;<pos:position pos:line="8" pos:column="75"/></operator><name pos:line="8" pos:column="71">revs<pos:position pos:line="8" pos:column="75"/></name></expr></argument>)<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="77"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">commit_list_insert<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><call><name pos:line="9" pos:column="28">lookup_commit_reference<pos:position pos:line="9" pos:column="51"/></name><argument_list pos:line="9" pos:column="51">(<argument><expr><name><name pos:line="9" pos:column="52">merge_head<pos:position pos:line="9" pos:column="62"/></name><operator pos:line="9" pos:column="62">-&gt;<pos:position pos:line="9" pos:column="67"/></operator><name pos:line="9" pos:column="64">hash<pos:position pos:line="9" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="9" pos:column="71">&amp;<pos:position pos:line="9" pos:column="76"/></operator><name pos:line="9" pos:column="72">revs<pos:position pos:line="9" pos:column="76"/></name></expr></argument>)<pos:position pos:line="9" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="78"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">is_null_oid<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">fork_point<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="38"/></condition><then pos:line="10" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">commit_list_insert<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><call><name pos:line="11" pos:column="36">lookup_commit_reference<pos:position pos:line="11" pos:column="59"/></name><argument_list pos:line="11" pos:column="59">(<argument><expr><name><name pos:line="11" pos:column="60">fork_point<pos:position pos:line="11" pos:column="70"/></name><operator pos:line="11" pos:column="70">-&gt;<pos:position pos:line="11" pos:column="75"/></operator><name pos:line="11" pos:column="72">hash<pos:position pos:line="11" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="11" pos:column="79">&amp;<pos:position pos:line="11" pos:column="84"/></operator><name pos:line="11" pos:column="80">revs<pos:position pos:line="11" pos:column="84"/></name></expr></argument>)<pos:position pos:line="11" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="86"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="13" pos:column="9">result<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">reduce_heads<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><call><name pos:line="13" pos:column="31">get_octopus_merge_bases<pos:position pos:line="13" pos:column="54"/></name><argument_list pos:line="13" pos:column="54">(<argument><expr><name pos:line="13" pos:column="55">revs<pos:position pos:line="13" pos:column="59"/></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">free_commit_list<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">revs<pos:position pos:line="14" pos:column="30"/></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">result<pos:position pos:line="15" pos:column="20"/></name></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><literal type="number" pos:line="16" pos:column="24">1<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">oidcpy<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">merge_base<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="28">&amp;<pos:position pos:line="18" pos:column="33"/></operator><name><name pos:line="18" pos:column="29">result<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">-&gt;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="37">item<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">-&gt;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="43">object<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">.<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="50">oid<pos:position pos:line="18" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
	<return pos:line="19" pos:column="9">return <expr><literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

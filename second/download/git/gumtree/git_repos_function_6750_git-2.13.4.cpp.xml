<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6750_git-2.13.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">FORCEINLINE<pos:position pos:line="1" pos:column="19"/></name> <name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name><modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type> <name pos:line="1" pos:column="26">win32mmap<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">size_t<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">size<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <block pos:line="1" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">void<pos:position pos:line="2" pos:column="7"/></name><modifier pos:line="2" pos:column="7">*<pos:position pos:line="2" pos:column="8"/></modifier></type> <name pos:line="2" pos:column="9">ptr<pos:position pos:line="2" pos:column="12"/></name> <init pos:line="2" pos:column="13">= <expr><call><name pos:line="2" pos:column="15">VirtualAlloc<pos:position pos:line="2" pos:column="27"/></name><argument_list pos:line="2" pos:column="27">(<argument><expr><literal type="number" pos:line="2" pos:column="28">0<pos:position pos:line="2" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="2" pos:column="31">size<pos:position pos:line="2" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="37">MEM_RESERVE<pos:position pos:line="2" pos:column="48"/></name><operator pos:line="2" pos:column="48">|<pos:position pos:line="2" pos:column="49"/></operator><name pos:line="2" pos:column="49">MEM_COMMIT<pos:position pos:line="2" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="61">PAGE_READWRITE<pos:position pos:line="2" pos:column="75"/></name></expr></argument>)<pos:position pos:line="2" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="77"/></decl_stmt>
  <return pos:line="3" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="3" pos:column="10">(<pos:position pos:line="3" pos:column="11"/></operator><name pos:line="3" pos:column="11">ptr<pos:position pos:line="3" pos:column="14"/></name> <operator pos:line="3" pos:column="15">!=<pos:position pos:line="3" pos:column="17"/></operator> <literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal><operator pos:line="3" pos:column="19">)<pos:position pos:line="3" pos:column="20"/></operator></expr>?<pos:position pos:line="3" pos:column="21"/></condition><then pos:line="3" pos:column="21"> <expr><name pos:line="3" pos:column="22">ptr<pos:position pos:line="3" pos:column="25"/></name></expr></then><else pos:line="3" pos:column="25">: <expr><name pos:line="3" pos:column="27">MFAIL<pos:position pos:line="3" pos:column="32"/></name></expr></else></ternary></expr>;<pos:position pos:line="3" pos:column="33"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

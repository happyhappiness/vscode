<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2117_git-2.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fsck_tag_buffer<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">tag<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">tag<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">data<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="2" pos:column="9">unsigned<pos:position pos:line="2" pos:column="17"/></name> <name pos:line="2" pos:column="18">long<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">size<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">fsck_options<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">options<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name></type> <name><name pos:line="4" pos:column="23">sha1<pos:position pos:line="4" pos:column="27"/></name><index pos:line="4" pos:column="27">[<expr><literal type="number" pos:line="4" pos:column="28">20<pos:position pos:line="4" pos:column="30"/></literal></expr>]<pos:position pos:line="4" pos:column="31"/></index></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">ret<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">buffer<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">to_free<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="32">eol<pos:position pos:line="7" pos:column="35"/></name></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">sb<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name pos:line="8" pos:column="28">STRBUF_INIT<pos:position pos:line="8" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">data<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">buffer<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">data<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt></block></then>
	<else pos:line="12" pos:column="9">else <block pos:line="12" pos:column="14">{
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">enum<pos:position pos:line="13" pos:column="21"/></name> <name pos:line="13" pos:column="22">object_type<pos:position pos:line="13" pos:column="33"/></name></name></type> <name pos:line="13" pos:column="34">type<pos:position pos:line="13" pos:column="38"/></name></decl>;<pos:position pos:line="13" pos:column="39"/></decl_stmt>

		<expr_stmt><expr><name pos:line="15" pos:column="17">buffer<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="26">to_free<pos:position pos:line="15" pos:column="33"/></name> <operator pos:line="15" pos:column="34">=<pos:position pos:line="15" pos:column="35"/></operator>
			<call><name pos:line="16" pos:column="25">read_sha1_file<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><name><name pos:line="16" pos:column="40">tag<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">-&gt;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="45">object<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">.<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="52">oid<pos:position pos:line="16" pos:column="55"/></name><operator pos:line="16" pos:column="55">.<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="56">hash<pos:position pos:line="16" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="62">&amp;<pos:position pos:line="16" pos:column="67"/></operator><name pos:line="16" pos:column="63">type<pos:position pos:line="16" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="69">&amp;<pos:position pos:line="16" pos:column="74"/></operator><name pos:line="16" pos:column="70">size<pos:position pos:line="16" pos:column="74"/></name></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="76"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">buffer<pos:position pos:line="17" pos:column="28"/></name></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29">
			<block type="pseudo"><return pos:line="18" pos:column="25">return <expr><call><name pos:line="18" pos:column="32">report<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name pos:line="18" pos:column="39">options<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="48">&amp;<pos:position pos:line="18" pos:column="53"/></operator><name><name pos:line="18" pos:column="49">tag<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">object<pos:position pos:line="18" pos:column="60"/></name></name></expr></argument>,
				<argument><expr><name pos:line="19" pos:column="33">FSCK_MSG_MISSING_TAG_OBJECT<pos:position pos:line="19" pos:column="60"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="20" pos:column="33">"cannot read tag object"<pos:position pos:line="20" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></return></block></then></if>

		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">type<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">!=<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="29">OBJ_TAG<pos:position pos:line="22" pos:column="36"/></name></expr>)<pos:position pos:line="22" pos:column="37"/></condition><then pos:line="22" pos:column="37"> <block pos:line="22" pos:column="38">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">ret<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <call><name pos:line="23" pos:column="31">report<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><name pos:line="23" pos:column="38">options<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="47">&amp;<pos:position pos:line="23" pos:column="52"/></operator><name><name pos:line="23" pos:column="48">tag<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">-&gt;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="53">object<pos:position pos:line="23" pos:column="59"/></name></name></expr></argument>,
				<argument><expr><name pos:line="24" pos:column="33">FSCK_MSG_TAG_OBJECT_NOT_TAG<pos:position pos:line="24" pos:column="60"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="25" pos:column="33">"expected tag got %s"<pos:position pos:line="25" pos:column="54"/></literal></expr></argument>,
			    <argument><expr><name><typename pos:line="26" pos:column="29">typename<pos:position pos:line="26" pos:column="37"/></typename></name><operator pos:line="26" pos:column="37">(<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">type<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">)<pos:position pos:line="26" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
			<goto pos:line="27" pos:column="25">goto <name pos:line="27" pos:column="30">done<pos:position pos:line="27" pos:column="34"/></name>;<pos:position pos:line="27" pos:column="35"/></goto>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if>
	}<pos:position pos:line="29" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="31" pos:column="9">ret<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <call><name pos:line="31" pos:column="15">verify_headers<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">buffer<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">size<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="44">&amp;<pos:position pos:line="31" pos:column="49"/></operator><name><name pos:line="31" pos:column="45">tag<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">-&gt;<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="50">object<pos:position pos:line="31" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="58">options<pos:position pos:line="31" pos:column="65"/></name></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="67"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">ret<pos:position pos:line="32" pos:column="16"/></name></expr>)<pos:position pos:line="32" pos:column="17"/></condition><then pos:line="32" pos:column="17">
		<block type="pseudo"><goto pos:line="33" pos:column="17">goto <name pos:line="33" pos:column="22">done<pos:position pos:line="33" pos:column="26"/></name>;<pos:position pos:line="33" pos:column="27"/></goto></block></then></if>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><call><name pos:line="35" pos:column="14">skip_prefix<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">buffer<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="34">"object "<pos:position pos:line="35" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="45">&amp;<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="46">buffer<pos:position pos:line="35" pos:column="52"/></name></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="54"/></condition><then pos:line="35" pos:column="54"> <block pos:line="35" pos:column="55">{
		<expr_stmt><expr><name pos:line="36" pos:column="17">ret<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <call><name pos:line="36" pos:column="23">report<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">options<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="39">&amp;<pos:position pos:line="36" pos:column="44"/></operator><name><name pos:line="36" pos:column="40">tag<pos:position pos:line="36" pos:column="43"/></name><operator pos:line="36" pos:column="43">-&gt;<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="45">object<pos:position pos:line="36" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">FSCK_MSG_MISSING_OBJECT<pos:position pos:line="36" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="78">"invalid format - expected 'object' line"<pos:position pos:line="36" pos:column="119"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="121"/></expr_stmt>
		<goto pos:line="37" pos:column="17">goto <name pos:line="37" pos:column="22">done<pos:position pos:line="37" pos:column="26"/></name>;<pos:position pos:line="37" pos:column="27"/></goto>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">get_sha1_hex<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name pos:line="39" pos:column="26">buffer<pos:position pos:line="39" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="34">sha1<pos:position pos:line="39" pos:column="38"/></name></expr></argument>)<pos:position pos:line="39" pos:column="39"/></argument_list></call> <operator pos:line="39" pos:column="40">||<pos:position pos:line="39" pos:column="42"/></operator> <name><name pos:line="39" pos:column="43">buffer<pos:position pos:line="39" pos:column="49"/></name><index pos:line="39" pos:column="49">[<expr><literal type="number" pos:line="39" pos:column="50">40<pos:position pos:line="39" pos:column="52"/></literal></expr>]<pos:position pos:line="39" pos:column="53"/></index></name> <operator pos:line="39" pos:column="54">!=<pos:position pos:line="39" pos:column="56"/></operator> <literal type="char" pos:line="39" pos:column="57">'\n'<pos:position pos:line="39" pos:column="61"/></literal></expr>)<pos:position pos:line="39" pos:column="62"/></condition><then pos:line="39" pos:column="62"> <block pos:line="39" pos:column="63">{
		<expr_stmt><expr><name pos:line="40" pos:column="17">ret<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <call><name pos:line="40" pos:column="23">report<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">options<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="39">&amp;<pos:position pos:line="40" pos:column="44"/></operator><name><name pos:line="40" pos:column="40">tag<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">-&gt;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="45">object<pos:position pos:line="40" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="53">FSCK_MSG_BAD_OBJECT_SHA1<pos:position pos:line="40" pos:column="77"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="79">"invalid 'object' line format - bad sha1"<pos:position pos:line="40" pos:column="120"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="122"/></expr_stmt>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">ret<pos:position pos:line="41" pos:column="24"/></name></expr>)<pos:position pos:line="41" pos:column="25"/></condition><then pos:line="41" pos:column="25">
			<block type="pseudo"><goto pos:line="42" pos:column="25">goto <name pos:line="42" pos:column="30">done<pos:position pos:line="42" pos:column="34"/></name>;<pos:position pos:line="42" pos:column="35"/></goto></block></then></if>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="44" pos:column="9">buffer<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">+=<pos:position pos:line="44" pos:column="18"/></operator> <literal type="number" pos:line="44" pos:column="19">41<pos:position pos:line="44" pos:column="21"/></literal></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">!<pos:position pos:line="46" pos:column="14"/></operator><call><name pos:line="46" pos:column="14">skip_prefix<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">buffer<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="34">"type "<pos:position pos:line="46" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="46" pos:column="43">&amp;<pos:position pos:line="46" pos:column="48"/></operator><name pos:line="46" pos:column="44">buffer<pos:position pos:line="46" pos:column="50"/></name></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="52"/></condition><then pos:line="46" pos:column="52"> <block pos:line="46" pos:column="53">{
		<expr_stmt><expr><name pos:line="47" pos:column="17">ret<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <call><name pos:line="47" pos:column="23">report<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">options<pos:position pos:line="47" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="39">&amp;<pos:position pos:line="47" pos:column="44"/></operator><name><name pos:line="47" pos:column="40">tag<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">-&gt;<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="45">object<pos:position pos:line="47" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="53">FSCK_MSG_MISSING_TYPE_ENTRY<pos:position pos:line="47" pos:column="80"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="82">"invalid format - expected 'type' line"<pos:position pos:line="47" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="123"/></expr_stmt>
		<goto pos:line="48" pos:column="17">goto <name pos:line="48" pos:column="22">done<pos:position pos:line="48" pos:column="26"/></name>;<pos:position pos:line="48" pos:column="27"/></goto>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="50" pos:column="9">eol<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <call><name pos:line="50" pos:column="15">strchr<pos:position pos:line="50" pos:column="21"/></name><argument_list pos:line="50" pos:column="21">(<argument><expr><name pos:line="50" pos:column="22">buffer<pos:position pos:line="50" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="50" pos:column="30">'\n'<pos:position pos:line="50" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="36"/></expr_stmt>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">eol<pos:position pos:line="51" pos:column="17"/></name></expr>)<pos:position pos:line="51" pos:column="18"/></condition><then pos:line="51" pos:column="18"> <block pos:line="51" pos:column="19">{
		<expr_stmt><expr><name pos:line="52" pos:column="17">ret<pos:position pos:line="52" pos:column="20"/></name> <operator pos:line="52" pos:column="21">=<pos:position pos:line="52" pos:column="22"/></operator> <call><name pos:line="52" pos:column="23">report<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name pos:line="52" pos:column="30">options<pos:position pos:line="52" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="39">&amp;<pos:position pos:line="52" pos:column="44"/></operator><name><name pos:line="52" pos:column="40">tag<pos:position pos:line="52" pos:column="43"/></name><operator pos:line="52" pos:column="43">-&gt;<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="45">object<pos:position pos:line="52" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="53">FSCK_MSG_MISSING_TYPE<pos:position pos:line="52" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="76">"invalid format - unexpected end after 'type' line"<pos:position pos:line="52" pos:column="127"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="128"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="129"/></expr_stmt>
		<goto pos:line="53" pos:column="17">goto <name pos:line="53" pos:column="22">done<pos:position pos:line="53" pos:column="26"/></name>;<pos:position pos:line="53" pos:column="27"/></goto>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><call><name pos:line="55" pos:column="13">type_from_string_gently<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><name pos:line="55" pos:column="37">buffer<pos:position pos:line="55" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="45">eol<pos:position pos:line="55" pos:column="48"/></name> <operator pos:line="55" pos:column="49">-<pos:position pos:line="55" pos:column="50"/></operator> <name pos:line="55" pos:column="51">buffer<pos:position pos:line="55" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="59">1<pos:position pos:line="55" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="61"/></argument_list></call> <operator pos:line="55" pos:column="62">&lt;<pos:position pos:line="55" pos:column="66"/></operator> <literal type="number" pos:line="55" pos:column="64">0<pos:position pos:line="55" pos:column="65"/></literal></expr>)<pos:position pos:line="55" pos:column="66"/></condition><then pos:line="55" pos:column="66">
		<block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="17">ret<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <call><name pos:line="56" pos:column="23">report<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">options<pos:position pos:line="56" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="39">&amp;<pos:position pos:line="56" pos:column="44"/></operator><name><name pos:line="56" pos:column="40">tag<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">-&gt;<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="45">object<pos:position pos:line="56" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="53">FSCK_MSG_BAD_TYPE<pos:position pos:line="56" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="72">"invalid 'type' value"<pos:position pos:line="56" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="96"/></expr_stmt></block></then></if>
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">ret<pos:position pos:line="57" pos:column="16"/></name></expr>)<pos:position pos:line="57" pos:column="17"/></condition><then pos:line="57" pos:column="17">
		<block type="pseudo"><goto pos:line="58" pos:column="17">goto <name pos:line="58" pos:column="22">done<pos:position pos:line="58" pos:column="26"/></name>;<pos:position pos:line="58" pos:column="27"/></goto></block></then></if>
	<expr_stmt><expr><name pos:line="59" pos:column="9">buffer<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <name pos:line="59" pos:column="18">eol<pos:position pos:line="59" pos:column="21"/></name> <operator pos:line="59" pos:column="22">+<pos:position pos:line="59" pos:column="23"/></operator> <literal type="number" pos:line="59" pos:column="24">1<pos:position pos:line="59" pos:column="25"/></literal></expr>;<pos:position pos:line="59" pos:column="26"/></expr_stmt>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">!<pos:position pos:line="61" pos:column="14"/></operator><call><name pos:line="61" pos:column="14">skip_prefix<pos:position pos:line="61" pos:column="25"/></name><argument_list pos:line="61" pos:column="25">(<argument><expr><name pos:line="61" pos:column="26">buffer<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="34">"tag "<pos:position pos:line="61" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="61" pos:column="42">&amp;<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="43">buffer<pos:position pos:line="61" pos:column="49"/></name></expr></argument>)<pos:position pos:line="61" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="51"/></condition><then pos:line="61" pos:column="51"> <block pos:line="61" pos:column="52">{
		<expr_stmt><expr><name pos:line="62" pos:column="17">ret<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">=<pos:position pos:line="62" pos:column="22"/></operator> <call><name pos:line="62" pos:column="23">report<pos:position pos:line="62" pos:column="29"/></name><argument_list pos:line="62" pos:column="29">(<argument><expr><name pos:line="62" pos:column="30">options<pos:position pos:line="62" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="39">&amp;<pos:position pos:line="62" pos:column="44"/></operator><name><name pos:line="62" pos:column="40">tag<pos:position pos:line="62" pos:column="43"/></name><operator pos:line="62" pos:column="43">-&gt;<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="45">object<pos:position pos:line="62" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="53">FSCK_MSG_MISSING_TAG_ENTRY<pos:position pos:line="62" pos:column="79"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="81">"invalid format - expected 'tag' line"<pos:position pos:line="62" pos:column="119"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="121"/></expr_stmt>
		<goto pos:line="63" pos:column="17">goto <name pos:line="63" pos:column="22">done<pos:position pos:line="63" pos:column="26"/></name>;<pos:position pos:line="63" pos:column="27"/></goto>
	}<pos:position pos:line="64" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="65" pos:column="9">eol<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">=<pos:position pos:line="65" pos:column="14"/></operator> <call><name pos:line="65" pos:column="15">strchr<pos:position pos:line="65" pos:column="21"/></name><argument_list pos:line="65" pos:column="21">(<argument><expr><name pos:line="65" pos:column="22">buffer<pos:position pos:line="65" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="65" pos:column="30">'\n'<pos:position pos:line="65" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><operator pos:line="66" pos:column="13">!<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="14">eol<pos:position pos:line="66" pos:column="17"/></name></expr>)<pos:position pos:line="66" pos:column="18"/></condition><then pos:line="66" pos:column="18"> <block pos:line="66" pos:column="19">{
		<expr_stmt><expr><name pos:line="67" pos:column="17">ret<pos:position pos:line="67" pos:column="20"/></name> <operator pos:line="67" pos:column="21">=<pos:position pos:line="67" pos:column="22"/></operator> <call><name pos:line="67" pos:column="23">report<pos:position pos:line="67" pos:column="29"/></name><argument_list pos:line="67" pos:column="29">(<argument><expr><name pos:line="67" pos:column="30">options<pos:position pos:line="67" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="39">&amp;<pos:position pos:line="67" pos:column="44"/></operator><name><name pos:line="67" pos:column="40">tag<pos:position pos:line="67" pos:column="43"/></name><operator pos:line="67" pos:column="43">-&gt;<pos:position pos:line="67" pos:column="48"/></operator><name pos:line="67" pos:column="45">object<pos:position pos:line="67" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="53">FSCK_MSG_MISSING_TAG<pos:position pos:line="67" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="75">"invalid format - unexpected end after 'type' line"<pos:position pos:line="67" pos:column="126"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="127"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="128"/></expr_stmt>
		<goto pos:line="68" pos:column="17">goto <name pos:line="68" pos:column="22">done<pos:position pos:line="68" pos:column="26"/></name>;<pos:position pos:line="68" pos:column="27"/></goto>
	}<pos:position pos:line="69" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">strbuf_addf<pos:position pos:line="70" pos:column="20"/></name><argument_list pos:line="70" pos:column="20">(<argument><expr><operator pos:line="70" pos:column="21">&amp;<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="22">sb<pos:position pos:line="70" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="26">"refs/tags/%.*s"<pos:position pos:line="70" pos:column="42"/></literal></expr></argument>, <argument><expr><call pos:line="70" pos:column="44">(<name pos:line="70" pos:column="45">int<pos:position pos:line="70" pos:column="48"/></name>)<argument_list pos:line="70" pos:column="49">(<argument><expr><name pos:line="70" pos:column="50">eol<pos:position pos:line="70" pos:column="53"/></name> <operator pos:line="70" pos:column="54">-<pos:position pos:line="70" pos:column="55"/></operator> <name pos:line="70" pos:column="56">buffer<pos:position pos:line="70" pos:column="62"/></name></expr></argument>)<pos:position pos:line="70" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="70" pos:column="65">buffer<pos:position pos:line="70" pos:column="71"/></name></expr></argument>)<pos:position pos:line="70" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="73"/></expr_stmt>
	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><call><name pos:line="71" pos:column="13">check_refname_format<pos:position pos:line="71" pos:column="33"/></name><argument_list pos:line="71" pos:column="33">(<argument><expr><name><name pos:line="71" pos:column="34">sb<pos:position pos:line="71" pos:column="36"/></name><operator pos:line="71" pos:column="36">.<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="37">buf<pos:position pos:line="71" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="42">0<pos:position pos:line="71" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="45"/></condition><then pos:line="71" pos:column="45"> <block pos:line="71" pos:column="46">{
		<expr_stmt><expr><name pos:line="72" pos:column="17">ret<pos:position pos:line="72" pos:column="20"/></name> <operator pos:line="72" pos:column="21">=<pos:position pos:line="72" pos:column="22"/></operator> <call><name pos:line="72" pos:column="23">report<pos:position pos:line="72" pos:column="29"/></name><argument_list pos:line="72" pos:column="29">(<argument><expr><name pos:line="72" pos:column="30">options<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="39">&amp;<pos:position pos:line="72" pos:column="44"/></operator><name><name pos:line="72" pos:column="40">tag<pos:position pos:line="72" pos:column="43"/></name><operator pos:line="72" pos:column="43">-&gt;<pos:position pos:line="72" pos:column="48"/></operator><name pos:line="72" pos:column="45">object<pos:position pos:line="72" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="53">FSCK_MSG_BAD_TAG_NAME<pos:position pos:line="72" pos:column="74"/></name></expr></argument>,
			   <argument><expr><literal type="string" pos:line="73" pos:column="28">"invalid 'tag' name: %.*s"<pos:position pos:line="73" pos:column="54"/></literal></expr></argument>,
			   <argument><expr><call pos:line="74" pos:column="28">(<name pos:line="74" pos:column="29">int<pos:position pos:line="74" pos:column="32"/></name>)<argument_list pos:line="74" pos:column="33">(<argument><expr><name pos:line="74" pos:column="34">eol<pos:position pos:line="74" pos:column="37"/></name> <operator pos:line="74" pos:column="38">-<pos:position pos:line="74" pos:column="39"/></operator> <name pos:line="74" pos:column="40">buffer<pos:position pos:line="74" pos:column="46"/></name></expr></argument>)<pos:position pos:line="74" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="74" pos:column="49">buffer<pos:position pos:line="74" pos:column="55"/></name></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="57"/></expr_stmt>
		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><name pos:line="75" pos:column="21">ret<pos:position pos:line="75" pos:column="24"/></name></expr>)<pos:position pos:line="75" pos:column="25"/></condition><then pos:line="75" pos:column="25">
			<block type="pseudo"><goto pos:line="76" pos:column="25">goto <name pos:line="76" pos:column="30">done<pos:position pos:line="76" pos:column="34"/></name>;<pos:position pos:line="76" pos:column="35"/></goto></block></then></if>
	}<pos:position pos:line="77" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="78" pos:column="9">buffer<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">=<pos:position pos:line="78" pos:column="17"/></operator> <name pos:line="78" pos:column="18">eol<pos:position pos:line="78" pos:column="21"/></name> <operator pos:line="78" pos:column="22">+<pos:position pos:line="78" pos:column="23"/></operator> <literal type="number" pos:line="78" pos:column="24">1<pos:position pos:line="78" pos:column="25"/></literal></expr>;<pos:position pos:line="78" pos:column="26"/></expr_stmt>

	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><operator pos:line="80" pos:column="13">!<pos:position pos:line="80" pos:column="14"/></operator><call><name pos:line="80" pos:column="14">skip_prefix<pos:position pos:line="80" pos:column="25"/></name><argument_list pos:line="80" pos:column="25">(<argument><expr><name pos:line="80" pos:column="26">buffer<pos:position pos:line="80" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="34">"tagger "<pos:position pos:line="80" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="80" pos:column="45">&amp;<pos:position pos:line="80" pos:column="50"/></operator><name pos:line="80" pos:column="46">buffer<pos:position pos:line="80" pos:column="52"/></name></expr></argument>)<pos:position pos:line="80" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="54"/></condition><then pos:line="80" pos:column="54"> <block pos:line="80" pos:column="55">{
		<comment type="block" pos:line="81" pos:column="17">/* early tags do not contain 'tagger' lines; warn only */</comment>
		<expr_stmt><expr><name pos:line="82" pos:column="17">ret<pos:position pos:line="82" pos:column="20"/></name> <operator pos:line="82" pos:column="21">=<pos:position pos:line="82" pos:column="22"/></operator> <call><name pos:line="82" pos:column="23">report<pos:position pos:line="82" pos:column="29"/></name><argument_list pos:line="82" pos:column="29">(<argument><expr><name pos:line="82" pos:column="30">options<pos:position pos:line="82" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="39">&amp;<pos:position pos:line="82" pos:column="44"/></operator><name><name pos:line="82" pos:column="40">tag<pos:position pos:line="82" pos:column="43"/></name><operator pos:line="82" pos:column="43">-&gt;<pos:position pos:line="82" pos:column="48"/></operator><name pos:line="82" pos:column="45">object<pos:position pos:line="82" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="53">FSCK_MSG_MISSING_TAGGER_ENTRY<pos:position pos:line="82" pos:column="82"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="84">"invalid format - expected 'tagger' line"<pos:position pos:line="82" pos:column="125"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="127"/></expr_stmt>
		<if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><name pos:line="83" pos:column="21">ret<pos:position pos:line="83" pos:column="24"/></name></expr>)<pos:position pos:line="83" pos:column="25"/></condition><then pos:line="83" pos:column="25">
			<block type="pseudo"><goto pos:line="84" pos:column="25">goto <name pos:line="84" pos:column="30">done<pos:position pos:line="84" pos:column="34"/></name>;<pos:position pos:line="84" pos:column="35"/></goto></block></then></if>
	}<pos:position pos:line="85" pos:column="10"/></block></then>
	<else pos:line="86" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="17">ret<pos:position pos:line="87" pos:column="20"/></name> <operator pos:line="87" pos:column="21">=<pos:position pos:line="87" pos:column="22"/></operator> <call><name pos:line="87" pos:column="23">fsck_ident<pos:position pos:line="87" pos:column="33"/></name><argument_list pos:line="87" pos:column="33">(<argument><expr><operator pos:line="87" pos:column="34">&amp;<pos:position pos:line="87" pos:column="39"/></operator><name pos:line="87" pos:column="35">buffer<pos:position pos:line="87" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="43">&amp;<pos:position pos:line="87" pos:column="48"/></operator><name><name pos:line="87" pos:column="44">tag<pos:position pos:line="87" pos:column="47"/></name><operator pos:line="87" pos:column="47">-&gt;<pos:position pos:line="87" pos:column="52"/></operator><name pos:line="87" pos:column="49">object<pos:position pos:line="87" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="57">options<pos:position pos:line="87" pos:column="64"/></name></expr></argument>)<pos:position pos:line="87" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="66"/></expr_stmt></block></else></if>

<label><name pos:line="89" pos:column="1">done<pos:position pos:line="89" pos:column="5"/></name>:<pos:position pos:line="89" pos:column="6"/></label>
	<expr_stmt><expr><call><name pos:line="90" pos:column="9">strbuf_release<pos:position pos:line="90" pos:column="23"/></name><argument_list pos:line="90" pos:column="23">(<argument><expr><operator pos:line="90" pos:column="24">&amp;<pos:position pos:line="90" pos:column="29"/></operator><name pos:line="90" pos:column="25">sb<pos:position pos:line="90" pos:column="27"/></name></expr></argument>)<pos:position pos:line="90" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="91" pos:column="9">free<pos:position pos:line="91" pos:column="13"/></name><argument_list pos:line="91" pos:column="13">(<argument><expr><name pos:line="91" pos:column="14">to_free<pos:position pos:line="91" pos:column="21"/></name></expr></argument>)<pos:position pos:line="91" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="23"/></expr_stmt>
	<return pos:line="92" pos:column="9">return <expr><name pos:line="92" pos:column="16">ret<pos:position pos:line="92" pos:column="19"/></name></expr>;<pos:position pos:line="92" pos:column="20"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

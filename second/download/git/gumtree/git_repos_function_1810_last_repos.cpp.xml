<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1810_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">parse_ident<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">buf<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">ltgt<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">name_len<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">ident<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><name pos:line="5" pos:column="31">STRBUF_INIT<pos:position pos:line="5" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* ensure there is a space delimiter even if there is no name */</comment>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">buf<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <literal type="char" pos:line="8" pos:column="21">'&lt;'<pos:position pos:line="8" pos:column="27"/></literal></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="9" pos:column="17">--<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">buf<pos:position pos:line="9" pos:column="22"/></name></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="11" pos:column="9">ltgt<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">buf<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">+<pos:position pos:line="11" pos:column="21"/></operator> <call><name pos:line="11" pos:column="22">strcspn<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">buf<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="35">"&lt;&gt;"<pos:position pos:line="11" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">ltgt<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">!=<pos:position pos:line="12" pos:column="21"/></operator> <literal type="char" pos:line="12" pos:column="22">'&lt;'<pos:position pos:line="12" pos:column="28"/></literal></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">die<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><literal type="string" pos:line="13" pos:column="21">"Missing &lt; in ident string: %s"<pos:position pos:line="13" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="54">buf<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">ltgt<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">!=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">buf<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">&amp;&amp;<pos:position pos:line="14" pos:column="35"/></operator> <name><name pos:line="14" pos:column="28">ltgt<pos:position pos:line="14" pos:column="32"/></name><index pos:line="14" pos:column="32">[<expr><operator pos:line="14" pos:column="33">-<pos:position pos:line="14" pos:column="34"/></operator><literal type="number" pos:line="14" pos:column="34">1<pos:position pos:line="14" pos:column="35"/></literal></expr>]<pos:position pos:line="14" pos:column="36"/></index></name> <operator pos:line="14" pos:column="37">!=<pos:position pos:line="14" pos:column="39"/></operator> <literal type="char" pos:line="14" pos:column="40">' '<pos:position pos:line="14" pos:column="43"/></literal></expr>)<pos:position pos:line="14" pos:column="44"/></condition><then pos:line="14" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">die<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><literal type="string" pos:line="15" pos:column="21">"Missing space before &lt; in ident string: %s"<pos:position pos:line="15" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="67">buf<pos:position pos:line="15" pos:column="70"/></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="16" pos:column="9">ltgt<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">ltgt<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">+<pos:position pos:line="16" pos:column="22"/></operator> <literal type="number" pos:line="16" pos:column="23">1<pos:position pos:line="16" pos:column="24"/></literal> <operator pos:line="16" pos:column="25">+<pos:position pos:line="16" pos:column="26"/></operator> <call><name pos:line="16" pos:column="27">strcspn<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">ltgt<pos:position pos:line="16" pos:column="39"/></name> <operator pos:line="16" pos:column="40">+<pos:position pos:line="16" pos:column="41"/></operator> <literal type="number" pos:line="16" pos:column="42">1<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="45">"&lt;&gt;"<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">*<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">ltgt<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">!=<pos:position pos:line="17" pos:column="21"/></operator> <literal type="char" pos:line="17" pos:column="22">'&gt;'<pos:position pos:line="17" pos:column="28"/></literal></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">die<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><literal type="string" pos:line="18" pos:column="21">"Missing &gt; in ident string: %s"<pos:position pos:line="18" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">buf<pos:position pos:line="18" pos:column="57"/></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="19" pos:column="9">ltgt<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">++<pos:position pos:line="19" pos:column="15"/></operator></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">ltgt<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">!=<pos:position pos:line="20" pos:column="21"/></operator> <literal type="char" pos:line="20" pos:column="22">' '<pos:position pos:line="20" pos:column="25"/></literal></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">die<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><literal type="string" pos:line="21" pos:column="21">"Missing space after &gt; in ident string: %s"<pos:position pos:line="21" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="66">buf<pos:position pos:line="21" pos:column="69"/></name></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="22" pos:column="9">ltgt<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">++<pos:position pos:line="22" pos:column="15"/></operator></expr>;<pos:position pos:line="22" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name pos:line="23" pos:column="9">name_len<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">ltgt<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">-<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">buf<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">strbuf_add<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><operator pos:line="24" pos:column="20">&amp;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="21">ident<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="28">buf<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="33">name_len<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>

	<switch pos:line="26" pos:column="9">switch <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">whenspec<pos:position pos:line="26" pos:column="25"/></name></expr>)<pos:position pos:line="26" pos:column="26"/></condition> <block pos:line="26" pos:column="27">{
	<case pos:line="27" pos:column="9">case <expr><name pos:line="27" pos:column="14">WHENSPEC_RAW<pos:position pos:line="27" pos:column="26"/></name></expr>:<pos:position pos:line="27" pos:column="27"/></case>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><call><name pos:line="28" pos:column="21">validate_raw_date<pos:position pos:line="28" pos:column="38"/></name><argument_list pos:line="28" pos:column="38">(<argument><expr><name pos:line="28" pos:column="39">ltgt<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="45">&amp;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="46">ident<pos:position pos:line="28" pos:column="51"/></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call> <operator pos:line="28" pos:column="53">&lt;<pos:position pos:line="28" pos:column="57"/></operator> <literal type="number" pos:line="28" pos:column="55">0<pos:position pos:line="28" pos:column="56"/></literal></expr>)<pos:position pos:line="28" pos:column="57"/></condition><then pos:line="28" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="25">die<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">"Invalid raw date \"%s\" in ident: %s"<pos:position pos:line="29" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="69">ltgt<pos:position pos:line="29" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="75">buf<pos:position pos:line="29" pos:column="78"/></name></expr></argument>)<pos:position pos:line="29" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="80"/></expr_stmt></block></then></if>
		<break pos:line="30" pos:column="17">break;<pos:position pos:line="30" pos:column="23"/></break>
	<case pos:line="31" pos:column="9">case <expr><name pos:line="31" pos:column="14">WHENSPEC_RFC2822<pos:position pos:line="31" pos:column="30"/></name></expr>:<pos:position pos:line="31" pos:column="31"/></case>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">parse_date<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">ltgt<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="38">&amp;<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="39">ident<pos:position pos:line="32" pos:column="44"/></name></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call> <operator pos:line="32" pos:column="46">&lt;<pos:position pos:line="32" pos:column="50"/></operator> <literal type="number" pos:line="32" pos:column="48">0<pos:position pos:line="32" pos:column="49"/></literal></expr>)<pos:position pos:line="32" pos:column="50"/></condition><then pos:line="32" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="25">die<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><literal type="string" pos:line="33" pos:column="29">"Invalid rfc2822 date \"%s\" in ident: %s"<pos:position pos:line="33" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="73">ltgt<pos:position pos:line="33" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="79">buf<pos:position pos:line="33" pos:column="82"/></name></expr></argument>)<pos:position pos:line="33" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="84"/></expr_stmt></block></then></if>
		<break pos:line="34" pos:column="17">break;<pos:position pos:line="34" pos:column="23"/></break>
	<case pos:line="35" pos:column="9">case <expr><name pos:line="35" pos:column="14">WHENSPEC_NOW<pos:position pos:line="35" pos:column="26"/></name></expr>:<pos:position pos:line="35" pos:column="27"/></case>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">strcmp<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><literal type="string" pos:line="36" pos:column="28">"now"<pos:position pos:line="36" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">ltgt<pos:position pos:line="36" pos:column="39"/></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="41"/></condition><then pos:line="36" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">die<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><literal type="string" pos:line="37" pos:column="29">"Date in ident must be 'now': %s"<pos:position pos:line="37" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="64">buf<pos:position pos:line="37" pos:column="67"/></name></expr></argument>)<pos:position pos:line="37" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="69"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">datestamp<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><operator pos:line="38" pos:column="27">&amp;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="28">ident<pos:position pos:line="38" pos:column="33"/></name></expr></argument>)<pos:position pos:line="38" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>
		<break pos:line="39" pos:column="17">break;<pos:position pos:line="39" pos:column="23"/></break>
	}<pos:position pos:line="40" pos:column="10"/></block></switch>

	<return pos:line="42" pos:column="9">return <expr><call><name pos:line="42" pos:column="16">strbuf_detach<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><operator pos:line="42" pos:column="30">&amp;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="31">ident<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="38">NULL<pos:position pos:line="42" pos:column="42"/></name></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="44"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

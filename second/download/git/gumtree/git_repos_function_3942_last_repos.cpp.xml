<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3942_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">graph_show_strbuf<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">git_graph<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">graph<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="2" pos:column="31">FILE<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">file<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="3" pos:column="31">struct<pos:position pos:line="3" pos:column="37"/></name> <name pos:line="3" pos:column="38">strbuf<pos:position pos:line="3" pos:column="44"/></name></name> <specifier pos:line="3" pos:column="45">const<pos:position pos:line="3" pos:column="50"/></specifier> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">sb<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="55"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">p<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/*
	 * Print the strbuf line by line,
	 * and display the graph info before each line but the first.
	 */</comment>
	<expr_stmt><expr><name pos:line="11" pos:column="9">p<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name><name pos:line="11" pos:column="13">sb<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">buf<pos:position pos:line="11" pos:column="20"/></name></name></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
	<while pos:line="12" pos:column="9">while <condition pos:line="12" pos:column="15">(<expr><name pos:line="12" pos:column="16">p<pos:position pos:line="12" pos:column="17"/></name></expr>)<pos:position pos:line="12" pos:column="18"/></condition> <block pos:line="12" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">size_t<pos:position pos:line="13" pos:column="23"/></name></type> <name pos:line="13" pos:column="24">len<pos:position pos:line="13" pos:column="27"/></name></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">char<pos:position pos:line="14" pos:column="21"/></name> <modifier pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></modifier></type><name pos:line="14" pos:column="23">next_p<pos:position pos:line="14" pos:column="29"/></name> <init pos:line="14" pos:column="30">= <expr><call><name pos:line="14" pos:column="32">strchr<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><name pos:line="14" pos:column="39">p<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="42">'\n'<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="48"/></decl_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">next_p<pos:position pos:line="15" pos:column="27"/></name></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28"> <block pos:line="15" pos:column="29">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">next_p<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">++<pos:position pos:line="16" pos:column="33"/></operator></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
			<expr_stmt><expr><name pos:line="17" pos:column="25">len<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">=<pos:position pos:line="17" pos:column="30"/></operator> <name pos:line="17" pos:column="31">next_p<pos:position pos:line="17" pos:column="37"/></name> <operator pos:line="17" pos:column="38">-<pos:position pos:line="17" pos:column="39"/></operator> <name pos:line="17" pos:column="40">p<pos:position pos:line="17" pos:column="41"/></name></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></then> <else pos:line="18" pos:column="19">else <block pos:line="18" pos:column="24">{
			<expr_stmt><expr><name pos:line="19" pos:column="25">len<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <operator pos:line="19" pos:column="31">(<pos:position pos:line="19" pos:column="32"/></operator><name><name pos:line="19" pos:column="32">sb<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">buf<pos:position pos:line="19" pos:column="39"/></name></name> <operator pos:line="19" pos:column="40">+<pos:position pos:line="19" pos:column="41"/></operator> <name><name pos:line="19" pos:column="42">sb<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">-&gt;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="46">len<pos:position pos:line="19" pos:column="49"/></name></name><operator pos:line="19" pos:column="49">)<pos:position pos:line="19" pos:column="50"/></operator> <operator pos:line="19" pos:column="51">-<pos:position pos:line="19" pos:column="52"/></operator> <name pos:line="19" pos:column="53">p<pos:position pos:line="19" pos:column="54"/></name></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">fwrite<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">p<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="27">sizeof<argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">char<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">len<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="46">file<pos:position pos:line="21" pos:column="50"/></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">next_p<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">&amp;&amp;<pos:position pos:line="22" pos:column="38"/></operator> <operator pos:line="22" pos:column="31">*<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="32">next_p<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">!=<pos:position pos:line="22" pos:column="41"/></operator> <literal type="char" pos:line="22" pos:column="42">'\0'<pos:position pos:line="22" pos:column="46"/></literal></expr>)<pos:position pos:line="22" pos:column="47"/></condition><then pos:line="22" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">graph_show_oneline<pos:position pos:line="23" pos:column="43"/></name><argument_list pos:line="23" pos:column="43">(<argument><expr><name pos:line="23" pos:column="44">graph<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="24" pos:column="17">p<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">next_p<pos:position pos:line="24" pos:column="27"/></name></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></while>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

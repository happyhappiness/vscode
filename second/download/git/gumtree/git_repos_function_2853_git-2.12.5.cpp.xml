<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2853_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_trailer<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">strbuf<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">tok<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">strbuf<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">val<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">conf_info<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier><modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">conf<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier> <name pos:line="2" pos:column="63">char<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">trailer<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="3" pos:column="26">int<pos:position pos:line="3" pos:column="29"/></name></type> <name pos:line="3" pos:column="30">separator_pos<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="44"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">arg_item<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">item<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">tok_len<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">list_head<pos:position pos:line="7" pos:column="25"/></name></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">pos<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">separator_pos<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">!=<pos:position pos:line="9" pos:column="29"/></operator> <operator pos:line="9" pos:column="30">-<pos:position pos:line="9" pos:column="31"/></operator><literal type="number" pos:line="9" pos:column="31">1<pos:position pos:line="9" pos:column="32"/></literal></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33"> <block pos:line="9" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">strbuf_add<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">tok<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">trailer<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">separator_pos<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">strbuf_trim<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">tok<pos:position pos:line="11" pos:column="32"/></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">strbuf_addstr<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">val<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">trailer<pos:position pos:line="12" pos:column="43"/></name> <operator pos:line="12" pos:column="44">+<pos:position pos:line="12" pos:column="45"/></operator> <name pos:line="12" pos:column="46">separator_pos<pos:position pos:line="12" pos:column="59"/></name> <operator pos:line="12" pos:column="60">+<pos:position pos:line="12" pos:column="61"/></operator> <literal type="number" pos:line="12" pos:column="62">1<pos:position pos:line="12" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">strbuf_trim<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">val<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then> <else pos:line="14" pos:column="11">else <block pos:line="14" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">strbuf_addstr<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">tok<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">trailer<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">strbuf_trim<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">tok<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="19" pos:column="9">/* Lookup if the token matches something in the config */</comment>
	<expr_stmt><expr><name pos:line="20" pos:column="9">tok_len<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <call><name pos:line="20" pos:column="19">token_len_without_separator<pos:position pos:line="20" pos:column="46"/></name><argument_list pos:line="20" pos:column="46">(<argument><expr><name><name pos:line="20" pos:column="47">tok<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">-&gt;<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="52">buf<pos:position pos:line="20" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="57">tok<pos:position pos:line="20" pos:column="60"/></name><operator pos:line="20" pos:column="60">-&gt;<pos:position pos:line="20" pos:column="65"/></operator><name pos:line="20" pos:column="62">len<pos:position pos:line="20" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">conf<pos:position pos:line="21" pos:column="17"/></name></expr>)<pos:position pos:line="21" pos:column="18"/></condition><then pos:line="21" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">conf<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <operator pos:line="22" pos:column="25">&amp;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="26">default_conf_info<pos:position pos:line="22" pos:column="43"/></name></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt></block></then></if>
	<macro><name pos:line="23" pos:column="9">list_for_each<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument pos:line="23" pos:column="23">pos<pos:position pos:line="23" pos:column="26"/></argument>, <argument pos:line="23" pos:column="28">&amp;conf_head<pos:position pos:line="23" pos:column="38"/></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></macro> <block pos:line="23" pos:column="40">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">item<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <call><name pos:line="24" pos:column="24">list_entry<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">pos<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr pos:line="24" pos:column="40">struct <name pos:line="24" pos:column="47">arg_item<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="57">list<pos:position pos:line="24" pos:column="61"/></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">token_matches_item<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><name><name pos:line="25" pos:column="40">tok<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">buf<pos:position pos:line="25" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">item<pos:position pos:line="25" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="56">tok_len<pos:position pos:line="25" pos:column="63"/></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="65"/></condition><then pos:line="25" pos:column="65"> <block pos:line="25" pos:column="66">{
			<decl_stmt><decl><type><name pos:line="26" pos:column="25">char<pos:position pos:line="26" pos:column="29"/></name> <modifier pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></modifier></type><name pos:line="26" pos:column="31">tok_buf<pos:position pos:line="26" pos:column="38"/></name> <init pos:line="26" pos:column="39">= <expr><call><name pos:line="26" pos:column="41">strbuf_detach<pos:position pos:line="26" pos:column="54"/></name><argument_list pos:line="26" pos:column="54">(<argument><expr><name pos:line="26" pos:column="55">tok<pos:position pos:line="26" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="60">NULL<pos:position pos:line="26" pos:column="64"/></name></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="66"/></decl_stmt>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><name pos:line="27" pos:column="29">conf<pos:position pos:line="27" pos:column="33"/></name></expr>)<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="28" pos:column="33">*<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">conf<pos:position pos:line="28" pos:column="38"/></name> <operator pos:line="28" pos:column="39">=<pos:position pos:line="28" pos:column="40"/></operator> <operator pos:line="28" pos:column="41">&amp;<pos:position pos:line="28" pos:column="46"/></operator><name><name pos:line="28" pos:column="42">item<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">-&gt;<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="48">conf<pos:position pos:line="28" pos:column="52"/></name></name></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">strbuf_addstr<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><name pos:line="29" pos:column="39">tok<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="44">token_from_item<pos:position pos:line="29" pos:column="59"/></name><argument_list pos:line="29" pos:column="59">(<argument><expr><name pos:line="29" pos:column="60">item<pos:position pos:line="29" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="66">tok_buf<pos:position pos:line="29" pos:column="73"/></name></expr></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">free<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">tok_buf<pos:position pos:line="30" pos:column="37"/></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
			<break pos:line="31" pos:column="25">break;<pos:position pos:line="31" pos:column="31"/></break>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>
	}<pos:position pos:line="33" pos:column="10"/></block>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

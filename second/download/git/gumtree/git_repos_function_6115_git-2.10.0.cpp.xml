<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6115_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_console<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">unsigned<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">str<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">size_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">len<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* only called from console_thread, so a static buffer will do */</comment>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">wchar_t<pos:position pos:line="4" pos:column="23"/></name></type> <name><name pos:line="4" pos:column="24">wbuf<pos:position pos:line="4" pos:column="28"/></name><index pos:line="4" pos:column="28">[<expr><literal type="number" pos:line="4" pos:column="29">2<pos:position pos:line="4" pos:column="30"/></literal> <operator pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></operator> <name pos:line="4" pos:column="33">BUFFER_SIZE<pos:position pos:line="4" pos:column="44"/></name> <operator pos:line="4" pos:column="45">+<pos:position pos:line="4" pos:column="46"/></operator> <literal type="number" pos:line="4" pos:column="47">1<pos:position pos:line="4" pos:column="48"/></literal></expr>]<pos:position pos:line="4" pos:column="49"/></index></name></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">DWORD<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">dummy<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* convert utf-8 to utf-16 */</comment>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">wlen<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><call><name pos:line="8" pos:column="20">xutftowcsn<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">wbuf<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="37">(<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">char<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">*<pos:position pos:line="8" pos:column="43"/></operator><operator pos:line="8" pos:column="43">)<pos:position pos:line="8" pos:column="44"/></operator> <name pos:line="8" pos:column="45">str<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="50">ARRAY_SIZE<pos:position pos:line="8" pos:column="60"/></name><argument_list pos:line="8" pos:column="60">(<argument><expr><name pos:line="8" pos:column="61">wbuf<pos:position pos:line="8" pos:column="65"/></name></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="68">len<pos:position pos:line="8" pos:column="71"/></name></expr></argument>)<pos:position pos:line="8" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="73"/></decl_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* write directly to console */</comment>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">WriteConsoleW<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">console<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">wbuf<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">wlen<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="44">&amp;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="45">dummy<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">NULL<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>

	<comment type="block" pos:line="13" pos:column="9">/* remember if non-ascii characters are printed */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">wlen<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">!=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">len<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">non_ascii_used<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <literal type="number" pos:line="15" pos:column="34">1<pos:position pos:line="15" pos:column="35"/></literal></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt></block></then></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

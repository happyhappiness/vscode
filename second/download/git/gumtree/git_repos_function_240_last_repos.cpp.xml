<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_240_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">uint32_t<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">read_be32<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">unsigned<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">buffer<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">size_t<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">pos<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uint32_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">result<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">get_be32<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">(<argument><expr><name pos:line="3" pos:column="36">buffer<pos:position pos:line="3" pos:column="42"/></name> <operator pos:line="3" pos:column="43">+<pos:position pos:line="3" pos:column="44"/></operator> <operator pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="46">pos<pos:position pos:line="3" pos:column="49"/></name></expr></argument>)<pos:position pos:line="3" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>
	<expr_stmt><expr><operator pos:line="4" pos:column="9">(<pos:position pos:line="4" pos:column="10"/></operator><operator pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">pos<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">)<pos:position pos:line="4" pos:column="15"/></operator> <operator pos:line="4" pos:column="16">+=<pos:position pos:line="4" pos:column="18"/></operator> <sizeof pos:line="4" pos:column="19">sizeof<argument_list pos:line="4" pos:column="25">(<argument><expr><name pos:line="4" pos:column="26">result<pos:position pos:line="4" pos:column="32"/></name></expr></argument>)<pos:position pos:line="4" pos:column="33"/></argument_list></sizeof></expr>;<pos:position pos:line="4" pos:column="34"/></expr_stmt>
	<return pos:line="5" pos:column="9">return <expr><name pos:line="5" pos:column="16">result<pos:position pos:line="5" pos:column="22"/></name></expr>;<pos:position pos:line="5" pos:column="23"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

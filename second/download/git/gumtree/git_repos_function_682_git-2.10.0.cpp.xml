<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_682_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_tar_filter_archive<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">archiver<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">ar<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="2" pos:column="37">struct<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">archiver_args<pos:position pos:line="2" pos:column="57"/></name></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">args<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">cmd<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">child_process<pos:position pos:line="5" pos:column="29"/></name></name></type> <name pos:line="5" pos:column="30">filter<pos:position pos:line="5" pos:column="36"/></name> <init pos:line="5" pos:column="37">= <expr><name pos:line="5" pos:column="39">CHILD_PROCESS_INIT<pos:position pos:line="5" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name><name pos:line="6" pos:column="21">argv<pos:position pos:line="6" pos:column="25"/></name><index pos:line="6" pos:column="25">[<expr><literal type="number" pos:line="6" pos:column="26">2<pos:position pos:line="6" pos:column="27"/></literal></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">r<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name><name pos:line="9" pos:column="14">ar<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">data<pos:position pos:line="9" pos:column="22"/></name></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">die<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><literal type="string" pos:line="10" pos:column="21">"BUG: tar-filter archiver called with no filter defined"<pos:position pos:line="10" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">strbuf_addstr<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><operator pos:line="12" pos:column="23">&amp;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="24">cmd<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="29">ar<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">data<pos:position pos:line="12" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">args<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">compression_level<pos:position pos:line="13" pos:column="36"/></name></name> <operator pos:line="13" pos:column="37">&gt;=<pos:position pos:line="13" pos:column="42"/></operator> <literal type="number" pos:line="13" pos:column="40">0<pos:position pos:line="13" pos:column="41"/></literal></expr>)<pos:position pos:line="13" pos:column="42"/></condition><then pos:line="13" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">strbuf_addf<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><operator pos:line="14" pos:column="29">&amp;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="30">cmd<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="35">" -%d"<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="43">args<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">-&gt;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="49">compression_level<pos:position pos:line="14" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="16" pos:column="9">argv<pos:position pos:line="16" pos:column="13"/></name><index pos:line="16" pos:column="13">[<expr><literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr>]<pos:position pos:line="16" pos:column="16"/></index></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name><name pos:line="16" pos:column="19">cmd<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">.<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="23">buf<pos:position pos:line="16" pos:column="26"/></name></name></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">argv<pos:position pos:line="17" pos:column="13"/></name><index pos:line="17" pos:column="13">[<expr><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal></expr>]<pos:position pos:line="17" pos:column="16"/></index></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">NULL<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">filter<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">.<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">argv<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">argv<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">filter<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">.<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">use_shell<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <literal type="number" pos:line="19" pos:column="28">1<pos:position pos:line="19" pos:column="29"/></literal></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">filter<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">.<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="16">in<pos:position pos:line="20" pos:column="18"/></name></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <operator pos:line="20" pos:column="21">-<pos:position pos:line="20" pos:column="22"/></operator><literal type="number" pos:line="20" pos:column="22">1<pos:position pos:line="20" pos:column="23"/></literal></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">start_command<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><operator pos:line="22" pos:column="27">&amp;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="28">filter<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call> <operator pos:line="22" pos:column="36">&lt;<pos:position pos:line="22" pos:column="40"/></operator> <literal type="number" pos:line="22" pos:column="38">0<pos:position pos:line="22" pos:column="39"/></literal></expr>)<pos:position pos:line="22" pos:column="40"/></condition><then pos:line="22" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">die_errno<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><literal type="string" pos:line="23" pos:column="27">"unable to start '%s' filter"<pos:position pos:line="23" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="58">argv<pos:position pos:line="23" pos:column="62"/></name><index pos:line="23" pos:column="62">[<expr><literal type="number" pos:line="23" pos:column="63">0<pos:position pos:line="23" pos:column="64"/></literal></expr>]<pos:position pos:line="23" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">close<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><literal type="number" pos:line="24" pos:column="15">1<pos:position pos:line="24" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="18"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">dup2<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><name><name pos:line="25" pos:column="18">filter<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">.<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">in<pos:position pos:line="25" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="29">1<pos:position pos:line="25" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call> <operator pos:line="25" pos:column="32">&lt;<pos:position pos:line="25" pos:column="36"/></operator> <literal type="number" pos:line="25" pos:column="34">0<pos:position pos:line="25" pos:column="35"/></literal></expr>)<pos:position pos:line="25" pos:column="36"/></condition><then pos:line="25" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">die_errno<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><literal type="string" pos:line="26" pos:column="27">"unable to redirect descriptor"<pos:position pos:line="26" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="60"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">close<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name><name pos:line="27" pos:column="15">filter<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">.<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">in<pos:position pos:line="27" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><name pos:line="29" pos:column="9">r<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <call><name pos:line="29" pos:column="13">write_tar_archive<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">ar<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="35">args<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">close<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><literal type="number" pos:line="31" pos:column="15">1<pos:position pos:line="31" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="18"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name pos:line="32" pos:column="13">finish_command<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><operator pos:line="32" pos:column="28">&amp;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="29">filter<pos:position pos:line="32" pos:column="35"/></name></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call> <operator pos:line="32" pos:column="37">!=<pos:position pos:line="32" pos:column="39"/></operator> <literal type="number" pos:line="32" pos:column="40">0<pos:position pos:line="32" pos:column="41"/></literal></expr>)<pos:position pos:line="32" pos:column="42"/></condition><then pos:line="32" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">die<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><literal type="string" pos:line="33" pos:column="21">"'%s' filter reported error"<pos:position pos:line="33" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="51">argv<pos:position pos:line="33" pos:column="55"/></name><index pos:line="33" pos:column="55">[<expr><literal type="number" pos:line="33" pos:column="56">0<pos:position pos:line="33" pos:column="57"/></literal></expr>]<pos:position pos:line="33" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="35" pos:column="9">strbuf_release<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><operator pos:line="35" pos:column="24">&amp;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="25">cmd<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
	<return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">r<pos:position pos:line="36" pos:column="17"/></name></expr>;<pos:position pos:line="36" pos:column="18"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

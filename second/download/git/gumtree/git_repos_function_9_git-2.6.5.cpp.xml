<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_9_git-2.6.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_one_symref_info<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">string_list<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">symref<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="63">const<pos:position pos:line="1" pos:column="68"/></specifier> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">val<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="80">int<pos:position pos:line="1" pos:column="83"/></name></type> <name pos:line="1" pos:column="84">len<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">sym<pos:position pos:line="3" pos:column="18"/></name></decl>, <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="21">target<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">string_list_item<pos:position pos:line="4" pos:column="32"/></name></name> <modifier pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></modifier></type><name pos:line="4" pos:column="34">item<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">len<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18">
		<block type="pseudo"><return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></block></then></if> <comment type="block" pos:line="7" pos:column="25">/* just "symref" */</comment>
	<comment type="block" pos:line="8" pos:column="9">/* e.g. "symref=HEAD:refs/heads/master" */</comment>
	<expr_stmt><expr><name pos:line="9" pos:column="9">sym<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">xmemdupz<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">val<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="29">len<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">target<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <call><name pos:line="10" pos:column="18">strchr<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">sym<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="30">':'<pos:position pos:line="10" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">target<pos:position pos:line="11" pos:column="20"/></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21">
		<comment type="block" pos:line="12" pos:column="17">/* just "symref=something" */</comment>
		<block type="pseudo"><goto pos:line="13" pos:column="17">goto <name pos:line="13" pos:column="22">reject<pos:position pos:line="13" pos:column="28"/></name>;<pos:position pos:line="13" pos:column="29"/></goto></block></then></if>
	<expr_stmt><expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">target<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">++<pos:position pos:line="14" pos:column="19"/></operator><operator pos:line="14" pos:column="19">)<pos:position pos:line="14" pos:column="20"/></operator> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <literal type="char" pos:line="14" pos:column="23">'\0'<pos:position pos:line="14" pos:column="27"/></literal></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">check_refname_format<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">sym<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">REFNAME_ALLOW_ONELEVEL<pos:position pos:line="15" pos:column="61"/></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call> <operator pos:line="15" pos:column="63">||<pos:position pos:line="15" pos:column="65"/></operator>
	    <call><name pos:line="16" pos:column="13">check_refname_format<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">target<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">REFNAME_ALLOW_ONELEVEL<pos:position pos:line="16" pos:column="64"/></name></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="66"/></condition><then pos:line="16" pos:column="66">
		<comment type="block" pos:line="17" pos:column="17">/* "symref=bogus:pair */</comment>
		<block type="pseudo"><goto pos:line="18" pos:column="17">goto <name pos:line="18" pos:column="22">reject<pos:position pos:line="18" pos:column="28"/></name>;<pos:position pos:line="18" pos:column="29"/></goto></block></then></if>
	<expr_stmt><expr><name pos:line="19" pos:column="9">item<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">string_list_append<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><name pos:line="19" pos:column="35">symref<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">sym<pos:position pos:line="19" pos:column="46"/></name></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">item<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">util<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">target<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
	<return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
<label><name pos:line="22" pos:column="1">reject<pos:position pos:line="22" pos:column="7"/></name>:<pos:position pos:line="22" pos:column="8"/></label>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">free<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><name pos:line="23" pos:column="14">sym<pos:position pos:line="23" pos:column="17"/></name></expr></argument>)<pos:position pos:line="23" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
	<return pos:line="24" pos:column="9">return;<pos:position pos:line="24" pos:column="16"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1094_git-2.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">builtin_diff<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">name_a<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">name_b<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="3" pos:column="26">struct<pos:position pos:line="3" pos:column="32"/></name> <name pos:line="3" pos:column="33">diff_filespec<pos:position pos:line="3" pos:column="46"/></name></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">one<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="4" pos:column="26">struct<pos:position pos:line="4" pos:column="32"/></name> <name pos:line="4" pos:column="33">diff_filespec<pos:position pos:line="4" pos:column="46"/></name></name> <modifier pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></modifier></type><name pos:line="4" pos:column="48">two<pos:position pos:line="4" pos:column="51"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="5" pos:column="26">const<pos:position pos:line="5" pos:column="31"/></specifier> <name pos:line="5" pos:column="32">char<pos:position pos:line="5" pos:column="36"/></name> <modifier pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></modifier></type><name pos:line="5" pos:column="38">xfrm_msg<pos:position pos:line="5" pos:column="46"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="6" pos:column="26">int<pos:position pos:line="6" pos:column="29"/></name></type> <name pos:line="6" pos:column="30">must_show_header<pos:position pos:line="6" pos:column="46"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="7" pos:column="26">struct<pos:position pos:line="7" pos:column="32"/></name> <name pos:line="7" pos:column="33">diff_options<pos:position pos:line="7" pos:column="45"/></name></name> <modifier pos:line="7" pos:column="46">*<pos:position pos:line="7" pos:column="47"/></modifier></type><name pos:line="7" pos:column="47">o<pos:position pos:line="7" pos:column="48"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="8" pos:column="26">int<pos:position pos:line="8" pos:column="29"/></name></type> <name pos:line="8" pos:column="30">complete_rewrite<pos:position pos:line="8" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="8" pos:column="47"/></parameter_list>
<block pos:line="9" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">mmfile_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">mf1<pos:position pos:line="10" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="23">mf2<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name><name pos:line="11" pos:column="21">lbl<pos:position pos:line="11" pos:column="24"/></name><index pos:line="11" pos:column="24">[<expr><literal type="number" pos:line="11" pos:column="25">2<pos:position pos:line="11" pos:column="26"/></literal></expr>]<pos:position pos:line="11" pos:column="27"/></index></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">a_one<pos:position pos:line="12" pos:column="20"/></name></decl>, <modifier pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="23">b_two<pos:position pos:line="12" pos:column="28"/></name></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">meta<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><call><name pos:line="13" pos:column="28">diff_get_color_opt<pos:position pos:line="13" pos:column="46"/></name><argument_list pos:line="13" pos:column="46">(<argument><expr><name pos:line="13" pos:column="47">o<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">DIFF_METAINFO<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">char<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">reset<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><call><name pos:line="14" pos:column="29">diff_get_color_opt<pos:position pos:line="14" pos:column="47"/></name><argument_list pos:line="14" pos:column="47">(<argument><expr><name pos:line="14" pos:column="48">o<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">DIFF_RESET<pos:position pos:line="14" pos:column="61"/></name></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="15" pos:column="9">const<pos:position pos:line="15" pos:column="14"/></specifier> <name pos:line="15" pos:column="15">char<pos:position pos:line="15" pos:column="19"/></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name pos:line="15" pos:column="21">a_prefix<pos:position pos:line="15" pos:column="29"/></name></decl>, <modifier pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="15" pos:column="32">b_prefix<pos:position pos:line="15" pos:column="40"/></name></decl>;<pos:position pos:line="15" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="16" pos:column="9">struct<pos:position pos:line="16" pos:column="15"/></name> <name pos:line="16" pos:column="16">userdiff_driver<pos:position pos:line="16" pos:column="31"/></name></name> <modifier pos:line="16" pos:column="32">*<pos:position pos:line="16" pos:column="33"/></modifier></type><name pos:line="16" pos:column="33">textconv_one<pos:position pos:line="16" pos:column="45"/></name> <init pos:line="16" pos:column="46">= <expr><name pos:line="16" pos:column="48">NULL<pos:position pos:line="16" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="17" pos:column="9">struct<pos:position pos:line="17" pos:column="15"/></name> <name pos:line="17" pos:column="16">userdiff_driver<pos:position pos:line="17" pos:column="31"/></name></name> <modifier pos:line="17" pos:column="32">*<pos:position pos:line="17" pos:column="33"/></modifier></type><name pos:line="17" pos:column="33">textconv_two<pos:position pos:line="17" pos:column="45"/></name> <init pos:line="17" pos:column="46">= <expr><name pos:line="17" pos:column="48">NULL<pos:position pos:line="17" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="18" pos:column="9">struct<pos:position pos:line="18" pos:column="15"/></name> <name pos:line="18" pos:column="16">strbuf<pos:position pos:line="18" pos:column="22"/></name></name></type> <name pos:line="18" pos:column="23">header<pos:position pos:line="18" pos:column="29"/></name> <init pos:line="18" pos:column="30">= <expr><name pos:line="18" pos:column="32">STRBUF_INIT<pos:position pos:line="18" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="19" pos:column="9">const<pos:position pos:line="19" pos:column="14"/></specifier> <name pos:line="19" pos:column="15">char<pos:position pos:line="19" pos:column="19"/></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">line_prefix<pos:position pos:line="19" pos:column="32"/></name> <init pos:line="19" pos:column="33">= <expr><call><name pos:line="19" pos:column="35">diff_line_prefix<pos:position pos:line="19" pos:column="51"/></name><argument_list pos:line="19" pos:column="51">(<argument><expr><name pos:line="19" pos:column="52">o<pos:position pos:line="19" pos:column="53"/></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="55"/></decl_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">DIFF_OPT_TST<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">o<pos:position pos:line="21" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="29">SUBMODULE_LOG<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call> <operator pos:line="21" pos:column="44">&amp;&amp;<pos:position pos:line="21" pos:column="54"/></operator>
			<operator pos:line="22" pos:column="25">(<pos:position pos:line="22" pos:column="26"/></operator><operator pos:line="22" pos:column="26">!<pos:position pos:line="22" pos:column="27"/></operator><name><name pos:line="22" pos:column="27">one<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">mode<pos:position pos:line="22" pos:column="36"/></name></name> <operator pos:line="22" pos:column="37">||<pos:position pos:line="22" pos:column="39"/></operator> <call><name pos:line="22" pos:column="40">S_ISGITLINK<pos:position pos:line="22" pos:column="51"/></name><argument_list pos:line="22" pos:column="51">(<argument><expr><name><name pos:line="22" pos:column="52">one<pos:position pos:line="22" pos:column="55"/></name><operator pos:line="22" pos:column="55">-&gt;<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="57">mode<pos:position pos:line="22" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></call><operator pos:line="22" pos:column="62">)<pos:position pos:line="22" pos:column="63"/></operator> <operator pos:line="22" pos:column="64">&amp;&amp;<pos:position pos:line="22" pos:column="74"/></operator>
			<operator pos:line="23" pos:column="25">(<pos:position pos:line="23" pos:column="26"/></operator><operator pos:line="23" pos:column="26">!<pos:position pos:line="23" pos:column="27"/></operator><name><name pos:line="23" pos:column="27">two<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">-&gt;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="32">mode<pos:position pos:line="23" pos:column="36"/></name></name> <operator pos:line="23" pos:column="37">||<pos:position pos:line="23" pos:column="39"/></operator> <call><name pos:line="23" pos:column="40">S_ISGITLINK<pos:position pos:line="23" pos:column="51"/></name><argument_list pos:line="23" pos:column="51">(<argument><expr><name><name pos:line="23" pos:column="52">two<pos:position pos:line="23" pos:column="55"/></name><operator pos:line="23" pos:column="55">-&gt;<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="57">mode<pos:position pos:line="23" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call><operator pos:line="23" pos:column="62">)<pos:position pos:line="23" pos:column="63"/></operator></expr>)<pos:position pos:line="23" pos:column="64"/></condition><then pos:line="23" pos:column="64"> <block pos:line="23" pos:column="65">{
		<decl_stmt><decl><type><specifier pos:line="24" pos:column="17">const<pos:position pos:line="24" pos:column="22"/></specifier> <name pos:line="24" pos:column="23">char<pos:position pos:line="24" pos:column="27"/></name> <modifier pos:line="24" pos:column="28">*<pos:position pos:line="24" pos:column="29"/></modifier></type><name pos:line="24" pos:column="29">del<pos:position pos:line="24" pos:column="32"/></name> <init pos:line="24" pos:column="33">= <expr><call><name pos:line="24" pos:column="35">diff_get_color_opt<pos:position pos:line="24" pos:column="53"/></name><argument_list pos:line="24" pos:column="53">(<argument><expr><name pos:line="24" pos:column="54">o<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="57">DIFF_FILE_OLD<pos:position pos:line="24" pos:column="70"/></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="72"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="25" pos:column="17">const<pos:position pos:line="25" pos:column="22"/></specifier> <name pos:line="25" pos:column="23">char<pos:position pos:line="25" pos:column="27"/></name> <modifier pos:line="25" pos:column="28">*<pos:position pos:line="25" pos:column="29"/></modifier></type><name pos:line="25" pos:column="29">add<pos:position pos:line="25" pos:column="32"/></name> <init pos:line="25" pos:column="33">= <expr><call><name pos:line="25" pos:column="35">diff_get_color_opt<pos:position pos:line="25" pos:column="53"/></name><argument_list pos:line="25" pos:column="53">(<argument><expr><name pos:line="25" pos:column="54">o<pos:position pos:line="25" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="57">DIFF_FILE_NEW<pos:position pos:line="25" pos:column="70"/></name></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="72"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">show_submodule_summary<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><name><name pos:line="26" pos:column="40">o<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">file<pos:position pos:line="26" pos:column="47"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="26" pos:column="49">one<pos:position pos:line="26" pos:column="52"/></name><operator pos:line="26" pos:column="52">-&gt;<pos:position pos:line="26" pos:column="57"/></operator><name pos:line="26" pos:column="54">path<pos:position pos:line="26" pos:column="58"/></name></name></expr> ?<pos:position pos:line="26" pos:column="60"/></condition><then pos:line="26" pos:column="60"> <expr><name><name pos:line="26" pos:column="61">one<pos:position pos:line="26" pos:column="64"/></name><operator pos:line="26" pos:column="64">-&gt;<pos:position pos:line="26" pos:column="69"/></operator><name pos:line="26" pos:column="66">path<pos:position pos:line="26" pos:column="70"/></name></name></expr> <pos:position pos:line="26" pos:column="71"/></then><else pos:line="26" pos:column="71">: <expr><name><name pos:line="26" pos:column="73">two<pos:position pos:line="26" pos:column="76"/></name><operator pos:line="26" pos:column="76">-&gt;<pos:position pos:line="26" pos:column="81"/></operator><name pos:line="26" pos:column="78">path<pos:position pos:line="26" pos:column="82"/></name></name></expr></else></ternary></expr></argument>,
				<argument><expr><name pos:line="27" pos:column="33">line_prefix<pos:position pos:line="27" pos:column="44"/></name></expr></argument>,
				<argument><expr><name><name pos:line="28" pos:column="33">one<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">-&gt;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="38">sha1<pos:position pos:line="28" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="44">two<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">-&gt;<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="49">sha1<pos:position pos:line="28" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="55">two<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">-&gt;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="60">dirty_submodule<pos:position pos:line="28" pos:column="75"/></name></name></expr></argument>,
				<argument><expr><name pos:line="29" pos:column="33">meta<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="39">del<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">add<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">reset<pos:position pos:line="29" pos:column="54"/></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
		<return pos:line="30" pos:column="17">return;<pos:position pos:line="30" pos:column="24"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">DIFF_OPT_TST<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">o<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="29">ALLOW_TEXTCONV<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="45"/></condition><then pos:line="33" pos:column="45"> <block pos:line="33" pos:column="46">{
		<expr_stmt><expr><name pos:line="34" pos:column="17">textconv_one<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">=<pos:position pos:line="34" pos:column="31"/></operator> <call><name pos:line="34" pos:column="32">get_textconv<pos:position pos:line="34" pos:column="44"/></name><argument_list pos:line="34" pos:column="44">(<argument><expr><name pos:line="34" pos:column="45">one<pos:position pos:line="34" pos:column="48"/></name></expr></argument>)<pos:position pos:line="34" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">textconv_two<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <call><name pos:line="35" pos:column="32">get_textconv<pos:position pos:line="35" pos:column="44"/></name><argument_list pos:line="35" pos:column="44">(<argument><expr><name pos:line="35" pos:column="45">two<pos:position pos:line="35" pos:column="48"/></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="38" pos:column="9">diff_set_mnemonic_prefix<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">o<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="37">"a/"<pos:position pos:line="38" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="43">"b/"<pos:position pos:line="38" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">DIFF_OPT_TST<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name pos:line="39" pos:column="26">o<pos:position pos:line="39" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="29">REVERSE_DIFF<pos:position pos:line="39" pos:column="41"/></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="43"/></condition><then pos:line="39" pos:column="43"> <block pos:line="39" pos:column="44">{
		<expr_stmt><expr><name pos:line="40" pos:column="17">a_prefix<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">=<pos:position pos:line="40" pos:column="27"/></operator> <name><name pos:line="40" pos:column="28">o<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">-&gt;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="31">b_prefix<pos:position pos:line="40" pos:column="39"/></name></name></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">b_prefix<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <name><name pos:line="41" pos:column="28">o<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">-&gt;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="31">a_prefix<pos:position pos:line="41" pos:column="39"/></name></name></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></then> <else pos:line="42" pos:column="11">else <block pos:line="42" pos:column="16">{
		<expr_stmt><expr><name pos:line="43" pos:column="17">a_prefix<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">=<pos:position pos:line="43" pos:column="27"/></operator> <name><name pos:line="43" pos:column="28">o<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">-&gt;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="31">a_prefix<pos:position pos:line="43" pos:column="39"/></name></name></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="44" pos:column="17">b_prefix<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">=<pos:position pos:line="44" pos:column="27"/></operator> <name><name pos:line="44" pos:column="28">o<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">-&gt;<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="31">b_prefix<pos:position pos:line="44" pos:column="39"/></name></name></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="47" pos:column="9">/* Never use a non-valid filename anywhere if at all possible */</comment>
	<expr_stmt><expr><name pos:line="48" pos:column="9">name_a<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <ternary><condition><expr><call><name pos:line="48" pos:column="18">DIFF_FILE_VALID<pos:position pos:line="48" pos:column="33"/></name><argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">one<pos:position pos:line="48" pos:column="37"/></name></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr> ?<pos:position pos:line="48" pos:column="40"/></condition><then pos:line="48" pos:column="40"> <expr><name pos:line="48" pos:column="41">name_a<pos:position pos:line="48" pos:column="47"/></name></expr> <pos:position pos:line="48" pos:column="48"/></then><else pos:line="48" pos:column="48">: <expr><name pos:line="48" pos:column="50">name_b<pos:position pos:line="48" pos:column="56"/></name></expr></else></ternary></expr>;<pos:position pos:line="48" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name pos:line="49" pos:column="9">name_b<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <ternary><condition><expr><call><name pos:line="49" pos:column="18">DIFF_FILE_VALID<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">two<pos:position pos:line="49" pos:column="37"/></name></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr> ?<pos:position pos:line="49" pos:column="40"/></condition><then pos:line="49" pos:column="40"> <expr><name pos:line="49" pos:column="41">name_b<pos:position pos:line="49" pos:column="47"/></name></expr> <pos:position pos:line="49" pos:column="48"/></then><else pos:line="49" pos:column="48">: <expr><name pos:line="49" pos:column="50">name_a<pos:position pos:line="49" pos:column="56"/></name></expr></else></ternary></expr>;<pos:position pos:line="49" pos:column="57"/></expr_stmt>

	<expr_stmt><expr><name pos:line="51" pos:column="9">a_one<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">=<pos:position pos:line="51" pos:column="16"/></operator> <call><name pos:line="51" pos:column="17">quote_two<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">a_prefix<pos:position pos:line="51" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="37">name_a<pos:position pos:line="51" pos:column="43"/></name> <operator pos:line="51" pos:column="44">+<pos:position pos:line="51" pos:column="45"/></operator> <operator pos:line="51" pos:column="46">(<pos:position pos:line="51" pos:column="47"/></operator><operator pos:line="51" pos:column="47">*<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="48">name_a<pos:position pos:line="51" pos:column="54"/></name> <operator pos:line="51" pos:column="55">==<pos:position pos:line="51" pos:column="57"/></operator> <literal type="char" pos:line="51" pos:column="58">'/'<pos:position pos:line="51" pos:column="61"/></literal><operator pos:line="51" pos:column="61">)<pos:position pos:line="51" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name pos:line="52" pos:column="9">b_two<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <call><name pos:line="52" pos:column="17">quote_two<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name pos:line="52" pos:column="27">b_prefix<pos:position pos:line="52" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="37">name_b<pos:position pos:line="52" pos:column="43"/></name> <operator pos:line="52" pos:column="44">+<pos:position pos:line="52" pos:column="45"/></operator> <operator pos:line="52" pos:column="46">(<pos:position pos:line="52" pos:column="47"/></operator><operator pos:line="52" pos:column="47">*<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="48">name_b<pos:position pos:line="52" pos:column="54"/></name> <operator pos:line="52" pos:column="55">==<pos:position pos:line="52" pos:column="57"/></operator> <literal type="char" pos:line="52" pos:column="58">'/'<pos:position pos:line="52" pos:column="61"/></literal><operator pos:line="52" pos:column="61">)<pos:position pos:line="52" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="52" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">lbl<pos:position pos:line="53" pos:column="12"/></name><index pos:line="53" pos:column="12">[<expr><literal type="number" pos:line="53" pos:column="13">0<pos:position pos:line="53" pos:column="14"/></literal></expr>]<pos:position pos:line="53" pos:column="15"/></index></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <ternary><condition><expr><call><name pos:line="53" pos:column="18">DIFF_FILE_VALID<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><name pos:line="53" pos:column="34">one<pos:position pos:line="53" pos:column="37"/></name></expr></argument>)<pos:position pos:line="53" pos:column="38"/></argument_list></call></expr> ?<pos:position pos:line="53" pos:column="40"/></condition><then pos:line="53" pos:column="40"> <expr><name pos:line="53" pos:column="41">a_one<pos:position pos:line="53" pos:column="46"/></name></expr> <pos:position pos:line="53" pos:column="47"/></then><else pos:line="53" pos:column="47">: <expr><literal type="string" pos:line="53" pos:column="49">"/dev/null"<pos:position pos:line="53" pos:column="60"/></literal></expr></else></ternary></expr>;<pos:position pos:line="53" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="54" pos:column="9">lbl<pos:position pos:line="54" pos:column="12"/></name><index pos:line="54" pos:column="12">[<expr><literal type="number" pos:line="54" pos:column="13">1<pos:position pos:line="54" pos:column="14"/></literal></expr>]<pos:position pos:line="54" pos:column="15"/></index></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <ternary><condition><expr><call><name pos:line="54" pos:column="18">DIFF_FILE_VALID<pos:position pos:line="54" pos:column="33"/></name><argument_list pos:line="54" pos:column="33">(<argument><expr><name pos:line="54" pos:column="34">two<pos:position pos:line="54" pos:column="37"/></name></expr></argument>)<pos:position pos:line="54" pos:column="38"/></argument_list></call></expr> ?<pos:position pos:line="54" pos:column="40"/></condition><then pos:line="54" pos:column="40"> <expr><name pos:line="54" pos:column="41">b_two<pos:position pos:line="54" pos:column="46"/></name></expr> <pos:position pos:line="54" pos:column="47"/></then><else pos:line="54" pos:column="47">: <expr><literal type="string" pos:line="54" pos:column="49">"/dev/null"<pos:position pos:line="54" pos:column="60"/></literal></expr></else></ternary></expr>;<pos:position pos:line="54" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">strbuf_addf<pos:position pos:line="55" pos:column="20"/></name><argument_list pos:line="55" pos:column="20">(<argument><expr><operator pos:line="55" pos:column="21">&amp;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="22">header<pos:position pos:line="55" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="30">"%s%sdiff --git %s %s%s\n"<pos:position pos:line="55" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="58">line_prefix<pos:position pos:line="55" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="71">meta<pos:position pos:line="55" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="77">a_one<pos:position pos:line="55" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="84">b_two<pos:position pos:line="55" pos:column="89"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="91">reset<pos:position pos:line="55" pos:column="96"/></name></expr></argument>)<pos:position pos:line="55" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="98"/></expr_stmt>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">lbl<pos:position pos:line="56" pos:column="16"/></name><index pos:line="56" pos:column="16">[<expr><literal type="number" pos:line="56" pos:column="17">0<pos:position pos:line="56" pos:column="18"/></literal></expr>]<pos:position pos:line="56" pos:column="19"/></index><index pos:line="56" pos:column="19">[<expr><literal type="number" pos:line="56" pos:column="20">0<pos:position pos:line="56" pos:column="21"/></literal></expr>]<pos:position pos:line="56" pos:column="22"/></index></name> <operator pos:line="56" pos:column="23">==<pos:position pos:line="56" pos:column="25"/></operator> <literal type="char" pos:line="56" pos:column="26">'/'<pos:position pos:line="56" pos:column="29"/></literal></expr>)<pos:position pos:line="56" pos:column="30"/></condition><then pos:line="56" pos:column="30"> <block pos:line="56" pos:column="31">{
		<comment type="block" pos:line="57" pos:column="17">/* /dev/null */</comment>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">strbuf_addf<pos:position pos:line="58" pos:column="28"/></name><argument_list pos:line="58" pos:column="28">(<argument><expr><operator pos:line="58" pos:column="29">&amp;<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="30">header<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="38">"%s%snew file mode %06o%s\n"<pos:position pos:line="58" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="68">line_prefix<pos:position pos:line="58" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="81">meta<pos:position pos:line="58" pos:column="85"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="87">two<pos:position pos:line="58" pos:column="90"/></name><operator pos:line="58" pos:column="90">-&gt;<pos:position pos:line="58" pos:column="95"/></operator><name pos:line="58" pos:column="92">mode<pos:position pos:line="58" pos:column="96"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="98">reset<pos:position pos:line="58" pos:column="103"/></name></expr></argument>)<pos:position pos:line="58" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="105"/></expr_stmt>
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">xfrm_msg<pos:position pos:line="59" pos:column="29"/></name></expr>)<pos:position pos:line="59" pos:column="30"/></condition><then pos:line="59" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="25">strbuf_addstr<pos:position pos:line="60" pos:column="38"/></name><argument_list pos:line="60" pos:column="38">(<argument><expr><operator pos:line="60" pos:column="39">&amp;<pos:position pos:line="60" pos:column="44"/></operator><name pos:line="60" pos:column="40">header<pos:position pos:line="60" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="48">xfrm_msg<pos:position pos:line="60" pos:column="56"/></name></expr></argument>)<pos:position pos:line="60" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="58"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="61" pos:column="17">must_show_header<pos:position pos:line="61" pos:column="33"/></name> <operator pos:line="61" pos:column="34">=<pos:position pos:line="61" pos:column="35"/></operator> <literal type="number" pos:line="61" pos:column="36">1<pos:position pos:line="61" pos:column="37"/></literal></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="62" pos:column="10"/></block></then>
	<elseif pos:line="63" pos:column="9">else <if pos:line="63" pos:column="14">if <condition pos:line="63" pos:column="17">(<expr><name><name pos:line="63" pos:column="18">lbl<pos:position pos:line="63" pos:column="21"/></name><index pos:line="63" pos:column="21">[<expr><literal type="number" pos:line="63" pos:column="22">1<pos:position pos:line="63" pos:column="23"/></literal></expr>]<pos:position pos:line="63" pos:column="24"/></index><index pos:line="63" pos:column="24">[<expr><literal type="number" pos:line="63" pos:column="25">0<pos:position pos:line="63" pos:column="26"/></literal></expr>]<pos:position pos:line="63" pos:column="27"/></index></name> <operator pos:line="63" pos:column="28">==<pos:position pos:line="63" pos:column="30"/></operator> <literal type="char" pos:line="63" pos:column="31">'/'<pos:position pos:line="63" pos:column="34"/></literal></expr>)<pos:position pos:line="63" pos:column="35"/></condition><then pos:line="63" pos:column="35"> <block pos:line="63" pos:column="36">{
		<expr_stmt><expr><call><name pos:line="64" pos:column="17">strbuf_addf<pos:position pos:line="64" pos:column="28"/></name><argument_list pos:line="64" pos:column="28">(<argument><expr><operator pos:line="64" pos:column="29">&amp;<pos:position pos:line="64" pos:column="34"/></operator><name pos:line="64" pos:column="30">header<pos:position pos:line="64" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="38">"%s%sdeleted file mode %06o%s\n"<pos:position pos:line="64" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="72">line_prefix<pos:position pos:line="64" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="85">meta<pos:position pos:line="64" pos:column="89"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="91">one<pos:position pos:line="64" pos:column="94"/></name><operator pos:line="64" pos:column="94">-&gt;<pos:position pos:line="64" pos:column="99"/></operator><name pos:line="64" pos:column="96">mode<pos:position pos:line="64" pos:column="100"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="102">reset<pos:position pos:line="64" pos:column="107"/></name></expr></argument>)<pos:position pos:line="64" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="109"/></expr_stmt>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name pos:line="65" pos:column="21">xfrm_msg<pos:position pos:line="65" pos:column="29"/></name></expr>)<pos:position pos:line="65" pos:column="30"/></condition><then pos:line="65" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="25">strbuf_addstr<pos:position pos:line="66" pos:column="38"/></name><argument_list pos:line="66" pos:column="38">(<argument><expr><operator pos:line="66" pos:column="39">&amp;<pos:position pos:line="66" pos:column="44"/></operator><name pos:line="66" pos:column="40">header<pos:position pos:line="66" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="48">xfrm_msg<pos:position pos:line="66" pos:column="56"/></name></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="58"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="67" pos:column="17">must_show_header<pos:position pos:line="67" pos:column="33"/></name> <operator pos:line="67" pos:column="34">=<pos:position pos:line="67" pos:column="35"/></operator> <literal type="number" pos:line="67" pos:column="36">1<pos:position pos:line="67" pos:column="37"/></literal></expr>;<pos:position pos:line="67" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if></elseif>
	<else pos:line="69" pos:column="9">else <block pos:line="69" pos:column="14">{
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name><name pos:line="70" pos:column="21">one<pos:position pos:line="70" pos:column="24"/></name><operator pos:line="70" pos:column="24">-&gt;<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="26">mode<pos:position pos:line="70" pos:column="30"/></name></name> <operator pos:line="70" pos:column="31">!=<pos:position pos:line="70" pos:column="33"/></operator> <name><name pos:line="70" pos:column="34">two<pos:position pos:line="70" pos:column="37"/></name><operator pos:line="70" pos:column="37">-&gt;<pos:position pos:line="70" pos:column="42"/></operator><name pos:line="70" pos:column="39">mode<pos:position pos:line="70" pos:column="43"/></name></name></expr>)<pos:position pos:line="70" pos:column="44"/></condition><then pos:line="70" pos:column="44"> <block pos:line="70" pos:column="45">{
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">strbuf_addf<pos:position pos:line="71" pos:column="36"/></name><argument_list pos:line="71" pos:column="36">(<argument><expr><operator pos:line="71" pos:column="37">&amp;<pos:position pos:line="71" pos:column="42"/></operator><name pos:line="71" pos:column="38">header<pos:position pos:line="71" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="46">"%s%sold mode %06o%s\n"<pos:position pos:line="71" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="71">line_prefix<pos:position pos:line="71" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="84">meta<pos:position pos:line="71" pos:column="88"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="90">one<pos:position pos:line="71" pos:column="93"/></name><operator pos:line="71" pos:column="93">-&gt;<pos:position pos:line="71" pos:column="98"/></operator><name pos:line="71" pos:column="95">mode<pos:position pos:line="71" pos:column="99"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="101">reset<pos:position pos:line="71" pos:column="106"/></name></expr></argument>)<pos:position pos:line="71" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="108"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="72" pos:column="25">strbuf_addf<pos:position pos:line="72" pos:column="36"/></name><argument_list pos:line="72" pos:column="36">(<argument><expr><operator pos:line="72" pos:column="37">&amp;<pos:position pos:line="72" pos:column="42"/></operator><name pos:line="72" pos:column="38">header<pos:position pos:line="72" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="46">"%s%snew mode %06o%s\n"<pos:position pos:line="72" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="71">line_prefix<pos:position pos:line="72" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="84">meta<pos:position pos:line="72" pos:column="88"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="90">two<pos:position pos:line="72" pos:column="93"/></name><operator pos:line="72" pos:column="93">-&gt;<pos:position pos:line="72" pos:column="98"/></operator><name pos:line="72" pos:column="95">mode<pos:position pos:line="72" pos:column="99"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="101">reset<pos:position pos:line="72" pos:column="106"/></name></expr></argument>)<pos:position pos:line="72" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="108"/></expr_stmt>
			<expr_stmt><expr><name pos:line="73" pos:column="25">must_show_header<pos:position pos:line="73" pos:column="41"/></name> <operator pos:line="73" pos:column="42">=<pos:position pos:line="73" pos:column="43"/></operator> <literal type="number" pos:line="73" pos:column="44">1<pos:position pos:line="73" pos:column="45"/></literal></expr>;<pos:position pos:line="73" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if>
		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><name pos:line="75" pos:column="21">xfrm_msg<pos:position pos:line="75" pos:column="29"/></name></expr>)<pos:position pos:line="75" pos:column="30"/></condition><then pos:line="75" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="25">strbuf_addstr<pos:position pos:line="76" pos:column="38"/></name><argument_list pos:line="76" pos:column="38">(<argument><expr><operator pos:line="76" pos:column="39">&amp;<pos:position pos:line="76" pos:column="44"/></operator><name pos:line="76" pos:column="40">header<pos:position pos:line="76" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="48">xfrm_msg<pos:position pos:line="76" pos:column="56"/></name></expr></argument>)<pos:position pos:line="76" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="58"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="78" pos:column="17">/*
		 * we do not run diff between different kind
		 * of objects.
		 */</comment>
		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><operator pos:line="82" pos:column="21">(<pos:position pos:line="82" pos:column="22"/></operator><name><name pos:line="82" pos:column="22">one<pos:position pos:line="82" pos:column="25"/></name><operator pos:line="82" pos:column="25">-&gt;<pos:position pos:line="82" pos:column="30"/></operator><name pos:line="82" pos:column="27">mode<pos:position pos:line="82" pos:column="31"/></name></name> <operator pos:line="82" pos:column="32">^<pos:position pos:line="82" pos:column="33"/></operator> <name><name pos:line="82" pos:column="34">two<pos:position pos:line="82" pos:column="37"/></name><operator pos:line="82" pos:column="37">-&gt;<pos:position pos:line="82" pos:column="42"/></operator><name pos:line="82" pos:column="39">mode<pos:position pos:line="82" pos:column="43"/></name></name><operator pos:line="82" pos:column="43">)<pos:position pos:line="82" pos:column="44"/></operator> <operator pos:line="82" pos:column="45">&amp;<pos:position pos:line="82" pos:column="50"/></operator> <name pos:line="82" pos:column="47">S_IFMT<pos:position pos:line="82" pos:column="53"/></name></expr>)<pos:position pos:line="82" pos:column="54"/></condition><then pos:line="82" pos:column="54">
			<block type="pseudo"><goto pos:line="83" pos:column="25">goto <name pos:line="83" pos:column="30">free_ab_and_return<pos:position pos:line="83" pos:column="48"/></name>;<pos:position pos:line="83" pos:column="49"/></goto></block></then></if>
		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><name pos:line="84" pos:column="21">complete_rewrite<pos:position pos:line="84" pos:column="37"/></name> <operator pos:line="84" pos:column="38">&amp;&amp;<pos:position pos:line="84" pos:column="48"/></operator>
		    <operator pos:line="85" pos:column="21">(<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="22">textconv_one<pos:position pos:line="85" pos:column="34"/></name> <operator pos:line="85" pos:column="35">||<pos:position pos:line="85" pos:column="37"/></operator> <operator pos:line="85" pos:column="38">!<pos:position pos:line="85" pos:column="39"/></operator><call><name pos:line="85" pos:column="39">diff_filespec_is_binary<pos:position pos:line="85" pos:column="62"/></name><argument_list pos:line="85" pos:column="62">(<argument><expr><name pos:line="85" pos:column="63">one<pos:position pos:line="85" pos:column="66"/></name></expr></argument>)<pos:position pos:line="85" pos:column="67"/></argument_list></call><operator pos:line="85" pos:column="67">)<pos:position pos:line="85" pos:column="68"/></operator> <operator pos:line="85" pos:column="69">&amp;&amp;<pos:position pos:line="85" pos:column="79"/></operator>
		    <operator pos:line="86" pos:column="21">(<pos:position pos:line="86" pos:column="22"/></operator><name pos:line="86" pos:column="22">textconv_two<pos:position pos:line="86" pos:column="34"/></name> <operator pos:line="86" pos:column="35">||<pos:position pos:line="86" pos:column="37"/></operator> <operator pos:line="86" pos:column="38">!<pos:position pos:line="86" pos:column="39"/></operator><call><name pos:line="86" pos:column="39">diff_filespec_is_binary<pos:position pos:line="86" pos:column="62"/></name><argument_list pos:line="86" pos:column="62">(<argument><expr><name pos:line="86" pos:column="63">two<pos:position pos:line="86" pos:column="66"/></name></expr></argument>)<pos:position pos:line="86" pos:column="67"/></argument_list></call><operator pos:line="86" pos:column="67">)<pos:position pos:line="86" pos:column="68"/></operator></expr>)<pos:position pos:line="86" pos:column="69"/></condition><then pos:line="86" pos:column="69"> <block pos:line="86" pos:column="70">{
			<expr_stmt><expr><call><name pos:line="87" pos:column="25">fprintf<pos:position pos:line="87" pos:column="32"/></name><argument_list pos:line="87" pos:column="32">(<argument><expr><name><name pos:line="87" pos:column="33">o<pos:position pos:line="87" pos:column="34"/></name><operator pos:line="87" pos:column="34">-&gt;<pos:position pos:line="87" pos:column="39"/></operator><name pos:line="87" pos:column="36">file<pos:position pos:line="87" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="42">"%s"<pos:position pos:line="87" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="48">header<pos:position pos:line="87" pos:column="54"/></name><operator pos:line="87" pos:column="54">.<pos:position pos:line="87" pos:column="55"/></operator><name pos:line="87" pos:column="55">buf<pos:position pos:line="87" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="88" pos:column="25">strbuf_reset<pos:position pos:line="88" pos:column="37"/></name><argument_list pos:line="88" pos:column="37">(<argument><expr><operator pos:line="88" pos:column="38">&amp;<pos:position pos:line="88" pos:column="43"/></operator><name pos:line="88" pos:column="39">header<pos:position pos:line="88" pos:column="45"/></name></expr></argument>)<pos:position pos:line="88" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="89" pos:column="25">emit_rewrite_diff<pos:position pos:line="89" pos:column="42"/></name><argument_list pos:line="89" pos:column="42">(<argument><expr><name pos:line="89" pos:column="43">name_a<pos:position pos:line="89" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="51">name_b<pos:position pos:line="89" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="59">one<pos:position pos:line="89" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="64">two<pos:position pos:line="89" pos:column="67"/></name></expr></argument>,
						<argument><expr><name pos:line="90" pos:column="49">textconv_one<pos:position pos:line="90" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="63">textconv_two<pos:position pos:line="90" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="77">o<pos:position pos:line="90" pos:column="78"/></name></expr></argument>)<pos:position pos:line="90" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="80"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="91" pos:column="25">o<pos:position pos:line="91" pos:column="26"/></name><operator pos:line="91" pos:column="26">-&gt;<pos:position pos:line="91" pos:column="31"/></operator><name pos:line="91" pos:column="28">found_changes<pos:position pos:line="91" pos:column="41"/></name></name> <operator pos:line="91" pos:column="42">=<pos:position pos:line="91" pos:column="43"/></operator> <literal type="number" pos:line="91" pos:column="44">1<pos:position pos:line="91" pos:column="45"/></literal></expr>;<pos:position pos:line="91" pos:column="46"/></expr_stmt>
			<goto pos:line="92" pos:column="25">goto <name pos:line="92" pos:column="30">free_ab_and_return<pos:position pos:line="92" pos:column="48"/></name>;<pos:position pos:line="92" pos:column="49"/></goto>
		}<pos:position pos:line="93" pos:column="18"/></block></then></if>
	}<pos:position pos:line="94" pos:column="10"/></block></else></if>

	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name><name pos:line="96" pos:column="13">o<pos:position pos:line="96" pos:column="14"/></name><operator pos:line="96" pos:column="14">-&gt;<pos:position pos:line="96" pos:column="19"/></operator><name pos:line="96" pos:column="16">irreversible_delete<pos:position pos:line="96" pos:column="35"/></name></name> <operator pos:line="96" pos:column="36">&amp;&amp;<pos:position pos:line="96" pos:column="46"/></operator> <name><name pos:line="96" pos:column="39">lbl<pos:position pos:line="96" pos:column="42"/></name><index pos:line="96" pos:column="42">[<expr><literal type="number" pos:line="96" pos:column="43">1<pos:position pos:line="96" pos:column="44"/></literal></expr>]<pos:position pos:line="96" pos:column="45"/></index><index pos:line="96" pos:column="45">[<expr><literal type="number" pos:line="96" pos:column="46">0<pos:position pos:line="96" pos:column="47"/></literal></expr>]<pos:position pos:line="96" pos:column="48"/></index></name> <operator pos:line="96" pos:column="49">==<pos:position pos:line="96" pos:column="51"/></operator> <literal type="char" pos:line="96" pos:column="52">'/'<pos:position pos:line="96" pos:column="55"/></literal></expr>)<pos:position pos:line="96" pos:column="56"/></condition><then pos:line="96" pos:column="56"> <block pos:line="96" pos:column="57">{
		<expr_stmt><expr><call><name pos:line="97" pos:column="17">fprintf<pos:position pos:line="97" pos:column="24"/></name><argument_list pos:line="97" pos:column="24">(<argument><expr><name><name pos:line="97" pos:column="25">o<pos:position pos:line="97" pos:column="26"/></name><operator pos:line="97" pos:column="26">-&gt;<pos:position pos:line="97" pos:column="31"/></operator><name pos:line="97" pos:column="28">file<pos:position pos:line="97" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="34">"%s"<pos:position pos:line="97" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="40">header<pos:position pos:line="97" pos:column="46"/></name><operator pos:line="97" pos:column="46">.<pos:position pos:line="97" pos:column="47"/></operator><name pos:line="97" pos:column="47">buf<pos:position pos:line="97" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="98" pos:column="17">strbuf_reset<pos:position pos:line="98" pos:column="29"/></name><argument_list pos:line="98" pos:column="29">(<argument><expr><operator pos:line="98" pos:column="30">&amp;<pos:position pos:line="98" pos:column="35"/></operator><name pos:line="98" pos:column="31">header<pos:position pos:line="98" pos:column="37"/></name></expr></argument>)<pos:position pos:line="98" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="39"/></expr_stmt>
		<goto pos:line="99" pos:column="17">goto <name pos:line="99" pos:column="22">free_ab_and_return<pos:position pos:line="99" pos:column="40"/></name>;<pos:position pos:line="99" pos:column="41"/></goto>
	}<pos:position pos:line="100" pos:column="10"/></block></then> <elseif pos:line="100" pos:column="11">else <if pos:line="100" pos:column="16">if <condition pos:line="100" pos:column="19">(<expr><operator pos:line="100" pos:column="20">!<pos:position pos:line="100" pos:column="21"/></operator><call><name pos:line="100" pos:column="21">DIFF_OPT_TST<pos:position pos:line="100" pos:column="33"/></name><argument_list pos:line="100" pos:column="33">(<argument><expr><name pos:line="100" pos:column="34">o<pos:position pos:line="100" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="37">TEXT<pos:position pos:line="100" pos:column="41"/></name></expr></argument>)<pos:position pos:line="100" pos:column="42"/></argument_list></call> <operator pos:line="100" pos:column="43">&amp;&amp;<pos:position pos:line="100" pos:column="53"/></operator>
	    <operator pos:line="101" pos:column="13">(<pos:position pos:line="101" pos:column="14"/></operator> <operator pos:line="101" pos:column="15">(<pos:position pos:line="101" pos:column="16"/></operator><operator pos:line="101" pos:column="16">!<pos:position pos:line="101" pos:column="17"/></operator><name pos:line="101" pos:column="17">textconv_one<pos:position pos:line="101" pos:column="29"/></name> <operator pos:line="101" pos:column="30">&amp;&amp;<pos:position pos:line="101" pos:column="40"/></operator> <call><name pos:line="101" pos:column="33">diff_filespec_is_binary<pos:position pos:line="101" pos:column="56"/></name><argument_list pos:line="101" pos:column="56">(<argument><expr><name pos:line="101" pos:column="57">one<pos:position pos:line="101" pos:column="60"/></name></expr></argument>)<pos:position pos:line="101" pos:column="61"/></argument_list></call><operator pos:line="101" pos:column="61">)<pos:position pos:line="101" pos:column="62"/></operator> <operator pos:line="101" pos:column="63">||<pos:position pos:line="101" pos:column="65"/></operator>
	      <operator pos:line="102" pos:column="15">(<pos:position pos:line="102" pos:column="16"/></operator><operator pos:line="102" pos:column="16">!<pos:position pos:line="102" pos:column="17"/></operator><name pos:line="102" pos:column="17">textconv_two<pos:position pos:line="102" pos:column="29"/></name> <operator pos:line="102" pos:column="30">&amp;&amp;<pos:position pos:line="102" pos:column="40"/></operator> <call><name pos:line="102" pos:column="33">diff_filespec_is_binary<pos:position pos:line="102" pos:column="56"/></name><argument_list pos:line="102" pos:column="56">(<argument><expr><name pos:line="102" pos:column="57">two<pos:position pos:line="102" pos:column="60"/></name></expr></argument>)<pos:position pos:line="102" pos:column="61"/></argument_list></call><operator pos:line="102" pos:column="61">)<pos:position pos:line="102" pos:column="62"/></operator> <operator pos:line="102" pos:column="63">)<pos:position pos:line="102" pos:column="64"/></operator></expr>)<pos:position pos:line="102" pos:column="65"/></condition><then pos:line="102" pos:column="65"> <block pos:line="102" pos:column="66">{
		<if pos:line="103" pos:column="17">if <condition pos:line="103" pos:column="20">(<expr><operator pos:line="103" pos:column="21">!<pos:position pos:line="103" pos:column="22"/></operator><name><name pos:line="103" pos:column="22">one<pos:position pos:line="103" pos:column="25"/></name><operator pos:line="103" pos:column="25">-&gt;<pos:position pos:line="103" pos:column="30"/></operator><name pos:line="103" pos:column="27">data<pos:position pos:line="103" pos:column="31"/></name></name> <operator pos:line="103" pos:column="32">&amp;&amp;<pos:position pos:line="103" pos:column="42"/></operator> <operator pos:line="103" pos:column="35">!<pos:position pos:line="103" pos:column="36"/></operator><name><name pos:line="103" pos:column="36">two<pos:position pos:line="103" pos:column="39"/></name><operator pos:line="103" pos:column="39">-&gt;<pos:position pos:line="103" pos:column="44"/></operator><name pos:line="103" pos:column="41">data<pos:position pos:line="103" pos:column="45"/></name></name> <operator pos:line="103" pos:column="46">&amp;&amp;<pos:position pos:line="103" pos:column="56"/></operator>
		    <call><name pos:line="104" pos:column="21">S_ISREG<pos:position pos:line="104" pos:column="28"/></name><argument_list pos:line="104" pos:column="28">(<argument><expr><name><name pos:line="104" pos:column="29">one<pos:position pos:line="104" pos:column="32"/></name><operator pos:line="104" pos:column="32">-&gt;<pos:position pos:line="104" pos:column="37"/></operator><name pos:line="104" pos:column="34">mode<pos:position pos:line="104" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="39"/></argument_list></call> <operator pos:line="104" pos:column="40">&amp;&amp;<pos:position pos:line="104" pos:column="50"/></operator> <call><name pos:line="104" pos:column="43">S_ISREG<pos:position pos:line="104" pos:column="50"/></name><argument_list pos:line="104" pos:column="50">(<argument><expr><name><name pos:line="104" pos:column="51">two<pos:position pos:line="104" pos:column="54"/></name><operator pos:line="104" pos:column="54">-&gt;<pos:position pos:line="104" pos:column="59"/></operator><name pos:line="104" pos:column="56">mode<pos:position pos:line="104" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="61"/></argument_list></call> <operator pos:line="104" pos:column="62">&amp;&amp;<pos:position pos:line="104" pos:column="72"/></operator>
		    <operator pos:line="105" pos:column="21">!<pos:position pos:line="105" pos:column="22"/></operator><call><name pos:line="105" pos:column="22">DIFF_OPT_TST<pos:position pos:line="105" pos:column="34"/></name><argument_list pos:line="105" pos:column="34">(<argument><expr><name pos:line="105" pos:column="35">o<pos:position pos:line="105" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="38">BINARY<pos:position pos:line="105" pos:column="44"/></name></expr></argument>)<pos:position pos:line="105" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="46"/></condition><then pos:line="105" pos:column="46"> <block pos:line="105" pos:column="47">{
			<if pos:line="106" pos:column="25">if <condition pos:line="106" pos:column="28">(<expr><operator pos:line="106" pos:column="29">!<pos:position pos:line="106" pos:column="30"/></operator><call><name pos:line="106" pos:column="30">hashcmp<pos:position pos:line="106" pos:column="37"/></name><argument_list pos:line="106" pos:column="37">(<argument><expr><name><name pos:line="106" pos:column="38">one<pos:position pos:line="106" pos:column="41"/></name><operator pos:line="106" pos:column="41">-&gt;<pos:position pos:line="106" pos:column="46"/></operator><name pos:line="106" pos:column="43">sha1<pos:position pos:line="106" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="49">two<pos:position pos:line="106" pos:column="52"/></name><operator pos:line="106" pos:column="52">-&gt;<pos:position pos:line="106" pos:column="57"/></operator><name pos:line="106" pos:column="54">sha1<pos:position pos:line="106" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="60"/></condition><then pos:line="106" pos:column="60"> <block pos:line="106" pos:column="61">{
				<if pos:line="107" pos:column="33">if <condition pos:line="107" pos:column="36">(<expr><name pos:line="107" pos:column="37">must_show_header<pos:position pos:line="107" pos:column="53"/></name></expr>)<pos:position pos:line="107" pos:column="54"/></condition><then pos:line="107" pos:column="54">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="108" pos:column="41">fprintf<pos:position pos:line="108" pos:column="48"/></name><argument_list pos:line="108" pos:column="48">(<argument><expr><name><name pos:line="108" pos:column="49">o<pos:position pos:line="108" pos:column="50"/></name><operator pos:line="108" pos:column="50">-&gt;<pos:position pos:line="108" pos:column="55"/></operator><name pos:line="108" pos:column="52">file<pos:position pos:line="108" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="58">"%s"<pos:position pos:line="108" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="64">header<pos:position pos:line="108" pos:column="70"/></name><operator pos:line="108" pos:column="70">.<pos:position pos:line="108" pos:column="71"/></operator><name pos:line="108" pos:column="71">buf<pos:position pos:line="108" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="76"/></expr_stmt></block></then></if>
				<goto pos:line="109" pos:column="33">goto <name pos:line="109" pos:column="38">free_ab_and_return<pos:position pos:line="109" pos:column="56"/></name>;<pos:position pos:line="109" pos:column="57"/></goto>
			}<pos:position pos:line="110" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="111" pos:column="25">fprintf<pos:position pos:line="111" pos:column="32"/></name><argument_list pos:line="111" pos:column="32">(<argument><expr><name><name pos:line="111" pos:column="33">o<pos:position pos:line="111" pos:column="34"/></name><operator pos:line="111" pos:column="34">-&gt;<pos:position pos:line="111" pos:column="39"/></operator><name pos:line="111" pos:column="36">file<pos:position pos:line="111" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="42">"%s"<pos:position pos:line="111" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="48">header<pos:position pos:line="111" pos:column="54"/></name><operator pos:line="111" pos:column="54">.<pos:position pos:line="111" pos:column="55"/></operator><name pos:line="111" pos:column="55">buf<pos:position pos:line="111" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="112" pos:column="25">fprintf<pos:position pos:line="112" pos:column="32"/></name><argument_list pos:line="112" pos:column="32">(<argument><expr><name><name pos:line="112" pos:column="33">o<pos:position pos:line="112" pos:column="34"/></name><operator pos:line="112" pos:column="34">-&gt;<pos:position pos:line="112" pos:column="39"/></operator><name pos:line="112" pos:column="36">file<pos:position pos:line="112" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="42">"%sBinary files %s and %s differ\n"<pos:position pos:line="112" pos:column="77"/></literal></expr></argument>,
				<argument><expr><name pos:line="113" pos:column="33">line_prefix<pos:position pos:line="113" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="46">lbl<pos:position pos:line="113" pos:column="49"/></name><index pos:line="113" pos:column="49">[<expr><literal type="number" pos:line="113" pos:column="50">0<pos:position pos:line="113" pos:column="51"/></literal></expr>]<pos:position pos:line="113" pos:column="52"/></index></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="54">lbl<pos:position pos:line="113" pos:column="57"/></name><index pos:line="113" pos:column="57">[<expr><literal type="number" pos:line="113" pos:column="58">1<pos:position pos:line="113" pos:column="59"/></literal></expr>]<pos:position pos:line="113" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="113" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="62"/></expr_stmt>
			<goto pos:line="114" pos:column="25">goto <name pos:line="114" pos:column="30">free_ab_and_return<pos:position pos:line="114" pos:column="48"/></name>;<pos:position pos:line="114" pos:column="49"/></goto>
		}<pos:position pos:line="115" pos:column="18"/></block></then></if>
		<if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><call><name pos:line="116" pos:column="21">fill_mmfile<pos:position pos:line="116" pos:column="32"/></name><argument_list pos:line="116" pos:column="32">(<argument><expr><operator pos:line="116" pos:column="33">&amp;<pos:position pos:line="116" pos:column="38"/></operator><name pos:line="116" pos:column="34">mf1<pos:position pos:line="116" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="39">one<pos:position pos:line="116" pos:column="42"/></name></expr></argument>)<pos:position pos:line="116" pos:column="43"/></argument_list></call> <operator pos:line="116" pos:column="44">&lt;<pos:position pos:line="116" pos:column="48"/></operator> <literal type="number" pos:line="116" pos:column="46">0<pos:position pos:line="116" pos:column="47"/></literal> <operator pos:line="116" pos:column="48">||<pos:position pos:line="116" pos:column="50"/></operator> <call><name pos:line="116" pos:column="51">fill_mmfile<pos:position pos:line="116" pos:column="62"/></name><argument_list pos:line="116" pos:column="62">(<argument><expr><operator pos:line="116" pos:column="63">&amp;<pos:position pos:line="116" pos:column="68"/></operator><name pos:line="116" pos:column="64">mf2<pos:position pos:line="116" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="69">two<pos:position pos:line="116" pos:column="72"/></name></expr></argument>)<pos:position pos:line="116" pos:column="73"/></argument_list></call> <operator pos:line="116" pos:column="74">&lt;<pos:position pos:line="116" pos:column="78"/></operator> <literal type="number" pos:line="116" pos:column="76">0<pos:position pos:line="116" pos:column="77"/></literal></expr>)<pos:position pos:line="116" pos:column="78"/></condition><then pos:line="116" pos:column="78">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="25">die<pos:position pos:line="117" pos:column="28"/></name><argument_list pos:line="117" pos:column="28">(<argument><expr><literal type="string" pos:line="117" pos:column="29">"unable to read files to diff"<pos:position pos:line="117" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="61"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="118" pos:column="17">/* Quite common confusing case */</comment>
		<if pos:line="119" pos:column="17">if <condition pos:line="119" pos:column="20">(<expr><name><name pos:line="119" pos:column="21">mf1<pos:position pos:line="119" pos:column="24"/></name><operator pos:line="119" pos:column="24">.<pos:position pos:line="119" pos:column="25"/></operator><name pos:line="119" pos:column="25">size<pos:position pos:line="119" pos:column="29"/></name></name> <operator pos:line="119" pos:column="30">==<pos:position pos:line="119" pos:column="32"/></operator> <name><name pos:line="119" pos:column="33">mf2<pos:position pos:line="119" pos:column="36"/></name><operator pos:line="119" pos:column="36">.<pos:position pos:line="119" pos:column="37"/></operator><name pos:line="119" pos:column="37">size<pos:position pos:line="119" pos:column="41"/></name></name> <operator pos:line="119" pos:column="42">&amp;&amp;<pos:position pos:line="119" pos:column="52"/></operator>
		    <operator pos:line="120" pos:column="21">!<pos:position pos:line="120" pos:column="22"/></operator><call><name pos:line="120" pos:column="22">memcmp<pos:position pos:line="120" pos:column="28"/></name><argument_list pos:line="120" pos:column="28">(<argument><expr><name><name pos:line="120" pos:column="29">mf1<pos:position pos:line="120" pos:column="32"/></name><operator pos:line="120" pos:column="32">.<pos:position pos:line="120" pos:column="33"/></operator><name pos:line="120" pos:column="33">ptr<pos:position pos:line="120" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="38">mf2<pos:position pos:line="120" pos:column="41"/></name><operator pos:line="120" pos:column="41">.<pos:position pos:line="120" pos:column="42"/></operator><name pos:line="120" pos:column="42">ptr<pos:position pos:line="120" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="47">mf1<pos:position pos:line="120" pos:column="50"/></name><operator pos:line="120" pos:column="50">.<pos:position pos:line="120" pos:column="51"/></operator><name pos:line="120" pos:column="51">size<pos:position pos:line="120" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="120" pos:column="57"/></condition><then pos:line="120" pos:column="57"> <block pos:line="120" pos:column="58">{
			<if pos:line="121" pos:column="25">if <condition pos:line="121" pos:column="28">(<expr><name pos:line="121" pos:column="29">must_show_header<pos:position pos:line="121" pos:column="45"/></name></expr>)<pos:position pos:line="121" pos:column="46"/></condition><then pos:line="121" pos:column="46">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="122" pos:column="33">fprintf<pos:position pos:line="122" pos:column="40"/></name><argument_list pos:line="122" pos:column="40">(<argument><expr><name><name pos:line="122" pos:column="41">o<pos:position pos:line="122" pos:column="42"/></name><operator pos:line="122" pos:column="42">-&gt;<pos:position pos:line="122" pos:column="47"/></operator><name pos:line="122" pos:column="44">file<pos:position pos:line="122" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="50">"%s"<pos:position pos:line="122" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="56">header<pos:position pos:line="122" pos:column="62"/></name><operator pos:line="122" pos:column="62">.<pos:position pos:line="122" pos:column="63"/></operator><name pos:line="122" pos:column="63">buf<pos:position pos:line="122" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="68"/></expr_stmt></block></then></if>
			<goto pos:line="123" pos:column="25">goto <name pos:line="123" pos:column="30">free_ab_and_return<pos:position pos:line="123" pos:column="48"/></name>;<pos:position pos:line="123" pos:column="49"/></goto>
		}<pos:position pos:line="124" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="125" pos:column="17">fprintf<pos:position pos:line="125" pos:column="24"/></name><argument_list pos:line="125" pos:column="24">(<argument><expr><name><name pos:line="125" pos:column="25">o<pos:position pos:line="125" pos:column="26"/></name><operator pos:line="125" pos:column="26">-&gt;<pos:position pos:line="125" pos:column="31"/></operator><name pos:line="125" pos:column="28">file<pos:position pos:line="125" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="34">"%s"<pos:position pos:line="125" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="40">header<pos:position pos:line="125" pos:column="46"/></name><operator pos:line="125" pos:column="46">.<pos:position pos:line="125" pos:column="47"/></operator><name pos:line="125" pos:column="47">buf<pos:position pos:line="125" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="126" pos:column="17">strbuf_reset<pos:position pos:line="126" pos:column="29"/></name><argument_list pos:line="126" pos:column="29">(<argument><expr><operator pos:line="126" pos:column="30">&amp;<pos:position pos:line="126" pos:column="35"/></operator><name pos:line="126" pos:column="31">header<pos:position pos:line="126" pos:column="37"/></name></expr></argument>)<pos:position pos:line="126" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="39"/></expr_stmt>
		<if pos:line="127" pos:column="17">if <condition pos:line="127" pos:column="20">(<expr><call><name pos:line="127" pos:column="21">DIFF_OPT_TST<pos:position pos:line="127" pos:column="33"/></name><argument_list pos:line="127" pos:column="33">(<argument><expr><name pos:line="127" pos:column="34">o<pos:position pos:line="127" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="37">BINARY<pos:position pos:line="127" pos:column="43"/></name></expr></argument>)<pos:position pos:line="127" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="45"/></condition><then pos:line="127" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="128" pos:column="25">emit_binary_diff<pos:position pos:line="128" pos:column="41"/></name><argument_list pos:line="128" pos:column="41">(<argument><expr><name><name pos:line="128" pos:column="42">o<pos:position pos:line="128" pos:column="43"/></name><operator pos:line="128" pos:column="43">-&gt;<pos:position pos:line="128" pos:column="48"/></operator><name pos:line="128" pos:column="45">file<pos:position pos:line="128" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="128" pos:column="51">&amp;<pos:position pos:line="128" pos:column="56"/></operator><name pos:line="128" pos:column="52">mf1<pos:position pos:line="128" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="128" pos:column="57">&amp;<pos:position pos:line="128" pos:column="62"/></operator><name pos:line="128" pos:column="58">mf2<pos:position pos:line="128" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="63">line_prefix<pos:position pos:line="128" pos:column="74"/></name></expr></argument>)<pos:position pos:line="128" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="76"/></expr_stmt></block></then>
		<else pos:line="129" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="130" pos:column="25">fprintf<pos:position pos:line="130" pos:column="32"/></name><argument_list pos:line="130" pos:column="32">(<argument><expr><name><name pos:line="130" pos:column="33">o<pos:position pos:line="130" pos:column="34"/></name><operator pos:line="130" pos:column="34">-&gt;<pos:position pos:line="130" pos:column="39"/></operator><name pos:line="130" pos:column="36">file<pos:position pos:line="130" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="42">"%sBinary files %s and %s differ\n"<pos:position pos:line="130" pos:column="77"/></literal></expr></argument>,
				<argument><expr><name pos:line="131" pos:column="33">line_prefix<pos:position pos:line="131" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="46">lbl<pos:position pos:line="131" pos:column="49"/></name><index pos:line="131" pos:column="49">[<expr><literal type="number" pos:line="131" pos:column="50">0<pos:position pos:line="131" pos:column="51"/></literal></expr>]<pos:position pos:line="131" pos:column="52"/></index></name></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="54">lbl<pos:position pos:line="131" pos:column="57"/></name><index pos:line="131" pos:column="57">[<expr><literal type="number" pos:line="131" pos:column="58">1<pos:position pos:line="131" pos:column="59"/></literal></expr>]<pos:position pos:line="131" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="131" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="62"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name><name pos:line="132" pos:column="17">o<pos:position pos:line="132" pos:column="18"/></name><operator pos:line="132" pos:column="18">-&gt;<pos:position pos:line="132" pos:column="23"/></operator><name pos:line="132" pos:column="20">found_changes<pos:position pos:line="132" pos:column="33"/></name></name> <operator pos:line="132" pos:column="34">=<pos:position pos:line="132" pos:column="35"/></operator> <literal type="number" pos:line="132" pos:column="36">1<pos:position pos:line="132" pos:column="37"/></literal></expr>;<pos:position pos:line="132" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="133" pos:column="10"/></block></then></if></elseif> <else pos:line="133" pos:column="11">else <block pos:line="133" pos:column="16">{
		<comment type="block" pos:line="134" pos:column="17">/* Crazy xdl interfaces.. */</comment>
		<decl_stmt><decl><type><specifier pos:line="135" pos:column="17">const<pos:position pos:line="135" pos:column="22"/></specifier> <name pos:line="135" pos:column="23">char<pos:position pos:line="135" pos:column="27"/></name> <modifier pos:line="135" pos:column="28">*<pos:position pos:line="135" pos:column="29"/></modifier></type><name pos:line="135" pos:column="29">diffopts<pos:position pos:line="135" pos:column="37"/></name> <init pos:line="135" pos:column="38">= <expr><call><name pos:line="135" pos:column="40">getenv<pos:position pos:line="135" pos:column="46"/></name><argument_list pos:line="135" pos:column="46">(<argument><expr><literal type="string" pos:line="135" pos:column="47">"GIT_DIFF_OPTS"<pos:position pos:line="135" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="135" pos:column="64"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="136" pos:column="17">const<pos:position pos:line="136" pos:column="22"/></specifier> <name pos:line="136" pos:column="23">char<pos:position pos:line="136" pos:column="27"/></name> <modifier pos:line="136" pos:column="28">*<pos:position pos:line="136" pos:column="29"/></modifier></type><name pos:line="136" pos:column="29">v<pos:position pos:line="136" pos:column="30"/></name></decl>;<pos:position pos:line="136" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="137" pos:column="17">xpparam_t<pos:position pos:line="137" pos:column="26"/></name></type> <name pos:line="137" pos:column="27">xpp<pos:position pos:line="137" pos:column="30"/></name></decl>;<pos:position pos:line="137" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="138" pos:column="17">xdemitconf_t<pos:position pos:line="138" pos:column="29"/></name></type> <name pos:line="138" pos:column="30">xecfg<pos:position pos:line="138" pos:column="35"/></name></decl>;<pos:position pos:line="138" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="139" pos:column="17">struct<pos:position pos:line="139" pos:column="23"/></name> <name pos:line="139" pos:column="24">emit_callback<pos:position pos:line="139" pos:column="37"/></name></name></type> <name pos:line="139" pos:column="38">ecbdata<pos:position pos:line="139" pos:column="45"/></name></decl>;<pos:position pos:line="139" pos:column="46"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="140" pos:column="17">const<pos:position pos:line="140" pos:column="22"/></specifier> <name><name pos:line="140" pos:column="23">struct<pos:position pos:line="140" pos:column="29"/></name> <name pos:line="140" pos:column="30">userdiff_funcname<pos:position pos:line="140" pos:column="47"/></name></name> <modifier pos:line="140" pos:column="48">*<pos:position pos:line="140" pos:column="49"/></modifier></type><name pos:line="140" pos:column="49">pe<pos:position pos:line="140" pos:column="51"/></name></decl>;<pos:position pos:line="140" pos:column="52"/></decl_stmt>

		<if pos:line="142" pos:column="17">if <condition pos:line="142" pos:column="20">(<expr><name pos:line="142" pos:column="21">must_show_header<pos:position pos:line="142" pos:column="37"/></name></expr>)<pos:position pos:line="142" pos:column="38"/></condition><then pos:line="142" pos:column="38"> <block pos:line="142" pos:column="39">{
			<expr_stmt><expr><call><name pos:line="143" pos:column="25">fprintf<pos:position pos:line="143" pos:column="32"/></name><argument_list pos:line="143" pos:column="32">(<argument><expr><name><name pos:line="143" pos:column="33">o<pos:position pos:line="143" pos:column="34"/></name><operator pos:line="143" pos:column="34">-&gt;<pos:position pos:line="143" pos:column="39"/></operator><name pos:line="143" pos:column="36">file<pos:position pos:line="143" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="42">"%s"<pos:position pos:line="143" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="143" pos:column="48">header<pos:position pos:line="143" pos:column="54"/></name><operator pos:line="143" pos:column="54">.<pos:position pos:line="143" pos:column="55"/></operator><name pos:line="143" pos:column="55">buf<pos:position pos:line="143" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="143" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="144" pos:column="25">strbuf_reset<pos:position pos:line="144" pos:column="37"/></name><argument_list pos:line="144" pos:column="37">(<argument><expr><operator pos:line="144" pos:column="38">&amp;<pos:position pos:line="144" pos:column="43"/></operator><name pos:line="144" pos:column="39">header<pos:position pos:line="144" pos:column="45"/></name></expr></argument>)<pos:position pos:line="144" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="145" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="147" pos:column="17">mf1<pos:position pos:line="147" pos:column="20"/></name><operator pos:line="147" pos:column="20">.<pos:position pos:line="147" pos:column="21"/></operator><name pos:line="147" pos:column="21">size<pos:position pos:line="147" pos:column="25"/></name></name> <operator pos:line="147" pos:column="26">=<pos:position pos:line="147" pos:column="27"/></operator> <call><name pos:line="147" pos:column="28">fill_textconv<pos:position pos:line="147" pos:column="41"/></name><argument_list pos:line="147" pos:column="41">(<argument><expr><name pos:line="147" pos:column="42">textconv_one<pos:position pos:line="147" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="56">one<pos:position pos:line="147" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="147" pos:column="61">&amp;<pos:position pos:line="147" pos:column="66"/></operator><name><name pos:line="147" pos:column="62">mf1<pos:position pos:line="147" pos:column="65"/></name><operator pos:line="147" pos:column="65">.<pos:position pos:line="147" pos:column="66"/></operator><name pos:line="147" pos:column="66">ptr<pos:position pos:line="147" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="148" pos:column="17">mf2<pos:position pos:line="148" pos:column="20"/></name><operator pos:line="148" pos:column="20">.<pos:position pos:line="148" pos:column="21"/></operator><name pos:line="148" pos:column="21">size<pos:position pos:line="148" pos:column="25"/></name></name> <operator pos:line="148" pos:column="26">=<pos:position pos:line="148" pos:column="27"/></operator> <call><name pos:line="148" pos:column="28">fill_textconv<pos:position pos:line="148" pos:column="41"/></name><argument_list pos:line="148" pos:column="41">(<argument><expr><name pos:line="148" pos:column="42">textconv_two<pos:position pos:line="148" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="56">two<pos:position pos:line="148" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="148" pos:column="61">&amp;<pos:position pos:line="148" pos:column="66"/></operator><name><name pos:line="148" pos:column="62">mf2<pos:position pos:line="148" pos:column="65"/></name><operator pos:line="148" pos:column="65">.<pos:position pos:line="148" pos:column="66"/></operator><name pos:line="148" pos:column="66">ptr<pos:position pos:line="148" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="71"/></expr_stmt>

		<expr_stmt><expr><name pos:line="150" pos:column="17">pe<pos:position pos:line="150" pos:column="19"/></name> <operator pos:line="150" pos:column="20">=<pos:position pos:line="150" pos:column="21"/></operator> <call><name pos:line="150" pos:column="22">diff_funcname_pattern<pos:position pos:line="150" pos:column="43"/></name><argument_list pos:line="150" pos:column="43">(<argument><expr><name pos:line="150" pos:column="44">one<pos:position pos:line="150" pos:column="47"/></name></expr></argument>)<pos:position pos:line="150" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="49"/></expr_stmt>
		<if pos:line="151" pos:column="17">if <condition pos:line="151" pos:column="20">(<expr><operator pos:line="151" pos:column="21">!<pos:position pos:line="151" pos:column="22"/></operator><name pos:line="151" pos:column="22">pe<pos:position pos:line="151" pos:column="24"/></name></expr>)<pos:position pos:line="151" pos:column="25"/></condition><then pos:line="151" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><name pos:line="152" pos:column="25">pe<pos:position pos:line="152" pos:column="27"/></name> <operator pos:line="152" pos:column="28">=<pos:position pos:line="152" pos:column="29"/></operator> <call><name pos:line="152" pos:column="30">diff_funcname_pattern<pos:position pos:line="152" pos:column="51"/></name><argument_list pos:line="152" pos:column="51">(<argument><expr><name pos:line="152" pos:column="52">two<pos:position pos:line="152" pos:column="55"/></name></expr></argument>)<pos:position pos:line="152" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="57"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="154" pos:column="17">memset<pos:position pos:line="154" pos:column="23"/></name><argument_list pos:line="154" pos:column="23">(<argument><expr><operator pos:line="154" pos:column="24">&amp;<pos:position pos:line="154" pos:column="29"/></operator><name pos:line="154" pos:column="25">xpp<pos:position pos:line="154" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="154" pos:column="30">0<pos:position pos:line="154" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="154" pos:column="33">sizeof<argument_list pos:line="154" pos:column="39">(<argument><expr><name pos:line="154" pos:column="40">xpp<pos:position pos:line="154" pos:column="43"/></name></expr></argument>)<pos:position pos:line="154" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="154" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="155" pos:column="17">memset<pos:position pos:line="155" pos:column="23"/></name><argument_list pos:line="155" pos:column="23">(<argument><expr><operator pos:line="155" pos:column="24">&amp;<pos:position pos:line="155" pos:column="29"/></operator><name pos:line="155" pos:column="25">xecfg<pos:position pos:line="155" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="155" pos:column="32">0<pos:position pos:line="155" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="155" pos:column="35">sizeof<argument_list pos:line="155" pos:column="41">(<argument><expr><name pos:line="155" pos:column="42">xecfg<pos:position pos:line="155" pos:column="47"/></name></expr></argument>)<pos:position pos:line="155" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="155" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="156" pos:column="17">memset<pos:position pos:line="156" pos:column="23"/></name><argument_list pos:line="156" pos:column="23">(<argument><expr><operator pos:line="156" pos:column="24">&amp;<pos:position pos:line="156" pos:column="29"/></operator><name pos:line="156" pos:column="25">ecbdata<pos:position pos:line="156" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="156" pos:column="34">0<pos:position pos:line="156" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="156" pos:column="37">sizeof<argument_list pos:line="156" pos:column="43">(<argument><expr><name pos:line="156" pos:column="44">ecbdata<pos:position pos:line="156" pos:column="51"/></name></expr></argument>)<pos:position pos:line="156" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="156" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="157" pos:column="17">ecbdata<pos:position pos:line="157" pos:column="24"/></name><operator pos:line="157" pos:column="24">.<pos:position pos:line="157" pos:column="25"/></operator><name pos:line="157" pos:column="25">label_path<pos:position pos:line="157" pos:column="35"/></name></name> <operator pos:line="157" pos:column="36">=<pos:position pos:line="157" pos:column="37"/></operator> <name pos:line="157" pos:column="38">lbl<pos:position pos:line="157" pos:column="41"/></name></expr>;<pos:position pos:line="157" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="158" pos:column="17">ecbdata<pos:position pos:line="158" pos:column="24"/></name><operator pos:line="158" pos:column="24">.<pos:position pos:line="158" pos:column="25"/></operator><name pos:line="158" pos:column="25">color_diff<pos:position pos:line="158" pos:column="35"/></name></name> <operator pos:line="158" pos:column="36">=<pos:position pos:line="158" pos:column="37"/></operator> <call><name pos:line="158" pos:column="38">want_color<pos:position pos:line="158" pos:column="48"/></name><argument_list pos:line="158" pos:column="48">(<argument><expr><name><name pos:line="158" pos:column="49">o<pos:position pos:line="158" pos:column="50"/></name><operator pos:line="158" pos:column="50">-&gt;<pos:position pos:line="158" pos:column="55"/></operator><name pos:line="158" pos:column="52">use_color<pos:position pos:line="158" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="158" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="159" pos:column="17">ecbdata<pos:position pos:line="159" pos:column="24"/></name><operator pos:line="159" pos:column="24">.<pos:position pos:line="159" pos:column="25"/></operator><name pos:line="159" pos:column="25">found_changesp<pos:position pos:line="159" pos:column="39"/></name></name> <operator pos:line="159" pos:column="40">=<pos:position pos:line="159" pos:column="41"/></operator> <operator pos:line="159" pos:column="42">&amp;<pos:position pos:line="159" pos:column="47"/></operator><name><name pos:line="159" pos:column="43">o<pos:position pos:line="159" pos:column="44"/></name><operator pos:line="159" pos:column="44">-&gt;<pos:position pos:line="159" pos:column="49"/></operator><name pos:line="159" pos:column="46">found_changes<pos:position pos:line="159" pos:column="59"/></name></name></expr>;<pos:position pos:line="159" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="160" pos:column="17">ecbdata<pos:position pos:line="160" pos:column="24"/></name><operator pos:line="160" pos:column="24">.<pos:position pos:line="160" pos:column="25"/></operator><name pos:line="160" pos:column="25">ws_rule<pos:position pos:line="160" pos:column="32"/></name></name> <operator pos:line="160" pos:column="33">=<pos:position pos:line="160" pos:column="34"/></operator> <call><name pos:line="160" pos:column="35">whitespace_rule<pos:position pos:line="160" pos:column="50"/></name><argument_list pos:line="160" pos:column="50">(<argument><expr><name pos:line="160" pos:column="51">name_b<pos:position pos:line="160" pos:column="57"/></name></expr></argument>)<pos:position pos:line="160" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="59"/></expr_stmt>
		<if pos:line="161" pos:column="17">if <condition pos:line="161" pos:column="20">(<expr><name><name pos:line="161" pos:column="21">ecbdata<pos:position pos:line="161" pos:column="28"/></name><operator pos:line="161" pos:column="28">.<pos:position pos:line="161" pos:column="29"/></operator><name pos:line="161" pos:column="29">ws_rule<pos:position pos:line="161" pos:column="36"/></name></name> <operator pos:line="161" pos:column="37">&amp;<pos:position pos:line="161" pos:column="42"/></operator> <name pos:line="161" pos:column="39">WS_BLANK_AT_EOF<pos:position pos:line="161" pos:column="54"/></name></expr>)<pos:position pos:line="161" pos:column="55"/></condition><then pos:line="161" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="162" pos:column="25">check_blank_at_eof<pos:position pos:line="162" pos:column="43"/></name><argument_list pos:line="162" pos:column="43">(<argument><expr><operator pos:line="162" pos:column="44">&amp;<pos:position pos:line="162" pos:column="49"/></operator><name pos:line="162" pos:column="45">mf1<pos:position pos:line="162" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="162" pos:column="50">&amp;<pos:position pos:line="162" pos:column="55"/></operator><name pos:line="162" pos:column="51">mf2<pos:position pos:line="162" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="162" pos:column="56">&amp;<pos:position pos:line="162" pos:column="61"/></operator><name pos:line="162" pos:column="57">ecbdata<pos:position pos:line="162" pos:column="64"/></name></expr></argument>)<pos:position pos:line="162" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="66"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="163" pos:column="17">ecbdata<pos:position pos:line="163" pos:column="24"/></name><operator pos:line="163" pos:column="24">.<pos:position pos:line="163" pos:column="25"/></operator><name pos:line="163" pos:column="25">opt<pos:position pos:line="163" pos:column="28"/></name></name> <operator pos:line="163" pos:column="29">=<pos:position pos:line="163" pos:column="30"/></operator> <name pos:line="163" pos:column="31">o<pos:position pos:line="163" pos:column="32"/></name></expr>;<pos:position pos:line="163" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="164" pos:column="17">ecbdata<pos:position pos:line="164" pos:column="24"/></name><operator pos:line="164" pos:column="24">.<pos:position pos:line="164" pos:column="25"/></operator><name pos:line="164" pos:column="25">header<pos:position pos:line="164" pos:column="31"/></name></name> <operator pos:line="164" pos:column="32">=<pos:position pos:line="164" pos:column="33"/></operator> <ternary><condition><expr><name><name pos:line="164" pos:column="34">header<pos:position pos:line="164" pos:column="40"/></name><operator pos:line="164" pos:column="40">.<pos:position pos:line="164" pos:column="41"/></operator><name pos:line="164" pos:column="41">len<pos:position pos:line="164" pos:column="44"/></name></name></expr> ?<pos:position pos:line="164" pos:column="46"/></condition><then pos:line="164" pos:column="46"> <expr><operator pos:line="164" pos:column="47">&amp;<pos:position pos:line="164" pos:column="52"/></operator><name pos:line="164" pos:column="48">header<pos:position pos:line="164" pos:column="54"/></name></expr> <pos:position pos:line="164" pos:column="55"/></then><else pos:line="164" pos:column="55">: <expr><name pos:line="164" pos:column="57">NULL<pos:position pos:line="164" pos:column="61"/></name></expr></else></ternary></expr>;<pos:position pos:line="164" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="165" pos:column="17">xpp<pos:position pos:line="165" pos:column="20"/></name><operator pos:line="165" pos:column="20">.<pos:position pos:line="165" pos:column="21"/></operator><name pos:line="165" pos:column="21">flags<pos:position pos:line="165" pos:column="26"/></name></name> <operator pos:line="165" pos:column="27">=<pos:position pos:line="165" pos:column="28"/></operator> <name><name pos:line="165" pos:column="29">o<pos:position pos:line="165" pos:column="30"/></name><operator pos:line="165" pos:column="30">-&gt;<pos:position pos:line="165" pos:column="35"/></operator><name pos:line="165" pos:column="32">xdl_opts<pos:position pos:line="165" pos:column="40"/></name></name></expr>;<pos:position pos:line="165" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="166" pos:column="17">xecfg<pos:position pos:line="166" pos:column="22"/></name><operator pos:line="166" pos:column="22">.<pos:position pos:line="166" pos:column="23"/></operator><name pos:line="166" pos:column="23">ctxlen<pos:position pos:line="166" pos:column="29"/></name></name> <operator pos:line="166" pos:column="30">=<pos:position pos:line="166" pos:column="31"/></operator> <name><name pos:line="166" pos:column="32">o<pos:position pos:line="166" pos:column="33"/></name><operator pos:line="166" pos:column="33">-&gt;<pos:position pos:line="166" pos:column="38"/></operator><name pos:line="166" pos:column="35">context<pos:position pos:line="166" pos:column="42"/></name></name></expr>;<pos:position pos:line="166" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="167" pos:column="17">xecfg<pos:position pos:line="167" pos:column="22"/></name><operator pos:line="167" pos:column="22">.<pos:position pos:line="167" pos:column="23"/></operator><name pos:line="167" pos:column="23">interhunkctxlen<pos:position pos:line="167" pos:column="38"/></name></name> <operator pos:line="167" pos:column="39">=<pos:position pos:line="167" pos:column="40"/></operator> <name><name pos:line="167" pos:column="41">o<pos:position pos:line="167" pos:column="42"/></name><operator pos:line="167" pos:column="42">-&gt;<pos:position pos:line="167" pos:column="47"/></operator><name pos:line="167" pos:column="44">interhunkcontext<pos:position pos:line="167" pos:column="60"/></name></name></expr>;<pos:position pos:line="167" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="168" pos:column="17">xecfg<pos:position pos:line="168" pos:column="22"/></name><operator pos:line="168" pos:column="22">.<pos:position pos:line="168" pos:column="23"/></operator><name pos:line="168" pos:column="23">flags<pos:position pos:line="168" pos:column="28"/></name></name> <operator pos:line="168" pos:column="29">=<pos:position pos:line="168" pos:column="30"/></operator> <name pos:line="168" pos:column="31">XDL_EMIT_FUNCNAMES<pos:position pos:line="168" pos:column="49"/></name></expr>;<pos:position pos:line="168" pos:column="50"/></expr_stmt>
		<if pos:line="169" pos:column="17">if <condition pos:line="169" pos:column="20">(<expr><call><name pos:line="169" pos:column="21">DIFF_OPT_TST<pos:position pos:line="169" pos:column="33"/></name><argument_list pos:line="169" pos:column="33">(<argument><expr><name pos:line="169" pos:column="34">o<pos:position pos:line="169" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="37">FUNCCONTEXT<pos:position pos:line="169" pos:column="48"/></name></expr></argument>)<pos:position pos:line="169" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="169" pos:column="50"/></condition><then pos:line="169" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="170" pos:column="25">xecfg<pos:position pos:line="170" pos:column="30"/></name><operator pos:line="170" pos:column="30">.<pos:position pos:line="170" pos:column="31"/></operator><name pos:line="170" pos:column="31">flags<pos:position pos:line="170" pos:column="36"/></name></name> <operator pos:line="170" pos:column="37">|=<pos:position pos:line="170" pos:column="39"/></operator> <name pos:line="170" pos:column="40">XDL_EMIT_FUNCCONTEXT<pos:position pos:line="170" pos:column="60"/></name></expr>;<pos:position pos:line="170" pos:column="61"/></expr_stmt></block></then></if>
		<if pos:line="171" pos:column="17">if <condition pos:line="171" pos:column="20">(<expr><name pos:line="171" pos:column="21">pe<pos:position pos:line="171" pos:column="23"/></name></expr>)<pos:position pos:line="171" pos:column="24"/></condition><then pos:line="171" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="172" pos:column="25">xdiff_set_find_func<pos:position pos:line="172" pos:column="44"/></name><argument_list pos:line="172" pos:column="44">(<argument><expr><operator pos:line="172" pos:column="45">&amp;<pos:position pos:line="172" pos:column="50"/></operator><name pos:line="172" pos:column="46">xecfg<pos:position pos:line="172" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="172" pos:column="53">pe<pos:position pos:line="172" pos:column="55"/></name><operator pos:line="172" pos:column="55">-&gt;<pos:position pos:line="172" pos:column="60"/></operator><name pos:line="172" pos:column="57">pattern<pos:position pos:line="172" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="172" pos:column="66">pe<pos:position pos:line="172" pos:column="68"/></name><operator pos:line="172" pos:column="68">-&gt;<pos:position pos:line="172" pos:column="73"/></operator><name pos:line="172" pos:column="70">cflags<pos:position pos:line="172" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="78"/></expr_stmt></block></then></if>
		<if pos:line="173" pos:column="17">if <condition pos:line="173" pos:column="20">(<expr><operator pos:line="173" pos:column="21">!<pos:position pos:line="173" pos:column="22"/></operator><name pos:line="173" pos:column="22">diffopts<pos:position pos:line="173" pos:column="30"/></name></expr>)<pos:position pos:line="173" pos:column="31"/></condition><then pos:line="173" pos:column="31">
			<block type="pseudo"><empty_stmt pos:line="174" pos:column="25">;<pos:position pos:line="174" pos:column="26"/></empty_stmt></block></then>
		<elseif pos:line="175" pos:column="17">else <if pos:line="175" pos:column="22">if <condition pos:line="175" pos:column="25">(<expr><call><name pos:line="175" pos:column="26">skip_prefix<pos:position pos:line="175" pos:column="37"/></name><argument_list pos:line="175" pos:column="37">(<argument><expr><name pos:line="175" pos:column="38">diffopts<pos:position pos:line="175" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="48">"--unified="<pos:position pos:line="175" pos:column="60"/></literal></expr></argument>, <argument><expr><operator pos:line="175" pos:column="62">&amp;<pos:position pos:line="175" pos:column="67"/></operator><name pos:line="175" pos:column="63">v<pos:position pos:line="175" pos:column="64"/></name></expr></argument>)<pos:position pos:line="175" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="175" pos:column="66"/></condition><then pos:line="175" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="176" pos:column="25">xecfg<pos:position pos:line="176" pos:column="30"/></name><operator pos:line="176" pos:column="30">.<pos:position pos:line="176" pos:column="31"/></operator><name pos:line="176" pos:column="31">ctxlen<pos:position pos:line="176" pos:column="37"/></name></name> <operator pos:line="176" pos:column="38">=<pos:position pos:line="176" pos:column="39"/></operator> <call><name pos:line="176" pos:column="40">strtoul<pos:position pos:line="176" pos:column="47"/></name><argument_list pos:line="176" pos:column="47">(<argument><expr><name pos:line="176" pos:column="48">v<pos:position pos:line="176" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="51">NULL<pos:position pos:line="176" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="176" pos:column="57">10<pos:position pos:line="176" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="61"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="177" pos:column="17">else <if pos:line="177" pos:column="22">if <condition pos:line="177" pos:column="25">(<expr><call><name pos:line="177" pos:column="26">skip_prefix<pos:position pos:line="177" pos:column="37"/></name><argument_list pos:line="177" pos:column="37">(<argument><expr><name pos:line="177" pos:column="38">diffopts<pos:position pos:line="177" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="48">"-u"<pos:position pos:line="177" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="177" pos:column="54">&amp;<pos:position pos:line="177" pos:column="59"/></operator><name pos:line="177" pos:column="55">v<pos:position pos:line="177" pos:column="56"/></name></expr></argument>)<pos:position pos:line="177" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="177" pos:column="58"/></condition><then pos:line="177" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="178" pos:column="25">xecfg<pos:position pos:line="178" pos:column="30"/></name><operator pos:line="178" pos:column="30">.<pos:position pos:line="178" pos:column="31"/></operator><name pos:line="178" pos:column="31">ctxlen<pos:position pos:line="178" pos:column="37"/></name></name> <operator pos:line="178" pos:column="38">=<pos:position pos:line="178" pos:column="39"/></operator> <call><name pos:line="178" pos:column="40">strtoul<pos:position pos:line="178" pos:column="47"/></name><argument_list pos:line="178" pos:column="47">(<argument><expr><name pos:line="178" pos:column="48">v<pos:position pos:line="178" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="51">NULL<pos:position pos:line="178" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="178" pos:column="57">10<pos:position pos:line="178" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="61"/></expr_stmt></block></then></if></elseif></if>
		<if pos:line="179" pos:column="17">if <condition pos:line="179" pos:column="20">(<expr><name><name pos:line="179" pos:column="21">o<pos:position pos:line="179" pos:column="22"/></name><operator pos:line="179" pos:column="22">-&gt;<pos:position pos:line="179" pos:column="27"/></operator><name pos:line="179" pos:column="24">word_diff<pos:position pos:line="179" pos:column="33"/></name></name></expr>)<pos:position pos:line="179" pos:column="34"/></condition><then pos:line="179" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="180" pos:column="25">init_diff_words_data<pos:position pos:line="180" pos:column="45"/></name><argument_list pos:line="180" pos:column="45">(<argument><expr><operator pos:line="180" pos:column="46">&amp;<pos:position pos:line="180" pos:column="51"/></operator><name pos:line="180" pos:column="47">ecbdata<pos:position pos:line="180" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="56">o<pos:position pos:line="180" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="59">one<pos:position pos:line="180" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="64">two<pos:position pos:line="180" pos:column="67"/></name></expr></argument>)<pos:position pos:line="180" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="69"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="181" pos:column="17">xdi_diff_outf<pos:position pos:line="181" pos:column="30"/></name><argument_list pos:line="181" pos:column="30">(<argument><expr><operator pos:line="181" pos:column="31">&amp;<pos:position pos:line="181" pos:column="36"/></operator><name pos:line="181" pos:column="32">mf1<pos:position pos:line="181" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="181" pos:column="37">&amp;<pos:position pos:line="181" pos:column="42"/></operator><name pos:line="181" pos:column="38">mf2<pos:position pos:line="181" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="43">fn_out_consume<pos:position pos:line="181" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="181" pos:column="59">&amp;<pos:position pos:line="181" pos:column="64"/></operator><name pos:line="181" pos:column="60">ecbdata<pos:position pos:line="181" pos:column="67"/></name></expr></argument>,
			      <argument><expr><operator pos:line="182" pos:column="31">&amp;<pos:position pos:line="182" pos:column="36"/></operator><name pos:line="182" pos:column="32">xpp<pos:position pos:line="182" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="182" pos:column="37">&amp;<pos:position pos:line="182" pos:column="42"/></operator><name pos:line="182" pos:column="38">xecfg<pos:position pos:line="182" pos:column="43"/></name></expr></argument>)<pos:position pos:line="182" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="45"/></expr_stmt>
		<if pos:line="183" pos:column="17">if <condition pos:line="183" pos:column="20">(<expr><name><name pos:line="183" pos:column="21">o<pos:position pos:line="183" pos:column="22"/></name><operator pos:line="183" pos:column="22">-&gt;<pos:position pos:line="183" pos:column="27"/></operator><name pos:line="183" pos:column="24">word_diff<pos:position pos:line="183" pos:column="33"/></name></name></expr>)<pos:position pos:line="183" pos:column="34"/></condition><then pos:line="183" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="184" pos:column="25">free_diff_words_data<pos:position pos:line="184" pos:column="45"/></name><argument_list pos:line="184" pos:column="45">(<argument><expr><operator pos:line="184" pos:column="46">&amp;<pos:position pos:line="184" pos:column="51"/></operator><name pos:line="184" pos:column="47">ecbdata<pos:position pos:line="184" pos:column="54"/></name></expr></argument>)<pos:position pos:line="184" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="56"/></expr_stmt></block></then></if>
		<if pos:line="185" pos:column="17">if <condition pos:line="185" pos:column="20">(<expr><name pos:line="185" pos:column="21">textconv_one<pos:position pos:line="185" pos:column="33"/></name></expr>)<pos:position pos:line="185" pos:column="34"/></condition><then pos:line="185" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="186" pos:column="25">free<pos:position pos:line="186" pos:column="29"/></name><argument_list pos:line="186" pos:column="29">(<argument><expr><name><name pos:line="186" pos:column="30">mf1<pos:position pos:line="186" pos:column="33"/></name><operator pos:line="186" pos:column="33">.<pos:position pos:line="186" pos:column="34"/></operator><name pos:line="186" pos:column="34">ptr<pos:position pos:line="186" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="186" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="39"/></expr_stmt></block></then></if>
		<if pos:line="187" pos:column="17">if <condition pos:line="187" pos:column="20">(<expr><name pos:line="187" pos:column="21">textconv_two<pos:position pos:line="187" pos:column="33"/></name></expr>)<pos:position pos:line="187" pos:column="34"/></condition><then pos:line="187" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="188" pos:column="25">free<pos:position pos:line="188" pos:column="29"/></name><argument_list pos:line="188" pos:column="29">(<argument><expr><name><name pos:line="188" pos:column="30">mf2<pos:position pos:line="188" pos:column="33"/></name><operator pos:line="188" pos:column="33">.<pos:position pos:line="188" pos:column="34"/></operator><name pos:line="188" pos:column="34">ptr<pos:position pos:line="188" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="188" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="39"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="189" pos:column="17">xdiff_clear_find_func<pos:position pos:line="189" pos:column="38"/></name><argument_list pos:line="189" pos:column="38">(<argument><expr><operator pos:line="189" pos:column="39">&amp;<pos:position pos:line="189" pos:column="44"/></operator><name pos:line="189" pos:column="40">xecfg<pos:position pos:line="189" pos:column="45"/></name></expr></argument>)<pos:position pos:line="189" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="190" pos:column="10"/></block></else></if>

 <label><name pos:line="192" pos:column="2">free_ab_and_return<pos:position pos:line="192" pos:column="20"/></name>:<pos:position pos:line="192" pos:column="21"/></label>
	<expr_stmt><expr><call><name pos:line="193" pos:column="9">strbuf_release<pos:position pos:line="193" pos:column="23"/></name><argument_list pos:line="193" pos:column="23">(<argument><expr><operator pos:line="193" pos:column="24">&amp;<pos:position pos:line="193" pos:column="29"/></operator><name pos:line="193" pos:column="25">header<pos:position pos:line="193" pos:column="31"/></name></expr></argument>)<pos:position pos:line="193" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="194" pos:column="9">diff_free_filespec_data<pos:position pos:line="194" pos:column="32"/></name><argument_list pos:line="194" pos:column="32">(<argument><expr><name pos:line="194" pos:column="33">one<pos:position pos:line="194" pos:column="36"/></name></expr></argument>)<pos:position pos:line="194" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="195" pos:column="9">diff_free_filespec_data<pos:position pos:line="195" pos:column="32"/></name><argument_list pos:line="195" pos:column="32">(<argument><expr><name pos:line="195" pos:column="33">two<pos:position pos:line="195" pos:column="36"/></name></expr></argument>)<pos:position pos:line="195" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="196" pos:column="9">free<pos:position pos:line="196" pos:column="13"/></name><argument_list pos:line="196" pos:column="13">(<argument><expr><name pos:line="196" pos:column="14">a_one<pos:position pos:line="196" pos:column="19"/></name></expr></argument>)<pos:position pos:line="196" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="197" pos:column="9">free<pos:position pos:line="197" pos:column="13"/></name><argument_list pos:line="197" pos:column="13">(<argument><expr><name pos:line="197" pos:column="14">b_two<pos:position pos:line="197" pos:column="19"/></name></expr></argument>)<pos:position pos:line="197" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="21"/></expr_stmt>
	<return pos:line="198" pos:column="9">return;<pos:position pos:line="198" pos:column="16"/></return>
}<pos:position pos:line="199" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4582_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">update_local_ref<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">ref<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">ref<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
			    <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">remote<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>,
			    <parameter><decl><type><specifier pos:line="3" pos:column="29">const<pos:position pos:line="3" pos:column="34"/></specifier> <name><name pos:line="3" pos:column="35">struct<pos:position pos:line="3" pos:column="41"/></name> <name pos:line="3" pos:column="42">ref<pos:position pos:line="3" pos:column="45"/></name></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">remote_ref<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="4" pos:column="29">struct<pos:position pos:line="4" pos:column="35"/></name> <name pos:line="4" pos:column="36">strbuf<pos:position pos:line="4" pos:column="42"/></name></name> <modifier pos:line="4" pos:column="43">*<pos:position pos:line="4" pos:column="44"/></modifier></type><name pos:line="4" pos:column="44">display<pos:position pos:line="4" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="52"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">current<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><name pos:line="6" pos:column="34">NULL<pos:position pos:line="6" pos:column="38"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="40">*<pos:position pos:line="6" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="41">updated<pos:position pos:line="6" pos:column="48"/></name></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">enum<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">object_type<pos:position pos:line="7" pos:column="25"/></name></name></type> <name pos:line="7" pos:column="26">type<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">branch<pos:position pos:line="8" pos:column="22"/></name></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">current_branch<pos:position pos:line="8" pos:column="38"/></name> <init pos:line="8" pos:column="39">= <expr><call><name pos:line="8" pos:column="41">branch_get<pos:position pos:line="8" pos:column="51"/></name><argument_list pos:line="8" pos:column="51">(<argument><expr><name pos:line="8" pos:column="52">NULL<pos:position pos:line="8" pos:column="56"/></name></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">pretty_ref<pos:position pos:line="9" pos:column="31"/></name> <init pos:line="9" pos:column="32">= <expr><call><name pos:line="9" pos:column="34">prettify_refname<pos:position pos:line="9" pos:column="50"/></name><argument_list pos:line="9" pos:column="50">(<argument><expr><name><name pos:line="9" pos:column="51">ref<pos:position pos:line="9" pos:column="54"/></name><operator pos:line="9" pos:column="54">-&gt;<pos:position pos:line="9" pos:column="59"/></operator><name pos:line="9" pos:column="56">name<pos:position pos:line="9" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="62"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">type<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">sha1_object_info<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name><name pos:line="11" pos:column="33">ref<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">new_sha1<pos:position pos:line="11" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">NULL<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">type<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&lt;<pos:position pos:line="12" pos:column="22"/></operator> <literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">die<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><call><name pos:line="13" pos:column="21">_<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><literal type="string" pos:line="13" pos:column="23">"object %s not found"<pos:position pos:line="13" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="47">sha1_to_hex<pos:position pos:line="13" pos:column="58"/></name><argument_list pos:line="13" pos:column="58">(<argument><expr><name><name pos:line="13" pos:column="59">ref<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">-&gt;<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="64">new_sha1<pos:position pos:line="13" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><call><name pos:line="15" pos:column="14">hashcmp<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name><name pos:line="15" pos:column="22">ref<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">old_sha1<pos:position pos:line="15" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="37">ref<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">new_sha1<pos:position pos:line="15" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="52"/></condition><then pos:line="15" pos:column="52"> <block pos:line="15" pos:column="53">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">verbosity<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">&gt;<pos:position pos:line="16" pos:column="35"/></operator> <literal type="number" pos:line="16" pos:column="33">0<pos:position pos:line="16" pos:column="34"/></literal></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">strbuf_addf<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">display<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="46">"= %-*s %-*s -&gt; %s"<pos:position pos:line="17" pos:column="68"/></literal></expr></argument>,
				    <argument><expr><call><name pos:line="18" pos:column="37">TRANSPORT_SUMMARY<pos:position pos:line="18" pos:column="54"/></name><argument_list pos:line="18" pos:column="54">(<argument><expr><call><name pos:line="18" pos:column="55">_<pos:position pos:line="18" pos:column="56"/></name><argument_list pos:line="18" pos:column="56">(<argument><expr><literal type="string" pos:line="18" pos:column="57">"[up to date]"<pos:position pos:line="18" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr></argument>,
				    <argument><expr><name pos:line="19" pos:column="37">REFCOL_WIDTH<pos:position pos:line="19" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="51">remote<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">pretty_ref<pos:position pos:line="19" pos:column="69"/></name></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="71"/></expr_stmt></block></then></if>
		<return pos:line="20" pos:column="17">return <expr><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">current_branch<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">&amp;&amp;<pos:position pos:line="23" pos:column="38"/></operator>
	    <operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><call><name pos:line="24" pos:column="14">strcmp<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name><name pos:line="24" pos:column="21">ref<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">name<pos:position pos:line="24" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="32">current_branch<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">-&gt;<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="48">name<pos:position pos:line="24" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call> <operator pos:line="24" pos:column="54">&amp;&amp;<pos:position pos:line="24" pos:column="64"/></operator>
	    <operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><operator pos:line="25" pos:column="14">(<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">update_head_ok<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">||<pos:position pos:line="25" pos:column="32"/></operator> <call><name pos:line="25" pos:column="33">is_bare_repository<pos:position pos:line="25" pos:column="51"/></name><argument_list pos:line="25" pos:column="51">()<pos:position pos:line="25" pos:column="53"/></argument_list></call><operator pos:line="25" pos:column="53">)<pos:position pos:line="25" pos:column="54"/></operator> <operator pos:line="25" pos:column="55">&amp;&amp;<pos:position pos:line="25" pos:column="65"/></operator>
	    <operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><call><name pos:line="26" pos:column="14">is_null_sha1<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name><name pos:line="26" pos:column="27">ref<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">old_sha1<pos:position pos:line="26" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="42"/></condition><then pos:line="26" pos:column="42"> <block pos:line="26" pos:column="43">{
		<comment type="block" pos:line="27" pos:column="17">/*
		 * If this is the head, and it's not okay to update
		 * the head, and the old value of the head isn't empty...
		 */</comment>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">strbuf_addf<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><name pos:line="31" pos:column="29">display<pos:position pos:line="31" pos:column="36"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="32" pos:column="29">_<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><literal type="string" pos:line="32" pos:column="31">"! %-*s %-*s -&gt; %s  (can't fetch in current branch)"<pos:position pos:line="32" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="84"/></argument_list></call></expr></argument>,
			    <argument><expr><call><name pos:line="33" pos:column="29">TRANSPORT_SUMMARY<pos:position pos:line="33" pos:column="46"/></name><argument_list pos:line="33" pos:column="46">(<argument><expr><call><name pos:line="33" pos:column="47">_<pos:position pos:line="33" pos:column="48"/></name><argument_list pos:line="33" pos:column="48">(<argument><expr><literal type="string" pos:line="33" pos:column="49">"[rejected]"<pos:position pos:line="33" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="34" pos:column="29">REFCOL_WIDTH<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">remote<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="51">pretty_ref<pos:position pos:line="34" pos:column="61"/></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><literal type="number" pos:line="35" pos:column="24">1<pos:position pos:line="35" pos:column="25"/></literal></expr>;<pos:position pos:line="35" pos:column="26"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><call><name pos:line="38" pos:column="14">is_null_sha1<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><name><name pos:line="38" pos:column="27">ref<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">old_sha1<pos:position pos:line="38" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call> <operator pos:line="38" pos:column="42">&amp;&amp;<pos:position pos:line="38" pos:column="52"/></operator>
	    <call><name pos:line="39" pos:column="13">starts_with<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><name><name pos:line="39" pos:column="25">ref<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">name<pos:position pos:line="39" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="36">"refs/tags/"<pos:position pos:line="39" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="50"/></condition><then pos:line="39" pos:column="50"> <block pos:line="39" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="40" pos:column="17">int<pos:position pos:line="40" pos:column="20"/></name></type> <name pos:line="40" pos:column="21">r<pos:position pos:line="40" pos:column="22"/></name></decl>;<pos:position pos:line="40" pos:column="23"/></decl_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">r<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <call><name pos:line="41" pos:column="21">s_update_ref<pos:position pos:line="41" pos:column="33"/></name><argument_list pos:line="41" pos:column="33">(<argument><expr><literal type="string" pos:line="41" pos:column="34">"updating tag"<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">ref<pos:position pos:line="41" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="55">0<pos:position pos:line="41" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">strbuf_addf<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">display<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="38">"%c %-*s %-*s -&gt; %s%s"<pos:position pos:line="42" pos:column="63"/></literal></expr></argument>,
			    <argument><expr><ternary><condition><expr><name pos:line="43" pos:column="29">r<pos:position pos:line="43" pos:column="30"/></name></expr> ?<pos:position pos:line="43" pos:column="32"/></condition><then pos:line="43" pos:column="32"> <expr><literal type="char" pos:line="43" pos:column="33">'!'<pos:position pos:line="43" pos:column="36"/></literal></expr> <pos:position pos:line="43" pos:column="37"/></then><else pos:line="43" pos:column="37">: <expr><literal type="char" pos:line="43" pos:column="39">'-'<pos:position pos:line="43" pos:column="42"/></literal></expr></else></ternary></expr></argument>,
			    <argument><expr><call><name pos:line="44" pos:column="29">TRANSPORT_SUMMARY<pos:position pos:line="44" pos:column="46"/></name><argument_list pos:line="44" pos:column="46">(<argument><expr><call><name pos:line="44" pos:column="47">_<pos:position pos:line="44" pos:column="48"/></name><argument_list pos:line="44" pos:column="48">(<argument><expr><literal type="string" pos:line="44" pos:column="49">"[tag update]"<pos:position pos:line="44" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="65"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="45" pos:column="29">REFCOL_WIDTH<pos:position pos:line="45" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="43">remote<pos:position pos:line="45" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="51">pretty_ref<pos:position pos:line="45" pos:column="61"/></name></expr></argument>,
			    <argument><expr><ternary><condition><expr><name pos:line="46" pos:column="29">r<pos:position pos:line="46" pos:column="30"/></name></expr> ?<pos:position pos:line="46" pos:column="32"/></condition><then pos:line="46" pos:column="32"> <expr><call><name pos:line="46" pos:column="33">_<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><literal type="string" pos:line="46" pos:column="35">"  (unable to update local ref)"<pos:position pos:line="46" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="68"/></argument_list></call></expr> <pos:position pos:line="46" pos:column="69"/></then><else pos:line="46" pos:column="69">: <expr><literal type="string" pos:line="46" pos:column="71">""<pos:position pos:line="46" pos:column="73"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="75"/></expr_stmt>
		<return pos:line="47" pos:column="17">return <expr><name pos:line="47" pos:column="24">r<pos:position pos:line="47" pos:column="25"/></name></expr>;<pos:position pos:line="47" pos:column="26"/></return>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="50" pos:column="9">current<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <call><name pos:line="50" pos:column="19">lookup_commit_reference_gently<pos:position pos:line="50" pos:column="49"/></name><argument_list pos:line="50" pos:column="49">(<argument><expr><name><name pos:line="50" pos:column="50">ref<pos:position pos:line="50" pos:column="53"/></name><operator pos:line="50" pos:column="53">-&gt;<pos:position pos:line="50" pos:column="58"/></operator><name pos:line="50" pos:column="55">old_sha1<pos:position pos:line="50" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="65">1<pos:position pos:line="50" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><name pos:line="51" pos:column="9">updated<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <call><name pos:line="51" pos:column="19">lookup_commit_reference_gently<pos:position pos:line="51" pos:column="49"/></name><argument_list pos:line="51" pos:column="49">(<argument><expr><name><name pos:line="51" pos:column="50">ref<pos:position pos:line="51" pos:column="53"/></name><operator pos:line="51" pos:column="53">-&gt;<pos:position pos:line="51" pos:column="58"/></operator><name pos:line="51" pos:column="55">new_sha1<pos:position pos:line="51" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="65">1<pos:position pos:line="51" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="68"/></expr_stmt>
	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><operator pos:line="52" pos:column="13">!<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">current<pos:position pos:line="52" pos:column="21"/></name> <operator pos:line="52" pos:column="22">||<pos:position pos:line="52" pos:column="24"/></operator> <operator pos:line="52" pos:column="25">!<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="26">updated<pos:position pos:line="52" pos:column="33"/></name></expr>)<pos:position pos:line="52" pos:column="34"/></condition><then pos:line="52" pos:column="34"> <block pos:line="52" pos:column="35">{
		<decl_stmt><decl><type><specifier pos:line="53" pos:column="17">const<pos:position pos:line="53" pos:column="22"/></specifier> <name pos:line="53" pos:column="23">char<pos:position pos:line="53" pos:column="27"/></name> <modifier pos:line="53" pos:column="28">*<pos:position pos:line="53" pos:column="29"/></modifier></type><name pos:line="53" pos:column="29">msg<pos:position pos:line="53" pos:column="32"/></name></decl>;<pos:position pos:line="53" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="54" pos:column="17">const<pos:position pos:line="54" pos:column="22"/></specifier> <name pos:line="54" pos:column="23">char<pos:position pos:line="54" pos:column="27"/></name> <modifier pos:line="54" pos:column="28">*<pos:position pos:line="54" pos:column="29"/></modifier></type><name pos:line="54" pos:column="29">what<pos:position pos:line="54" pos:column="33"/></name></decl>;<pos:position pos:line="54" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="55" pos:column="17">int<pos:position pos:line="55" pos:column="20"/></name></type> <name pos:line="55" pos:column="21">r<pos:position pos:line="55" pos:column="22"/></name></decl>;<pos:position pos:line="55" pos:column="23"/></decl_stmt>
		<comment type="block" pos:line="56" pos:column="17">/*
		 * Nicely describe the new ref we're fetching.
		 * Base this on the remote's ref name, as it's
		 * more likely to follow a standard layout.
		 */</comment>
		<decl_stmt><decl><type><specifier pos:line="61" pos:column="17">const<pos:position pos:line="61" pos:column="22"/></specifier> <name pos:line="61" pos:column="23">char<pos:position pos:line="61" pos:column="27"/></name> <modifier pos:line="61" pos:column="28">*<pos:position pos:line="61" pos:column="29"/></modifier></type><name pos:line="61" pos:column="29">name<pos:position pos:line="61" pos:column="33"/></name> <init pos:line="61" pos:column="34">= <expr><ternary><condition><expr><name pos:line="61" pos:column="36">remote_ref<pos:position pos:line="61" pos:column="46"/></name></expr> ?<pos:position pos:line="61" pos:column="48"/></condition><then pos:line="61" pos:column="48"> <expr><name><name pos:line="61" pos:column="49">remote_ref<pos:position pos:line="61" pos:column="59"/></name><operator pos:line="61" pos:column="59">-&gt;<pos:position pos:line="61" pos:column="64"/></operator><name pos:line="61" pos:column="61">name<pos:position pos:line="61" pos:column="65"/></name></name></expr> <pos:position pos:line="61" pos:column="66"/></then><else pos:line="61" pos:column="66">: <expr><literal type="string" pos:line="61" pos:column="68">""<pos:position pos:line="61" pos:column="70"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="61" pos:column="71"/></decl_stmt>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><call><name pos:line="62" pos:column="21">starts_with<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><name pos:line="62" pos:column="33">name<pos:position pos:line="62" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="39">"refs/tags/"<pos:position pos:line="62" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="53"/></condition><then pos:line="62" pos:column="53"> <block pos:line="62" pos:column="54">{
			<expr_stmt><expr><name pos:line="63" pos:column="25">msg<pos:position pos:line="63" pos:column="28"/></name> <operator pos:line="63" pos:column="29">=<pos:position pos:line="63" pos:column="30"/></operator> <literal type="string" pos:line="63" pos:column="31">"storing tag"<pos:position pos:line="63" pos:column="44"/></literal></expr>;<pos:position pos:line="63" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="64" pos:column="25">what<pos:position pos:line="64" pos:column="29"/></name> <operator pos:line="64" pos:column="30">=<pos:position pos:line="64" pos:column="31"/></operator> <call><name pos:line="64" pos:column="32">_<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><literal type="string" pos:line="64" pos:column="34">"[new tag]"<pos:position pos:line="64" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="65" pos:column="18"/></block></then> <elseif pos:line="65" pos:column="19">else <if pos:line="65" pos:column="24">if <condition pos:line="65" pos:column="27">(<expr><call><name pos:line="65" pos:column="28">starts_with<pos:position pos:line="65" pos:column="39"/></name><argument_list pos:line="65" pos:column="39">(<argument><expr><name pos:line="65" pos:column="40">name<pos:position pos:line="65" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="46">"refs/heads/"<pos:position pos:line="65" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="61"/></condition><then pos:line="65" pos:column="61"> <block pos:line="65" pos:column="62">{
			<expr_stmt><expr><name pos:line="66" pos:column="25">msg<pos:position pos:line="66" pos:column="28"/></name> <operator pos:line="66" pos:column="29">=<pos:position pos:line="66" pos:column="30"/></operator> <literal type="string" pos:line="66" pos:column="31">"storing head"<pos:position pos:line="66" pos:column="45"/></literal></expr>;<pos:position pos:line="66" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name pos:line="67" pos:column="25">what<pos:position pos:line="67" pos:column="29"/></name> <operator pos:line="67" pos:column="30">=<pos:position pos:line="67" pos:column="31"/></operator> <call><name pos:line="67" pos:column="32">_<pos:position pos:line="67" pos:column="33"/></name><argument_list pos:line="67" pos:column="33">(<argument><expr><literal type="string" pos:line="67" pos:column="34">"[new branch]"<pos:position pos:line="67" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="68" pos:column="18"/></block></then></if></elseif> <else pos:line="68" pos:column="19">else <block pos:line="68" pos:column="24">{
			<expr_stmt><expr><name pos:line="69" pos:column="25">msg<pos:position pos:line="69" pos:column="28"/></name> <operator pos:line="69" pos:column="29">=<pos:position pos:line="69" pos:column="30"/></operator> <literal type="string" pos:line="69" pos:column="31">"storing ref"<pos:position pos:line="69" pos:column="44"/></literal></expr>;<pos:position pos:line="69" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="70" pos:column="25">what<pos:position pos:line="70" pos:column="29"/></name> <operator pos:line="70" pos:column="30">=<pos:position pos:line="70" pos:column="31"/></operator> <call><name pos:line="70" pos:column="32">_<pos:position pos:line="70" pos:column="33"/></name><argument_list pos:line="70" pos:column="33">(<argument><expr><literal type="string" pos:line="70" pos:column="34">"[new ref]"<pos:position pos:line="70" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="71" pos:column="18"/></block></else></if>

		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><operator pos:line="73" pos:column="21">(<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="22">recurse_submodules<pos:position pos:line="73" pos:column="40"/></name> <operator pos:line="73" pos:column="41">!=<pos:position pos:line="73" pos:column="43"/></operator> <name pos:line="73" pos:column="44">RECURSE_SUBMODULES_OFF<pos:position pos:line="73" pos:column="66"/></name><operator pos:line="73" pos:column="66">)<pos:position pos:line="73" pos:column="67"/></operator> <operator pos:line="73" pos:column="68">&amp;&amp;<pos:position pos:line="73" pos:column="78"/></operator>
		    <operator pos:line="74" pos:column="21">(<pos:position pos:line="74" pos:column="22"/></operator><name pos:line="74" pos:column="22">recurse_submodules<pos:position pos:line="74" pos:column="40"/></name> <operator pos:line="74" pos:column="41">!=<pos:position pos:line="74" pos:column="43"/></operator> <name pos:line="74" pos:column="44">RECURSE_SUBMODULES_ON<pos:position pos:line="74" pos:column="65"/></name><operator pos:line="74" pos:column="65">)<pos:position pos:line="74" pos:column="66"/></operator></expr>)<pos:position pos:line="74" pos:column="67"/></condition><then pos:line="74" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="25">check_for_new_submodule_commits<pos:position pos:line="75" pos:column="56"/></name><argument_list pos:line="75" pos:column="56">(<argument><expr><name><name pos:line="75" pos:column="57">ref<pos:position pos:line="75" pos:column="60"/></name><operator pos:line="75" pos:column="60">-&gt;<pos:position pos:line="75" pos:column="65"/></operator><name pos:line="75" pos:column="62">new_sha1<pos:position pos:line="75" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="72"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="76" pos:column="17">r<pos:position pos:line="76" pos:column="18"/></name> <operator pos:line="76" pos:column="19">=<pos:position pos:line="76" pos:column="20"/></operator> <call><name pos:line="76" pos:column="21">s_update_ref<pos:position pos:line="76" pos:column="33"/></name><argument_list pos:line="76" pos:column="33">(<argument><expr><name pos:line="76" pos:column="34">msg<pos:position pos:line="76" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="39">ref<pos:position pos:line="76" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="44">0<pos:position pos:line="76" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="77" pos:column="17">strbuf_addf<pos:position pos:line="77" pos:column="28"/></name><argument_list pos:line="77" pos:column="28">(<argument><expr><name pos:line="77" pos:column="29">display<pos:position pos:line="77" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="38">"%c %-*s %-*s -&gt; %s%s"<pos:position pos:line="77" pos:column="63"/></literal></expr></argument>,
			    <argument><expr><ternary><condition><expr><name pos:line="78" pos:column="29">r<pos:position pos:line="78" pos:column="30"/></name></expr> ?<pos:position pos:line="78" pos:column="32"/></condition><then pos:line="78" pos:column="32"> <expr><literal type="char" pos:line="78" pos:column="33">'!'<pos:position pos:line="78" pos:column="36"/></literal></expr> <pos:position pos:line="78" pos:column="37"/></then><else pos:line="78" pos:column="37">: <expr><literal type="char" pos:line="78" pos:column="39">'*'<pos:position pos:line="78" pos:column="42"/></literal></expr></else></ternary></expr></argument>,
			    <argument><expr><call><name pos:line="79" pos:column="29">TRANSPORT_SUMMARY<pos:position pos:line="79" pos:column="46"/></name><argument_list pos:line="79" pos:column="46">(<argument><expr><name pos:line="79" pos:column="47">what<pos:position pos:line="79" pos:column="51"/></name></expr></argument>)<pos:position pos:line="79" pos:column="52"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="80" pos:column="29">REFCOL_WIDTH<pos:position pos:line="80" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="43">remote<pos:position pos:line="80" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="51">pretty_ref<pos:position pos:line="80" pos:column="61"/></name></expr></argument>,
			    <argument><expr><ternary><condition><expr><name pos:line="81" pos:column="29">r<pos:position pos:line="81" pos:column="30"/></name></expr> ?<pos:position pos:line="81" pos:column="32"/></condition><then pos:line="81" pos:column="32"> <expr><call><name pos:line="81" pos:column="33">_<pos:position pos:line="81" pos:column="34"/></name><argument_list pos:line="81" pos:column="34">(<argument><expr><literal type="string" pos:line="81" pos:column="35">"  (unable to update local ref)"<pos:position pos:line="81" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="68"/></argument_list></call></expr> <pos:position pos:line="81" pos:column="69"/></then><else pos:line="81" pos:column="69">: <expr><literal type="string" pos:line="81" pos:column="71">""<pos:position pos:line="81" pos:column="73"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="81" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="75"/></expr_stmt>
		<return pos:line="82" pos:column="17">return <expr><name pos:line="82" pos:column="24">r<pos:position pos:line="82" pos:column="25"/></name></expr>;<pos:position pos:line="82" pos:column="26"/></return>
	}<pos:position pos:line="83" pos:column="10"/></block></then></if>

	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><call><name pos:line="85" pos:column="13">in_merge_bases<pos:position pos:line="85" pos:column="27"/></name><argument_list pos:line="85" pos:column="27">(<argument><expr><name pos:line="85" pos:column="28">current<pos:position pos:line="85" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="37">updated<pos:position pos:line="85" pos:column="44"/></name></expr></argument>)<pos:position pos:line="85" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="46"/></condition><then pos:line="85" pos:column="46"> <block pos:line="85" pos:column="47">{
		<decl_stmt><decl><type><name pos:line="86" pos:column="17">char<pos:position pos:line="86" pos:column="21"/></name></type> <name><name pos:line="86" pos:column="22">quickref<pos:position pos:line="86" pos:column="30"/></name><index pos:line="86" pos:column="30">[<expr><literal type="number" pos:line="86" pos:column="31">83<pos:position pos:line="86" pos:column="33"/></literal></expr>]<pos:position pos:line="86" pos:column="34"/></index></name></decl>;<pos:position pos:line="86" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="87" pos:column="17">int<pos:position pos:line="87" pos:column="20"/></name></type> <name pos:line="87" pos:column="21">r<pos:position pos:line="87" pos:column="22"/></name></decl>;<pos:position pos:line="87" pos:column="23"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="88" pos:column="17">strcpy<pos:position pos:line="88" pos:column="23"/></name><argument_list pos:line="88" pos:column="23">(<argument><expr><name pos:line="88" pos:column="24">quickref<pos:position pos:line="88" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="88" pos:column="34">find_unique_abbrev<pos:position pos:line="88" pos:column="52"/></name><argument_list pos:line="88" pos:column="52">(<argument><expr><name><name pos:line="88" pos:column="53">current<pos:position pos:line="88" pos:column="60"/></name><operator pos:line="88" pos:column="60">-&gt;<pos:position pos:line="88" pos:column="65"/></operator><name pos:line="88" pos:column="62">object<pos:position pos:line="88" pos:column="68"/></name><operator pos:line="88" pos:column="68">.<pos:position pos:line="88" pos:column="69"/></operator><name pos:line="88" pos:column="69">sha1<pos:position pos:line="88" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="75">DEFAULT_ABBREV<pos:position pos:line="88" pos:column="89"/></name></expr></argument>)<pos:position pos:line="88" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="92"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="89" pos:column="17">strcat<pos:position pos:line="89" pos:column="23"/></name><argument_list pos:line="89" pos:column="23">(<argument><expr><name pos:line="89" pos:column="24">quickref<pos:position pos:line="89" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="34">".."<pos:position pos:line="89" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="90" pos:column="17">strcat<pos:position pos:line="90" pos:column="23"/></name><argument_list pos:line="90" pos:column="23">(<argument><expr><name pos:line="90" pos:column="24">quickref<pos:position pos:line="90" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="90" pos:column="34">find_unique_abbrev<pos:position pos:line="90" pos:column="52"/></name><argument_list pos:line="90" pos:column="52">(<argument><expr><name><name pos:line="90" pos:column="53">ref<pos:position pos:line="90" pos:column="56"/></name><operator pos:line="90" pos:column="56">-&gt;<pos:position pos:line="90" pos:column="61"/></operator><name pos:line="90" pos:column="58">new_sha1<pos:position pos:line="90" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="68">DEFAULT_ABBREV<pos:position pos:line="90" pos:column="82"/></name></expr></argument>)<pos:position pos:line="90" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="90" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="85"/></expr_stmt>
		<if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><operator pos:line="91" pos:column="21">(<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="22">recurse_submodules<pos:position pos:line="91" pos:column="40"/></name> <operator pos:line="91" pos:column="41">!=<pos:position pos:line="91" pos:column="43"/></operator> <name pos:line="91" pos:column="44">RECURSE_SUBMODULES_OFF<pos:position pos:line="91" pos:column="66"/></name><operator pos:line="91" pos:column="66">)<pos:position pos:line="91" pos:column="67"/></operator> <operator pos:line="91" pos:column="68">&amp;&amp;<pos:position pos:line="91" pos:column="78"/></operator>
		    <operator pos:line="92" pos:column="21">(<pos:position pos:line="92" pos:column="22"/></operator><name pos:line="92" pos:column="22">recurse_submodules<pos:position pos:line="92" pos:column="40"/></name> <operator pos:line="92" pos:column="41">!=<pos:position pos:line="92" pos:column="43"/></operator> <name pos:line="92" pos:column="44">RECURSE_SUBMODULES_ON<pos:position pos:line="92" pos:column="65"/></name><operator pos:line="92" pos:column="65">)<pos:position pos:line="92" pos:column="66"/></operator></expr>)<pos:position pos:line="92" pos:column="67"/></condition><then pos:line="92" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="25">check_for_new_submodule_commits<pos:position pos:line="93" pos:column="56"/></name><argument_list pos:line="93" pos:column="56">(<argument><expr><name><name pos:line="93" pos:column="57">ref<pos:position pos:line="93" pos:column="60"/></name><operator pos:line="93" pos:column="60">-&gt;<pos:position pos:line="93" pos:column="65"/></operator><name pos:line="93" pos:column="62">new_sha1<pos:position pos:line="93" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="72"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="94" pos:column="17">r<pos:position pos:line="94" pos:column="18"/></name> <operator pos:line="94" pos:column="19">=<pos:position pos:line="94" pos:column="20"/></operator> <call><name pos:line="94" pos:column="21">s_update_ref<pos:position pos:line="94" pos:column="33"/></name><argument_list pos:line="94" pos:column="33">(<argument><expr><literal type="string" pos:line="94" pos:column="34">"fast-forward"<pos:position pos:line="94" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="50">ref<pos:position pos:line="94" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="55">1<pos:position pos:line="94" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="95" pos:column="17">strbuf_addf<pos:position pos:line="95" pos:column="28"/></name><argument_list pos:line="95" pos:column="28">(<argument><expr><name pos:line="95" pos:column="29">display<pos:position pos:line="95" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="38">"%c %-*s %-*s -&gt; %s%s"<pos:position pos:line="95" pos:column="63"/></literal></expr></argument>,
			    <argument><expr><ternary><condition><expr><name pos:line="96" pos:column="29">r<pos:position pos:line="96" pos:column="30"/></name></expr> ?<pos:position pos:line="96" pos:column="32"/></condition><then pos:line="96" pos:column="32"> <expr><literal type="char" pos:line="96" pos:column="33">'!'<pos:position pos:line="96" pos:column="36"/></literal></expr> <pos:position pos:line="96" pos:column="37"/></then><else pos:line="96" pos:column="37">: <expr><literal type="char" pos:line="96" pos:column="39">' '<pos:position pos:line="96" pos:column="42"/></literal></expr></else></ternary></expr></argument>,
			    <argument><expr><name pos:line="97" pos:column="29">TRANSPORT_SUMMARY_WIDTH<pos:position pos:line="97" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="54">quickref<pos:position pos:line="97" pos:column="62"/></name></expr></argument>,
			    <argument><expr><name pos:line="98" pos:column="29">REFCOL_WIDTH<pos:position pos:line="98" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="43">remote<pos:position pos:line="98" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="51">pretty_ref<pos:position pos:line="98" pos:column="61"/></name></expr></argument>,
			    <argument><expr><ternary><condition><expr><name pos:line="99" pos:column="29">r<pos:position pos:line="99" pos:column="30"/></name></expr> ?<pos:position pos:line="99" pos:column="32"/></condition><then pos:line="99" pos:column="32"> <expr><call><name pos:line="99" pos:column="33">_<pos:position pos:line="99" pos:column="34"/></name><argument_list pos:line="99" pos:column="34">(<argument><expr><literal type="string" pos:line="99" pos:column="35">"  (unable to update local ref)"<pos:position pos:line="99" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="68"/></argument_list></call></expr> <pos:position pos:line="99" pos:column="69"/></then><else pos:line="99" pos:column="69">: <expr><literal type="string" pos:line="99" pos:column="71">""<pos:position pos:line="99" pos:column="73"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="99" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="75"/></expr_stmt>
		<return pos:line="100" pos:column="17">return <expr><name pos:line="100" pos:column="24">r<pos:position pos:line="100" pos:column="25"/></name></expr>;<pos:position pos:line="100" pos:column="26"/></return>
	}<pos:position pos:line="101" pos:column="10"/></block></then> <elseif pos:line="101" pos:column="11">else <if pos:line="101" pos:column="16">if <condition pos:line="101" pos:column="19">(<expr><name pos:line="101" pos:column="20">force<pos:position pos:line="101" pos:column="25"/></name> <operator pos:line="101" pos:column="26">||<pos:position pos:line="101" pos:column="28"/></operator> <name><name pos:line="101" pos:column="29">ref<pos:position pos:line="101" pos:column="32"/></name><operator pos:line="101" pos:column="32">-&gt;<pos:position pos:line="101" pos:column="37"/></operator><name pos:line="101" pos:column="34">force<pos:position pos:line="101" pos:column="39"/></name></name></expr>)<pos:position pos:line="101" pos:column="40"/></condition><then pos:line="101" pos:column="40"> <block pos:line="101" pos:column="41">{
		<decl_stmt><decl><type><name pos:line="102" pos:column="17">char<pos:position pos:line="102" pos:column="21"/></name></type> <name><name pos:line="102" pos:column="22">quickref<pos:position pos:line="102" pos:column="30"/></name><index pos:line="102" pos:column="30">[<expr><literal type="number" pos:line="102" pos:column="31">84<pos:position pos:line="102" pos:column="33"/></literal></expr>]<pos:position pos:line="102" pos:column="34"/></index></name></decl>;<pos:position pos:line="102" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="103" pos:column="17">int<pos:position pos:line="103" pos:column="20"/></name></type> <name pos:line="103" pos:column="21">r<pos:position pos:line="103" pos:column="22"/></name></decl>;<pos:position pos:line="103" pos:column="23"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="104" pos:column="17">strcpy<pos:position pos:line="104" pos:column="23"/></name><argument_list pos:line="104" pos:column="23">(<argument><expr><name pos:line="104" pos:column="24">quickref<pos:position pos:line="104" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="104" pos:column="34">find_unique_abbrev<pos:position pos:line="104" pos:column="52"/></name><argument_list pos:line="104" pos:column="52">(<argument><expr><name><name pos:line="104" pos:column="53">current<pos:position pos:line="104" pos:column="60"/></name><operator pos:line="104" pos:column="60">-&gt;<pos:position pos:line="104" pos:column="65"/></operator><name pos:line="104" pos:column="62">object<pos:position pos:line="104" pos:column="68"/></name><operator pos:line="104" pos:column="68">.<pos:position pos:line="104" pos:column="69"/></operator><name pos:line="104" pos:column="69">sha1<pos:position pos:line="104" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="75">DEFAULT_ABBREV<pos:position pos:line="104" pos:column="89"/></name></expr></argument>)<pos:position pos:line="104" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="104" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="92"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="105" pos:column="17">strcat<pos:position pos:line="105" pos:column="23"/></name><argument_list pos:line="105" pos:column="23">(<argument><expr><name pos:line="105" pos:column="24">quickref<pos:position pos:line="105" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="34">"..."<pos:position pos:line="105" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="106" pos:column="17">strcat<pos:position pos:line="106" pos:column="23"/></name><argument_list pos:line="106" pos:column="23">(<argument><expr><name pos:line="106" pos:column="24">quickref<pos:position pos:line="106" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="106" pos:column="34">find_unique_abbrev<pos:position pos:line="106" pos:column="52"/></name><argument_list pos:line="106" pos:column="52">(<argument><expr><name><name pos:line="106" pos:column="53">ref<pos:position pos:line="106" pos:column="56"/></name><operator pos:line="106" pos:column="56">-&gt;<pos:position pos:line="106" pos:column="61"/></operator><name pos:line="106" pos:column="58">new_sha1<pos:position pos:line="106" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="68">DEFAULT_ABBREV<pos:position pos:line="106" pos:column="82"/></name></expr></argument>)<pos:position pos:line="106" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="106" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="85"/></expr_stmt>
		<if pos:line="107" pos:column="17">if <condition pos:line="107" pos:column="20">(<expr><operator pos:line="107" pos:column="21">(<pos:position pos:line="107" pos:column="22"/></operator><name pos:line="107" pos:column="22">recurse_submodules<pos:position pos:line="107" pos:column="40"/></name> <operator pos:line="107" pos:column="41">!=<pos:position pos:line="107" pos:column="43"/></operator> <name pos:line="107" pos:column="44">RECURSE_SUBMODULES_OFF<pos:position pos:line="107" pos:column="66"/></name><operator pos:line="107" pos:column="66">)<pos:position pos:line="107" pos:column="67"/></operator> <operator pos:line="107" pos:column="68">&amp;&amp;<pos:position pos:line="107" pos:column="78"/></operator>
		    <operator pos:line="108" pos:column="21">(<pos:position pos:line="108" pos:column="22"/></operator><name pos:line="108" pos:column="22">recurse_submodules<pos:position pos:line="108" pos:column="40"/></name> <operator pos:line="108" pos:column="41">!=<pos:position pos:line="108" pos:column="43"/></operator> <name pos:line="108" pos:column="44">RECURSE_SUBMODULES_ON<pos:position pos:line="108" pos:column="65"/></name><operator pos:line="108" pos:column="65">)<pos:position pos:line="108" pos:column="66"/></operator></expr>)<pos:position pos:line="108" pos:column="67"/></condition><then pos:line="108" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="109" pos:column="25">check_for_new_submodule_commits<pos:position pos:line="109" pos:column="56"/></name><argument_list pos:line="109" pos:column="56">(<argument><expr><name><name pos:line="109" pos:column="57">ref<pos:position pos:line="109" pos:column="60"/></name><operator pos:line="109" pos:column="60">-&gt;<pos:position pos:line="109" pos:column="65"/></operator><name pos:line="109" pos:column="62">new_sha1<pos:position pos:line="109" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="72"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="110" pos:column="17">r<pos:position pos:line="110" pos:column="18"/></name> <operator pos:line="110" pos:column="19">=<pos:position pos:line="110" pos:column="20"/></operator> <call><name pos:line="110" pos:column="21">s_update_ref<pos:position pos:line="110" pos:column="33"/></name><argument_list pos:line="110" pos:column="33">(<argument><expr><literal type="string" pos:line="110" pos:column="34">"forced-update"<pos:position pos:line="110" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="110" pos:column="51">ref<pos:position pos:line="110" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="110" pos:column="56">1<pos:position pos:line="110" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="111" pos:column="17">strbuf_addf<pos:position pos:line="111" pos:column="28"/></name><argument_list pos:line="111" pos:column="28">(<argument><expr><name pos:line="111" pos:column="29">display<pos:position pos:line="111" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="38">"%c %-*s %-*s -&gt; %s  (%s)"<pos:position pos:line="111" pos:column="67"/></literal></expr></argument>,
			    <argument><expr><ternary><condition><expr><name pos:line="112" pos:column="29">r<pos:position pos:line="112" pos:column="30"/></name></expr> ?<pos:position pos:line="112" pos:column="32"/></condition><then pos:line="112" pos:column="32"> <expr><literal type="char" pos:line="112" pos:column="33">'!'<pos:position pos:line="112" pos:column="36"/></literal></expr> <pos:position pos:line="112" pos:column="37"/></then><else pos:line="112" pos:column="37">: <expr><literal type="char" pos:line="112" pos:column="39">'+'<pos:position pos:line="112" pos:column="42"/></literal></expr></else></ternary></expr></argument>,
			    <argument><expr><name pos:line="113" pos:column="29">TRANSPORT_SUMMARY_WIDTH<pos:position pos:line="113" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="54">quickref<pos:position pos:line="113" pos:column="62"/></name></expr></argument>,
			    <argument><expr><name pos:line="114" pos:column="29">REFCOL_WIDTH<pos:position pos:line="114" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="43">remote<pos:position pos:line="114" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="51">pretty_ref<pos:position pos:line="114" pos:column="61"/></name></expr></argument>,
			    <argument><expr><ternary><condition><expr><name pos:line="115" pos:column="29">r<pos:position pos:line="115" pos:column="30"/></name></expr> ?<pos:position pos:line="115" pos:column="32"/></condition><then pos:line="115" pos:column="32"> <expr><call><name pos:line="115" pos:column="33">_<pos:position pos:line="115" pos:column="34"/></name><argument_list pos:line="115" pos:column="34">(<argument><expr><literal type="string" pos:line="115" pos:column="35">"unable to update local ref"<pos:position pos:line="115" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="64"/></argument_list></call></expr> <pos:position pos:line="115" pos:column="65"/></then><else pos:line="115" pos:column="65">: <expr><call><name pos:line="115" pos:column="67">_<pos:position pos:line="115" pos:column="68"/></name><argument_list pos:line="115" pos:column="68">(<argument><expr><literal type="string" pos:line="115" pos:column="69">"forced update"<pos:position pos:line="115" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="85"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="115" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="87"/></expr_stmt>
		<return pos:line="116" pos:column="17">return <expr><name pos:line="116" pos:column="24">r<pos:position pos:line="116" pos:column="25"/></name></expr>;<pos:position pos:line="116" pos:column="26"/></return>
	}<pos:position pos:line="117" pos:column="10"/></block></then></if></elseif> <else pos:line="117" pos:column="11">else <block pos:line="117" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="118" pos:column="17">strbuf_addf<pos:position pos:line="118" pos:column="28"/></name><argument_list pos:line="118" pos:column="28">(<argument><expr><name pos:line="118" pos:column="29">display<pos:position pos:line="118" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="38">"! %-*s %-*s -&gt; %s  %s"<pos:position pos:line="118" pos:column="64"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="119" pos:column="29">TRANSPORT_SUMMARY<pos:position pos:line="119" pos:column="46"/></name><argument_list pos:line="119" pos:column="46">(<argument><expr><call><name pos:line="119" pos:column="47">_<pos:position pos:line="119" pos:column="48"/></name><argument_list pos:line="119" pos:column="48">(<argument><expr><literal type="string" pos:line="119" pos:column="49">"[rejected]"<pos:position pos:line="119" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="119" pos:column="63"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="120" pos:column="29">REFCOL_WIDTH<pos:position pos:line="120" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="43">remote<pos:position pos:line="120" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="51">pretty_ref<pos:position pos:line="120" pos:column="61"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="121" pos:column="29">_<pos:position pos:line="121" pos:column="30"/></name><argument_list pos:line="121" pos:column="30">(<argument><expr><literal type="string" pos:line="121" pos:column="31">"(non-fast-forward)"<pos:position pos:line="121" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="54"/></expr_stmt>
		<return pos:line="122" pos:column="17">return <expr><literal type="number" pos:line="122" pos:column="24">1<pos:position pos:line="122" pos:column="25"/></literal></expr>;<pos:position pos:line="122" pos:column="26"/></return>
	}<pos:position pos:line="123" pos:column="10"/></block></else></if>
}<pos:position pos:line="124" pos:column="2"/></block></function></unit>

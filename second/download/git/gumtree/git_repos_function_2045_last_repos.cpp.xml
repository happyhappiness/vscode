<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2045_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">object<pos:position pos:line="1" pos:column="14"/></name></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">parse_object<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">object_id<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">oid<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">long<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">size<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">enum<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">object_type<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">type<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">eaten<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">unsigned<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">char<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">repl<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><call><name pos:line="6" pos:column="37">lookup_replace_object<pos:position pos:line="6" pos:column="58"/></name><argument_list pos:line="6" pos:column="58">(<argument><expr><name><name pos:line="6" pos:column="59">oid<pos:position pos:line="6" pos:column="62"/></name><operator pos:line="6" pos:column="62">-&gt;<pos:position pos:line="6" pos:column="67"/></operator><name pos:line="6" pos:column="64">hash<pos:position pos:line="6" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="70"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">void<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">buffer<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">object<pos:position pos:line="8" pos:column="22"/></name></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">obj<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">obj<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">lookup_object<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name><name pos:line="10" pos:column="29">oid<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">hash<pos:position pos:line="10" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">obj<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">&amp;&amp;<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="20">obj<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">parsed<pos:position pos:line="11" pos:column="31"/></name></name></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">obj<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></return></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">obj<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">&amp;&amp;<pos:position pos:line="14" pos:column="28"/></operator> <name><name pos:line="14" pos:column="21">obj<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">type<pos:position pos:line="14" pos:column="30"/></name></name> <operator pos:line="14" pos:column="31">==<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="34">OBJ_BLOB<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">)<pos:position pos:line="14" pos:column="43"/></operator> <operator pos:line="14" pos:column="44">||<pos:position pos:line="14" pos:column="46"/></operator>
	    <operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><operator pos:line="15" pos:column="14">!<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">obj<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">&amp;&amp;<pos:position pos:line="15" pos:column="29"/></operator> <call><name pos:line="15" pos:column="22">has_object_file<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">oid<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call> <operator pos:line="15" pos:column="43">&amp;&amp;<pos:position pos:line="15" pos:column="53"/></operator>
	     <call><name pos:line="16" pos:column="14">sha1_object_info<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name><name pos:line="16" pos:column="31">oid<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">-&gt;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="36">hash<pos:position pos:line="16" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">NULL<pos:position pos:line="16" pos:column="46"/></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call> <operator pos:line="16" pos:column="48">==<pos:position pos:line="16" pos:column="50"/></operator> <name pos:line="16" pos:column="51">OBJ_BLOB<pos:position pos:line="16" pos:column="59"/></name><operator pos:line="16" pos:column="59">)<pos:position pos:line="16" pos:column="60"/></operator></expr>)<pos:position pos:line="16" pos:column="61"/></condition><then pos:line="16" pos:column="61"> <block pos:line="16" pos:column="62">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">check_sha1_signature<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><name pos:line="17" pos:column="42">repl<pos:position pos:line="17" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">NULL<pos:position pos:line="17" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="54">0<pos:position pos:line="17" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="57">NULL<pos:position pos:line="17" pos:column="61"/></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call> <operator pos:line="17" pos:column="63">&lt;<pos:position pos:line="17" pos:column="67"/></operator> <literal type="number" pos:line="17" pos:column="65">0<pos:position pos:line="17" pos:column="66"/></literal></expr>)<pos:position pos:line="17" pos:column="67"/></condition><then pos:line="17" pos:column="67"> <block pos:line="17" pos:column="68">{
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">error<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><literal type="string" pos:line="18" pos:column="31">"sha1 mismatch %s"<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="51">oid_to_hex<pos:position pos:line="18" pos:column="61"/></name><argument_list pos:line="18" pos:column="61">(<argument><expr><name pos:line="18" pos:column="62">oid<pos:position pos:line="18" pos:column="65"/></name></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="68"/></expr_stmt>
			<return pos:line="19" pos:column="25">return <expr><name pos:line="19" pos:column="32">NULL<pos:position pos:line="19" pos:column="36"/></name></expr>;<pos:position pos:line="19" pos:column="37"/></return>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">parse_blob_buffer<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><call><name pos:line="21" pos:column="35">lookup_blob<pos:position pos:line="21" pos:column="46"/></name><argument_list pos:line="21" pos:column="46">(<argument><expr><name pos:line="21" pos:column="47">oid<pos:position pos:line="21" pos:column="50"/></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">NULL<pos:position pos:line="21" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="59">0<pos:position pos:line="21" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt>
		<return pos:line="22" pos:column="17">return <expr><call><name pos:line="22" pos:column="24">lookup_object<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name><name pos:line="22" pos:column="38">oid<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">hash<pos:position pos:line="22" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="25" pos:column="9">buffer<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name pos:line="25" pos:column="18">read_sha1_file<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name><name pos:line="25" pos:column="33">oid<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">hash<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="44">&amp;<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="45">type<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="51">&amp;<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="52">size<pos:position pos:line="25" pos:column="56"/></name></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="58"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">buffer<pos:position pos:line="26" pos:column="19"/></name></expr>)<pos:position pos:line="26" pos:column="20"/></condition><then pos:line="26" pos:column="20"> <block pos:line="26" pos:column="21">{
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><call><name pos:line="27" pos:column="21">check_sha1_signature<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">repl<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">buffer<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">size<pos:position pos:line="27" pos:column="60"/></name></expr></argument>, <argument><expr><name><typename pos:line="27" pos:column="62">typename<pos:position pos:line="27" pos:column="70"/></typename></name><operator pos:line="27" pos:column="70">(<pos:position pos:line="27" pos:column="71"/></operator><name pos:line="27" pos:column="71">type<pos:position pos:line="27" pos:column="75"/></name><operator pos:line="27" pos:column="75">)<pos:position pos:line="27" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="77"/></argument_list></call> <operator pos:line="27" pos:column="78">&lt;<pos:position pos:line="27" pos:column="82"/></operator> <literal type="number" pos:line="27" pos:column="80">0<pos:position pos:line="27" pos:column="81"/></literal></expr>)<pos:position pos:line="27" pos:column="82"/></condition><then pos:line="27" pos:column="82"> <block pos:line="27" pos:column="83">{
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">free<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">buffer<pos:position pos:line="28" pos:column="36"/></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">error<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><literal type="string" pos:line="29" pos:column="31">"sha1 mismatch %s"<pos:position pos:line="29" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="51">sha1_to_hex<pos:position pos:line="29" pos:column="62"/></name><argument_list pos:line="29" pos:column="62">(<argument><expr><name pos:line="29" pos:column="63">repl<pos:position pos:line="29" pos:column="67"/></name></expr></argument>)<pos:position pos:line="29" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="70"/></expr_stmt>
			<return pos:line="30" pos:column="25">return <expr><name pos:line="30" pos:column="32">NULL<pos:position pos:line="30" pos:column="36"/></name></expr>;<pos:position pos:line="30" pos:column="37"/></return>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="33" pos:column="17">obj<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <call><name pos:line="33" pos:column="23">parse_object_buffer<pos:position pos:line="33" pos:column="42"/></name><argument_list pos:line="33" pos:column="42">(<argument><expr><name pos:line="33" pos:column="43">oid<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="48">type<pos:position pos:line="33" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="54">size<pos:position pos:line="33" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="60">buffer<pos:position pos:line="33" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="68">&amp;<pos:position pos:line="33" pos:column="73"/></operator><name pos:line="33" pos:column="69">eaten<pos:position pos:line="33" pos:column="74"/></name></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="76"/></expr_stmt>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><operator pos:line="34" pos:column="21">!<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">eaten<pos:position pos:line="34" pos:column="27"/></name></expr>)<pos:position pos:line="34" pos:column="28"/></condition><then pos:line="34" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="25">free<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">buffer<pos:position pos:line="35" pos:column="36"/></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt></block></then></if>
		<return pos:line="36" pos:column="17">return <expr><name pos:line="36" pos:column="24">obj<pos:position pos:line="36" pos:column="27"/></name></expr>;<pos:position pos:line="36" pos:column="28"/></return>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>
	<return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">NULL<pos:position pos:line="38" pos:column="20"/></name></expr>;<pos:position pos:line="38" pos:column="21"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

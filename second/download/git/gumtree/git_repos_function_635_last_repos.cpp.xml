<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_635_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">git_config_from_parameters<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">config_fn_t<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">fn<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">void<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">data<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">env<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">getenv<pos:position pos:line="3" pos:column="33"/></name><argument_list pos:line="3" pos:column="33">(<argument><expr><name pos:line="3" pos:column="34">CONFIG_DATA_ENVIRONMENT<pos:position pos:line="3" pos:column="57"/></name></expr></argument>)<pos:position pos:line="3" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">envw<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier><modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">argv<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">NULL<pos:position pos:line="6" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">nr<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="21">alloc<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">config_source<pos:position pos:line="9" pos:column="29"/></name></name></type> <name pos:line="9" pos:column="30">source<pos:position pos:line="9" pos:column="36"/></name></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">env<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">memset<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><operator pos:line="14" pos:column="16">&amp;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="17">source<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="25">0<pos:position pos:line="14" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="28">sizeof<argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">source<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">source<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">prev<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="23">cf<pos:position pos:line="15" pos:column="25"/></name></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">source<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">.<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">origin_type<pos:position pos:line="16" pos:column="27"/></name></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="30">CONFIG_ORIGIN_CMDLINE<pos:position pos:line="16" pos:column="51"/></name></expr>;<pos:position pos:line="16" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">cf<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <operator pos:line="17" pos:column="14">&amp;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="15">source<pos:position pos:line="17" pos:column="21"/></name></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>

	<comment type="block" pos:line="19" pos:column="9">/* sq_dequote will write over it */</comment>
	<expr_stmt><expr><name pos:line="20" pos:column="9">envw<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">xstrdup<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">env<pos:position pos:line="20" pos:column="27"/></name></expr></argument>)<pos:position pos:line="20" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">sq_dequote_to_argv<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">envw<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="38">&amp;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="39">argv<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="45">&amp;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="46">nr<pos:position pos:line="22" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="50">&amp;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="51">alloc<pos:position pos:line="22" pos:column="56"/></name></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call> <operator pos:line="22" pos:column="58">&lt;<pos:position pos:line="22" pos:column="62"/></operator> <literal type="number" pos:line="22" pos:column="60">0<pos:position pos:line="22" pos:column="61"/></literal></expr>)<pos:position pos:line="22" pos:column="62"/></condition><then pos:line="22" pos:column="62"> <block pos:line="22" pos:column="63">{
		<expr_stmt><expr><name pos:line="23" pos:column="17">ret<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <call><name pos:line="23" pos:column="23">error<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><literal type="string" pos:line="23" pos:column="29">"bogus format in "<pos:position pos:line="23" pos:column="47"/></literal> <name pos:line="23" pos:column="48">CONFIG_DATA_ENVIRONMENT<pos:position pos:line="23" pos:column="71"/></name></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="73"/></expr_stmt>
		<goto pos:line="24" pos:column="17">goto <name pos:line="24" pos:column="22">out<pos:position pos:line="24" pos:column="25"/></name>;<pos:position pos:line="24" pos:column="26"/></goto>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init><expr><name pos:line="27" pos:column="14">i<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></init> <condition><expr><name pos:line="27" pos:column="21">i<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">&lt;<pos:position pos:line="27" pos:column="27"/></operator> <name pos:line="27" pos:column="25">nr<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></condition> <incr><expr><name pos:line="27" pos:column="29">i<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">++<pos:position pos:line="27" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="33"/></control> <block pos:line="27" pos:column="34">{
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><call><name pos:line="28" pos:column="21">git_config_parse_parameter<pos:position pos:line="28" pos:column="47"/></name><argument_list pos:line="28" pos:column="47">(<argument><expr><name><name pos:line="28" pos:column="48">argv<pos:position pos:line="28" pos:column="52"/></name><index pos:line="28" pos:column="52">[<expr><name pos:line="28" pos:column="53">i<pos:position pos:line="28" pos:column="54"/></name></expr>]<pos:position pos:line="28" pos:column="55"/></index></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="57">fn<pos:position pos:line="28" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="61">data<pos:position pos:line="28" pos:column="65"/></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call> <operator pos:line="28" pos:column="67">&lt;<pos:position pos:line="28" pos:column="71"/></operator> <literal type="number" pos:line="28" pos:column="69">0<pos:position pos:line="28" pos:column="70"/></literal></expr>)<pos:position pos:line="28" pos:column="71"/></condition><then pos:line="28" pos:column="71"> <block pos:line="28" pos:column="72">{
			<expr_stmt><expr><name pos:line="29" pos:column="25">ret<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">=<pos:position pos:line="29" pos:column="30"/></operator> <operator pos:line="29" pos:column="31">-<pos:position pos:line="29" pos:column="32"/></operator><literal type="number" pos:line="29" pos:column="32">1<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
			<goto pos:line="30" pos:column="25">goto <name pos:line="30" pos:column="30">out<pos:position pos:line="30" pos:column="33"/></name>;<pos:position pos:line="30" pos:column="34"/></goto>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
	}<pos:position pos:line="32" pos:column="10"/></block></for>

<label><name pos:line="34" pos:column="1">out<pos:position pos:line="34" pos:column="4"/></name>:<pos:position pos:line="34" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">free<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">argv<pos:position pos:line="35" pos:column="18"/></name></expr></argument>)<pos:position pos:line="35" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="36" pos:column="9">free<pos:position pos:line="36" pos:column="13"/></name><argument_list pos:line="36" pos:column="13">(<argument><expr><name pos:line="36" pos:column="14">envw<pos:position pos:line="36" pos:column="18"/></name></expr></argument>)<pos:position pos:line="36" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="37" pos:column="9">cf<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <name><name pos:line="37" pos:column="14">source<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">.<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="21">prev<pos:position pos:line="37" pos:column="25"/></name></name></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>
	<return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">ret<pos:position pos:line="38" pos:column="19"/></name></expr>;<pos:position pos:line="38" pos:column="20"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

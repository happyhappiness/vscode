<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2345_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">http_config<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">var<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">value<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">void<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">cb<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">strcmp<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">var<pos:position pos:line="3" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="26">"http.getanyfile"<pos:position pos:line="3" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="45"/></condition><then pos:line="3" pos:column="45"> <block pos:line="3" pos:column="46">{
		<expr_stmt><expr><name pos:line="4" pos:column="17">getanyfile<pos:position pos:line="4" pos:column="27"/></name> <operator pos:line="4" pos:column="28">=<pos:position pos:line="4" pos:column="29"/></operator> <call><name pos:line="4" pos:column="30">git_config_bool<pos:position pos:line="4" pos:column="45"/></name><argument_list pos:line="4" pos:column="45">(<argument><expr><name pos:line="4" pos:column="46">var<pos:position pos:line="4" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="51">value<pos:position pos:line="4" pos:column="56"/></name></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="58"/></expr_stmt>
		<return pos:line="5" pos:column="17">return <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr>;<pos:position pos:line="5" pos:column="26"/></return>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">starts_with<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">var<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="30">"http."<pos:position pos:line="8" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="39"/></condition><then pos:line="8" pos:column="39"> <block pos:line="8" pos:column="40">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">i<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>

		<for pos:line="11" pos:column="17">for <control pos:line="11" pos:column="21">(<init><expr><name pos:line="11" pos:column="22">i<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr>;<pos:position pos:line="11" pos:column="28"/></init> <condition><expr><name pos:line="11" pos:column="29">i<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">&lt;<pos:position pos:line="11" pos:column="35"/></operator> <call><name pos:line="11" pos:column="33">ARRAY_SIZE<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><name pos:line="11" pos:column="44">rpc_service<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></condition> <incr><expr><name pos:line="11" pos:column="58">i<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">++<pos:position pos:line="11" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="62"/></control> <block pos:line="11" pos:column="63">{
			<decl_stmt><decl><type><name><name pos:line="12" pos:column="25">struct<pos:position pos:line="12" pos:column="31"/></name> <name pos:line="12" pos:column="32">rpc_service<pos:position pos:line="12" pos:column="43"/></name></name> <modifier pos:line="12" pos:column="44">*<pos:position pos:line="12" pos:column="45"/></modifier></type><name pos:line="12" pos:column="45">svc<pos:position pos:line="12" pos:column="48"/></name> <init pos:line="12" pos:column="49">= <expr><operator pos:line="12" pos:column="51">&amp;<pos:position pos:line="12" pos:column="56"/></operator><name><name pos:line="12" pos:column="52">rpc_service<pos:position pos:line="12" pos:column="63"/></name><index pos:line="12" pos:column="63">[<expr><name pos:line="12" pos:column="64">i<pos:position pos:line="12" pos:column="65"/></name></expr>]<pos:position pos:line="12" pos:column="66"/></index></name></expr></init></decl>;<pos:position pos:line="12" pos:column="67"/></decl_stmt>
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><operator pos:line="13" pos:column="29">!<pos:position pos:line="13" pos:column="30"/></operator><call><name pos:line="13" pos:column="30">strcmp<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">var<pos:position pos:line="13" pos:column="40"/></name> <operator pos:line="13" pos:column="41">+<pos:position pos:line="13" pos:column="42"/></operator> <literal type="number" pos:line="13" pos:column="43">5<pos:position pos:line="13" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="46">svc<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">-&gt;<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="51">config_name<pos:position pos:line="13" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="64"/></condition><then pos:line="13" pos:column="64"> <block pos:line="13" pos:column="65">{
				<expr_stmt><expr><name><name pos:line="14" pos:column="33">svc<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">-&gt;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="38">enabled<pos:position pos:line="14" pos:column="45"/></name></name> <operator pos:line="14" pos:column="46">=<pos:position pos:line="14" pos:column="47"/></operator> <call><name pos:line="14" pos:column="48">git_config_bool<pos:position pos:line="14" pos:column="63"/></name><argument_list pos:line="14" pos:column="63">(<argument><expr><name pos:line="14" pos:column="64">var<pos:position pos:line="14" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="69">value<pos:position pos:line="14" pos:column="74"/></name></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="76"/></expr_stmt>
				<return pos:line="15" pos:column="33">return <expr><literal type="number" pos:line="15" pos:column="40">0<pos:position pos:line="15" pos:column="41"/></literal></expr>;<pos:position pos:line="15" pos:column="42"/></return>
			}<pos:position pos:line="16" pos:column="26"/></block></then></if>
		}<pos:position pos:line="17" pos:column="18"/></block></for>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="20" pos:column="9">/* we are not interested in parsing any other configuration here */</comment>
	<return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

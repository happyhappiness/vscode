<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_162_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">format_symref_info<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">strbuf<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">buf<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="52">struct<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">string_list<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">symref<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list_item<pos:position pos:line="3" pos:column="32"/></name></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">item<pos:position pos:line="3" pos:column="38"/></name></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name><name pos:line="5" pos:column="14">symref<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">-&gt;<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="22">nr<pos:position pos:line="5" pos:column="24"/></name></name></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25">
		<block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>
	<macro><name pos:line="7" pos:column="9">for_each_string_list_item<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument pos:line="7" pos:column="35">item<pos:position pos:line="7" pos:column="39"/></argument>, <argument pos:line="7" pos:column="41">symref<pos:position pos:line="7" pos:column="47"/></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></macro>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">strbuf_addf<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">buf<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="34">" symref=%s:%s"<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="51">item<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">-&gt;<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="57">string<pos:position pos:line="8" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="65">(<pos:position pos:line="8" pos:column="66"/></operator><name pos:line="8" pos:column="66">char<pos:position pos:line="8" pos:column="70"/></name> <operator pos:line="8" pos:column="71">*<pos:position pos:line="8" pos:column="72"/></operator><operator pos:line="8" pos:column="72">)<pos:position pos:line="8" pos:column="73"/></operator><name><name pos:line="8" pos:column="73">item<pos:position pos:line="8" pos:column="77"/></name><operator pos:line="8" pos:column="77">-&gt;<pos:position pos:line="8" pos:column="82"/></operator><name pos:line="8" pos:column="79">util<pos:position pos:line="8" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="85"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_595_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">find_longest_prefix<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">strbuf<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">out<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">pattern<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">p<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">p<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">pattern<pos:position pos:line="5" pos:column="25"/></name></expr>;<pos:position pos:line="5" pos:column="26"/></init> <condition><expr><operator pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">p<pos:position pos:line="5" pos:column="29"/></name> <operator pos:line="5" pos:column="30">&amp;&amp;<pos:position pos:line="5" pos:column="40"/></operator> <operator pos:line="5" pos:column="33">!<pos:position pos:line="5" pos:column="34"/></operator><call><name pos:line="5" pos:column="34">is_glob_special<pos:position pos:line="5" pos:column="49"/></name><argument_list pos:line="5" pos:column="49">(<argument><expr><operator pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="51">p<pos:position pos:line="5" pos:column="52"/></name></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="54"/></condition> <incr><expr><name pos:line="5" pos:column="55">p<pos:position pos:line="5" pos:column="56"/></name><operator pos:line="5" pos:column="56">++<pos:position pos:line="5" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="59"/></control>
		<block type="pseudo"><empty_stmt pos:line="6" pos:column="17">;<pos:position pos:line="6" pos:column="18"/></empty_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">strbuf_add<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">out<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">pattern<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">p<pos:position pos:line="8" pos:column="35"/></name> <operator pos:line="8" pos:column="36">-<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="38">pattern<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

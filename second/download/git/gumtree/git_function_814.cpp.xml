<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_814.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">prefix_pathspec<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">pathspec_item<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">item<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="2" pos:column="33">unsigned<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">p_short_magic<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name pos:line="3" pos:column="39">char<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier><modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">raw<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="51">unsigned<pos:position pos:line="3" pos:column="59"/></name></type> <name pos:line="3" pos:column="60">flags<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="4" pos:column="33">const<pos:position pos:line="4" pos:column="38"/></specifier> <name pos:line="4" pos:column="39">char<pos:position pos:line="4" pos:column="43"/></name> <modifier pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></modifier></type><name pos:line="4" pos:column="45">prefix<pos:position pos:line="4" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="53">int<pos:position pos:line="4" pos:column="56"/></name></type> <name pos:line="4" pos:column="57">prefixlen<pos:position pos:line="4" pos:column="66"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="5" pos:column="33">const<pos:position pos:line="5" pos:column="38"/></specifier> <name pos:line="5" pos:column="39">char<pos:position pos:line="5" pos:column="43"/></name> <modifier pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></modifier></type><name pos:line="5" pos:column="45">elt<pos:position pos:line="5" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="49"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">int<pos:position pos:line="7" pos:column="19"/></name></type> <name pos:line="7" pos:column="20">literal_global<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><operator pos:line="7" pos:column="37">-<pos:position pos:line="7" pos:column="38"/></operator><literal type="number" pos:line="7" pos:column="38">1<pos:position pos:line="7" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="8" pos:column="9">static<pos:position pos:line="8" pos:column="15"/></specifier> <type><name pos:line="8" pos:column="16">int<pos:position pos:line="8" pos:column="19"/></name></type> <name pos:line="8" pos:column="20">glob_global<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><operator pos:line="8" pos:column="34">-<pos:position pos:line="8" pos:column="35"/></operator><literal type="number" pos:line="8" pos:column="35">1<pos:position pos:line="8" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="9" pos:column="9">static<pos:position pos:line="9" pos:column="15"/></specifier> <type><name pos:line="9" pos:column="16">int<pos:position pos:line="9" pos:column="19"/></name></type> <name pos:line="9" pos:column="20">noglob_global<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><operator pos:line="9" pos:column="36">-<pos:position pos:line="9" pos:column="37"/></operator><literal type="number" pos:line="9" pos:column="37">1<pos:position pos:line="9" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="10" pos:column="9">static<pos:position pos:line="10" pos:column="15"/></specifier> <type><name pos:line="10" pos:column="16">int<pos:position pos:line="10" pos:column="19"/></name></type> <name pos:line="10" pos:column="20">icase_global<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><operator pos:line="10" pos:column="35">-<pos:position pos:line="10" pos:column="36"/></operator><literal type="number" pos:line="10" pos:column="36">1<pos:position pos:line="10" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">unsigned<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">magic<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="29">short_magic<pos:position pos:line="11" pos:column="40"/></name> <init pos:line="11" pos:column="41">= <expr><literal type="number" pos:line="11" pos:column="43">0<pos:position pos:line="11" pos:column="44"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="46">global_magic<pos:position pos:line="11" pos:column="58"/></name> <init pos:line="11" pos:column="59">= <expr><literal type="number" pos:line="11" pos:column="61">0<pos:position pos:line="11" pos:column="62"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">char<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">copyfrom<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><name pos:line="12" pos:column="32">elt<pos:position pos:line="12" pos:column="35"/></name></expr></init></decl>, <modifier pos:line="12" pos:column="37">*<pos:position pos:line="12" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="38">long_magic_end<pos:position pos:line="12" pos:column="52"/></name> <init pos:line="12" pos:column="53">= <expr><name pos:line="12" pos:column="55">NULL<pos:position pos:line="12" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">match<pos:position pos:line="13" pos:column="20"/></name></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">i<pos:position pos:line="14" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="16">pathspec_prefix<pos:position pos:line="14" pos:column="31"/></name> <init pos:line="14" pos:column="32">= <expr><operator pos:line="14" pos:column="34">-<pos:position pos:line="14" pos:column="35"/></operator><literal type="number" pos:line="14" pos:column="35">1<pos:position pos:line="14" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="37"/></decl_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">literal_global<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">&lt;<pos:position pos:line="16" pos:column="32"/></operator> <literal type="number" pos:line="16" pos:column="30">0<pos:position pos:line="16" pos:column="31"/></literal></expr>)<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">literal_global<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <call><name pos:line="17" pos:column="34">git_env_bool<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><name pos:line="17" pos:column="47">GIT_LITERAL_PATHSPECS_ENVIRONMENT<pos:position pos:line="17" pos:column="80"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="82">0<pos:position pos:line="17" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="85"/></expr_stmt></block></then></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">literal_global<pos:position pos:line="18" pos:column="27"/></name></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">global_magic<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">|=<pos:position pos:line="19" pos:column="32"/></operator> <name pos:line="19" pos:column="33">PATHSPEC_LITERAL<pos:position pos:line="19" pos:column="49"/></name></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">glob_global<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">&lt;<pos:position pos:line="21" pos:column="29"/></operator> <literal type="number" pos:line="21" pos:column="27">0<pos:position pos:line="21" pos:column="28"/></literal></expr>)<pos:position pos:line="21" pos:column="29"/></condition><then pos:line="21" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="17">glob_global<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <call><name pos:line="22" pos:column="31">git_env_bool<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><name pos:line="22" pos:column="44">GIT_GLOB_PATHSPECS_ENVIRONMENT<pos:position pos:line="22" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="76">0<pos:position pos:line="22" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="79"/></expr_stmt></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">glob_global<pos:position pos:line="23" pos:column="24"/></name></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">global_magic<pos:position pos:line="24" pos:column="29"/></name> <operator pos:line="24" pos:column="30">|=<pos:position pos:line="24" pos:column="32"/></operator> <name pos:line="24" pos:column="33">PATHSPEC_GLOB<pos:position pos:line="24" pos:column="46"/></name></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">noglob_global<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">&lt;<pos:position pos:line="26" pos:column="31"/></operator> <literal type="number" pos:line="26" pos:column="29">0<pos:position pos:line="26" pos:column="30"/></literal></expr>)<pos:position pos:line="26" pos:column="31"/></condition><then pos:line="26" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="17">noglob_global<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">=<pos:position pos:line="27" pos:column="32"/></operator> <call><name pos:line="27" pos:column="33">git_env_bool<pos:position pos:line="27" pos:column="45"/></name><argument_list pos:line="27" pos:column="45">(<argument><expr><name pos:line="27" pos:column="46">GIT_NOGLOB_PATHSPECS_ENVIRONMENT<pos:position pos:line="27" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="80">0<pos:position pos:line="27" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="83"/></expr_stmt></block></then></if>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">glob_global<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">&amp;&amp;<pos:position pos:line="29" pos:column="35"/></operator> <name pos:line="29" pos:column="28">noglob_global<pos:position pos:line="29" pos:column="41"/></name></expr>)<pos:position pos:line="29" pos:column="42"/></condition><then pos:line="29" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="17">die<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><call><name pos:line="30" pos:column="21">_<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><literal type="string" pos:line="30" pos:column="23">"global 'glob' and 'noglob' pathspec settings are incompatible"<pos:position pos:line="30" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="89"/></expr_stmt></block></then></if>


	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">icase_global<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">&lt;<pos:position pos:line="33" pos:column="30"/></operator> <literal type="number" pos:line="33" pos:column="28">0<pos:position pos:line="33" pos:column="29"/></literal></expr>)<pos:position pos:line="33" pos:column="30"/></condition><then pos:line="33" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="17">icase_global<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">=<pos:position pos:line="34" pos:column="31"/></operator> <call><name pos:line="34" pos:column="32">git_env_bool<pos:position pos:line="34" pos:column="44"/></name><argument_list pos:line="34" pos:column="44">(<argument><expr><name pos:line="34" pos:column="45">GIT_ICASE_PATHSPECS_ENVIRONMENT<pos:position pos:line="34" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="78">0<pos:position pos:line="34" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="81"/></expr_stmt></block></then></if>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">icase_global<pos:position pos:line="35" pos:column="25"/></name></expr>)<pos:position pos:line="35" pos:column="26"/></condition><then pos:line="35" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="17">global_magic<pos:position pos:line="36" pos:column="29"/></name> <operator pos:line="36" pos:column="30">|=<pos:position pos:line="36" pos:column="32"/></operator> <name pos:line="36" pos:column="33">PATHSPEC_ICASE<pos:position pos:line="36" pos:column="47"/></name></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt></block></then></if>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">(<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">global_magic<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">&amp;<pos:position pos:line="38" pos:column="32"/></operator> <name pos:line="38" pos:column="29">PATHSPEC_LITERAL<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">)<pos:position pos:line="38" pos:column="46"/></operator> <operator pos:line="38" pos:column="47">&amp;&amp;<pos:position pos:line="38" pos:column="57"/></operator>
	    <operator pos:line="39" pos:column="13">(<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">global_magic<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">&amp;<pos:position pos:line="39" pos:column="32"/></operator> <operator pos:line="39" pos:column="29">~<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">PATHSPEC_LITERAL<pos:position pos:line="39" pos:column="46"/></name><operator pos:line="39" pos:column="46">)<pos:position pos:line="39" pos:column="47"/></operator></expr>)<pos:position pos:line="39" pos:column="48"/></condition><then pos:line="39" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">die<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><call><name pos:line="40" pos:column="21">_<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><literal type="string" pos:line="40" pos:column="23">"global 'literal' pathspec setting is incompatible "<pos:position pos:line="40" pos:column="75"/></literal>
		      <literal type="string" pos:line="41" pos:column="23">"with all other global pathspec settings"<pos:position pos:line="41" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="67"/></expr_stmt></block></then></if>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">flags<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">&amp;<pos:position pos:line="43" pos:column="24"/></operator> <name pos:line="43" pos:column="21">PATHSPEC_LITERAL_PATH<pos:position pos:line="43" pos:column="42"/></name></expr>)<pos:position pos:line="43" pos:column="43"/></condition><then pos:line="43" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="17">global_magic<pos:position pos:line="44" pos:column="29"/></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <literal type="number" pos:line="44" pos:column="32">0<pos:position pos:line="44" pos:column="33"/></literal></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt></block></then></if>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name><name pos:line="46" pos:column="13">elt<pos:position pos:line="46" pos:column="16"/></name><index pos:line="46" pos:column="16">[<expr><literal type="number" pos:line="46" pos:column="17">0<pos:position pos:line="46" pos:column="18"/></literal></expr>]<pos:position pos:line="46" pos:column="19"/></index></name> <operator pos:line="46" pos:column="20">!=<pos:position pos:line="46" pos:column="22"/></operator> <literal type="char" pos:line="46" pos:column="23">':'<pos:position pos:line="46" pos:column="26"/></literal> <operator pos:line="46" pos:column="27">||<pos:position pos:line="46" pos:column="29"/></operator> <name pos:line="46" pos:column="30">literal_global<pos:position pos:line="46" pos:column="44"/></name> <operator pos:line="46" pos:column="45">||<pos:position pos:line="46" pos:column="47"/></operator>
	    <operator pos:line="47" pos:column="13">(<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">flags<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">&amp;<pos:position pos:line="47" pos:column="25"/></operator> <name pos:line="47" pos:column="22">PATHSPEC_LITERAL_PATH<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">)<pos:position pos:line="47" pos:column="44"/></operator></expr>)<pos:position pos:line="47" pos:column="45"/></condition><then pos:line="47" pos:column="45"> <block pos:line="47" pos:column="46">{
		<empty_stmt pos:line="48" pos:column="17">;<pos:position pos:line="48" pos:column="18"/></empty_stmt> <comment type="block" pos:line="48" pos:column="19">/* nothing to do */</comment>
	}<pos:position pos:line="49" pos:column="10"/></block></then> <elseif pos:line="49" pos:column="11">else <if pos:line="49" pos:column="16">if <condition pos:line="49" pos:column="19">(<expr><name><name pos:line="49" pos:column="20">elt<pos:position pos:line="49" pos:column="23"/></name><index pos:line="49" pos:column="23">[<expr><literal type="number" pos:line="49" pos:column="24">1<pos:position pos:line="49" pos:column="25"/></literal></expr>]<pos:position pos:line="49" pos:column="26"/></index></name> <operator pos:line="49" pos:column="27">==<pos:position pos:line="49" pos:column="29"/></operator> <literal type="char" pos:line="49" pos:column="30">'('<pos:position pos:line="49" pos:column="33"/></literal></expr>)<pos:position pos:line="49" pos:column="34"/></condition><then pos:line="49" pos:column="34"> <block pos:line="49" pos:column="35">{
		<comment type="block" pos:line="50" pos:column="17">/* longhand */</comment>
		<decl_stmt><decl><type><specifier pos:line="51" pos:column="17">const<pos:position pos:line="51" pos:column="22"/></specifier> <name pos:line="51" pos:column="23">char<pos:position pos:line="51" pos:column="27"/></name> <modifier pos:line="51" pos:column="28">*<pos:position pos:line="51" pos:column="29"/></modifier></type><name pos:line="51" pos:column="29">nextat<pos:position pos:line="51" pos:column="35"/></name></decl>;<pos:position pos:line="51" pos:column="36"/></decl_stmt>
		<for pos:line="52" pos:column="17">for <control pos:line="52" pos:column="21">(<init><expr><name pos:line="52" pos:column="22">copyfrom<pos:position pos:line="52" pos:column="30"/></name> <operator pos:line="52" pos:column="31">=<pos:position pos:line="52" pos:column="32"/></operator> <name pos:line="52" pos:column="33">elt<pos:position pos:line="52" pos:column="36"/></name> <operator pos:line="52" pos:column="37">+<pos:position pos:line="52" pos:column="38"/></operator> <literal type="number" pos:line="52" pos:column="39">2<pos:position pos:line="52" pos:column="40"/></literal></expr>;<pos:position pos:line="52" pos:column="41"/></init>
		     <condition><expr><operator pos:line="53" pos:column="22">*<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="23">copyfrom<pos:position pos:line="53" pos:column="31"/></name> <operator pos:line="53" pos:column="32">&amp;&amp;<pos:position pos:line="53" pos:column="42"/></operator> <operator pos:line="53" pos:column="35">*<pos:position pos:line="53" pos:column="36"/></operator><name pos:line="53" pos:column="36">copyfrom<pos:position pos:line="53" pos:column="44"/></name> <operator pos:line="53" pos:column="45">!=<pos:position pos:line="53" pos:column="47"/></operator> <literal type="char" pos:line="53" pos:column="48">')'<pos:position pos:line="53" pos:column="51"/></literal></expr>;<pos:position pos:line="53" pos:column="52"/></condition>
		     <incr><expr><name pos:line="54" pos:column="22">copyfrom<pos:position pos:line="54" pos:column="30"/></name> <operator pos:line="54" pos:column="31">=<pos:position pos:line="54" pos:column="32"/></operator> <name pos:line="54" pos:column="33">nextat<pos:position pos:line="54" pos:column="39"/></name></expr></incr>)<pos:position pos:line="54" pos:column="40"/></control> <block pos:line="54" pos:column="41">{
			<decl_stmt><decl><type><name pos:line="55" pos:column="25">size_t<pos:position pos:line="55" pos:column="31"/></name></type> <name pos:line="55" pos:column="32">len<pos:position pos:line="55" pos:column="35"/></name> <init pos:line="55" pos:column="36">= <expr><call><name pos:line="55" pos:column="38">strcspn<pos:position pos:line="55" pos:column="45"/></name><argument_list pos:line="55" pos:column="45">(<argument><expr><name pos:line="55" pos:column="46">copyfrom<pos:position pos:line="55" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="56">",)"<pos:position pos:line="55" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="55" pos:column="62"/></decl_stmt>
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><name><name pos:line="56" pos:column="29">copyfrom<pos:position pos:line="56" pos:column="37"/></name><index pos:line="56" pos:column="37">[<expr><name pos:line="56" pos:column="38">len<pos:position pos:line="56" pos:column="41"/></name></expr>]<pos:position pos:line="56" pos:column="42"/></index></name> <operator pos:line="56" pos:column="43">==<pos:position pos:line="56" pos:column="45"/></operator> <literal type="char" pos:line="56" pos:column="46">','<pos:position pos:line="56" pos:column="49"/></literal></expr>)<pos:position pos:line="56" pos:column="50"/></condition><then pos:line="56" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="33">nextat<pos:position pos:line="57" pos:column="39"/></name> <operator pos:line="57" pos:column="40">=<pos:position pos:line="57" pos:column="41"/></operator> <name pos:line="57" pos:column="42">copyfrom<pos:position pos:line="57" pos:column="50"/></name> <operator pos:line="57" pos:column="51">+<pos:position pos:line="57" pos:column="52"/></operator> <name pos:line="57" pos:column="53">len<pos:position pos:line="57" pos:column="56"/></name> <operator pos:line="57" pos:column="57">+<pos:position pos:line="57" pos:column="58"/></operator> <literal type="number" pos:line="57" pos:column="59">1<pos:position pos:line="57" pos:column="60"/></literal></expr>;<pos:position pos:line="57" pos:column="61"/></expr_stmt></block></then>
			<else pos:line="58" pos:column="25">else
				<comment type="block" pos:line="59" pos:column="33">/* handle ')' and '\0' */</comment>
				<block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="33">nextat<pos:position pos:line="60" pos:column="39"/></name> <operator pos:line="60" pos:column="40">=<pos:position pos:line="60" pos:column="41"/></operator> <name pos:line="60" pos:column="42">copyfrom<pos:position pos:line="60" pos:column="50"/></name> <operator pos:line="60" pos:column="51">+<pos:position pos:line="60" pos:column="52"/></operator> <name pos:line="60" pos:column="53">len<pos:position pos:line="60" pos:column="56"/></name></expr>;<pos:position pos:line="60" pos:column="57"/></expr_stmt></block></else></if>
			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><operator pos:line="61" pos:column="29">!<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="30">len<pos:position pos:line="61" pos:column="33"/></name></expr>)<pos:position pos:line="61" pos:column="34"/></condition><then pos:line="61" pos:column="34">
				<block type="pseudo"><continue pos:line="62" pos:column="33">continue;<pos:position pos:line="62" pos:column="42"/></continue></block></then></if>
			<for pos:line="63" pos:column="25">for <control pos:line="63" pos:column="29">(<init><expr><name pos:line="63" pos:column="30">i<pos:position pos:line="63" pos:column="31"/></name> <operator pos:line="63" pos:column="32">=<pos:position pos:line="63" pos:column="33"/></operator> <literal type="number" pos:line="63" pos:column="34">0<pos:position pos:line="63" pos:column="35"/></literal></expr>;<pos:position pos:line="63" pos:column="36"/></init> <condition><expr><name pos:line="63" pos:column="37">i<pos:position pos:line="63" pos:column="38"/></name> <operator pos:line="63" pos:column="39">&lt;<pos:position pos:line="63" pos:column="43"/></operator> <call><name pos:line="63" pos:column="41">ARRAY_SIZE<pos:position pos:line="63" pos:column="51"/></name><argument_list pos:line="63" pos:column="51">(<argument><expr><name pos:line="63" pos:column="52">pathspec_magic<pos:position pos:line="63" pos:column="66"/></name></expr></argument>)<pos:position pos:line="63" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="68"/></condition> <incr><expr><name pos:line="63" pos:column="69">i<pos:position pos:line="63" pos:column="70"/></name><operator pos:line="63" pos:column="70">++<pos:position pos:line="63" pos:column="72"/></operator></expr></incr>)<pos:position pos:line="63" pos:column="73"/></control> <block pos:line="63" pos:column="74">{
				<if pos:line="64" pos:column="33">if <condition pos:line="64" pos:column="36">(<expr><call><name pos:line="64" pos:column="37">strlen<pos:position pos:line="64" pos:column="43"/></name><argument_list pos:line="64" pos:column="43">(<argument><expr><name><name pos:line="64" pos:column="44">pathspec_magic<pos:position pos:line="64" pos:column="58"/></name><index pos:line="64" pos:column="58">[<expr><name pos:line="64" pos:column="59">i<pos:position pos:line="64" pos:column="60"/></name></expr>]<pos:position pos:line="64" pos:column="61"/></index></name><operator pos:line="64" pos:column="61">.<pos:position pos:line="64" pos:column="62"/></operator><name pos:line="64" pos:column="62">name<pos:position pos:line="64" pos:column="66"/></name></expr></argument>)<pos:position pos:line="64" pos:column="67"/></argument_list></call> <operator pos:line="64" pos:column="68">==<pos:position pos:line="64" pos:column="70"/></operator> <name pos:line="64" pos:column="71">len<pos:position pos:line="64" pos:column="74"/></name> <operator pos:line="64" pos:column="75">&amp;&amp;<pos:position pos:line="64" pos:column="85"/></operator>
				    <operator pos:line="65" pos:column="37">!<pos:position pos:line="65" pos:column="38"/></operator><call><name pos:line="65" pos:column="38">strncmp<pos:position pos:line="65" pos:column="45"/></name><argument_list pos:line="65" pos:column="45">(<argument><expr><name><name pos:line="65" pos:column="46">pathspec_magic<pos:position pos:line="65" pos:column="60"/></name><index pos:line="65" pos:column="60">[<expr><name pos:line="65" pos:column="61">i<pos:position pos:line="65" pos:column="62"/></name></expr>]<pos:position pos:line="65" pos:column="63"/></index></name><operator pos:line="65" pos:column="63">.<pos:position pos:line="65" pos:column="64"/></operator><name pos:line="65" pos:column="64">name<pos:position pos:line="65" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="70">copyfrom<pos:position pos:line="65" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="80">len<pos:position pos:line="65" pos:column="83"/></name></expr></argument>)<pos:position pos:line="65" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="85"/></condition><then pos:line="65" pos:column="85"> <block pos:line="65" pos:column="86">{
					<expr_stmt><expr><name pos:line="66" pos:column="41">magic<pos:position pos:line="66" pos:column="46"/></name> <operator pos:line="66" pos:column="47">|=<pos:position pos:line="66" pos:column="49"/></operator> <name><name pos:line="66" pos:column="50">pathspec_magic<pos:position pos:line="66" pos:column="64"/></name><index pos:line="66" pos:column="64">[<expr><name pos:line="66" pos:column="65">i<pos:position pos:line="66" pos:column="66"/></name></expr>]<pos:position pos:line="66" pos:column="67"/></index></name><operator pos:line="66" pos:column="67">.<pos:position pos:line="66" pos:column="68"/></operator><name pos:line="66" pos:column="68">bit<pos:position pos:line="66" pos:column="71"/></name></expr>;<pos:position pos:line="66" pos:column="72"/></expr_stmt>
					<break pos:line="67" pos:column="41">break;<pos:position pos:line="67" pos:column="47"/></break>
				}<pos:position pos:line="68" pos:column="34"/></block></then></if>
				<if pos:line="69" pos:column="33">if <condition pos:line="69" pos:column="36">(<expr><call><name pos:line="69" pos:column="37">starts_with<pos:position pos:line="69" pos:column="48"/></name><argument_list pos:line="69" pos:column="48">(<argument><expr><name pos:line="69" pos:column="49">copyfrom<pos:position pos:line="69" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="59">"prefix:"<pos:position pos:line="69" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="70"/></condition><then pos:line="69" pos:column="70"> <block pos:line="69" pos:column="71">{
					<decl_stmt><decl><type><name pos:line="70" pos:column="41">char<pos:position pos:line="70" pos:column="45"/></name> <modifier pos:line="70" pos:column="46">*<pos:position pos:line="70" pos:column="47"/></modifier></type><name pos:line="70" pos:column="47">endptr<pos:position pos:line="70" pos:column="53"/></name></decl>;<pos:position pos:line="70" pos:column="54"/></decl_stmt>
					<expr_stmt><expr><name pos:line="71" pos:column="41">pathspec_prefix<pos:position pos:line="71" pos:column="56"/></name> <operator pos:line="71" pos:column="57">=<pos:position pos:line="71" pos:column="58"/></operator> <call><name pos:line="71" pos:column="59">strtol<pos:position pos:line="71" pos:column="65"/></name><argument_list pos:line="71" pos:column="65">(<argument><expr><name pos:line="71" pos:column="66">copyfrom<pos:position pos:line="71" pos:column="74"/></name> <operator pos:line="71" pos:column="75">+<pos:position pos:line="71" pos:column="76"/></operator> <literal type="number" pos:line="71" pos:column="77">7<pos:position pos:line="71" pos:column="78"/></literal></expr></argument>,
								 <argument><expr><operator pos:line="72" pos:column="66">&amp;<pos:position pos:line="72" pos:column="71"/></operator><name pos:line="72" pos:column="67">endptr<pos:position pos:line="72" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="75">10<pos:position pos:line="72" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="79"/></expr_stmt>
					<if pos:line="73" pos:column="41">if <condition pos:line="73" pos:column="44">(<expr><name pos:line="73" pos:column="45">endptr<pos:position pos:line="73" pos:column="51"/></name> <operator pos:line="73" pos:column="52">-<pos:position pos:line="73" pos:column="53"/></operator> <name pos:line="73" pos:column="54">copyfrom<pos:position pos:line="73" pos:column="62"/></name> <operator pos:line="73" pos:column="63">!=<pos:position pos:line="73" pos:column="65"/></operator> <name pos:line="73" pos:column="66">len<pos:position pos:line="73" pos:column="69"/></name></expr>)<pos:position pos:line="73" pos:column="70"/></condition><then pos:line="73" pos:column="70">
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="49">die<pos:position pos:line="74" pos:column="52"/></name><argument_list pos:line="74" pos:column="52">(<argument><expr><call><name pos:line="74" pos:column="53">_<pos:position pos:line="74" pos:column="54"/></name><argument_list pos:line="74" pos:column="54">(<argument><expr><literal type="string" pos:line="74" pos:column="55">"invalid parameter for pathspec magic 'prefix'"<pos:position pos:line="74" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="103"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="105"/></expr_stmt></block></then></if>
					<comment type="block" pos:line="75" pos:column="41">/* "i" would be wrong, but it does not matter */</comment>
					<break pos:line="76" pos:column="41">break;<pos:position pos:line="76" pos:column="47"/></break>
				}<pos:position pos:line="77" pos:column="34"/></block></then></if>
			}<pos:position pos:line="78" pos:column="26"/></block></for>
			<if pos:line="79" pos:column="25">if <condition pos:line="79" pos:column="28">(<expr><call><name pos:line="79" pos:column="29">ARRAY_SIZE<pos:position pos:line="79" pos:column="39"/></name><argument_list pos:line="79" pos:column="39">(<argument><expr><name pos:line="79" pos:column="40">pathspec_magic<pos:position pos:line="79" pos:column="54"/></name></expr></argument>)<pos:position pos:line="79" pos:column="55"/></argument_list></call> <operator pos:line="79" pos:column="56">&lt;=<pos:position pos:line="79" pos:column="61"/></operator> <name pos:line="79" pos:column="59">i<pos:position pos:line="79" pos:column="60"/></name></expr>)<pos:position pos:line="79" pos:column="61"/></condition><then pos:line="79" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="80" pos:column="33">die<pos:position pos:line="80" pos:column="36"/></name><argument_list pos:line="80" pos:column="36">(<argument><expr><call><name pos:line="80" pos:column="37">_<pos:position pos:line="80" pos:column="38"/></name><argument_list pos:line="80" pos:column="38">(<argument><expr><literal type="string" pos:line="80" pos:column="39">"Invalid pathspec magic '%.*s' in '%s'"<pos:position pos:line="80" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="79"/></argument_list></call></expr></argument>,
				    <argument><expr><operator pos:line="81" pos:column="37">(<pos:position pos:line="81" pos:column="38"/></operator><name pos:line="81" pos:column="38">int<pos:position pos:line="81" pos:column="41"/></name><operator pos:line="81" pos:column="41">)<pos:position pos:line="81" pos:column="42"/></operator> <name pos:line="81" pos:column="43">len<pos:position pos:line="81" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="48">copyfrom<pos:position pos:line="81" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="58">elt<pos:position pos:line="81" pos:column="61"/></name></expr></argument>)<pos:position pos:line="81" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="63"/></expr_stmt></block></then></if>
		}<pos:position pos:line="82" pos:column="18"/></block></for>
		<if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><operator pos:line="83" pos:column="21">*<pos:position pos:line="83" pos:column="22"/></operator><name pos:line="83" pos:column="22">copyfrom<pos:position pos:line="83" pos:column="30"/></name> <operator pos:line="83" pos:column="31">!=<pos:position pos:line="83" pos:column="33"/></operator> <literal type="char" pos:line="83" pos:column="34">')'<pos:position pos:line="83" pos:column="37"/></literal></expr>)<pos:position pos:line="83" pos:column="38"/></condition><then pos:line="83" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="25">die<pos:position pos:line="84" pos:column="28"/></name><argument_list pos:line="84" pos:column="28">(<argument><expr><call><name pos:line="84" pos:column="29">_<pos:position pos:line="84" pos:column="30"/></name><argument_list pos:line="84" pos:column="30">(<argument><expr><literal type="string" pos:line="84" pos:column="31">"Missing ')' at the end of pathspec magic in '%s'"<pos:position pos:line="84" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="84" pos:column="84">elt<pos:position pos:line="84" pos:column="87"/></name></expr></argument>)<pos:position pos:line="84" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="89"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="85" pos:column="17">long_magic_end<pos:position pos:line="85" pos:column="31"/></name> <operator pos:line="85" pos:column="32">=<pos:position pos:line="85" pos:column="33"/></operator> <name pos:line="85" pos:column="34">copyfrom<pos:position pos:line="85" pos:column="42"/></name></expr>;<pos:position pos:line="85" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="86" pos:column="17">copyfrom<pos:position pos:line="86" pos:column="25"/></name><operator pos:line="86" pos:column="25">++<pos:position pos:line="86" pos:column="27"/></operator></expr>;<pos:position pos:line="86" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="87" pos:column="10"/></block></then></if></elseif> <else pos:line="87" pos:column="11">else <block pos:line="87" pos:column="16">{
		<comment type="block" pos:line="88" pos:column="17">/* shorthand */</comment>
		<for pos:line="89" pos:column="17">for <control pos:line="89" pos:column="21">(<init><expr><name pos:line="89" pos:column="22">copyfrom<pos:position pos:line="89" pos:column="30"/></name> <operator pos:line="89" pos:column="31">=<pos:position pos:line="89" pos:column="32"/></operator> <name pos:line="89" pos:column="33">elt<pos:position pos:line="89" pos:column="36"/></name> <operator pos:line="89" pos:column="37">+<pos:position pos:line="89" pos:column="38"/></operator> <literal type="number" pos:line="89" pos:column="39">1<pos:position pos:line="89" pos:column="40"/></literal></expr>;<pos:position pos:line="89" pos:column="41"/></init>
		     <condition><expr><operator pos:line="90" pos:column="22">*<pos:position pos:line="90" pos:column="23"/></operator><name pos:line="90" pos:column="23">copyfrom<pos:position pos:line="90" pos:column="31"/></name> <operator pos:line="90" pos:column="32">&amp;&amp;<pos:position pos:line="90" pos:column="42"/></operator> <operator pos:line="90" pos:column="35">*<pos:position pos:line="90" pos:column="36"/></operator><name pos:line="90" pos:column="36">copyfrom<pos:position pos:line="90" pos:column="44"/></name> <operator pos:line="90" pos:column="45">!=<pos:position pos:line="90" pos:column="47"/></operator> <literal type="char" pos:line="90" pos:column="48">':'<pos:position pos:line="90" pos:column="51"/></literal></expr>;<pos:position pos:line="90" pos:column="52"/></condition>
		     <incr><expr><name pos:line="91" pos:column="22">copyfrom<pos:position pos:line="91" pos:column="30"/></name><operator pos:line="91" pos:column="30">++<pos:position pos:line="91" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="91" pos:column="33"/></control> <block pos:line="91" pos:column="34">{
			<decl_stmt><decl><type><name pos:line="92" pos:column="25">char<pos:position pos:line="92" pos:column="29"/></name></type> <name pos:line="92" pos:column="30">ch<pos:position pos:line="92" pos:column="32"/></name> <init pos:line="92" pos:column="33">= <expr><operator pos:line="92" pos:column="35">*<pos:position pos:line="92" pos:column="36"/></operator><name pos:line="92" pos:column="36">copyfrom<pos:position pos:line="92" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="92" pos:column="45"/></decl_stmt>

			<if pos:line="94" pos:column="25">if <condition pos:line="94" pos:column="28">(<expr><operator pos:line="94" pos:column="29">!<pos:position pos:line="94" pos:column="30"/></operator><call><name pos:line="94" pos:column="30">is_pathspec_magic<pos:position pos:line="94" pos:column="47"/></name><argument_list pos:line="94" pos:column="47">(<argument><expr><name pos:line="94" pos:column="48">ch<pos:position pos:line="94" pos:column="50"/></name></expr></argument>)<pos:position pos:line="94" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="52"/></condition><then pos:line="94" pos:column="52">
				<block type="pseudo"><break pos:line="95" pos:column="33">break;<pos:position pos:line="95" pos:column="39"/></break></block></then></if>
			<for pos:line="96" pos:column="25">for <control pos:line="96" pos:column="29">(<init><expr><name pos:line="96" pos:column="30">i<pos:position pos:line="96" pos:column="31"/></name> <operator pos:line="96" pos:column="32">=<pos:position pos:line="96" pos:column="33"/></operator> <literal type="number" pos:line="96" pos:column="34">0<pos:position pos:line="96" pos:column="35"/></literal></expr>;<pos:position pos:line="96" pos:column="36"/></init> <condition><expr><name pos:line="96" pos:column="37">i<pos:position pos:line="96" pos:column="38"/></name> <operator pos:line="96" pos:column="39">&lt;<pos:position pos:line="96" pos:column="43"/></operator> <call><name pos:line="96" pos:column="41">ARRAY_SIZE<pos:position pos:line="96" pos:column="51"/></name><argument_list pos:line="96" pos:column="51">(<argument><expr><name pos:line="96" pos:column="52">pathspec_magic<pos:position pos:line="96" pos:column="66"/></name></expr></argument>)<pos:position pos:line="96" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="68"/></condition> <incr><expr><name pos:line="96" pos:column="69">i<pos:position pos:line="96" pos:column="70"/></name><operator pos:line="96" pos:column="70">++<pos:position pos:line="96" pos:column="72"/></operator></expr></incr>)<pos:position pos:line="96" pos:column="73"/></control>
				<block type="pseudo"><if pos:line="97" pos:column="33">if <condition pos:line="97" pos:column="36">(<expr><name><name pos:line="97" pos:column="37">pathspec_magic<pos:position pos:line="97" pos:column="51"/></name><index pos:line="97" pos:column="51">[<expr><name pos:line="97" pos:column="52">i<pos:position pos:line="97" pos:column="53"/></name></expr>]<pos:position pos:line="97" pos:column="54"/></index></name><operator pos:line="97" pos:column="54">.<pos:position pos:line="97" pos:column="55"/></operator><name pos:line="97" pos:column="55">mnemonic<pos:position pos:line="97" pos:column="63"/></name> <operator pos:line="97" pos:column="64">==<pos:position pos:line="97" pos:column="66"/></operator> <name pos:line="97" pos:column="67">ch<pos:position pos:line="97" pos:column="69"/></name></expr>)<pos:position pos:line="97" pos:column="70"/></condition><then pos:line="97" pos:column="70"> <block pos:line="97" pos:column="71">{
					<expr_stmt><expr><name pos:line="98" pos:column="41">short_magic<pos:position pos:line="98" pos:column="52"/></name> <operator pos:line="98" pos:column="53">|=<pos:position pos:line="98" pos:column="55"/></operator> <name><name pos:line="98" pos:column="56">pathspec_magic<pos:position pos:line="98" pos:column="70"/></name><index pos:line="98" pos:column="70">[<expr><name pos:line="98" pos:column="71">i<pos:position pos:line="98" pos:column="72"/></name></expr>]<pos:position pos:line="98" pos:column="73"/></index></name><operator pos:line="98" pos:column="73">.<pos:position pos:line="98" pos:column="74"/></operator><name pos:line="98" pos:column="74">bit<pos:position pos:line="98" pos:column="77"/></name></expr>;<pos:position pos:line="98" pos:column="78"/></expr_stmt>
					<break pos:line="99" pos:column="41">break;<pos:position pos:line="99" pos:column="47"/></break>
				}<pos:position pos:line="100" pos:column="34"/></block></then></if></block></for>
			<if pos:line="101" pos:column="25">if <condition pos:line="101" pos:column="28">(<expr><call><name pos:line="101" pos:column="29">ARRAY_SIZE<pos:position pos:line="101" pos:column="39"/></name><argument_list pos:line="101" pos:column="39">(<argument><expr><name pos:line="101" pos:column="40">pathspec_magic<pos:position pos:line="101" pos:column="54"/></name></expr></argument>)<pos:position pos:line="101" pos:column="55"/></argument_list></call> <operator pos:line="101" pos:column="56">&lt;=<pos:position pos:line="101" pos:column="61"/></operator> <name pos:line="101" pos:column="59">i<pos:position pos:line="101" pos:column="60"/></name></expr>)<pos:position pos:line="101" pos:column="61"/></condition><then pos:line="101" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="33">die<pos:position pos:line="102" pos:column="36"/></name><argument_list pos:line="102" pos:column="36">(<argument><expr><call><name pos:line="102" pos:column="37">_<pos:position pos:line="102" pos:column="38"/></name><argument_list pos:line="102" pos:column="38">(<argument><expr><literal type="string" pos:line="102" pos:column="39">"Unimplemented pathspec magic '%c' in '%s'"<pos:position pos:line="102" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="83"/></argument_list></call></expr></argument>,
				    <argument><expr><name pos:line="103" pos:column="37">ch<pos:position pos:line="103" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="41">elt<pos:position pos:line="103" pos:column="44"/></name></expr></argument>)<pos:position pos:line="103" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="46"/></expr_stmt></block></then></if>
		}<pos:position pos:line="104" pos:column="18"/></block></for>
		<if pos:line="105" pos:column="17">if <condition pos:line="105" pos:column="20">(<expr><operator pos:line="105" pos:column="21">*<pos:position pos:line="105" pos:column="22"/></operator><name pos:line="105" pos:column="22">copyfrom<pos:position pos:line="105" pos:column="30"/></name> <operator pos:line="105" pos:column="31">==<pos:position pos:line="105" pos:column="33"/></operator> <literal type="char" pos:line="105" pos:column="34">':'<pos:position pos:line="105" pos:column="37"/></literal></expr>)<pos:position pos:line="105" pos:column="38"/></condition><then pos:line="105" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name pos:line="106" pos:column="25">copyfrom<pos:position pos:line="106" pos:column="33"/></name><operator pos:line="106" pos:column="33">++<pos:position pos:line="106" pos:column="35"/></operator></expr>;<pos:position pos:line="106" pos:column="36"/></expr_stmt></block></then></if>
	}<pos:position pos:line="107" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="109" pos:column="9">magic<pos:position pos:line="109" pos:column="14"/></name> <operator pos:line="109" pos:column="15">|=<pos:position pos:line="109" pos:column="17"/></operator> <name pos:line="109" pos:column="18">short_magic<pos:position pos:line="109" pos:column="29"/></name></expr>;<pos:position pos:line="109" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="110" pos:column="9">*<pos:position pos:line="110" pos:column="10"/></operator><name pos:line="110" pos:column="10">p_short_magic<pos:position pos:line="110" pos:column="23"/></name> <operator pos:line="110" pos:column="24">=<pos:position pos:line="110" pos:column="25"/></operator> <name pos:line="110" pos:column="26">short_magic<pos:position pos:line="110" pos:column="37"/></name></expr>;<pos:position pos:line="110" pos:column="38"/></expr_stmt>

	<comment type="block" pos:line="112" pos:column="9">/* --noglob-pathspec adds :(literal) _unless_ :(glob) is specified */</comment>
	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name pos:line="113" pos:column="13">noglob_global<pos:position pos:line="113" pos:column="26"/></name> <operator pos:line="113" pos:column="27">&amp;&amp;<pos:position pos:line="113" pos:column="37"/></operator> <operator pos:line="113" pos:column="30">!<pos:position pos:line="113" pos:column="31"/></operator><operator pos:line="113" pos:column="31">(<pos:position pos:line="113" pos:column="32"/></operator><name pos:line="113" pos:column="32">magic<pos:position pos:line="113" pos:column="37"/></name> <operator pos:line="113" pos:column="38">&amp;<pos:position pos:line="113" pos:column="43"/></operator> <name pos:line="113" pos:column="40">PATHSPEC_GLOB<pos:position pos:line="113" pos:column="53"/></name><operator pos:line="113" pos:column="53">)<pos:position pos:line="113" pos:column="54"/></operator></expr>)<pos:position pos:line="113" pos:column="55"/></condition><then pos:line="113" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><name pos:line="114" pos:column="17">global_magic<pos:position pos:line="114" pos:column="29"/></name> <operator pos:line="114" pos:column="30">|=<pos:position pos:line="114" pos:column="32"/></operator> <name pos:line="114" pos:column="33">PATHSPEC_LITERAL<pos:position pos:line="114" pos:column="49"/></name></expr>;<pos:position pos:line="114" pos:column="50"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="116" pos:column="9">/* --glob-pathspec is overridden by :(literal) */</comment>
	<if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><operator pos:line="117" pos:column="13">(<pos:position pos:line="117" pos:column="14"/></operator><name pos:line="117" pos:column="14">global_magic<pos:position pos:line="117" pos:column="26"/></name> <operator pos:line="117" pos:column="27">&amp;<pos:position pos:line="117" pos:column="32"/></operator> <name pos:line="117" pos:column="29">PATHSPEC_GLOB<pos:position pos:line="117" pos:column="42"/></name><operator pos:line="117" pos:column="42">)<pos:position pos:line="117" pos:column="43"/></operator> <operator pos:line="117" pos:column="44">&amp;&amp;<pos:position pos:line="117" pos:column="54"/></operator> <operator pos:line="117" pos:column="47">(<pos:position pos:line="117" pos:column="48"/></operator><name pos:line="117" pos:column="48">magic<pos:position pos:line="117" pos:column="53"/></name> <operator pos:line="117" pos:column="54">&amp;<pos:position pos:line="117" pos:column="59"/></operator> <name pos:line="117" pos:column="56">PATHSPEC_LITERAL<pos:position pos:line="117" pos:column="72"/></name><operator pos:line="117" pos:column="72">)<pos:position pos:line="117" pos:column="73"/></operator></expr>)<pos:position pos:line="117" pos:column="74"/></condition><then pos:line="117" pos:column="74">
		<block type="pseudo"><expr_stmt><expr><name pos:line="118" pos:column="17">global_magic<pos:position pos:line="118" pos:column="29"/></name> <operator pos:line="118" pos:column="30">&amp;=<pos:position pos:line="118" pos:column="36"/></operator> <operator pos:line="118" pos:column="33">~<pos:position pos:line="118" pos:column="34"/></operator><name pos:line="118" pos:column="34">PATHSPEC_GLOB<pos:position pos:line="118" pos:column="47"/></name></expr>;<pos:position pos:line="118" pos:column="48"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="120" pos:column="9">magic<pos:position pos:line="120" pos:column="14"/></name> <operator pos:line="120" pos:column="15">|=<pos:position pos:line="120" pos:column="17"/></operator> <name pos:line="120" pos:column="18">global_magic<pos:position pos:line="120" pos:column="30"/></name></expr>;<pos:position pos:line="120" pos:column="31"/></expr_stmt>

	<if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><name pos:line="122" pos:column="13">pathspec_prefix<pos:position pos:line="122" pos:column="28"/></name> <operator pos:line="122" pos:column="29">&gt;=<pos:position pos:line="122" pos:column="34"/></operator> <literal type="number" pos:line="122" pos:column="32">0<pos:position pos:line="122" pos:column="33"/></literal> <operator pos:line="122" pos:column="34">&amp;&amp;<pos:position pos:line="122" pos:column="44"/></operator>
	    <operator pos:line="123" pos:column="13">(<pos:position pos:line="123" pos:column="14"/></operator><name pos:line="123" pos:column="14">prefixlen<pos:position pos:line="123" pos:column="23"/></name> <operator pos:line="123" pos:column="24">||<pos:position pos:line="123" pos:column="26"/></operator> <operator pos:line="123" pos:column="27">(<pos:position pos:line="123" pos:column="28"/></operator><name pos:line="123" pos:column="28">prefix<pos:position pos:line="123" pos:column="34"/></name> <operator pos:line="123" pos:column="35">&amp;&amp;<pos:position pos:line="123" pos:column="45"/></operator> <operator pos:line="123" pos:column="38">*<pos:position pos:line="123" pos:column="39"/></operator><name pos:line="123" pos:column="39">prefix<pos:position pos:line="123" pos:column="45"/></name><operator pos:line="123" pos:column="45">)<pos:position pos:line="123" pos:column="46"/></operator><operator pos:line="123" pos:column="46">)<pos:position pos:line="123" pos:column="47"/></operator></expr>)<pos:position pos:line="123" pos:column="48"/></condition><then pos:line="123" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="124" pos:column="17">die<pos:position pos:line="124" pos:column="20"/></name><argument_list pos:line="124" pos:column="20">(<argument><expr><literal type="string" pos:line="124" pos:column="21">"BUG: 'prefix' magic is supposed to be used at worktree's root"<pos:position pos:line="124" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="86"/></expr_stmt></block></then></if>

	<if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><operator pos:line="126" pos:column="13">(<pos:position pos:line="126" pos:column="14"/></operator><name pos:line="126" pos:column="14">magic<pos:position pos:line="126" pos:column="19"/></name> <operator pos:line="126" pos:column="20">&amp;<pos:position pos:line="126" pos:column="25"/></operator> <name pos:line="126" pos:column="22">PATHSPEC_LITERAL<pos:position pos:line="126" pos:column="38"/></name><operator pos:line="126" pos:column="38">)<pos:position pos:line="126" pos:column="39"/></operator> <operator pos:line="126" pos:column="40">&amp;&amp;<pos:position pos:line="126" pos:column="50"/></operator> <operator pos:line="126" pos:column="43">(<pos:position pos:line="126" pos:column="44"/></operator><name pos:line="126" pos:column="44">magic<pos:position pos:line="126" pos:column="49"/></name> <operator pos:line="126" pos:column="50">&amp;<pos:position pos:line="126" pos:column="55"/></operator> <name pos:line="126" pos:column="52">PATHSPEC_GLOB<pos:position pos:line="126" pos:column="65"/></name><operator pos:line="126" pos:column="65">)<pos:position pos:line="126" pos:column="66"/></operator></expr>)<pos:position pos:line="126" pos:column="67"/></condition><then pos:line="126" pos:column="67">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="127" pos:column="17">die<pos:position pos:line="127" pos:column="20"/></name><argument_list pos:line="127" pos:column="20">(<argument><expr><call><name pos:line="127" pos:column="21">_<pos:position pos:line="127" pos:column="22"/></name><argument_list pos:line="127" pos:column="22">(<argument><expr><literal type="string" pos:line="127" pos:column="23">"%s: 'literal' and 'glob' are incompatible"<pos:position pos:line="127" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="127" pos:column="69">elt<pos:position pos:line="127" pos:column="72"/></name></expr></argument>)<pos:position pos:line="127" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="74"/></expr_stmt></block></then></if>

	<if pos:line="129" pos:column="9">if <condition pos:line="129" pos:column="12">(<expr><name pos:line="129" pos:column="13">pathspec_prefix<pos:position pos:line="129" pos:column="28"/></name> <operator pos:line="129" pos:column="29">&gt;=<pos:position pos:line="129" pos:column="34"/></operator> <literal type="number" pos:line="129" pos:column="32">0<pos:position pos:line="129" pos:column="33"/></literal></expr>)<pos:position pos:line="129" pos:column="34"/></condition><then pos:line="129" pos:column="34"> <block pos:line="129" pos:column="35">{
		<expr_stmt><expr><name pos:line="130" pos:column="17">match<pos:position pos:line="130" pos:column="22"/></name> <operator pos:line="130" pos:column="23">=<pos:position pos:line="130" pos:column="24"/></operator> <call><name pos:line="130" pos:column="25">xstrdup<pos:position pos:line="130" pos:column="32"/></name><argument_list pos:line="130" pos:column="32">(<argument><expr><name pos:line="130" pos:column="33">copyfrom<pos:position pos:line="130" pos:column="41"/></name></expr></argument>)<pos:position pos:line="130" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="131" pos:column="17">prefixlen<pos:position pos:line="131" pos:column="26"/></name> <operator pos:line="131" pos:column="27">=<pos:position pos:line="131" pos:column="28"/></operator> <name pos:line="131" pos:column="29">pathspec_prefix<pos:position pos:line="131" pos:column="44"/></name></expr>;<pos:position pos:line="131" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="132" pos:column="10"/></block></then> <elseif pos:line="132" pos:column="11">else <if pos:line="132" pos:column="16">if <condition pos:line="132" pos:column="19">(<expr><name pos:line="132" pos:column="20">magic<pos:position pos:line="132" pos:column="25"/></name> <operator pos:line="132" pos:column="26">&amp;<pos:position pos:line="132" pos:column="31"/></operator> <name pos:line="132" pos:column="28">PATHSPEC_FROMTOP<pos:position pos:line="132" pos:column="44"/></name></expr>)<pos:position pos:line="132" pos:column="45"/></condition><then pos:line="132" pos:column="45"> <block pos:line="132" pos:column="46">{
		<expr_stmt><expr><name pos:line="133" pos:column="17">match<pos:position pos:line="133" pos:column="22"/></name> <operator pos:line="133" pos:column="23">=<pos:position pos:line="133" pos:column="24"/></operator> <call><name pos:line="133" pos:column="25">xstrdup<pos:position pos:line="133" pos:column="32"/></name><argument_list pos:line="133" pos:column="32">(<argument><expr><name pos:line="133" pos:column="33">copyfrom<pos:position pos:line="133" pos:column="41"/></name></expr></argument>)<pos:position pos:line="133" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="134" pos:column="17">prefixlen<pos:position pos:line="134" pos:column="26"/></name> <operator pos:line="134" pos:column="27">=<pos:position pos:line="134" pos:column="28"/></operator> <literal type="number" pos:line="134" pos:column="29">0<pos:position pos:line="134" pos:column="30"/></literal></expr>;<pos:position pos:line="134" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="135" pos:column="10"/></block></then></if></elseif> <else pos:line="135" pos:column="11">else <block pos:line="135" pos:column="16">{
		<expr_stmt><expr><name pos:line="136" pos:column="17">match<pos:position pos:line="136" pos:column="22"/></name> <operator pos:line="136" pos:column="23">=<pos:position pos:line="136" pos:column="24"/></operator> <call><name pos:line="136" pos:column="25">prefix_path_gently<pos:position pos:line="136" pos:column="43"/></name><argument_list pos:line="136" pos:column="43">(<argument><expr><name pos:line="136" pos:column="44">prefix<pos:position pos:line="136" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="52">prefixlen<pos:position pos:line="136" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="136" pos:column="63">&amp;<pos:position pos:line="136" pos:column="68"/></operator><name pos:line="136" pos:column="64">prefixlen<pos:position pos:line="136" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="75">copyfrom<pos:position pos:line="136" pos:column="83"/></name></expr></argument>)<pos:position pos:line="136" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="85"/></expr_stmt>
		<if pos:line="137" pos:column="17">if <condition pos:line="137" pos:column="20">(<expr><operator pos:line="137" pos:column="21">!<pos:position pos:line="137" pos:column="22"/></operator><name pos:line="137" pos:column="22">match<pos:position pos:line="137" pos:column="27"/></name></expr>)<pos:position pos:line="137" pos:column="28"/></condition><then pos:line="137" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="138" pos:column="25">die<pos:position pos:line="138" pos:column="28"/></name><argument_list pos:line="138" pos:column="28">(<argument><expr><call><name pos:line="138" pos:column="29">_<pos:position pos:line="138" pos:column="30"/></name><argument_list pos:line="138" pos:column="30">(<argument><expr><literal type="string" pos:line="138" pos:column="31">"%s: '%s' is outside repository"<pos:position pos:line="138" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="138" pos:column="66">elt<pos:position pos:line="138" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="71">copyfrom<pos:position pos:line="138" pos:column="79"/></name></expr></argument>)<pos:position pos:line="138" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="81"/></expr_stmt></block></then></if>
	}<pos:position pos:line="139" pos:column="10"/></block></else></if>
	<expr_stmt><expr><operator pos:line="140" pos:column="9">*<pos:position pos:line="140" pos:column="10"/></operator><name pos:line="140" pos:column="10">raw<pos:position pos:line="140" pos:column="13"/></name> <operator pos:line="140" pos:column="14">=<pos:position pos:line="140" pos:column="15"/></operator> <name><name pos:line="140" pos:column="16">item<pos:position pos:line="140" pos:column="20"/></name><operator pos:line="140" pos:column="20">-&gt;<pos:position pos:line="140" pos:column="25"/></operator><name pos:line="140" pos:column="22">match<pos:position pos:line="140" pos:column="27"/></name></name> <operator pos:line="140" pos:column="28">=<pos:position pos:line="140" pos:column="29"/></operator> <name pos:line="140" pos:column="30">match<pos:position pos:line="140" pos:column="35"/></name></expr>;<pos:position pos:line="140" pos:column="36"/></expr_stmt>
	<comment type="block" pos:line="141" pos:column="9">/*
	 * Prefix the pathspec (keep all magic) and assign to
	 * original. Useful for passing to another command.
	 */</comment>
	<if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><name pos:line="145" pos:column="13">flags<pos:position pos:line="145" pos:column="18"/></name> <operator pos:line="145" pos:column="19">&amp;<pos:position pos:line="145" pos:column="24"/></operator> <name pos:line="145" pos:column="21">PATHSPEC_PREFIX_ORIGIN<pos:position pos:line="145" pos:column="43"/></name></expr>)<pos:position pos:line="145" pos:column="44"/></condition><then pos:line="145" pos:column="44"> <block pos:line="145" pos:column="45">{
		<decl_stmt><decl><type><name><name pos:line="146" pos:column="17">struct<pos:position pos:line="146" pos:column="23"/></name> <name pos:line="146" pos:column="24">strbuf<pos:position pos:line="146" pos:column="30"/></name></name></type> <name pos:line="146" pos:column="31">sb<pos:position pos:line="146" pos:column="33"/></name> <init pos:line="146" pos:column="34">= <expr><name pos:line="146" pos:column="36">STRBUF_INIT<pos:position pos:line="146" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="146" pos:column="48"/></decl_stmt>
		<if pos:line="147" pos:column="17">if <condition pos:line="147" pos:column="20">(<expr><name pos:line="147" pos:column="21">prefixlen<pos:position pos:line="147" pos:column="30"/></name> <operator pos:line="147" pos:column="31">&amp;&amp;<pos:position pos:line="147" pos:column="41"/></operator> <operator pos:line="147" pos:column="34">!<pos:position pos:line="147" pos:column="35"/></operator><name pos:line="147" pos:column="35">literal_global<pos:position pos:line="147" pos:column="49"/></name></expr>)<pos:position pos:line="147" pos:column="50"/></condition><then pos:line="147" pos:column="50"> <block pos:line="147" pos:column="51">{
			<comment type="block" pos:line="148" pos:column="25">/* Preserve the actual prefix length of each pattern */</comment>
			<if pos:line="149" pos:column="25">if <condition pos:line="149" pos:column="28">(<expr><name pos:line="149" pos:column="29">short_magic<pos:position pos:line="149" pos:column="40"/></name></expr>)<pos:position pos:line="149" pos:column="41"/></condition><then pos:line="149" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="150" pos:column="33">prefix_short_magic<pos:position pos:line="150" pos:column="51"/></name><argument_list pos:line="150" pos:column="51">(<argument><expr><operator pos:line="150" pos:column="52">&amp;<pos:position pos:line="150" pos:column="57"/></operator><name pos:line="150" pos:column="53">sb<pos:position pos:line="150" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="57">prefixlen<pos:position pos:line="150" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="68">short_magic<pos:position pos:line="150" pos:column="79"/></name></expr></argument>)<pos:position pos:line="150" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="81"/></expr_stmt></block></then>
			<elseif pos:line="151" pos:column="25">else <if pos:line="151" pos:column="30">if <condition pos:line="151" pos:column="33">(<expr><name pos:line="151" pos:column="34">long_magic_end<pos:position pos:line="151" pos:column="48"/></name></expr>)<pos:position pos:line="151" pos:column="49"/></condition><then pos:line="151" pos:column="49"> <block pos:line="151" pos:column="50">{
				<expr_stmt><expr><call><name pos:line="152" pos:column="33">strbuf_add<pos:position pos:line="152" pos:column="43"/></name><argument_list pos:line="152" pos:column="43">(<argument><expr><operator pos:line="152" pos:column="44">&amp;<pos:position pos:line="152" pos:column="49"/></operator><name pos:line="152" pos:column="45">sb<pos:position pos:line="152" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="49">elt<pos:position pos:line="152" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="54">long_magic_end<pos:position pos:line="152" pos:column="68"/></name> <operator pos:line="152" pos:column="69">-<pos:position pos:line="152" pos:column="70"/></operator> <name pos:line="152" pos:column="71">elt<pos:position pos:line="152" pos:column="74"/></name></expr></argument>)<pos:position pos:line="152" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="76"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="153" pos:column="33">strbuf_addf<pos:position pos:line="153" pos:column="44"/></name><argument_list pos:line="153" pos:column="44">(<argument><expr><operator pos:line="153" pos:column="45">&amp;<pos:position pos:line="153" pos:column="50"/></operator><name pos:line="153" pos:column="46">sb<pos:position pos:line="153" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="50">",prefix:%d)"<pos:position pos:line="153" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="65">prefixlen<pos:position pos:line="153" pos:column="74"/></name></expr></argument>)<pos:position pos:line="153" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="76"/></expr_stmt>
			}<pos:position pos:line="154" pos:column="26"/></block></then></if></elseif> <else pos:line="154" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="155" pos:column="33">strbuf_addf<pos:position pos:line="155" pos:column="44"/></name><argument_list pos:line="155" pos:column="44">(<argument><expr><operator pos:line="155" pos:column="45">&amp;<pos:position pos:line="155" pos:column="50"/></operator><name pos:line="155" pos:column="46">sb<pos:position pos:line="155" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="50">":(prefix:%d)"<pos:position pos:line="155" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="155" pos:column="66">prefixlen<pos:position pos:line="155" pos:column="75"/></name></expr></argument>)<pos:position pos:line="155" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="77"/></expr_stmt></block></else></if>
		}<pos:position pos:line="156" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="157" pos:column="17">strbuf_addstr<pos:position pos:line="157" pos:column="30"/></name><argument_list pos:line="157" pos:column="30">(<argument><expr><operator pos:line="157" pos:column="31">&amp;<pos:position pos:line="157" pos:column="36"/></operator><name pos:line="157" pos:column="32">sb<pos:position pos:line="157" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="36">match<pos:position pos:line="157" pos:column="41"/></name></expr></argument>)<pos:position pos:line="157" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="158" pos:column="17">item<pos:position pos:line="158" pos:column="21"/></name><operator pos:line="158" pos:column="21">-&gt;<pos:position pos:line="158" pos:column="26"/></operator><name pos:line="158" pos:column="23">original<pos:position pos:line="158" pos:column="31"/></name></name> <operator pos:line="158" pos:column="32">=<pos:position pos:line="158" pos:column="33"/></operator> <call><name pos:line="158" pos:column="34">strbuf_detach<pos:position pos:line="158" pos:column="47"/></name><argument_list pos:line="158" pos:column="47">(<argument><expr><operator pos:line="158" pos:column="48">&amp;<pos:position pos:line="158" pos:column="53"/></operator><name pos:line="158" pos:column="49">sb<pos:position pos:line="158" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="53">NULL<pos:position pos:line="158" pos:column="57"/></name></expr></argument>)<pos:position pos:line="158" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="159" pos:column="10"/></block></then> <else pos:line="159" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="160" pos:column="17">item<pos:position pos:line="160" pos:column="21"/></name><operator pos:line="160" pos:column="21">-&gt;<pos:position pos:line="160" pos:column="26"/></operator><name pos:line="160" pos:column="23">original<pos:position pos:line="160" pos:column="31"/></name></name> <operator pos:line="160" pos:column="32">=<pos:position pos:line="160" pos:column="33"/></operator> <name pos:line="160" pos:column="34">elt<pos:position pos:line="160" pos:column="37"/></name></expr>;<pos:position pos:line="160" pos:column="38"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name><name pos:line="161" pos:column="9">item<pos:position pos:line="161" pos:column="13"/></name><operator pos:line="161" pos:column="13">-&gt;<pos:position pos:line="161" pos:column="18"/></operator><name pos:line="161" pos:column="15">len<pos:position pos:line="161" pos:column="18"/></name></name> <operator pos:line="161" pos:column="19">=<pos:position pos:line="161" pos:column="20"/></operator> <call><name pos:line="161" pos:column="21">strlen<pos:position pos:line="161" pos:column="27"/></name><argument_list pos:line="161" pos:column="27">(<argument><expr><name><name pos:line="161" pos:column="28">item<pos:position pos:line="161" pos:column="32"/></name><operator pos:line="161" pos:column="32">-&gt;<pos:position pos:line="161" pos:column="37"/></operator><name pos:line="161" pos:column="34">match<pos:position pos:line="161" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="161" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="162" pos:column="9">item<pos:position pos:line="162" pos:column="13"/></name><operator pos:line="162" pos:column="13">-&gt;<pos:position pos:line="162" pos:column="18"/></operator><name pos:line="162" pos:column="15">prefix<pos:position pos:line="162" pos:column="21"/></name></name> <operator pos:line="162" pos:column="22">=<pos:position pos:line="162" pos:column="23"/></operator> <name pos:line="162" pos:column="24">prefixlen<pos:position pos:line="162" pos:column="33"/></name></expr>;<pos:position pos:line="162" pos:column="34"/></expr_stmt>

	<if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><operator pos:line="164" pos:column="13">(<pos:position pos:line="164" pos:column="14"/></operator><name pos:line="164" pos:column="14">flags<pos:position pos:line="164" pos:column="19"/></name> <operator pos:line="164" pos:column="20">&amp;<pos:position pos:line="164" pos:column="25"/></operator> <name pos:line="164" pos:column="22">PATHSPEC_STRIP_SUBMODULE_SLASH_CHEAP<pos:position pos:line="164" pos:column="58"/></name><operator pos:line="164" pos:column="58">)<pos:position pos:line="164" pos:column="59"/></operator> <operator pos:line="164" pos:column="60">&amp;&amp;<pos:position pos:line="164" pos:column="70"/></operator>
	    <operator pos:line="165" pos:column="13">(<pos:position pos:line="165" pos:column="14"/></operator><name><name pos:line="165" pos:column="14">item<pos:position pos:line="165" pos:column="18"/></name><operator pos:line="165" pos:column="18">-&gt;<pos:position pos:line="165" pos:column="23"/></operator><name pos:line="165" pos:column="20">len<pos:position pos:line="165" pos:column="23"/></name></name> <operator pos:line="165" pos:column="24">&gt;=<pos:position pos:line="165" pos:column="29"/></operator> <literal type="number" pos:line="165" pos:column="27">1<pos:position pos:line="165" pos:column="28"/></literal> <operator pos:line="165" pos:column="29">&amp;&amp;<pos:position pos:line="165" pos:column="39"/></operator> <name><name pos:line="165" pos:column="32">item<pos:position pos:line="165" pos:column="36"/></name><operator pos:line="165" pos:column="36">-&gt;<pos:position pos:line="165" pos:column="41"/></operator><name pos:line="165" pos:column="38">match<pos:position pos:line="165" pos:column="43"/></name><index pos:line="165" pos:column="43">[<expr><name><name pos:line="165" pos:column="44">item<pos:position pos:line="165" pos:column="48"/></name><operator pos:line="165" pos:column="48">-&gt;<pos:position pos:line="165" pos:column="53"/></operator><name pos:line="165" pos:column="50">len<pos:position pos:line="165" pos:column="53"/></name></name> <operator pos:line="165" pos:column="54">-<pos:position pos:line="165" pos:column="55"/></operator> <literal type="number" pos:line="165" pos:column="56">1<pos:position pos:line="165" pos:column="57"/></literal></expr>]<pos:position pos:line="165" pos:column="58"/></index></name> <operator pos:line="165" pos:column="59">==<pos:position pos:line="165" pos:column="61"/></operator> <literal type="char" pos:line="165" pos:column="62">'/'<pos:position pos:line="165" pos:column="65"/></literal><operator pos:line="165" pos:column="65">)<pos:position pos:line="165" pos:column="66"/></operator> <operator pos:line="165" pos:column="67">&amp;&amp;<pos:position pos:line="165" pos:column="77"/></operator>
	    <operator pos:line="166" pos:column="13">(<pos:position pos:line="166" pos:column="14"/></operator><name pos:line="166" pos:column="14">i<pos:position pos:line="166" pos:column="15"/></name> <operator pos:line="166" pos:column="16">=<pos:position pos:line="166" pos:column="17"/></operator> <call><name pos:line="166" pos:column="18">cache_name_pos<pos:position pos:line="166" pos:column="32"/></name><argument_list pos:line="166" pos:column="32">(<argument><expr><name><name pos:line="166" pos:column="33">item<pos:position pos:line="166" pos:column="37"/></name><operator pos:line="166" pos:column="37">-&gt;<pos:position pos:line="166" pos:column="42"/></operator><name pos:line="166" pos:column="39">match<pos:position pos:line="166" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="166" pos:column="46">item<pos:position pos:line="166" pos:column="50"/></name><operator pos:line="166" pos:column="50">-&gt;<pos:position pos:line="166" pos:column="55"/></operator><name pos:line="166" pos:column="52">len<pos:position pos:line="166" pos:column="55"/></name></name> <operator pos:line="166" pos:column="56">-<pos:position pos:line="166" pos:column="57"/></operator> <literal type="number" pos:line="166" pos:column="58">1<pos:position pos:line="166" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="60"/></argument_list></call><operator pos:line="166" pos:column="60">)<pos:position pos:line="166" pos:column="61"/></operator> <operator pos:line="166" pos:column="62">&gt;=<pos:position pos:line="166" pos:column="67"/></operator> <literal type="number" pos:line="166" pos:column="65">0<pos:position pos:line="166" pos:column="66"/></literal> <operator pos:line="166" pos:column="67">&amp;&amp;<pos:position pos:line="166" pos:column="77"/></operator>
	    <call><name pos:line="167" pos:column="13">S_ISGITLINK<pos:position pos:line="167" pos:column="24"/></name><argument_list pos:line="167" pos:column="24">(<argument><expr><name><name pos:line="167" pos:column="25">active_cache<pos:position pos:line="167" pos:column="37"/></name><index pos:line="167" pos:column="37">[<expr><name pos:line="167" pos:column="38">i<pos:position pos:line="167" pos:column="39"/></name></expr>]<pos:position pos:line="167" pos:column="40"/></index></name><operator pos:line="167" pos:column="40">-&gt;<pos:position pos:line="167" pos:column="45"/></operator><name pos:line="167" pos:column="42">ce_mode<pos:position pos:line="167" pos:column="49"/></name></expr></argument>)<pos:position pos:line="167" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="167" pos:column="51"/></condition><then pos:line="167" pos:column="51"> <block pos:line="167" pos:column="52">{
		<expr_stmt><expr><name><name pos:line="168" pos:column="17">item<pos:position pos:line="168" pos:column="21"/></name><operator pos:line="168" pos:column="21">-&gt;<pos:position pos:line="168" pos:column="26"/></operator><name pos:line="168" pos:column="23">len<pos:position pos:line="168" pos:column="26"/></name></name><operator pos:line="168" pos:column="26">--<pos:position pos:line="168" pos:column="28"/></operator></expr>;<pos:position pos:line="168" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="169" pos:column="17">match<pos:position pos:line="169" pos:column="22"/></name><index pos:line="169" pos:column="22">[<expr><name><name pos:line="169" pos:column="23">item<pos:position pos:line="169" pos:column="27"/></name><operator pos:line="169" pos:column="27">-&gt;<pos:position pos:line="169" pos:column="32"/></operator><name pos:line="169" pos:column="29">len<pos:position pos:line="169" pos:column="32"/></name></name></expr>]<pos:position pos:line="169" pos:column="33"/></index></name> <operator pos:line="169" pos:column="34">=<pos:position pos:line="169" pos:column="35"/></operator> <literal type="char" pos:line="169" pos:column="36">'\0'<pos:position pos:line="169" pos:column="40"/></literal></expr>;<pos:position pos:line="169" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="170" pos:column="10"/></block></then></if>

	<if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><name pos:line="172" pos:column="13">flags<pos:position pos:line="172" pos:column="18"/></name> <operator pos:line="172" pos:column="19">&amp;<pos:position pos:line="172" pos:column="24"/></operator> <name pos:line="172" pos:column="21">PATHSPEC_STRIP_SUBMODULE_SLASH_EXPENSIVE<pos:position pos:line="172" pos:column="61"/></name></expr>)<pos:position pos:line="172" pos:column="62"/></condition><then pos:line="172" pos:column="62">
		<block type="pseudo"><for pos:line="173" pos:column="17">for <control pos:line="173" pos:column="21">(<init><expr><name pos:line="173" pos:column="22">i<pos:position pos:line="173" pos:column="23"/></name> <operator pos:line="173" pos:column="24">=<pos:position pos:line="173" pos:column="25"/></operator> <literal type="number" pos:line="173" pos:column="26">0<pos:position pos:line="173" pos:column="27"/></literal></expr>;<pos:position pos:line="173" pos:column="28"/></init> <condition><expr><name pos:line="173" pos:column="29">i<pos:position pos:line="173" pos:column="30"/></name> <operator pos:line="173" pos:column="31">&lt;<pos:position pos:line="173" pos:column="35"/></operator> <name pos:line="173" pos:column="33">active_nr<pos:position pos:line="173" pos:column="42"/></name></expr>;<pos:position pos:line="173" pos:column="43"/></condition> <incr><expr><name pos:line="173" pos:column="44">i<pos:position pos:line="173" pos:column="45"/></name><operator pos:line="173" pos:column="45">++<pos:position pos:line="173" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="173" pos:column="48"/></control> <block pos:line="173" pos:column="49">{
			<decl_stmt><decl><type><name><name pos:line="174" pos:column="25">struct<pos:position pos:line="174" pos:column="31"/></name> <name pos:line="174" pos:column="32">cache_entry<pos:position pos:line="174" pos:column="43"/></name></name> <modifier pos:line="174" pos:column="44">*<pos:position pos:line="174" pos:column="45"/></modifier></type><name pos:line="174" pos:column="45">ce<pos:position pos:line="174" pos:column="47"/></name> <init pos:line="174" pos:column="48">= <expr><name><name pos:line="174" pos:column="50">active_cache<pos:position pos:line="174" pos:column="62"/></name><index pos:line="174" pos:column="62">[<expr><name pos:line="174" pos:column="63">i<pos:position pos:line="174" pos:column="64"/></name></expr>]<pos:position pos:line="174" pos:column="65"/></index></name></expr></init></decl>;<pos:position pos:line="174" pos:column="66"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="175" pos:column="25">int<pos:position pos:line="175" pos:column="28"/></name></type> <name pos:line="175" pos:column="29">ce_len<pos:position pos:line="175" pos:column="35"/></name> <init pos:line="175" pos:column="36">= <expr><call><name pos:line="175" pos:column="38">ce_namelen<pos:position pos:line="175" pos:column="48"/></name><argument_list pos:line="175" pos:column="48">(<argument><expr><name pos:line="175" pos:column="49">ce<pos:position pos:line="175" pos:column="51"/></name></expr></argument>)<pos:position pos:line="175" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="175" pos:column="53"/></decl_stmt>

			<if pos:line="177" pos:column="25">if <condition pos:line="177" pos:column="28">(<expr><operator pos:line="177" pos:column="29">!<pos:position pos:line="177" pos:column="30"/></operator><call><name pos:line="177" pos:column="30">S_ISGITLINK<pos:position pos:line="177" pos:column="41"/></name><argument_list pos:line="177" pos:column="41">(<argument><expr><name><name pos:line="177" pos:column="42">ce<pos:position pos:line="177" pos:column="44"/></name><operator pos:line="177" pos:column="44">-&gt;<pos:position pos:line="177" pos:column="49"/></operator><name pos:line="177" pos:column="46">ce_mode<pos:position pos:line="177" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="177" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="177" pos:column="55"/></condition><then pos:line="177" pos:column="55">
				<block type="pseudo"><continue pos:line="178" pos:column="33">continue;<pos:position pos:line="178" pos:column="42"/></continue></block></then></if>

			<if pos:line="180" pos:column="25">if <condition pos:line="180" pos:column="28">(<expr><name><name pos:line="180" pos:column="29">item<pos:position pos:line="180" pos:column="33"/></name><operator pos:line="180" pos:column="33">-&gt;<pos:position pos:line="180" pos:column="38"/></operator><name pos:line="180" pos:column="35">len<pos:position pos:line="180" pos:column="38"/></name></name> <operator pos:line="180" pos:column="39">&lt;=<pos:position pos:line="180" pos:column="44"/></operator> <name pos:line="180" pos:column="42">ce_len<pos:position pos:line="180" pos:column="48"/></name> <operator pos:line="180" pos:column="49">||<pos:position pos:line="180" pos:column="51"/></operator> <name><name pos:line="180" pos:column="52">match<pos:position pos:line="180" pos:column="57"/></name><index pos:line="180" pos:column="57">[<expr><name pos:line="180" pos:column="58">ce_len<pos:position pos:line="180" pos:column="64"/></name></expr>]<pos:position pos:line="180" pos:column="65"/></index></name> <operator pos:line="180" pos:column="66">!=<pos:position pos:line="180" pos:column="68"/></operator> <literal type="char" pos:line="180" pos:column="69">'/'<pos:position pos:line="180" pos:column="72"/></literal> <operator pos:line="180" pos:column="73">||<pos:position pos:line="180" pos:column="75"/></operator>
			    <call><name pos:line="181" pos:column="29">memcmp<pos:position pos:line="181" pos:column="35"/></name><argument_list pos:line="181" pos:column="35">(<argument><expr><name><name pos:line="181" pos:column="36">ce<pos:position pos:line="181" pos:column="38"/></name><operator pos:line="181" pos:column="38">-&gt;<pos:position pos:line="181" pos:column="43"/></operator><name pos:line="181" pos:column="40">name<pos:position pos:line="181" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="46">match<pos:position pos:line="181" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="53">ce_len<pos:position pos:line="181" pos:column="59"/></name></expr></argument>)<pos:position pos:line="181" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="181" pos:column="61"/></condition><then pos:line="181" pos:column="61">
				<block type="pseudo"><continue pos:line="182" pos:column="33">continue;<pos:position pos:line="182" pos:column="42"/></continue></block></then></if>
			<if pos:line="183" pos:column="25">if <condition pos:line="183" pos:column="28">(<expr><name><name pos:line="183" pos:column="29">item<pos:position pos:line="183" pos:column="33"/></name><operator pos:line="183" pos:column="33">-&gt;<pos:position pos:line="183" pos:column="38"/></operator><name pos:line="183" pos:column="35">len<pos:position pos:line="183" pos:column="38"/></name></name> <operator pos:line="183" pos:column="39">==<pos:position pos:line="183" pos:column="41"/></operator> <name pos:line="183" pos:column="42">ce_len<pos:position pos:line="183" pos:column="48"/></name> <operator pos:line="183" pos:column="49">+<pos:position pos:line="183" pos:column="50"/></operator> <literal type="number" pos:line="183" pos:column="51">1<pos:position pos:line="183" pos:column="52"/></literal></expr>)<pos:position pos:line="183" pos:column="53"/></condition><then pos:line="183" pos:column="53"> <block pos:line="183" pos:column="54">{
				<comment type="block" pos:line="184" pos:column="33">/* strip trailing slash */</comment>
				<expr_stmt><expr><name><name pos:line="185" pos:column="33">item<pos:position pos:line="185" pos:column="37"/></name><operator pos:line="185" pos:column="37">-&gt;<pos:position pos:line="185" pos:column="42"/></operator><name pos:line="185" pos:column="39">len<pos:position pos:line="185" pos:column="42"/></name></name><operator pos:line="185" pos:column="42">--<pos:position pos:line="185" pos:column="44"/></operator></expr>;<pos:position pos:line="185" pos:column="45"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="186" pos:column="33">match<pos:position pos:line="186" pos:column="38"/></name><index pos:line="186" pos:column="38">[<expr><name><name pos:line="186" pos:column="39">item<pos:position pos:line="186" pos:column="43"/></name><operator pos:line="186" pos:column="43">-&gt;<pos:position pos:line="186" pos:column="48"/></operator><name pos:line="186" pos:column="45">len<pos:position pos:line="186" pos:column="48"/></name></name></expr>]<pos:position pos:line="186" pos:column="49"/></index></name> <operator pos:line="186" pos:column="50">=<pos:position pos:line="186" pos:column="51"/></operator> <literal type="char" pos:line="186" pos:column="52">'\0'<pos:position pos:line="186" pos:column="56"/></literal></expr>;<pos:position pos:line="186" pos:column="57"/></expr_stmt>
			}<pos:position pos:line="187" pos:column="26"/></block></then> <else pos:line="187" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="188" pos:column="33">die<pos:position pos:line="188" pos:column="36"/></name> <argument_list pos:line="188" pos:column="37">(<argument><expr><call><name pos:line="188" pos:column="38">_<pos:position pos:line="188" pos:column="39"/></name><argument_list pos:line="188" pos:column="39">(<argument><expr><literal type="string" pos:line="188" pos:column="40">"Pathspec '%s' is in submodule '%.*s'"<pos:position pos:line="188" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="79"/></argument_list></call></expr></argument>,
				     <argument><expr><name pos:line="189" pos:column="38">elt<pos:position pos:line="189" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="43">ce_len<pos:position pos:line="189" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="189" pos:column="51">ce<pos:position pos:line="189" pos:column="53"/></name><operator pos:line="189" pos:column="53">-&gt;<pos:position pos:line="189" pos:column="58"/></operator><name pos:line="189" pos:column="55">name<pos:position pos:line="189" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="61"/></expr_stmt></block></else></if>
		}<pos:position pos:line="190" pos:column="18"/></block></for></block></then></if>

	<if pos:line="192" pos:column="9">if <condition pos:line="192" pos:column="12">(<expr><name pos:line="192" pos:column="13">magic<pos:position pos:line="192" pos:column="18"/></name> <operator pos:line="192" pos:column="19">&amp;<pos:position pos:line="192" pos:column="24"/></operator> <name pos:line="192" pos:column="21">PATHSPEC_LITERAL<pos:position pos:line="192" pos:column="37"/></name></expr>)<pos:position pos:line="192" pos:column="38"/></condition><then pos:line="192" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="193" pos:column="17">item<pos:position pos:line="193" pos:column="21"/></name><operator pos:line="193" pos:column="21">-&gt;<pos:position pos:line="193" pos:column="26"/></operator><name pos:line="193" pos:column="23">nowildcard_len<pos:position pos:line="193" pos:column="37"/></name></name> <operator pos:line="193" pos:column="38">=<pos:position pos:line="193" pos:column="39"/></operator> <name><name pos:line="193" pos:column="40">item<pos:position pos:line="193" pos:column="44"/></name><operator pos:line="193" pos:column="44">-&gt;<pos:position pos:line="193" pos:column="49"/></operator><name pos:line="193" pos:column="46">len<pos:position pos:line="193" pos:column="49"/></name></name></expr>;<pos:position pos:line="193" pos:column="50"/></expr_stmt></block></then>
	<else pos:line="194" pos:column="9">else <block pos:line="194" pos:column="14">{
		<expr_stmt><expr><name><name pos:line="195" pos:column="17">item<pos:position pos:line="195" pos:column="21"/></name><operator pos:line="195" pos:column="21">-&gt;<pos:position pos:line="195" pos:column="26"/></operator><name pos:line="195" pos:column="23">nowildcard_len<pos:position pos:line="195" pos:column="37"/></name></name> <operator pos:line="195" pos:column="38">=<pos:position pos:line="195" pos:column="39"/></operator> <call><name pos:line="195" pos:column="40">simple_length<pos:position pos:line="195" pos:column="53"/></name><argument_list pos:line="195" pos:column="53">(<argument><expr><name><name pos:line="195" pos:column="54">item<pos:position pos:line="195" pos:column="58"/></name><operator pos:line="195" pos:column="58">-&gt;<pos:position pos:line="195" pos:column="63"/></operator><name pos:line="195" pos:column="60">match<pos:position pos:line="195" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="195" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="67"/></expr_stmt>
		<if pos:line="196" pos:column="17">if <condition pos:line="196" pos:column="20">(<expr><name><name pos:line="196" pos:column="21">item<pos:position pos:line="196" pos:column="25"/></name><operator pos:line="196" pos:column="25">-&gt;<pos:position pos:line="196" pos:column="30"/></operator><name pos:line="196" pos:column="27">nowildcard_len<pos:position pos:line="196" pos:column="41"/></name></name> <operator pos:line="196" pos:column="42">&lt;<pos:position pos:line="196" pos:column="46"/></operator> <name pos:line="196" pos:column="44">prefixlen<pos:position pos:line="196" pos:column="53"/></name></expr>)<pos:position pos:line="196" pos:column="54"/></condition><then pos:line="196" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="197" pos:column="25">item<pos:position pos:line="197" pos:column="29"/></name><operator pos:line="197" pos:column="29">-&gt;<pos:position pos:line="197" pos:column="34"/></operator><name pos:line="197" pos:column="31">nowildcard_len<pos:position pos:line="197" pos:column="45"/></name></name> <operator pos:line="197" pos:column="46">=<pos:position pos:line="197" pos:column="47"/></operator> <name pos:line="197" pos:column="48">prefixlen<pos:position pos:line="197" pos:column="57"/></name></expr>;<pos:position pos:line="197" pos:column="58"/></expr_stmt></block></then></if>
	}<pos:position pos:line="198" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name><name pos:line="199" pos:column="9">item<pos:position pos:line="199" pos:column="13"/></name><operator pos:line="199" pos:column="13">-&gt;<pos:position pos:line="199" pos:column="18"/></operator><name pos:line="199" pos:column="15">flags<pos:position pos:line="199" pos:column="20"/></name></name> <operator pos:line="199" pos:column="21">=<pos:position pos:line="199" pos:column="22"/></operator> <literal type="number" pos:line="199" pos:column="23">0<pos:position pos:line="199" pos:column="24"/></literal></expr>;<pos:position pos:line="199" pos:column="25"/></expr_stmt>
	<if pos:line="200" pos:column="9">if <condition pos:line="200" pos:column="12">(<expr><name pos:line="200" pos:column="13">magic<pos:position pos:line="200" pos:column="18"/></name> <operator pos:line="200" pos:column="19">&amp;<pos:position pos:line="200" pos:column="24"/></operator> <name pos:line="200" pos:column="21">PATHSPEC_GLOB<pos:position pos:line="200" pos:column="34"/></name></expr>)<pos:position pos:line="200" pos:column="35"/></condition><then pos:line="200" pos:column="35"> <block pos:line="200" pos:column="36">{
		<comment type="block" pos:line="201" pos:column="17">/*
		 * FIXME: should we enable ONESTAR in _GLOB for
		 * pattern "* * / * . c"?
		 */</comment>
	}<pos:position pos:line="205" pos:column="10"/></block></then> <else pos:line="205" pos:column="11">else <block pos:line="205" pos:column="16">{
		<if pos:line="206" pos:column="17">if <condition pos:line="206" pos:column="20">(<expr><name><name pos:line="206" pos:column="21">item<pos:position pos:line="206" pos:column="25"/></name><operator pos:line="206" pos:column="25">-&gt;<pos:position pos:line="206" pos:column="30"/></operator><name pos:line="206" pos:column="27">nowildcard_len<pos:position pos:line="206" pos:column="41"/></name></name> <operator pos:line="206" pos:column="42">&lt;<pos:position pos:line="206" pos:column="46"/></operator> <name><name pos:line="206" pos:column="44">item<pos:position pos:line="206" pos:column="48"/></name><operator pos:line="206" pos:column="48">-&gt;<pos:position pos:line="206" pos:column="53"/></operator><name pos:line="206" pos:column="50">len<pos:position pos:line="206" pos:column="53"/></name></name> <operator pos:line="206" pos:column="54">&amp;&amp;<pos:position pos:line="206" pos:column="64"/></operator>
		    <name><name pos:line="207" pos:column="21">item<pos:position pos:line="207" pos:column="25"/></name><operator pos:line="207" pos:column="25">-&gt;<pos:position pos:line="207" pos:column="30"/></operator><name pos:line="207" pos:column="27">match<pos:position pos:line="207" pos:column="32"/></name><index pos:line="207" pos:column="32">[<expr><name><name pos:line="207" pos:column="33">item<pos:position pos:line="207" pos:column="37"/></name><operator pos:line="207" pos:column="37">-&gt;<pos:position pos:line="207" pos:column="42"/></operator><name pos:line="207" pos:column="39">nowildcard_len<pos:position pos:line="207" pos:column="53"/></name></name></expr>]<pos:position pos:line="207" pos:column="54"/></index></name> <operator pos:line="207" pos:column="55">==<pos:position pos:line="207" pos:column="57"/></operator> <literal type="char" pos:line="207" pos:column="58">'*'<pos:position pos:line="207" pos:column="61"/></literal> <operator pos:line="207" pos:column="62">&amp;&amp;<pos:position pos:line="207" pos:column="72"/></operator>
		    <call><name pos:line="208" pos:column="21">no_wildcard<pos:position pos:line="208" pos:column="32"/></name><argument_list pos:line="208" pos:column="32">(<argument><expr><name><name pos:line="208" pos:column="33">item<pos:position pos:line="208" pos:column="37"/></name><operator pos:line="208" pos:column="37">-&gt;<pos:position pos:line="208" pos:column="42"/></operator><name pos:line="208" pos:column="39">match<pos:position pos:line="208" pos:column="44"/></name></name> <operator pos:line="208" pos:column="45">+<pos:position pos:line="208" pos:column="46"/></operator> <name><name pos:line="208" pos:column="47">item<pos:position pos:line="208" pos:column="51"/></name><operator pos:line="208" pos:column="51">-&gt;<pos:position pos:line="208" pos:column="56"/></operator><name pos:line="208" pos:column="53">nowildcard_len<pos:position pos:line="208" pos:column="67"/></name></name> <operator pos:line="208" pos:column="68">+<pos:position pos:line="208" pos:column="69"/></operator> <literal type="number" pos:line="208" pos:column="70">1<pos:position pos:line="208" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="208" pos:column="73"/></condition><then pos:line="208" pos:column="73">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="209" pos:column="25">item<pos:position pos:line="209" pos:column="29"/></name><operator pos:line="209" pos:column="29">-&gt;<pos:position pos:line="209" pos:column="34"/></operator><name pos:line="209" pos:column="31">flags<pos:position pos:line="209" pos:column="36"/></name></name> <operator pos:line="209" pos:column="37">|=<pos:position pos:line="209" pos:column="39"/></operator> <name pos:line="209" pos:column="40">PATHSPEC_ONESTAR<pos:position pos:line="209" pos:column="56"/></name></expr>;<pos:position pos:line="209" pos:column="57"/></expr_stmt></block></then></if>
	}<pos:position pos:line="210" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="212" pos:column="9">/* sanity checks, pathspec matchers assume these are sane */</comment>
	<expr_stmt><expr><call><name pos:line="213" pos:column="9">assert<pos:position pos:line="213" pos:column="15"/></name><argument_list pos:line="213" pos:column="15">(<argument><expr><name><name pos:line="213" pos:column="16">item<pos:position pos:line="213" pos:column="20"/></name><operator pos:line="213" pos:column="20">-&gt;<pos:position pos:line="213" pos:column="25"/></operator><name pos:line="213" pos:column="22">nowildcard_len<pos:position pos:line="213" pos:column="36"/></name></name> <operator pos:line="213" pos:column="37">&lt;=<pos:position pos:line="213" pos:column="42"/></operator> <name><name pos:line="213" pos:column="40">item<pos:position pos:line="213" pos:column="44"/></name><operator pos:line="213" pos:column="44">-&gt;<pos:position pos:line="213" pos:column="49"/></operator><name pos:line="213" pos:column="46">len<pos:position pos:line="213" pos:column="49"/></name></name> <operator pos:line="213" pos:column="50">&amp;&amp;<pos:position pos:line="213" pos:column="60"/></operator>
	       <name><name pos:line="214" pos:column="16">item<pos:position pos:line="214" pos:column="20"/></name><operator pos:line="214" pos:column="20">-&gt;<pos:position pos:line="214" pos:column="25"/></operator><name pos:line="214" pos:column="22">prefix<pos:position pos:line="214" pos:column="28"/></name></name>         <operator pos:line="214" pos:column="37">&lt;=<pos:position pos:line="214" pos:column="42"/></operator> <name><name pos:line="214" pos:column="40">item<pos:position pos:line="214" pos:column="44"/></name><operator pos:line="214" pos:column="44">-&gt;<pos:position pos:line="214" pos:column="49"/></operator><name pos:line="214" pos:column="46">len<pos:position pos:line="214" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="214" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="51"/></expr_stmt>
	<return pos:line="215" pos:column="9">return <expr><name pos:line="215" pos:column="16">magic<pos:position pos:line="215" pos:column="21"/></name></expr>;<pos:position pos:line="215" pos:column="22"/></return>
}<pos:position pos:line="216" pos:column="2"/></block></function></unit>

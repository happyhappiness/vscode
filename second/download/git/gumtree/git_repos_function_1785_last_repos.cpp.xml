<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1785_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">store_object<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(
	<parameter><decl><type><name><name pos:line="2" pos:column="9">enum<pos:position pos:line="2" pos:column="13"/></name> <name pos:line="2" pos:column="14">object_type<pos:position pos:line="2" pos:column="25"/></name></name></type> <name pos:line="2" pos:column="26">type<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">dat<pos:position pos:line="3" pos:column="27"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">last_object<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">last<pos:position pos:line="4" pos:column="33"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_id<pos:position pos:line="5" pos:column="25"/></name></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">oidout<pos:position pos:line="5" pos:column="33"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="6" pos:column="9">uintmax_t<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">mark<pos:position pos:line="6" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="24"/></parameter_list>
<block pos:line="7" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">void<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">out<pos:position pos:line="8" pos:column="18"/></name></decl>, <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="21">delta<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">object_entry<pos:position pos:line="9" pos:column="28"/></name></name> <modifier pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></modifier></type><name pos:line="9" pos:column="30">e<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">char<pos:position pos:line="10" pos:column="22"/></name></type> <name><name pos:line="10" pos:column="23">hdr<pos:position pos:line="10" pos:column="26"/></name><index pos:line="10" pos:column="26">[<expr><literal type="number" pos:line="10" pos:column="27">96<pos:position pos:line="10" pos:column="29"/></literal></expr>]<pos:position pos:line="10" pos:column="30"/></index></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">object_id<pos:position pos:line="11" pos:column="25"/></name></name></type> <name pos:line="11" pos:column="26">oid<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">unsigned<pos:position pos:line="12" pos:column="17"/></name> <name pos:line="12" pos:column="18">long<pos:position pos:line="12" pos:column="22"/></name></type> <name pos:line="12" pos:column="23">hdrlen<pos:position pos:line="12" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="31">deltalen<pos:position pos:line="12" pos:column="39"/></name></decl>;<pos:position pos:line="12" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">git_SHA_CTX<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">c<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">git_zstream<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">s<pos:position pos:line="14" pos:column="22"/></name></decl>;<pos:position pos:line="14" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><name pos:line="16" pos:column="9">hdrlen<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">xsnprintf<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><operator pos:line="16" pos:column="28">(<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">char<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">*<pos:position pos:line="16" pos:column="35"/></operator><operator pos:line="16" pos:column="35">)<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="36">hdr<pos:position pos:line="16" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="41">sizeof<argument_list pos:line="16" pos:column="47">(<argument><expr><name pos:line="16" pos:column="48">hdr<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="54">"%s %lu"<pos:position pos:line="16" pos:column="62"/></literal></expr></argument>,
			   <argument><expr><name><typename pos:line="17" pos:column="28">typename<pos:position pos:line="17" pos:column="36"/></typename></name><operator pos:line="17" pos:column="36">(<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">type<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">)<pos:position pos:line="17" pos:column="42"/></operator></expr></argument>, <argument><expr><operator pos:line="17" pos:column="44">(<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="45">unsigned<pos:position pos:line="17" pos:column="53"/></name> <name pos:line="17" pos:column="54">long<pos:position pos:line="17" pos:column="58"/></name><operator pos:line="17" pos:column="58">)<pos:position pos:line="17" pos:column="59"/></operator><name><name pos:line="17" pos:column="59">dat<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">len<pos:position pos:line="17" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call> <operator pos:line="17" pos:column="69">+<pos:position pos:line="17" pos:column="70"/></operator> <literal type="number" pos:line="17" pos:column="71">1<pos:position pos:line="17" pos:column="72"/></literal></expr>;<pos:position pos:line="17" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">git_SHA1_Init<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><operator pos:line="18" pos:column="23">&amp;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="24">c<pos:position pos:line="18" pos:column="25"/></name></expr></argument>)<pos:position pos:line="18" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">git_SHA1_Update<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><operator pos:line="19" pos:column="25">&amp;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="26">c<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="29">hdr<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">hdrlen<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">git_SHA1_Update<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><operator pos:line="20" pos:column="25">&amp;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="26">c<pos:position pos:line="20" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="29">dat<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">buf<pos:position pos:line="20" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="39">dat<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">len<pos:position pos:line="20" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">git_SHA1_Final<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name><name pos:line="21" pos:column="24">oid<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">.<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">hash<pos:position pos:line="21" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="34">&amp;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="35">c<pos:position pos:line="21" pos:column="36"/></name></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">oidout<pos:position pos:line="22" pos:column="19"/></name></expr>)<pos:position pos:line="22" pos:column="20"/></condition><then pos:line="22" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">oidcpy<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">oidout<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="32">&amp;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="33">oid<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="25" pos:column="9">e<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <call><name pos:line="25" pos:column="13">insert_object<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><operator pos:line="25" pos:column="27">&amp;<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="28">oid<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">mark<pos:position pos:line="26" pos:column="17"/></name></expr>)<pos:position pos:line="26" pos:column="18"/></condition><then pos:line="26" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">insert_mark<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">mark<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="35">e<pos:position pos:line="27" pos:column="36"/></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt></block></then></if>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">e<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">idx<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">.<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">offset<pos:position pos:line="28" pos:column="26"/></name></name></expr>)<pos:position pos:line="28" pos:column="27"/></condition><then pos:line="28" pos:column="27"> <block pos:line="28" pos:column="28">{
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">duplicate_count_by_type<pos:position pos:line="29" pos:column="40"/></name><index pos:line="29" pos:column="40">[<expr><name pos:line="29" pos:column="41">type<pos:position pos:line="29" pos:column="45"/></name></expr>]<pos:position pos:line="29" pos:column="46"/></index></name><operator pos:line="29" pos:column="46">++<pos:position pos:line="29" pos:column="48"/></operator></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><literal type="number" pos:line="30" pos:column="24">1<pos:position pos:line="30" pos:column="25"/></literal></expr>;<pos:position pos:line="30" pos:column="26"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then> <elseif pos:line="31" pos:column="11">else <if pos:line="31" pos:column="16">if <condition pos:line="31" pos:column="19">(<expr><call><name pos:line="31" pos:column="20">find_sha1_pack<pos:position pos:line="31" pos:column="34"/></name><argument_list pos:line="31" pos:column="34">(<argument><expr><name><name pos:line="31" pos:column="35">oid<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">.<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="39">hash<pos:position pos:line="31" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="45">packed_git<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="57"/></condition><then pos:line="31" pos:column="57"> <block pos:line="31" pos:column="58">{
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">e<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">type<pos:position pos:line="32" pos:column="24"/></name></name> <operator pos:line="32" pos:column="25">=<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">type<pos:position pos:line="32" pos:column="31"/></name></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">e<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">-&gt;<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="20">pack_id<pos:position pos:line="33" pos:column="27"/></name></name> <operator pos:line="33" pos:column="28">=<pos:position pos:line="33" pos:column="29"/></operator> <name pos:line="33" pos:column="30">MAX_PACK_ID<pos:position pos:line="33" pos:column="41"/></name></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">e<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">idx<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">.<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="24">offset<pos:position pos:line="34" pos:column="30"/></name></name> <operator pos:line="34" pos:column="31">=<pos:position pos:line="34" pos:column="32"/></operator> <literal type="number" pos:line="34" pos:column="33">1<pos:position pos:line="34" pos:column="34"/></literal></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt> <comment type="block" pos:line="34" pos:column="36">/* just not zero! */</comment>
		<expr_stmt><expr><name><name pos:line="35" pos:column="17">duplicate_count_by_type<pos:position pos:line="35" pos:column="40"/></name><index pos:line="35" pos:column="40">[<expr><name pos:line="35" pos:column="41">type<pos:position pos:line="35" pos:column="45"/></name></expr>]<pos:position pos:line="35" pos:column="46"/></index></name><operator pos:line="35" pos:column="46">++<pos:position pos:line="35" pos:column="48"/></operator></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
		<return pos:line="36" pos:column="17">return <expr><literal type="number" pos:line="36" pos:column="24">1<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></return>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">last<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">&amp;&amp;<pos:position pos:line="39" pos:column="28"/></operator> <name><name pos:line="39" pos:column="21">last<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">-&gt;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="27">data<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">.<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="32">buf<pos:position pos:line="39" pos:column="35"/></name></name> <operator pos:line="39" pos:column="36">&amp;&amp;<pos:position pos:line="39" pos:column="46"/></operator> <name><name pos:line="39" pos:column="39">last<pos:position pos:line="39" pos:column="43"/></name><operator pos:line="39" pos:column="43">-&gt;<pos:position pos:line="39" pos:column="48"/></operator><name><name pos:line="39" pos:column="45">depth<pos:position pos:line="39" pos:column="50"/></name> <argument_list type="generic" pos:line="39" pos:column="51">&lt; <argument><expr><name pos:line="39" pos:column="53">max_depth<pos:position pos:line="39" pos:column="62"/></name> <operator pos:line="39" pos:column="63">&amp;&amp;<pos:position pos:line="39" pos:column="73"/></operator> <name><name pos:line="39" pos:column="66">dat<pos:position pos:line="39" pos:column="69"/></name><operator pos:line="39" pos:column="69">-&gt;<pos:position pos:line="39" pos:column="74"/></operator><name pos:line="39" pos:column="71">len<pos:position pos:line="39" pos:column="74"/></name></name></expr></argument> &gt;<pos:position pos:line="39" pos:column="79"/></argument_list></name></name> <literal type="number" pos:line="39" pos:column="77">20<pos:position pos:line="39" pos:column="79"/></literal></expr>)<pos:position pos:line="39" pos:column="80"/></condition><then pos:line="39" pos:column="80"> <block pos:line="39" pos:column="81">{
		<expr_stmt><expr><name><name pos:line="40" pos:column="17">delta_count_attempts_by_type<pos:position pos:line="40" pos:column="45"/></name><index pos:line="40" pos:column="45">[<expr><name pos:line="40" pos:column="46">type<pos:position pos:line="40" pos:column="50"/></name></expr>]<pos:position pos:line="40" pos:column="51"/></index></name><operator pos:line="40" pos:column="51">++<pos:position pos:line="40" pos:column="53"/></operator></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">delta<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">=<pos:position pos:line="41" pos:column="24"/></operator> <call><name pos:line="41" pos:column="25">diff_delta<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><name><name pos:line="41" pos:column="36">last<pos:position pos:line="41" pos:column="40"/></name><operator pos:line="41" pos:column="40">-&gt;<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="42">data<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">.<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="47">buf<pos:position pos:line="41" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="52">last<pos:position pos:line="41" pos:column="56"/></name><operator pos:line="41" pos:column="56">-&gt;<pos:position pos:line="41" pos:column="61"/></operator><name pos:line="41" pos:column="58">data<pos:position pos:line="41" pos:column="62"/></name><operator pos:line="41" pos:column="62">.<pos:position pos:line="41" pos:column="63"/></operator><name pos:line="41" pos:column="63">len<pos:position pos:line="41" pos:column="66"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="42" pos:column="25">dat<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-&gt;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="30">buf<pos:position pos:line="42" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="35">dat<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">-&gt;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="40">len<pos:position pos:line="42" pos:column="43"/></name></name></expr></argument>,
			<argument><expr><operator pos:line="43" pos:column="25">&amp;<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="26">deltalen<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="36">dat<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">-&gt;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="41">len<pos:position pos:line="43" pos:column="44"/></name></name> <operator pos:line="43" pos:column="45">-<pos:position pos:line="43" pos:column="46"/></operator> <literal type="number" pos:line="43" pos:column="47">20<pos:position pos:line="43" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then> <else pos:line="44" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="17">delta<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">=<pos:position pos:line="45" pos:column="24"/></operator> <name pos:line="45" pos:column="25">NULL<pos:position pos:line="45" pos:column="29"/></name></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">git_deflate_init<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><operator pos:line="47" pos:column="26">&amp;<pos:position pos:line="47" pos:column="31"/></operator><name pos:line="47" pos:column="27">s<pos:position pos:line="47" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="30">pack_compression_level<pos:position pos:line="47" pos:column="52"/></name></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="54"/></expr_stmt>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">delta<pos:position pos:line="48" pos:column="18"/></name></expr>)<pos:position pos:line="48" pos:column="19"/></condition><then pos:line="48" pos:column="19"> <block pos:line="48" pos:column="20">{
		<expr_stmt><expr><name><name pos:line="49" pos:column="17">s<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">.<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="19">next_in<pos:position pos:line="49" pos:column="26"/></name></name> <operator pos:line="49" pos:column="27">=<pos:position pos:line="49" pos:column="28"/></operator> <name pos:line="49" pos:column="29">delta<pos:position pos:line="49" pos:column="34"/></name></expr>;<pos:position pos:line="49" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="50" pos:column="17">s<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">.<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="19">avail_in<pos:position pos:line="50" pos:column="27"/></name></name> <operator pos:line="50" pos:column="28">=<pos:position pos:line="50" pos:column="29"/></operator> <name pos:line="50" pos:column="30">deltalen<pos:position pos:line="50" pos:column="38"/></name></expr>;<pos:position pos:line="50" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></then> <else pos:line="51" pos:column="11">else <block pos:line="51" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="52" pos:column="17">s<pos:position pos:line="52" pos:column="18"/></name><operator pos:line="52" pos:column="18">.<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="19">next_in<pos:position pos:line="52" pos:column="26"/></name></name> <operator pos:line="52" pos:column="27">=<pos:position pos:line="52" pos:column="28"/></operator> <operator pos:line="52" pos:column="29">(<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="30">void<pos:position pos:line="52" pos:column="34"/></name> <operator pos:line="52" pos:column="35">*<pos:position pos:line="52" pos:column="36"/></operator><operator pos:line="52" pos:column="36">)<pos:position pos:line="52" pos:column="37"/></operator><name><name pos:line="52" pos:column="37">dat<pos:position pos:line="52" pos:column="40"/></name><operator pos:line="52" pos:column="40">-&gt;<pos:position pos:line="52" pos:column="45"/></operator><name pos:line="52" pos:column="42">buf<pos:position pos:line="52" pos:column="45"/></name></name></expr>;<pos:position pos:line="52" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="53" pos:column="17">s<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">.<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="19">avail_in<pos:position pos:line="53" pos:column="27"/></name></name> <operator pos:line="53" pos:column="28">=<pos:position pos:line="53" pos:column="29"/></operator> <name><name pos:line="53" pos:column="30">dat<pos:position pos:line="53" pos:column="33"/></name><operator pos:line="53" pos:column="33">-&gt;<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="35">len<pos:position pos:line="53" pos:column="38"/></name></name></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name><name pos:line="55" pos:column="9">s<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">.<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">avail_out<pos:position pos:line="55" pos:column="20"/></name></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <call><name pos:line="55" pos:column="23">git_deflate_bound<pos:position pos:line="55" pos:column="40"/></name><argument_list pos:line="55" pos:column="40">(<argument><expr><operator pos:line="55" pos:column="41">&amp;<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="42">s<pos:position pos:line="55" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="45">s<pos:position pos:line="55" pos:column="46"/></name><operator pos:line="55" pos:column="46">.<pos:position pos:line="55" pos:column="47"/></operator><name pos:line="55" pos:column="47">avail_in<pos:position pos:line="55" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="56" pos:column="9">s<pos:position pos:line="56" pos:column="10"/></name><operator pos:line="56" pos:column="10">.<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="11">next_out<pos:position pos:line="56" pos:column="19"/></name></name> <operator pos:line="56" pos:column="20">=<pos:position pos:line="56" pos:column="21"/></operator> <name pos:line="56" pos:column="22">out<pos:position pos:line="56" pos:column="25"/></name> <operator pos:line="56" pos:column="26">=<pos:position pos:line="56" pos:column="27"/></operator> <call><name pos:line="56" pos:column="28">xmalloc<pos:position pos:line="56" pos:column="35"/></name><argument_list pos:line="56" pos:column="35">(<argument><expr><name><name pos:line="56" pos:column="36">s<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">.<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="38">avail_out<pos:position pos:line="56" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="49"/></expr_stmt>
	<while pos:line="57" pos:column="9">while <condition pos:line="57" pos:column="15">(<expr><call><name pos:line="57" pos:column="16">git_deflate<pos:position pos:line="57" pos:column="27"/></name><argument_list pos:line="57" pos:column="27">(<argument><expr><operator pos:line="57" pos:column="28">&amp;<pos:position pos:line="57" pos:column="33"/></operator><name pos:line="57" pos:column="29">s<pos:position pos:line="57" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="32">Z_FINISH<pos:position pos:line="57" pos:column="40"/></name></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></call> <operator pos:line="57" pos:column="42">==<pos:position pos:line="57" pos:column="44"/></operator> <name pos:line="57" pos:column="45">Z_OK<pos:position pos:line="57" pos:column="49"/></name></expr>)<pos:position pos:line="57" pos:column="50"/></condition>
		<block type="pseudo"><empty_stmt pos:line="58" pos:column="17">;<pos:position pos:line="58" pos:column="18"/></empty_stmt></block></while> <comment type="block" pos:line="58" pos:column="19">/* nothing */</comment>
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">git_deflate_end<pos:position pos:line="59" pos:column="24"/></name><argument_list pos:line="59" pos:column="24">(<argument><expr><operator pos:line="59" pos:column="25">&amp;<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="26">s<pos:position pos:line="59" pos:column="27"/></name></expr></argument>)<pos:position pos:line="59" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="29"/></expr_stmt>

	<comment type="block" pos:line="61" pos:column="9">/* Determine if we should auto-checkpoint. */</comment>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">(<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="14">max_packsize<pos:position pos:line="62" pos:column="26"/></name> <operator pos:line="62" pos:column="27">&amp;&amp;<pos:position pos:line="62" pos:column="37"/></operator> <operator pos:line="62" pos:column="30">(<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="31">pack_size<pos:position pos:line="62" pos:column="40"/></name> <operator pos:line="62" pos:column="41">+<pos:position pos:line="62" pos:column="42"/></operator> <literal type="number" pos:line="62" pos:column="43">60<pos:position pos:line="62" pos:column="45"/></literal> <operator pos:line="62" pos:column="46">+<pos:position pos:line="62" pos:column="47"/></operator> <name><name pos:line="62" pos:column="48">s<pos:position pos:line="62" pos:column="49"/></name><operator pos:line="62" pos:column="49">.<pos:position pos:line="62" pos:column="50"/></operator><name pos:line="62" pos:column="50">total_out<pos:position pos:line="62" pos:column="59"/></name></name><operator pos:line="62" pos:column="59">)<pos:position pos:line="62" pos:column="60"/></operator> <operator pos:line="62" pos:column="61">&gt;<pos:position pos:line="62" pos:column="65"/></operator> <name pos:line="62" pos:column="63">max_packsize<pos:position pos:line="62" pos:column="75"/></name><operator pos:line="62" pos:column="75">)<pos:position pos:line="62" pos:column="76"/></operator>
		<operator pos:line="63" pos:column="17">||<pos:position pos:line="63" pos:column="19"/></operator> <operator pos:line="63" pos:column="20">(<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="21">pack_size<pos:position pos:line="63" pos:column="30"/></name> <operator pos:line="63" pos:column="31">+<pos:position pos:line="63" pos:column="32"/></operator> <literal type="number" pos:line="63" pos:column="33">60<pos:position pos:line="63" pos:column="35"/></literal> <operator pos:line="63" pos:column="36">+<pos:position pos:line="63" pos:column="37"/></operator> <name><name pos:line="63" pos:column="38">s<pos:position pos:line="63" pos:column="39"/></name><operator pos:line="63" pos:column="39">.<pos:position pos:line="63" pos:column="40"/></operator><name pos:line="63" pos:column="40">total_out<pos:position pos:line="63" pos:column="49"/></name></name><operator pos:line="63" pos:column="49">)<pos:position pos:line="63" pos:column="50"/></operator> <operator pos:line="63" pos:column="51">&lt;<pos:position pos:line="63" pos:column="55"/></operator> <name pos:line="63" pos:column="53">pack_size<pos:position pos:line="63" pos:column="62"/></name></expr>)<pos:position pos:line="63" pos:column="63"/></condition><then pos:line="63" pos:column="63"> <block pos:line="63" pos:column="64">{

		<comment type="block" pos:line="65" pos:column="17">/* This new object needs to *not* have the current pack_id. */</comment>
		<expr_stmt><expr><name><name pos:line="66" pos:column="17">e<pos:position pos:line="66" pos:column="18"/></name><operator pos:line="66" pos:column="18">-&gt;<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="20">pack_id<pos:position pos:line="66" pos:column="27"/></name></name> <operator pos:line="66" pos:column="28">=<pos:position pos:line="66" pos:column="29"/></operator> <name pos:line="66" pos:column="30">pack_id<pos:position pos:line="66" pos:column="37"/></name> <operator pos:line="66" pos:column="38">+<pos:position pos:line="66" pos:column="39"/></operator> <literal type="number" pos:line="66" pos:column="40">1<pos:position pos:line="66" pos:column="41"/></literal></expr>;<pos:position pos:line="66" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">cycle_packfile<pos:position pos:line="67" pos:column="31"/></name><argument_list pos:line="67" pos:column="31">()<pos:position pos:line="67" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="34"/></expr_stmt>

		<comment type="block" pos:line="69" pos:column="17">/* We cannot carry a delta into the new pack. */</comment>
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name pos:line="70" pos:column="21">delta<pos:position pos:line="70" pos:column="26"/></name></expr>)<pos:position pos:line="70" pos:column="27"/></condition><then pos:line="70" pos:column="27"> <block pos:line="70" pos:column="28">{
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">FREE_AND_NULL<pos:position pos:line="71" pos:column="38"/></name><argument_list pos:line="71" pos:column="38">(<argument><expr><name pos:line="71" pos:column="39">delta<pos:position pos:line="71" pos:column="44"/></name></expr></argument>)<pos:position pos:line="71" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="46"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="73" pos:column="25">git_deflate_init<pos:position pos:line="73" pos:column="41"/></name><argument_list pos:line="73" pos:column="41">(<argument><expr><operator pos:line="73" pos:column="42">&amp;<pos:position pos:line="73" pos:column="47"/></operator><name pos:line="73" pos:column="43">s<pos:position pos:line="73" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="46">pack_compression_level<pos:position pos:line="73" pos:column="68"/></name></expr></argument>)<pos:position pos:line="73" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="74" pos:column="25">s<pos:position pos:line="74" pos:column="26"/></name><operator pos:line="74" pos:column="26">.<pos:position pos:line="74" pos:column="27"/></operator><name pos:line="74" pos:column="27">next_in<pos:position pos:line="74" pos:column="34"/></name></name> <operator pos:line="74" pos:column="35">=<pos:position pos:line="74" pos:column="36"/></operator> <operator pos:line="74" pos:column="37">(<pos:position pos:line="74" pos:column="38"/></operator><name pos:line="74" pos:column="38">void<pos:position pos:line="74" pos:column="42"/></name> <operator pos:line="74" pos:column="43">*<pos:position pos:line="74" pos:column="44"/></operator><operator pos:line="74" pos:column="44">)<pos:position pos:line="74" pos:column="45"/></operator><name><name pos:line="74" pos:column="45">dat<pos:position pos:line="74" pos:column="48"/></name><operator pos:line="74" pos:column="48">-&gt;<pos:position pos:line="74" pos:column="53"/></operator><name pos:line="74" pos:column="50">buf<pos:position pos:line="74" pos:column="53"/></name></name></expr>;<pos:position pos:line="74" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="75" pos:column="25">s<pos:position pos:line="75" pos:column="26"/></name><operator pos:line="75" pos:column="26">.<pos:position pos:line="75" pos:column="27"/></operator><name pos:line="75" pos:column="27">avail_in<pos:position pos:line="75" pos:column="35"/></name></name> <operator pos:line="75" pos:column="36">=<pos:position pos:line="75" pos:column="37"/></operator> <name><name pos:line="75" pos:column="38">dat<pos:position pos:line="75" pos:column="41"/></name><operator pos:line="75" pos:column="41">-&gt;<pos:position pos:line="75" pos:column="46"/></operator><name pos:line="75" pos:column="43">len<pos:position pos:line="75" pos:column="46"/></name></name></expr>;<pos:position pos:line="75" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="76" pos:column="25">s<pos:position pos:line="76" pos:column="26"/></name><operator pos:line="76" pos:column="26">.<pos:position pos:line="76" pos:column="27"/></operator><name pos:line="76" pos:column="27">avail_out<pos:position pos:line="76" pos:column="36"/></name></name> <operator pos:line="76" pos:column="37">=<pos:position pos:line="76" pos:column="38"/></operator> <call><name pos:line="76" pos:column="39">git_deflate_bound<pos:position pos:line="76" pos:column="56"/></name><argument_list pos:line="76" pos:column="56">(<argument><expr><operator pos:line="76" pos:column="57">&amp;<pos:position pos:line="76" pos:column="62"/></operator><name pos:line="76" pos:column="58">s<pos:position pos:line="76" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="61">s<pos:position pos:line="76" pos:column="62"/></name><operator pos:line="76" pos:column="62">.<pos:position pos:line="76" pos:column="63"/></operator><name pos:line="76" pos:column="63">avail_in<pos:position pos:line="76" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="77" pos:column="25">s<pos:position pos:line="77" pos:column="26"/></name><operator pos:line="77" pos:column="26">.<pos:position pos:line="77" pos:column="27"/></operator><name pos:line="77" pos:column="27">next_out<pos:position pos:line="77" pos:column="35"/></name></name> <operator pos:line="77" pos:column="36">=<pos:position pos:line="77" pos:column="37"/></operator> <name pos:line="77" pos:column="38">out<pos:position pos:line="77" pos:column="41"/></name> <operator pos:line="77" pos:column="42">=<pos:position pos:line="77" pos:column="43"/></operator> <call><name pos:line="77" pos:column="44">xrealloc<pos:position pos:line="77" pos:column="52"/></name><argument_list pos:line="77" pos:column="52">(<argument><expr><name pos:line="77" pos:column="53">out<pos:position pos:line="77" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="58">s<pos:position pos:line="77" pos:column="59"/></name><operator pos:line="77" pos:column="59">.<pos:position pos:line="77" pos:column="60"/></operator><name pos:line="77" pos:column="60">avail_out<pos:position pos:line="77" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="71"/></expr_stmt>
			<while pos:line="78" pos:column="25">while <condition pos:line="78" pos:column="31">(<expr><call><name pos:line="78" pos:column="32">git_deflate<pos:position pos:line="78" pos:column="43"/></name><argument_list pos:line="78" pos:column="43">(<argument><expr><operator pos:line="78" pos:column="44">&amp;<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="45">s<pos:position pos:line="78" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="48">Z_FINISH<pos:position pos:line="78" pos:column="56"/></name></expr></argument>)<pos:position pos:line="78" pos:column="57"/></argument_list></call> <operator pos:line="78" pos:column="58">==<pos:position pos:line="78" pos:column="60"/></operator> <name pos:line="78" pos:column="61">Z_OK<pos:position pos:line="78" pos:column="65"/></name></expr>)<pos:position pos:line="78" pos:column="66"/></condition>
				<block type="pseudo"><empty_stmt pos:line="79" pos:column="33">;<pos:position pos:line="79" pos:column="34"/></empty_stmt></block></while> <comment type="block" pos:line="79" pos:column="35">/* nothing */</comment>
			<expr_stmt><expr><call><name pos:line="80" pos:column="25">git_deflate_end<pos:position pos:line="80" pos:column="40"/></name><argument_list pos:line="80" pos:column="40">(<argument><expr><operator pos:line="80" pos:column="41">&amp;<pos:position pos:line="80" pos:column="46"/></operator><name pos:line="80" pos:column="42">s<pos:position pos:line="80" pos:column="43"/></name></expr></argument>)<pos:position pos:line="80" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="81" pos:column="18"/></block></then></if>
	}<pos:position pos:line="82" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="84" pos:column="9">e<pos:position pos:line="84" pos:column="10"/></name><operator pos:line="84" pos:column="10">-&gt;<pos:position pos:line="84" pos:column="15"/></operator><name pos:line="84" pos:column="12">type<pos:position pos:line="84" pos:column="16"/></name></name> <operator pos:line="84" pos:column="17">=<pos:position pos:line="84" pos:column="18"/></operator> <name pos:line="84" pos:column="19">type<pos:position pos:line="84" pos:column="23"/></name></expr>;<pos:position pos:line="84" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="85" pos:column="9">e<pos:position pos:line="85" pos:column="10"/></name><operator pos:line="85" pos:column="10">-&gt;<pos:position pos:line="85" pos:column="15"/></operator><name pos:line="85" pos:column="12">pack_id<pos:position pos:line="85" pos:column="19"/></name></name> <operator pos:line="85" pos:column="20">=<pos:position pos:line="85" pos:column="21"/></operator> <name pos:line="85" pos:column="22">pack_id<pos:position pos:line="85" pos:column="29"/></name></expr>;<pos:position pos:line="85" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="86" pos:column="9">e<pos:position pos:line="86" pos:column="10"/></name><operator pos:line="86" pos:column="10">-&gt;<pos:position pos:line="86" pos:column="15"/></operator><name pos:line="86" pos:column="12">idx<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">.<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="16">offset<pos:position pos:line="86" pos:column="22"/></name></name> <operator pos:line="86" pos:column="23">=<pos:position pos:line="86" pos:column="24"/></operator> <name pos:line="86" pos:column="25">pack_size<pos:position pos:line="86" pos:column="34"/></name></expr>;<pos:position pos:line="86" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="87" pos:column="9">object_count<pos:position pos:line="87" pos:column="21"/></name><operator pos:line="87" pos:column="21">++<pos:position pos:line="87" pos:column="23"/></operator></expr>;<pos:position pos:line="87" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="88" pos:column="9">object_count_by_type<pos:position pos:line="88" pos:column="29"/></name><index pos:line="88" pos:column="29">[<expr><name pos:line="88" pos:column="30">type<pos:position pos:line="88" pos:column="34"/></name></expr>]<pos:position pos:line="88" pos:column="35"/></index></name><operator pos:line="88" pos:column="35">++<pos:position pos:line="88" pos:column="37"/></operator></expr>;<pos:position pos:line="88" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="90" pos:column="9">crc32_begin<pos:position pos:line="90" pos:column="20"/></name><argument_list pos:line="90" pos:column="20">(<argument><expr><name pos:line="90" pos:column="21">pack_file<pos:position pos:line="90" pos:column="30"/></name></expr></argument>)<pos:position pos:line="90" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="32"/></expr_stmt>

	<if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name pos:line="92" pos:column="13">delta<pos:position pos:line="92" pos:column="18"/></name></expr>)<pos:position pos:line="92" pos:column="19"/></condition><then pos:line="92" pos:column="19"> <block pos:line="92" pos:column="20">{
		<decl_stmt><decl><type><name pos:line="93" pos:column="17">off_t<pos:position pos:line="93" pos:column="22"/></name></type> <name pos:line="93" pos:column="23">ofs<pos:position pos:line="93" pos:column="26"/></name> <init pos:line="93" pos:column="27">= <expr><name><name pos:line="93" pos:column="29">e<pos:position pos:line="93" pos:column="30"/></name><operator pos:line="93" pos:column="30">-&gt;<pos:position pos:line="93" pos:column="35"/></operator><name pos:line="93" pos:column="32">idx<pos:position pos:line="93" pos:column="35"/></name><operator pos:line="93" pos:column="35">.<pos:position pos:line="93" pos:column="36"/></operator><name pos:line="93" pos:column="36">offset<pos:position pos:line="93" pos:column="42"/></name></name> <operator pos:line="93" pos:column="43">-<pos:position pos:line="93" pos:column="44"/></operator> <name><name pos:line="93" pos:column="45">last<pos:position pos:line="93" pos:column="49"/></name><operator pos:line="93" pos:column="49">-&gt;<pos:position pos:line="93" pos:column="54"/></operator><name pos:line="93" pos:column="51">offset<pos:position pos:line="93" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="93" pos:column="58"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="94" pos:column="17">unsigned<pos:position pos:line="94" pos:column="25"/></name></type> <name pos:line="94" pos:column="26">pos<pos:position pos:line="94" pos:column="29"/></name> <init pos:line="94" pos:column="30">= <expr><sizeof pos:line="94" pos:column="32">sizeof<argument_list pos:line="94" pos:column="38">(<argument><expr><name pos:line="94" pos:column="39">hdr<pos:position pos:line="94" pos:column="42"/></name></expr></argument>)<pos:position pos:line="94" pos:column="43"/></argument_list></sizeof> <operator pos:line="94" pos:column="44">-<pos:position pos:line="94" pos:column="45"/></operator> <literal type="number" pos:line="94" pos:column="46">1<pos:position pos:line="94" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="94" pos:column="48"/></decl_stmt>

		<expr_stmt><expr><name><name pos:line="96" pos:column="17">delta_count_by_type<pos:position pos:line="96" pos:column="36"/></name><index pos:line="96" pos:column="36">[<expr><name pos:line="96" pos:column="37">type<pos:position pos:line="96" pos:column="41"/></name></expr>]<pos:position pos:line="96" pos:column="42"/></index></name><operator pos:line="96" pos:column="42">++<pos:position pos:line="96" pos:column="44"/></operator></expr>;<pos:position pos:line="96" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="97" pos:column="17">e<pos:position pos:line="97" pos:column="18"/></name><operator pos:line="97" pos:column="18">-&gt;<pos:position pos:line="97" pos:column="23"/></operator><name pos:line="97" pos:column="20">depth<pos:position pos:line="97" pos:column="25"/></name></name> <operator pos:line="97" pos:column="26">=<pos:position pos:line="97" pos:column="27"/></operator> <name><name pos:line="97" pos:column="28">last<pos:position pos:line="97" pos:column="32"/></name><operator pos:line="97" pos:column="32">-&gt;<pos:position pos:line="97" pos:column="37"/></operator><name pos:line="97" pos:column="34">depth<pos:position pos:line="97" pos:column="39"/></name></name> <operator pos:line="97" pos:column="40">+<pos:position pos:line="97" pos:column="41"/></operator> <literal type="number" pos:line="97" pos:column="42">1<pos:position pos:line="97" pos:column="43"/></literal></expr>;<pos:position pos:line="97" pos:column="44"/></expr_stmt>

		<expr_stmt><expr><name pos:line="99" pos:column="17">hdrlen<pos:position pos:line="99" pos:column="23"/></name> <operator pos:line="99" pos:column="24">=<pos:position pos:line="99" pos:column="25"/></operator> <call><name pos:line="99" pos:column="26">encode_in_pack_object_header<pos:position pos:line="99" pos:column="54"/></name><argument_list pos:line="99" pos:column="54">(<argument><expr><name pos:line="99" pos:column="55">hdr<pos:position pos:line="99" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="60">sizeof<argument_list pos:line="99" pos:column="66">(<argument><expr><name pos:line="99" pos:column="67">hdr<pos:position pos:line="99" pos:column="70"/></name></expr></argument>)<pos:position pos:line="99" pos:column="71"/></argument_list></sizeof></expr></argument>,
						      <argument><expr><name pos:line="100" pos:column="55">OBJ_OFS_DELTA<pos:position pos:line="100" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="70">deltalen<pos:position pos:line="100" pos:column="78"/></name></expr></argument>)<pos:position pos:line="100" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="101" pos:column="17">sha1write<pos:position pos:line="101" pos:column="26"/></name><argument_list pos:line="101" pos:column="26">(<argument><expr><name pos:line="101" pos:column="27">pack_file<pos:position pos:line="101" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="38">hdr<pos:position pos:line="101" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="43">hdrlen<pos:position pos:line="101" pos:column="49"/></name></expr></argument>)<pos:position pos:line="101" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="102" pos:column="17">pack_size<pos:position pos:line="102" pos:column="26"/></name> <operator pos:line="102" pos:column="27">+=<pos:position pos:line="102" pos:column="29"/></operator> <name pos:line="102" pos:column="30">hdrlen<pos:position pos:line="102" pos:column="36"/></name></expr>;<pos:position pos:line="102" pos:column="37"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="104" pos:column="17">hdr<pos:position pos:line="104" pos:column="20"/></name><index pos:line="104" pos:column="20">[<expr><name pos:line="104" pos:column="21">pos<pos:position pos:line="104" pos:column="24"/></name></expr>]<pos:position pos:line="104" pos:column="25"/></index></name> <operator pos:line="104" pos:column="26">=<pos:position pos:line="104" pos:column="27"/></operator> <name pos:line="104" pos:column="28">ofs<pos:position pos:line="104" pos:column="31"/></name> <operator pos:line="104" pos:column="32">&amp;<pos:position pos:line="104" pos:column="37"/></operator> <literal type="number" pos:line="104" pos:column="34">127<pos:position pos:line="104" pos:column="37"/></literal></expr>;<pos:position pos:line="104" pos:column="38"/></expr_stmt>
		<while pos:line="105" pos:column="17">while <condition pos:line="105" pos:column="23">(<expr><name pos:line="105" pos:column="24">ofs<pos:position pos:line="105" pos:column="27"/></name> <operator pos:line="105" pos:column="28">&gt;&gt;=<pos:position pos:line="105" pos:column="37"/></operator> <literal type="number" pos:line="105" pos:column="32">7<pos:position pos:line="105" pos:column="33"/></literal></expr>)<pos:position pos:line="105" pos:column="34"/></condition>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="106" pos:column="25">hdr<pos:position pos:line="106" pos:column="28"/></name><index pos:line="106" pos:column="28">[<expr><operator pos:line="106" pos:column="29">--<pos:position pos:line="106" pos:column="31"/></operator><name pos:line="106" pos:column="31">pos<pos:position pos:line="106" pos:column="34"/></name></expr>]<pos:position pos:line="106" pos:column="35"/></index></name> <operator pos:line="106" pos:column="36">=<pos:position pos:line="106" pos:column="37"/></operator> <literal type="number" pos:line="106" pos:column="38">128<pos:position pos:line="106" pos:column="41"/></literal> <operator pos:line="106" pos:column="42">|<pos:position pos:line="106" pos:column="43"/></operator> <operator pos:line="106" pos:column="44">(<pos:position pos:line="106" pos:column="45"/></operator><operator pos:line="106" pos:column="45">--<pos:position pos:line="106" pos:column="47"/></operator><name pos:line="106" pos:column="47">ofs<pos:position pos:line="106" pos:column="50"/></name> <operator pos:line="106" pos:column="51">&amp;<pos:position pos:line="106" pos:column="56"/></operator> <literal type="number" pos:line="106" pos:column="53">127<pos:position pos:line="106" pos:column="56"/></literal><operator pos:line="106" pos:column="56">)<pos:position pos:line="106" pos:column="57"/></operator></expr>;<pos:position pos:line="106" pos:column="58"/></expr_stmt></block></while>
		<expr_stmt><expr><call><name pos:line="107" pos:column="17">sha1write<pos:position pos:line="107" pos:column="26"/></name><argument_list pos:line="107" pos:column="26">(<argument><expr><name pos:line="107" pos:column="27">pack_file<pos:position pos:line="107" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="38">hdr<pos:position pos:line="107" pos:column="41"/></name> <operator pos:line="107" pos:column="42">+<pos:position pos:line="107" pos:column="43"/></operator> <name pos:line="107" pos:column="44">pos<pos:position pos:line="107" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="107" pos:column="49">sizeof<argument_list pos:line="107" pos:column="55">(<argument><expr><name pos:line="107" pos:column="56">hdr<pos:position pos:line="107" pos:column="59"/></name></expr></argument>)<pos:position pos:line="107" pos:column="60"/></argument_list></sizeof> <operator pos:line="107" pos:column="61">-<pos:position pos:line="107" pos:column="62"/></operator> <name pos:line="107" pos:column="63">pos<pos:position pos:line="107" pos:column="66"/></name></expr></argument>)<pos:position pos:line="107" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name pos:line="108" pos:column="17">pack_size<pos:position pos:line="108" pos:column="26"/></name> <operator pos:line="108" pos:column="27">+=<pos:position pos:line="108" pos:column="29"/></operator> <sizeof pos:line="108" pos:column="30">sizeof<argument_list pos:line="108" pos:column="36">(<argument><expr><name pos:line="108" pos:column="37">hdr<pos:position pos:line="108" pos:column="40"/></name></expr></argument>)<pos:position pos:line="108" pos:column="41"/></argument_list></sizeof> <operator pos:line="108" pos:column="42">-<pos:position pos:line="108" pos:column="43"/></operator> <name pos:line="108" pos:column="44">pos<pos:position pos:line="108" pos:column="47"/></name></expr>;<pos:position pos:line="108" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="109" pos:column="10"/></block></then> <else pos:line="109" pos:column="11">else <block pos:line="109" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="110" pos:column="17">e<pos:position pos:line="110" pos:column="18"/></name><operator pos:line="110" pos:column="18">-&gt;<pos:position pos:line="110" pos:column="23"/></operator><name pos:line="110" pos:column="20">depth<pos:position pos:line="110" pos:column="25"/></name></name> <operator pos:line="110" pos:column="26">=<pos:position pos:line="110" pos:column="27"/></operator> <literal type="number" pos:line="110" pos:column="28">0<pos:position pos:line="110" pos:column="29"/></literal></expr>;<pos:position pos:line="110" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="111" pos:column="17">hdrlen<pos:position pos:line="111" pos:column="23"/></name> <operator pos:line="111" pos:column="24">=<pos:position pos:line="111" pos:column="25"/></operator> <call><name pos:line="111" pos:column="26">encode_in_pack_object_header<pos:position pos:line="111" pos:column="54"/></name><argument_list pos:line="111" pos:column="54">(<argument><expr><name pos:line="111" pos:column="55">hdr<pos:position pos:line="111" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="111" pos:column="60">sizeof<argument_list pos:line="111" pos:column="66">(<argument><expr><name pos:line="111" pos:column="67">hdr<pos:position pos:line="111" pos:column="70"/></name></expr></argument>)<pos:position pos:line="111" pos:column="71"/></argument_list></sizeof></expr></argument>,
						      <argument><expr><name pos:line="112" pos:column="55">type<pos:position pos:line="112" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="61">dat<pos:position pos:line="112" pos:column="64"/></name><operator pos:line="112" pos:column="64">-&gt;<pos:position pos:line="112" pos:column="69"/></operator><name pos:line="112" pos:column="66">len<pos:position pos:line="112" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="113" pos:column="17">sha1write<pos:position pos:line="113" pos:column="26"/></name><argument_list pos:line="113" pos:column="26">(<argument><expr><name pos:line="113" pos:column="27">pack_file<pos:position pos:line="113" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="38">hdr<pos:position pos:line="113" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="43">hdrlen<pos:position pos:line="113" pos:column="49"/></name></expr></argument>)<pos:position pos:line="113" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="114" pos:column="17">pack_size<pos:position pos:line="114" pos:column="26"/></name> <operator pos:line="114" pos:column="27">+=<pos:position pos:line="114" pos:column="29"/></operator> <name pos:line="114" pos:column="30">hdrlen<pos:position pos:line="114" pos:column="36"/></name></expr>;<pos:position pos:line="114" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="115" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="117" pos:column="9">sha1write<pos:position pos:line="117" pos:column="18"/></name><argument_list pos:line="117" pos:column="18">(<argument><expr><name pos:line="117" pos:column="19">pack_file<pos:position pos:line="117" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="30">out<pos:position pos:line="117" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="35">s<pos:position pos:line="117" pos:column="36"/></name><operator pos:line="117" pos:column="36">.<pos:position pos:line="117" pos:column="37"/></operator><name pos:line="117" pos:column="37">total_out<pos:position pos:line="117" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="118" pos:column="9">pack_size<pos:position pos:line="118" pos:column="18"/></name> <operator pos:line="118" pos:column="19">+=<pos:position pos:line="118" pos:column="21"/></operator> <name><name pos:line="118" pos:column="22">s<pos:position pos:line="118" pos:column="23"/></name><operator pos:line="118" pos:column="23">.<pos:position pos:line="118" pos:column="24"/></operator><name pos:line="118" pos:column="24">total_out<pos:position pos:line="118" pos:column="33"/></name></name></expr>;<pos:position pos:line="118" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="120" pos:column="9">e<pos:position pos:line="120" pos:column="10"/></name><operator pos:line="120" pos:column="10">-&gt;<pos:position pos:line="120" pos:column="15"/></operator><name pos:line="120" pos:column="12">idx<pos:position pos:line="120" pos:column="15"/></name><operator pos:line="120" pos:column="15">.<pos:position pos:line="120" pos:column="16"/></operator><name pos:line="120" pos:column="16">crc32<pos:position pos:line="120" pos:column="21"/></name></name> <operator pos:line="120" pos:column="22">=<pos:position pos:line="120" pos:column="23"/></operator> <call><name pos:line="120" pos:column="24">crc32_end<pos:position pos:line="120" pos:column="33"/></name><argument_list pos:line="120" pos:column="33">(<argument><expr><name pos:line="120" pos:column="34">pack_file<pos:position pos:line="120" pos:column="43"/></name></expr></argument>)<pos:position pos:line="120" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="122" pos:column="9">free<pos:position pos:line="122" pos:column="13"/></name><argument_list pos:line="122" pos:column="13">(<argument><expr><name pos:line="122" pos:column="14">out<pos:position pos:line="122" pos:column="17"/></name></expr></argument>)<pos:position pos:line="122" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="123" pos:column="9">free<pos:position pos:line="123" pos:column="13"/></name><argument_list pos:line="123" pos:column="13">(<argument><expr><name pos:line="123" pos:column="14">delta<pos:position pos:line="123" pos:column="19"/></name></expr></argument>)<pos:position pos:line="123" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="21"/></expr_stmt>
	<if pos:line="124" pos:column="9">if <condition pos:line="124" pos:column="12">(<expr><name pos:line="124" pos:column="13">last<pos:position pos:line="124" pos:column="17"/></name></expr>)<pos:position pos:line="124" pos:column="18"/></condition><then pos:line="124" pos:column="18"> <block pos:line="124" pos:column="19">{
		<if pos:line="125" pos:column="17">if <condition pos:line="125" pos:column="20">(<expr><name><name pos:line="125" pos:column="21">last<pos:position pos:line="125" pos:column="25"/></name><operator pos:line="125" pos:column="25">-&gt;<pos:position pos:line="125" pos:column="30"/></operator><name pos:line="125" pos:column="27">no_swap<pos:position pos:line="125" pos:column="34"/></name></name></expr>)<pos:position pos:line="125" pos:column="35"/></condition><then pos:line="125" pos:column="35"> <block pos:line="125" pos:column="36">{
			<expr_stmt><expr><name><name pos:line="126" pos:column="25">last<pos:position pos:line="126" pos:column="29"/></name><operator pos:line="126" pos:column="29">-&gt;<pos:position pos:line="126" pos:column="34"/></operator><name pos:line="126" pos:column="31">data<pos:position pos:line="126" pos:column="35"/></name></name> <operator pos:line="126" pos:column="36">=<pos:position pos:line="126" pos:column="37"/></operator> <operator pos:line="126" pos:column="38">*<pos:position pos:line="126" pos:column="39"/></operator><name pos:line="126" pos:column="39">dat<pos:position pos:line="126" pos:column="42"/></name></expr>;<pos:position pos:line="126" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="127" pos:column="18"/></block></then> <else pos:line="127" pos:column="19">else <block pos:line="127" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="128" pos:column="25">strbuf_swap<pos:position pos:line="128" pos:column="36"/></name><argument_list pos:line="128" pos:column="36">(<argument><expr><operator pos:line="128" pos:column="37">&amp;<pos:position pos:line="128" pos:column="42"/></operator><name><name pos:line="128" pos:column="38">last<pos:position pos:line="128" pos:column="42"/></name><operator pos:line="128" pos:column="42">-&gt;<pos:position pos:line="128" pos:column="47"/></operator><name pos:line="128" pos:column="44">data<pos:position pos:line="128" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="50">dat<pos:position pos:line="128" pos:column="53"/></name></expr></argument>)<pos:position pos:line="128" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="129" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name><name pos:line="130" pos:column="17">last<pos:position pos:line="130" pos:column="21"/></name><operator pos:line="130" pos:column="21">-&gt;<pos:position pos:line="130" pos:column="26"/></operator><name pos:line="130" pos:column="23">offset<pos:position pos:line="130" pos:column="29"/></name></name> <operator pos:line="130" pos:column="30">=<pos:position pos:line="130" pos:column="31"/></operator> <name><name pos:line="130" pos:column="32">e<pos:position pos:line="130" pos:column="33"/></name><operator pos:line="130" pos:column="33">-&gt;<pos:position pos:line="130" pos:column="38"/></operator><name pos:line="130" pos:column="35">idx<pos:position pos:line="130" pos:column="38"/></name><operator pos:line="130" pos:column="38">.<pos:position pos:line="130" pos:column="39"/></operator><name pos:line="130" pos:column="39">offset<pos:position pos:line="130" pos:column="45"/></name></name></expr>;<pos:position pos:line="130" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="131" pos:column="17">last<pos:position pos:line="131" pos:column="21"/></name><operator pos:line="131" pos:column="21">-&gt;<pos:position pos:line="131" pos:column="26"/></operator><name pos:line="131" pos:column="23">depth<pos:position pos:line="131" pos:column="28"/></name></name> <operator pos:line="131" pos:column="29">=<pos:position pos:line="131" pos:column="30"/></operator> <name><name pos:line="131" pos:column="31">e<pos:position pos:line="131" pos:column="32"/></name><operator pos:line="131" pos:column="32">-&gt;<pos:position pos:line="131" pos:column="37"/></operator><name pos:line="131" pos:column="34">depth<pos:position pos:line="131" pos:column="39"/></name></name></expr>;<pos:position pos:line="131" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="132" pos:column="10"/></block></then></if>
	<return pos:line="133" pos:column="9">return <expr><literal type="number" pos:line="133" pos:column="16">0<pos:position pos:line="133" pos:column="17"/></literal></expr>;<pos:position pos:line="133" pos:column="18"/></return>
}<pos:position pos:line="134" pos:column="2"/></block></function></unit>

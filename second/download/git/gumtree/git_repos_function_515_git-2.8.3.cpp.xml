<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_515_git-2.8.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">git_config_include<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">var<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">value<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">void<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">data<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">config_include_data<pos:position pos:line="3" pos:column="35"/></name></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">inc<pos:position pos:line="3" pos:column="40"/></name> <init pos:line="3" pos:column="41">= <expr><name pos:line="3" pos:column="43">data<pos:position pos:line="3" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/*
	 * Pass along all values, including "include" directives; this makes it
	 * possible to query information on the includes themselves.
	 */</comment>
	<expr_stmt><expr><name pos:line="10" pos:column="9">ret<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name><name pos:line="10" pos:column="15">inc<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">fn<pos:position pos:line="10" pos:column="22"/></name></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">var<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">value<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="35">inc<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">data<pos:position pos:line="10" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">ret<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">&lt;<pos:position pos:line="11" pos:column="21"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">ret<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></return></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">strcmp<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">var<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="26">"include.path"<pos:position pos:line="14" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">ret<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <call><name pos:line="15" pos:column="23">handle_path_include<pos:position pos:line="15" pos:column="42"/></name><argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">value<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">inc<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt></block></then></if>
	<return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">ret<pos:position pos:line="16" pos:column="19"/></name></expr>;<pos:position pos:line="16" pos:column="20"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

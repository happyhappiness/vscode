<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1894_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">replace_each_worktree_head_symref<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">oldref<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">newref<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
				      <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">logmsg<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">worktree<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier><modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">worktrees<pos:position pos:line="5" pos:column="36"/></name> <init pos:line="5" pos:column="37">= <expr><call><name pos:line="5" pos:column="39">get_worktrees<pos:position pos:line="5" pos:column="52"/></name><argument_list pos:line="5" pos:column="52">(<argument><expr><literal type="number" pos:line="5" pos:column="53">0<pos:position pos:line="5" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr>;<pos:position pos:line="8" pos:column="20"/></init> <condition><expr><name><name pos:line="8" pos:column="21">worktrees<pos:position pos:line="8" pos:column="30"/></name><index pos:line="8" pos:column="30">[<expr><name pos:line="8" pos:column="31">i<pos:position pos:line="8" pos:column="32"/></name></expr>]<pos:position pos:line="8" pos:column="33"/></index></name></expr>;<pos:position pos:line="8" pos:column="34"/></condition> <incr><expr><name pos:line="8" pos:column="35">i<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">++<pos:position pos:line="8" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="39"/></control> <block pos:line="8" pos:column="40">{
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">ref_store<pos:position pos:line="9" pos:column="33"/></name></name> <modifier pos:line="9" pos:column="34">*<pos:position pos:line="9" pos:column="35"/></modifier></type><name pos:line="9" pos:column="35">refs<pos:position pos:line="9" pos:column="39"/></name></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name><name pos:line="11" pos:column="21">worktrees<pos:position pos:line="11" pos:column="30"/></name><index pos:line="11" pos:column="30">[<expr><name pos:line="11" pos:column="31">i<pos:position pos:line="11" pos:column="32"/></name></expr>]<pos:position pos:line="11" pos:column="33"/></index></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">is_detached<pos:position pos:line="11" pos:column="46"/></name></expr>)<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47">
			<block type="pseudo"><continue pos:line="12" pos:column="25">continue;<pos:position pos:line="12" pos:column="34"/></continue></block></then></if>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name><name pos:line="13" pos:column="21">worktrees<pos:position pos:line="13" pos:column="30"/></name><index pos:line="13" pos:column="30">[<expr><name pos:line="13" pos:column="31">i<pos:position pos:line="13" pos:column="32"/></name></expr>]<pos:position pos:line="13" pos:column="33"/></index></name><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="35">head_ref<pos:position pos:line="13" pos:column="43"/></name> <operator pos:line="13" pos:column="44">&amp;&amp;<pos:position pos:line="13" pos:column="54"/></operator>
		    <call><name pos:line="14" pos:column="21">strcmp<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">oldref<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="36">worktrees<pos:position pos:line="14" pos:column="45"/></name><index pos:line="14" pos:column="45">[<expr><name pos:line="14" pos:column="46">i<pos:position pos:line="14" pos:column="47"/></name></expr>]<pos:position pos:line="14" pos:column="48"/></index></name><operator pos:line="14" pos:column="48">-&gt;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="50">head_ref<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="60"/></condition><then pos:line="14" pos:column="60">
			<block type="pseudo"><continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="17" pos:column="17">refs<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <call><name pos:line="17" pos:column="24">get_worktree_ref_store<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><name><name pos:line="17" pos:column="47">worktrees<pos:position pos:line="17" pos:column="56"/></name><index pos:line="17" pos:column="56">[<expr><name pos:line="17" pos:column="57">i<pos:position pos:line="17" pos:column="58"/></name></expr>]<pos:position pos:line="17" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">refs_create_symref<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">refs<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="46">"HEAD"<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">newref<pos:position pos:line="18" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="62">logmsg<pos:position pos:line="18" pos:column="68"/></name></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="70"/></condition><then pos:line="18" pos:column="70">
			<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="25">ret<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <call><name pos:line="19" pos:column="31">error<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><call><name pos:line="19" pos:column="37">_<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><literal type="string" pos:line="19" pos:column="39">"HEAD of working tree %s is not updated"<pos:position pos:line="19" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="80"/></argument_list></call></expr></argument>,
				    <argument><expr><name><name pos:line="20" pos:column="37">worktrees<pos:position pos:line="20" pos:column="46"/></name><index pos:line="20" pos:column="46">[<expr><name pos:line="20" pos:column="47">i<pos:position pos:line="20" pos:column="48"/></name></expr>]<pos:position pos:line="20" pos:column="49"/></index></name><operator pos:line="20" pos:column="49">-&gt;<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="51">path<pos:position pos:line="20" pos:column="55"/></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt></block></then></if>
	}<pos:position pos:line="21" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">free_worktrees<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">worktrees<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
	<return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">ret<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

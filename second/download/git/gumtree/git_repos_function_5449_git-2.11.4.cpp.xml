<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5449_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fetch_one<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">remote<pos:position pos:line="1" pos:column="35"/></name></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">remote<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">argc<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier><modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">argv<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> <name pos:line="3" pos:column="22">char<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier><modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">refs<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">NULL<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">refspec<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">refspec<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">ref_nr<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">exit_code<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">remote<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">die<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><call><name pos:line="9" pos:column="21">_<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><literal type="string" pos:line="9" pos:column="23">"No remote repository specified.  Please, specify either a URL or a\n"<pos:position pos:line="9" pos:column="93"/></literal>
		    <literal type="string" pos:line="10" pos:column="21">"remote name from which new revisions should be fetched."<pos:position pos:line="10" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="81"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">gtransport<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <call><name pos:line="12" pos:column="22">prepare_transport<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">remote<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="48">1<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">prune<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">&lt;<pos:position pos:line="14" pos:column="23"/></operator> <literal type="number" pos:line="14" pos:column="21">0<pos:position pos:line="14" pos:column="22"/></literal></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23"> <block pos:line="14" pos:column="24">{
		<comment type="block" pos:line="15" pos:column="17">/* no command line request */</comment>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><literal type="number" pos:line="16" pos:column="21">0<pos:position pos:line="16" pos:column="22"/></literal> <operator pos:line="16" pos:column="23">&lt;=<pos:position pos:line="16" pos:column="28"/></operator> <name><name pos:line="16" pos:column="26">gtransport<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">remote<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">-&gt;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="46">prune<pos:position pos:line="16" pos:column="51"/></name></name></expr>)<pos:position pos:line="16" pos:column="52"/></condition><then pos:line="16" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">prune<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">=<pos:position pos:line="17" pos:column="32"/></operator> <name><name pos:line="17" pos:column="33">gtransport<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">remote<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">-&gt;<pos:position pos:line="17" pos:column="56"/></operator><name pos:line="17" pos:column="53">prune<pos:position pos:line="17" pos:column="58"/></name></name></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt></block></then>
		<elseif pos:line="18" pos:column="17">else <if pos:line="18" pos:column="22">if <condition pos:line="18" pos:column="25">(<expr><literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal> <operator pos:line="18" pos:column="28">&lt;=<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="31">fetch_prune_config<pos:position pos:line="18" pos:column="49"/></name></expr>)<pos:position pos:line="18" pos:column="50"/></condition><then pos:line="18" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="25">prune<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">=<pos:position pos:line="19" pos:column="32"/></operator> <name pos:line="19" pos:column="33">fetch_prune_config<pos:position pos:line="19" pos:column="51"/></name></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt></block></then></if></elseif>
		<else pos:line="20" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="25">prune<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="33">PRUNE_BY_DEFAULT<pos:position pos:line="21" pos:column="49"/></name></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt></block></else></if>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">argc<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">&gt;<pos:position pos:line="24" pos:column="22"/></operator> <literal type="number" pos:line="24" pos:column="20">0<pos:position pos:line="24" pos:column="21"/></literal></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22"> <block pos:line="24" pos:column="23">{
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">int<pos:position pos:line="25" pos:column="20"/></name></type> <name pos:line="25" pos:column="21">j<pos:position pos:line="25" pos:column="22"/></name> <init pos:line="25" pos:column="23">= <expr><literal type="number" pos:line="25" pos:column="25">0<pos:position pos:line="25" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">int<pos:position pos:line="26" pos:column="20"/></name></type> <name pos:line="26" pos:column="21">i<pos:position pos:line="26" pos:column="22"/></name></decl>;<pos:position pos:line="26" pos:column="23"/></decl_stmt>
		<expr_stmt><expr><name pos:line="27" pos:column="17">refs<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <call><name pos:line="27" pos:column="24">xcalloc<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><call><name pos:line="27" pos:column="32">st_add<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">argc<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="45">1<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="49">sizeof<argument_list pos:line="27" pos:column="55">(<argument><expr><specifier pos:line="27" pos:column="56">const<pos:position pos:line="27" pos:column="61"/></specifier> <name pos:line="27" pos:column="62">char<pos:position pos:line="27" pos:column="66"/></name> <operator pos:line="27" pos:column="67">*<pos:position pos:line="27" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="71"/></expr_stmt>
		<for pos:line="28" pos:column="17">for <control pos:line="28" pos:column="21">(<init><expr><name pos:line="28" pos:column="22">i<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <literal type="number" pos:line="28" pos:column="26">0<pos:position pos:line="28" pos:column="27"/></literal></expr>;<pos:position pos:line="28" pos:column="28"/></init> <condition><expr><name pos:line="28" pos:column="29">i<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">&lt;<pos:position pos:line="28" pos:column="35"/></operator> <name pos:line="28" pos:column="33">argc<pos:position pos:line="28" pos:column="37"/></name></expr>;<pos:position pos:line="28" pos:column="38"/></condition> <incr><expr><name pos:line="28" pos:column="39">i<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">++<pos:position pos:line="28" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="43"/></control> <block pos:line="28" pos:column="44">{
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><operator pos:line="29" pos:column="29">!<pos:position pos:line="29" pos:column="30"/></operator><call><name pos:line="29" pos:column="30">strcmp<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name><name pos:line="29" pos:column="37">argv<pos:position pos:line="29" pos:column="41"/></name><index pos:line="29" pos:column="41">[<expr><name pos:line="29" pos:column="42">i<pos:position pos:line="29" pos:column="43"/></name></expr>]<pos:position pos:line="29" pos:column="44"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="46">"tag"<pos:position pos:line="29" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="53"/></condition><then pos:line="29" pos:column="53"> <block pos:line="29" pos:column="54">{
				<expr_stmt><expr><name pos:line="30" pos:column="33">i<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">++<pos:position pos:line="30" pos:column="36"/></operator></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
				<if pos:line="31" pos:column="33">if <condition pos:line="31" pos:column="36">(<expr><name pos:line="31" pos:column="37">i<pos:position pos:line="31" pos:column="38"/></name> <operator pos:line="31" pos:column="39">&gt;=<pos:position pos:line="31" pos:column="44"/></operator> <name pos:line="31" pos:column="42">argc<pos:position pos:line="31" pos:column="46"/></name></expr>)<pos:position pos:line="31" pos:column="47"/></condition><then pos:line="31" pos:column="47">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="41">die<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">(<argument><expr><call><name pos:line="32" pos:column="45">_<pos:position pos:line="32" pos:column="46"/></name><argument_list pos:line="32" pos:column="46">(<argument><expr><literal type="string" pos:line="32" pos:column="47">"You need to specify a tag name."<pos:position pos:line="32" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="83"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name><name pos:line="33" pos:column="33">refs<pos:position pos:line="33" pos:column="37"/></name><index pos:line="33" pos:column="37">[<expr><name pos:line="33" pos:column="38">j<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">++<pos:position pos:line="33" pos:column="41"/></operator></expr>]<pos:position pos:line="33" pos:column="42"/></index></name> <operator pos:line="33" pos:column="43">=<pos:position pos:line="33" pos:column="44"/></operator> <call><name pos:line="33" pos:column="45">xstrfmt<pos:position pos:line="33" pos:column="52"/></name><argument_list pos:line="33" pos:column="52">(<argument><expr><literal type="string" pos:line="33" pos:column="53">"refs/tags/%s:refs/tags/%s"<pos:position pos:line="33" pos:column="80"/></literal></expr></argument>,
						    <argument><expr><name><name pos:line="34" pos:column="53">argv<pos:position pos:line="34" pos:column="57"/></name><index pos:line="34" pos:column="57">[<expr><name pos:line="34" pos:column="58">i<pos:position pos:line="34" pos:column="59"/></name></expr>]<pos:position pos:line="34" pos:column="60"/></index></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="62">argv<pos:position pos:line="34" pos:column="66"/></name><index pos:line="34" pos:column="66">[<expr><name pos:line="34" pos:column="67">i<pos:position pos:line="34" pos:column="68"/></name></expr>]<pos:position pos:line="34" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt>
			}<pos:position pos:line="35" pos:column="26"/></block></then> <else pos:line="35" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="33">refs<pos:position pos:line="36" pos:column="37"/></name><index pos:line="36" pos:column="37">[<expr><name pos:line="36" pos:column="38">j<pos:position pos:line="36" pos:column="39"/></name><operator pos:line="36" pos:column="39">++<pos:position pos:line="36" pos:column="41"/></operator></expr>]<pos:position pos:line="36" pos:column="42"/></index></name> <operator pos:line="36" pos:column="43">=<pos:position pos:line="36" pos:column="44"/></operator> <name><name pos:line="36" pos:column="45">argv<pos:position pos:line="36" pos:column="49"/></name><index pos:line="36" pos:column="49">[<expr><name pos:line="36" pos:column="50">i<pos:position pos:line="36" pos:column="51"/></name></expr>]<pos:position pos:line="36" pos:column="52"/></index></name></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt></block></else></if>
		}<pos:position pos:line="37" pos:column="18"/></block></for>
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">refs<pos:position pos:line="38" pos:column="21"/></name><index pos:line="38" pos:column="21">[<expr><name pos:line="38" pos:column="22">j<pos:position pos:line="38" pos:column="23"/></name></expr>]<pos:position pos:line="38" pos:column="24"/></index></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">NULL<pos:position pos:line="38" pos:column="31"/></name></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">ref_nr<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <name pos:line="39" pos:column="26">j<pos:position pos:line="39" pos:column="27"/></name></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="42" pos:column="9">sigchain_push_common<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">unlock_pack_on_signal<pos:position pos:line="42" pos:column="51"/></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">atexit<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><name pos:line="43" pos:column="16">unlock_pack<pos:position pos:line="43" pos:column="27"/></name></expr></argument>)<pos:position pos:line="43" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="44" pos:column="9">refspec<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <call><name pos:line="44" pos:column="19">parse_fetch_refspec<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">(<argument><expr><name pos:line="44" pos:column="39">ref_nr<pos:position pos:line="44" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="47">refs<pos:position pos:line="44" pos:column="51"/></name></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name pos:line="45" pos:column="9">exit_code<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <call><name pos:line="45" pos:column="21">do_fetch<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">gtransport<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="42">refspec<pos:position pos:line="45" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="51">ref_nr<pos:position pos:line="45" pos:column="57"/></name></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">free_refspec<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">ref_nr<pos:position pos:line="46" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="30">refspec<pos:position pos:line="46" pos:column="37"/></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">transport_disconnect<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">gtransport<pos:position pos:line="47" pos:column="40"/></name></expr></argument>)<pos:position pos:line="47" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="48" pos:column="9">gtransport<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="22">NULL<pos:position pos:line="48" pos:column="26"/></name></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>
	<return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">exit_code<pos:position pos:line="49" pos:column="25"/></name></expr>;<pos:position pos:line="49" pos:column="26"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

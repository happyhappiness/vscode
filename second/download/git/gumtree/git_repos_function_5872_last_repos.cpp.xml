<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5872_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">outf<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">void<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">dummy<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="30">mmbuffer_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ptr<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">nbuf<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<for pos:line="4" pos:column="9">for <control pos:line="4" pos:column="13">(<init><expr><name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr>;<pos:position pos:line="4" pos:column="20"/></init> <condition><expr><name pos:line="4" pos:column="21">i<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="25">nbuf<pos:position pos:line="4" pos:column="29"/></name></expr>;<pos:position pos:line="4" pos:column="30"/></condition> <incr><expr><name pos:line="4" pos:column="31">i<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">++<pos:position pos:line="4" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="35"/></control>
		<block type="pseudo"><if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><call><name pos:line="5" pos:column="21">write_in_full<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><literal type="number" pos:line="5" pos:column="35">1<pos:position pos:line="5" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="38">ptr<pos:position pos:line="5" pos:column="41"/></name><index pos:line="5" pos:column="41">[<expr><name pos:line="5" pos:column="42">i<pos:position pos:line="5" pos:column="43"/></name></expr>]<pos:position pos:line="5" pos:column="44"/></index></name><operator pos:line="5" pos:column="44">.<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="45">ptr<pos:position pos:line="5" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="50">ptr<pos:position pos:line="5" pos:column="53"/></name><index pos:line="5" pos:column="53">[<expr><name pos:line="5" pos:column="54">i<pos:position pos:line="5" pos:column="55"/></name></expr>]<pos:position pos:line="5" pos:column="56"/></index></name><operator pos:line="5" pos:column="56">.<pos:position pos:line="5" pos:column="57"/></operator><name pos:line="5" pos:column="57">size<pos:position pos:line="5" pos:column="61"/></name></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call> <operator pos:line="5" pos:column="63">!=<pos:position pos:line="5" pos:column="65"/></operator> <name><name pos:line="5" pos:column="66">ptr<pos:position pos:line="5" pos:column="69"/></name><index pos:line="5" pos:column="69">[<expr><name pos:line="5" pos:column="70">i<pos:position pos:line="5" pos:column="71"/></name></expr>]<pos:position pos:line="5" pos:column="72"/></index></name><operator pos:line="5" pos:column="72">.<pos:position pos:line="5" pos:column="73"/></operator><name pos:line="5" pos:column="73">size<pos:position pos:line="5" pos:column="77"/></name></expr>)<pos:position pos:line="5" pos:column="78"/></condition><then pos:line="5" pos:column="78">
			<block type="pseudo"><return pos:line="6" pos:column="25">return <expr><operator pos:line="6" pos:column="32">-<pos:position pos:line="6" pos:column="33"/></operator><literal type="number" pos:line="6" pos:column="33">1<pos:position pos:line="6" pos:column="34"/></literal></expr>;<pos:position pos:line="6" pos:column="35"/></return></block></then></if></block></for>
	<return pos:line="7" pos:column="9">return <expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2567_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">prime_cache_tree_rec<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">cache_tree<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">it<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="57">struct<pos:position pos:line="1" pos:column="63"/></name> <name pos:line="1" pos:column="64">tree<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">tree<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">tree_desc<pos:position pos:line="3" pos:column="25"/></name></name></type> <name pos:line="3" pos:column="26">desc<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">name_entry<pos:position pos:line="4" pos:column="26"/></name></name></type> <name pos:line="4" pos:column="27">entry<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">cnt<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">hashcpy<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name><name pos:line="7" pos:column="17">it<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">sha1<pos:position pos:line="7" pos:column="25"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="27">tree<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">object<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">.<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">sha1<pos:position pos:line="7" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">init_tree_desc<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><operator pos:line="8" pos:column="24">&amp;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="25">desc<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="31">tree<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">buffer<pos:position pos:line="8" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="45">tree<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">-&gt;<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="51">size<pos:position pos:line="8" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">cnt<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <literal type="number" pos:line="9" pos:column="15">0<pos:position pos:line="9" pos:column="16"/></literal></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><call><name pos:line="10" pos:column="16">tree_entry<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><operator pos:line="10" pos:column="27">&amp;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="28">desc<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="34">&amp;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="35">entry<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="42"/></condition> <block pos:line="10" pos:column="43">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><call><name pos:line="11" pos:column="22">S_ISDIR<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name><name pos:line="11" pos:column="30">entry<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">.<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="36">mode<pos:position pos:line="11" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="42"/></condition><then pos:line="11" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">cnt<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">++<pos:position pos:line="12" pos:column="30"/></operator></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt></block></then>
		<else pos:line="13" pos:column="17">else <block pos:line="13" pos:column="22">{
			<decl_stmt><decl><type><name><name pos:line="14" pos:column="25">struct<pos:position pos:line="14" pos:column="31"/></name> <name pos:line="14" pos:column="32">cache_tree_sub<pos:position pos:line="14" pos:column="46"/></name></name> <modifier pos:line="14" pos:column="47">*<pos:position pos:line="14" pos:column="48"/></modifier></type><name pos:line="14" pos:column="48">sub<pos:position pos:line="14" pos:column="51"/></name></decl>;<pos:position pos:line="14" pos:column="52"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="15" pos:column="25">struct<pos:position pos:line="15" pos:column="31"/></name> <name pos:line="15" pos:column="32">tree<pos:position pos:line="15" pos:column="36"/></name></name> <modifier pos:line="15" pos:column="37">*<pos:position pos:line="15" pos:column="38"/></modifier></type><name pos:line="15" pos:column="38">subtree<pos:position pos:line="15" pos:column="45"/></name> <init pos:line="15" pos:column="46">= <expr><call><name pos:line="15" pos:column="48">lookup_tree<pos:position pos:line="15" pos:column="59"/></name><argument_list pos:line="15" pos:column="59">(<argument><expr><name><name pos:line="15" pos:column="60">entry<pos:position pos:line="15" pos:column="65"/></name><operator pos:line="15" pos:column="65">.<pos:position pos:line="15" pos:column="66"/></operator><name pos:line="15" pos:column="66">sha1<pos:position pos:line="15" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="72"/></decl_stmt>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><operator pos:line="16" pos:column="29">!<pos:position pos:line="16" pos:column="30"/></operator><name><name pos:line="16" pos:column="30">subtree<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">object<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">.<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="46">parsed<pos:position pos:line="16" pos:column="52"/></name></name></expr>)<pos:position pos:line="16" pos:column="53"/></condition><then pos:line="16" pos:column="53">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="33">parse_tree<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><name pos:line="17" pos:column="44">subtree<pos:position pos:line="17" pos:column="51"/></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="18" pos:column="25">sub<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <call><name pos:line="18" pos:column="31">cache_tree_sub<pos:position pos:line="18" pos:column="45"/></name><argument_list pos:line="18" pos:column="45">(<argument><expr><name pos:line="18" pos:column="46">it<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="50">entry<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">.<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="56">path<pos:position pos:line="18" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="19" pos:column="25">sub<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">cache_tree<pos:position pos:line="19" pos:column="40"/></name></name> <operator pos:line="19" pos:column="41">=<pos:position pos:line="19" pos:column="42"/></operator> <call><name pos:line="19" pos:column="43">cache_tree<pos:position pos:line="19" pos:column="53"/></name><argument_list pos:line="19" pos:column="53">()<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">prime_cache_tree_rec<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><name><name pos:line="20" pos:column="46">sub<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">-&gt;<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="51">cache_tree<pos:position pos:line="20" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="63">subtree<pos:position pos:line="20" pos:column="70"/></name></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><name pos:line="21" pos:column="25">cnt<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">+=<pos:position pos:line="21" pos:column="31"/></operator> <name><name pos:line="21" pos:column="32">sub<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">cache_tree<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">-&gt;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="49">entry_count<pos:position pos:line="21" pos:column="60"/></name></name></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></else></if>
	}<pos:position pos:line="23" pos:column="10"/></block></while>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">it<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">entry_count<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">cnt<pos:position pos:line="24" pos:column="30"/></name></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

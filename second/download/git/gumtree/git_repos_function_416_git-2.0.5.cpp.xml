<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_416_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">NORETURN<pos:position pos:line="1" pos:column="9"/></name>
<specifier pos:line="2" pos:column="1">static<pos:position pos:line="2" pos:column="7"/></specifier> <name pos:line="2" pos:column="8">void<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">die_bad_number<pos:position pos:line="2" pos:column="27"/></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">name<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">value<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">reason<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><ternary><condition><expr><name pos:line="4" pos:column="30">errno<pos:position pos:line="4" pos:column="35"/></name> <operator pos:line="4" pos:column="36">==<pos:position pos:line="4" pos:column="38"/></operator> <name pos:line="4" pos:column="39">ERANGE<pos:position pos:line="4" pos:column="45"/></name></expr> ?<pos:position pos:line="4" pos:column="47"/></condition><then pos:line="4" pos:column="47">
			     <expr><literal type="string" pos:line="5" pos:column="30">"out of range"<pos:position pos:line="5" pos:column="44"/></literal></expr> <pos:position pos:line="5" pos:column="45"/></then><else pos:line="5" pos:column="45">:
			     <expr><literal type="string" pos:line="6" pos:column="30">"invalid unit"<pos:position pos:line="6" pos:column="44"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">value<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">value<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <literal type="string" pos:line="8" pos:column="25">""<pos:position pos:line="8" pos:column="27"/></literal></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">cf<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">&amp;&amp;<pos:position pos:line="10" pos:column="26"/></operator> <name><name pos:line="10" pos:column="19">cf<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">name<pos:position pos:line="10" pos:column="27"/></name></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">die<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><literal type="string" pos:line="11" pos:column="21">"bad numeric config value '%s' for '%s' in %s: %s"<pos:position pos:line="11" pos:column="71"/></literal></expr></argument>,
		    <argument><expr><name pos:line="12" pos:column="21">value<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="28">name<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="34">cf<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">name<pos:position pos:line="12" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">reason<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">die<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><literal type="string" pos:line="13" pos:column="13">"bad numeric config value '%s' for '%s': %s"<pos:position pos:line="13" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="59">value<pos:position pos:line="13" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="66">name<pos:position pos:line="13" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="72">reason<pos:position pos:line="13" pos:column="78"/></name></expr></argument>)<pos:position pos:line="13" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="80"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

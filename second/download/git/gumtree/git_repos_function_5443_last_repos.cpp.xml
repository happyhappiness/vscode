<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5443_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">validate_resume_state<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">am_state<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">state<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name><name pos:line="3" pos:column="14">state<pos:position pos:line="3" pos:column="19"/></name><operator pos:line="3" pos:column="19">-&gt;<pos:position pos:line="3" pos:column="24"/></operator><name pos:line="3" pos:column="21">msg<pos:position pos:line="3" pos:column="24"/></name></name></expr>)<pos:position pos:line="3" pos:column="25"/></condition><then pos:line="3" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="17">die<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><call><name pos:line="4" pos:column="21">_<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><literal type="string" pos:line="4" pos:column="23">"cannot resume: %s does not exist."<pos:position pos:line="4" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="59"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="5" pos:column="25">am_path<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">state<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="40">"final-commit"<pos:position pos:line="5" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="57"/></expr_stmt></block></then></if>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name><name pos:line="7" pos:column="14">state<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">author_name<pos:position pos:line="7" pos:column="32"/></name></name> <operator pos:line="7" pos:column="33">||<pos:position pos:line="7" pos:column="35"/></operator> <operator pos:line="7" pos:column="36">!<pos:position pos:line="7" pos:column="37"/></operator><name><name pos:line="7" pos:column="37">state<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">-&gt;<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="44">author_email<pos:position pos:line="7" pos:column="56"/></name></name> <operator pos:line="7" pos:column="57">||<pos:position pos:line="7" pos:column="59"/></operator> <operator pos:line="7" pos:column="60">!<pos:position pos:line="7" pos:column="61"/></operator><name><name pos:line="7" pos:column="61">state<pos:position pos:line="7" pos:column="66"/></name><operator pos:line="7" pos:column="66">-&gt;<pos:position pos:line="7" pos:column="71"/></operator><name pos:line="7" pos:column="68">author_date<pos:position pos:line="7" pos:column="79"/></name></name></expr>)<pos:position pos:line="7" pos:column="80"/></condition><then pos:line="7" pos:column="80">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">die<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><call><name pos:line="8" pos:column="21">_<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><literal type="string" pos:line="8" pos:column="23">"cannot resume: %s does not exist."<pos:position pos:line="8" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="9" pos:column="25">am_path<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">state<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="40">"author-script"<pos:position pos:line="9" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="58"/></expr_stmt></block></then></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

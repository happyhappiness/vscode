<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2692.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_alias<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">argcp<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier><modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">argv<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">envchanged<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><literal type="number" pos:line="3" pos:column="26">0<pos:position pos:line="3" pos:column="27"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="29">ret<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><literal type="number" pos:line="3" pos:column="35">0<pos:position pos:line="3" pos:column="36"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="38">saved_errno<pos:position pos:line="3" pos:column="49"/></name> <init pos:line="3" pos:column="50">= <expr><name pos:line="3" pos:column="52">errno<pos:position pos:line="3" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">subdir<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">count<pos:position pos:line="5" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="20">option_count<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier><modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">new_argv<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">alias_command<pos:position pos:line="7" pos:column="34"/></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">alias_string<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">unused_nongit<pos:position pos:line="9" pos:column="26"/></name></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">subdir<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">setup_git_directory_gently<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><operator pos:line="11" pos:column="45">&amp;<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="46">unused_nongit<pos:position pos:line="11" pos:column="59"/></name></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="61"/></expr_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">alias_command<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <operator pos:line="13" pos:column="25">(<pos:position pos:line="13" pos:column="26"/></operator><operator pos:line="13" pos:column="26">*<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">argv<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">)<pos:position pos:line="13" pos:column="32"/></operator><index pos:line="13" pos:column="32">[<expr><literal type="number" pos:line="13" pos:column="33">0<pos:position pos:line="13" pos:column="34"/></literal></expr>]<pos:position pos:line="13" pos:column="35"/></index></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">alias_string<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <call><name pos:line="14" pos:column="24">alias_lookup<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">alias_command<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">alias_string<pos:position pos:line="15" pos:column="25"/></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26"> <block pos:line="15" pos:column="27">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">alias_string<pos:position pos:line="16" pos:column="33"/></name><index pos:line="16" pos:column="33">[<expr><literal type="number" pos:line="16" pos:column="34">0<pos:position pos:line="16" pos:column="35"/></literal></expr>]<pos:position pos:line="16" pos:column="36"/></index></name> <operator pos:line="16" pos:column="37">==<pos:position pos:line="16" pos:column="39"/></operator> <literal type="char" pos:line="16" pos:column="40">'!'<pos:position pos:line="16" pos:column="43"/></literal></expr>)<pos:position pos:line="16" pos:column="44"/></condition><then pos:line="16" pos:column="44"> <block pos:line="16" pos:column="45">{
			<decl_stmt><decl><type><name><name pos:line="17" pos:column="25">struct<pos:position pos:line="17" pos:column="31"/></name> <name pos:line="17" pos:column="32">child_process<pos:position pos:line="17" pos:column="45"/></name></name></type> <name pos:line="17" pos:column="46">child<pos:position pos:line="17" pos:column="51"/></name> <init pos:line="17" pos:column="52">= <expr><name pos:line="17" pos:column="54">CHILD_PROCESS_INIT<pos:position pos:line="17" pos:column="72"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="73"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="19" pos:column="25">commit_pager_choice<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">()<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="21" pos:column="25">child<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">.<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">use_shell<pos:position pos:line="21" pos:column="40"/></name></name> <operator pos:line="21" pos:column="41">=<pos:position pos:line="21" pos:column="42"/></operator> <literal type="number" pos:line="21" pos:column="43">1<pos:position pos:line="21" pos:column="44"/></literal></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">argv_array_push<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><operator pos:line="22" pos:column="41">&amp;<pos:position pos:line="22" pos:column="46"/></operator><name><name pos:line="22" pos:column="42">child<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">.<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="48">args<pos:position pos:line="22" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="54">alias_string<pos:position pos:line="22" pos:column="66"/></name> <operator pos:line="22" pos:column="67">+<pos:position pos:line="22" pos:column="68"/></operator> <literal type="number" pos:line="22" pos:column="69">1<pos:position pos:line="22" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">argv_array_pushv<pos:position pos:line="23" pos:column="41"/></name><argument_list pos:line="23" pos:column="41">(<argument><expr><operator pos:line="23" pos:column="42">&amp;<pos:position pos:line="23" pos:column="47"/></operator><name><name pos:line="23" pos:column="43">child<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">.<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="49">args<pos:position pos:line="23" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="55">(<pos:position pos:line="23" pos:column="56"/></operator><operator pos:line="23" pos:column="56">*<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="57">argv<pos:position pos:line="23" pos:column="61"/></name><operator pos:line="23" pos:column="61">)<pos:position pos:line="23" pos:column="62"/></operator> <operator pos:line="23" pos:column="63">+<pos:position pos:line="23" pos:column="64"/></operator> <literal type="number" pos:line="23" pos:column="65">1<pos:position pos:line="23" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt>

			<expr_stmt><expr><name pos:line="25" pos:column="25">ret<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <call><name pos:line="25" pos:column="31">run_command<pos:position pos:line="25" pos:column="42"/></name><argument_list pos:line="25" pos:column="42">(<argument><expr><operator pos:line="25" pos:column="43">&amp;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="44">child<pos:position pos:line="25" pos:column="49"/></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><name pos:line="26" pos:column="29">ret<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">&gt;=<pos:position pos:line="26" pos:column="38"/></operator> <literal type="number" pos:line="26" pos:column="36">0<pos:position pos:line="26" pos:column="37"/></literal></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38">   <comment type="block" pos:line="26" pos:column="41">/* normal exit */</comment>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="33">exit<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name pos:line="27" pos:column="38">ret<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt></block></then></if>

			<expr_stmt><expr><call><name pos:line="29" pos:column="25">die_errno<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><literal type="string" pos:line="29" pos:column="35">"While expanding alias '%s': '%s'"<pos:position pos:line="29" pos:column="69"/></literal></expr></argument>,
			    <argument><expr><name pos:line="30" pos:column="29">alias_command<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="44">alias_string<pos:position pos:line="30" pos:column="56"/></name> <operator pos:line="30" pos:column="57">+<pos:position pos:line="30" pos:column="58"/></operator> <literal type="number" pos:line="30" pos:column="59">1<pos:position pos:line="30" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="32" pos:column="17">count<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <call><name pos:line="32" pos:column="25">split_cmdline<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name pos:line="32" pos:column="39">alias_string<pos:position pos:line="32" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="53">&amp;<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="54">new_argv<pos:position pos:line="32" pos:column="62"/></name></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="64"/></expr_stmt>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">count<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">&lt;<pos:position pos:line="33" pos:column="31"/></operator> <literal type="number" pos:line="33" pos:column="29">0<pos:position pos:line="33" pos:column="30"/></literal></expr>)<pos:position pos:line="33" pos:column="31"/></condition><then pos:line="33" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="25">die<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><literal type="string" pos:line="34" pos:column="29">"Bad alias.%s string: %s"<pos:position pos:line="34" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="56">alias_command<pos:position pos:line="34" pos:column="69"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="35" pos:column="29">split_cmdline_strerror<pos:position pos:line="35" pos:column="51"/></name><argument_list pos:line="35" pos:column="51">(<argument><expr><name pos:line="35" pos:column="52">count<pos:position pos:line="35" pos:column="57"/></name></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="36" pos:column="17">option_count<pos:position pos:line="36" pos:column="29"/></name> <operator pos:line="36" pos:column="30">=<pos:position pos:line="36" pos:column="31"/></operator> <call><name pos:line="36" pos:column="32">handle_options<pos:position pos:line="36" pos:column="46"/></name><argument_list pos:line="36" pos:column="46">(<argument><expr><operator pos:line="36" pos:column="47">&amp;<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="48">new_argv<pos:position pos:line="36" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="58">&amp;<pos:position pos:line="36" pos:column="63"/></operator><name pos:line="36" pos:column="59">count<pos:position pos:line="36" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="66">&amp;<pos:position pos:line="36" pos:column="71"/></operator><name pos:line="36" pos:column="67">envchanged<pos:position pos:line="36" pos:column="77"/></name></expr></argument>)<pos:position pos:line="36" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="79"/></expr_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">envchanged<pos:position pos:line="37" pos:column="31"/></name></expr>)<pos:position pos:line="37" pos:column="32"/></condition><then pos:line="37" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="25">die<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><literal type="string" pos:line="38" pos:column="29">"alias '%s' changes environment variables\n"<pos:position pos:line="38" pos:column="73"/></literal>
				 <literal type="string" pos:line="39" pos:column="34">"You can use '!git' in the alias to do this."<pos:position pos:line="39" pos:column="79"/></literal></expr></argument>,
				 <argument><expr><name pos:line="40" pos:column="34">alias_command<pos:position pos:line="40" pos:column="47"/></name></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">memmove<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">new_argv<pos:position pos:line="41" pos:column="33"/></name> <operator pos:line="41" pos:column="34">-<pos:position pos:line="41" pos:column="35"/></operator> <name pos:line="41" pos:column="36">option_count<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">new_argv<pos:position pos:line="41" pos:column="58"/></name></expr></argument>,
				<argument><expr><name pos:line="42" pos:column="33">count<pos:position pos:line="42" pos:column="38"/></name> <operator pos:line="42" pos:column="39">*<pos:position pos:line="42" pos:column="40"/></operator> <sizeof pos:line="42" pos:column="41">sizeof<argument_list pos:line="42" pos:column="47">(<argument><expr><name pos:line="42" pos:column="48">char<pos:position pos:line="42" pos:column="52"/></name> <operator pos:line="42" pos:column="53">*<pos:position pos:line="42" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="43" pos:column="17">new_argv<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">-=<pos:position pos:line="43" pos:column="28"/></operator> <name pos:line="43" pos:column="29">option_count<pos:position pos:line="43" pos:column="41"/></name></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>

		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">count<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">&lt;<pos:position pos:line="45" pos:column="31"/></operator> <literal type="number" pos:line="45" pos:column="29">1<pos:position pos:line="45" pos:column="30"/></literal></expr>)<pos:position pos:line="45" pos:column="31"/></condition><then pos:line="45" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">die<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><literal type="string" pos:line="46" pos:column="29">"empty alias for %s"<pos:position pos:line="46" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="51">alias_command<pos:position pos:line="46" pos:column="64"/></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="66"/></expr_stmt></block></then></if>

		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><operator pos:line="48" pos:column="21">!<pos:position pos:line="48" pos:column="22"/></operator><call><name pos:line="48" pos:column="22">strcmp<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">alias_command<pos:position pos:line="48" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="44">new_argv<pos:position pos:line="48" pos:column="52"/></name><index pos:line="48" pos:column="52">[<expr><literal type="number" pos:line="48" pos:column="53">0<pos:position pos:line="48" pos:column="54"/></literal></expr>]<pos:position pos:line="48" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="48" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="57"/></condition><then pos:line="48" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="25">die<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><literal type="string" pos:line="49" pos:column="29">"recursive alias: %s"<pos:position pos:line="49" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="52">alias_command<pos:position pos:line="49" pos:column="65"/></name></expr></argument>)<pos:position pos:line="49" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="67"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="51" pos:column="17">trace_argv_printf<pos:position pos:line="51" pos:column="34"/></name><argument_list pos:line="51" pos:column="34">(<argument><expr><name pos:line="51" pos:column="35">new_argv<pos:position pos:line="51" pos:column="43"/></name></expr></argument>,
				  <argument><expr><literal type="string" pos:line="52" pos:column="35">"trace: alias expansion: %s =&gt;"<pos:position pos:line="52" pos:column="69"/></literal></expr></argument>,
				  <argument><expr><name pos:line="53" pos:column="35">alias_command<pos:position pos:line="53" pos:column="48"/></name></expr></argument>)<pos:position pos:line="53" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="50"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="55" pos:column="17">REALLOC_ARRAY<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">new_argv<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="41">count<pos:position pos:line="55" pos:column="46"/></name> <operator pos:line="55" pos:column="47">+<pos:position pos:line="55" pos:column="48"/></operator> <operator pos:line="55" pos:column="49">*<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="50">argcp<pos:position pos:line="55" pos:column="55"/></name></expr></argument>)<pos:position pos:line="55" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="57"/></expr_stmt>
		<comment type="block" pos:line="56" pos:column="17">/* insert after command name */</comment>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">memcpy<pos:position pos:line="57" pos:column="23"/></name><argument_list pos:line="57" pos:column="23">(<argument><expr><name pos:line="57" pos:column="24">new_argv<pos:position pos:line="57" pos:column="32"/></name> <operator pos:line="57" pos:column="33">+<pos:position pos:line="57" pos:column="34"/></operator> <name pos:line="57" pos:column="35">count<pos:position pos:line="57" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="42">*<pos:position pos:line="57" pos:column="43"/></operator><name pos:line="57" pos:column="43">argv<pos:position pos:line="57" pos:column="47"/></name> <operator pos:line="57" pos:column="48">+<pos:position pos:line="57" pos:column="49"/></operator> <literal type="number" pos:line="57" pos:column="50">1<pos:position pos:line="57" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="53">sizeof<argument_list pos:line="57" pos:column="59">(<argument><expr><name pos:line="57" pos:column="60">char<pos:position pos:line="57" pos:column="64"/></name> <operator pos:line="57" pos:column="65">*<pos:position pos:line="57" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="67"/></argument_list></sizeof> <operator pos:line="57" pos:column="68">*<pos:position pos:line="57" pos:column="69"/></operator> <operator pos:line="57" pos:column="70">*<pos:position pos:line="57" pos:column="71"/></operator><name pos:line="57" pos:column="71">argcp<pos:position pos:line="57" pos:column="76"/></name></expr></argument>)<pos:position pos:line="57" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="78"/></expr_stmt>

		<expr_stmt><expr><operator pos:line="59" pos:column="17">*<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="18">argv<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">=<pos:position pos:line="59" pos:column="24"/></operator> <name pos:line="59" pos:column="25">new_argv<pos:position pos:line="59" pos:column="33"/></name></expr>;<pos:position pos:line="59" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="60" pos:column="17">*<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="18">argcp<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">+=<pos:position pos:line="60" pos:column="26"/></operator> <name pos:line="60" pos:column="27">count<pos:position pos:line="60" pos:column="32"/></name> <operator pos:line="60" pos:column="33">-<pos:position pos:line="60" pos:column="34"/></operator> <literal type="number" pos:line="60" pos:column="35">1<pos:position pos:line="60" pos:column="36"/></literal></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>

		<expr_stmt><expr><name pos:line="62" pos:column="17">ret<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">=<pos:position pos:line="62" pos:column="22"/></operator> <literal type="number" pos:line="62" pos:column="23">1<pos:position pos:line="62" pos:column="24"/></literal></expr>;<pos:position pos:line="62" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="63" pos:column="10"/></block></then></if>

	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">subdir<pos:position pos:line="65" pos:column="19"/></name> <operator pos:line="65" pos:column="20">&amp;&amp;<pos:position pos:line="65" pos:column="30"/></operator> <call><name pos:line="65" pos:column="23">chdir<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><name pos:line="65" pos:column="29">subdir<pos:position pos:line="65" pos:column="35"/></name></expr></argument>)<pos:position pos:line="65" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="37"/></condition><then pos:line="65" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="17">die_errno<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><literal type="string" pos:line="66" pos:column="27">"Cannot change to '%s'"<pos:position pos:line="66" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="52">subdir<pos:position pos:line="66" pos:column="58"/></name></expr></argument>)<pos:position pos:line="66" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="60"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="68" pos:column="9">errno<pos:position pos:line="68" pos:column="14"/></name> <operator pos:line="68" pos:column="15">=<pos:position pos:line="68" pos:column="16"/></operator> <name pos:line="68" pos:column="17">saved_errno<pos:position pos:line="68" pos:column="28"/></name></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt>

	<return pos:line="70" pos:column="9">return <expr><name pos:line="70" pos:column="16">ret<pos:position pos:line="70" pos:column="19"/></name></expr>;<pos:position pos:line="70" pos:column="20"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

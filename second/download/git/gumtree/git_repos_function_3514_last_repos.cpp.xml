<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3514_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">run_column_filter<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">colopts<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">column_options<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">opts<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">argv_array<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">argv<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">fd_out<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">!=<pos:position pos:line="5" pos:column="22"/></operator> <operator pos:line="5" pos:column="23">-<pos:position pos:line="5" pos:column="24"/></operator><literal type="number" pos:line="5" pos:column="24">1<pos:position pos:line="5" pos:column="25"/></literal></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">-<pos:position pos:line="6" pos:column="25"/></operator><literal type="number" pos:line="6" pos:column="25">1<pos:position pos:line="6" pos:column="26"/></literal></expr>;<pos:position pos:line="6" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">child_process_init<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><operator pos:line="8" pos:column="28">&amp;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="29">column_process<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">argv<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <operator pos:line="9" pos:column="16">&amp;<pos:position pos:line="9" pos:column="21"/></operator><name><name pos:line="9" pos:column="17">column_process<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">.<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">args<pos:position pos:line="9" pos:column="36"/></name></name></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">argv_array_push<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">argv<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="31">"column"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">argv_array_pushf<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">argv<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="32">"--raw-mode=%d"<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">colopts<pos:position pos:line="12" pos:column="56"/></name></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">opts<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">&amp;&amp;<pos:position pos:line="13" pos:column="28"/></operator> <name><name pos:line="13" pos:column="21">opts<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">width<pos:position pos:line="13" pos:column="32"/></name></name></expr>)<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">argv_array_pushf<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">argv<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="40">"--width=%d"<pos:position pos:line="14" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="54">opts<pos:position pos:line="14" pos:column="58"/></name><operator pos:line="14" pos:column="58">-&gt;<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="60">width<pos:position pos:line="14" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">opts<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">&amp;&amp;<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="21">opts<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">indent<pos:position pos:line="15" pos:column="33"/></name></name></expr>)<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">argv_array_pushf<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">argv<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="40">"--indent=%s"<pos:position pos:line="16" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="55">opts<pos:position pos:line="16" pos:column="59"/></name><operator pos:line="16" pos:column="59">-&gt;<pos:position pos:line="16" pos:column="64"/></operator><name pos:line="16" pos:column="61">indent<pos:position pos:line="16" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="69"/></expr_stmt></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">opts<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">&amp;&amp;<pos:position pos:line="17" pos:column="28"/></operator> <name><name pos:line="17" pos:column="21">opts<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">padding<pos:position pos:line="17" pos:column="34"/></name></name></expr>)<pos:position pos:line="17" pos:column="35"/></condition><then pos:line="17" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">argv_array_pushf<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">argv<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="40">"--padding=%d"<pos:position pos:line="18" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="56">opts<pos:position pos:line="18" pos:column="60"/></name><operator pos:line="18" pos:column="60">-&gt;<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="62">padding<pos:position pos:line="18" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="71"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">fflush<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">stdout<pos:position pos:line="20" pos:column="22"/></name></expr></argument>)<pos:position pos:line="20" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">column_process<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">.<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">in<pos:position pos:line="21" pos:column="26"/></name></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <operator pos:line="21" pos:column="29">-<pos:position pos:line="21" pos:column="30"/></operator><literal type="number" pos:line="21" pos:column="30">1<pos:position pos:line="21" pos:column="31"/></literal></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">column_process<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">out<pos:position pos:line="22" pos:column="27"/></name></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <call><name pos:line="22" pos:column="30">dup<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><literal type="number" pos:line="22" pos:column="34">1<pos:position pos:line="22" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">column_process<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">.<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">git_cmd<pos:position pos:line="23" pos:column="31"/></name></name> <operator pos:line="23" pos:column="32">=<pos:position pos:line="23" pos:column="33"/></operator> <literal type="number" pos:line="23" pos:column="34">1<pos:position pos:line="23" pos:column="35"/></literal></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">start_command<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><operator pos:line="25" pos:column="27">&amp;<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="28">column_process<pos:position pos:line="25" pos:column="42"/></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="44"/></condition><then pos:line="25" pos:column="44">
		<block type="pseudo"><return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">-<pos:position pos:line="26" pos:column="25"/></operator><literal type="number" pos:line="26" pos:column="25">2<pos:position pos:line="26" pos:column="26"/></literal></expr>;<pos:position pos:line="26" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="28" pos:column="9">fd_out<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">dup<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><literal type="number" pos:line="28" pos:column="22">1<pos:position pos:line="28" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">close<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><literal type="number" pos:line="29" pos:column="15">1<pos:position pos:line="29" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="18"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">dup2<pos:position pos:line="30" pos:column="13"/></name><argument_list pos:line="30" pos:column="13">(<argument><expr><name><name pos:line="30" pos:column="14">column_process<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">.<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="29">in<pos:position pos:line="30" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="33">1<pos:position pos:line="30" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">close<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name><name pos:line="31" pos:column="15">column_process<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">.<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="30">in<pos:position pos:line="31" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
	<return pos:line="32" pos:column="9">return <expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

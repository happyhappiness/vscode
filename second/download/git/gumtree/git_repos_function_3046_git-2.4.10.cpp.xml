<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3046_git-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">graph_output_commit_line<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">git_graph<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">graph<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="63">struct<pos:position pos:line="1" pos:column="69"/></name> <name pos:line="1" pos:column="70">strbuf<pos:position pos:line="1" pos:column="76"/></name></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">sb<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">seen_this<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><literal type="number" pos:line="3" pos:column="25">0<pos:position pos:line="3" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">chars_written<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/*
	 * Output the row containing this commit
	 * Iterate up to and including graph-&gt;num_columns,
	 * since the current commit may not be in any of the existing
	 * columns.  (This happens when the current commit doesn't have any
	 * children that we have already processed.)
	 */</comment>
	<expr_stmt><expr><name pos:line="13" pos:column="9">seen_this<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">chars_written<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <literal type="number" pos:line="14" pos:column="25">0<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></init> <condition><expr><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;=<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="26">graph<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">num_columns<pos:position pos:line="15" pos:column="44"/></name></name></expr>;<pos:position pos:line="15" pos:column="45"/></condition> <incr><expr><name pos:line="15" pos:column="46">i<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">++<pos:position pos:line="15" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="50"/></control> <block pos:line="15" pos:column="51">{
		<decl_stmt><decl><type><name><name pos:line="16" pos:column="17">struct<pos:position pos:line="16" pos:column="23"/></name> <name pos:line="16" pos:column="24">column<pos:position pos:line="16" pos:column="30"/></name></name> <modifier pos:line="16" pos:column="31">*<pos:position pos:line="16" pos:column="32"/></modifier></type><name pos:line="16" pos:column="32">col<pos:position pos:line="16" pos:column="35"/></name> <init pos:line="16" pos:column="36">= <expr><operator pos:line="16" pos:column="38">&amp;<pos:position pos:line="16" pos:column="43"/></operator><name><name pos:line="16" pos:column="39">graph<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">-&gt;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="46">columns<pos:position pos:line="16" pos:column="53"/></name><index pos:line="16" pos:column="53">[<expr><name pos:line="16" pos:column="54">i<pos:position pos:line="16" pos:column="55"/></name></expr>]<pos:position pos:line="16" pos:column="56"/></index></name></expr></init></decl>;<pos:position pos:line="16" pos:column="57"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="17" pos:column="17">struct<pos:position pos:line="17" pos:column="23"/></name> <name pos:line="17" pos:column="24">commit<pos:position pos:line="17" pos:column="30"/></name></name> <modifier pos:line="17" pos:column="31">*<pos:position pos:line="17" pos:column="32"/></modifier></type><name pos:line="17" pos:column="32">col_commit<pos:position pos:line="17" pos:column="42"/></name></decl>;<pos:position pos:line="17" pos:column="43"/></decl_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">==<pos:position pos:line="18" pos:column="25"/></operator> <name><name pos:line="18" pos:column="26">graph<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">num_columns<pos:position pos:line="18" pos:column="44"/></name></name></expr>)<pos:position pos:line="18" pos:column="45"/></condition><then pos:line="18" pos:column="45"> <block pos:line="18" pos:column="46">{
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><name pos:line="19" pos:column="29">seen_this<pos:position pos:line="19" pos:column="38"/></name></expr>)<pos:position pos:line="19" pos:column="39"/></condition><then pos:line="19" pos:column="39">
				<block type="pseudo"><break pos:line="20" pos:column="33">break;<pos:position pos:line="20" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="21" pos:column="25">col_commit<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">=<pos:position pos:line="21" pos:column="37"/></operator> <name><name pos:line="21" pos:column="38">graph<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">commit<pos:position pos:line="21" pos:column="51"/></name></name></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then> <else pos:line="22" pos:column="19">else <block pos:line="22" pos:column="24">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">col_commit<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <name><name pos:line="23" pos:column="38">graph<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">columns<pos:position pos:line="23" pos:column="52"/></name><index pos:line="23" pos:column="52">[<expr><name pos:line="23" pos:column="53">i<pos:position pos:line="23" pos:column="54"/></name></expr>]<pos:position pos:line="23" pos:column="55"/></index></name><operator pos:line="23" pos:column="55">.<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="56">commit<pos:position pos:line="23" pos:column="62"/></name></expr>;<pos:position pos:line="23" pos:column="63"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></else></if>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">col_commit<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">==<pos:position pos:line="26" pos:column="34"/></operator> <name><name pos:line="26" pos:column="35">graph<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">-&gt;<pos:position pos:line="26" pos:column="45"/></operator><name pos:line="26" pos:column="42">commit<pos:position pos:line="26" pos:column="48"/></name></name></expr>)<pos:position pos:line="26" pos:column="49"/></condition><then pos:line="26" pos:column="49"> <block pos:line="26" pos:column="50">{
			<expr_stmt><expr><name pos:line="27" pos:column="25">seen_this<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">=<pos:position pos:line="27" pos:column="36"/></operator> <literal type="number" pos:line="27" pos:column="37">1<pos:position pos:line="27" pos:column="38"/></literal></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">graph_output_commit_char<pos:position pos:line="28" pos:column="49"/></name><argument_list pos:line="28" pos:column="49">(<argument><expr><name pos:line="28" pos:column="50">graph<pos:position pos:line="28" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="57">sb<pos:position pos:line="28" pos:column="59"/></name></expr></argument>)<pos:position pos:line="28" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><name pos:line="29" pos:column="25">chars_written<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">++<pos:position pos:line="29" pos:column="40"/></operator></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>

			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><name><name pos:line="31" pos:column="29">graph<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">num_parents<pos:position pos:line="31" pos:column="47"/></name></name> <operator pos:line="31" pos:column="48">&gt;<pos:position pos:line="31" pos:column="52"/></operator> <literal type="number" pos:line="31" pos:column="50">2<pos:position pos:line="31" pos:column="51"/></literal></expr>)<pos:position pos:line="31" pos:column="52"/></condition><then pos:line="31" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="33">chars_written<pos:position pos:line="32" pos:column="46"/></name> <operator pos:line="32" pos:column="47">+=<pos:position pos:line="32" pos:column="49"/></operator> <call><name pos:line="32" pos:column="50">graph_draw_octopus_merge<pos:position pos:line="32" pos:column="74"/></name><argument_list pos:line="32" pos:column="74">(<argument><expr><name pos:line="32" pos:column="75">graph<pos:position pos:line="32" pos:column="80"/></name></expr></argument>,
									  <argument><expr><name pos:line="33" pos:column="75">sb<pos:position pos:line="33" pos:column="77"/></name></expr></argument>)<pos:position pos:line="33" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="79"/></expr_stmt></block></then></if>
		}<pos:position pos:line="34" pos:column="18"/></block></then> <elseif pos:line="34" pos:column="19">else <if pos:line="34" pos:column="24">if <condition pos:line="34" pos:column="27">(<expr><name pos:line="34" pos:column="28">seen_this<pos:position pos:line="34" pos:column="37"/></name> <operator pos:line="34" pos:column="38">&amp;&amp;<pos:position pos:line="34" pos:column="48"/></operator> <operator pos:line="34" pos:column="41">(<pos:position pos:line="34" pos:column="42"/></operator><name><name pos:line="34" pos:column="42">graph<pos:position pos:line="34" pos:column="47"/></name><operator pos:line="34" pos:column="47">-&gt;<pos:position pos:line="34" pos:column="52"/></operator><name pos:line="34" pos:column="49">num_parents<pos:position pos:line="34" pos:column="60"/></name></name> <operator pos:line="34" pos:column="61">&gt;<pos:position pos:line="34" pos:column="65"/></operator> <literal type="number" pos:line="34" pos:column="63">2<pos:position pos:line="34" pos:column="64"/></literal><operator pos:line="34" pos:column="64">)<pos:position pos:line="34" pos:column="65"/></operator></expr>)<pos:position pos:line="34" pos:column="66"/></condition><then pos:line="34" pos:column="66"> <block pos:line="34" pos:column="67">{
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">strbuf_write_column<pos:position pos:line="35" pos:column="44"/></name><argument_list pos:line="35" pos:column="44">(<argument><expr><name pos:line="35" pos:column="45">sb<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">col<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="35" pos:column="54">'\\'<pos:position pos:line="35" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name pos:line="36" pos:column="25">chars_written<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">++<pos:position pos:line="36" pos:column="40"/></operator></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if></elseif> <elseif pos:line="37" pos:column="19">else <if pos:line="37" pos:column="24">if <condition pos:line="37" pos:column="27">(<expr><name pos:line="37" pos:column="28">seen_this<pos:position pos:line="37" pos:column="37"/></name> <operator pos:line="37" pos:column="38">&amp;&amp;<pos:position pos:line="37" pos:column="48"/></operator> <operator pos:line="37" pos:column="41">(<pos:position pos:line="37" pos:column="42"/></operator><name><name pos:line="37" pos:column="42">graph<pos:position pos:line="37" pos:column="47"/></name><operator pos:line="37" pos:column="47">-&gt;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="49">num_parents<pos:position pos:line="37" pos:column="60"/></name></name> <operator pos:line="37" pos:column="61">==<pos:position pos:line="37" pos:column="63"/></operator> <literal type="number" pos:line="37" pos:column="64">2<pos:position pos:line="37" pos:column="65"/></literal><operator pos:line="37" pos:column="65">)<pos:position pos:line="37" pos:column="66"/></operator></expr>)<pos:position pos:line="37" pos:column="67"/></condition><then pos:line="37" pos:column="67"> <block pos:line="37" pos:column="68">{
			<comment type="block" pos:line="38" pos:column="25">/*
			 * This is a 2-way merge commit.
			 * There is no GRAPH_PRE_COMMIT stage for 2-way
			 * merges, so this is the first line of output
			 * for this commit.  Check to see what the previous
			 * line of output was.
			 *
			 * If it was GRAPH_POST_MERGE, the branch line
			 * coming into this commit may have been '\',
			 * and not '|' or '/'.  If so, output the branch
			 * line as '\' on this line, instead of '|'.  This
			 * makes the output look nicer.
			 */</comment>
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><name><name pos:line="51" pos:column="29">graph<pos:position pos:line="51" pos:column="34"/></name><operator pos:line="51" pos:column="34">-&gt;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="36">prev_state<pos:position pos:line="51" pos:column="46"/></name></name> <operator pos:line="51" pos:column="47">==<pos:position pos:line="51" pos:column="49"/></operator> <name pos:line="51" pos:column="50">GRAPH_POST_MERGE<pos:position pos:line="51" pos:column="66"/></name> <operator pos:line="51" pos:column="67">&amp;&amp;<pos:position pos:line="51" pos:column="77"/></operator>
			    <name><name pos:line="52" pos:column="29">graph<pos:position pos:line="52" pos:column="34"/></name><operator pos:line="52" pos:column="34">-&gt;<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="36">prev_commit_index<pos:position pos:line="52" pos:column="53"/></name></name> <operator pos:line="52" pos:column="54">&lt;<pos:position pos:line="52" pos:column="58"/></operator> <name pos:line="52" pos:column="56">i<pos:position pos:line="52" pos:column="57"/></name></expr>)<pos:position pos:line="52" pos:column="58"/></condition><then pos:line="52" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="33">strbuf_write_column<pos:position pos:line="53" pos:column="52"/></name><argument_list pos:line="53" pos:column="52">(<argument><expr><name pos:line="53" pos:column="53">sb<pos:position pos:line="53" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="57">col<pos:position pos:line="53" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="53" pos:column="62">'\\'<pos:position pos:line="53" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="68"/></expr_stmt></block></then>
			<else pos:line="54" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="33">strbuf_write_column<pos:position pos:line="55" pos:column="52"/></name><argument_list pos:line="55" pos:column="52">(<argument><expr><name pos:line="55" pos:column="53">sb<pos:position pos:line="55" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="57">col<pos:position pos:line="55" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="55" pos:column="62">'|'<pos:position pos:line="55" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="67"/></expr_stmt></block></else></if>
			<expr_stmt><expr><name pos:line="56" pos:column="25">chars_written<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">++<pos:position pos:line="56" pos:column="40"/></operator></expr>;<pos:position pos:line="56" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="57" pos:column="18"/></block></then></if></elseif> <else pos:line="57" pos:column="19">else <block pos:line="57" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">strbuf_write_column<pos:position pos:line="58" pos:column="44"/></name><argument_list pos:line="58" pos:column="44">(<argument><expr><name pos:line="58" pos:column="45">sb<pos:position pos:line="58" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="49">col<pos:position pos:line="58" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="58" pos:column="54">'|'<pos:position pos:line="58" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name pos:line="59" pos:column="25">chars_written<pos:position pos:line="59" pos:column="38"/></name><operator pos:line="59" pos:column="38">++<pos:position pos:line="59" pos:column="40"/></operator></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="60" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="61" pos:column="17">strbuf_addch<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">(<argument><expr><name pos:line="61" pos:column="30">sb<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="61" pos:column="34">' '<pos:position pos:line="61" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="62" pos:column="17">chars_written<pos:position pos:line="62" pos:column="30"/></name><operator pos:line="62" pos:column="30">++<pos:position pos:line="62" pos:column="32"/></operator></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="63" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="65" pos:column="9">graph_pad_horizontally<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><name pos:line="65" pos:column="32">graph<pos:position pos:line="65" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="39">sb<pos:position pos:line="65" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="43">chars_written<pos:position pos:line="65" pos:column="56"/></name></expr></argument>)<pos:position pos:line="65" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="58"/></expr_stmt>

	<comment type="block" pos:line="67" pos:column="9">/*
	 * Update graph-&gt;state
	 */</comment>
	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name><name pos:line="70" pos:column="13">graph<pos:position pos:line="70" pos:column="18"/></name><operator pos:line="70" pos:column="18">-&gt;<pos:position pos:line="70" pos:column="23"/></operator><name pos:line="70" pos:column="20">num_parents<pos:position pos:line="70" pos:column="31"/></name></name> <operator pos:line="70" pos:column="32">&gt;<pos:position pos:line="70" pos:column="36"/></operator> <literal type="number" pos:line="70" pos:column="34">1<pos:position pos:line="70" pos:column="35"/></literal></expr>)<pos:position pos:line="70" pos:column="36"/></condition><then pos:line="70" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="17">graph_update_state<pos:position pos:line="71" pos:column="35"/></name><argument_list pos:line="71" pos:column="35">(<argument><expr><name pos:line="71" pos:column="36">graph<pos:position pos:line="71" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="43">GRAPH_POST_MERGE<pos:position pos:line="71" pos:column="59"/></name></expr></argument>)<pos:position pos:line="71" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="61"/></expr_stmt></block></then>
	<elseif pos:line="72" pos:column="9">else <if pos:line="72" pos:column="14">if <condition pos:line="72" pos:column="17">(<expr><call><name pos:line="72" pos:column="18">graph_is_mapping_correct<pos:position pos:line="72" pos:column="42"/></name><argument_list pos:line="72" pos:column="42">(<argument><expr><name pos:line="72" pos:column="43">graph<pos:position pos:line="72" pos:column="48"/></name></expr></argument>)<pos:position pos:line="72" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="50"/></condition><then pos:line="72" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="17">graph_update_state<pos:position pos:line="73" pos:column="35"/></name><argument_list pos:line="73" pos:column="35">(<argument><expr><name pos:line="73" pos:column="36">graph<pos:position pos:line="73" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="43">GRAPH_PADDING<pos:position pos:line="73" pos:column="56"/></name></expr></argument>)<pos:position pos:line="73" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="58"/></expr_stmt></block></then></if></elseif>
	<else pos:line="74" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="17">graph_update_state<pos:position pos:line="75" pos:column="35"/></name><argument_list pos:line="75" pos:column="35">(<argument><expr><name pos:line="75" pos:column="36">graph<pos:position pos:line="75" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="43">GRAPH_COLLAPSING<pos:position pos:line="75" pos:column="59"/></name></expr></argument>)<pos:position pos:line="75" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="61"/></expr_stmt></block></else></if>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

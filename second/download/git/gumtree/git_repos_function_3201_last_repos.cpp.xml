<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3201_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">display_error_msgs<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">unpack_trees_options<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">o<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">e<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">i<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">something_displayed<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><literal type="number" pos:line="4" pos:column="35">0<pos:position pos:line="4" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">e<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr>;<pos:position pos:line="5" pos:column="20"/></init> <condition><expr><name pos:line="5" pos:column="21">e<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&lt;<pos:position pos:line="5" pos:column="27"/></operator> <name pos:line="5" pos:column="25">NB_UNPACK_TREES_ERROR_TYPES<pos:position pos:line="5" pos:column="52"/></name></expr>;<pos:position pos:line="5" pos:column="53"/></condition> <incr><expr><name pos:line="5" pos:column="54">e<pos:position pos:line="5" pos:column="55"/></name><operator pos:line="5" pos:column="55">++<pos:position pos:line="5" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="58"/></control> <block pos:line="5" pos:column="59">{
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">struct<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">string_list<pos:position pos:line="6" pos:column="35"/></name></name> <modifier pos:line="6" pos:column="36">*<pos:position pos:line="6" pos:column="37"/></modifier></type><name pos:line="6" pos:column="37">rejects<pos:position pos:line="6" pos:column="44"/></name> <init pos:line="6" pos:column="45">= <expr><operator pos:line="6" pos:column="47">&amp;<pos:position pos:line="6" pos:column="52"/></operator><name><name pos:line="6" pos:column="48">o<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">-&gt;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="51">unpack_rejects<pos:position pos:line="6" pos:column="65"/></name><index pos:line="6" pos:column="65">[<expr><name pos:line="6" pos:column="66">e<pos:position pos:line="6" pos:column="67"/></name></expr>]<pos:position pos:line="6" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="69"/></decl_stmt>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name><name pos:line="7" pos:column="21">rejects<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">nr<pos:position pos:line="7" pos:column="32"/></name></name> <operator pos:line="7" pos:column="33">&gt;<pos:position pos:line="7" pos:column="37"/></operator> <literal type="number" pos:line="7" pos:column="35">0<pos:position pos:line="7" pos:column="36"/></literal></expr>)<pos:position pos:line="7" pos:column="37"/></condition><then pos:line="7" pos:column="37"> <block pos:line="7" pos:column="38">{
			<decl_stmt><decl><type><name><name pos:line="8" pos:column="25">struct<pos:position pos:line="8" pos:column="31"/></name> <name pos:line="8" pos:column="32">strbuf<pos:position pos:line="8" pos:column="38"/></name></name></type> <name pos:line="8" pos:column="39">path<pos:position pos:line="8" pos:column="43"/></name> <init pos:line="8" pos:column="44">= <expr><name pos:line="8" pos:column="46">STRBUF_INIT<pos:position pos:line="8" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="58"/></decl_stmt>
			<expr_stmt><expr><name pos:line="9" pos:column="25">something_displayed<pos:position pos:line="9" pos:column="44"/></name> <operator pos:line="9" pos:column="45">=<pos:position pos:line="9" pos:column="46"/></operator> <literal type="number" pos:line="9" pos:column="47">1<pos:position pos:line="9" pos:column="48"/></literal></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt>
			<for pos:line="10" pos:column="25">for <control pos:line="10" pos:column="29">(<init><expr><name pos:line="10" pos:column="30">i<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">=<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="34">0<pos:position pos:line="10" pos:column="35"/></literal></expr>;<pos:position pos:line="10" pos:column="36"/></init> <condition><expr><name pos:line="10" pos:column="37">i<pos:position pos:line="10" pos:column="38"/></name> <operator pos:line="10" pos:column="39">&lt;<pos:position pos:line="10" pos:column="43"/></operator> <name><name pos:line="10" pos:column="41">rejects<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">-&gt;<pos:position pos:line="10" pos:column="53"/></operator><name pos:line="10" pos:column="50">nr<pos:position pos:line="10" pos:column="52"/></name></name></expr>;<pos:position pos:line="10" pos:column="53"/></condition> <incr><expr><name pos:line="10" pos:column="54">i<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">++<pos:position pos:line="10" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="58"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="33">strbuf_addf<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><operator pos:line="11" pos:column="45">&amp;<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="46">path<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="52">"\t%s\n"<pos:position pos:line="11" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="62">rejects<pos:position pos:line="11" pos:column="69"/></name><operator pos:line="11" pos:column="69">-&gt;<pos:position pos:line="11" pos:column="74"/></operator><name pos:line="11" pos:column="71">items<pos:position pos:line="11" pos:column="76"/></name><index pos:line="11" pos:column="76">[<expr><name pos:line="11" pos:column="77">i<pos:position pos:line="11" pos:column="78"/></name></expr>]<pos:position pos:line="11" pos:column="79"/></index></name><operator pos:line="11" pos:column="79">.<pos:position pos:line="11" pos:column="80"/></operator><name pos:line="11" pos:column="80">string<pos:position pos:line="11" pos:column="86"/></name></expr></argument>)<pos:position pos:line="11" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="88"/></expr_stmt></block></for>
			<expr_stmt><expr><call><name pos:line="12" pos:column="25">error<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><call><name pos:line="12" pos:column="31">ERRORMSG<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">o<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">e<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="47">super_prefixed<pos:position pos:line="12" pos:column="61"/></name><argument_list pos:line="12" pos:column="61">(<argument><expr><name><name pos:line="12" pos:column="62">path<pos:position pos:line="12" pos:column="66"/></name><operator pos:line="12" pos:column="66">.<pos:position pos:line="12" pos:column="67"/></operator><name pos:line="12" pos:column="67">buf<pos:position pos:line="12" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">strbuf_release<pos:position pos:line="13" pos:column="39"/></name><argument_list pos:line="13" pos:column="39">(<argument><expr><operator pos:line="13" pos:column="40">&amp;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="41">path<pos:position pos:line="13" pos:column="45"/></name></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">string_list_clear<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">rejects<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="44">0<pos:position pos:line="15" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></for>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">something_displayed<pos:position pos:line="17" pos:column="32"/></name></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">fprintf<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">stderr<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="33">_<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><literal type="string" pos:line="18" pos:column="35">"Aborting\n"<pos:position pos:line="18" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt></block></then></if>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

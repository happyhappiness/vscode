<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4488_git-2.6.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_fork_point<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">argc<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">argv<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">sha1<pos:position pos:line="3" pos:column="27"/></name><index pos:line="3" pos:column="27">[<expr><literal type="number" pos:line="3" pos:column="28">20<pos:position pos:line="3" pos:column="30"/></literal></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">refname<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">commitname<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">rev_collect<pos:position pos:line="6" pos:column="27"/></name></name></type> <name pos:line="6" pos:column="28">revs<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">commit<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">derived<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">commit_list<pos:position pos:line="8" pos:column="27"/></name></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">bases<pos:position pos:line="8" pos:column="34"/></name></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="16">ret<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

	<switch pos:line="11" pos:column="9">switch <condition pos:line="11" pos:column="16">(<expr><call><name pos:line="11" pos:column="17">dwim_ref<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name><name pos:line="11" pos:column="26">argv<pos:position pos:line="11" pos:column="30"/></name><index pos:line="11" pos:column="30">[<expr><literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr>]<pos:position pos:line="11" pos:column="33"/></index></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="35">strlen<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name><name pos:line="11" pos:column="42">argv<pos:position pos:line="11" pos:column="46"/></name><index pos:line="11" pos:column="46">[<expr><literal type="number" pos:line="11" pos:column="47">0<pos:position pos:line="11" pos:column="48"/></literal></expr>]<pos:position pos:line="11" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">sha1<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="58">&amp;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="59">refname<pos:position pos:line="11" pos:column="66"/></name></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="68"/></condition> <block pos:line="11" pos:column="69">{
	<case pos:line="12" pos:column="9">case <expr><literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>:<pos:position pos:line="12" pos:column="16"/></case>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">die<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><literal type="string" pos:line="13" pos:column="21">"No such ref: '%s'"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="42">argv<pos:position pos:line="13" pos:column="46"/></name><index pos:line="13" pos:column="46">[<expr><literal type="number" pos:line="13" pos:column="47">0<pos:position pos:line="13" pos:column="48"/></literal></expr>]<pos:position pos:line="13" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt>
	<case pos:line="14" pos:column="9">case <expr><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal></expr>:<pos:position pos:line="14" pos:column="16"/></case>
		<break pos:line="15" pos:column="17">break;<pos:position pos:line="15" pos:column="23"/></break> <comment type="block" pos:line="15" pos:column="24">/* good */</comment>
	<default pos:line="16" pos:column="9">default:<pos:position pos:line="16" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">die<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><literal type="string" pos:line="17" pos:column="21">"Ambiguous refname: '%s'"<pos:position pos:line="17" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="48">argv<pos:position pos:line="17" pos:column="52"/></name><index pos:line="17" pos:column="52">[<expr><literal type="number" pos:line="17" pos:column="53">0<pos:position pos:line="17" pos:column="54"/></literal></expr>]<pos:position pos:line="17" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></switch>

	<expr_stmt><expr><name pos:line="20" pos:column="9">commitname<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <ternary><condition><expr><operator pos:line="20" pos:column="22">(<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">argc<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">==<pos:position pos:line="20" pos:column="30"/></operator> <literal type="number" pos:line="20" pos:column="31">2<pos:position pos:line="20" pos:column="32"/></literal><operator pos:line="20" pos:column="32">)<pos:position pos:line="20" pos:column="33"/></operator></expr> ?<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35"> <expr><name><name pos:line="20" pos:column="36">argv<pos:position pos:line="20" pos:column="40"/></name><index pos:line="20" pos:column="40">[<expr><literal type="number" pos:line="20" pos:column="41">1<pos:position pos:line="20" pos:column="42"/></literal></expr>]<pos:position pos:line="20" pos:column="43"/></index></name></expr> <pos:position pos:line="20" pos:column="44"/></then><else pos:line="20" pos:column="44">: <expr><literal type="string" pos:line="20" pos:column="46">"HEAD"<pos:position pos:line="20" pos:column="52"/></literal></expr></else></ternary></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">get_sha1<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">commitname<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">sha1<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="40"/></condition><then pos:line="21" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">die<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><literal type="string" pos:line="22" pos:column="21">"Not a valid object name: '%s'"<pos:position pos:line="22" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="54">commitname<pos:position pos:line="22" pos:column="64"/></name></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="66"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="24" pos:column="9">derived<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <call><name pos:line="24" pos:column="19">lookup_commit_reference<pos:position pos:line="24" pos:column="42"/></name><argument_list pos:line="24" pos:column="42">(<argument><expr><name pos:line="24" pos:column="43">sha1<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">memset<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><operator pos:line="25" pos:column="16">&amp;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="17">revs<pos:position pos:line="25" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="23">0<pos:position pos:line="25" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="26">sizeof<argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">revs<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">revs<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">.<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">initial<pos:position pos:line="26" pos:column="21"/></name></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <literal type="number" pos:line="26" pos:column="24">1<pos:position pos:line="26" pos:column="25"/></literal></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">for_each_reflog_ent<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">refname<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="38">collect_one_reflog_ent<pos:position pos:line="27" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="62">&amp;<pos:position pos:line="27" pos:column="67"/></operator><name pos:line="27" pos:column="63">revs<pos:position pos:line="27" pos:column="67"/></name></expr></argument>)<pos:position pos:line="27" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="69"/></expr_stmt>

	<for pos:line="29" pos:column="9">for <control pos:line="29" pos:column="13">(<init><expr><name pos:line="29" pos:column="14">i<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <literal type="number" pos:line="29" pos:column="18">0<pos:position pos:line="29" pos:column="19"/></literal></expr>;<pos:position pos:line="29" pos:column="20"/></init> <condition><expr><name pos:line="29" pos:column="21">i<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">&lt;<pos:position pos:line="29" pos:column="27"/></operator> <name><name pos:line="29" pos:column="25">revs<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">.<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">nr<pos:position pos:line="29" pos:column="32"/></name></name></expr>;<pos:position pos:line="29" pos:column="33"/></condition> <incr><expr><name pos:line="29" pos:column="34">i<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">++<pos:position pos:line="29" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="38"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="17">revs<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">.<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">commit<pos:position pos:line="30" pos:column="28"/></name><index pos:line="30" pos:column="28">[<expr><name pos:line="30" pos:column="29">i<pos:position pos:line="30" pos:column="30"/></name></expr>]<pos:position pos:line="30" pos:column="31"/></index></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name><name pos:line="30" pos:column="33">object<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">.<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="40">flags<pos:position pos:line="30" pos:column="45"/></name></name> <operator pos:line="30" pos:column="46">&amp;=<pos:position pos:line="30" pos:column="52"/></operator> <operator pos:line="30" pos:column="49">~<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="50">TMP_MARK<pos:position pos:line="30" pos:column="58"/></name></expr>;<pos:position pos:line="30" pos:column="59"/></expr_stmt></block></for>

	<expr_stmt><expr><name pos:line="32" pos:column="9">bases<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <call><name pos:line="32" pos:column="17">get_merge_bases_many_dirty<pos:position pos:line="32" pos:column="43"/></name><argument_list pos:line="32" pos:column="43">(<argument><expr><name pos:line="32" pos:column="44">derived<pos:position pos:line="32" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="53">revs<pos:position pos:line="32" pos:column="57"/></name><operator pos:line="32" pos:column="57">.<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="58">nr<pos:position pos:line="32" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="62">revs<pos:position pos:line="32" pos:column="66"/></name><operator pos:line="32" pos:column="66">.<pos:position pos:line="32" pos:column="67"/></operator><name pos:line="32" pos:column="67">commit<pos:position pos:line="32" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>

	<comment type="block" pos:line="34" pos:column="9">/*
	 * There should be one and only one merge base, when we found
	 * a common ancestor among reflog entries.
	 */</comment>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">bases<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">||<pos:position pos:line="38" pos:column="22"/></operator> <name><name pos:line="38" pos:column="23">bases<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">-&gt;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="30">next<pos:position pos:line="38" pos:column="34"/></name></name></expr>)<pos:position pos:line="38" pos:column="35"/></condition><then pos:line="38" pos:column="35"> <block pos:line="38" pos:column="36">{
		<expr_stmt><expr><name pos:line="39" pos:column="17">ret<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <literal type="number" pos:line="39" pos:column="23">1<pos:position pos:line="39" pos:column="24"/></literal></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
		<goto pos:line="40" pos:column="17">goto <name pos:line="40" pos:column="22">cleanup_return<pos:position pos:line="40" pos:column="36"/></name>;<pos:position pos:line="40" pos:column="37"/></goto>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="43" pos:column="9">/* And the found one must be one of the reflog entries */</comment>
	<for pos:line="44" pos:column="9">for <control pos:line="44" pos:column="13">(<init><expr><name pos:line="44" pos:column="14">i<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr>;<pos:position pos:line="44" pos:column="20"/></init> <condition><expr><name pos:line="44" pos:column="21">i<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">&lt;<pos:position pos:line="44" pos:column="27"/></operator> <name><name pos:line="44" pos:column="25">revs<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">.<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="30">nr<pos:position pos:line="44" pos:column="32"/></name></name></expr>;<pos:position pos:line="44" pos:column="33"/></condition> <incr><expr><name pos:line="44" pos:column="34">i<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">++<pos:position pos:line="44" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="38"/></control>
		<block type="pseudo"><if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><operator pos:line="45" pos:column="21">&amp;<pos:position pos:line="45" pos:column="26"/></operator><name><name pos:line="45" pos:column="22">bases<pos:position pos:line="45" pos:column="27"/></name><operator pos:line="45" pos:column="27">-&gt;<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="29">item<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">-&gt;<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="35">object<pos:position pos:line="45" pos:column="41"/></name></name> <operator pos:line="45" pos:column="42">==<pos:position pos:line="45" pos:column="44"/></operator> <operator pos:line="45" pos:column="45">&amp;<pos:position pos:line="45" pos:column="50"/></operator><name><name pos:line="45" pos:column="46">revs<pos:position pos:line="45" pos:column="50"/></name><operator pos:line="45" pos:column="50">.<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="51">commit<pos:position pos:line="45" pos:column="57"/></name><index pos:line="45" pos:column="57">[<expr><name pos:line="45" pos:column="58">i<pos:position pos:line="45" pos:column="59"/></name></expr>]<pos:position pos:line="45" pos:column="60"/></index></name><operator pos:line="45" pos:column="60">-&gt;<pos:position pos:line="45" pos:column="65"/></operator><name pos:line="45" pos:column="62">object<pos:position pos:line="45" pos:column="68"/></name></expr>)<pos:position pos:line="45" pos:column="69"/></condition><then pos:line="45" pos:column="69">
			<block type="pseudo"><break pos:line="46" pos:column="25">break;<pos:position pos:line="46" pos:column="31"/></break></block></then></if></block></for> <comment type="block" pos:line="46" pos:column="32">/* found */</comment>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name><name pos:line="47" pos:column="13">revs<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">.<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">nr<pos:position pos:line="47" pos:column="20"/></name></name> <operator pos:line="47" pos:column="21">&lt;=<pos:position pos:line="47" pos:column="26"/></operator> <name pos:line="47" pos:column="24">i<pos:position pos:line="47" pos:column="25"/></name></expr>)<pos:position pos:line="47" pos:column="26"/></condition><then pos:line="47" pos:column="26"> <block pos:line="47" pos:column="27">{
		<expr_stmt><expr><name pos:line="48" pos:column="17">ret<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <literal type="number" pos:line="48" pos:column="23">1<pos:position pos:line="48" pos:column="24"/></literal></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt> <comment type="block" pos:line="48" pos:column="26">/* not found */</comment>
		<goto pos:line="49" pos:column="17">goto <name pos:line="49" pos:column="22">cleanup_return<pos:position pos:line="49" pos:column="36"/></name>;<pos:position pos:line="49" pos:column="37"/></goto>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="52" pos:column="9">printf<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="string" pos:line="52" pos:column="16">"%s\n"<pos:position pos:line="52" pos:column="22"/></literal></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="24">sha1_to_hex<pos:position pos:line="52" pos:column="35"/></name><argument_list pos:line="52" pos:column="35">(<argument><expr><name><name pos:line="52" pos:column="36">bases<pos:position pos:line="52" pos:column="41"/></name><operator pos:line="52" pos:column="41">-&gt;<pos:position pos:line="52" pos:column="46"/></operator><name pos:line="52" pos:column="43">item<pos:position pos:line="52" pos:column="47"/></name><operator pos:line="52" pos:column="47">-&gt;<pos:position pos:line="52" pos:column="52"/></operator><name pos:line="52" pos:column="49">object<pos:position pos:line="52" pos:column="55"/></name><operator pos:line="52" pos:column="55">.<pos:position pos:line="52" pos:column="56"/></operator><name pos:line="52" pos:column="56">sha1<pos:position pos:line="52" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="63"/></expr_stmt>

<label><name pos:line="54" pos:column="1">cleanup_return<pos:position pos:line="54" pos:column="15"/></name>:<pos:position pos:line="54" pos:column="16"/></label>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">free_commit_list<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name pos:line="55" pos:column="26">bases<pos:position pos:line="55" pos:column="31"/></name></expr></argument>)<pos:position pos:line="55" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>
	<return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">ret<pos:position pos:line="56" pos:column="19"/></name></expr>;<pos:position pos:line="56" pos:column="20"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

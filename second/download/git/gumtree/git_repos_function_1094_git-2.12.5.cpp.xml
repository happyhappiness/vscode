<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1094_git-2.12.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">handle_revision_arg<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">arg_<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">rev_info<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">revs<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">int<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">flags<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="77">unsigned<pos:position pos:line="1" pos:column="85"/></name></type> <name pos:line="1" pos:column="86">revarg_opt<pos:position pos:line="1" pos:column="96"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="97"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object_context<pos:position pos:line="3" pos:column="30"/></name></name></type> <name pos:line="3" pos:column="31">oc<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">dotdot<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">object<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name></type> <name><name pos:line="6" pos:column="23">sha1<pos:position pos:line="6" pos:column="27"/></name><index pos:line="6" pos:column="27">[<expr><literal type="number" pos:line="6" pos:column="28">20<pos:position pos:line="6" pos:column="30"/></literal></expr>]<pos:position pos:line="6" pos:column="31"/></index></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">local_flags<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">arg<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name pos:line="8" pos:column="27">arg_<pos:position pos:line="8" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">cant_be_filename<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name pos:line="9" pos:column="32">revarg_opt<pos:position pos:line="9" pos:column="42"/></name> <operator pos:line="9" pos:column="43">&amp;<pos:position pos:line="9" pos:column="48"/></operator> <name pos:line="9" pos:column="45">REVARG_CANNOT_BE_FILENAME<pos:position pos:line="9" pos:column="70"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="71"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">get_sha1_flags<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><literal type="number" pos:line="10" pos:column="35">0<pos:position pos:line="10" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">flags<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <ternary><condition><expr><name pos:line="12" pos:column="17">flags<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&amp;<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="25">UNINTERESTING<pos:position pos:line="12" pos:column="38"/></name></expr> ?<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40"> <expr><name pos:line="12" pos:column="41">flags<pos:position pos:line="12" pos:column="46"/></name> <operator pos:line="12" pos:column="47">|<pos:position pos:line="12" pos:column="48"/></operator> <name pos:line="12" pos:column="49">BOTTOM<pos:position pos:line="12" pos:column="55"/></name></expr> <pos:position pos:line="12" pos:column="56"/></then><else pos:line="12" pos:column="56">: <expr><name pos:line="12" pos:column="58">flags<pos:position pos:line="12" pos:column="63"/></name> <operator pos:line="12" pos:column="64">&amp;<pos:position pos:line="12" pos:column="69"/></operator> <operator pos:line="12" pos:column="66">~<pos:position pos:line="12" pos:column="67"/></operator><name pos:line="12" pos:column="67">BOTTOM<pos:position pos:line="12" pos:column="73"/></name></expr></else></ternary></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">dotdot<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">strstr<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">arg<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="30">".."<pos:position pos:line="14" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">dotdot<pos:position pos:line="15" pos:column="19"/></name></expr>)<pos:position pos:line="15" pos:column="20"/></condition><then pos:line="15" pos:column="20"> <block pos:line="15" pos:column="21">{
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">unsigned<pos:position pos:line="16" pos:column="25"/></name> <name pos:line="16" pos:column="26">char<pos:position pos:line="16" pos:column="30"/></name></type> <name><name pos:line="16" pos:column="31">from_sha1<pos:position pos:line="16" pos:column="40"/></name><index pos:line="16" pos:column="40">[<expr><literal type="number" pos:line="16" pos:column="41">20<pos:position pos:line="16" pos:column="43"/></literal></expr>]<pos:position pos:line="16" pos:column="44"/></index></name></decl>;<pos:position pos:line="16" pos:column="45"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="17" pos:column="17">const<pos:position pos:line="17" pos:column="22"/></specifier> <name pos:line="17" pos:column="23">char<pos:position pos:line="17" pos:column="27"/></name> <modifier pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></modifier></type><name pos:line="17" pos:column="29">next<pos:position pos:line="17" pos:column="33"/></name> <init pos:line="17" pos:column="34">= <expr><name pos:line="17" pos:column="36">dotdot<pos:position pos:line="17" pos:column="42"/></name> <operator pos:line="17" pos:column="43">+<pos:position pos:line="17" pos:column="44"/></operator> <literal type="number" pos:line="17" pos:column="45">2<pos:position pos:line="17" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="18" pos:column="17">const<pos:position pos:line="18" pos:column="22"/></specifier> <name pos:line="18" pos:column="23">char<pos:position pos:line="18" pos:column="27"/></name> <modifier pos:line="18" pos:column="28">*<pos:position pos:line="18" pos:column="29"/></modifier></type><name pos:line="18" pos:column="29">this<pos:position pos:line="18" pos:column="33"/></name> <init pos:line="18" pos:column="34">= <expr><name pos:line="18" pos:column="36">arg<pos:position pos:line="18" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">int<pos:position pos:line="19" pos:column="20"/></name></type> <name pos:line="19" pos:column="21">symmetric<pos:position pos:line="19" pos:column="30"/></name> <init pos:line="19" pos:column="31">= <expr><operator pos:line="19" pos:column="33">*<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">next<pos:position pos:line="19" pos:column="38"/></name> <operator pos:line="19" pos:column="39">==<pos:position pos:line="19" pos:column="41"/></operator> <literal type="char" pos:line="19" pos:column="42">'.'<pos:position pos:line="19" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="46"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">unsigned<pos:position pos:line="20" pos:column="25"/></name> <name pos:line="20" pos:column="26">int<pos:position pos:line="20" pos:column="29"/></name></type> <name pos:line="20" pos:column="30">flags_exclude<pos:position pos:line="20" pos:column="43"/></name> <init pos:line="20" pos:column="44">= <expr><name pos:line="20" pos:column="46">flags<pos:position pos:line="20" pos:column="51"/></name> <operator pos:line="20" pos:column="52">^<pos:position pos:line="20" pos:column="53"/></operator> <operator pos:line="20" pos:column="54">(<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="55">UNINTERESTING<pos:position pos:line="20" pos:column="68"/></name> <operator pos:line="20" pos:column="69">|<pos:position pos:line="20" pos:column="70"/></operator> <name pos:line="20" pos:column="71">BOTTOM<pos:position pos:line="20" pos:column="77"/></name><operator pos:line="20" pos:column="77">)<pos:position pos:line="20" pos:column="78"/></operator></expr></init></decl>;<pos:position pos:line="20" pos:column="79"/></decl_stmt>
		<decl_stmt><decl><specifier pos:line="21" pos:column="17">static<pos:position pos:line="21" pos:column="23"/></specifier> <type><specifier pos:line="21" pos:column="24">const<pos:position pos:line="21" pos:column="29"/></specifier> <name pos:line="21" pos:column="30">char<pos:position pos:line="21" pos:column="34"/></name></type> <name><name pos:line="21" pos:column="35">head_by_default<pos:position pos:line="21" pos:column="50"/></name><index pos:line="21" pos:column="50">[]<pos:position pos:line="21" pos:column="52"/></index></name> <init pos:line="21" pos:column="53">= <expr><literal type="string" pos:line="21" pos:column="55">"HEAD"<pos:position pos:line="21" pos:column="61"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="62"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">unsigned<pos:position pos:line="22" pos:column="25"/></name> <name pos:line="22" pos:column="26">int<pos:position pos:line="22" pos:column="29"/></name></type> <name pos:line="22" pos:column="30">a_flags<pos:position pos:line="22" pos:column="37"/></name></decl>;<pos:position pos:line="22" pos:column="38"/></decl_stmt>

		<expr_stmt><expr><operator pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">dotdot<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <literal type="number" pos:line="24" pos:column="27">0<pos:position pos:line="24" pos:column="28"/></literal></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">next<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">+=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">symmetric<pos:position pos:line="25" pos:column="34"/></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>

		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><operator pos:line="27" pos:column="22">*<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">next<pos:position pos:line="27" pos:column="27"/></name></expr>)<pos:position pos:line="27" pos:column="28"/></condition><then pos:line="27" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="25">next<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">=<pos:position pos:line="28" pos:column="31"/></operator> <name pos:line="28" pos:column="32">head_by_default<pos:position pos:line="28" pos:column="47"/></name></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt></block></then></if>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">dotdot<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">==<pos:position pos:line="29" pos:column="30"/></operator> <name pos:line="29" pos:column="31">arg<pos:position pos:line="29" pos:column="34"/></name></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="25">this<pos:position pos:line="30" pos:column="29"/></name> <operator pos:line="30" pos:column="30">=<pos:position pos:line="30" pos:column="31"/></operator> <name pos:line="30" pos:column="32">head_by_default<pos:position pos:line="30" pos:column="47"/></name></expr>;<pos:position pos:line="30" pos:column="48"/></expr_stmt></block></then></if>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">this<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">==<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">head_by_default<pos:position pos:line="31" pos:column="44"/></name> <operator pos:line="31" pos:column="45">&amp;&amp;<pos:position pos:line="31" pos:column="55"/></operator> <name pos:line="31" pos:column="48">next<pos:position pos:line="31" pos:column="52"/></name> <operator pos:line="31" pos:column="53">==<pos:position pos:line="31" pos:column="55"/></operator> <name pos:line="31" pos:column="56">head_by_default<pos:position pos:line="31" pos:column="71"/></name> <operator pos:line="31" pos:column="72">&amp;&amp;<pos:position pos:line="31" pos:column="82"/></operator>
		    <operator pos:line="32" pos:column="21">!<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">symmetric<pos:position pos:line="32" pos:column="31"/></name></expr>)<pos:position pos:line="32" pos:column="32"/></condition><then pos:line="32" pos:column="32"> <block pos:line="32" pos:column="33">{
			<comment type="block" pos:line="33" pos:column="25">/*
			 * Just ".."?  That is not a range but the
			 * pathspec for the parent directory.
			 */</comment>
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><operator pos:line="37" pos:column="29">!<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="30">cant_be_filename<pos:position pos:line="37" pos:column="46"/></name></expr>)<pos:position pos:line="37" pos:column="47"/></condition><then pos:line="37" pos:column="47"> <block pos:line="37" pos:column="48">{
				<expr_stmt><expr><operator pos:line="38" pos:column="33">*<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="34">dotdot<pos:position pos:line="38" pos:column="40"/></name> <operator pos:line="38" pos:column="41">=<pos:position pos:line="38" pos:column="42"/></operator> <literal type="char" pos:line="38" pos:column="43">'.'<pos:position pos:line="38" pos:column="46"/></literal></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
				<return pos:line="39" pos:column="33">return <expr><operator pos:line="39" pos:column="40">-<pos:position pos:line="39" pos:column="41"/></operator><literal type="number" pos:line="39" pos:column="41">1<pos:position pos:line="39" pos:column="42"/></literal></expr>;<pos:position pos:line="39" pos:column="43"/></return>
			}<pos:position pos:line="40" pos:column="26"/></block></then></if>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><call><name pos:line="42" pos:column="22">get_sha1_committish<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">this<pos:position pos:line="42" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="48">from_sha1<pos:position pos:line="42" pos:column="57"/></name></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></call> <operator pos:line="42" pos:column="59">&amp;&amp;<pos:position pos:line="42" pos:column="69"/></operator>
		    <operator pos:line="43" pos:column="21">!<pos:position pos:line="43" pos:column="22"/></operator><call><name pos:line="43" pos:column="22">get_sha1_committish<pos:position pos:line="43" pos:column="41"/></name><argument_list pos:line="43" pos:column="41">(<argument><expr><name pos:line="43" pos:column="42">next<pos:position pos:line="43" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="48">sha1<pos:position pos:line="43" pos:column="52"/></name></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="54"/></condition><then pos:line="43" pos:column="54"> <block pos:line="43" pos:column="55">{
			<decl_stmt><decl><type><name><name pos:line="44" pos:column="25">struct<pos:position pos:line="44" pos:column="31"/></name> <name pos:line="44" pos:column="32">object<pos:position pos:line="44" pos:column="38"/></name></name> <modifier pos:line="44" pos:column="39">*<pos:position pos:line="44" pos:column="40"/></modifier></type><name pos:line="44" pos:column="40">a_obj<pos:position pos:line="44" pos:column="45"/></name></decl>, <modifier pos:line="44" pos:column="47">*<pos:position pos:line="44" pos:column="48"/></modifier><decl><type ref="prev"/><name pos:line="44" pos:column="48">b_obj<pos:position pos:line="44" pos:column="53"/></name></decl>;<pos:position pos:line="44" pos:column="54"/></decl_stmt>

			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><operator pos:line="46" pos:column="29">!<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="30">cant_be_filename<pos:position pos:line="46" pos:column="46"/></name></expr>)<pos:position pos:line="46" pos:column="47"/></condition><then pos:line="46" pos:column="47"> <block pos:line="46" pos:column="48">{
				<expr_stmt><expr><operator pos:line="47" pos:column="33">*<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="34">dotdot<pos:position pos:line="47" pos:column="40"/></name> <operator pos:line="47" pos:column="41">=<pos:position pos:line="47" pos:column="42"/></operator> <literal type="char" pos:line="47" pos:column="43">'.'<pos:position pos:line="47" pos:column="46"/></literal></expr>;<pos:position pos:line="47" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="48" pos:column="33">verify_non_filename<pos:position pos:line="48" pos:column="52"/></name><argument_list pos:line="48" pos:column="52">(<argument><expr><name><name pos:line="48" pos:column="53">revs<pos:position pos:line="48" pos:column="57"/></name><operator pos:line="48" pos:column="57">-&gt;<pos:position pos:line="48" pos:column="62"/></operator><name pos:line="48" pos:column="59">prefix<pos:position pos:line="48" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="67">arg<pos:position pos:line="48" pos:column="70"/></name></expr></argument>)<pos:position pos:line="48" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="72"/></expr_stmt>
			}<pos:position pos:line="49" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="51" pos:column="25">a_obj<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">=<pos:position pos:line="51" pos:column="32"/></operator> <call><name pos:line="51" pos:column="33">parse_object<pos:position pos:line="51" pos:column="45"/></name><argument_list pos:line="51" pos:column="45">(<argument><expr><name pos:line="51" pos:column="46">from_sha1<pos:position pos:line="51" pos:column="55"/></name></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name pos:line="52" pos:column="25">b_obj<pos:position pos:line="52" pos:column="30"/></name> <operator pos:line="52" pos:column="31">=<pos:position pos:line="52" pos:column="32"/></operator> <call><name pos:line="52" pos:column="33">parse_object<pos:position pos:line="52" pos:column="45"/></name><argument_list pos:line="52" pos:column="45">(<argument><expr><name pos:line="52" pos:column="46">sha1<pos:position pos:line="52" pos:column="50"/></name></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="52"/></expr_stmt>
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><operator pos:line="53" pos:column="29">!<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="30">a_obj<pos:position pos:line="53" pos:column="35"/></name> <operator pos:line="53" pos:column="36">||<pos:position pos:line="53" pos:column="38"/></operator> <operator pos:line="53" pos:column="39">!<pos:position pos:line="53" pos:column="40"/></operator><name pos:line="53" pos:column="40">b_obj<pos:position pos:line="53" pos:column="45"/></name></expr>)<pos:position pos:line="53" pos:column="46"/></condition><then pos:line="53" pos:column="46"> <block pos:line="53" pos:column="47">{
			<label><name pos:line="54" pos:column="25">missing<pos:position pos:line="54" pos:column="32"/></name>:<pos:position pos:line="54" pos:column="33"/></label>
				<if pos:line="55" pos:column="33">if <condition pos:line="55" pos:column="36">(<expr><name><name pos:line="55" pos:column="37">revs<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">-&gt;<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="43">ignore_missing<pos:position pos:line="55" pos:column="57"/></name></name></expr>)<pos:position pos:line="55" pos:column="58"/></condition><then pos:line="55" pos:column="58">
					<block type="pseudo"><return pos:line="56" pos:column="41">return <expr><literal type="number" pos:line="56" pos:column="48">0<pos:position pos:line="56" pos:column="49"/></literal></expr>;<pos:position pos:line="56" pos:column="50"/></return></block></then></if>
				<expr_stmt><expr><call><name pos:line="57" pos:column="33">die<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><ternary><condition><expr><name pos:line="57" pos:column="37">symmetric<pos:position pos:line="57" pos:column="46"/></name></expr>
				    ?<pos:position pos:line="58" pos:column="38"/></condition><then pos:line="58" pos:column="38"> <expr><literal type="string" pos:line="58" pos:column="39">"Invalid symmetric difference expression %s"<pos:position pos:line="58" pos:column="83"/></literal></expr>
				    <pos:position pos:line="59" pos:column="9"/></then><else pos:line="59" pos:column="37">: <expr><literal type="string" pos:line="59" pos:column="39">"Invalid revision range %s"<pos:position pos:line="59" pos:column="66"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="59" pos:column="68">arg<pos:position pos:line="59" pos:column="71"/></name></expr></argument>)<pos:position pos:line="59" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="73"/></expr_stmt>
			}<pos:position pos:line="60" pos:column="26"/></block></then></if>

			<if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><operator pos:line="62" pos:column="29">!<pos:position pos:line="62" pos:column="30"/></operator><name pos:line="62" pos:column="30">symmetric<pos:position pos:line="62" pos:column="39"/></name></expr>)<pos:position pos:line="62" pos:column="40"/></condition><then pos:line="62" pos:column="40"> <block pos:line="62" pos:column="41">{
				<comment type="block" pos:line="63" pos:column="33">/* just A..B */</comment>
				<expr_stmt><expr><name pos:line="64" pos:column="33">a_flags<pos:position pos:line="64" pos:column="40"/></name> <operator pos:line="64" pos:column="41">=<pos:position pos:line="64" pos:column="42"/></operator> <name pos:line="64" pos:column="43">flags_exclude<pos:position pos:line="64" pos:column="56"/></name></expr>;<pos:position pos:line="64" pos:column="57"/></expr_stmt>
			}<pos:position pos:line="65" pos:column="26"/></block></then> <else pos:line="65" pos:column="27">else <block pos:line="65" pos:column="32">{
				<comment type="block" pos:line="66" pos:column="33">/* A...B -- find merge bases between the two */</comment>
				<decl_stmt><decl><type><name><name pos:line="67" pos:column="33">struct<pos:position pos:line="67" pos:column="39"/></name> <name pos:line="67" pos:column="40">commit<pos:position pos:line="67" pos:column="46"/></name></name> <modifier pos:line="67" pos:column="47">*<pos:position pos:line="67" pos:column="48"/></modifier></type><name pos:line="67" pos:column="48">a<pos:position pos:line="67" pos:column="49"/></name></decl>, <modifier pos:line="67" pos:column="51">*<pos:position pos:line="67" pos:column="52"/></modifier><decl><type ref="prev"/><name pos:line="67" pos:column="52">b<pos:position pos:line="67" pos:column="53"/></name></decl>;<pos:position pos:line="67" pos:column="54"/></decl_stmt>
				<decl_stmt><decl><type><name><name pos:line="68" pos:column="33">struct<pos:position pos:line="68" pos:column="39"/></name> <name pos:line="68" pos:column="40">commit_list<pos:position pos:line="68" pos:column="51"/></name></name> <modifier pos:line="68" pos:column="52">*<pos:position pos:line="68" pos:column="53"/></modifier></type><name pos:line="68" pos:column="53">exclude<pos:position pos:line="68" pos:column="60"/></name></decl>;<pos:position pos:line="68" pos:column="61"/></decl_stmt>

				<expr_stmt><expr><name pos:line="70" pos:column="33">a<pos:position pos:line="70" pos:column="34"/></name> <operator pos:line="70" pos:column="35">=<pos:position pos:line="70" pos:column="36"/></operator> <operator pos:line="70" pos:column="37">(<pos:position pos:line="70" pos:column="38"/></operator><ternary><condition><expr><name><name pos:line="70" pos:column="38">a_obj<pos:position pos:line="70" pos:column="43"/></name><operator pos:line="70" pos:column="43">-&gt;<pos:position pos:line="70" pos:column="48"/></operator><name pos:line="70" pos:column="45">type<pos:position pos:line="70" pos:column="49"/></name></name> <operator pos:line="70" pos:column="50">==<pos:position pos:line="70" pos:column="52"/></operator> <name pos:line="70" pos:column="53">OBJ_COMMIT<pos:position pos:line="70" pos:column="63"/></name></expr>
				     ?<pos:position pos:line="71" pos:column="39"/></condition><then pos:line="71" pos:column="39"> <expr><operator pos:line="71" pos:column="40">(<pos:position pos:line="71" pos:column="41"/></operator>struct <name pos:line="71" pos:column="48">commit<pos:position pos:line="71" pos:column="54"/></name> <operator pos:line="71" pos:column="55">*<pos:position pos:line="71" pos:column="56"/></operator><operator pos:line="71" pos:column="56">)<pos:position pos:line="71" pos:column="57"/></operator><name pos:line="71" pos:column="57">a_obj<pos:position pos:line="71" pos:column="62"/></name></expr>
				     <pos:position pos:line="72" pos:column="10"/></then><else pos:line="72" pos:column="38">: <expr><call><name pos:line="72" pos:column="40">lookup_commit_reference<pos:position pos:line="72" pos:column="63"/></name><argument_list pos:line="72" pos:column="63">(<argument><expr><name><name pos:line="72" pos:column="64">a_obj<pos:position pos:line="72" pos:column="69"/></name><operator pos:line="72" pos:column="69">-&gt;<pos:position pos:line="72" pos:column="74"/></operator><name pos:line="72" pos:column="71">oid<pos:position pos:line="72" pos:column="74"/></name><operator pos:line="72" pos:column="74">.<pos:position pos:line="72" pos:column="75"/></operator><name pos:line="72" pos:column="75">hash<pos:position pos:line="72" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="80"/></argument_list></call></expr></else></ternary><operator pos:line="72" pos:column="80">)<pos:position pos:line="72" pos:column="81"/></operator></expr>;<pos:position pos:line="72" pos:column="82"/></expr_stmt>
				<expr_stmt><expr><name pos:line="73" pos:column="33">b<pos:position pos:line="73" pos:column="34"/></name> <operator pos:line="73" pos:column="35">=<pos:position pos:line="73" pos:column="36"/></operator> <operator pos:line="73" pos:column="37">(<pos:position pos:line="73" pos:column="38"/></operator><ternary><condition><expr><name><name pos:line="73" pos:column="38">b_obj<pos:position pos:line="73" pos:column="43"/></name><operator pos:line="73" pos:column="43">-&gt;<pos:position pos:line="73" pos:column="48"/></operator><name pos:line="73" pos:column="45">type<pos:position pos:line="73" pos:column="49"/></name></name> <operator pos:line="73" pos:column="50">==<pos:position pos:line="73" pos:column="52"/></operator> <name pos:line="73" pos:column="53">OBJ_COMMIT<pos:position pos:line="73" pos:column="63"/></name></expr>
				     ?<pos:position pos:line="74" pos:column="39"/></condition><then pos:line="74" pos:column="39"> <expr><operator pos:line="74" pos:column="40">(<pos:position pos:line="74" pos:column="41"/></operator>struct <name pos:line="74" pos:column="48">commit<pos:position pos:line="74" pos:column="54"/></name> <operator pos:line="74" pos:column="55">*<pos:position pos:line="74" pos:column="56"/></operator><operator pos:line="74" pos:column="56">)<pos:position pos:line="74" pos:column="57"/></operator><name pos:line="74" pos:column="57">b_obj<pos:position pos:line="74" pos:column="62"/></name></expr>
				     <pos:position pos:line="75" pos:column="10"/></then><else pos:line="75" pos:column="38">: <expr><call><name pos:line="75" pos:column="40">lookup_commit_reference<pos:position pos:line="75" pos:column="63"/></name><argument_list pos:line="75" pos:column="63">(<argument><expr><name><name pos:line="75" pos:column="64">b_obj<pos:position pos:line="75" pos:column="69"/></name><operator pos:line="75" pos:column="69">-&gt;<pos:position pos:line="75" pos:column="74"/></operator><name pos:line="75" pos:column="71">oid<pos:position pos:line="75" pos:column="74"/></name><operator pos:line="75" pos:column="74">.<pos:position pos:line="75" pos:column="75"/></operator><name pos:line="75" pos:column="75">hash<pos:position pos:line="75" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="80"/></argument_list></call></expr></else></ternary><operator pos:line="75" pos:column="80">)<pos:position pos:line="75" pos:column="81"/></operator></expr>;<pos:position pos:line="75" pos:column="82"/></expr_stmt>
				<if pos:line="76" pos:column="33">if <condition pos:line="76" pos:column="36">(<expr><operator pos:line="76" pos:column="37">!<pos:position pos:line="76" pos:column="38"/></operator><name pos:line="76" pos:column="38">a<pos:position pos:line="76" pos:column="39"/></name> <operator pos:line="76" pos:column="40">||<pos:position pos:line="76" pos:column="42"/></operator> <operator pos:line="76" pos:column="43">!<pos:position pos:line="76" pos:column="44"/></operator><name pos:line="76" pos:column="44">b<pos:position pos:line="76" pos:column="45"/></name></expr>)<pos:position pos:line="76" pos:column="46"/></condition><then pos:line="76" pos:column="46">
					<block type="pseudo"><goto pos:line="77" pos:column="41">goto <name pos:line="77" pos:column="46">missing<pos:position pos:line="77" pos:column="53"/></name>;<pos:position pos:line="77" pos:column="54"/></goto></block></then></if>
				<expr_stmt><expr><name pos:line="78" pos:column="33">exclude<pos:position pos:line="78" pos:column="40"/></name> <operator pos:line="78" pos:column="41">=<pos:position pos:line="78" pos:column="42"/></operator> <call><name pos:line="78" pos:column="43">get_merge_bases<pos:position pos:line="78" pos:column="58"/></name><argument_list pos:line="78" pos:column="58">(<argument><expr><name pos:line="78" pos:column="59">a<pos:position pos:line="78" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="62">b<pos:position pos:line="78" pos:column="63"/></name></expr></argument>)<pos:position pos:line="78" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="79" pos:column="33">add_rev_cmdline_list<pos:position pos:line="79" pos:column="53"/></name><argument_list pos:line="79" pos:column="53">(<argument><expr><name pos:line="79" pos:column="54">revs<pos:position pos:line="79" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="60">exclude<pos:position pos:line="79" pos:column="67"/></name></expr></argument>,
						     <argument><expr><name pos:line="80" pos:column="54">REV_CMD_MERGE_BASE<pos:position pos:line="80" pos:column="72"/></name></expr></argument>,
						     <argument><expr><name pos:line="81" pos:column="54">flags_exclude<pos:position pos:line="81" pos:column="67"/></name></expr></argument>)<pos:position pos:line="81" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="69"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="82" pos:column="33">add_pending_commit_list<pos:position pos:line="82" pos:column="56"/></name><argument_list pos:line="82" pos:column="56">(<argument><expr><name pos:line="82" pos:column="57">revs<pos:position pos:line="82" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="63">exclude<pos:position pos:line="82" pos:column="70"/></name></expr></argument>,
							<argument><expr><name pos:line="83" pos:column="57">flags_exclude<pos:position pos:line="83" pos:column="70"/></name></expr></argument>)<pos:position pos:line="83" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="72"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="84" pos:column="33">free_commit_list<pos:position pos:line="84" pos:column="49"/></name><argument_list pos:line="84" pos:column="49">(<argument><expr><name pos:line="84" pos:column="50">exclude<pos:position pos:line="84" pos:column="57"/></name></expr></argument>)<pos:position pos:line="84" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="59"/></expr_stmt>

				<expr_stmt><expr><name pos:line="86" pos:column="33">a_flags<pos:position pos:line="86" pos:column="40"/></name> <operator pos:line="86" pos:column="41">=<pos:position pos:line="86" pos:column="42"/></operator> <name pos:line="86" pos:column="43">flags<pos:position pos:line="86" pos:column="48"/></name> <operator pos:line="86" pos:column="49">|<pos:position pos:line="86" pos:column="50"/></operator> <name pos:line="86" pos:column="51">SYMMETRIC_LEFT<pos:position pos:line="86" pos:column="65"/></name></expr>;<pos:position pos:line="86" pos:column="66"/></expr_stmt>
			}<pos:position pos:line="87" pos:column="26"/></block></else></if>

			<expr_stmt><expr><name><name pos:line="89" pos:column="25">a_obj<pos:position pos:line="89" pos:column="30"/></name><operator pos:line="89" pos:column="30">-&gt;<pos:position pos:line="89" pos:column="35"/></operator><name pos:line="89" pos:column="32">flags<pos:position pos:line="89" pos:column="37"/></name></name> <operator pos:line="89" pos:column="38">|=<pos:position pos:line="89" pos:column="40"/></operator> <name pos:line="89" pos:column="41">a_flags<pos:position pos:line="89" pos:column="48"/></name></expr>;<pos:position pos:line="89" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="90" pos:column="25">b_obj<pos:position pos:line="90" pos:column="30"/></name><operator pos:line="90" pos:column="30">-&gt;<pos:position pos:line="90" pos:column="35"/></operator><name pos:line="90" pos:column="32">flags<pos:position pos:line="90" pos:column="37"/></name></name> <operator pos:line="90" pos:column="38">|=<pos:position pos:line="90" pos:column="40"/></operator> <name pos:line="90" pos:column="41">flags<pos:position pos:line="90" pos:column="46"/></name></expr>;<pos:position pos:line="90" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="91" pos:column="25">add_rev_cmdline<pos:position pos:line="91" pos:column="40"/></name><argument_list pos:line="91" pos:column="40">(<argument><expr><name pos:line="91" pos:column="41">revs<pos:position pos:line="91" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="47">a_obj<pos:position pos:line="91" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="54">this<pos:position pos:line="91" pos:column="58"/></name></expr></argument>,
					<argument><expr><name pos:line="92" pos:column="41">REV_CMD_LEFT<pos:position pos:line="92" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="55">a_flags<pos:position pos:line="92" pos:column="62"/></name></expr></argument>)<pos:position pos:line="92" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="93" pos:column="25">add_rev_cmdline<pos:position pos:line="93" pos:column="40"/></name><argument_list pos:line="93" pos:column="40">(<argument><expr><name pos:line="93" pos:column="41">revs<pos:position pos:line="93" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="47">b_obj<pos:position pos:line="93" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="54">next<pos:position pos:line="93" pos:column="58"/></name></expr></argument>,
					<argument><expr><name pos:line="94" pos:column="41">REV_CMD_RIGHT<pos:position pos:line="94" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="56">flags<pos:position pos:line="94" pos:column="61"/></name></expr></argument>)<pos:position pos:line="94" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="95" pos:column="25">add_pending_object<pos:position pos:line="95" pos:column="43"/></name><argument_list pos:line="95" pos:column="43">(<argument><expr><name pos:line="95" pos:column="44">revs<pos:position pos:line="95" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="50">a_obj<pos:position pos:line="95" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="57">this<pos:position pos:line="95" pos:column="61"/></name></expr></argument>)<pos:position pos:line="95" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="96" pos:column="25">add_pending_object<pos:position pos:line="96" pos:column="43"/></name><argument_list pos:line="96" pos:column="43">(<argument><expr><name pos:line="96" pos:column="44">revs<pos:position pos:line="96" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="50">b_obj<pos:position pos:line="96" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="57">next<pos:position pos:line="96" pos:column="61"/></name></expr></argument>)<pos:position pos:line="96" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="63"/></expr_stmt>
			<return pos:line="97" pos:column="25">return <expr><literal type="number" pos:line="97" pos:column="32">0<pos:position pos:line="97" pos:column="33"/></literal></expr>;<pos:position pos:line="97" pos:column="34"/></return>
		}<pos:position pos:line="98" pos:column="18"/></block></then></if>
		<expr_stmt><expr><operator pos:line="99" pos:column="17">*<pos:position pos:line="99" pos:column="18"/></operator><name pos:line="99" pos:column="18">dotdot<pos:position pos:line="99" pos:column="24"/></name> <operator pos:line="99" pos:column="25">=<pos:position pos:line="99" pos:column="26"/></operator> <literal type="char" pos:line="99" pos:column="27">'.'<pos:position pos:line="99" pos:column="30"/></literal></expr>;<pos:position pos:line="99" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="100" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="102" pos:column="9">dotdot<pos:position pos:line="102" pos:column="15"/></name> <operator pos:line="102" pos:column="16">=<pos:position pos:line="102" pos:column="17"/></operator> <call><name pos:line="102" pos:column="18">strstr<pos:position pos:line="102" pos:column="24"/></name><argument_list pos:line="102" pos:column="24">(<argument><expr><name pos:line="102" pos:column="25">arg<pos:position pos:line="102" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="30">"^@"<pos:position pos:line="102" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="36"/></expr_stmt>
	<if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name pos:line="103" pos:column="13">dotdot<pos:position pos:line="103" pos:column="19"/></name> <operator pos:line="103" pos:column="20">&amp;&amp;<pos:position pos:line="103" pos:column="30"/></operator> <operator pos:line="103" pos:column="23">!<pos:position pos:line="103" pos:column="24"/></operator><name><name pos:line="103" pos:column="24">dotdot<pos:position pos:line="103" pos:column="30"/></name><index pos:line="103" pos:column="30">[<expr><literal type="number" pos:line="103" pos:column="31">2<pos:position pos:line="103" pos:column="32"/></literal></expr>]<pos:position pos:line="103" pos:column="33"/></index></name></expr>)<pos:position pos:line="103" pos:column="34"/></condition><then pos:line="103" pos:column="34"> <block pos:line="103" pos:column="35">{
		<expr_stmt><expr><operator pos:line="104" pos:column="17">*<pos:position pos:line="104" pos:column="18"/></operator><name pos:line="104" pos:column="18">dotdot<pos:position pos:line="104" pos:column="24"/></name> <operator pos:line="104" pos:column="25">=<pos:position pos:line="104" pos:column="26"/></operator> <literal type="number" pos:line="104" pos:column="27">0<pos:position pos:line="104" pos:column="28"/></literal></expr>;<pos:position pos:line="104" pos:column="29"/></expr_stmt>
		<if pos:line="105" pos:column="17">if <condition pos:line="105" pos:column="20">(<expr><call><name pos:line="105" pos:column="21">add_parents_only<pos:position pos:line="105" pos:column="37"/></name><argument_list pos:line="105" pos:column="37">(<argument><expr><name pos:line="105" pos:column="38">revs<pos:position pos:line="105" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="44">arg<pos:position pos:line="105" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="49">flags<pos:position pos:line="105" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="105" pos:column="56">0<pos:position pos:line="105" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="59"/></condition><then pos:line="105" pos:column="59">
			<block type="pseudo"><return pos:line="106" pos:column="25">return <expr><literal type="number" pos:line="106" pos:column="32">0<pos:position pos:line="106" pos:column="33"/></literal></expr>;<pos:position pos:line="106" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><operator pos:line="107" pos:column="17">*<pos:position pos:line="107" pos:column="18"/></operator><name pos:line="107" pos:column="18">dotdot<pos:position pos:line="107" pos:column="24"/></name> <operator pos:line="107" pos:column="25">=<pos:position pos:line="107" pos:column="26"/></operator> <literal type="char" pos:line="107" pos:column="27">'^'<pos:position pos:line="107" pos:column="30"/></literal></expr>;<pos:position pos:line="107" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="108" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="109" pos:column="9">dotdot<pos:position pos:line="109" pos:column="15"/></name> <operator pos:line="109" pos:column="16">=<pos:position pos:line="109" pos:column="17"/></operator> <call><name pos:line="109" pos:column="18">strstr<pos:position pos:line="109" pos:column="24"/></name><argument_list pos:line="109" pos:column="24">(<argument><expr><name pos:line="109" pos:column="25">arg<pos:position pos:line="109" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="30">"^!"<pos:position pos:line="109" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="36"/></expr_stmt>
	<if pos:line="110" pos:column="9">if <condition pos:line="110" pos:column="12">(<expr><name pos:line="110" pos:column="13">dotdot<pos:position pos:line="110" pos:column="19"/></name> <operator pos:line="110" pos:column="20">&amp;&amp;<pos:position pos:line="110" pos:column="30"/></operator> <operator pos:line="110" pos:column="23">!<pos:position pos:line="110" pos:column="24"/></operator><name><name pos:line="110" pos:column="24">dotdot<pos:position pos:line="110" pos:column="30"/></name><index pos:line="110" pos:column="30">[<expr><literal type="number" pos:line="110" pos:column="31">2<pos:position pos:line="110" pos:column="32"/></literal></expr>]<pos:position pos:line="110" pos:column="33"/></index></name></expr>)<pos:position pos:line="110" pos:column="34"/></condition><then pos:line="110" pos:column="34"> <block pos:line="110" pos:column="35">{
		<expr_stmt><expr><operator pos:line="111" pos:column="17">*<pos:position pos:line="111" pos:column="18"/></operator><name pos:line="111" pos:column="18">dotdot<pos:position pos:line="111" pos:column="24"/></name> <operator pos:line="111" pos:column="25">=<pos:position pos:line="111" pos:column="26"/></operator> <literal type="number" pos:line="111" pos:column="27">0<pos:position pos:line="111" pos:column="28"/></literal></expr>;<pos:position pos:line="111" pos:column="29"/></expr_stmt>
		<if pos:line="112" pos:column="17">if <condition pos:line="112" pos:column="20">(<expr><operator pos:line="112" pos:column="21">!<pos:position pos:line="112" pos:column="22"/></operator><call><name pos:line="112" pos:column="22">add_parents_only<pos:position pos:line="112" pos:column="38"/></name><argument_list pos:line="112" pos:column="38">(<argument><expr><name pos:line="112" pos:column="39">revs<pos:position pos:line="112" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="45">arg<pos:position pos:line="112" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="50">flags<pos:position pos:line="112" pos:column="55"/></name> <operator pos:line="112" pos:column="56">^<pos:position pos:line="112" pos:column="57"/></operator> <operator pos:line="112" pos:column="58">(<pos:position pos:line="112" pos:column="59"/></operator><name pos:line="112" pos:column="59">UNINTERESTING<pos:position pos:line="112" pos:column="72"/></name> <operator pos:line="112" pos:column="73">|<pos:position pos:line="112" pos:column="74"/></operator> <name pos:line="112" pos:column="75">BOTTOM<pos:position pos:line="112" pos:column="81"/></name><operator pos:line="112" pos:column="81">)<pos:position pos:line="112" pos:column="82"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="84">0<pos:position pos:line="112" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="112" pos:column="87"/></condition><then pos:line="112" pos:column="87">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="113" pos:column="25">*<pos:position pos:line="113" pos:column="26"/></operator><name pos:line="113" pos:column="26">dotdot<pos:position pos:line="113" pos:column="32"/></name> <operator pos:line="113" pos:column="33">=<pos:position pos:line="113" pos:column="34"/></operator> <literal type="char" pos:line="113" pos:column="35">'^'<pos:position pos:line="113" pos:column="38"/></literal></expr>;<pos:position pos:line="113" pos:column="39"/></expr_stmt></block></then></if>
	}<pos:position pos:line="114" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="115" pos:column="9">dotdot<pos:position pos:line="115" pos:column="15"/></name> <operator pos:line="115" pos:column="16">=<pos:position pos:line="115" pos:column="17"/></operator> <call><name pos:line="115" pos:column="18">strstr<pos:position pos:line="115" pos:column="24"/></name><argument_list pos:line="115" pos:column="24">(<argument><expr><name pos:line="115" pos:column="25">arg<pos:position pos:line="115" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="30">"^-"<pos:position pos:line="115" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="36"/></expr_stmt>
	<if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><name pos:line="116" pos:column="13">dotdot<pos:position pos:line="116" pos:column="19"/></name></expr>)<pos:position pos:line="116" pos:column="20"/></condition><then pos:line="116" pos:column="20"> <block pos:line="116" pos:column="21">{
		<decl_stmt><decl><type><name pos:line="117" pos:column="17">int<pos:position pos:line="117" pos:column="20"/></name></type> <name pos:line="117" pos:column="21">exclude_parent<pos:position pos:line="117" pos:column="35"/></name> <init pos:line="117" pos:column="36">= <expr><literal type="number" pos:line="117" pos:column="38">1<pos:position pos:line="117" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="117" pos:column="40"/></decl_stmt>

		<if pos:line="119" pos:column="17">if <condition pos:line="119" pos:column="20">(<expr><name><name pos:line="119" pos:column="21">dotdot<pos:position pos:line="119" pos:column="27"/></name><index pos:line="119" pos:column="27">[<expr><literal type="number" pos:line="119" pos:column="28">2<pos:position pos:line="119" pos:column="29"/></literal></expr>]<pos:position pos:line="119" pos:column="30"/></index></name></expr>)<pos:position pos:line="119" pos:column="31"/></condition><then pos:line="119" pos:column="31"> <block pos:line="119" pos:column="32">{
			<decl_stmt><decl><type><name pos:line="120" pos:column="25">char<pos:position pos:line="120" pos:column="29"/></name> <modifier pos:line="120" pos:column="30">*<pos:position pos:line="120" pos:column="31"/></modifier></type><name pos:line="120" pos:column="31">end<pos:position pos:line="120" pos:column="34"/></name></decl>;<pos:position pos:line="120" pos:column="35"/></decl_stmt>
			<expr_stmt><expr><name pos:line="121" pos:column="25">exclude_parent<pos:position pos:line="121" pos:column="39"/></name> <operator pos:line="121" pos:column="40">=<pos:position pos:line="121" pos:column="41"/></operator> <call><name pos:line="121" pos:column="42">strtoul<pos:position pos:line="121" pos:column="49"/></name><argument_list pos:line="121" pos:column="49">(<argument><expr><name pos:line="121" pos:column="50">dotdot<pos:position pos:line="121" pos:column="56"/></name> <operator pos:line="121" pos:column="57">+<pos:position pos:line="121" pos:column="58"/></operator> <literal type="number" pos:line="121" pos:column="59">2<pos:position pos:line="121" pos:column="60"/></literal></expr></argument>, <argument><expr><operator pos:line="121" pos:column="62">&amp;<pos:position pos:line="121" pos:column="67"/></operator><name pos:line="121" pos:column="63">end<pos:position pos:line="121" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="68">10<pos:position pos:line="121" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="72"/></expr_stmt>
			<if pos:line="122" pos:column="25">if <condition pos:line="122" pos:column="28">(<expr><operator pos:line="122" pos:column="29">*<pos:position pos:line="122" pos:column="30"/></operator><name pos:line="122" pos:column="30">end<pos:position pos:line="122" pos:column="33"/></name> <operator pos:line="122" pos:column="34">!=<pos:position pos:line="122" pos:column="36"/></operator> <literal type="char" pos:line="122" pos:column="37">'\0'<pos:position pos:line="122" pos:column="41"/></literal> <operator pos:line="122" pos:column="42">||<pos:position pos:line="122" pos:column="44"/></operator> <operator pos:line="122" pos:column="45">!<pos:position pos:line="122" pos:column="46"/></operator><name pos:line="122" pos:column="46">exclude_parent<pos:position pos:line="122" pos:column="60"/></name></expr>)<pos:position pos:line="122" pos:column="61"/></condition><then pos:line="122" pos:column="61">
				<block type="pseudo"><return pos:line="123" pos:column="33">return <expr><operator pos:line="123" pos:column="40">-<pos:position pos:line="123" pos:column="41"/></operator><literal type="number" pos:line="123" pos:column="41">1<pos:position pos:line="123" pos:column="42"/></literal></expr>;<pos:position pos:line="123" pos:column="43"/></return></block></then></if>
		}<pos:position pos:line="124" pos:column="18"/></block></then></if>

		<expr_stmt><expr><operator pos:line="126" pos:column="17">*<pos:position pos:line="126" pos:column="18"/></operator><name pos:line="126" pos:column="18">dotdot<pos:position pos:line="126" pos:column="24"/></name> <operator pos:line="126" pos:column="25">=<pos:position pos:line="126" pos:column="26"/></operator> <literal type="number" pos:line="126" pos:column="27">0<pos:position pos:line="126" pos:column="28"/></literal></expr>;<pos:position pos:line="126" pos:column="29"/></expr_stmt>
		<if pos:line="127" pos:column="17">if <condition pos:line="127" pos:column="20">(<expr><operator pos:line="127" pos:column="21">!<pos:position pos:line="127" pos:column="22"/></operator><call><name pos:line="127" pos:column="22">add_parents_only<pos:position pos:line="127" pos:column="38"/></name><argument_list pos:line="127" pos:column="38">(<argument><expr><name pos:line="127" pos:column="39">revs<pos:position pos:line="127" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="45">arg<pos:position pos:line="127" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="50">flags<pos:position pos:line="127" pos:column="55"/></name> <operator pos:line="127" pos:column="56">^<pos:position pos:line="127" pos:column="57"/></operator> <operator pos:line="127" pos:column="58">(<pos:position pos:line="127" pos:column="59"/></operator><name pos:line="127" pos:column="59">UNINTERESTING<pos:position pos:line="127" pos:column="72"/></name> <operator pos:line="127" pos:column="73">|<pos:position pos:line="127" pos:column="74"/></operator> <name pos:line="127" pos:column="75">BOTTOM<pos:position pos:line="127" pos:column="81"/></name><operator pos:line="127" pos:column="81">)<pos:position pos:line="127" pos:column="82"/></operator></expr></argument>, <argument><expr><name pos:line="127" pos:column="84">exclude_parent<pos:position pos:line="127" pos:column="98"/></name></expr></argument>)<pos:position pos:line="127" pos:column="99"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="100"/></condition><then pos:line="127" pos:column="100">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="128" pos:column="25">*<pos:position pos:line="128" pos:column="26"/></operator><name pos:line="128" pos:column="26">dotdot<pos:position pos:line="128" pos:column="32"/></name> <operator pos:line="128" pos:column="33">=<pos:position pos:line="128" pos:column="34"/></operator> <literal type="char" pos:line="128" pos:column="35">'^'<pos:position pos:line="128" pos:column="38"/></literal></expr>;<pos:position pos:line="128" pos:column="39"/></expr_stmt></block></then></if>
	}<pos:position pos:line="129" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="131" pos:column="9">local_flags<pos:position pos:line="131" pos:column="20"/></name> <operator pos:line="131" pos:column="21">=<pos:position pos:line="131" pos:column="22"/></operator> <literal type="number" pos:line="131" pos:column="23">0<pos:position pos:line="131" pos:column="24"/></literal></expr>;<pos:position pos:line="131" pos:column="25"/></expr_stmt>
	<if pos:line="132" pos:column="9">if <condition pos:line="132" pos:column="12">(<expr><operator pos:line="132" pos:column="13">*<pos:position pos:line="132" pos:column="14"/></operator><name pos:line="132" pos:column="14">arg<pos:position pos:line="132" pos:column="17"/></name> <operator pos:line="132" pos:column="18">==<pos:position pos:line="132" pos:column="20"/></operator> <literal type="char" pos:line="132" pos:column="21">'^'<pos:position pos:line="132" pos:column="24"/></literal></expr>)<pos:position pos:line="132" pos:column="25"/></condition><then pos:line="132" pos:column="25"> <block pos:line="132" pos:column="26">{
		<expr_stmt><expr><name pos:line="133" pos:column="17">local_flags<pos:position pos:line="133" pos:column="28"/></name> <operator pos:line="133" pos:column="29">=<pos:position pos:line="133" pos:column="30"/></operator> <name pos:line="133" pos:column="31">UNINTERESTING<pos:position pos:line="133" pos:column="44"/></name> <operator pos:line="133" pos:column="45">|<pos:position pos:line="133" pos:column="46"/></operator> <name pos:line="133" pos:column="47">BOTTOM<pos:position pos:line="133" pos:column="53"/></name></expr>;<pos:position pos:line="133" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="134" pos:column="17">arg<pos:position pos:line="134" pos:column="20"/></name><operator pos:line="134" pos:column="20">++<pos:position pos:line="134" pos:column="22"/></operator></expr>;<pos:position pos:line="134" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="135" pos:column="10"/></block></then></if>

	<if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><name pos:line="137" pos:column="13">revarg_opt<pos:position pos:line="137" pos:column="23"/></name> <operator pos:line="137" pos:column="24">&amp;<pos:position pos:line="137" pos:column="29"/></operator> <name pos:line="137" pos:column="26">REVARG_COMMITTISH<pos:position pos:line="137" pos:column="43"/></name></expr>)<pos:position pos:line="137" pos:column="44"/></condition><then pos:line="137" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name pos:line="138" pos:column="17">get_sha1_flags<pos:position pos:line="138" pos:column="31"/></name> <operator pos:line="138" pos:column="32">=<pos:position pos:line="138" pos:column="33"/></operator> <name pos:line="138" pos:column="34">GET_SHA1_COMMITTISH<pos:position pos:line="138" pos:column="53"/></name></expr>;<pos:position pos:line="138" pos:column="54"/></expr_stmt></block></then></if>

	<if pos:line="140" pos:column="9">if <condition pos:line="140" pos:column="12">(<expr><call><name pos:line="140" pos:column="13">get_sha1_with_context<pos:position pos:line="140" pos:column="34"/></name><argument_list pos:line="140" pos:column="34">(<argument><expr><name pos:line="140" pos:column="35">arg<pos:position pos:line="140" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="40">get_sha1_flags<pos:position pos:line="140" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="56">sha1<pos:position pos:line="140" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="140" pos:column="62">&amp;<pos:position pos:line="140" pos:column="67"/></operator><name pos:line="140" pos:column="63">oc<pos:position pos:line="140" pos:column="65"/></name></expr></argument>)<pos:position pos:line="140" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="140" pos:column="67"/></condition><then pos:line="140" pos:column="67">
		<block type="pseudo"><return pos:line="141" pos:column="17">return <expr><ternary><condition><expr><name><name pos:line="141" pos:column="24">revs<pos:position pos:line="141" pos:column="28"/></name><operator pos:line="141" pos:column="28">-&gt;<pos:position pos:line="141" pos:column="33"/></operator><name pos:line="141" pos:column="30">ignore_missing<pos:position pos:line="141" pos:column="44"/></name></name></expr> ?<pos:position pos:line="141" pos:column="46"/></condition><then pos:line="141" pos:column="46"> <expr><literal type="number" pos:line="141" pos:column="47">0<pos:position pos:line="141" pos:column="48"/></literal></expr> <pos:position pos:line="141" pos:column="49"/></then><else pos:line="141" pos:column="49">: <expr><operator pos:line="141" pos:column="51">-<pos:position pos:line="141" pos:column="52"/></operator><literal type="number" pos:line="141" pos:column="52">1<pos:position pos:line="141" pos:column="53"/></literal></expr></else></ternary></expr>;<pos:position pos:line="141" pos:column="54"/></return></block></then></if>
	<if pos:line="142" pos:column="9">if <condition pos:line="142" pos:column="12">(<expr><operator pos:line="142" pos:column="13">!<pos:position pos:line="142" pos:column="14"/></operator><name pos:line="142" pos:column="14">cant_be_filename<pos:position pos:line="142" pos:column="30"/></name></expr>)<pos:position pos:line="142" pos:column="31"/></condition><then pos:line="142" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="143" pos:column="17">verify_non_filename<pos:position pos:line="143" pos:column="36"/></name><argument_list pos:line="143" pos:column="36">(<argument><expr><name><name pos:line="143" pos:column="37">revs<pos:position pos:line="143" pos:column="41"/></name><operator pos:line="143" pos:column="41">-&gt;<pos:position pos:line="143" pos:column="46"/></operator><name pos:line="143" pos:column="43">prefix<pos:position pos:line="143" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="51">arg<pos:position pos:line="143" pos:column="54"/></name></expr></argument>)<pos:position pos:line="143" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="56"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="144" pos:column="9">object<pos:position pos:line="144" pos:column="15"/></name> <operator pos:line="144" pos:column="16">=<pos:position pos:line="144" pos:column="17"/></operator> <call><name pos:line="144" pos:column="18">get_reference<pos:position pos:line="144" pos:column="31"/></name><argument_list pos:line="144" pos:column="31">(<argument><expr><name pos:line="144" pos:column="32">revs<pos:position pos:line="144" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="38">arg<pos:position pos:line="144" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="43">sha1<pos:position pos:line="144" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="49">flags<pos:position pos:line="144" pos:column="54"/></name> <operator pos:line="144" pos:column="55">^<pos:position pos:line="144" pos:column="56"/></operator> <name pos:line="144" pos:column="57">local_flags<pos:position pos:line="144" pos:column="68"/></name></expr></argument>)<pos:position pos:line="144" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="145" pos:column="9">add_rev_cmdline<pos:position pos:line="145" pos:column="24"/></name><argument_list pos:line="145" pos:column="24">(<argument><expr><name pos:line="145" pos:column="25">revs<pos:position pos:line="145" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="31">object<pos:position pos:line="145" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="39">arg_<pos:position pos:line="145" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="45">REV_CMD_REV<pos:position pos:line="145" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="58">flags<pos:position pos:line="145" pos:column="63"/></name> <operator pos:line="145" pos:column="64">^<pos:position pos:line="145" pos:column="65"/></operator> <name pos:line="145" pos:column="66">local_flags<pos:position pos:line="145" pos:column="77"/></name></expr></argument>)<pos:position pos:line="145" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="79"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="146" pos:column="9">add_pending_object_with_mode<pos:position pos:line="146" pos:column="37"/></name><argument_list pos:line="146" pos:column="37">(<argument><expr><name pos:line="146" pos:column="38">revs<pos:position pos:line="146" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="44">object<pos:position pos:line="146" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="52">arg<pos:position pos:line="146" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="146" pos:column="57">oc<pos:position pos:line="146" pos:column="59"/></name><operator pos:line="146" pos:column="59">.<pos:position pos:line="146" pos:column="60"/></operator><name pos:line="146" pos:column="60">mode<pos:position pos:line="146" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="146" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="66"/></expr_stmt>
	<return pos:line="147" pos:column="9">return <expr><literal type="number" pos:line="147" pos:column="16">0<pos:position pos:line="147" pos:column="17"/></literal></expr>;<pos:position pos:line="147" pos:column="18"/></return>
}<pos:position pos:line="148" pos:column="2"/></block></function></unit>

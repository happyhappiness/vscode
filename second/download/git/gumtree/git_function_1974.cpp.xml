<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1974.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_one_ref<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">name<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">unsigned<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">sha1<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">flags<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">void<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">data<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">buf<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">data<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name><name pos:line="5" pos:column="19">buf<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">len<pos:position pos:line="5" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">FILE<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">f<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* when called via for_each_ref(), flags is non-zero */</comment>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">flags<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">&amp;&amp;<pos:position pos:line="9" pos:column="29"/></operator> <operator pos:line="9" pos:column="22">!<pos:position pos:line="9" pos:column="23"/></operator><call><name pos:line="9" pos:column="23">starts_with<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">name<pos:position pos:line="9" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="41">"refs/heads/"<pos:position pos:line="9" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call> <operator pos:line="9" pos:column="56">&amp;&amp;<pos:position pos:line="9" pos:column="66"/></operator>
			<operator pos:line="10" pos:column="25">!<pos:position pos:line="10" pos:column="26"/></operator><call><name pos:line="10" pos:column="26">starts_with<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">name<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="44">"refs/tags/"<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="58"/></condition><then pos:line="10" pos:column="58">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">strbuf_addstr<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">buf<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">name<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">safe_create_leading_directories<pos:position pos:line="14" pos:column="44"/></name><argument_list pos:line="14" pos:column="44">(<argument><expr><name><name pos:line="14" pos:column="45">buf<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">-&gt;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="50">buf<pos:position pos:line="14" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call> <operator pos:line="14" pos:column="55">||<pos:position pos:line="14" pos:column="57"/></operator>
			<operator pos:line="15" pos:column="25">!<pos:position pos:line="15" pos:column="26"/></operator><operator pos:line="15" pos:column="26">(<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">f<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <call><name pos:line="15" pos:column="31">fopen<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><name><name pos:line="15" pos:column="37">buf<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">buf<pos:position pos:line="15" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="47">"w"<pos:position pos:line="15" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call><operator pos:line="15" pos:column="51">)<pos:position pos:line="15" pos:column="52"/></operator> <operator pos:line="15" pos:column="53">||<pos:position pos:line="15" pos:column="55"/></operator>
			<call><name pos:line="16" pos:column="25">fprintf<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">f<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="36">"%s\n"<pos:position pos:line="16" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="44">sha1_to_hex<pos:position pos:line="16" pos:column="55"/></name><argument_list pos:line="16" pos:column="55">(<argument><expr><name pos:line="16" pos:column="56">sha1<pos:position pos:line="16" pos:column="60"/></name></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call> <operator pos:line="16" pos:column="63">&lt;<pos:position pos:line="16" pos:column="67"/></operator> <literal type="number" pos:line="16" pos:column="65">0<pos:position pos:line="16" pos:column="66"/></literal> <operator pos:line="16" pos:column="67">||<pos:position pos:line="16" pos:column="69"/></operator>
			<call><name pos:line="17" pos:column="25">fclose<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">f<pos:position pos:line="17" pos:column="33"/></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="35"/></condition><then pos:line="17" pos:column="35">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><call><name pos:line="18" pos:column="24">error<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><literal type="string" pos:line="18" pos:column="30">"problems writing temporary file %s"<pos:position pos:line="18" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="68">buf<pos:position pos:line="18" pos:column="71"/></name><operator pos:line="18" pos:column="71">-&gt;<pos:position pos:line="18" pos:column="76"/></operator><name pos:line="18" pos:column="73">buf<pos:position pos:line="18" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="78"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">strbuf_setlen<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">buf<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">len<pos:position pos:line="19" pos:column="31"/></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
	<return pos:line="20" pos:column="9">return <expr><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3877_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">merge_blobs<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">path<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">blob<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">base<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="56">struct<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">blob<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">our<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="74">struct<pos:position pos:line="1" pos:column="80"/></name> <name pos:line="1" pos:column="81">blob<pos:position pos:line="1" pos:column="85"/></name></name> <modifier pos:line="1" pos:column="86">*<pos:position pos:line="1" pos:column="87"/></modifier></type><name pos:line="1" pos:column="87">their<pos:position pos:line="1" pos:column="92"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="94">unsigned<pos:position pos:line="1" pos:column="102"/></name> <name pos:line="1" pos:column="103">long<pos:position pos:line="1" pos:column="107"/></name> <modifier pos:line="1" pos:column="108">*<pos:position pos:line="1" pos:column="109"/></modifier></type><name pos:line="1" pos:column="109">size<pos:position pos:line="1" pos:column="113"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="114"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">void<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">res<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">NULL<pos:position pos:line="3" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">mmfile_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">f1<pos:position pos:line="4" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">f2<pos:position pos:line="4" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="26">common<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/*
	 * Removed in either branch?
	 *
	 * NOTE! This depends on the caller having done the
	 * proper warning about removing a file that got
	 * modified in the other branch!
	 */</comment>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">our<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">||<pos:position pos:line="13" pos:column="20"/></operator> <operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">their<pos:position pos:line="13" pos:column="27"/></name></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28"> <block pos:line="13" pos:column="29">{
		<decl_stmt><decl><type><name><name pos:line="14" pos:column="17">enum<pos:position pos:line="14" pos:column="21"/></name> <name pos:line="14" pos:column="22">object_type<pos:position pos:line="14" pos:column="33"/></name></name></type> <name pos:line="14" pos:column="34">type<pos:position pos:line="14" pos:column="38"/></name></decl>;<pos:position pos:line="14" pos:column="39"/></decl_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">base<pos:position pos:line="15" pos:column="25"/></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26">
			<block type="pseudo"><return pos:line="16" pos:column="25">return <expr><name pos:line="16" pos:column="32">NULL<pos:position pos:line="16" pos:column="36"/></name></expr>;<pos:position pos:line="16" pos:column="37"/></return></block></then></if>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">our<pos:position pos:line="17" pos:column="25"/></name></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">our<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">their<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt></block></then></if>
		<return pos:line="19" pos:column="17">return <expr><call><name pos:line="19" pos:column="24">read_sha1_file<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name><name pos:line="19" pos:column="39">our<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">object<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">.<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">oid<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">.<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="55">hash<pos:position pos:line="19" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="61">&amp;<pos:position pos:line="19" pos:column="66"/></operator><name pos:line="19" pos:column="62">type<pos:position pos:line="19" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="68">size<pos:position pos:line="19" pos:column="72"/></name></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="74"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">fill_mmfile_blob<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><operator pos:line="22" pos:column="30">&amp;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="31">f1<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="35">our<pos:position pos:line="22" pos:column="38"/></name></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call> <operator pos:line="22" pos:column="40">&lt;<pos:position pos:line="22" pos:column="44"/></operator> <literal type="number" pos:line="22" pos:column="42">0<pos:position pos:line="22" pos:column="43"/></literal></expr>)<pos:position pos:line="22" pos:column="44"/></condition><then pos:line="22" pos:column="44">
		<block type="pseudo"><goto pos:line="23" pos:column="17">goto <name pos:line="23" pos:column="22">out_no_mmfile<pos:position pos:line="23" pos:column="35"/></name>;<pos:position pos:line="23" pos:column="36"/></goto></block></then></if>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">fill_mmfile_blob<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><operator pos:line="24" pos:column="30">&amp;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="31">f2<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">their<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call> <operator pos:line="24" pos:column="42">&lt;<pos:position pos:line="24" pos:column="46"/></operator> <literal type="number" pos:line="24" pos:column="44">0<pos:position pos:line="24" pos:column="45"/></literal></expr>)<pos:position pos:line="24" pos:column="46"/></condition><then pos:line="24" pos:column="46">
		<block type="pseudo"><goto pos:line="25" pos:column="17">goto <name pos:line="25" pos:column="22">out_free_f1<pos:position pos:line="25" pos:column="33"/></name>;<pos:position pos:line="25" pos:column="34"/></goto></block></then></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">base<pos:position pos:line="27" pos:column="17"/></name></expr>)<pos:position pos:line="27" pos:column="18"/></condition><then pos:line="27" pos:column="18"> <block pos:line="27" pos:column="19">{
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><call><name pos:line="28" pos:column="21">fill_mmfile_blob<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><operator pos:line="28" pos:column="38">&amp;<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="39">common<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">base<pos:position pos:line="28" pos:column="51"/></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call> <operator pos:line="28" pos:column="53">&lt;<pos:position pos:line="28" pos:column="57"/></operator> <literal type="number" pos:line="28" pos:column="55">0<pos:position pos:line="28" pos:column="56"/></literal></expr>)<pos:position pos:line="28" pos:column="57"/></condition><then pos:line="28" pos:column="57">
			<block type="pseudo"><goto pos:line="29" pos:column="25">goto <name pos:line="29" pos:column="30">out_free_f2_f1<pos:position pos:line="29" pos:column="44"/></name>;<pos:position pos:line="29" pos:column="45"/></goto></block></then></if>
	}<pos:position pos:line="30" pos:column="10"/></block></then> <else pos:line="30" pos:column="11">else <block pos:line="30" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">common<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">.<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">ptr<pos:position pos:line="31" pos:column="27"/></name></name> <operator pos:line="31" pos:column="28">=<pos:position pos:line="31" pos:column="29"/></operator> <call><name pos:line="31" pos:column="30">xstrdup<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><literal type="string" pos:line="31" pos:column="38">""<pos:position pos:line="31" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">common<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">.<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">size<pos:position pos:line="32" pos:column="28"/></name></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <literal type="number" pos:line="32" pos:column="31">0<pos:position pos:line="32" pos:column="32"/></literal></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name pos:line="34" pos:column="9">res<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <call><name pos:line="34" pos:column="15">three_way_filemerge<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">path<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="41">&amp;<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="42">common<pos:position pos:line="34" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="50">&amp;<pos:position pos:line="34" pos:column="55"/></operator><name pos:line="34" pos:column="51">f1<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="55">&amp;<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="56">f2<pos:position pos:line="34" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="60">size<pos:position pos:line="34" pos:column="64"/></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">free_mmfile<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><operator pos:line="35" pos:column="21">&amp;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="22">common<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
<label><name pos:line="36" pos:column="1">out_free_f2_f1<pos:position pos:line="36" pos:column="15"/></name>:<pos:position pos:line="36" pos:column="16"/></label>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">free_mmfile<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><operator pos:line="37" pos:column="21">&amp;<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="22">f2<pos:position pos:line="37" pos:column="24"/></name></expr></argument>)<pos:position pos:line="37" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>
<label><name pos:line="38" pos:column="1">out_free_f1<pos:position pos:line="38" pos:column="12"/></name>:<pos:position pos:line="38" pos:column="13"/></label>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">free_mmfile<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><operator pos:line="39" pos:column="21">&amp;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="22">f1<pos:position pos:line="39" pos:column="24"/></name></expr></argument>)<pos:position pos:line="39" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
<label><name pos:line="40" pos:column="1">out_no_mmfile<pos:position pos:line="40" pos:column="14"/></name>:<pos:position pos:line="40" pos:column="15"/></label>
	<return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">res<pos:position pos:line="41" pos:column="19"/></name></expr>;<pos:position pos:line="41" pos:column="20"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

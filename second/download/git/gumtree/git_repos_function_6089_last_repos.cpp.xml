<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6089_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">reset_refs<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">rev<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">object_id<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">oid<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">update_ref_status<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">msg<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_id<pos:position pos:line="5" pos:column="25"/></name></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">orig<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">NULL<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="40">oid_orig<pos:position pos:line="5" pos:column="48"/></name></decl>,
		<modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="18">old_orig<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">NULL<pos:position pos:line="6" pos:column="33"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="35">oid_old_orig<pos:position pos:line="6" pos:column="47"/></name></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">get_oid<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><literal type="string" pos:line="8" pos:column="22">"ORIG_HEAD"<pos:position pos:line="8" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="35">&amp;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="36">oid_old_orig<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">old_orig<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <operator pos:line="9" pos:column="28">&amp;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="29">oid_old_orig<pos:position pos:line="9" pos:column="41"/></name></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">get_oid<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><literal type="string" pos:line="10" pos:column="22">"HEAD"<pos:position pos:line="10" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="31">oid_orig<pos:position pos:line="10" pos:column="39"/></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="41"/></condition><then pos:line="10" pos:column="41"> <block pos:line="10" pos:column="42">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">orig<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <operator pos:line="11" pos:column="24">&amp;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="25">oid_orig<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">set_reflog_message<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><operator pos:line="12" pos:column="36">&amp;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="37">msg<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="42">"updating ORIG_HEAD"<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="64">NULL<pos:position pos:line="12" pos:column="68"/></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">update_ref_oid<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name><name pos:line="13" pos:column="32">msg<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">.<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">buf<pos:position pos:line="13" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="41">"ORIG_HEAD"<pos:position pos:line="13" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="54">orig<pos:position pos:line="13" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="60">old_orig<pos:position pos:line="13" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="70">0<pos:position pos:line="13" pos:column="71"/></literal></expr></argument>,
			   <argument><expr><name pos:line="14" pos:column="28">UPDATE_REFS_MSG_ON_ERR<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then> <elseif pos:line="15" pos:column="11">else <if pos:line="15" pos:column="16">if <condition pos:line="15" pos:column="19">(<expr><name pos:line="15" pos:column="20">old_orig<pos:position pos:line="15" pos:column="28"/></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">delete_ref<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">NULL<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="34">"ORIG_HEAD"<pos:position pos:line="16" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="47">old_orig<pos:position pos:line="16" pos:column="55"/></name><operator pos:line="16" pos:column="55">-&gt;<pos:position pos:line="16" pos:column="60"/></operator><name pos:line="16" pos:column="57">hash<pos:position pos:line="16" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="63">0<pos:position pos:line="16" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt></block></then></if></elseif></if>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">set_reflog_message<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><operator pos:line="17" pos:column="28">&amp;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="29">msg<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="34">"updating HEAD"<pos:position pos:line="17" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">rev<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">update_ref_status<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <call><name pos:line="18" pos:column="29">update_ref_oid<pos:position pos:line="18" pos:column="43"/></name><argument_list pos:line="18" pos:column="43">(<argument><expr><name><name pos:line="18" pos:column="44">msg<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">.<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="48">buf<pos:position pos:line="18" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="53">"HEAD"<pos:position pos:line="18" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="61">oid<pos:position pos:line="18" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="66">orig<pos:position pos:line="18" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="72">0<pos:position pos:line="18" pos:column="73"/></literal></expr></argument>,
				       <argument><expr><name pos:line="19" pos:column="40">UPDATE_REFS_MSG_ON_ERR<pos:position pos:line="19" pos:column="62"/></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">strbuf_release<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="25">msg<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
	<return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">update_ref_status<pos:position pos:line="21" pos:column="33"/></name></expr>;<pos:position pos:line="21" pos:column="34"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

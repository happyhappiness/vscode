<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_tag_buffer<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">tag<pos:position pos:line="1" pos:column="32"/></name></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">item<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">void<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">data<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">unsigned<pos:position pos:line="1" pos:column="66"/></name> <name pos:line="1" pos:column="67">long<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">size<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object_id<pos:position pos:line="3" pos:column="25"/></name></name></type> <name pos:line="3" pos:column="26">oid<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">type<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><literal type="number" pos:line="4" pos:column="19">20<pos:position pos:line="4" pos:column="21"/></literal></expr>]<pos:position pos:line="4" pos:column="22"/></index></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">bufptr<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">data<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">tail<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name pos:line="6" pos:column="28">bufptr<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">+<pos:position pos:line="6" pos:column="36"/></operator> <name pos:line="6" pos:column="37">size<pos:position pos:line="6" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">nl<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">item<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">object<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">.<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">parsed<pos:position pos:line="9" pos:column="32"/></name></name></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">item<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">object<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">.<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">parsed<pos:position pos:line="11" pos:column="28"/></name></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="31">1<pos:position pos:line="11" pos:column="32"/></literal></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">size<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">&lt;<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="20">GIT_SHA1_HEXSZ<pos:position pos:line="13" pos:column="34"/></name> <operator pos:line="13" pos:column="35">+<pos:position pos:line="13" pos:column="36"/></operator> <literal type="number" pos:line="13" pos:column="37">24<pos:position pos:line="13" pos:column="39"/></literal></expr>)<pos:position pos:line="13" pos:column="40"/></condition><then pos:line="13" pos:column="40">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">memcmp<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="string" pos:line="15" pos:column="20">"object "<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">bufptr<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="39">7<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call> <operator pos:line="15" pos:column="42">||<pos:position pos:line="15" pos:column="44"/></operator> <call><name pos:line="15" pos:column="45">parse_oid_hex<pos:position pos:line="15" pos:column="58"/></name><argument_list pos:line="15" pos:column="58">(<argument><expr><name pos:line="15" pos:column="59">bufptr<pos:position pos:line="15" pos:column="65"/></name> <operator pos:line="15" pos:column="66">+<pos:position pos:line="15" pos:column="67"/></operator> <literal type="number" pos:line="15" pos:column="68">7<pos:position pos:line="15" pos:column="69"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="71">&amp;<pos:position pos:line="15" pos:column="76"/></operator><name pos:line="15" pos:column="72">oid<pos:position pos:line="15" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="77">&amp;<pos:position pos:line="15" pos:column="82"/></operator><name pos:line="15" pos:column="78">bufptr<pos:position pos:line="15" pos:column="84"/></name></expr></argument>)<pos:position pos:line="15" pos:column="85"/></argument_list></call> <operator pos:line="15" pos:column="86">||<pos:position pos:line="15" pos:column="88"/></operator> <operator pos:line="15" pos:column="89">*<pos:position pos:line="15" pos:column="90"/></operator><name pos:line="15" pos:column="90">bufptr<pos:position pos:line="15" pos:column="96"/></name><operator pos:line="15" pos:column="96">++<pos:position pos:line="15" pos:column="98"/></operator> <operator pos:line="15" pos:column="99">!=<pos:position pos:line="15" pos:column="101"/></operator> <literal type="char" pos:line="15" pos:column="102">'\n'<pos:position pos:line="15" pos:column="106"/></literal></expr>)<pos:position pos:line="15" pos:column="107"/></condition><then pos:line="15" pos:column="107">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></return></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><call><name pos:line="18" pos:column="14">starts_with<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">bufptr<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="34">"type "<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">-<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="20" pos:column="9">bufptr<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">+=<pos:position pos:line="20" pos:column="18"/></operator> <literal type="number" pos:line="20" pos:column="19">5<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">nl<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">memchr<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">bufptr<pos:position pos:line="21" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="29">'\n'<pos:position pos:line="21" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">tail<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">-<pos:position pos:line="21" pos:column="41"/></operator> <name pos:line="21" pos:column="42">bufptr<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">nl<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">||<pos:position pos:line="22" pos:column="19"/></operator> <sizeof pos:line="22" pos:column="20">sizeof<argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">type<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></sizeof> <operator pos:line="22" pos:column="33">&lt;=<pos:position pos:line="22" pos:column="38"/></operator> <operator pos:line="22" pos:column="36">(<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="37">nl<pos:position pos:line="22" pos:column="39"/></name> <operator pos:line="22" pos:column="40">-<pos:position pos:line="22" pos:column="41"/></operator> <name pos:line="22" pos:column="42">bufptr<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">)<pos:position pos:line="22" pos:column="49"/></operator></expr>)<pos:position pos:line="22" pos:column="50"/></condition><then pos:line="22" pos:column="50">
		<block type="pseudo"><return pos:line="23" pos:column="17">return <expr><operator pos:line="23" pos:column="24">-<pos:position pos:line="23" pos:column="25"/></operator><literal type="number" pos:line="23" pos:column="25">1<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">memcpy<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">type<pos:position pos:line="24" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="22">bufptr<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="30">nl<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">-<pos:position pos:line="24" pos:column="34"/></operator> <name pos:line="24" pos:column="35">bufptr<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">type<pos:position pos:line="25" pos:column="13"/></name><index pos:line="25" pos:column="13">[<expr><name pos:line="25" pos:column="14">nl<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">-<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">bufptr<pos:position pos:line="25" pos:column="25"/></name></expr>]<pos:position pos:line="25" pos:column="26"/></index></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <literal type="char" pos:line="25" pos:column="29">'\0'<pos:position pos:line="25" pos:column="33"/></literal></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">bufptr<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <name pos:line="26" pos:column="18">nl<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">+<pos:position pos:line="26" pos:column="22"/></operator> <literal type="number" pos:line="26" pos:column="23">1<pos:position pos:line="26" pos:column="24"/></literal></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><call><name pos:line="28" pos:column="14">strcmp<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">type<pos:position pos:line="28" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="27">blob_type<pos:position pos:line="28" pos:column="36"/></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="38"/></condition><then pos:line="28" pos:column="38"> <block pos:line="28" pos:column="39">{
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">item<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">tagged<pos:position pos:line="29" pos:column="29"/></name></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <operator pos:line="29" pos:column="32">&amp;<pos:position pos:line="29" pos:column="37"/></operator><call><name pos:line="29" pos:column="33">lookup_blob<pos:position pos:line="29" pos:column="44"/></name><argument_list pos:line="29" pos:column="44">(<argument><expr><operator pos:line="29" pos:column="45">&amp;<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="46">oid<pos:position pos:line="29" pos:column="49"/></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call><operator pos:line="29" pos:column="50">-&gt;<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="52">object<pos:position pos:line="29" pos:column="58"/></name></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></then> <elseif pos:line="30" pos:column="11">else <if pos:line="30" pos:column="16">if <condition pos:line="30" pos:column="19">(<expr><operator pos:line="30" pos:column="20">!<pos:position pos:line="30" pos:column="21"/></operator><call><name pos:line="30" pos:column="21">strcmp<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">type<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">tree_type<pos:position pos:line="30" pos:column="43"/></name></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="45"/></condition><then pos:line="30" pos:column="45"> <block pos:line="30" pos:column="46">{
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">item<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">tagged<pos:position pos:line="31" pos:column="29"/></name></name> <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <operator pos:line="31" pos:column="32">&amp;<pos:position pos:line="31" pos:column="37"/></operator><call><name pos:line="31" pos:column="33">lookup_tree<pos:position pos:line="31" pos:column="44"/></name><argument_list pos:line="31" pos:column="44">(<argument><expr><operator pos:line="31" pos:column="45">&amp;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="46">oid<pos:position pos:line="31" pos:column="49"/></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call><operator pos:line="31" pos:column="50">-&gt;<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="52">object<pos:position pos:line="31" pos:column="58"/></name></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if></elseif> <elseif pos:line="32" pos:column="11">else <if pos:line="32" pos:column="16">if <condition pos:line="32" pos:column="19">(<expr><operator pos:line="32" pos:column="20">!<pos:position pos:line="32" pos:column="21"/></operator><call><name pos:line="32" pos:column="21">strcmp<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">type<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">commit_type<pos:position pos:line="32" pos:column="45"/></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="47"/></condition><then pos:line="32" pos:column="47"> <block pos:line="32" pos:column="48">{
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">item<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">tagged<pos:position pos:line="33" pos:column="29"/></name></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <operator pos:line="33" pos:column="32">&amp;<pos:position pos:line="33" pos:column="37"/></operator><call><name pos:line="33" pos:column="33">lookup_commit<pos:position pos:line="33" pos:column="46"/></name><argument_list pos:line="33" pos:column="46">(<argument><expr><operator pos:line="33" pos:column="47">&amp;<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="48">oid<pos:position pos:line="33" pos:column="51"/></name></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call><operator pos:line="33" pos:column="52">-&gt;<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="54">object<pos:position pos:line="33" pos:column="60"/></name></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if></elseif> <elseif pos:line="34" pos:column="11">else <if pos:line="34" pos:column="16">if <condition pos:line="34" pos:column="19">(<expr><operator pos:line="34" pos:column="20">!<pos:position pos:line="34" pos:column="21"/></operator><call><name pos:line="34" pos:column="21">strcmp<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">type<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="34">tag_type<pos:position pos:line="34" pos:column="42"/></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="44"/></condition><then pos:line="34" pos:column="44"> <block pos:line="34" pos:column="45">{
		<expr_stmt><expr><name><name pos:line="35" pos:column="17">item<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">tagged<pos:position pos:line="35" pos:column="29"/></name></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <operator pos:line="35" pos:column="32">&amp;<pos:position pos:line="35" pos:column="37"/></operator><call><name pos:line="35" pos:column="33">lookup_tag<pos:position pos:line="35" pos:column="43"/></name><argument_list pos:line="35" pos:column="43">(<argument><expr><operator pos:line="35" pos:column="44">&amp;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="45">oid<pos:position pos:line="35" pos:column="48"/></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call><operator pos:line="35" pos:column="49">-&gt;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="51">object<pos:position pos:line="35" pos:column="57"/></name></expr>;<pos:position pos:line="35" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if></elseif> <else pos:line="36" pos:column="11">else <block pos:line="36" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">error<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><literal type="string" pos:line="37" pos:column="23">"Unknown type %s"<pos:position pos:line="37" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="42">type<pos:position pos:line="37" pos:column="46"/></name></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">item<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">tagged<pos:position pos:line="38" pos:column="29"/></name></name> <operator pos:line="38" pos:column="30">=<pos:position pos:line="38" pos:column="31"/></operator> <name pos:line="38" pos:column="32">NULL<pos:position pos:line="38" pos:column="36"/></name></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></else></if>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">bufptr<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">+<pos:position pos:line="41" pos:column="21"/></operator> <literal type="number" pos:line="41" pos:column="22">4<pos:position pos:line="41" pos:column="23"/></literal> <operator pos:line="41" pos:column="24">&lt;<pos:position pos:line="41" pos:column="28"/></operator> <name pos:line="41" pos:column="26">tail<pos:position pos:line="41" pos:column="30"/></name> <operator pos:line="41" pos:column="31">&amp;&amp;<pos:position pos:line="41" pos:column="41"/></operator> <call><name pos:line="41" pos:column="34">starts_with<pos:position pos:line="41" pos:column="45"/></name><argument_list pos:line="41" pos:column="45">(<argument><expr><name pos:line="41" pos:column="46">bufptr<pos:position pos:line="41" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="54">"tag "<pos:position pos:line="41" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="62"/></condition><then pos:line="41" pos:column="62">
		<block type="pseudo"><empty_stmt pos:line="42" pos:column="17">;<pos:position pos:line="42" pos:column="18"/></empty_stmt></block></then> 		<comment type="block" pos:line="42" pos:column="33">/* good */</comment>
	<else pos:line="43" pos:column="9">else
		<block type="pseudo"><return pos:line="44" pos:column="17">return <expr><operator pos:line="44" pos:column="24">-<pos:position pos:line="44" pos:column="25"/></operator><literal type="number" pos:line="44" pos:column="25">1<pos:position pos:line="44" pos:column="26"/></literal></expr>;<pos:position pos:line="44" pos:column="27"/></return></block></else></if>
	<expr_stmt><expr><name pos:line="45" pos:column="9">bufptr<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">+=<pos:position pos:line="45" pos:column="18"/></operator> <literal type="number" pos:line="45" pos:column="19">4<pos:position pos:line="45" pos:column="20"/></literal></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="46" pos:column="9">nl<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">memchr<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">bufptr<pos:position pos:line="46" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="46" pos:column="29">'\n'<pos:position pos:line="46" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="35">tail<pos:position pos:line="46" pos:column="39"/></name> <operator pos:line="46" pos:column="40">-<pos:position pos:line="46" pos:column="41"/></operator> <name pos:line="46" pos:column="42">bufptr<pos:position pos:line="46" pos:column="48"/></name></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">nl<pos:position pos:line="47" pos:column="16"/></name></expr>)<pos:position pos:line="47" pos:column="17"/></condition><then pos:line="47" pos:column="17">
		<block type="pseudo"><return pos:line="48" pos:column="17">return <expr><operator pos:line="48" pos:column="24">-<pos:position pos:line="48" pos:column="25"/></operator><literal type="number" pos:line="48" pos:column="25">1<pos:position pos:line="48" pos:column="26"/></literal></expr>;<pos:position pos:line="48" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="49" pos:column="9">item<pos:position pos:line="49" pos:column="13"/></name><operator pos:line="49" pos:column="13">-&gt;<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="15">tag<pos:position pos:line="49" pos:column="18"/></name></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <call><name pos:line="49" pos:column="21">xmemdupz<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><name pos:line="49" pos:column="30">bufptr<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="38">nl<pos:position pos:line="49" pos:column="40"/></name> <operator pos:line="49" pos:column="41">-<pos:position pos:line="49" pos:column="42"/></operator> <name pos:line="49" pos:column="43">bufptr<pos:position pos:line="49" pos:column="49"/></name></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name pos:line="50" pos:column="9">bufptr<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <name pos:line="50" pos:column="18">nl<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">+<pos:position pos:line="50" pos:column="22"/></operator> <literal type="number" pos:line="50" pos:column="23">1<pos:position pos:line="50" pos:column="24"/></literal></expr>;<pos:position pos:line="50" pos:column="25"/></expr_stmt>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">bufptr<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">+<pos:position pos:line="52" pos:column="21"/></operator> <literal type="number" pos:line="52" pos:column="22">7<pos:position pos:line="52" pos:column="23"/></literal> <operator pos:line="52" pos:column="24">&lt;<pos:position pos:line="52" pos:column="28"/></operator> <name pos:line="52" pos:column="26">tail<pos:position pos:line="52" pos:column="30"/></name> <operator pos:line="52" pos:column="31">&amp;&amp;<pos:position pos:line="52" pos:column="41"/></operator> <call><name pos:line="52" pos:column="34">starts_with<pos:position pos:line="52" pos:column="45"/></name><argument_list pos:line="52" pos:column="45">(<argument><expr><name pos:line="52" pos:column="46">bufptr<pos:position pos:line="52" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="54">"tagger "<pos:position pos:line="52" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="65"/></condition><then pos:line="52" pos:column="65">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="17">item<pos:position pos:line="53" pos:column="21"/></name><operator pos:line="53" pos:column="21">-&gt;<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="23">date<pos:position pos:line="53" pos:column="27"/></name></name> <operator pos:line="53" pos:column="28">=<pos:position pos:line="53" pos:column="29"/></operator> <call><name pos:line="53" pos:column="30">parse_tag_date<pos:position pos:line="53" pos:column="44"/></name><argument_list pos:line="53" pos:column="44">(<argument><expr><name pos:line="53" pos:column="45">bufptr<pos:position pos:line="53" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="53">tail<pos:position pos:line="53" pos:column="57"/></name></expr></argument>)<pos:position pos:line="53" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="59"/></expr_stmt></block></then>
	<else pos:line="54" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="55" pos:column="17">item<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">-&gt;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="23">date<pos:position pos:line="55" pos:column="27"/></name></name> <operator pos:line="55" pos:column="28">=<pos:position pos:line="55" pos:column="29"/></operator> <literal type="number" pos:line="55" pos:column="30">0<pos:position pos:line="55" pos:column="31"/></literal></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt></block></else></if>

	<return pos:line="57" pos:column="9">return <expr><literal type="number" pos:line="57" pos:column="16">0<pos:position pos:line="57" pos:column="17"/></literal></expr>;<pos:position pos:line="57" pos:column="18"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

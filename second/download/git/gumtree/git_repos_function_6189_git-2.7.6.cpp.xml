<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6189_git-2.7.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">regexec<pos:position pos:line="2" pos:column="8"/></name> <parameter_list pos:line="2" pos:column="9">(
	<parameter><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">regex_t<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier><name pos:line="3" pos:column="24">__restrict<pos:position pos:line="3" pos:column="34"/></name></type> <name pos:line="3" pos:column="35">preg<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>,
	<parameter><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier><name pos:line="4" pos:column="21">__restrict<pos:position pos:line="4" pos:column="31"/></name></type> <name pos:line="4" pos:column="32">string<pos:position pos:line="4" pos:column="38"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">nmatch<pos:position pos:line="5" pos:column="22"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="6" pos:column="9">regmatch_t<pos:position pos:line="6" pos:column="19"/></name></type> <name><name pos:line="6" pos:column="20">pmatch<pos:position pos:line="6" pos:column="26"/></name><index pos:line="6" pos:column="26">[]<pos:position pos:line="6" pos:column="28"/></index></name></decl></parameter>,
	<parameter><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">eflags<pos:position pos:line="7" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="20"/></parameter_list>
<block pos:line="8" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">reg_errcode_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">err<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">start<pos:position pos:line="10" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="14">length<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">eflags<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">&amp;<pos:position pos:line="12" pos:column="19"/></operator> <operator pos:line="12" pos:column="16">~<pos:position pos:line="12" pos:column="17"/></operator><operator pos:line="12" pos:column="17">(<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">REG_NOTBOL<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">|<pos:position pos:line="12" pos:column="30"/></operator> <name pos:line="12" pos:column="31">REG_NOTEOL<pos:position pos:line="12" pos:column="41"/></name> <operator pos:line="12" pos:column="42">|<pos:position pos:line="12" pos:column="43"/></operator> <name pos:line="12" pos:column="44">REG_STARTEND<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">)<pos:position pos:line="12" pos:column="57"/></operator></expr>)<pos:position pos:line="12" pos:column="58"/></condition><then pos:line="12" pos:column="58">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">REG_BADPAT<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></return></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">eflags<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">&amp;<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="16">REG_STARTEND<pos:position pos:line="15" pos:column="28"/></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29">
    <block pos:line="16" pos:column="5">{
      <expr_stmt><expr><name pos:line="17" pos:column="7">start<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <name><name pos:line="17" pos:column="15">pmatch<pos:position pos:line="17" pos:column="21"/></name><index pos:line="17" pos:column="21">[<expr><literal type="number" pos:line="17" pos:column="22">0<pos:position pos:line="17" pos:column="23"/></literal></expr>]<pos:position pos:line="17" pos:column="24"/></index></name><operator pos:line="17" pos:column="24">.<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">rm_so<pos:position pos:line="17" pos:column="30"/></name></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="18" pos:column="7">length<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name><name pos:line="18" pos:column="16">pmatch<pos:position pos:line="18" pos:column="22"/></name><index pos:line="18" pos:column="22">[<expr><literal type="number" pos:line="18" pos:column="23">0<pos:position pos:line="18" pos:column="24"/></literal></expr>]<pos:position pos:line="18" pos:column="25"/></index></name><operator pos:line="18" pos:column="25">.<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">rm_eo<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
  <else pos:line="20" pos:column="3">else
    <block pos:line="21" pos:column="5">{
      <expr_stmt><expr><name pos:line="22" pos:column="7">start<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <literal type="number" pos:line="22" pos:column="15">0<pos:position pos:line="22" pos:column="16"/></literal></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="23" pos:column="7">length<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <call><name pos:line="23" pos:column="16">strlen<pos:position pos:line="23" pos:column="22"/></name> <argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">string<pos:position pos:line="23" pos:column="30"/></name></expr></argument>)<pos:position pos:line="23" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="26" pos:column="3">__libc_lock_lock<pos:position pos:line="26" pos:column="19"/></name> <argument_list pos:line="26" pos:column="20">(<argument><expr><name><name pos:line="26" pos:column="21">dfa<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">-&gt;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="26">lock<pos:position pos:line="26" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name><name pos:line="27" pos:column="7">preg<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">no_sub<pos:position pos:line="27" pos:column="19"/></name></name></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="5">err<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <call><name pos:line="28" pos:column="11">re_search_internal<pos:position pos:line="28" pos:column="29"/></name> <argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">preg<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="37">string<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="45">length<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="53">start<pos:position pos:line="28" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="60">length<pos:position pos:line="28" pos:column="66"/></name> <operator pos:line="28" pos:column="67">-<pos:position pos:line="28" pos:column="68"/></operator> <name pos:line="28" pos:column="69">start<pos:position pos:line="28" pos:column="74"/></name></expr></argument>,
			      <argument><expr><name pos:line="29" pos:column="31">length<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="39">0<pos:position pos:line="29" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">NULL<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="48">eflags<pos:position pos:line="29" pos:column="54"/></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt></block></then>
  <else pos:line="30" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="5">err<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">=<pos:position pos:line="31" pos:column="10"/></operator> <call><name pos:line="31" pos:column="11">re_search_internal<pos:position pos:line="31" pos:column="29"/></name> <argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">preg<pos:position pos:line="31" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="37">string<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="45">length<pos:position pos:line="31" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="53">start<pos:position pos:line="31" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="60">length<pos:position pos:line="31" pos:column="66"/></name> <operator pos:line="31" pos:column="67">-<pos:position pos:line="31" pos:column="68"/></operator> <name pos:line="31" pos:column="69">start<pos:position pos:line="31" pos:column="74"/></name></expr></argument>,
			      <argument><expr><name pos:line="32" pos:column="31">length<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="39">nmatch<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="47">pmatch<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="55">eflags<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt></block></else></if>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">__libc_lock_unlock<pos:position pos:line="33" pos:column="21"/></name> <argument_list pos:line="33" pos:column="22">(<argument><expr><name><name pos:line="33" pos:column="23">dfa<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">-&gt;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="28">lock<pos:position pos:line="33" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
  <return pos:line="34" pos:column="3">return <expr><name pos:line="34" pos:column="10">err<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">!=<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">REG_NOERROR<pos:position pos:line="34" pos:column="28"/></name></expr>;<pos:position pos:line="34" pos:column="29"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_125_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">strbuf_add_tabexpand<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">strbuf<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">sb<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">tabwidth<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">line<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">int<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">linelen<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">tab<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">tab<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">=<pos:position pos:line="6" pos:column="22"/></operator> <call><name pos:line="6" pos:column="23">memchr<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><name pos:line="6" pos:column="30">line<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="6" pos:column="36">'\t'<pos:position pos:line="6" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="42">linelen<pos:position pos:line="6" pos:column="49"/></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call><operator pos:line="6" pos:column="50">)<pos:position pos:line="6" pos:column="51"/></operator> <operator pos:line="6" pos:column="52">!=<pos:position pos:line="6" pos:column="54"/></operator> <name pos:line="6" pos:column="55">NULL<pos:position pos:line="6" pos:column="59"/></name></expr>)<pos:position pos:line="6" pos:column="60"/></condition> <block pos:line="6" pos:column="61">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">width<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><call><name pos:line="7" pos:column="29">pp_utf8_width<pos:position pos:line="7" pos:column="42"/></name><argument_list pos:line="7" pos:column="42">(<argument><expr><name pos:line="7" pos:column="43">line<pos:position pos:line="7" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="49">tab<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="54"/></decl_stmt>

		<comment type="block" pos:line="9" pos:column="17">/*
		 * If it wasn't well-formed utf8, or it
		 * had characters with badly defined
		 * width (control characters etc), just
		 * give up on trying to align things.
		 */</comment>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">width<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">&lt;<pos:position pos:line="15" pos:column="31"/></operator> <literal type="number" pos:line="15" pos:column="29">0<pos:position pos:line="15" pos:column="30"/></literal></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31">
			<block type="pseudo"><break pos:line="16" pos:column="25">break;<pos:position pos:line="16" pos:column="31"/></break></block></then></if>

		<comment type="block" pos:line="18" pos:column="17">/* Output the data .. */</comment>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">strbuf_add<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">sb<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">line<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">tab<pos:position pos:line="19" pos:column="41"/></name> <operator pos:line="19" pos:column="42">-<pos:position pos:line="19" pos:column="43"/></operator> <name pos:line="19" pos:column="44">line<pos:position pos:line="19" pos:column="48"/></name></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>

		<comment type="block" pos:line="21" pos:column="17">/* .. and the de-tabified tab */</comment>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">strbuf_addchars<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">sb<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="22" pos:column="37">' '<pos:position pos:line="22" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="42">tabwidth<pos:position pos:line="22" pos:column="50"/></name> <operator pos:line="22" pos:column="51">-<pos:position pos:line="22" pos:column="52"/></operator> <operator pos:line="22" pos:column="53">(<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="54">width<pos:position pos:line="22" pos:column="59"/></name> <operator pos:line="22" pos:column="60">%<pos:position pos:line="22" pos:column="61"/></operator> <name pos:line="22" pos:column="62">tabwidth<pos:position pos:line="22" pos:column="70"/></name><operator pos:line="22" pos:column="70">)<pos:position pos:line="22" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="73"/></expr_stmt>

		<comment type="block" pos:line="24" pos:column="17">/* Skip over the printed part .. */</comment>
		<expr_stmt><expr><name pos:line="25" pos:column="17">linelen<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">-=<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">tab<pos:position pos:line="25" pos:column="31"/></name> <operator pos:line="25" pos:column="32">+<pos:position pos:line="25" pos:column="33"/></operator> <literal type="number" pos:line="25" pos:column="34">1<pos:position pos:line="25" pos:column="35"/></literal> <operator pos:line="25" pos:column="36">-<pos:position pos:line="25" pos:column="37"/></operator> <name pos:line="25" pos:column="38">line<pos:position pos:line="25" pos:column="42"/></name></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">line<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">tab<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">+<pos:position pos:line="26" pos:column="29"/></operator> <literal type="number" pos:line="26" pos:column="30">1<pos:position pos:line="26" pos:column="31"/></literal></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></while>

	<comment type="block" pos:line="29" pos:column="9">/*
	 * Print out everything after the last tab without
	 * worrying about width - there's nothing more to
	 * align.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">strbuf_add<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name pos:line="34" pos:column="20">sb<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="24">line<pos:position pos:line="34" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="30">linelen<pos:position pos:line="34" pos:column="37"/></name></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

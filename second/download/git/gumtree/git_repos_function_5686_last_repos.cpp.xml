<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5686_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">show_blob_object<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">object_id<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">oid<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="58">struct<pos:position pos:line="1" pos:column="64"/></name> <name pos:line="1" pos:column="65">rev_info<pos:position pos:line="1" pos:column="73"/></name></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">rev<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="80">const<pos:position pos:line="1" pos:column="85"/></specifier> <name pos:line="1" pos:column="86">char<pos:position pos:line="1" pos:column="90"/></name> <modifier pos:line="1" pos:column="91">*<pos:position pos:line="1" pos:column="92"/></modifier></type><name pos:line="1" pos:column="92">obj_name<pos:position pos:line="1" pos:column="100"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="101"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object_id<pos:position pos:line="3" pos:column="25"/></name></name></type> <name pos:line="3" pos:column="26">oidc<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object_context<pos:position pos:line="4" pos:column="30"/></name></name></type> <name pos:line="4" pos:column="31">obj_context<pos:position pos:line="4" pos:column="42"/></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">buf<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">size<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">fflush<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name><name pos:line="8" pos:column="16">rev<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">diffopt<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">.<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">file<pos:position pos:line="8" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">DIFF_OPT_TOUCHED<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><operator pos:line="9" pos:column="31">&amp;<pos:position pos:line="9" pos:column="36"/></operator><name><name pos:line="9" pos:column="32">rev<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">diffopt<pos:position pos:line="9" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">ALLOW_TEXTCONV<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call> <operator pos:line="9" pos:column="62">||<pos:position pos:line="9" pos:column="64"/></operator>
	    <operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">DIFF_OPT_TST<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><operator pos:line="10" pos:column="27">&amp;<pos:position pos:line="10" pos:column="32"/></operator><name><name pos:line="10" pos:column="28">rev<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">diffopt<pos:position pos:line="10" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">ALLOW_TEXTCONV<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="58"/></condition><then pos:line="10" pos:column="58">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><call><name pos:line="11" pos:column="24">stream_blob_to_fd<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><literal type="number" pos:line="11" pos:column="42">1<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">oid<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">NULL<pos:position pos:line="11" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="56">0<pos:position pos:line="11" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></return></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">get_sha1_with_context<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">obj_name<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">GET_SHA1_RECORD_PATH<pos:position pos:line="13" pos:column="65"/></name></expr></argument>,
				  <argument><expr><name><name pos:line="14" pos:column="35">oidc<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">.<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="40">hash<pos:position pos:line="14" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="46">&amp;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="47">obj_context<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="60"/></condition><then pos:line="14" pos:column="60">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">die<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><call><name pos:line="15" pos:column="21">_<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><literal type="string" pos:line="15" pos:column="23">"Not a valid object name %s"<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="54">obj_name<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt></block></then></if>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name><name pos:line="16" pos:column="14">obj_context<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">.<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">path<pos:position pos:line="16" pos:column="30"/></name></name> <operator pos:line="16" pos:column="31">||<pos:position pos:line="16" pos:column="33"/></operator>
	    <operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><call><name pos:line="17" pos:column="14">textconv_object<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name><name pos:line="17" pos:column="30">obj_context<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">.<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="42">path<pos:position pos:line="17" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="48">obj_context<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">.<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="60">mode<pos:position pos:line="17" pos:column="64"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="66">&amp;<pos:position pos:line="17" pos:column="71"/></operator><name pos:line="17" pos:column="67">oidc<pos:position pos:line="17" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="73">1<pos:position pos:line="17" pos:column="74"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="76">&amp;<pos:position pos:line="17" pos:column="81"/></operator><name pos:line="17" pos:column="77">buf<pos:position pos:line="17" pos:column="80"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="82">&amp;<pos:position pos:line="17" pos:column="87"/></operator><name pos:line="17" pos:column="83">size<pos:position pos:line="17" pos:column="87"/></name></expr></argument>)<pos:position pos:line="17" pos:column="88"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="89"/></condition><then pos:line="17" pos:column="89"> <block pos:line="17" pos:column="90">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">free<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name><name pos:line="18" pos:column="22">obj_context<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">.<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="34">path<pos:position pos:line="18" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><call><name pos:line="19" pos:column="24">stream_blob_to_fd<pos:position pos:line="19" pos:column="41"/></name><argument_list pos:line="19" pos:column="41">(<argument><expr><literal type="number" pos:line="19" pos:column="42">1<pos:position pos:line="19" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">oid<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">NULL<pos:position pos:line="19" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="56">0<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">buf<pos:position pos:line="22" pos:column="17"/></name></expr>)<pos:position pos:line="22" pos:column="18"/></condition><then pos:line="22" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">die<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><call><name pos:line="23" pos:column="21">_<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><literal type="string" pos:line="23" pos:column="23">"git show %s: bad file"<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="23" pos:column="49">obj_name<pos:position pos:line="23" pos:column="57"/></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">write_or_die<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><literal type="number" pos:line="25" pos:column="22">1<pos:position pos:line="25" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="25">buf<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="30">size<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">free<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><name><name pos:line="26" pos:column="14">obj_context<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">.<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">path<pos:position pos:line="26" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
	<return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

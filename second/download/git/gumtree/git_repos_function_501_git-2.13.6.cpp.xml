<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_501_git-2.13.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">copy_name<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">buf<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">cp<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<for pos:line="4" pos:column="9">for <control pos:line="4" pos:column="13">(<init><expr><name pos:line="4" pos:column="14">cp<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">=<pos:position pos:line="4" pos:column="18"/></operator> <name pos:line="4" pos:column="19">buf<pos:position pos:line="4" pos:column="22"/></name></expr>;<pos:position pos:line="4" pos:column="23"/></init> <condition><expr><operator pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">cp<pos:position pos:line="4" pos:column="27"/></name> <operator pos:line="4" pos:column="28">&amp;&amp;<pos:position pos:line="4" pos:column="38"/></operator> <operator pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="32">cp<pos:position pos:line="4" pos:column="34"/></name> <operator pos:line="4" pos:column="35">!=<pos:position pos:line="4" pos:column="37"/></operator> <literal type="char" pos:line="4" pos:column="38">'\n'<pos:position pos:line="4" pos:column="42"/></literal></expr>;<pos:position pos:line="4" pos:column="43"/></condition> <incr><expr><name pos:line="4" pos:column="44">cp<pos:position pos:line="4" pos:column="46"/></name><operator pos:line="4" pos:column="46">++<pos:position pos:line="4" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="49"/></control> <block pos:line="4" pos:column="50">{
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><operator pos:line="5" pos:column="21">!<pos:position pos:line="5" pos:column="22"/></operator><call><name pos:line="5" pos:column="22">strncmp<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">cp<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="34">" &lt;"<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="40">2<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="43"/></condition><then pos:line="5" pos:column="43">
			<block type="pseudo"><return pos:line="6" pos:column="25">return <expr><call><name pos:line="6" pos:column="32">xmemdupz<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">(<argument><expr><name pos:line="6" pos:column="41">buf<pos:position pos:line="6" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="46">cp<pos:position pos:line="6" pos:column="48"/></name> <operator pos:line="6" pos:column="49">-<pos:position pos:line="6" pos:column="50"/></operator> <name pos:line="6" pos:column="51">buf<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></return></block></then></if>
	}<pos:position pos:line="7" pos:column="10"/></block></for>
	<return pos:line="8" pos:column="9">return <expr><literal type="string" pos:line="8" pos:column="16">""<pos:position pos:line="8" pos:column="18"/></literal></expr>;<pos:position pos:line="8" pos:column="19"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

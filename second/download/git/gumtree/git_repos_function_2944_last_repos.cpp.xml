<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2944_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">get_next_component<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">strbuf<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">next<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">strbuf<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">remaining<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">start<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">NULL<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">end<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">strbuf_reset<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">next<pos:position pos:line="6" pos:column="26"/></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* look for the next component */</comment>
	<comment type="block" pos:line="9" pos:column="9">/* Skip sequences of multiple path-separators */</comment>
	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">start<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <name><name pos:line="10" pos:column="22">remaining<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">buf<pos:position pos:line="10" pos:column="36"/></name></name></expr>;<pos:position pos:line="10" pos:column="37"/></init> <condition><expr><call><name pos:line="10" pos:column="38">is_dir_sep<pos:position pos:line="10" pos:column="48"/></name><argument_list pos:line="10" pos:column="48">(<argument><expr><operator pos:line="10" pos:column="49">*<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="50">start<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="57"/></condition> <incr><expr><name pos:line="10" pos:column="58">start<pos:position pos:line="10" pos:column="63"/></name><operator pos:line="10" pos:column="63">++<pos:position pos:line="10" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="66"/></control>
		<block type="pseudo"><empty_stmt pos:line="11" pos:column="17">;<pos:position pos:line="11" pos:column="18"/></empty_stmt></block></for> <comment type="block" pos:line="11" pos:column="19">/* nothing */</comment>
	<comment type="block" pos:line="12" pos:column="9">/* Find end of the path component */</comment>
	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">end<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">start<pos:position pos:line="13" pos:column="25"/></name></expr>;<pos:position pos:line="13" pos:column="26"/></init> <condition><expr><operator pos:line="13" pos:column="27">*<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">end<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">&amp;&amp;<pos:position pos:line="13" pos:column="42"/></operator> <operator pos:line="13" pos:column="35">!<pos:position pos:line="13" pos:column="36"/></operator><call><name pos:line="13" pos:column="36">is_dir_sep<pos:position pos:line="13" pos:column="46"/></name><argument_list pos:line="13" pos:column="46">(<argument><expr><operator pos:line="13" pos:column="47">*<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">end<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></condition> <incr><expr><name pos:line="13" pos:column="54">end<pos:position pos:line="13" pos:column="57"/></name><operator pos:line="13" pos:column="57">++<pos:position pos:line="13" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="60"/></control>
		<block type="pseudo"><empty_stmt pos:line="14" pos:column="17">;<pos:position pos:line="14" pos:column="18"/></empty_stmt></block></for> <comment type="block" pos:line="14" pos:column="19">/* nothing */</comment>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">strbuf_add<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">next<pos:position pos:line="16" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="26">start<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">end<pos:position pos:line="16" pos:column="36"/></name> <operator pos:line="16" pos:column="37">-<pos:position pos:line="16" pos:column="38"/></operator> <name pos:line="16" pos:column="39">start<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
	<comment type="block" pos:line="17" pos:column="9">/* remove the component from 'remaining' */</comment>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">strbuf_remove<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">remaining<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="34">0<pos:position pos:line="18" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="37">end<pos:position pos:line="18" pos:column="40"/></name> <operator pos:line="18" pos:column="41">-<pos:position pos:line="18" pos:column="42"/></operator> <name><name pos:line="18" pos:column="43">remaining<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">buf<pos:position pos:line="18" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

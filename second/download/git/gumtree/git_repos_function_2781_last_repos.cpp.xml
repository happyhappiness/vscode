<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2781_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">urlmatch_config_entry<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">var<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">value<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">void<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">cb<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list_item<pos:position pos:line="3" pos:column="32"/></name></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">item<pos:position pos:line="3" pos:column="38"/></name></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">urlmatch_config<pos:position pos:line="4" pos:column="31"/></name></name> <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier></type><name pos:line="4" pos:column="33">collect<pos:position pos:line="4" pos:column="40"/></name> <init pos:line="4" pos:column="41">= <expr><name pos:line="4" pos:column="43">cb<pos:position pos:line="4" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">urlmatch_item<pos:position pos:line="5" pos:column="29"/></name></name></type> <name pos:line="5" pos:column="30">matched<pos:position pos:line="5" pos:column="37"/></name> <init pos:line="5" pos:column="38">= <expr><block pos:line="5" pos:column="40">{<expr><literal type="number" pos:line="5" pos:column="41">0<pos:position pos:line="5" pos:column="42"/></literal></expr>}<pos:position pos:line="5" pos:column="43"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">url_info<pos:position pos:line="6" pos:column="24"/></name></name> <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier></type><name pos:line="6" pos:column="26">url<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><operator pos:line="6" pos:column="32">&amp;<pos:position pos:line="6" pos:column="37"/></operator><name><name pos:line="6" pos:column="33">collect<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="42">url<pos:position pos:line="6" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">key<pos:position pos:line="7" pos:column="24"/></name></decl>, <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="27">dot<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">synthkey<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><name pos:line="8" pos:column="34">STRBUF_INIT<pos:position pos:line="8" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">retval<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">skip_prefix<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">var<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="31">collect<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">section<pos:position pos:line="11" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="49">&amp;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="50">key<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call> <operator pos:line="11" pos:column="55">||<pos:position pos:line="11" pos:column="57"/></operator> <operator pos:line="11" pos:column="58">*<pos:position pos:line="11" pos:column="59"/></operator><operator pos:line="11" pos:column="59">(<pos:position pos:line="11" pos:column="60"/></operator><name pos:line="11" pos:column="60">key<pos:position pos:line="11" pos:column="63"/></name><operator pos:line="11" pos:column="63">++<pos:position pos:line="11" pos:column="65"/></operator><operator pos:line="11" pos:column="65">)<pos:position pos:line="11" pos:column="66"/></operator> <operator pos:line="11" pos:column="67">!=<pos:position pos:line="11" pos:column="69"/></operator> <literal type="char" pos:line="11" pos:column="70">'.'<pos:position pos:line="11" pos:column="73"/></literal></expr>)<pos:position pos:line="11" pos:column="74"/></condition><then pos:line="11" pos:column="74"> <block pos:line="11" pos:column="75">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name><name pos:line="12" pos:column="21">collect<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">cascade_fn<pos:position pos:line="12" pos:column="40"/></name></name></expr>)<pos:position pos:line="12" pos:column="41"/></condition><then pos:line="12" pos:column="41">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><call><name><name pos:line="13" pos:column="32">collect<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">cascade_fn<pos:position pos:line="13" pos:column="51"/></name></name><argument_list pos:line="13" pos:column="51">(<argument><expr><name pos:line="13" pos:column="52">var<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="57">value<pos:position pos:line="13" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="64">cb<pos:position pos:line="13" pos:column="66"/></name></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></return></block></then></if>
		<return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return> <comment type="block" pos:line="14" pos:column="27">/* not interested */</comment>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="16" pos:column="9">dot<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">strrchr<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">key<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="28">'.'<pos:position pos:line="16" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">dot<pos:position pos:line="17" pos:column="16"/></name></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17"> <block pos:line="17" pos:column="18">{
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">char<pos:position pos:line="18" pos:column="21"/></name> <modifier pos:line="18" pos:column="22">*<pos:position pos:line="18" pos:column="23"/></modifier></type><name pos:line="18" pos:column="23">config_url<pos:position pos:line="18" pos:column="33"/></name></decl>, <modifier pos:line="18" pos:column="35">*<pos:position pos:line="18" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="18" pos:column="36">norm_url<pos:position pos:line="18" pos:column="44"/></name></decl>;<pos:position pos:line="18" pos:column="45"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="19" pos:column="17">struct<pos:position pos:line="19" pos:column="23"/></name> <name pos:line="19" pos:column="24">url_info<pos:position pos:line="19" pos:column="32"/></name></name></type> <name pos:line="19" pos:column="33">norm_info<pos:position pos:line="19" pos:column="42"/></name></decl>;<pos:position pos:line="19" pos:column="43"/></decl_stmt>

		<expr_stmt><expr><name pos:line="21" pos:column="17">config_url<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <call><name pos:line="21" pos:column="30">xmemdupz<pos:position pos:line="21" pos:column="38"/></name><argument_list pos:line="21" pos:column="38">(<argument><expr><name pos:line="21" pos:column="39">key<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">dot<pos:position pos:line="21" pos:column="47"/></name> <operator pos:line="21" pos:column="48">-<pos:position pos:line="21" pos:column="49"/></operator> <name pos:line="21" pos:column="50">key<pos:position pos:line="21" pos:column="53"/></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">norm_url<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <call><name pos:line="22" pos:column="28">url_normalize_1<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><name pos:line="22" pos:column="44">config_url<pos:position pos:line="22" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="56">&amp;<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="57">norm_info<pos:position pos:line="22" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="68">1<pos:position pos:line="22" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">free<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">config_url<pos:position pos:line="23" pos:column="32"/></name></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">norm_url<pos:position pos:line="24" pos:column="30"/></name></expr>)<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31">
			<block type="pseudo"><return pos:line="25" pos:column="25">return <expr><literal type="number" pos:line="25" pos:column="32">0<pos:position pos:line="25" pos:column="33"/></literal></expr>;<pos:position pos:line="25" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="26" pos:column="17">retval<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <call><name pos:line="26" pos:column="26">match_urls<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><name pos:line="26" pos:column="37">url<pos:position pos:line="26" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="42">&amp;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="43">norm_info<pos:position pos:line="26" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="54">&amp;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="55">matched<pos:position pos:line="26" pos:column="62"/></name></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">free<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">norm_url<pos:position pos:line="27" pos:column="30"/></name></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">retval<pos:position pos:line="28" pos:column="28"/></name></expr>)<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29">
			<block type="pseudo"><return pos:line="29" pos:column="25">return <expr><literal type="number" pos:line="29" pos:column="32">0<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="30" pos:column="17">key<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">dot<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">+<pos:position pos:line="30" pos:column="28"/></operator> <literal type="number" pos:line="30" pos:column="29">1<pos:position pos:line="30" pos:column="30"/></literal></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">collect<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">-&gt;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="22">key<pos:position pos:line="33" pos:column="25"/></name></name> <operator pos:line="33" pos:column="26">&amp;&amp;<pos:position pos:line="33" pos:column="36"/></operator> <call><name pos:line="33" pos:column="29">strcmp<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">key<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="41">collect<pos:position pos:line="33" pos:column="48"/></name><operator pos:line="33" pos:column="48">-&gt;<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="50">key<pos:position pos:line="33" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="55"/></condition><then pos:line="33" pos:column="55">
		<block type="pseudo"><return pos:line="34" pos:column="17">return <expr><literal type="number" pos:line="34" pos:column="24">0<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="36" pos:column="9">item<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">string_list_insert<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><operator pos:line="36" pos:column="35">&amp;<pos:position pos:line="36" pos:column="40"/></operator><name><name pos:line="36" pos:column="36">collect<pos:position pos:line="36" pos:column="43"/></name><operator pos:line="36" pos:column="43">-&gt;<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="45">vars<pos:position pos:line="36" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">key<pos:position pos:line="36" pos:column="54"/></name></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">!<pos:position pos:line="37" pos:column="14"/></operator><name><name pos:line="37" pos:column="14">item<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">util<pos:position pos:line="37" pos:column="24"/></name></name></expr>)<pos:position pos:line="37" pos:column="25"/></condition><then pos:line="37" pos:column="25"> <block pos:line="37" pos:column="26">{
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">item<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">util<pos:position pos:line="38" pos:column="27"/></name></name> <operator pos:line="38" pos:column="28">=<pos:position pos:line="38" pos:column="29"/></operator> <call><name pos:line="38" pos:column="30">xcalloc<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><literal type="number" pos:line="38" pos:column="38">1<pos:position pos:line="38" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="41">sizeof<argument_list pos:line="38" pos:column="47">(<argument><expr><name pos:line="38" pos:column="48">matched<pos:position pos:line="38" pos:column="55"/></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then> <else pos:line="39" pos:column="11">else <block pos:line="39" pos:column="16">{
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><call><name pos:line="40" pos:column="21">cmp_matches<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><operator pos:line="40" pos:column="33">&amp;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="34">matched<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="43">item<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">-&gt;<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="49">util<pos:position pos:line="40" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call> <operator pos:line="40" pos:column="55">&lt;<pos:position pos:line="40" pos:column="59"/></operator> <literal type="number" pos:line="40" pos:column="57">0<pos:position pos:line="40" pos:column="58"/></literal></expr>)<pos:position pos:line="40" pos:column="59"/></condition><then pos:line="40" pos:column="59">
			 <comment type="block" pos:line="41" pos:column="26">/*
			  * Our match is worse than the old one,
			  * we cannot use it.
			  */</comment>
			<block type="pseudo"><return pos:line="45" pos:column="25">return <expr><literal type="number" pos:line="45" pos:column="32">0<pos:position pos:line="45" pos:column="33"/></literal></expr>;<pos:position pos:line="45" pos:column="34"/></return></block></then></if>
		<comment type="block" pos:line="46" pos:column="17">/* Otherwise, replace it with this one. */</comment>
	}<pos:position pos:line="47" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="49" pos:column="9">memcpy<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name><name pos:line="49" pos:column="16">item<pos:position pos:line="49" pos:column="20"/></name><operator pos:line="49" pos:column="20">-&gt;<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="22">util<pos:position pos:line="49" pos:column="26"/></name></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="28">&amp;<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="29">matched<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="38">sizeof<argument_list pos:line="49" pos:column="44">(<argument><expr><name pos:line="49" pos:column="45">matched<pos:position pos:line="49" pos:column="52"/></name></expr></argument>)<pos:position pos:line="49" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">strbuf_addstr<pos:position pos:line="50" pos:column="22"/></name><argument_list pos:line="50" pos:column="22">(<argument><expr><operator pos:line="50" pos:column="23">&amp;<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="24">synthkey<pos:position pos:line="50" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="34">collect<pos:position pos:line="50" pos:column="41"/></name><operator pos:line="50" pos:column="41">-&gt;<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="43">section<pos:position pos:line="50" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">strbuf_addch<pos:position pos:line="51" pos:column="21"/></name><argument_list pos:line="51" pos:column="21">(<argument><expr><operator pos:line="51" pos:column="22">&amp;<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="23">synthkey<pos:position pos:line="51" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="51" pos:column="33">'.'<pos:position pos:line="51" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">strbuf_addstr<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><operator pos:line="52" pos:column="23">&amp;<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="24">synthkey<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">key<pos:position pos:line="52" pos:column="37"/></name></expr></argument>)<pos:position pos:line="52" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name pos:line="53" pos:column="9">retval<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <call><name><name pos:line="53" pos:column="18">collect<pos:position pos:line="53" pos:column="25"/></name><operator pos:line="53" pos:column="25">-&gt;<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="27">collect_fn<pos:position pos:line="53" pos:column="37"/></name></name><argument_list pos:line="53" pos:column="37">(<argument><expr><name><name pos:line="53" pos:column="38">synthkey<pos:position pos:line="53" pos:column="46"/></name><operator pos:line="53" pos:column="46">.<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="47">buf<pos:position pos:line="53" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="52">value<pos:position pos:line="53" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="59">collect<pos:position pos:line="53" pos:column="66"/></name><operator pos:line="53" pos:column="66">-&gt;<pos:position pos:line="53" pos:column="71"/></operator><name pos:line="53" pos:column="68">cb<pos:position pos:line="53" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="72"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="55" pos:column="9">strbuf_release<pos:position pos:line="55" pos:column="23"/></name><argument_list pos:line="55" pos:column="23">(<argument><expr><operator pos:line="55" pos:column="24">&amp;<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="25">synthkey<pos:position pos:line="55" pos:column="33"/></name></expr></argument>)<pos:position pos:line="55" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>
	<return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">retval<pos:position pos:line="56" pos:column="22"/></name></expr>;<pos:position pos:line="56" pos:column="23"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

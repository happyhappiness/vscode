<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7102_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">dirent<pos:position pos:line="1" pos:column="14"/></name></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">readdir<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">DIR<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">dir<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">dir<pos:position pos:line="3" pos:column="17"/></name></expr>)<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18"> <block pos:line="3" pos:column="19">{
		<expr_stmt><expr><name pos:line="4" pos:column="17">errno<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">=<pos:position pos:line="4" pos:column="24"/></operator> <name pos:line="4" pos:column="25">EBADF<pos:position pos:line="4" pos:column="30"/></name></expr>;<pos:position pos:line="4" pos:column="31"/></expr_stmt> <comment type="block" pos:line="4" pos:column="32">/* No set_errno for mingw */</comment>
		<return pos:line="5" pos:column="17">return <expr><name pos:line="5" pos:column="24">NULL<pos:position pos:line="5" pos:column="28"/></name></expr>;<pos:position pos:line="5" pos:column="29"/></return>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="8" pos:column="9">/* if first entry, dirent has already been set up by opendir */</comment>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">dir<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">dd_stat<pos:position pos:line="9" pos:column="25"/></name></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <block pos:line="9" pos:column="27">{
		<comment type="block" pos:line="10" pos:column="17">/* get next entry and convert from WIN32_FIND_DATA to dirent */</comment>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">WIN32_FIND_DATAW<pos:position pos:line="11" pos:column="33"/></name></type> <name pos:line="11" pos:column="34">fdata<pos:position pos:line="11" pos:column="39"/></name></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><call><name pos:line="12" pos:column="21">FindNextFileW<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name><name pos:line="12" pos:column="35">dir<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">dd_handle<pos:position pos:line="12" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="51">&amp;<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="52">fdata<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="59"/></condition><then pos:line="12" pos:column="59"> <block pos:line="12" pos:column="60">{
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">finddata2dirent<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><expr><operator pos:line="13" pos:column="41">&amp;<pos:position pos:line="13" pos:column="46"/></operator><name><name pos:line="13" pos:column="42">dir<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">dd_dir<pos:position pos:line="13" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="55">&amp;<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="56">fdata<pos:position pos:line="13" pos:column="61"/></name></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></then> <else pos:line="14" pos:column="19">else <block pos:line="14" pos:column="24">{
			<decl_stmt><decl><type><name pos:line="15" pos:column="25">DWORD<pos:position pos:line="15" pos:column="30"/></name></type> <name pos:line="15" pos:column="31">lasterr<pos:position pos:line="15" pos:column="38"/></name> <init pos:line="15" pos:column="39">= <expr><call><name pos:line="15" pos:column="41">GetLastError<pos:position pos:line="15" pos:column="53"/></name><argument_list pos:line="15" pos:column="53">()<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="56"/></decl_stmt>
			<comment type="block" pos:line="16" pos:column="25">/* POSIX says you shouldn't set errno when readdir can't
			   find any more files; so, if another error we leave it set. */</comment>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><name pos:line="18" pos:column="29">lasterr<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">!=<pos:position pos:line="18" pos:column="39"/></operator> <name pos:line="18" pos:column="40">ERROR_NO_MORE_FILES<pos:position pos:line="18" pos:column="59"/></name></expr>)<pos:position pos:line="18" pos:column="60"/></condition><then pos:line="18" pos:column="60">
				<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="33">errno<pos:position pos:line="19" pos:column="38"/></name> <operator pos:line="19" pos:column="39">=<pos:position pos:line="19" pos:column="40"/></operator> <call><name pos:line="19" pos:column="41">err_win_to_posix<pos:position pos:line="19" pos:column="57"/></name><argument_list pos:line="19" pos:column="57">(<argument><expr><name pos:line="19" pos:column="58">lasterr<pos:position pos:line="19" pos:column="65"/></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="67"/></expr_stmt></block></then></if>
			<return pos:line="20" pos:column="25">return <expr><name pos:line="20" pos:column="32">NULL<pos:position pos:line="20" pos:column="36"/></name></expr>;<pos:position pos:line="20" pos:column="37"/></return>
		}<pos:position pos:line="21" pos:column="18"/></block></else></if>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="24" pos:column="9">++<pos:position pos:line="24" pos:column="11"/></operator><name><name pos:line="24" pos:column="11">dir<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">dd_stat<pos:position pos:line="24" pos:column="23"/></name></name></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
	<return pos:line="25" pos:column="9">return <expr><operator pos:line="25" pos:column="16">&amp;<pos:position pos:line="25" pos:column="21"/></operator><name><name pos:line="25" pos:column="17">dir<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">dd_dir<pos:position pos:line="25" pos:column="28"/></name></name></expr>;<pos:position pos:line="25" pos:column="29"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

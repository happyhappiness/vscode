<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1997.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">rename_ref<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><specifier pos:line="1" pos:column="16">const<pos:position pos:line="1" pos:column="21"/></specifier> <name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">oldrefname<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">newrefname<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="64">const<pos:position pos:line="1" pos:column="69"/></specifier> <name pos:line="1" pos:column="70">char<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">logmsg<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">sha1<pos:position pos:line="3" pos:column="27"/></name><index pos:line="3" pos:column="27">[<expr><literal type="number" pos:line="3" pos:column="28">20<pos:position pos:line="3" pos:column="30"/></literal></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="33">orig_sha1<pos:position pos:line="3" pos:column="42"/></name><index pos:line="3" pos:column="42">[<expr><literal type="number" pos:line="3" pos:column="43">20<pos:position pos:line="3" pos:column="45"/></literal></expr>]<pos:position pos:line="3" pos:column="46"/></index></name></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">flag<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="23">logmoved<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><literal type="number" pos:line="4" pos:column="34">0<pos:position pos:line="4" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ref_lock<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">lock<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">stat<pos:position pos:line="6" pos:column="20"/></name></name></type> <name pos:line="6" pos:column="21">loginfo<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">log<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><operator pos:line="7" pos:column="19">!<pos:position pos:line="7" pos:column="20"/></operator><call><name pos:line="7" pos:column="20">lstat<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><call><name pos:line="7" pos:column="26">git_path<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><literal type="string" pos:line="7" pos:column="35">"logs/%s"<pos:position pos:line="7" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="46">oldrefname<pos:position pos:line="7" pos:column="56"/></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="7" pos:column="59">&amp;<pos:position pos:line="7" pos:column="64"/></operator><name pos:line="7" pos:column="60">loginfo<pos:position pos:line="7" pos:column="67"/></name></expr></argument>)<pos:position pos:line="7" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">symref<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name pos:line="8" pos:column="30">NULL<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">log<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&amp;&amp;<pos:position pos:line="10" pos:column="27"/></operator> <call><name pos:line="10" pos:column="20">S_ISLNK<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name><name pos:line="10" pos:column="28">loginfo<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">.<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">st_mode<pos:position pos:line="10" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="45"/></condition><then pos:line="10" pos:column="45">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><call><name pos:line="11" pos:column="24">error<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><literal type="string" pos:line="11" pos:column="30">"reflog for %s is a symlink"<pos:position pos:line="11" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="60">oldrefname<pos:position pos:line="11" pos:column="70"/></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="72"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="13" pos:column="9">symref<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">resolve_ref_unsafe<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">oldrefname<pos:position pos:line="13" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">RESOLVE_REF_READING<pos:position pos:line="13" pos:column="68"/></name></expr></argument>,
				    <argument><expr><name pos:line="14" pos:column="37">orig_sha1<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="48">&amp;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="49">flag<pos:position pos:line="14" pos:column="53"/></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">flag<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">&amp;<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="20">REF_ISSYMREF<pos:position pos:line="15" pos:column="32"/></name></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><call><name pos:line="16" pos:column="24">error<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><literal type="string" pos:line="16" pos:column="30">"refname %s is a symbolic ref, renaming it is not supported"<pos:position pos:line="16" pos:column="90"/></literal></expr></argument>,
			<argument><expr><name pos:line="17" pos:column="25">oldrefname<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></return></block></then></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">symref<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><call><name pos:line="19" pos:column="24">error<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><literal type="string" pos:line="19" pos:column="30">"refname %s not found"<pos:position pos:line="19" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="54">oldrefname<pos:position pos:line="19" pos:column="64"/></name></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="66"/></return></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">rename_ref_available<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><name pos:line="21" pos:column="35">oldrefname<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">newrefname<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="59"/></condition><then pos:line="21" pos:column="59">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><literal type="number" pos:line="22" pos:column="24">1<pos:position pos:line="22" pos:column="25"/></literal></expr>;<pos:position pos:line="22" pos:column="26"/></return></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">log<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">&amp;&amp;<pos:position pos:line="24" pos:column="27"/></operator> <call><name pos:line="24" pos:column="20">rename<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><call><name pos:line="24" pos:column="27">git_path<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><literal type="string" pos:line="24" pos:column="36">"logs/%s"<pos:position pos:line="24" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="47">oldrefname<pos:position pos:line="24" pos:column="57"/></name></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="60">git_path<pos:position pos:line="24" pos:column="68"/></name><argument_list pos:line="24" pos:column="68">(<argument><expr><name pos:line="24" pos:column="69">TMP_RENAMED_LOG<pos:position pos:line="24" pos:column="84"/></name></expr></argument>)<pos:position pos:line="24" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="87"/></condition><then pos:line="24" pos:column="87">
		<block type="pseudo"><return pos:line="25" pos:column="17">return <expr><call><name pos:line="25" pos:column="24">error<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><literal type="string" pos:line="25" pos:column="30">"unable to move logfile logs/%s to "<pos:position pos:line="25" pos:column="66"/></literal><name pos:line="25" pos:column="66">TMP_RENAMED_LOG<pos:position pos:line="25" pos:column="81"/></name><literal type="string" pos:line="25" pos:column="81">": %s"<pos:position pos:line="25" pos:column="87"/></literal></expr></argument>,
			<argument><expr><name pos:line="26" pos:column="25">oldrefname<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="37">strerror<pos:position pos:line="26" pos:column="45"/></name><argument_list pos:line="26" pos:column="45">(<argument><expr><name pos:line="26" pos:column="46">errno<pos:position pos:line="26" pos:column="51"/></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="54"/></return></block></then></if>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">delete_ref<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">oldrefname<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="36">orig_sha1<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">REF_NODEREF<pos:position pos:line="28" pos:column="58"/></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="60"/></condition><then pos:line="28" pos:column="60"> <block pos:line="28" pos:column="61">{
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">error<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><literal type="string" pos:line="29" pos:column="23">"unable to delete old %s"<pos:position pos:line="29" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="50">oldrefname<pos:position pos:line="29" pos:column="60"/></name></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
		<goto pos:line="30" pos:column="17">goto <name pos:line="30" pos:column="22">rollback<pos:position pos:line="30" pos:column="30"/></name>;<pos:position pos:line="30" pos:column="31"/></goto>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><call><name pos:line="33" pos:column="14">read_ref_full<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">newrefname<pos:position pos:line="33" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="40">RESOLVE_REF_READING<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="61">sha1<pos:position pos:line="33" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="67">NULL<pos:position pos:line="33" pos:column="71"/></name></expr></argument>)<pos:position pos:line="33" pos:column="72"/></argument_list></call> <operator pos:line="33" pos:column="73">&amp;&amp;<pos:position pos:line="33" pos:column="83"/></operator>
	    <call><name pos:line="34" pos:column="13">delete_ref<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">newrefname<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="36">sha1<pos:position pos:line="34" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="42">REF_NODEREF<pos:position pos:line="34" pos:column="53"/></name></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="55"/></condition><then pos:line="34" pos:column="55"> <block pos:line="34" pos:column="56">{
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">errno<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">==<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="28">EISDIR<pos:position pos:line="35" pos:column="34"/></name></expr>)<pos:position pos:line="35" pos:column="35"/></condition><then pos:line="35" pos:column="35"> <block pos:line="35" pos:column="36">{
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><call><name pos:line="36" pos:column="29">remove_empty_directories<pos:position pos:line="36" pos:column="53"/></name><argument_list pos:line="36" pos:column="53">(<argument><expr><call><name pos:line="36" pos:column="54">git_path<pos:position pos:line="36" pos:column="62"/></name><argument_list pos:line="36" pos:column="62">(<argument><expr><literal type="string" pos:line="36" pos:column="63">"%s"<pos:position pos:line="36" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="69">newrefname<pos:position pos:line="36" pos:column="79"/></name></expr></argument>)<pos:position pos:line="36" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="82"/></condition><then pos:line="36" pos:column="82"> <block pos:line="36" pos:column="83">{
				<expr_stmt><expr><call><name pos:line="37" pos:column="33">error<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><literal type="string" pos:line="37" pos:column="39">"Directory not empty: %s"<pos:position pos:line="37" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="66">newrefname<pos:position pos:line="37" pos:column="76"/></name></expr></argument>)<pos:position pos:line="37" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="78"/></expr_stmt>
				<goto pos:line="38" pos:column="33">goto <name pos:line="38" pos:column="38">rollback<pos:position pos:line="38" pos:column="46"/></name>;<pos:position pos:line="38" pos:column="47"/></goto>
			}<pos:position pos:line="39" pos:column="26"/></block></then></if>
		}<pos:position pos:line="40" pos:column="18"/></block></then> <else pos:line="40" pos:column="19">else <block pos:line="40" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">error<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><literal type="string" pos:line="41" pos:column="31">"unable to delete existing %s"<pos:position pos:line="41" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="63">newrefname<pos:position pos:line="41" pos:column="73"/></name></expr></argument>)<pos:position pos:line="41" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="75"/></expr_stmt>
			<goto pos:line="42" pos:column="25">goto <name pos:line="42" pos:column="30">rollback<pos:position pos:line="42" pos:column="38"/></name>;<pos:position pos:line="42" pos:column="39"/></goto>
		}<pos:position pos:line="43" pos:column="18"/></block></else></if>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">log<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">&amp;&amp;<pos:position pos:line="46" pos:column="27"/></operator> <call><name pos:line="46" pos:column="20">rename_tmp_log<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><name pos:line="46" pos:column="35">newrefname<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="47"/></condition><then pos:line="46" pos:column="47">
		<block type="pseudo"><goto pos:line="47" pos:column="17">goto <name pos:line="47" pos:column="22">rollback<pos:position pos:line="47" pos:column="30"/></name>;<pos:position pos:line="47" pos:column="31"/></goto></block></then></if>

	<expr_stmt><expr><name pos:line="49" pos:column="9">logmoved<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">=<pos:position pos:line="49" pos:column="19"/></operator> <name pos:line="49" pos:column="20">log<pos:position pos:line="49" pos:column="23"/></name></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>

	<expr_stmt><expr><name pos:line="51" pos:column="9">lock<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <call><name pos:line="51" pos:column="16">lock_ref_sha1_basic<pos:position pos:line="51" pos:column="35"/></name><argument_list pos:line="51" pos:column="35">(<argument><expr><name pos:line="51" pos:column="36">newrefname<pos:position pos:line="51" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="48">NULL<pos:position pos:line="51" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="54">NULL<pos:position pos:line="51" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="60">0<pos:position pos:line="51" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="63">NULL<pos:position pos:line="51" pos:column="67"/></name></expr></argument>)<pos:position pos:line="51" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="69"/></expr_stmt>
	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><operator pos:line="52" pos:column="13">!<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">lock<pos:position pos:line="52" pos:column="18"/></name></expr>)<pos:position pos:line="52" pos:column="19"/></condition><then pos:line="52" pos:column="19"> <block pos:line="52" pos:column="20">{
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">error<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><literal type="string" pos:line="53" pos:column="23">"unable to lock %s for update"<pos:position pos:line="53" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="55">newrefname<pos:position pos:line="53" pos:column="65"/></name></expr></argument>)<pos:position pos:line="53" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="67"/></expr_stmt>
		<goto pos:line="54" pos:column="17">goto <name pos:line="54" pos:column="22">rollback<pos:position pos:line="54" pos:column="30"/></name>;<pos:position pos:line="54" pos:column="31"/></goto>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">hashcpy<pos:position pos:line="56" pos:column="16"/></name><argument_list pos:line="56" pos:column="16">(<argument><expr><name><name pos:line="56" pos:column="17">lock<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">-&gt;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="23">old_sha1<pos:position pos:line="56" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="33">orig_sha1<pos:position pos:line="56" pos:column="42"/></name></expr></argument>)<pos:position pos:line="56" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="44"/></expr_stmt>
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><call><name pos:line="57" pos:column="13">write_ref_sha1<pos:position pos:line="57" pos:column="27"/></name><argument_list pos:line="57" pos:column="27">(<argument><expr><name pos:line="57" pos:column="28">lock<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="34">orig_sha1<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="45">logmsg<pos:position pos:line="57" pos:column="51"/></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="53"/></condition><then pos:line="57" pos:column="53"> <block pos:line="57" pos:column="54">{
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">error<pos:position pos:line="58" pos:column="22"/></name><argument_list pos:line="58" pos:column="22">(<argument><expr><literal type="string" pos:line="58" pos:column="23">"unable to write current sha1 into %s"<pos:position pos:line="58" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="63">newrefname<pos:position pos:line="58" pos:column="73"/></name></expr></argument>)<pos:position pos:line="58" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="75"/></expr_stmt>
		<goto pos:line="59" pos:column="17">goto <name pos:line="59" pos:column="22">rollback<pos:position pos:line="59" pos:column="30"/></name>;<pos:position pos:line="59" pos:column="31"/></goto>
	}<pos:position pos:line="60" pos:column="10"/></block></then></if>

	<return pos:line="62" pos:column="9">return <expr><literal type="number" pos:line="62" pos:column="16">0<pos:position pos:line="62" pos:column="17"/></literal></expr>;<pos:position pos:line="62" pos:column="18"/></return>

 <label><name pos:line="64" pos:column="2">rollback<pos:position pos:line="64" pos:column="10"/></name>:<pos:position pos:line="64" pos:column="11"/></label>
	<expr_stmt><expr><name pos:line="65" pos:column="9">lock<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">=<pos:position pos:line="65" pos:column="15"/></operator> <call><name pos:line="65" pos:column="16">lock_ref_sha1_basic<pos:position pos:line="65" pos:column="35"/></name><argument_list pos:line="65" pos:column="35">(<argument><expr><name pos:line="65" pos:column="36">oldrefname<pos:position pos:line="65" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="48">NULL<pos:position pos:line="65" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="54">NULL<pos:position pos:line="65" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="60">0<pos:position pos:line="65" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="63">NULL<pos:position pos:line="65" pos:column="67"/></name></expr></argument>)<pos:position pos:line="65" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="69"/></expr_stmt>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><operator pos:line="66" pos:column="13">!<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="14">lock<pos:position pos:line="66" pos:column="18"/></name></expr>)<pos:position pos:line="66" pos:column="19"/></condition><then pos:line="66" pos:column="19"> <block pos:line="66" pos:column="20">{
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">error<pos:position pos:line="67" pos:column="22"/></name><argument_list pos:line="67" pos:column="22">(<argument><expr><literal type="string" pos:line="67" pos:column="23">"unable to lock %s for rollback"<pos:position pos:line="67" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="57">oldrefname<pos:position pos:line="67" pos:column="67"/></name></expr></argument>)<pos:position pos:line="67" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="69"/></expr_stmt>
		<goto pos:line="68" pos:column="17">goto <name pos:line="68" pos:column="22">rollbacklog<pos:position pos:line="68" pos:column="33"/></name>;<pos:position pos:line="68" pos:column="34"/></goto>
	}<pos:position pos:line="69" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="71" pos:column="9">flag<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">=<pos:position pos:line="71" pos:column="15"/></operator> <name pos:line="71" pos:column="16">log_all_ref_updates<pos:position pos:line="71" pos:column="35"/></name></expr>;<pos:position pos:line="71" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="72" pos:column="9">log_all_ref_updates<pos:position pos:line="72" pos:column="28"/></name> <operator pos:line="72" pos:column="29">=<pos:position pos:line="72" pos:column="30"/></operator> <literal type="number" pos:line="72" pos:column="31">0<pos:position pos:line="72" pos:column="32"/></literal></expr>;<pos:position pos:line="72" pos:column="33"/></expr_stmt>
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><call><name pos:line="73" pos:column="13">write_ref_sha1<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><name pos:line="73" pos:column="28">lock<pos:position pos:line="73" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="34">orig_sha1<pos:position pos:line="73" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="45">NULL<pos:position pos:line="73" pos:column="49"/></name></expr></argument>)<pos:position pos:line="73" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="51"/></condition><then pos:line="73" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="17">error<pos:position pos:line="74" pos:column="22"/></name><argument_list pos:line="74" pos:column="22">(<argument><expr><literal type="string" pos:line="74" pos:column="23">"unable to write current sha1 into %s"<pos:position pos:line="74" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="63">oldrefname<pos:position pos:line="74" pos:column="73"/></name></expr></argument>)<pos:position pos:line="74" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="75"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="75" pos:column="9">log_all_ref_updates<pos:position pos:line="75" pos:column="28"/></name> <operator pos:line="75" pos:column="29">=<pos:position pos:line="75" pos:column="30"/></operator> <name pos:line="75" pos:column="31">flag<pos:position pos:line="75" pos:column="35"/></name></expr>;<pos:position pos:line="75" pos:column="36"/></expr_stmt>

 <label><name pos:line="77" pos:column="2">rollbacklog<pos:position pos:line="77" pos:column="13"/></name>:<pos:position pos:line="77" pos:column="14"/></label>
	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name pos:line="78" pos:column="13">logmoved<pos:position pos:line="78" pos:column="21"/></name> <operator pos:line="78" pos:column="22">&amp;&amp;<pos:position pos:line="78" pos:column="32"/></operator> <call><name pos:line="78" pos:column="25">rename<pos:position pos:line="78" pos:column="31"/></name><argument_list pos:line="78" pos:column="31">(<argument><expr><call><name pos:line="78" pos:column="32">git_path<pos:position pos:line="78" pos:column="40"/></name><argument_list pos:line="78" pos:column="40">(<argument><expr><literal type="string" pos:line="78" pos:column="41">"logs/%s"<pos:position pos:line="78" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="52">newrefname<pos:position pos:line="78" pos:column="62"/></name></expr></argument>)<pos:position pos:line="78" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="78" pos:column="65">git_path<pos:position pos:line="78" pos:column="73"/></name><argument_list pos:line="78" pos:column="73">(<argument><expr><literal type="string" pos:line="78" pos:column="74">"logs/%s"<pos:position pos:line="78" pos:column="83"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="85">oldrefname<pos:position pos:line="78" pos:column="95"/></name></expr></argument>)<pos:position pos:line="78" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="97"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="98"/></condition><then pos:line="78" pos:column="98">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="17">error<pos:position pos:line="79" pos:column="22"/></name><argument_list pos:line="79" pos:column="22">(<argument><expr><literal type="string" pos:line="79" pos:column="23">"unable to restore logfile %s from %s: %s"<pos:position pos:line="79" pos:column="65"/></literal></expr></argument>,
			<argument><expr><name pos:line="80" pos:column="25">oldrefname<pos:position pos:line="80" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="37">newrefname<pos:position pos:line="80" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="80" pos:column="49">strerror<pos:position pos:line="80" pos:column="57"/></name><argument_list pos:line="80" pos:column="57">(<argument><expr><name pos:line="80" pos:column="58">errno<pos:position pos:line="80" pos:column="63"/></name></expr></argument>)<pos:position pos:line="80" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="66"/></expr_stmt></block></then></if>
	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><operator pos:line="81" pos:column="13">!<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">logmoved<pos:position pos:line="81" pos:column="22"/></name> <operator pos:line="81" pos:column="23">&amp;&amp;<pos:position pos:line="81" pos:column="33"/></operator> <name pos:line="81" pos:column="26">log<pos:position pos:line="81" pos:column="29"/></name> <operator pos:line="81" pos:column="30">&amp;&amp;<pos:position pos:line="81" pos:column="40"/></operator>
	    <call><name pos:line="82" pos:column="13">rename<pos:position pos:line="82" pos:column="19"/></name><argument_list pos:line="82" pos:column="19">(<argument><expr><call><name pos:line="82" pos:column="20">git_path<pos:position pos:line="82" pos:column="28"/></name><argument_list pos:line="82" pos:column="28">(<argument><expr><name pos:line="82" pos:column="29">TMP_RENAMED_LOG<pos:position pos:line="82" pos:column="44"/></name></expr></argument>)<pos:position pos:line="82" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="82" pos:column="47">git_path<pos:position pos:line="82" pos:column="55"/></name><argument_list pos:line="82" pos:column="55">(<argument><expr><literal type="string" pos:line="82" pos:column="56">"logs/%s"<pos:position pos:line="82" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="67">oldrefname<pos:position pos:line="82" pos:column="77"/></name></expr></argument>)<pos:position pos:line="82" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="80"/></condition><then pos:line="82" pos:column="80">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="17">error<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">(<argument><expr><literal type="string" pos:line="83" pos:column="23">"unable to restore logfile %s from "<pos:position pos:line="83" pos:column="59"/></literal><name pos:line="83" pos:column="59">TMP_RENAMED_LOG<pos:position pos:line="83" pos:column="74"/></name><literal type="string" pos:line="83" pos:column="74">": %s"<pos:position pos:line="83" pos:column="80"/></literal></expr></argument>,
			<argument><expr><name pos:line="84" pos:column="25">oldrefname<pos:position pos:line="84" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="84" pos:column="37">strerror<pos:position pos:line="84" pos:column="45"/></name><argument_list pos:line="84" pos:column="45">(<argument><expr><name pos:line="84" pos:column="46">errno<pos:position pos:line="84" pos:column="51"/></name></expr></argument>)<pos:position pos:line="84" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="54"/></expr_stmt></block></then></if>

	<return pos:line="86" pos:column="9">return <expr><literal type="number" pos:line="86" pos:column="16">1<pos:position pos:line="86" pos:column="17"/></literal></expr>;<pos:position pos:line="86" pos:column="18"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

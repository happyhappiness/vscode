<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6823_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">NOINLINE<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">InitPool<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">nedpool<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">p<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">capacity<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">threads<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list> <name pos:line="1" pos:column="72">THROWSPEC<pos:position pos:line="1" pos:column="81"/></name>
<block pos:line="2" pos:column="1">{	<comment type="block" pos:line="2" pos:column="9">/* threads is -1 for system pool */</comment>
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">ensure_initialization<pos:position pos:line="3" pos:column="30"/></name><argument_list pos:line="3" pos:column="30">()<pos:position pos:line="3" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">ACQUIRE_MALLOC_GLOBAL_LOCK<pos:position pos:line="4" pos:column="35"/></name><argument_list pos:line="4" pos:column="35">()<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="38"/></expr_stmt>
	<if pos:line="5" pos:column="9">if<condition pos:line="5" pos:column="11">(<expr><name><name pos:line="5" pos:column="12">p<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">threads<pos:position pos:line="5" pos:column="22"/></name></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23"> <block type="pseudo"><goto pos:line="5" pos:column="24">goto <name pos:line="5" pos:column="29">done<pos:position pos:line="5" pos:column="33"/></name>;<pos:position pos:line="5" pos:column="34"/></goto></block></then></if>
	<if pos:line="6" pos:column="9">if<condition pos:line="6" pos:column="11">(<expr><call><name pos:line="6" pos:column="12">INITIAL_LOCK<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><operator pos:line="6" pos:column="25">&amp;<pos:position pos:line="6" pos:column="30"/></operator><name><name pos:line="6" pos:column="26">p<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">mutex<pos:position pos:line="6" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="36"/></condition><then pos:line="6" pos:column="36"> <block type="pseudo"><goto pos:line="6" pos:column="37">goto <name pos:line="6" pos:column="42">err<pos:position pos:line="6" pos:column="45"/></name>;<pos:position pos:line="6" pos:column="46"/></goto></block></then></if>
	<if pos:line="7" pos:column="9">if<condition pos:line="7" pos:column="11">(<expr><call><name pos:line="7" pos:column="12">TLSALLOC<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><operator pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></operator><name><name pos:line="7" pos:column="22">p<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">mycache<pos:position pos:line="7" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34"> <block type="pseudo"><goto pos:line="7" pos:column="35">goto <name pos:line="7" pos:column="40">err<pos:position pos:line="7" pos:column="43"/></name>;<pos:position pos:line="7" pos:column="44"/></goto></block></then></if>
	<if pos:line="8" pos:column="9">if<condition pos:line="8" pos:column="11">(<expr><operator pos:line="8" pos:column="12">!<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name><name pos:line="8" pos:column="14">p<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">m<pos:position pos:line="8" pos:column="18"/></name><index pos:line="8" pos:column="18">[<expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr>]<pos:position pos:line="8" pos:column="21"/></index></name><operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator><operator pos:line="8" pos:column="22">(<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">mstate<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">)<pos:position pos:line="8" pos:column="30"/></operator> <call><name pos:line="8" pos:column="31">create_mspace<pos:position pos:line="8" pos:column="44"/></name><argument_list pos:line="8" pos:column="44">(<argument><expr><name pos:line="8" pos:column="45">capacity<pos:position pos:line="8" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="55">1<pos:position pos:line="8" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call><operator pos:line="8" pos:column="57">)<pos:position pos:line="8" pos:column="58"/></operator></expr>)<pos:position pos:line="8" pos:column="59"/></condition><then pos:line="8" pos:column="59"> <block type="pseudo"><goto pos:line="8" pos:column="60">goto <name pos:line="8" pos:column="65">err<pos:position pos:line="8" pos:column="68"/></name>;<pos:position pos:line="8" pos:column="69"/></goto></block></then></if>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">p<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">m<pos:position pos:line="9" pos:column="13"/></name><index pos:line="9" pos:column="13">[<expr><literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>]<pos:position pos:line="9" pos:column="16"/></index></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">extp<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">p<pos:position pos:line="9" pos:column="24"/></name></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">p<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">threads<pos:position pos:line="10" pos:column="19"/></name></name><operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator><ternary><condition><expr><operator pos:line="10" pos:column="20">(<pos:position pos:line="10" pos:column="21"/></operator><name><name pos:line="10" pos:column="21">threads<pos:position pos:line="10" pos:column="28"/></name><argument_list type="generic" pos:line="10" pos:column="28">&lt;<argument><expr><literal type="number" pos:line="10" pos:column="29">1<pos:position pos:line="10" pos:column="30"/></literal> <operator pos:line="10" pos:column="31">||<pos:position pos:line="10" pos:column="33"/></operator> <name pos:line="10" pos:column="34">threads<pos:position pos:line="10" pos:column="41"/></name></expr></argument>&gt;<pos:position pos:line="10" pos:column="45"/></argument_list></name><name pos:line="10" pos:column="42">MAXTHREADSINPOOL<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">)<pos:position pos:line="10" pos:column="59"/></operator></expr> ?<pos:position pos:line="10" pos:column="61"/></condition><then pos:line="10" pos:column="61"> <expr><name pos:line="10" pos:column="62">MAXTHREADSINPOOL<pos:position pos:line="10" pos:column="78"/></name></expr> <pos:position pos:line="10" pos:column="79"/></then><else pos:line="10" pos:column="79">: <expr><name pos:line="10" pos:column="81">threads<pos:position pos:line="10" pos:column="88"/></name></expr></else></ternary></expr>;<pos:position pos:line="10" pos:column="89"/></expr_stmt>
<label><name pos:line="11" pos:column="1">done<pos:position pos:line="11" pos:column="5"/></name>:<pos:position pos:line="11" pos:column="6"/></label>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">RELEASE_MALLOC_GLOBAL_LOCK<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">()<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
	<return pos:line="13" pos:column="9">return <expr><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return>
<label><name pos:line="14" pos:column="1">err<pos:position pos:line="14" pos:column="4"/></name>:<pos:position pos:line="14" pos:column="5"/></label>
	<if pos:line="15" pos:column="9">if<condition pos:line="15" pos:column="11">(<expr><name pos:line="15" pos:column="12">threads<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">&lt;<pos:position pos:line="15" pos:column="23"/></operator><literal type="number" pos:line="15" pos:column="20">0<pos:position pos:line="15" pos:column="21"/></literal></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">abort<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">()<pos:position pos:line="16" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt></block></then></if>			<comment type="block" pos:line="16" pos:column="49">/* If you can't allocate for system pool, we're screwed */</comment>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">DestroyCaches<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">p<pos:position pos:line="17" pos:column="24"/></name></expr></argument>)<pos:position pos:line="17" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
	<if pos:line="18" pos:column="9">if<condition pos:line="18" pos:column="11">(<expr><name><name pos:line="18" pos:column="12">p<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">m<pos:position pos:line="18" pos:column="16"/></name><index pos:line="18" pos:column="16">[<expr><literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>]<pos:position pos:line="18" pos:column="19"/></index></name></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20">
	<block pos:line="19" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">destroy_mspace<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name><name pos:line="20" pos:column="32">p<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">m<pos:position pos:line="20" pos:column="36"/></name><index pos:line="20" pos:column="36">[<expr><literal type="number" pos:line="20" pos:column="37">0<pos:position pos:line="20" pos:column="38"/></literal></expr>]<pos:position pos:line="20" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">p<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">m<pos:position pos:line="21" pos:column="21"/></name><index pos:line="21" pos:column="21">[<expr><literal type="number" pos:line="21" pos:column="22">0<pos:position pos:line="21" pos:column="23"/></literal></expr>]<pos:position pos:line="21" pos:column="24"/></index></name><operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator><literal type="number" pos:line="21" pos:column="25">0<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
	<if pos:line="23" pos:column="9">if<condition pos:line="23" pos:column="11">(<expr><name><name pos:line="23" pos:column="12">p<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">mycache<pos:position pos:line="23" pos:column="22"/></name></name></expr>)<pos:position pos:line="23" pos:column="23"/></condition><then pos:line="23" pos:column="23">
	<block pos:line="24" pos:column="9">{
		<if pos:line="25" pos:column="17">if<condition pos:line="25" pos:column="19">(<expr><call><name pos:line="25" pos:column="20">TLSFREE<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name><name pos:line="25" pos:column="28">p<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">mycache<pos:position pos:line="25" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="40"/></condition><then pos:line="25" pos:column="40"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="41">abort<pos:position pos:line="25" pos:column="46"/></name><argument_list pos:line="25" pos:column="46">()<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">p<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">mycache<pos:position pos:line="26" pos:column="27"/></name></name><operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator><literal type="number" pos:line="26" pos:column="28">0<pos:position pos:line="26" pos:column="29"/></literal></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">RELEASE_MALLOC_GLOBAL_LOCK<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">()<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
	<return pos:line="29" pos:column="9">return <expr><literal type="number" pos:line="29" pos:column="16">0<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3326_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">ref_store<pos:position pos:line="1" pos:column="24"/></name></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">lookup_submodule_ref_store<pos:position pos:line="1" pos:column="52"/></name><parameter_list pos:line="1" pos:column="52">(<parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">submodule<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">submodule_hash_entry<pos:position pos:line="3" pos:column="36"/></name></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">entry<pos:position pos:line="3" pos:column="43"/></name></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name><name pos:line="5" pos:column="14">submodule_ref_stores<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">.<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="35">tablesize<pos:position pos:line="5" pos:column="44"/></name></name></expr>)<pos:position pos:line="5" pos:column="45"/></condition><then pos:line="5" pos:column="45">
		<comment type="block" pos:line="6" pos:column="17">/* It's initialized on demand in register_ref_store(). */</comment>
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">entry<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name pos:line="9" pos:column="17">hashmap_get_from_hash<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">(<argument><expr><operator pos:line="9" pos:column="39">&amp;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="40">submodule_ref_stores<pos:position pos:line="9" pos:column="60"/></name></expr></argument>,
				      <argument><expr><call><name pos:line="10" pos:column="39">strhash<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><name pos:line="10" pos:column="47">submodule<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="59">submodule<pos:position pos:line="10" pos:column="68"/></name></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="70"/></expr_stmt>
	<return pos:line="11" pos:column="9">return <expr><ternary><condition><expr><name pos:line="11" pos:column="16">entry<pos:position pos:line="11" pos:column="21"/></name></expr> ?<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <expr><name><name pos:line="11" pos:column="24">entry<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">-&gt;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="31">refs<pos:position pos:line="11" pos:column="35"/></name></name></expr> <pos:position pos:line="11" pos:column="36"/></then><else pos:line="11" pos:column="36">: <expr><name pos:line="11" pos:column="38">NULL<pos:position pos:line="11" pos:column="42"/></name></expr></else></ternary></expr>;<pos:position pos:line="11" pos:column="43"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1442_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fsck_ident<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">ident<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">object<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">obj<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">fsck_error<pos:position pos:line="1" pos:column="73"/></name></type> <name pos:line="1" pos:column="74">error_func<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">end<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></operator><operator pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">ident<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">==<pos:position pos:line="5" pos:column="23"/></operator> <literal type="char" pos:line="5" pos:column="24">'&lt;'<pos:position pos:line="5" pos:column="30"/></literal></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><call><name pos:line="6" pos:column="24">error_func<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">obj<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="40">FSCK_ERROR<pos:position pos:line="6" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="52">"invalid author/committer line - missing space before email"<pos:position pos:line="6" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="114"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">ident<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">+=<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">strcspn<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><operator pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">ident<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="35">"&lt;&gt;\n"<pos:position pos:line="7" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></operator><operator pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">ident<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">==<pos:position pos:line="8" pos:column="23"/></operator> <literal type="char" pos:line="8" pos:column="24">'&gt;'<pos:position pos:line="8" pos:column="30"/></literal></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><call><name pos:line="9" pos:column="24">error_func<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">obj<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">FSCK_ERROR<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="52">"invalid author/committer line - bad name"<pos:position pos:line="9" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="96"/></return></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></operator><operator pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">ident<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">!=<pos:position pos:line="10" pos:column="23"/></operator> <literal type="char" pos:line="10" pos:column="24">'&lt;'<pos:position pos:line="10" pos:column="30"/></literal></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><call><name pos:line="11" pos:column="24">error_func<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">obj<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">FSCK_ERROR<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="52">"invalid author/committer line - missing email"<pos:position pos:line="11" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="101"/></return></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><operator pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">ident<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">)<pos:position pos:line="12" pos:column="21"/></operator><index pos:line="12" pos:column="21">[<expr><operator pos:line="12" pos:column="22">-<pos:position pos:line="12" pos:column="23"/></operator><literal type="number" pos:line="12" pos:column="23">1<pos:position pos:line="12" pos:column="24"/></literal></expr>]<pos:position pos:line="12" pos:column="25"/></index> <operator pos:line="12" pos:column="26">!=<pos:position pos:line="12" pos:column="28"/></operator> <literal type="char" pos:line="12" pos:column="29">' '<pos:position pos:line="12" pos:column="32"/></literal></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><call><name pos:line="13" pos:column="24">error_func<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">obj<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">FSCK_ERROR<pos:position pos:line="13" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="52">"invalid author/committer line - missing space before email"<pos:position pos:line="13" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="114"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><operator pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">ident<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">)<pos:position pos:line="14" pos:column="17"/></operator><operator pos:line="14" pos:column="17">++<pos:position pos:line="14" pos:column="19"/></operator></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">ident<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">+=<pos:position pos:line="15" pos:column="18"/></operator> <call><name pos:line="15" pos:column="19">strcspn<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><operator pos:line="15" pos:column="27">*<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">ident<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="35">"&lt;&gt;\n"<pos:position pos:line="15" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">*<pos:position pos:line="16" pos:column="14"/></operator><operator pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">ident<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">!=<pos:position pos:line="16" pos:column="23"/></operator> <literal type="char" pos:line="16" pos:column="24">'&gt;'<pos:position pos:line="16" pos:column="30"/></literal></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><call><name pos:line="17" pos:column="24">error_func<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">obj<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">FSCK_ERROR<pos:position pos:line="17" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="52">"invalid author/committer line - bad email"<pos:position pos:line="17" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="97"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><operator pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">ident<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">)<pos:position pos:line="18" pos:column="17"/></operator><operator pos:line="18" pos:column="17">++<pos:position pos:line="18" pos:column="19"/></operator></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">*<pos:position pos:line="19" pos:column="14"/></operator><operator pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">ident<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">!=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="char" pos:line="19" pos:column="24">' '<pos:position pos:line="19" pos:column="27"/></literal></expr>)<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28">
		<block type="pseudo"><return pos:line="20" pos:column="17">return <expr><call><name pos:line="20" pos:column="24">error_func<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><name pos:line="20" pos:column="35">obj<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">FSCK_ERROR<pos:position pos:line="20" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="52">"invalid author/committer line - missing space before date"<pos:position pos:line="20" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="113"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><operator pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="11">ident<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">)<pos:position pos:line="21" pos:column="17"/></operator><operator pos:line="21" pos:column="17">++<pos:position pos:line="21" pos:column="19"/></operator></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">*<pos:position pos:line="22" pos:column="14"/></operator><operator pos:line="22" pos:column="14">*<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">ident<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">==<pos:position pos:line="22" pos:column="23"/></operator> <literal type="char" pos:line="22" pos:column="24">'0'<pos:position pos:line="22" pos:column="27"/></literal> <operator pos:line="22" pos:column="28">&amp;&amp;<pos:position pos:line="22" pos:column="38"/></operator> <operator pos:line="22" pos:column="31">(<pos:position pos:line="22" pos:column="32"/></operator><operator pos:line="22" pos:column="32">*<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">ident<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">)<pos:position pos:line="22" pos:column="39"/></operator><index pos:line="22" pos:column="39">[<expr><literal type="number" pos:line="22" pos:column="40">1<pos:position pos:line="22" pos:column="41"/></literal></expr>]<pos:position pos:line="22" pos:column="42"/></index> <operator pos:line="22" pos:column="43">!=<pos:position pos:line="22" pos:column="45"/></operator> <literal type="char" pos:line="22" pos:column="46">' '<pos:position pos:line="22" pos:column="49"/></literal></expr>)<pos:position pos:line="22" pos:column="50"/></condition><then pos:line="22" pos:column="50">
		<block type="pseudo"><return pos:line="23" pos:column="17">return <expr><call><name pos:line="23" pos:column="24">error_func<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">obj<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">FSCK_ERROR<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="52">"invalid author/committer line - zero-padded date"<pos:position pos:line="23" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="104"/></return></block></then></if>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">date_overflows<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><call><name pos:line="24" pos:column="28">strtoul<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><operator pos:line="24" pos:column="36">*<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="37">ident<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="44">&amp;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="45">end<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="50">10<pos:position pos:line="24" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="55"/></condition><then pos:line="24" pos:column="55">
		<block type="pseudo"><return pos:line="25" pos:column="17">return <expr><call><name pos:line="25" pos:column="24">error_func<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">obj<pos:position pos:line="25" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="40">FSCK_ERROR<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="52">"invalid author/committer line - date causes integer overflow"<pos:position pos:line="25" pos:column="114"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="116"/></return></block></then></if>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">end<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">==<pos:position pos:line="26" pos:column="19"/></operator> <operator pos:line="26" pos:column="20">*<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">ident<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">||<pos:position pos:line="26" pos:column="29"/></operator> <operator pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="31">end<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">!=<pos:position pos:line="26" pos:column="37"/></operator> <literal type="char" pos:line="26" pos:column="38">' '<pos:position pos:line="26" pos:column="41"/></literal></expr>)<pos:position pos:line="26" pos:column="42"/></condition><then pos:line="26" pos:column="42">
		<block type="pseudo"><return pos:line="27" pos:column="17">return <expr><call><name pos:line="27" pos:column="24">error_func<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">obj<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="40">FSCK_ERROR<pos:position pos:line="27" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="52">"invalid author/committer line - bad date"<pos:position pos:line="27" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="96"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="28" pos:column="9">*<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">ident<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <name pos:line="28" pos:column="18">end<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">+<pos:position pos:line="28" pos:column="23"/></operator> <literal type="number" pos:line="28" pos:column="24">1<pos:position pos:line="28" pos:column="25"/></literal></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">(<pos:position pos:line="29" pos:column="14"/></operator><operator pos:line="29" pos:column="14">*<pos:position pos:line="29" pos:column="15"/></operator><operator pos:line="29" pos:column="15">*<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">ident<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">!=<pos:position pos:line="29" pos:column="24"/></operator> <literal type="char" pos:line="29" pos:column="25">'+'<pos:position pos:line="29" pos:column="28"/></literal> <operator pos:line="29" pos:column="29">&amp;&amp;<pos:position pos:line="29" pos:column="39"/></operator> <operator pos:line="29" pos:column="32">*<pos:position pos:line="29" pos:column="33"/></operator><operator pos:line="29" pos:column="33">*<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="34">ident<pos:position pos:line="29" pos:column="39"/></name> <operator pos:line="29" pos:column="40">!=<pos:position pos:line="29" pos:column="42"/></operator> <literal type="char" pos:line="29" pos:column="43">'-'<pos:position pos:line="29" pos:column="46"/></literal><operator pos:line="29" pos:column="46">)<pos:position pos:line="29" pos:column="47"/></operator> <operator pos:line="29" pos:column="48">||<pos:position pos:line="29" pos:column="50"/></operator>
	    <operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><call><name pos:line="30" pos:column="14">isdigit<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><operator pos:line="30" pos:column="22">(<pos:position pos:line="30" pos:column="23"/></operator><operator pos:line="30" pos:column="23">*<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="24">ident<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">)<pos:position pos:line="30" pos:column="30"/></operator><index pos:line="30" pos:column="30">[<expr><literal type="number" pos:line="30" pos:column="31">1<pos:position pos:line="30" pos:column="32"/></literal></expr>]<pos:position pos:line="30" pos:column="33"/></index></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call> <operator pos:line="30" pos:column="35">||<pos:position pos:line="30" pos:column="37"/></operator>
	    <operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><call><name pos:line="31" pos:column="14">isdigit<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><operator pos:line="31" pos:column="22">(<pos:position pos:line="31" pos:column="23"/></operator><operator pos:line="31" pos:column="23">*<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">ident<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">)<pos:position pos:line="31" pos:column="30"/></operator><index pos:line="31" pos:column="30">[<expr><literal type="number" pos:line="31" pos:column="31">2<pos:position pos:line="31" pos:column="32"/></literal></expr>]<pos:position pos:line="31" pos:column="33"/></index></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call> <operator pos:line="31" pos:column="35">||<pos:position pos:line="31" pos:column="37"/></operator>
	    <operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">isdigit<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><operator pos:line="32" pos:column="22">(<pos:position pos:line="32" pos:column="23"/></operator><operator pos:line="32" pos:column="23">*<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">ident<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">)<pos:position pos:line="32" pos:column="30"/></operator><index pos:line="32" pos:column="30">[<expr><literal type="number" pos:line="32" pos:column="31">3<pos:position pos:line="32" pos:column="32"/></literal></expr>]<pos:position pos:line="32" pos:column="33"/></index></expr></argument>)<pos:position pos:line="32" pos:column="34"/></argument_list></call> <operator pos:line="32" pos:column="35">||<pos:position pos:line="32" pos:column="37"/></operator>
	    <operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><call><name pos:line="33" pos:column="14">isdigit<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><operator pos:line="33" pos:column="22">(<pos:position pos:line="33" pos:column="23"/></operator><operator pos:line="33" pos:column="23">*<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="24">ident<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">)<pos:position pos:line="33" pos:column="30"/></operator><index pos:line="33" pos:column="30">[<expr><literal type="number" pos:line="33" pos:column="31">4<pos:position pos:line="33" pos:column="32"/></literal></expr>]<pos:position pos:line="33" pos:column="33"/></index></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call> <operator pos:line="33" pos:column="35">||<pos:position pos:line="33" pos:column="37"/></operator>
	    <operator pos:line="34" pos:column="13">(<pos:position pos:line="34" pos:column="14"/></operator><operator pos:line="34" pos:column="14">(<pos:position pos:line="34" pos:column="15"/></operator><operator pos:line="34" pos:column="15">*<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="16">ident<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">)<pos:position pos:line="34" pos:column="22"/></operator><index pos:line="34" pos:column="22">[<expr><literal type="number" pos:line="34" pos:column="23">5<pos:position pos:line="34" pos:column="24"/></literal></expr>]<pos:position pos:line="34" pos:column="25"/></index> <operator pos:line="34" pos:column="26">!=<pos:position pos:line="34" pos:column="28"/></operator> <literal type="char" pos:line="34" pos:column="29">'\n'<pos:position pos:line="34" pos:column="33"/></literal><operator pos:line="34" pos:column="33">)<pos:position pos:line="34" pos:column="34"/></operator></expr>)<pos:position pos:line="34" pos:column="35"/></condition><then pos:line="34" pos:column="35">
		<block type="pseudo"><return pos:line="35" pos:column="17">return <expr><call><name pos:line="35" pos:column="24">error_func<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">obj<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="40">FSCK_ERROR<pos:position pos:line="35" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="52">"invalid author/committer line - bad time zone"<pos:position pos:line="35" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="101"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="36" pos:column="9">(<pos:position pos:line="36" pos:column="10"/></operator><operator pos:line="36" pos:column="10">*<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">ident<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">)<pos:position pos:line="36" pos:column="17"/></operator> <operator pos:line="36" pos:column="18">+=<pos:position pos:line="36" pos:column="20"/></operator> <literal type="number" pos:line="36" pos:column="21">6<pos:position pos:line="36" pos:column="22"/></literal></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
	<return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

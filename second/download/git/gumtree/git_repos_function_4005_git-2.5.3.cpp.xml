<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4005_git-2.5.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ewah_or<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(
	<parameter><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">ewah_bitmap<pos:position pos:line="2" pos:column="27"/></name></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">ewah_i<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">ewah_bitmap<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">ewah_j<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ewah_bitmap<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">out<pos:position pos:line="4" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="33"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">rlw_iterator<pos:position pos:line="6" pos:column="28"/></name></name></type> <name pos:line="6" pos:column="29">rlw_i<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">rlw_iterator<pos:position pos:line="7" pos:column="28"/></name></name></type> <name pos:line="7" pos:column="29">rlw_j<pos:position pos:line="7" pos:column="34"/></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">literals<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">rlwit_init<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><operator pos:line="10" pos:column="20">&amp;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="21">rlw_i<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">ewah_i<pos:position pos:line="10" pos:column="34"/></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">rlwit_init<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><operator pos:line="11" pos:column="20">&amp;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="21">rlw_j<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">ewah_j<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>

	<while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><call><name pos:line="13" pos:column="16">rlwit_word_size<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><operator pos:line="13" pos:column="32">&amp;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="33">rlw_i<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call> <operator pos:line="13" pos:column="40">&gt;<pos:position pos:line="13" pos:column="44"/></operator> <literal type="number" pos:line="13" pos:column="42">0<pos:position pos:line="13" pos:column="43"/></literal> <operator pos:line="13" pos:column="44">&amp;&amp;<pos:position pos:line="13" pos:column="54"/></operator> <call><name pos:line="13" pos:column="47">rlwit_word_size<pos:position pos:line="13" pos:column="62"/></name><argument_list pos:line="13" pos:column="62">(<argument><expr><operator pos:line="13" pos:column="63">&amp;<pos:position pos:line="13" pos:column="68"/></operator><name pos:line="13" pos:column="64">rlw_j<pos:position pos:line="13" pos:column="69"/></name></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call> <operator pos:line="13" pos:column="71">&gt;<pos:position pos:line="13" pos:column="75"/></operator> <literal type="number" pos:line="13" pos:column="73">0<pos:position pos:line="13" pos:column="74"/></literal></expr>)<pos:position pos:line="13" pos:column="75"/></condition> <block pos:line="13" pos:column="76">{
		<while pos:line="14" pos:column="17">while <condition pos:line="14" pos:column="23">(<expr><name><name pos:line="14" pos:column="24">rlw_i<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">.<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">rlw<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">.<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="34">running_len<pos:position pos:line="14" pos:column="45"/></name></name> <operator pos:line="14" pos:column="46">&gt;<pos:position pos:line="14" pos:column="50"/></operator> <literal type="number" pos:line="14" pos:column="48">0<pos:position pos:line="14" pos:column="49"/></literal> <operator pos:line="14" pos:column="50">||<pos:position pos:line="14" pos:column="52"/></operator> <name><name pos:line="14" pos:column="53">rlw_j<pos:position pos:line="14" pos:column="58"/></name><operator pos:line="14" pos:column="58">.<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="59">rlw<pos:position pos:line="14" pos:column="62"/></name><operator pos:line="14" pos:column="62">.<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="63">running_len<pos:position pos:line="14" pos:column="74"/></name></name> <operator pos:line="14" pos:column="75">&gt;<pos:position pos:line="14" pos:column="79"/></operator> <literal type="number" pos:line="14" pos:column="77">0<pos:position pos:line="14" pos:column="78"/></literal></expr>)<pos:position pos:line="14" pos:column="79"/></condition> <block pos:line="14" pos:column="80">{
			<decl_stmt><decl><type><name><name pos:line="15" pos:column="25">struct<pos:position pos:line="15" pos:column="31"/></name> <name pos:line="15" pos:column="32">rlw_iterator<pos:position pos:line="15" pos:column="44"/></name></name> <modifier pos:line="15" pos:column="45">*<pos:position pos:line="15" pos:column="46"/></modifier></type><name pos:line="15" pos:column="46">prey<pos:position pos:line="15" pos:column="50"/></name></decl>, <modifier pos:line="15" pos:column="52">*<pos:position pos:line="15" pos:column="53"/></modifier><decl><type ref="prev"/><name pos:line="15" pos:column="53">predator<pos:position pos:line="15" pos:column="61"/></name></decl>;<pos:position pos:line="15" pos:column="62"/></decl_stmt>

			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><name><name pos:line="17" pos:column="29">rlw_i<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">.<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="35">rlw<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">.<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">running_len<pos:position pos:line="17" pos:column="50"/></name></name> <operator pos:line="17" pos:column="51">&lt;<pos:position pos:line="17" pos:column="55"/></operator> <name><name pos:line="17" pos:column="53">rlw_j<pos:position pos:line="17" pos:column="58"/></name><operator pos:line="17" pos:column="58">.<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="59">rlw<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">.<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="63">running_len<pos:position pos:line="17" pos:column="74"/></name></name></expr>)<pos:position pos:line="17" pos:column="75"/></condition><then pos:line="17" pos:column="75"> <block pos:line="17" pos:column="76">{
				<expr_stmt><expr><name pos:line="18" pos:column="33">prey<pos:position pos:line="18" pos:column="37"/></name> <operator pos:line="18" pos:column="38">=<pos:position pos:line="18" pos:column="39"/></operator> <operator pos:line="18" pos:column="40">&amp;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="41">rlw_i<pos:position pos:line="18" pos:column="46"/></name></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="19" pos:column="33">predator<pos:position pos:line="19" pos:column="41"/></name> <operator pos:line="19" pos:column="42">=<pos:position pos:line="19" pos:column="43"/></operator> <operator pos:line="19" pos:column="44">&amp;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="45">rlw_j<pos:position pos:line="19" pos:column="50"/></name></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="20" pos:column="26"/></block></then> <else pos:line="20" pos:column="27">else <block pos:line="20" pos:column="32">{
				<expr_stmt><expr><name pos:line="21" pos:column="33">prey<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">=<pos:position pos:line="21" pos:column="39"/></operator> <operator pos:line="21" pos:column="40">&amp;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="41">rlw_j<pos:position pos:line="21" pos:column="46"/></name></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="22" pos:column="33">predator<pos:position pos:line="22" pos:column="41"/></name> <operator pos:line="22" pos:column="42">=<pos:position pos:line="22" pos:column="43"/></operator> <operator pos:line="22" pos:column="44">&amp;<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="45">rlw_i<pos:position pos:line="22" pos:column="50"/></name></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="23" pos:column="26"/></block></else></if>

			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><name><name pos:line="25" pos:column="29">predator<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">rlw<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">.<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">running_bit<pos:position pos:line="25" pos:column="54"/></name></name></expr>)<pos:position pos:line="25" pos:column="55"/></condition><then pos:line="25" pos:column="55"> <block pos:line="25" pos:column="56">{
				<expr_stmt><expr><call><name pos:line="26" pos:column="33">ewah_add_empty_words<pos:position pos:line="26" pos:column="53"/></name><argument_list pos:line="26" pos:column="53">(<argument><expr><name pos:line="26" pos:column="54">out<pos:position pos:line="26" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="59">0<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="27" pos:column="41">predator<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">-&gt;<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="51">rlw<pos:position pos:line="27" pos:column="54"/></name><operator pos:line="27" pos:column="54">.<pos:position pos:line="27" pos:column="55"/></operator><name pos:line="27" pos:column="55">running_len<pos:position pos:line="27" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="28" pos:column="33">rlwit_discard_first_words<pos:position pos:line="28" pos:column="58"/></name><argument_list pos:line="28" pos:column="58">(<argument><expr><name pos:line="28" pos:column="59">prey<pos:position pos:line="28" pos:column="63"/></name></expr></argument>,
					<argument><expr><name><name pos:line="29" pos:column="41">predator<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">-&gt;<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="51">rlw<pos:position pos:line="29" pos:column="54"/></name><operator pos:line="29" pos:column="54">.<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="55">running_len<pos:position pos:line="29" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="68"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="30" pos:column="33">rlwit_discard_first_words<pos:position pos:line="30" pos:column="58"/></name><argument_list pos:line="30" pos:column="58">(<argument><expr><name pos:line="30" pos:column="59">predator<pos:position pos:line="30" pos:column="67"/></name></expr></argument>,
					<argument><expr><name><name pos:line="31" pos:column="41">predator<pos:position pos:line="31" pos:column="49"/></name><operator pos:line="31" pos:column="49">-&gt;<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="51">rlw<pos:position pos:line="31" pos:column="54"/></name><operator pos:line="31" pos:column="54">.<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="55">running_len<pos:position pos:line="31" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="68"/></expr_stmt>
			}<pos:position pos:line="32" pos:column="26"/></block></then> <else pos:line="32" pos:column="27">else <block pos:line="32" pos:column="32">{
				<decl_stmt><decl><type><name pos:line="33" pos:column="33">size_t<pos:position pos:line="33" pos:column="39"/></name></type> <name pos:line="33" pos:column="40">index<pos:position pos:line="33" pos:column="45"/></name> <init pos:line="33" pos:column="46">= <expr><call><name pos:line="33" pos:column="48">rlwit_discharge<pos:position pos:line="33" pos:column="63"/></name><argument_list pos:line="33" pos:column="63">(<argument><expr><name pos:line="33" pos:column="64">prey<pos:position pos:line="33" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="70">out<pos:position pos:line="33" pos:column="73"/></name></expr></argument>,
					<argument><expr><name><name pos:line="34" pos:column="41">predator<pos:position pos:line="34" pos:column="49"/></name><operator pos:line="34" pos:column="49">-&gt;<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="51">rlw<pos:position pos:line="34" pos:column="54"/></name><operator pos:line="34" pos:column="54">.<pos:position pos:line="34" pos:column="55"/></operator><name pos:line="34" pos:column="55">running_len<pos:position pos:line="34" pos:column="66"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="68">0<pos:position pos:line="34" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="71"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="35" pos:column="33">ewah_add_empty_words<pos:position pos:line="35" pos:column="53"/></name><argument_list pos:line="35" pos:column="53">(<argument><expr><name pos:line="35" pos:column="54">out<pos:position pos:line="35" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="59">0<pos:position pos:line="35" pos:column="60"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="36" pos:column="41">predator<pos:position pos:line="36" pos:column="49"/></name><operator pos:line="36" pos:column="49">-&gt;<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="51">rlw<pos:position pos:line="36" pos:column="54"/></name><operator pos:line="36" pos:column="54">.<pos:position pos:line="36" pos:column="55"/></operator><name pos:line="36" pos:column="55">running_len<pos:position pos:line="36" pos:column="66"/></name></name> <operator pos:line="36" pos:column="67">-<pos:position pos:line="36" pos:column="68"/></operator> <name pos:line="36" pos:column="69">index<pos:position pos:line="36" pos:column="74"/></name></expr></argument>)<pos:position pos:line="36" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="76"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="37" pos:column="33">rlwit_discard_first_words<pos:position pos:line="37" pos:column="58"/></name><argument_list pos:line="37" pos:column="58">(<argument><expr><name pos:line="37" pos:column="59">predator<pos:position pos:line="37" pos:column="67"/></name></expr></argument>,
					<argument><expr><name><name pos:line="38" pos:column="41">predator<pos:position pos:line="38" pos:column="49"/></name><operator pos:line="38" pos:column="49">-&gt;<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="51">rlw<pos:position pos:line="38" pos:column="54"/></name><operator pos:line="38" pos:column="54">.<pos:position pos:line="38" pos:column="55"/></operator><name pos:line="38" pos:column="55">running_len<pos:position pos:line="38" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="68"/></expr_stmt>
			}<pos:position pos:line="39" pos:column="26"/></block></else></if>
		}<pos:position pos:line="40" pos:column="18"/></block></while>

		<expr_stmt><expr><name pos:line="42" pos:column="17">literals<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <call><name pos:line="42" pos:column="28">min_size<pos:position pos:line="42" pos:column="36"/></name><argument_list pos:line="42" pos:column="36">(
			<argument><expr><name><name pos:line="43" pos:column="25">rlw_i<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">.<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="31">rlw<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">.<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="35">literal_words<pos:position pos:line="43" pos:column="48"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="44" pos:column="25">rlw_j<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">.<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="31">rlw<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">.<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="35">literal_words<pos:position pos:line="44" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt>

		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">literals<pos:position pos:line="46" pos:column="29"/></name></expr>)<pos:position pos:line="46" pos:column="30"/></condition><then pos:line="46" pos:column="30"> <block pos:line="46" pos:column="31">{
			<decl_stmt><decl><type><name pos:line="47" pos:column="25">size_t<pos:position pos:line="47" pos:column="31"/></name></type> <name pos:line="47" pos:column="32">k<pos:position pos:line="47" pos:column="33"/></name></decl>;<pos:position pos:line="47" pos:column="34"/></decl_stmt>

			<for pos:line="49" pos:column="25">for <control pos:line="49" pos:column="29">(<init><expr><name pos:line="49" pos:column="30">k<pos:position pos:line="49" pos:column="31"/></name> <operator pos:line="49" pos:column="32">=<pos:position pos:line="49" pos:column="33"/></operator> <literal type="number" pos:line="49" pos:column="34">0<pos:position pos:line="49" pos:column="35"/></literal></expr>;<pos:position pos:line="49" pos:column="36"/></init> <condition><expr><name pos:line="49" pos:column="37">k<pos:position pos:line="49" pos:column="38"/></name> <operator pos:line="49" pos:column="39">&lt;<pos:position pos:line="49" pos:column="43"/></operator> <name pos:line="49" pos:column="41">literals<pos:position pos:line="49" pos:column="49"/></name></expr>;<pos:position pos:line="49" pos:column="50"/></condition> <incr><expr><operator pos:line="49" pos:column="51">++<pos:position pos:line="49" pos:column="53"/></operator><name pos:line="49" pos:column="53">k<pos:position pos:line="49" pos:column="54"/></name></expr></incr>)<pos:position pos:line="49" pos:column="55"/></control> <block pos:line="49" pos:column="56">{
				<expr_stmt><expr><call><name pos:line="50" pos:column="33">ewah_add<pos:position pos:line="50" pos:column="41"/></name><argument_list pos:line="50" pos:column="41">(<argument><expr><name pos:line="50" pos:column="42">out<pos:position pos:line="50" pos:column="45"/></name></expr></argument>,
					<argument><expr><name><name pos:line="51" pos:column="41">rlw_i<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">.<pos:position pos:line="51" pos:column="47"/></operator><name pos:line="51" pos:column="47">buffer<pos:position pos:line="51" pos:column="53"/></name><index pos:line="51" pos:column="53">[<expr><name><name pos:line="51" pos:column="54">rlw_i<pos:position pos:line="51" pos:column="59"/></name><operator pos:line="51" pos:column="59">.<pos:position pos:line="51" pos:column="60"/></operator><name pos:line="51" pos:column="60">literal_word_start<pos:position pos:line="51" pos:column="78"/></name></name> <operator pos:line="51" pos:column="79">+<pos:position pos:line="51" pos:column="80"/></operator> <name pos:line="51" pos:column="81">k<pos:position pos:line="51" pos:column="82"/></name></expr>]<pos:position pos:line="51" pos:column="83"/></index></name> <operator pos:line="51" pos:column="84">|<pos:position pos:line="51" pos:column="85"/></operator>
					<name><name pos:line="52" pos:column="41">rlw_j<pos:position pos:line="52" pos:column="46"/></name><operator pos:line="52" pos:column="46">.<pos:position pos:line="52" pos:column="47"/></operator><name pos:line="52" pos:column="47">buffer<pos:position pos:line="52" pos:column="53"/></name><index pos:line="52" pos:column="53">[<expr><name><name pos:line="52" pos:column="54">rlw_j<pos:position pos:line="52" pos:column="59"/></name><operator pos:line="52" pos:column="59">.<pos:position pos:line="52" pos:column="60"/></operator><name pos:line="52" pos:column="60">literal_word_start<pos:position pos:line="52" pos:column="78"/></name></name> <operator pos:line="52" pos:column="79">+<pos:position pos:line="52" pos:column="80"/></operator> <name pos:line="52" pos:column="81">k<pos:position pos:line="52" pos:column="82"/></name></expr>]<pos:position pos:line="52" pos:column="83"/></index></name></expr></argument>
				)<pos:position pos:line="53" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt>
			}<pos:position pos:line="54" pos:column="26"/></block></for>

			<expr_stmt><expr><call><name pos:line="56" pos:column="25">rlwit_discard_first_words<pos:position pos:line="56" pos:column="50"/></name><argument_list pos:line="56" pos:column="50">(<argument><expr><operator pos:line="56" pos:column="51">&amp;<pos:position pos:line="56" pos:column="56"/></operator><name pos:line="56" pos:column="52">rlw_i<pos:position pos:line="56" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="59">literals<pos:position pos:line="56" pos:column="67"/></name></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">rlwit_discard_first_words<pos:position pos:line="57" pos:column="50"/></name><argument_list pos:line="57" pos:column="50">(<argument><expr><operator pos:line="57" pos:column="51">&amp;<pos:position pos:line="57" pos:column="56"/></operator><name pos:line="57" pos:column="52">rlw_j<pos:position pos:line="57" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="59">literals<pos:position pos:line="57" pos:column="67"/></name></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if>
	}<pos:position pos:line="59" pos:column="10"/></block></while>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><call><name pos:line="61" pos:column="13">rlwit_word_size<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><operator pos:line="61" pos:column="29">&amp;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="30">rlw_i<pos:position pos:line="61" pos:column="35"/></name></expr></argument>)<pos:position pos:line="61" pos:column="36"/></argument_list></call> <operator pos:line="61" pos:column="37">&gt;<pos:position pos:line="61" pos:column="41"/></operator> <literal type="number" pos:line="61" pos:column="39">0<pos:position pos:line="61" pos:column="40"/></literal></expr>)<pos:position pos:line="61" pos:column="41"/></condition><then pos:line="61" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="17">rlwit_discharge<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><operator pos:line="62" pos:column="33">&amp;<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="34">rlw_i<pos:position pos:line="62" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="41">out<pos:position pos:line="62" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="46">~<pos:position pos:line="62" pos:column="47"/></operator><literal type="number" pos:line="62" pos:column="47">0<pos:position pos:line="62" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="50">0<pos:position pos:line="62" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="53"/></expr_stmt></block></then>
	<else pos:line="63" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="17">rlwit_discharge<pos:position pos:line="64" pos:column="32"/></name><argument_list pos:line="64" pos:column="32">(<argument><expr><operator pos:line="64" pos:column="33">&amp;<pos:position pos:line="64" pos:column="38"/></operator><name pos:line="64" pos:column="34">rlw_j<pos:position pos:line="64" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="41">out<pos:position pos:line="64" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="46">~<pos:position pos:line="64" pos:column="47"/></operator><literal type="number" pos:line="64" pos:column="47">0<pos:position pos:line="64" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="50">0<pos:position pos:line="64" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="53"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name><name pos:line="66" pos:column="9">out<pos:position pos:line="66" pos:column="12"/></name><operator pos:line="66" pos:column="12">-&gt;<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="14">bit_size<pos:position pos:line="66" pos:column="22"/></name></name> <operator pos:line="66" pos:column="23">=<pos:position pos:line="66" pos:column="24"/></operator> <call><name pos:line="66" pos:column="25">max_size<pos:position pos:line="66" pos:column="33"/></name><argument_list pos:line="66" pos:column="33">(<argument><expr><name><name pos:line="66" pos:column="34">ewah_i<pos:position pos:line="66" pos:column="40"/></name><operator pos:line="66" pos:column="40">-&gt;<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="42">bit_size<pos:position pos:line="66" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="52">ewah_j<pos:position pos:line="66" pos:column="58"/></name><operator pos:line="66" pos:column="58">-&gt;<pos:position pos:line="66" pos:column="63"/></operator><name pos:line="66" pos:column="60">bit_size<pos:position pos:line="66" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="70"/></expr_stmt>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

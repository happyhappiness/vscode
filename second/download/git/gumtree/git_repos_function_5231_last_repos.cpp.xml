<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5231_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_shortlog<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">argc<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">argv<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">prefix<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">shortlog<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">log<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><block pos:line="3" pos:column="31">{ <expr><name pos:line="3" pos:column="33">STRING_LIST_INIT_NODUP<pos:position pos:line="3" pos:column="55"/></name></expr> }<pos:position pos:line="3" pos:column="57"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">rev_info<pos:position pos:line="4" pos:column="24"/></name></name></type> <name pos:line="4" pos:column="25">rev<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">nongit<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><operator pos:line="5" pos:column="22">!<pos:position pos:line="5" pos:column="23"/></operator><name><name pos:line="5" pos:column="23">startup_info<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">have_repository<pos:position pos:line="5" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name><name pos:line="7" pos:column="15">struct<pos:position pos:line="7" pos:column="21"/></name> <name pos:line="7" pos:column="22">option<pos:position pos:line="7" pos:column="28"/></name></name></type> <name><name pos:line="7" pos:column="29">options<pos:position pos:line="7" pos:column="36"/></name><index pos:line="7" pos:column="36">[]<pos:position pos:line="7" pos:column="38"/></index></name> <init pos:line="7" pos:column="39">= <expr><block pos:line="7" pos:column="41">{
		<expr><call><name pos:line="8" pos:column="17">OPT_BOOL<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="char" pos:line="8" pos:column="26">'c'<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="31">"committer"<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="44">&amp;<pos:position pos:line="8" pos:column="49"/></operator><name><name pos:line="8" pos:column="45">log<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">.<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="49">committer<pos:position pos:line="8" pos:column="58"/></name></name></expr></argument>,
			 <argument><expr><call><name pos:line="9" pos:column="26">N_<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><literal type="string" pos:line="9" pos:column="29">"Group by committer rather than author"<pos:position pos:line="9" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>,
		<expr><call><name pos:line="10" pos:column="17">OPT_BOOL<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><literal type="char" pos:line="10" pos:column="26">'n'<pos:position pos:line="10" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="31">"numbered"<pos:position pos:line="10" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="43">&amp;<pos:position pos:line="10" pos:column="48"/></operator><name><name pos:line="10" pos:column="44">log<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">.<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="48">sort_by_number<pos:position pos:line="10" pos:column="62"/></name></name></expr></argument>,
			 <argument><expr><call><name pos:line="11" pos:column="26">N_<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><literal type="string" pos:line="11" pos:column="29">"sort output according to the number of commits per author"<pos:position pos:line="11" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="90"/></argument_list></call></expr>,
		<expr><call><name pos:line="12" pos:column="17">OPT_BOOL<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><literal type="char" pos:line="12" pos:column="26">'s'<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="31">"summary"<pos:position pos:line="12" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="42">&amp;<pos:position pos:line="12" pos:column="47"/></operator><name><name pos:line="12" pos:column="43">log<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">.<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="47">summary<pos:position pos:line="12" pos:column="54"/></name></name></expr></argument>,
			 <argument><expr><call><name pos:line="13" pos:column="26">N_<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="string" pos:line="13" pos:column="29">"Suppress commit descriptions, only provides commit count"<pos:position pos:line="13" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="89"/></argument_list></call></expr>,
		<expr><call><name pos:line="14" pos:column="17">OPT_BOOL<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><literal type="char" pos:line="14" pos:column="26">'e'<pos:position pos:line="14" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="31">"email"<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="40">&amp;<pos:position pos:line="14" pos:column="45"/></operator><name><name pos:line="14" pos:column="41">log<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">.<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="45">email<pos:position pos:line="14" pos:column="50"/></name></name></expr></argument>,
			 <argument><expr><call><name pos:line="15" pos:column="26">N_<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><literal type="string" pos:line="15" pos:column="29">"Show the email address of each author"<pos:position pos:line="15" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr>,
		<expr><block pos:line="16" pos:column="17">{ <expr><name pos:line="16" pos:column="19">OPTION_CALLBACK<pos:position pos:line="16" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="16" pos:column="36">'w'<pos:position pos:line="16" pos:column="39"/></literal></expr>, <expr><name pos:line="16" pos:column="41">NULL<pos:position pos:line="16" pos:column="45"/></name></expr>, <expr><operator pos:line="16" pos:column="47">&amp;<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="48">log<pos:position pos:line="16" pos:column="51"/></name></expr>, <expr><call><name pos:line="16" pos:column="53">N_<pos:position pos:line="16" pos:column="55"/></name><argument_list pos:line="16" pos:column="55">(<argument><expr><literal type="string" pos:line="16" pos:column="56">"w[,i1[,i2]]"<pos:position pos:line="16" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>,
			<expr><call><name pos:line="17" pos:column="25">N_<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><literal type="string" pos:line="17" pos:column="28">"Linewrap output"<pos:position pos:line="17" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>, <expr><name pos:line="17" pos:column="48">PARSE_OPT_OPTARG<pos:position pos:line="17" pos:column="64"/></name></expr>, <expr><operator pos:line="17" pos:column="66">&amp;<pos:position pos:line="17" pos:column="71"/></operator><name pos:line="17" pos:column="67">parse_wrap_args<pos:position pos:line="17" pos:column="82"/></name></expr> }<pos:position pos:line="17" pos:column="84"/></block></expr>,
		<expr><call><name pos:line="18" pos:column="17">OPT_END<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">()<pos:position pos:line="18" pos:column="26"/></argument_list></call></expr>,
	}<pos:position pos:line="19" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="19" pos:column="11"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="21" pos:column="9">struct<pos:position pos:line="21" pos:column="15"/></name> <name pos:line="21" pos:column="16">parse_opt_ctx_t<pos:position pos:line="21" pos:column="31"/></name></name></type> <name pos:line="21" pos:column="32">ctx<pos:position pos:line="21" pos:column="35"/></name></decl>;<pos:position pos:line="21" pos:column="36"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">git_config<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">git_default_config<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">NULL<pos:position pos:line="23" pos:column="44"/></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">shortlog_init<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><operator pos:line="24" pos:column="23">&amp;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="24">log<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">init_revisions<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><operator pos:line="25" pos:column="24">&amp;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="25">rev<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="30">prefix<pos:position pos:line="25" pos:column="36"/></name></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">parse_options_start<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><operator pos:line="26" pos:column="29">&amp;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="30">ctx<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="35">argc<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">argv<pos:position pos:line="26" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="47">prefix<pos:position pos:line="26" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="55">options<pos:position pos:line="26" pos:column="62"/></name></expr></argument>,
			    <argument><expr><name pos:line="27" pos:column="29">PARSE_OPT_KEEP_DASHDASH<pos:position pos:line="27" pos:column="52"/></name> <operator pos:line="27" pos:column="53">|<pos:position pos:line="27" pos:column="54"/></operator> <name pos:line="27" pos:column="55">PARSE_OPT_KEEP_ARGV0<pos:position pos:line="27" pos:column="75"/></name></expr></argument>)<pos:position pos:line="27" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="77"/></expr_stmt>

	<for pos:line="29" pos:column="9">for <control pos:line="29" pos:column="13">(<init pos:line="29" pos:column="14">;<pos:position pos:line="29" pos:column="15"/></init><condition pos:line="29" pos:column="15">;<pos:position pos:line="29" pos:column="16"/></condition><incr/>)<pos:position pos:line="29" pos:column="17"/></control> <block pos:line="29" pos:column="18">{
		<switch pos:line="30" pos:column="17">switch <condition pos:line="30" pos:column="24">(<expr><call><name pos:line="30" pos:column="25">parse_options_step<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><operator pos:line="30" pos:column="44">&amp;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="45">ctx<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="50">options<pos:position pos:line="30" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="59">shortlog_usage<pos:position pos:line="30" pos:column="73"/></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="75"/></condition> <block pos:line="30" pos:column="76">{
		<case pos:line="31" pos:column="17">case <expr><name pos:line="31" pos:column="22">PARSE_OPT_HELP<pos:position pos:line="31" pos:column="36"/></name></expr>:<pos:position pos:line="31" pos:column="37"/></case>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">exit<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><literal type="number" pos:line="32" pos:column="30">129<pos:position pos:line="32" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt>
		<case pos:line="33" pos:column="17">case <expr><name pos:line="33" pos:column="22">PARSE_OPT_DONE<pos:position pos:line="33" pos:column="36"/></name></expr>:<pos:position pos:line="33" pos:column="37"/></case>
			<goto pos:line="34" pos:column="25">goto <name pos:line="34" pos:column="30">parse_done<pos:position pos:line="34" pos:column="40"/></name>;<pos:position pos:line="34" pos:column="41"/></goto>
		}<pos:position pos:line="35" pos:column="18"/></block></switch>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">parse_revision_opt<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><operator pos:line="36" pos:column="36">&amp;<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="37">rev<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="42">&amp;<pos:position pos:line="36" pos:column="47"/></operator><name pos:line="36" pos:column="43">ctx<pos:position pos:line="36" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="48">options<pos:position pos:line="36" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="57">shortlog_usage<pos:position pos:line="36" pos:column="71"/></name></expr></argument>)<pos:position pos:line="36" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="73"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></for>
<label><name pos:line="38" pos:column="1">parse_done<pos:position pos:line="38" pos:column="11"/></name>:<pos:position pos:line="38" pos:column="12"/></label>
	<expr_stmt><expr><name pos:line="39" pos:column="9">argc<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">parse_options_end<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><operator pos:line="39" pos:column="34">&amp;<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="35">ctx<pos:position pos:line="39" pos:column="38"/></name></expr></argument>)<pos:position pos:line="39" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><call><name pos:line="41" pos:column="13">setup_revisions<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">argc<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="35">argv<pos:position pos:line="41" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="41">&amp;<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="42">rev<pos:position pos:line="41" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="47">NULL<pos:position pos:line="41" pos:column="51"/></name></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call> <operator pos:line="41" pos:column="53">!=<pos:position pos:line="41" pos:column="55"/></operator> <literal type="number" pos:line="41" pos:column="56">1<pos:position pos:line="41" pos:column="57"/></literal></expr>)<pos:position pos:line="41" pos:column="58"/></condition><then pos:line="41" pos:column="58"> <block pos:line="41" pos:column="59">{
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">error<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><call><name pos:line="42" pos:column="23">_<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><literal type="string" pos:line="42" pos:column="25">"unrecognized argument: %s"<pos:position pos:line="42" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="55">argv<pos:position pos:line="42" pos:column="59"/></name><index pos:line="42" pos:column="59">[<expr><literal type="number" pos:line="42" pos:column="60">1<pos:position pos:line="42" pos:column="61"/></literal></expr>]<pos:position pos:line="42" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">usage_with_options<pos:position pos:line="43" pos:column="35"/></name><argument_list pos:line="43" pos:column="35">(<argument><expr><name pos:line="43" pos:column="36">shortlog_usage<pos:position pos:line="43" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="52">options<pos:position pos:line="43" pos:column="59"/></name></expr></argument>)<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="46" pos:column="9">log<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">.<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="13">user_format<pos:position pos:line="46" pos:column="24"/></name></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <name><name pos:line="46" pos:column="27">rev<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">.<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="31">commit_format<pos:position pos:line="46" pos:column="44"/></name></name> <operator pos:line="46" pos:column="45">==<pos:position pos:line="46" pos:column="47"/></operator> <name pos:line="46" pos:column="48">CMIT_FMT_USERFORMAT<pos:position pos:line="46" pos:column="67"/></name></expr>;<pos:position pos:line="46" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="47" pos:column="9">log<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">.<pos:position pos:line="47" pos:column="13"/></operator><name pos:line="47" pos:column="13">abbrev<pos:position pos:line="47" pos:column="19"/></name></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <name><name pos:line="47" pos:column="22">rev<pos:position pos:line="47" pos:column="25"/></name><operator pos:line="47" pos:column="25">.<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="26">abbrev<pos:position pos:line="47" pos:column="32"/></name></name></expr>;<pos:position pos:line="47" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="48" pos:column="9">log<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">.<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="13">file<pos:position pos:line="48" pos:column="17"/></name></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <name><name pos:line="48" pos:column="20">rev<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">.<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">diffopt<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">.<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="32">file<pos:position pos:line="48" pos:column="36"/></name></name></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>

	<comment type="block" pos:line="50" pos:column="9">/* assume HEAD if from a tty */</comment>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">nongit<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">&amp;&amp;<pos:position pos:line="51" pos:column="31"/></operator> <operator pos:line="51" pos:column="24">!<pos:position pos:line="51" pos:column="25"/></operator><name><name pos:line="51" pos:column="25">rev<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">.<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="29">pending<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">.<pos:position pos:line="51" pos:column="37"/></operator><name pos:line="51" pos:column="37">nr<pos:position pos:line="51" pos:column="39"/></name></name> <operator pos:line="51" pos:column="40">&amp;&amp;<pos:position pos:line="51" pos:column="50"/></operator> <call><name pos:line="51" pos:column="43">isatty<pos:position pos:line="51" pos:column="49"/></name><argument_list pos:line="51" pos:column="49">(<argument><expr><literal type="number" pos:line="51" pos:column="50">0<pos:position pos:line="51" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="53"/></condition><then pos:line="51" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="17">add_head_to_pending<pos:position pos:line="52" pos:column="36"/></name><argument_list pos:line="52" pos:column="36">(<argument><expr><operator pos:line="52" pos:column="37">&amp;<pos:position pos:line="52" pos:column="42"/></operator><name pos:line="52" pos:column="38">rev<pos:position pos:line="52" pos:column="41"/></name></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name><name pos:line="53" pos:column="13">rev<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">.<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="17">pending<pos:position pos:line="53" pos:column="24"/></name><operator pos:line="53" pos:column="24">.<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="25">nr<pos:position pos:line="53" pos:column="27"/></name></name> <operator pos:line="53" pos:column="28">==<pos:position pos:line="53" pos:column="30"/></operator> <literal type="number" pos:line="53" pos:column="31">0<pos:position pos:line="53" pos:column="32"/></literal></expr>)<pos:position pos:line="53" pos:column="33"/></condition><then pos:line="53" pos:column="33"> <block pos:line="53" pos:column="34">{
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><call><name pos:line="54" pos:column="21">isatty<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><literal type="number" pos:line="54" pos:column="28">0<pos:position pos:line="54" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="31"/></condition><then pos:line="54" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="25">fprintf<pos:position pos:line="55" pos:column="32"/></name><argument_list pos:line="55" pos:column="32">(<argument><expr><name pos:line="55" pos:column="33">stderr<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="41">_<pos:position pos:line="55" pos:column="42"/></name><argument_list pos:line="55" pos:column="42">(<argument><expr><literal type="string" pos:line="55" pos:column="43">"(reading log message from standard input)\n"<pos:position pos:line="55" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="91"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">read_from_stdin<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><operator pos:line="56" pos:column="33">&amp;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="34">log<pos:position pos:line="56" pos:column="37"/></name></expr></argument>)<pos:position pos:line="56" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="57" pos:column="10"/></block></then>
	<else pos:line="58" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="17">get_from_rev<pos:position pos:line="59" pos:column="29"/></name><argument_list pos:line="59" pos:column="29">(<argument><expr><operator pos:line="59" pos:column="30">&amp;<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="31">rev<pos:position pos:line="59" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="36">&amp;<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="37">log<pos:position pos:line="59" pos:column="40"/></name></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="61" pos:column="9">shortlog_output<pos:position pos:line="61" pos:column="24"/></name><argument_list pos:line="61" pos:column="24">(<argument><expr><operator pos:line="61" pos:column="25">&amp;<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="26">log<pos:position pos:line="61" pos:column="29"/></name></expr></argument>)<pos:position pos:line="61" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="31"/></expr_stmt>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name><name pos:line="62" pos:column="13">log<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">.<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="17">file<pos:position pos:line="62" pos:column="21"/></name></name> <operator pos:line="62" pos:column="22">!=<pos:position pos:line="62" pos:column="24"/></operator> <name pos:line="62" pos:column="25">stdout<pos:position pos:line="62" pos:column="31"/></name></expr>)<pos:position pos:line="62" pos:column="32"/></condition><then pos:line="62" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="17">fclose<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><name><name pos:line="63" pos:column="24">log<pos:position pos:line="63" pos:column="27"/></name><operator pos:line="63" pos:column="27">.<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="28">file<pos:position pos:line="63" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="34"/></expr_stmt></block></then></if>
	<return pos:line="64" pos:column="9">return <expr><literal type="number" pos:line="64" pos:column="16">0<pos:position pos:line="64" pos:column="17"/></literal></expr>;<pos:position pos:line="64" pos:column="18"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

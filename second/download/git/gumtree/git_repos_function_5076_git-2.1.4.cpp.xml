<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5076_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">pbase_tree_cache<pos:position pos:line="1" pos:column="31"/></name></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">pbase_tree_get<pos:position pos:line="1" pos:column="47"/></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">unsigned<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">sha1<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">pbase_tree_cache<pos:position pos:line="3" pos:column="32"/></name></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">ent<pos:position pos:line="3" pos:column="37"/></name></decl>, <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="40">nent<pos:position pos:line="3" pos:column="44"/></name></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">void<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">data<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">long<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">size<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">enum<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">object_type<pos:position pos:line="6" pos:column="25"/></name></name></type> <name pos:line="6" pos:column="26">type<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">neigh<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">my_ix<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><call><name pos:line="8" pos:column="21">pbase_tree_cache_ix<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">(<argument><expr><name pos:line="8" pos:column="41">sha1<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">available_ix<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><operator pos:line="9" pos:column="28">-<pos:position pos:line="9" pos:column="29"/></operator><literal type="number" pos:line="9" pos:column="29">1<pos:position pos:line="9" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* pbase-tree-cache acts as a limited hashtable.
	 * your object will be found at your index or within a few
	 * slots after that slot if it is cached.
	 */</comment>
	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">neigh<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr>;<pos:position pos:line="15" pos:column="24"/></init> <condition><expr><name pos:line="15" pos:column="25">neigh<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">&lt;<pos:position pos:line="15" pos:column="35"/></operator> <literal type="number" pos:line="15" pos:column="33">8<pos:position pos:line="15" pos:column="34"/></literal></expr>;<pos:position pos:line="15" pos:column="35"/></condition> <incr><expr><name pos:line="15" pos:column="36">neigh<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">++<pos:position pos:line="15" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="44"/></control> <block pos:line="15" pos:column="45">{
		<expr_stmt><expr><name pos:line="16" pos:column="17">ent<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <name><name pos:line="16" pos:column="23">pbase_tree_cache<pos:position pos:line="16" pos:column="39"/></name><index pos:line="16" pos:column="39">[<expr><name pos:line="16" pos:column="40">my_ix<pos:position pos:line="16" pos:column="45"/></name></expr>]<pos:position pos:line="16" pos:column="46"/></index></name></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">ent<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">&amp;&amp;<pos:position pos:line="17" pos:column="35"/></operator> <operator pos:line="17" pos:column="28">!<pos:position pos:line="17" pos:column="29"/></operator><call><name pos:line="17" pos:column="29">hashcmp<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name><name pos:line="17" pos:column="37">ent<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">-&gt;<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="42">sha1<pos:position pos:line="17" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">sha1<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="54"/></condition><then pos:line="17" pos:column="54"> <block pos:line="17" pos:column="55">{
			<expr_stmt><expr><name><name pos:line="18" pos:column="25">ent<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">ref<pos:position pos:line="18" pos:column="33"/></name></name><operator pos:line="18" pos:column="33">++<pos:position pos:line="18" pos:column="35"/></operator></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
			<return pos:line="19" pos:column="25">return <expr><name pos:line="19" pos:column="32">ent<pos:position pos:line="19" pos:column="35"/></name></expr>;<pos:position pos:line="19" pos:column="36"/></return>
		}<pos:position pos:line="20" pos:column="18"/></block></then>
		<elseif pos:line="21" pos:column="17">else <if pos:line="21" pos:column="22">if <condition pos:line="21" pos:column="25">(<expr><operator pos:line="21" pos:column="26">(<pos:position pos:line="21" pos:column="27"/></operator><operator pos:line="21" pos:column="27">(<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">available_ix<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">&lt;<pos:position pos:line="21" pos:column="45"/></operator> <literal type="number" pos:line="21" pos:column="43">0<pos:position pos:line="21" pos:column="44"/></literal><operator pos:line="21" pos:column="44">)<pos:position pos:line="21" pos:column="45"/></operator> <operator pos:line="21" pos:column="46">&amp;&amp;<pos:position pos:line="21" pos:column="56"/></operator> <operator pos:line="21" pos:column="49">(<pos:position pos:line="21" pos:column="50"/></operator><operator pos:line="21" pos:column="50">!<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="51">ent<pos:position pos:line="21" pos:column="54"/></name> <operator pos:line="21" pos:column="55">||<pos:position pos:line="21" pos:column="57"/></operator> <operator pos:line="21" pos:column="58">!<pos:position pos:line="21" pos:column="59"/></operator><name><name pos:line="21" pos:column="59">ent<pos:position pos:line="21" pos:column="62"/></name><operator pos:line="21" pos:column="62">-&gt;<pos:position pos:line="21" pos:column="67"/></operator><name pos:line="21" pos:column="64">ref<pos:position pos:line="21" pos:column="67"/></name></name><operator pos:line="21" pos:column="67">)<pos:position pos:line="21" pos:column="68"/></operator><operator pos:line="21" pos:column="68">)<pos:position pos:line="21" pos:column="69"/></operator> <operator pos:line="21" pos:column="70">||<pos:position pos:line="21" pos:column="72"/></operator>
			 <operator pos:line="22" pos:column="26">(<pos:position pos:line="22" pos:column="27"/></operator><operator pos:line="22" pos:column="27">(<pos:position pos:line="22" pos:column="28"/></operator><literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal> <operator pos:line="22" pos:column="30">&lt;=<pos:position pos:line="22" pos:column="35"/></operator> <name pos:line="22" pos:column="33">available_ix<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">)<pos:position pos:line="22" pos:column="46"/></operator> <operator pos:line="22" pos:column="47">&amp;&amp;<pos:position pos:line="22" pos:column="57"/></operator>
			  <operator pos:line="23" pos:column="27">(<pos:position pos:line="23" pos:column="28"/></operator><operator pos:line="23" pos:column="28">!<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">ent<pos:position pos:line="23" pos:column="32"/></name> <operator pos:line="23" pos:column="33">&amp;&amp;<pos:position pos:line="23" pos:column="43"/></operator> <name><name pos:line="23" pos:column="36">pbase_tree_cache<pos:position pos:line="23" pos:column="52"/></name><index pos:line="23" pos:column="52">[<expr><name pos:line="23" pos:column="53">available_ix<pos:position pos:line="23" pos:column="65"/></name></expr>]<pos:position pos:line="23" pos:column="66"/></index></name><operator pos:line="23" pos:column="66">)<pos:position pos:line="23" pos:column="67"/></operator><operator pos:line="23" pos:column="67">)<pos:position pos:line="23" pos:column="68"/></operator></expr>)<pos:position pos:line="23" pos:column="69"/></condition><then pos:line="23" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">available_ix<pos:position pos:line="24" pos:column="37"/></name> <operator pos:line="24" pos:column="38">=<pos:position pos:line="24" pos:column="39"/></operator> <name pos:line="24" pos:column="40">my_ix<pos:position pos:line="24" pos:column="45"/></name></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt></block></then></if></elseif></if>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">ent<pos:position pos:line="25" pos:column="25"/></name></expr>)<pos:position pos:line="25" pos:column="26"/></condition><then pos:line="25" pos:column="26">
			<block type="pseudo"><break pos:line="26" pos:column="25">break;<pos:position pos:line="26" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="27" pos:column="17">my_ix<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <call><name pos:line="27" pos:column="25">pbase_tree_cache_ix_incr<pos:position pos:line="27" pos:column="49"/></name><argument_list pos:line="27" pos:column="49">(<argument><expr><name pos:line="27" pos:column="50">my_ix<pos:position pos:line="27" pos:column="55"/></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></for>

	<comment type="block" pos:line="30" pos:column="9">/* Did not find one.  Either we got a bogus request or
	 * we need to read and perhaps cache.
	 */</comment>
	<expr_stmt><expr><name pos:line="33" pos:column="9">data<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">read_sha1_file<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">sha1<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="37">&amp;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="38">type<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="44">&amp;<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="45">size<pos:position pos:line="33" pos:column="49"/></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">data<pos:position pos:line="34" pos:column="18"/></name></expr>)<pos:position pos:line="34" pos:column="19"/></condition><then pos:line="34" pos:column="19">
		<block type="pseudo"><return pos:line="35" pos:column="17">return <expr><name pos:line="35" pos:column="24">NULL<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></return></block></then></if>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">type<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">!=<pos:position pos:line="36" pos:column="20"/></operator> <name pos:line="36" pos:column="21">OBJ_TREE<pos:position pos:line="36" pos:column="29"/></name></expr>)<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30"> <block pos:line="36" pos:column="31">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">free<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">data<pos:position pos:line="37" pos:column="26"/></name></expr></argument>)<pos:position pos:line="37" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
		<return pos:line="38" pos:column="17">return <expr><name pos:line="38" pos:column="24">NULL<pos:position pos:line="38" pos:column="28"/></name></expr>;<pos:position pos:line="38" pos:column="29"/></return>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="41" pos:column="9">/* We need to either cache or return a throwaway copy */</comment>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">available_ix<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">&lt;<pos:position pos:line="43" pos:column="30"/></operator> <literal type="number" pos:line="43" pos:column="28">0<pos:position pos:line="43" pos:column="29"/></literal></expr>)<pos:position pos:line="43" pos:column="30"/></condition><then pos:line="43" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="17">ent<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">NULL<pos:position pos:line="44" pos:column="27"/></name></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt></block></then>
	<else pos:line="45" pos:column="9">else <block pos:line="45" pos:column="14">{
		<expr_stmt><expr><name pos:line="46" pos:column="17">ent<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <name><name pos:line="46" pos:column="23">pbase_tree_cache<pos:position pos:line="46" pos:column="39"/></name><index pos:line="46" pos:column="39">[<expr><name pos:line="46" pos:column="40">available_ix<pos:position pos:line="46" pos:column="52"/></name></expr>]<pos:position pos:line="46" pos:column="53"/></index></name></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="47" pos:column="17">my_ix<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">=<pos:position pos:line="47" pos:column="24"/></operator> <name pos:line="47" pos:column="25">available_ix<pos:position pos:line="47" pos:column="37"/></name></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></else></if>

	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">!<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">ent<pos:position pos:line="50" pos:column="17"/></name></expr>)<pos:position pos:line="50" pos:column="18"/></condition><then pos:line="50" pos:column="18"> <block pos:line="50" pos:column="19">{
		<expr_stmt><expr><name pos:line="51" pos:column="17">nent<pos:position pos:line="51" pos:column="21"/></name> <operator pos:line="51" pos:column="22">=<pos:position pos:line="51" pos:column="23"/></operator> <call><name pos:line="51" pos:column="24">xmalloc<pos:position pos:line="51" pos:column="31"/></name><argument_list pos:line="51" pos:column="31">(<argument><expr><sizeof pos:line="51" pos:column="32">sizeof<argument_list pos:line="51" pos:column="38">(<argument><expr><operator pos:line="51" pos:column="39">*<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="40">nent<pos:position pos:line="51" pos:column="44"/></name></expr></argument>)<pos:position pos:line="51" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="52" pos:column="17">nent<pos:position pos:line="52" pos:column="21"/></name><operator pos:line="52" pos:column="21">-&gt;<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="23">temporary<pos:position pos:line="52" pos:column="32"/></name></name> <operator pos:line="52" pos:column="33">=<pos:position pos:line="52" pos:column="34"/></operator> <operator pos:line="52" pos:column="35">(<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="36">available_ix<pos:position pos:line="52" pos:column="48"/></name> <operator pos:line="52" pos:column="49">&lt;<pos:position pos:line="52" pos:column="53"/></operator> <literal type="number" pos:line="52" pos:column="51">0<pos:position pos:line="52" pos:column="52"/></literal><operator pos:line="52" pos:column="52">)<pos:position pos:line="52" pos:column="53"/></operator></expr>;<pos:position pos:line="52" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="53" pos:column="10"/></block></then>
	<else pos:line="54" pos:column="9">else <block pos:line="54" pos:column="14">{
		<comment type="block" pos:line="55" pos:column="17">/* evict and reuse */</comment>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">free<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name><name pos:line="56" pos:column="22">ent<pos:position pos:line="56" pos:column="25"/></name><operator pos:line="56" pos:column="25">-&gt;<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="27">tree_data<pos:position pos:line="56" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="57" pos:column="17">nent<pos:position pos:line="57" pos:column="21"/></name> <operator pos:line="57" pos:column="22">=<pos:position pos:line="57" pos:column="23"/></operator> <name pos:line="57" pos:column="24">ent<pos:position pos:line="57" pos:column="27"/></name></expr>;<pos:position pos:line="57" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="58" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">hashcpy<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">(<argument><expr><name><name pos:line="59" pos:column="17">nent<pos:position pos:line="59" pos:column="21"/></name><operator pos:line="59" pos:column="21">-&gt;<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="23">sha1<pos:position pos:line="59" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="29">sha1<pos:position pos:line="59" pos:column="33"/></name></expr></argument>)<pos:position pos:line="59" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="60" pos:column="9">nent<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">-&gt;<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="15">tree_data<pos:position pos:line="60" pos:column="24"/></name></name> <operator pos:line="60" pos:column="25">=<pos:position pos:line="60" pos:column="26"/></operator> <name pos:line="60" pos:column="27">data<pos:position pos:line="60" pos:column="31"/></name></expr>;<pos:position pos:line="60" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="61" pos:column="9">nent<pos:position pos:line="61" pos:column="13"/></name><operator pos:line="61" pos:column="13">-&gt;<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="15">tree_size<pos:position pos:line="61" pos:column="24"/></name></name> <operator pos:line="61" pos:column="25">=<pos:position pos:line="61" pos:column="26"/></operator> <name pos:line="61" pos:column="27">size<pos:position pos:line="61" pos:column="31"/></name></expr>;<pos:position pos:line="61" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="62" pos:column="9">nent<pos:position pos:line="62" pos:column="13"/></name><operator pos:line="62" pos:column="13">-&gt;<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="15">ref<pos:position pos:line="62" pos:column="18"/></name></name> <operator pos:line="62" pos:column="19">=<pos:position pos:line="62" pos:column="20"/></operator> <literal type="number" pos:line="62" pos:column="21">1<pos:position pos:line="62" pos:column="22"/></literal></expr>;<pos:position pos:line="62" pos:column="23"/></expr_stmt>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><operator pos:line="63" pos:column="13">!<pos:position pos:line="63" pos:column="14"/></operator><name><name pos:line="63" pos:column="14">nent<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">-&gt;<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="20">temporary<pos:position pos:line="63" pos:column="29"/></name></name></expr>)<pos:position pos:line="63" pos:column="30"/></condition><then pos:line="63" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="64" pos:column="17">pbase_tree_cache<pos:position pos:line="64" pos:column="33"/></name><index pos:line="64" pos:column="33">[<expr><name pos:line="64" pos:column="34">my_ix<pos:position pos:line="64" pos:column="39"/></name></expr>]<pos:position pos:line="64" pos:column="40"/></index></name> <operator pos:line="64" pos:column="41">=<pos:position pos:line="64" pos:column="42"/></operator> <name pos:line="64" pos:column="43">nent<pos:position pos:line="64" pos:column="47"/></name></expr>;<pos:position pos:line="64" pos:column="48"/></expr_stmt></block></then></if>
	<return pos:line="65" pos:column="9">return <expr><name pos:line="65" pos:column="16">nent<pos:position pos:line="65" pos:column="20"/></name></expr>;<pos:position pos:line="65" pos:column="21"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3738_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">commit_name<pos:position pos:line="1" pos:column="33"/></name></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">find_commit_name<pos:position pos:line="1" pos:column="51"/></name><parameter_list pos:line="1" pos:column="51">(<parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">unsigned<pos:position pos:line="1" pos:column="66"/></name> <name pos:line="1" pos:column="67">char<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">peeled<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit_name<pos:position pos:line="3" pos:column="27"/></name></name></type> <name pos:line="3" pos:column="28">key<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">hashmap_entry_init<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument><expr><operator pos:line="4" pos:column="28">&amp;<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="29">key<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="34">hash_sha1<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><name pos:line="4" pos:column="44">peeled<pos:position pos:line="4" pos:column="50"/></name></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="53"/></expr_stmt>
	<return pos:line="5" pos:column="9">return <expr><call><name pos:line="5" pos:column="16">hashmap_get<pos:position pos:line="5" pos:column="27"/></name><argument_list pos:line="5" pos:column="27">(<argument><expr><operator pos:line="5" pos:column="28">&amp;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="29">names<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="36">&amp;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="37">key<pos:position pos:line="5" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="42">peeled<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="50"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

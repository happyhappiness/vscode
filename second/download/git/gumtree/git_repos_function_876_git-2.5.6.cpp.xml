<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_876_git-2.5.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">try_to_simplify_commit<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">rev_info<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">revs<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="59">struct<pos:position pos:line="1" pos:column="65"/></name> <name pos:line="1" pos:column="66">commit<pos:position pos:line="1" pos:column="72"/></name></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">commit<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit_list<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier><modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">pp<pos:position pos:line="3" pos:column="32"/></name></decl>, <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="35">parent<pos:position pos:line="3" pos:column="41"/></name></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">treesame_state<pos:position pos:line="4" pos:column="30"/></name></name> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type><name pos:line="4" pos:column="32">ts<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><name pos:line="4" pos:column="37">NULL<pos:position pos:line="4" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">relevant_change<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><literal type="number" pos:line="5" pos:column="31">0<pos:position pos:line="5" pos:column="32"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="34">irrelevant_change<pos:position pos:line="5" pos:column="51"/></name> <init pos:line="5" pos:column="52">= <expr><literal type="number" pos:line="5" pos:column="54">0<pos:position pos:line="5" pos:column="55"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">relevant_parents<pos:position pos:line="6" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="31">nth_parent<pos:position pos:line="6" pos:column="41"/></name></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/*
	 * If we don't do pruning, everything is interesting
	 */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="14">revs<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">prune<pos:position pos:line="11" pos:column="25"/></name></name></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26">
		<block type="pseudo"><return pos:line="12" pos:column="17">return;<pos:position pos:line="12" pos:column="24"/></return></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name><name pos:line="14" pos:column="14">commit<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">tree<pos:position pos:line="14" pos:column="26"/></name></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27">
		<block type="pseudo"><return pos:line="15" pos:column="17">return;<pos:position pos:line="15" pos:column="24"/></return></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name><name pos:line="17" pos:column="14">commit<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">parents<pos:position pos:line="17" pos:column="29"/></name></name></expr>)<pos:position pos:line="17" pos:column="30"/></condition><then pos:line="17" pos:column="30"> <block pos:line="17" pos:column="31">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">rev_same_tree_as_empty<pos:position pos:line="18" pos:column="43"/></name><argument_list pos:line="18" pos:column="43">(<argument><expr><name pos:line="18" pos:column="44">revs<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">commit<pos:position pos:line="18" pos:column="56"/></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="58"/></condition><then pos:line="18" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="25">commit<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">object<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">.<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="40">flags<pos:position pos:line="19" pos:column="45"/></name></name> <operator pos:line="19" pos:column="46">|=<pos:position pos:line="19" pos:column="48"/></operator> <name pos:line="19" pos:column="49">TREESAME<pos:position pos:line="19" pos:column="57"/></name></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt></block></then></if>
		<return pos:line="20" pos:column="17">return;<pos:position pos:line="20" pos:column="24"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="23" pos:column="9">/*
	 * Normal non-merge commit? If we don't want to make the
	 * history dense, we consider it always to be a change..
	 */</comment>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name><name pos:line="27" pos:column="14">revs<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">dense<pos:position pos:line="27" pos:column="25"/></name></name> <operator pos:line="27" pos:column="26">&amp;&amp;<pos:position pos:line="27" pos:column="36"/></operator> <operator pos:line="27" pos:column="29">!<pos:position pos:line="27" pos:column="30"/></operator><name><name pos:line="27" pos:column="30">commit<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">-&gt;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="38">parents<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">-&gt;<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="47">next<pos:position pos:line="27" pos:column="51"/></name></name></expr>)<pos:position pos:line="27" pos:column="52"/></condition><then pos:line="27" pos:column="52">
		<block type="pseudo"><return pos:line="28" pos:column="17">return;<pos:position pos:line="28" pos:column="24"/></return></block></then></if>

	<for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">pp<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <operator pos:line="30" pos:column="19">&amp;<pos:position pos:line="30" pos:column="24"/></operator><name><name pos:line="30" pos:column="20">commit<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">-&gt;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="28">parents<pos:position pos:line="30" pos:column="35"/></name></name></expr><operator pos:line="30" pos:column="35">,<pos:position pos:line="30" pos:column="36"/></operator> <expr><name pos:line="30" pos:column="37">nth_parent<pos:position pos:line="30" pos:column="47"/></name> <operator pos:line="30" pos:column="48">=<pos:position pos:line="30" pos:column="49"/></operator> <literal type="number" pos:line="30" pos:column="50">0<pos:position pos:line="30" pos:column="51"/></literal></expr><operator pos:line="30" pos:column="51">,<pos:position pos:line="30" pos:column="52"/></operator> <expr><name pos:line="30" pos:column="53">relevant_parents<pos:position pos:line="30" pos:column="69"/></name> <operator pos:line="30" pos:column="70">=<pos:position pos:line="30" pos:column="71"/></operator> <literal type="number" pos:line="30" pos:column="72">0<pos:position pos:line="30" pos:column="73"/></literal></expr>;<pos:position pos:line="30" pos:column="74"/></init>
	     <condition><expr><operator pos:line="31" pos:column="14">(<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">parent<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <operator pos:line="31" pos:column="24">*<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">pp<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">)<pos:position pos:line="31" pos:column="28"/></operator> <operator pos:line="31" pos:column="29">!=<pos:position pos:line="31" pos:column="31"/></operator> <name pos:line="31" pos:column="32">NULL<pos:position pos:line="31" pos:column="36"/></name></expr>;<pos:position pos:line="31" pos:column="37"/></condition>
	     <incr><expr><name pos:line="32" pos:column="14">pp<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <operator pos:line="32" pos:column="19">&amp;<pos:position pos:line="32" pos:column="24"/></operator><name><name pos:line="32" pos:column="20">parent<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">next<pos:position pos:line="32" pos:column="32"/></name></name></expr><operator pos:line="32" pos:column="32">,<pos:position pos:line="32" pos:column="33"/></operator> <expr><name pos:line="32" pos:column="34">nth_parent<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">++<pos:position pos:line="32" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="47"/></control> <block pos:line="32" pos:column="48">{
		<decl_stmt><decl><type><name><name pos:line="33" pos:column="17">struct<pos:position pos:line="33" pos:column="23"/></name> <name pos:line="33" pos:column="24">commit<pos:position pos:line="33" pos:column="30"/></name></name> <modifier pos:line="33" pos:column="31">*<pos:position pos:line="33" pos:column="32"/></modifier></type><name pos:line="33" pos:column="32">p<pos:position pos:line="33" pos:column="33"/></name> <init pos:line="33" pos:column="34">= <expr><name><name pos:line="33" pos:column="36">parent<pos:position pos:line="33" pos:column="42"/></name><operator pos:line="33" pos:column="42">-&gt;<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="44">item<pos:position pos:line="33" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="33" pos:column="49"/></decl_stmt>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><call><name pos:line="34" pos:column="21">relevant_commit<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><name pos:line="34" pos:column="37">p<pos:position pos:line="34" pos:column="38"/></name></expr></argument>)<pos:position pos:line="34" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="40"/></condition><then pos:line="34" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="25">relevant_parents<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">++<pos:position pos:line="35" pos:column="43"/></operator></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt></block></then></if>

		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">nth_parent<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">==<pos:position pos:line="37" pos:column="34"/></operator> <literal type="number" pos:line="37" pos:column="35">1<pos:position pos:line="37" pos:column="36"/></literal></expr>)<pos:position pos:line="37" pos:column="37"/></condition><then pos:line="37" pos:column="37"> <block pos:line="37" pos:column="38">{
			<comment type="block" pos:line="38" pos:column="25">/*
			 * This our second loop iteration - so we now know
			 * we're dealing with a merge.
			 *
			 * Do not compare with later parents when we care only about
			 * the first parent chain, in order to avoid derailing the
			 * traversal to follow a side branch that brought everything
			 * in the path we are limited to by the pathspec.
			 */</comment>
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><name><name pos:line="47" pos:column="29">revs<pos:position pos:line="47" pos:column="33"/></name><operator pos:line="47" pos:column="33">-&gt;<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="35">first_parent_only<pos:position pos:line="47" pos:column="52"/></name></name></expr>)<pos:position pos:line="47" pos:column="53"/></condition><then pos:line="47" pos:column="53">
				<block type="pseudo"><break pos:line="48" pos:column="33">break;<pos:position pos:line="48" pos:column="39"/></break></block></then></if>
			<comment type="block" pos:line="49" pos:column="25">/*
			 * If this will remain a potentially-simplifiable
			 * merge, remember per-parent treesame if needed.
			 * Initialise the array with the comparison from our
			 * first iteration.
			 */</comment>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><name><name pos:line="55" pos:column="29">revs<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">-&gt;<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="35">treesame<pos:position pos:line="55" pos:column="43"/></name><operator pos:line="55" pos:column="43">.<pos:position pos:line="55" pos:column="44"/></operator><name pos:line="55" pos:column="44">name<pos:position pos:line="55" pos:column="48"/></name></name> <operator pos:line="55" pos:column="49">&amp;&amp;<pos:position pos:line="55" pos:column="59"/></operator>
			    <operator pos:line="56" pos:column="29">!<pos:position pos:line="56" pos:column="30"/></operator><name><name pos:line="56" pos:column="30">revs<pos:position pos:line="56" pos:column="34"/></name><operator pos:line="56" pos:column="34">-&gt;<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="36">simplify_history<pos:position pos:line="56" pos:column="52"/></name></name> <operator pos:line="56" pos:column="53">&amp;&amp;<pos:position pos:line="56" pos:column="63"/></operator>
			    <operator pos:line="57" pos:column="29">!<pos:position pos:line="57" pos:column="30"/></operator><operator pos:line="57" pos:column="30">(<pos:position pos:line="57" pos:column="31"/></operator><name><name pos:line="57" pos:column="31">commit<pos:position pos:line="57" pos:column="37"/></name><operator pos:line="57" pos:column="37">-&gt;<pos:position pos:line="57" pos:column="42"/></operator><name pos:line="57" pos:column="39">object<pos:position pos:line="57" pos:column="45"/></name><operator pos:line="57" pos:column="45">.<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="46">flags<pos:position pos:line="57" pos:column="51"/></name></name> <operator pos:line="57" pos:column="52">&amp;<pos:position pos:line="57" pos:column="57"/></operator> <name pos:line="57" pos:column="54">UNINTERESTING<pos:position pos:line="57" pos:column="67"/></name><operator pos:line="57" pos:column="67">)<pos:position pos:line="57" pos:column="68"/></operator></expr>)<pos:position pos:line="57" pos:column="69"/></condition><then pos:line="57" pos:column="69"> <block pos:line="57" pos:column="70">{
				<expr_stmt><expr><name pos:line="58" pos:column="33">ts<pos:position pos:line="58" pos:column="35"/></name> <operator pos:line="58" pos:column="36">=<pos:position pos:line="58" pos:column="37"/></operator> <call><name pos:line="58" pos:column="38">initialise_treesame<pos:position pos:line="58" pos:column="57"/></name><argument_list pos:line="58" pos:column="57">(<argument><expr><name pos:line="58" pos:column="58">revs<pos:position pos:line="58" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="64">commit<pos:position pos:line="58" pos:column="70"/></name></expr></argument>)<pos:position pos:line="58" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="72"/></expr_stmt>
				<if pos:line="59" pos:column="33">if <condition pos:line="59" pos:column="36">(<expr><operator pos:line="59" pos:column="37">!<pos:position pos:line="59" pos:column="38"/></operator><operator pos:line="59" pos:column="38">(<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="39">irrelevant_change<pos:position pos:line="59" pos:column="56"/></name> <operator pos:line="59" pos:column="57">||<pos:position pos:line="59" pos:column="59"/></operator> <name pos:line="59" pos:column="60">relevant_change<pos:position pos:line="59" pos:column="75"/></name><operator pos:line="59" pos:column="75">)<pos:position pos:line="59" pos:column="76"/></operator></expr>)<pos:position pos:line="59" pos:column="77"/></condition><then pos:line="59" pos:column="77">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="41">ts<pos:position pos:line="60" pos:column="43"/></name><operator pos:line="60" pos:column="43">-&gt;<pos:position pos:line="60" pos:column="48"/></operator><name pos:line="60" pos:column="45">treesame<pos:position pos:line="60" pos:column="53"/></name><index pos:line="60" pos:column="53">[<expr><literal type="number" pos:line="60" pos:column="54">0<pos:position pos:line="60" pos:column="55"/></literal></expr>]<pos:position pos:line="60" pos:column="56"/></index></name> <operator pos:line="60" pos:column="57">=<pos:position pos:line="60" pos:column="58"/></operator> <literal type="number" pos:line="60" pos:column="59">1<pos:position pos:line="60" pos:column="60"/></literal></expr>;<pos:position pos:line="60" pos:column="61"/></expr_stmt></block></then></if>
			}<pos:position pos:line="61" pos:column="26"/></block></then></if>
		}<pos:position pos:line="62" pos:column="18"/></block></then></if>
		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><call><name pos:line="63" pos:column="21">parse_commit<pos:position pos:line="63" pos:column="33"/></name><argument_list pos:line="63" pos:column="33">(<argument><expr><name pos:line="63" pos:column="34">p<pos:position pos:line="63" pos:column="35"/></name></expr></argument>)<pos:position pos:line="63" pos:column="36"/></argument_list></call> <operator pos:line="63" pos:column="37">&lt;<pos:position pos:line="63" pos:column="41"/></operator> <literal type="number" pos:line="63" pos:column="39">0<pos:position pos:line="63" pos:column="40"/></literal></expr>)<pos:position pos:line="63" pos:column="41"/></condition><then pos:line="63" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="25">die<pos:position pos:line="64" pos:column="28"/></name><argument_list pos:line="64" pos:column="28">(<argument><expr><literal type="string" pos:line="64" pos:column="29">"cannot simplify commit %s (because of %s)"<pos:position pos:line="64" pos:column="72"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="65" pos:column="29">sha1_to_hex<pos:position pos:line="65" pos:column="40"/></name><argument_list pos:line="65" pos:column="40">(<argument><expr><name><name pos:line="65" pos:column="41">commit<pos:position pos:line="65" pos:column="47"/></name><operator pos:line="65" pos:column="47">-&gt;<pos:position pos:line="65" pos:column="52"/></operator><name pos:line="65" pos:column="49">object<pos:position pos:line="65" pos:column="55"/></name><operator pos:line="65" pos:column="55">.<pos:position pos:line="65" pos:column="56"/></operator><name pos:line="65" pos:column="56">sha1<pos:position pos:line="65" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="61"/></argument_list></call></expr></argument>,
			    <argument><expr><call><name pos:line="66" pos:column="29">sha1_to_hex<pos:position pos:line="66" pos:column="40"/></name><argument_list pos:line="66" pos:column="40">(<argument><expr><name><name pos:line="66" pos:column="41">p<pos:position pos:line="66" pos:column="42"/></name><operator pos:line="66" pos:column="42">-&gt;<pos:position pos:line="66" pos:column="47"/></operator><name pos:line="66" pos:column="44">object<pos:position pos:line="66" pos:column="50"/></name><operator pos:line="66" pos:column="50">.<pos:position pos:line="66" pos:column="51"/></operator><name pos:line="66" pos:column="51">sha1<pos:position pos:line="66" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="58"/></expr_stmt></block></then></if>
		<switch pos:line="67" pos:column="17">switch <condition pos:line="67" pos:column="24">(<expr><call><name pos:line="67" pos:column="25">rev_compare_tree<pos:position pos:line="67" pos:column="41"/></name><argument_list pos:line="67" pos:column="41">(<argument><expr><name pos:line="67" pos:column="42">revs<pos:position pos:line="67" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="48">p<pos:position pos:line="67" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="51">commit<pos:position pos:line="67" pos:column="57"/></name></expr></argument>)<pos:position pos:line="67" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="59"/></condition> <block pos:line="67" pos:column="60">{
		<case pos:line="68" pos:column="17">case <expr><name pos:line="68" pos:column="22">REV_TREE_SAME<pos:position pos:line="68" pos:column="35"/></name></expr>:<pos:position pos:line="68" pos:column="36"/></case>
			<if pos:line="69" pos:column="25">if <condition pos:line="69" pos:column="28">(<expr><operator pos:line="69" pos:column="29">!<pos:position pos:line="69" pos:column="30"/></operator><name><name pos:line="69" pos:column="30">revs<pos:position pos:line="69" pos:column="34"/></name><operator pos:line="69" pos:column="34">-&gt;<pos:position pos:line="69" pos:column="39"/></operator><name pos:line="69" pos:column="36">simplify_history<pos:position pos:line="69" pos:column="52"/></name></name> <operator pos:line="69" pos:column="53">||<pos:position pos:line="69" pos:column="55"/></operator> <operator pos:line="69" pos:column="56">!<pos:position pos:line="69" pos:column="57"/></operator><call><name pos:line="69" pos:column="57">relevant_commit<pos:position pos:line="69" pos:column="72"/></name><argument_list pos:line="69" pos:column="72">(<argument><expr><name pos:line="69" pos:column="73">p<pos:position pos:line="69" pos:column="74"/></name></expr></argument>)<pos:position pos:line="69" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="76"/></condition><then pos:line="69" pos:column="76"> <block pos:line="69" pos:column="77">{
				<comment type="block" pos:line="70" pos:column="33">/* Even if a merge with an uninteresting
				 * side branch brought the entire change
				 * we are interested in, we do not want
				 * to lose the other branches of this
				 * merge, so we just keep going.
				 */</comment>
				<if pos:line="76" pos:column="33">if <condition pos:line="76" pos:column="36">(<expr><name pos:line="76" pos:column="37">ts<pos:position pos:line="76" pos:column="39"/></name></expr>)<pos:position pos:line="76" pos:column="40"/></condition><then pos:line="76" pos:column="40">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="77" pos:column="41">ts<pos:position pos:line="77" pos:column="43"/></name><operator pos:line="77" pos:column="43">-&gt;<pos:position pos:line="77" pos:column="48"/></operator><name pos:line="77" pos:column="45">treesame<pos:position pos:line="77" pos:column="53"/></name><index pos:line="77" pos:column="53">[<expr><name pos:line="77" pos:column="54">nth_parent<pos:position pos:line="77" pos:column="64"/></name></expr>]<pos:position pos:line="77" pos:column="65"/></index></name> <operator pos:line="77" pos:column="66">=<pos:position pos:line="77" pos:column="67"/></operator> <literal type="number" pos:line="77" pos:column="68">1<pos:position pos:line="77" pos:column="69"/></literal></expr>;<pos:position pos:line="77" pos:column="70"/></expr_stmt></block></then></if>
				<continue pos:line="78" pos:column="33">continue;<pos:position pos:line="78" pos:column="42"/></continue>
			}<pos:position pos:line="79" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name><name pos:line="80" pos:column="25">parent<pos:position pos:line="80" pos:column="31"/></name><operator pos:line="80" pos:column="31">-&gt;<pos:position pos:line="80" pos:column="36"/></operator><name pos:line="80" pos:column="33">next<pos:position pos:line="80" pos:column="37"/></name></name> <operator pos:line="80" pos:column="38">=<pos:position pos:line="80" pos:column="39"/></operator> <name pos:line="80" pos:column="40">NULL<pos:position pos:line="80" pos:column="44"/></name></expr>;<pos:position pos:line="80" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="81" pos:column="25">commit<pos:position pos:line="81" pos:column="31"/></name><operator pos:line="81" pos:column="31">-&gt;<pos:position pos:line="81" pos:column="36"/></operator><name pos:line="81" pos:column="33">parents<pos:position pos:line="81" pos:column="40"/></name></name> <operator pos:line="81" pos:column="41">=<pos:position pos:line="81" pos:column="42"/></operator> <name pos:line="81" pos:column="43">parent<pos:position pos:line="81" pos:column="49"/></name></expr>;<pos:position pos:line="81" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="82" pos:column="25">commit<pos:position pos:line="82" pos:column="31"/></name><operator pos:line="82" pos:column="31">-&gt;<pos:position pos:line="82" pos:column="36"/></operator><name pos:line="82" pos:column="33">object<pos:position pos:line="82" pos:column="39"/></name><operator pos:line="82" pos:column="39">.<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="40">flags<pos:position pos:line="82" pos:column="45"/></name></name> <operator pos:line="82" pos:column="46">|=<pos:position pos:line="82" pos:column="48"/></operator> <name pos:line="82" pos:column="49">TREESAME<pos:position pos:line="82" pos:column="57"/></name></expr>;<pos:position pos:line="82" pos:column="58"/></expr_stmt>
			<return pos:line="83" pos:column="25">return;<pos:position pos:line="83" pos:column="32"/></return>

		<case pos:line="85" pos:column="17">case <expr><name pos:line="85" pos:column="22">REV_TREE_NEW<pos:position pos:line="85" pos:column="34"/></name></expr>:<pos:position pos:line="85" pos:column="35"/></case>
			<if pos:line="86" pos:column="25">if <condition pos:line="86" pos:column="28">(<expr><name><name pos:line="86" pos:column="29">revs<pos:position pos:line="86" pos:column="33"/></name><operator pos:line="86" pos:column="33">-&gt;<pos:position pos:line="86" pos:column="38"/></operator><name pos:line="86" pos:column="35">remove_empty_trees<pos:position pos:line="86" pos:column="53"/></name></name> <operator pos:line="86" pos:column="54">&amp;&amp;<pos:position pos:line="86" pos:column="64"/></operator>
			    <call><name pos:line="87" pos:column="29">rev_same_tree_as_empty<pos:position pos:line="87" pos:column="51"/></name><argument_list pos:line="87" pos:column="51">(<argument><expr><name pos:line="87" pos:column="52">revs<pos:position pos:line="87" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="58">p<pos:position pos:line="87" pos:column="59"/></name></expr></argument>)<pos:position pos:line="87" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="61"/></condition><then pos:line="87" pos:column="61"> <block pos:line="87" pos:column="62">{
				<comment type="block" pos:line="88" pos:column="33">/* We are adding all the specified
				 * paths from this parent, so the
				 * history beyond this parent is not
				 * interesting.  Remove its parents
				 * (they are grandparents for us).
				 * IOW, we pretend this parent is a
				 * "root" commit.
				 */</comment>
				<if pos:line="96" pos:column="33">if <condition pos:line="96" pos:column="36">(<expr><call><name pos:line="96" pos:column="37">parse_commit<pos:position pos:line="96" pos:column="49"/></name><argument_list pos:line="96" pos:column="49">(<argument><expr><name pos:line="96" pos:column="50">p<pos:position pos:line="96" pos:column="51"/></name></expr></argument>)<pos:position pos:line="96" pos:column="52"/></argument_list></call> <operator pos:line="96" pos:column="53">&lt;<pos:position pos:line="96" pos:column="57"/></operator> <literal type="number" pos:line="96" pos:column="55">0<pos:position pos:line="96" pos:column="56"/></literal></expr>)<pos:position pos:line="96" pos:column="57"/></condition><then pos:line="96" pos:column="57">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="97" pos:column="41">die<pos:position pos:line="97" pos:column="44"/></name><argument_list pos:line="97" pos:column="44">(<argument><expr><literal type="string" pos:line="97" pos:column="45">"cannot simplify commit %s (invalid %s)"<pos:position pos:line="97" pos:column="85"/></literal></expr></argument>,
					    <argument><expr><call><name pos:line="98" pos:column="45">sha1_to_hex<pos:position pos:line="98" pos:column="56"/></name><argument_list pos:line="98" pos:column="56">(<argument><expr><name><name pos:line="98" pos:column="57">commit<pos:position pos:line="98" pos:column="63"/></name><operator pos:line="98" pos:column="63">-&gt;<pos:position pos:line="98" pos:column="68"/></operator><name pos:line="98" pos:column="65">object<pos:position pos:line="98" pos:column="71"/></name><operator pos:line="98" pos:column="71">.<pos:position pos:line="98" pos:column="72"/></operator><name pos:line="98" pos:column="72">sha1<pos:position pos:line="98" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="77"/></argument_list></call></expr></argument>,
					    <argument><expr><call><name pos:line="99" pos:column="45">sha1_to_hex<pos:position pos:line="99" pos:column="56"/></name><argument_list pos:line="99" pos:column="56">(<argument><expr><name><name pos:line="99" pos:column="57">p<pos:position pos:line="99" pos:column="58"/></name><operator pos:line="99" pos:column="58">-&gt;<pos:position pos:line="99" pos:column="63"/></operator><name pos:line="99" pos:column="60">object<pos:position pos:line="99" pos:column="66"/></name><operator pos:line="99" pos:column="66">.<pos:position pos:line="99" pos:column="67"/></operator><name pos:line="99" pos:column="67">sha1<pos:position pos:line="99" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="99" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="74"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name><name pos:line="100" pos:column="33">p<pos:position pos:line="100" pos:column="34"/></name><operator pos:line="100" pos:column="34">-&gt;<pos:position pos:line="100" pos:column="39"/></operator><name pos:line="100" pos:column="36">parents<pos:position pos:line="100" pos:column="43"/></name></name> <operator pos:line="100" pos:column="44">=<pos:position pos:line="100" pos:column="45"/></operator> <name pos:line="100" pos:column="46">NULL<pos:position pos:line="100" pos:column="50"/></name></expr>;<pos:position pos:line="100" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="101" pos:column="26"/></block></then></if>
		<comment type="block" pos:line="102" pos:column="17">/* fallthrough */</comment>
		<case pos:line="103" pos:column="17">case <expr><name pos:line="103" pos:column="22">REV_TREE_OLD<pos:position pos:line="103" pos:column="34"/></name></expr>:<pos:position pos:line="103" pos:column="35"/></case>
		<case pos:line="104" pos:column="17">case <expr><name pos:line="104" pos:column="22">REV_TREE_DIFFERENT<pos:position pos:line="104" pos:column="40"/></name></expr>:<pos:position pos:line="104" pos:column="41"/></case>
			<if pos:line="105" pos:column="25">if <condition pos:line="105" pos:column="28">(<expr><call><name pos:line="105" pos:column="29">relevant_commit<pos:position pos:line="105" pos:column="44"/></name><argument_list pos:line="105" pos:column="44">(<argument><expr><name pos:line="105" pos:column="45">p<pos:position pos:line="105" pos:column="46"/></name></expr></argument>)<pos:position pos:line="105" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="48"/></condition><then pos:line="105" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><name pos:line="106" pos:column="33">relevant_change<pos:position pos:line="106" pos:column="48"/></name> <operator pos:line="106" pos:column="49">=<pos:position pos:line="106" pos:column="50"/></operator> <literal type="number" pos:line="106" pos:column="51">1<pos:position pos:line="106" pos:column="52"/></literal></expr>;<pos:position pos:line="106" pos:column="53"/></expr_stmt></block></then>
			<else pos:line="107" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="108" pos:column="33">irrelevant_change<pos:position pos:line="108" pos:column="50"/></name> <operator pos:line="108" pos:column="51">=<pos:position pos:line="108" pos:column="52"/></operator> <literal type="number" pos:line="108" pos:column="53">1<pos:position pos:line="108" pos:column="54"/></literal></expr>;<pos:position pos:line="108" pos:column="55"/></expr_stmt></block></else></if>
			<continue pos:line="109" pos:column="25">continue;<pos:position pos:line="109" pos:column="34"/></continue>
		}<pos:position pos:line="110" pos:column="18"/></block></switch>
		<expr_stmt><expr><call><name pos:line="111" pos:column="17">die<pos:position pos:line="111" pos:column="20"/></name><argument_list pos:line="111" pos:column="20">(<argument><expr><literal type="string" pos:line="111" pos:column="21">"bad tree compare for commit %s"<pos:position pos:line="111" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="111" pos:column="55">sha1_to_hex<pos:position pos:line="111" pos:column="66"/></name><argument_list pos:line="111" pos:column="66">(<argument><expr><name><name pos:line="111" pos:column="67">commit<pos:position pos:line="111" pos:column="73"/></name><operator pos:line="111" pos:column="73">-&gt;<pos:position pos:line="111" pos:column="78"/></operator><name pos:line="111" pos:column="75">object<pos:position pos:line="111" pos:column="81"/></name><operator pos:line="111" pos:column="81">.<pos:position pos:line="111" pos:column="82"/></operator><name pos:line="111" pos:column="82">sha1<pos:position pos:line="111" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="89"/></expr_stmt>
	}<pos:position pos:line="112" pos:column="10"/></block></for>

	<comment type="block" pos:line="114" pos:column="9">/*
	 * TREESAME is straightforward for single-parent commits. For merge
	 * commits, it is most useful to define it so that "irrelevant"
	 * parents cannot make us !TREESAME - if we have any relevant
	 * parents, then we only consider TREESAMEness with respect to them,
	 * allowing irrelevant merges from uninteresting branches to be
	 * simplified away. Only if we have only irrelevant parents do we
	 * base TREESAME on them. Note that this logic is replicated in
	 * update_treesame, which should be kept in sync.
	 */</comment>
	<if pos:line="124" pos:column="9">if <condition pos:line="124" pos:column="12">(<expr><ternary><condition><expr><name pos:line="124" pos:column="13">relevant_parents<pos:position pos:line="124" pos:column="29"/></name></expr> ?<pos:position pos:line="124" pos:column="31"/></condition><then pos:line="124" pos:column="31"> <expr><operator pos:line="124" pos:column="32">!<pos:position pos:line="124" pos:column="33"/></operator><name pos:line="124" pos:column="33">relevant_change<pos:position pos:line="124" pos:column="48"/></name></expr> <pos:position pos:line="124" pos:column="49"/></then><else pos:line="124" pos:column="49">: <expr><operator pos:line="124" pos:column="51">!<pos:position pos:line="124" pos:column="52"/></operator><name pos:line="124" pos:column="52">irrelevant_change<pos:position pos:line="124" pos:column="69"/></name></expr></else></ternary></expr>)<pos:position pos:line="124" pos:column="70"/></condition><then pos:line="124" pos:column="70">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="125" pos:column="17">commit<pos:position pos:line="125" pos:column="23"/></name><operator pos:line="125" pos:column="23">-&gt;<pos:position pos:line="125" pos:column="28"/></operator><name pos:line="125" pos:column="25">object<pos:position pos:line="125" pos:column="31"/></name><operator pos:line="125" pos:column="31">.<pos:position pos:line="125" pos:column="32"/></operator><name pos:line="125" pos:column="32">flags<pos:position pos:line="125" pos:column="37"/></name></name> <operator pos:line="125" pos:column="38">|=<pos:position pos:line="125" pos:column="40"/></operator> <name pos:line="125" pos:column="41">TREESAME<pos:position pos:line="125" pos:column="49"/></name></expr>;<pos:position pos:line="125" pos:column="50"/></expr_stmt></block></then></if>
}<pos:position pos:line="126" pos:column="2"/></block></function></unit>

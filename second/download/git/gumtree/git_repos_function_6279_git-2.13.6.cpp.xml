<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6279_git-2.13.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_symbolic_ref<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">argc<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">argv<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">prefix<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">quiet<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>, delete <init pos:line="3" pos:column="31">= <expr><literal type="number" pos:line="3" pos:column="33">0<pos:position pos:line="3" pos:column="34"/></literal></expr></init>, <decl><type ref="prev"/><name pos:line="3" pos:column="36">shorten<pos:position pos:line="3" pos:column="43"/></name> <init pos:line="3" pos:column="44">= <expr><literal type="number" pos:line="3" pos:column="46">0<pos:position pos:line="3" pos:column="47"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="49">ret<pos:position pos:line="3" pos:column="52"/></name> <init pos:line="3" pos:column="53">= <expr><literal type="number" pos:line="3" pos:column="55">0<pos:position pos:line="3" pos:column="56"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">msg<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">option<pos:position pos:line="5" pos:column="22"/></name></name></type> <name><name pos:line="5" pos:column="23">options<pos:position pos:line="5" pos:column="30"/></name><index pos:line="5" pos:column="30">[]<pos:position pos:line="5" pos:column="32"/></index></name> <init pos:line="5" pos:column="33">= <expr><block pos:line="5" pos:column="35">{
		<expr><call><name pos:line="6" pos:column="17">OPT__QUIET<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><operator pos:line="6" pos:column="28">&amp;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="29">quiet<pos:position pos:line="6" pos:column="34"/></name></expr></argument>,
			<argument><expr><call><name pos:line="7" pos:column="25">N_<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><literal type="string" pos:line="7" pos:column="28">"suppress error message for non-symbolic (detached) refs"<pos:position pos:line="7" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="87"/></argument_list></call></expr>,
		<expr><call><name pos:line="8" pos:column="17">OPT_BOOL<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="char" pos:line="8" pos:column="26">'d'<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="31">"delete"<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="41">&amp;<pos:position pos:line="8" pos:column="46"/></operator><operator pos:line="8" pos:column="42">delete<pos:position pos:line="8" pos:column="48"/></operator></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="50">N_<pos:position pos:line="8" pos:column="52"/></name><argument_list pos:line="8" pos:column="52">(<argument><expr><literal type="string" pos:line="8" pos:column="53">"delete symbolic ref"<pos:position pos:line="8" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr>,
		<expr><call><name pos:line="9" pos:column="17">OPT_BOOL<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><literal type="number" pos:line="9" pos:column="26">0<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="29">"short"<pos:position pos:line="9" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="38">&amp;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="39">shorten<pos:position pos:line="9" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="48">N_<pos:position pos:line="9" pos:column="50"/></name><argument_list pos:line="9" pos:column="50">(<argument><expr><literal type="string" pos:line="9" pos:column="51">"shorten ref output"<pos:position pos:line="9" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></call></expr>,
		<expr><call><name pos:line="10" pos:column="17">OPT_STRING<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><literal type="char" pos:line="10" pos:column="28">'m'<pos:position pos:line="10" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">NULL<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="39">&amp;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="40">msg<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="45">N_<pos:position pos:line="10" pos:column="47"/></name><argument_list pos:line="10" pos:column="47">(<argument><expr><literal type="string" pos:line="10" pos:column="48">"reason"<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="59">N_<pos:position pos:line="10" pos:column="61"/></name><argument_list pos:line="10" pos:column="61">(<argument><expr><literal type="string" pos:line="10" pos:column="62">"reason of the update"<pos:position pos:line="10" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="86"/></argument_list></call></expr>,
		<expr><call><name pos:line="11" pos:column="17">OPT_END<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">()<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>,
	}<pos:position pos:line="12" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="12" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">git_config<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">git_default_config<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">NULL<pos:position pos:line="14" pos:column="44"/></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">argc<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">parse_options<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">argc<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">argv<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">prefix<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">options<pos:position pos:line="15" pos:column="57"/></name></expr></argument>,
			     <argument><expr><name pos:line="16" pos:column="30">git_symbolic_ref_usage<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="54">0<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">msg<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">&amp;&amp;<pos:position pos:line="17" pos:column="27"/></operator> <operator pos:line="17" pos:column="20">!<pos:position pos:line="17" pos:column="21"/></operator><operator pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">msg<pos:position pos:line="17" pos:column="25"/></name></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">die<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><literal type="string" pos:line="18" pos:column="21">"Refusing to perform update with empty message"<pos:position pos:line="18" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="70"/></expr_stmt></block></then></if>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">delete<pos:position pos:line="20" pos:column="19"/></operator></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20"> <block pos:line="20" pos:column="21">{
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">argc<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">!=<pos:position pos:line="21" pos:column="28"/></operator> <literal type="number" pos:line="21" pos:column="29">1<pos:position pos:line="21" pos:column="30"/></literal></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="25">usage_with_options<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><name pos:line="22" pos:column="44">git_symbolic_ref_usage<pos:position pos:line="22" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="68">options<pos:position pos:line="22" pos:column="75"/></name></expr></argument>)<pos:position pos:line="22" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="77"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="23" pos:column="17">ret<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <call><name pos:line="23" pos:column="23">check_symref<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name><name pos:line="23" pos:column="36">argv<pos:position pos:line="23" pos:column="40"/></name><index pos:line="23" pos:column="40">[<expr><literal type="number" pos:line="23" pos:column="41">0<pos:position pos:line="23" pos:column="42"/></literal></expr>]<pos:position pos:line="23" pos:column="43"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="45">1<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="48">0<pos:position pos:line="23" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="51">0<pos:position pos:line="23" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">ret<pos:position pos:line="24" pos:column="24"/></name></expr>)<pos:position pos:line="24" pos:column="25"/></condition><then pos:line="24" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">die<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><literal type="string" pos:line="25" pos:column="29">"Cannot delete %s, not a symbolic ref"<pos:position pos:line="25" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="69">argv<pos:position pos:line="25" pos:column="73"/></name><index pos:line="25" pos:column="73">[<expr><literal type="number" pos:line="25" pos:column="74">0<pos:position pos:line="25" pos:column="75"/></literal></expr>]<pos:position pos:line="25" pos:column="76"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="78"/></expr_stmt></block></then></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><call><name pos:line="26" pos:column="22">strcmp<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name><name pos:line="26" pos:column="29">argv<pos:position pos:line="26" pos:column="33"/></name><index pos:line="26" pos:column="33">[<expr><literal type="number" pos:line="26" pos:column="34">0<pos:position pos:line="26" pos:column="35"/></literal></expr>]<pos:position pos:line="26" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="38">"HEAD"<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="46"/></condition><then pos:line="26" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="25">die<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><literal type="string" pos:line="27" pos:column="29">"deleting '%s' is not allowed"<pos:position pos:line="27" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="61">argv<pos:position pos:line="27" pos:column="65"/></name><index pos:line="27" pos:column="65">[<expr><literal type="number" pos:line="27" pos:column="66">0<pos:position pos:line="27" pos:column="67"/></literal></expr>]<pos:position pos:line="27" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt></block></then></if>
		<return pos:line="28" pos:column="17">return <expr><call><name pos:line="28" pos:column="24">delete_ref<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">NULL<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="41">argv<pos:position pos:line="28" pos:column="45"/></name><index pos:line="28" pos:column="45">[<expr><literal type="number" pos:line="28" pos:column="46">0<pos:position pos:line="28" pos:column="47"/></literal></expr>]<pos:position pos:line="28" pos:column="48"/></index></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="50">NULL<pos:position pos:line="28" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="56">REF_NODEREF<pos:position pos:line="28" pos:column="67"/></name></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="69"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<switch pos:line="31" pos:column="9">switch <condition pos:line="31" pos:column="16">(<expr><name pos:line="31" pos:column="17">argc<pos:position pos:line="31" pos:column="21"/></name></expr>)<pos:position pos:line="31" pos:column="22"/></condition> <block pos:line="31" pos:column="23">{
	<case pos:line="32" pos:column="9">case <expr><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal></expr>:<pos:position pos:line="32" pos:column="16"/></case>
		<expr_stmt><expr><name pos:line="33" pos:column="17">ret<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <call><name pos:line="33" pos:column="23">check_symref<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name><name pos:line="33" pos:column="36">argv<pos:position pos:line="33" pos:column="40"/></name><index pos:line="33" pos:column="40">[<expr><literal type="number" pos:line="33" pos:column="41">0<pos:position pos:line="33" pos:column="42"/></literal></expr>]<pos:position pos:line="33" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="45">quiet<pos:position pos:line="33" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="52">shorten<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="61">1<pos:position pos:line="33" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="64"/></expr_stmt>
		<break pos:line="34" pos:column="17">break;<pos:position pos:line="34" pos:column="23"/></break>
	<case pos:line="35" pos:column="9">case <expr><literal type="number" pos:line="35" pos:column="14">2<pos:position pos:line="35" pos:column="15"/></literal></expr>:<pos:position pos:line="35" pos:column="16"/></case>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><call><name pos:line="36" pos:column="22">strcmp<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name><name pos:line="36" pos:column="29">argv<pos:position pos:line="36" pos:column="33"/></name><index pos:line="36" pos:column="33">[<expr><literal type="number" pos:line="36" pos:column="34">0<pos:position pos:line="36" pos:column="35"/></literal></expr>]<pos:position pos:line="36" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="38">"HEAD"<pos:position pos:line="36" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call> <operator pos:line="36" pos:column="46">&amp;&amp;<pos:position pos:line="36" pos:column="56"/></operator>
		    <operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><call><name pos:line="37" pos:column="22">starts_with<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name><name pos:line="37" pos:column="34">argv<pos:position pos:line="37" pos:column="38"/></name><index pos:line="37" pos:column="38">[<expr><literal type="number" pos:line="37" pos:column="39">1<pos:position pos:line="37" pos:column="40"/></literal></expr>]<pos:position pos:line="37" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="43">"refs/"<pos:position pos:line="37" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="52"/></condition><then pos:line="37" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="25">die<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><literal type="string" pos:line="38" pos:column="29">"Refusing to point HEAD outside of refs/"<pos:position pos:line="38" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="72"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="39" pos:column="17">ret<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <operator pos:line="39" pos:column="23">!<pos:position pos:line="39" pos:column="24"/></operator><operator pos:line="39" pos:column="24">!<pos:position pos:line="39" pos:column="25"/></operator><call><name pos:line="39" pos:column="25">create_symref<pos:position pos:line="39" pos:column="38"/></name><argument_list pos:line="39" pos:column="38">(<argument><expr><name><name pos:line="39" pos:column="39">argv<pos:position pos:line="39" pos:column="43"/></name><index pos:line="39" pos:column="43">[<expr><literal type="number" pos:line="39" pos:column="44">0<pos:position pos:line="39" pos:column="45"/></literal></expr>]<pos:position pos:line="39" pos:column="46"/></index></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="48">argv<pos:position pos:line="39" pos:column="52"/></name><index pos:line="39" pos:column="52">[<expr><literal type="number" pos:line="39" pos:column="53">1<pos:position pos:line="39" pos:column="54"/></literal></expr>]<pos:position pos:line="39" pos:column="55"/></index></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="57">msg<pos:position pos:line="39" pos:column="60"/></name></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt>
		<break pos:line="40" pos:column="17">break;<pos:position pos:line="40" pos:column="23"/></break>
	<default pos:line="41" pos:column="9">default:<pos:position pos:line="41" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">usage_with_options<pos:position pos:line="42" pos:column="35"/></name><argument_list pos:line="42" pos:column="35">(<argument><expr><name pos:line="42" pos:column="36">git_symbolic_ref_usage<pos:position pos:line="42" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="60">options<pos:position pos:line="42" pos:column="67"/></name></expr></argument>)<pos:position pos:line="42" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="69"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></switch>
	<return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">ret<pos:position pos:line="44" pos:column="19"/></name></expr>;<pos:position pos:line="44" pos:column="20"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

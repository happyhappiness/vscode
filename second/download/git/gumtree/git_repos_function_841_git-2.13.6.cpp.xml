<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_841_git-2.13.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_sign_commit<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">strbuf<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">buf<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">keyid<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">sig<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">STRBUF_INIT<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">inspos<pos:position pos:line="4" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="21">copypos<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">eoh<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* find the end of the header */</comment>
	<expr_stmt><expr><name pos:line="8" pos:column="9">eoh<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">strstr<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name><name pos:line="8" pos:column="22">buf<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">buf<pos:position pos:line="8" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="32">"\n\n"<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">eoh<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">inspos<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <name><name pos:line="10" pos:column="26">buf<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">len<pos:position pos:line="10" pos:column="34"/></name></name></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt></block></then>
	<else pos:line="11" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">inspos<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">eoh<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">-<pos:position pos:line="12" pos:column="31"/></operator> <name><name pos:line="12" pos:column="32">buf<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">buf<pos:position pos:line="12" pos:column="40"/></name></name> <operator pos:line="12" pos:column="41">+<pos:position pos:line="12" pos:column="42"/></operator> <literal type="number" pos:line="12" pos:column="43">1<pos:position pos:line="12" pos:column="44"/></literal></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt></block></else></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">keyid<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">||<pos:position pos:line="14" pos:column="22"/></operator> <operator pos:line="14" pos:column="23">!<pos:position pos:line="14" pos:column="24"/></operator><operator pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">keyid<pos:position pos:line="14" pos:column="30"/></name></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">keyid<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <call><name pos:line="15" pos:column="25">get_signing_key<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">()<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">sign_buffer<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">buf<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="30">&amp;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="31">sig<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">keyid<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43"> <block pos:line="16" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">strbuf_release<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><operator pos:line="17" pos:column="32">&amp;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="33">sig<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><operator pos:line="18" pos:column="24">-<pos:position pos:line="18" pos:column="25"/></operator><literal type="number" pos:line="18" pos:column="25">1<pos:position pos:line="18" pos:column="26"/></literal></expr>;<pos:position pos:line="18" pos:column="27"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">copypos<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></init> <condition><expr><name><name pos:line="21" pos:column="27">sig<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">.<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">buf<pos:position pos:line="21" pos:column="34"/></name><index pos:line="21" pos:column="34">[<expr><name pos:line="21" pos:column="35">copypos<pos:position pos:line="21" pos:column="42"/></name></expr>]<pos:position pos:line="21" pos:column="43"/></index></name></expr>;<pos:position pos:line="21" pos:column="44"/></condition> <incr/>)<pos:position pos:line="21" pos:column="46"/></control> <block pos:line="21" pos:column="47">{
		<decl_stmt><decl><type><specifier pos:line="22" pos:column="17">const<pos:position pos:line="22" pos:column="22"/></specifier> <name pos:line="22" pos:column="23">char<pos:position pos:line="22" pos:column="27"/></name> <modifier pos:line="22" pos:column="28">*<pos:position pos:line="22" pos:column="29"/></modifier></type><name pos:line="22" pos:column="29">bol<pos:position pos:line="22" pos:column="32"/></name> <init pos:line="22" pos:column="33">= <expr><name><name pos:line="22" pos:column="35">sig<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">.<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">buf<pos:position pos:line="22" pos:column="42"/></name></name> <operator pos:line="22" pos:column="43">+<pos:position pos:line="22" pos:column="44"/></operator> <name pos:line="22" pos:column="45">copypos<pos:position pos:line="22" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="23" pos:column="17">const<pos:position pos:line="23" pos:column="22"/></specifier> <name pos:line="23" pos:column="23">char<pos:position pos:line="23" pos:column="27"/></name> <modifier pos:line="23" pos:column="28">*<pos:position pos:line="23" pos:column="29"/></modifier></type><name pos:line="23" pos:column="29">eol<pos:position pos:line="23" pos:column="32"/></name> <init pos:line="23" pos:column="33">= <expr><call><name pos:line="23" pos:column="35">strchrnul<pos:position pos:line="23" pos:column="44"/></name><argument_list pos:line="23" pos:column="44">(<argument><expr><name pos:line="23" pos:column="45">bol<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="50">'\n'<pos:position pos:line="23" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="56"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">int<pos:position pos:line="24" pos:column="20"/></name></type> <name pos:line="24" pos:column="21">len<pos:position pos:line="24" pos:column="24"/></name> <init pos:line="24" pos:column="25">= <expr><operator pos:line="24" pos:column="27">(<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="28">eol<pos:position pos:line="24" pos:column="31"/></name> <operator pos:line="24" pos:column="32">-<pos:position pos:line="24" pos:column="33"/></operator> <name pos:line="24" pos:column="34">bol<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">)<pos:position pos:line="24" pos:column="38"/></operator> <operator pos:line="24" pos:column="39">+<pos:position pos:line="24" pos:column="40"/></operator> <operator pos:line="24" pos:column="41">!<pos:position pos:line="24" pos:column="42"/></operator><operator pos:line="24" pos:column="42">!<pos:position pos:line="24" pos:column="43"/></operator><operator pos:line="24" pos:column="43">*<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="44">eol<pos:position pos:line="24" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="48"/></decl_stmt>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">copypos<pos:position pos:line="26" pos:column="29"/></name></expr>)<pos:position pos:line="26" pos:column="30"/></condition><then pos:line="26" pos:column="30"> <block pos:line="26" pos:column="31">{
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">strbuf_insert<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">buf<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="44">inspos<pos:position pos:line="27" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="52">gpg_sig_header<pos:position pos:line="27" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="68">gpg_sig_header_len<pos:position pos:line="27" pos:column="86"/></name></expr></argument>)<pos:position pos:line="27" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="88"/></expr_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">inspos<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">+=<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="35">gpg_sig_header_len<pos:position pos:line="28" pos:column="53"/></name></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">strbuf_insert<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">buf<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="36">inspos<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">++<pos:position pos:line="30" pos:column="44"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="46">" "<pos:position pos:line="30" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="51">1<pos:position pos:line="30" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">strbuf_insert<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">buf<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="36">inspos<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">bol<pos:position pos:line="31" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="49">len<pos:position pos:line="31" pos:column="52"/></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="32" pos:column="17">inspos<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">+=<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">len<pos:position pos:line="32" pos:column="30"/></name></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">copypos<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">+=<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="28">len<pos:position pos:line="33" pos:column="31"/></name></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">strbuf_release<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><operator pos:line="35" pos:column="24">&amp;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="25">sig<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
	<return pos:line="36" pos:column="9">return <expr><literal type="number" pos:line="36" pos:column="16">0<pos:position pos:line="36" pos:column="17"/></literal></expr>;<pos:position pos:line="36" pos:column="18"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

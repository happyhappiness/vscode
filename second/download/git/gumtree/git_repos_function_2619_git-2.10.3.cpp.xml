<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2619_git-2.10.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">process_input_file<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">FILE<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">outfile<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">strbuf<pos:position pos:line="2" pos:column="44"/></name></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier><modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">lines<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="3" pos:column="31">struct<pos:position pos:line="3" pos:column="37"/></name> <name pos:line="3" pos:column="38">trailer_item<pos:position pos:line="3" pos:column="50"/></name></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier><modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">in_tok_first<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="4" pos:column="31">struct<pos:position pos:line="4" pos:column="37"/></name> <name pos:line="4" pos:column="38">trailer_item<pos:position pos:line="4" pos:column="50"/></name></name> <modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier><modifier pos:line="4" pos:column="52">*<pos:position pos:line="4" pos:column="53"/></modifier></type><name pos:line="4" pos:column="53">in_tok_last<pos:position pos:line="4" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="65"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">count<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">patch_start<pos:position pos:line="7" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="26">trailer_start<pos:position pos:line="7" pos:column="39"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="41">trailer_end<pos:position pos:line="7" pos:column="52"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="54">i<pos:position pos:line="7" pos:column="55"/></name></decl>;<pos:position pos:line="7" pos:column="56"/></decl_stmt>

	<comment type="block" pos:line="9" pos:column="9">/* Get the line count */</comment>
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><name><name pos:line="10" pos:column="16">lines<pos:position pos:line="10" pos:column="21"/></name><index pos:line="10" pos:column="21">[<expr><name pos:line="10" pos:column="22">count<pos:position pos:line="10" pos:column="27"/></name></expr>]<pos:position pos:line="10" pos:column="28"/></index></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">count<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">++<pos:position pos:line="11" pos:column="24"/></operator></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt></block></while>

	<expr_stmt><expr><name pos:line="13" pos:column="9">patch_start<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="23">find_patch_start<pos:position pos:line="13" pos:column="39"/></name><argument_list pos:line="13" pos:column="39">(<argument><expr><name pos:line="13" pos:column="40">lines<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="47">count<pos:position pos:line="13" pos:column="52"/></name></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">trailer_end<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <call><name pos:line="14" pos:column="23">find_trailer_end<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">lines<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">patch_start<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">trailer_start<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <call><name pos:line="15" pos:column="25">find_trailer_start<pos:position pos:line="15" pos:column="43"/></name><argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">lines<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="51">trailer_end<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>

	<comment type="block" pos:line="17" pos:column="9">/* Print lines before the trailers as is */</comment>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">print_lines<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">outfile<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="30">lines<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="37">0<pos:position pos:line="18" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">trailer_start<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><call><name pos:line="20" pos:column="14">has_blank_line_before<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">lines<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">trailer_start<pos:position pos:line="20" pos:column="56"/></name> <operator pos:line="20" pos:column="57">-<pos:position pos:line="20" pos:column="58"/></operator> <literal type="number" pos:line="20" pos:column="59">1<pos:position pos:line="20" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="62"/></condition><then pos:line="20" pos:column="62">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">fprintf<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">outfile<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="34">"\n"<pos:position pos:line="21" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="23" pos:column="9">/* Parse trailer lines */</comment>
	<for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">i<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">trailer_start<pos:position pos:line="24" pos:column="31"/></name></expr>;<pos:position pos:line="24" pos:column="32"/></init> <condition><expr><name pos:line="24" pos:column="33">i<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">&lt;<pos:position pos:line="24" pos:column="39"/></operator> <name pos:line="24" pos:column="37">trailer_end<pos:position pos:line="24" pos:column="48"/></name></expr>;<pos:position pos:line="24" pos:column="49"/></condition> <incr><expr><name pos:line="24" pos:column="50">i<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">++<pos:position pos:line="24" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="54"/></control> <block pos:line="24" pos:column="55">{
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">lines<pos:position pos:line="25" pos:column="26"/></name><index pos:line="25" pos:column="26">[<expr><name pos:line="25" pos:column="27">i<pos:position pos:line="25" pos:column="28"/></name></expr>]<pos:position pos:line="25" pos:column="29"/></index></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name><name pos:line="25" pos:column="31">buf<pos:position pos:line="25" pos:column="34"/></name><index pos:line="25" pos:column="34">[<expr><literal type="number" pos:line="25" pos:column="35">0<pos:position pos:line="25" pos:column="36"/></literal></expr>]<pos:position pos:line="25" pos:column="37"/></index></name> <operator pos:line="25" pos:column="38">!=<pos:position pos:line="25" pos:column="40"/></operator> <name pos:line="25" pos:column="41">comment_line_char<pos:position pos:line="25" pos:column="58"/></name></expr>)<pos:position pos:line="25" pos:column="59"/></condition><then pos:line="25" pos:column="59"> <block pos:line="25" pos:column="60">{
			struct <expr_stmt><expr><name pos:line="26" pos:column="32">trailer_item<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">*<pos:position pos:line="26" pos:column="46"/></operator><operator pos:line="26" pos:column="46">new<pos:position pos:line="26" pos:column="49"/></operator> <operator pos:line="26" pos:column="50">=<pos:position pos:line="26" pos:column="51"/></operator> <call><name pos:line="26" pos:column="52">create_trailer_item<pos:position pos:line="26" pos:column="71"/></name><argument_list pos:line="26" pos:column="71">(<argument><expr><name><name pos:line="26" pos:column="72">lines<pos:position pos:line="26" pos:column="77"/></name><index pos:line="26" pos:column="77">[<expr><name pos:line="26" pos:column="78">i<pos:position pos:line="26" pos:column="79"/></name></expr>]<pos:position pos:line="26" pos:column="80"/></index></name><operator pos:line="26" pos:column="80">-&gt;<pos:position pos:line="26" pos:column="85"/></operator><name pos:line="26" pos:column="82">buf<pos:position pos:line="26" pos:column="85"/></name></expr></argument>)<pos:position pos:line="26" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="87"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">add_trailer_item<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">in_tok_first<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">in_tok_last<pos:position pos:line="27" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="69">new<pos:position pos:line="27" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="74"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if>
	}<pos:position pos:line="29" pos:column="10"/></block></for>

	<return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">trailer_end<pos:position pos:line="31" pos:column="27"/></name></expr>;<pos:position pos:line="31" pos:column="28"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

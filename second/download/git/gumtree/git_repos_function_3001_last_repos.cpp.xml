<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3001_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rollback_single_pick<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">void<pos:position pos:line="1" pos:column="37"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">head_sha1<pos:position pos:line="3" pos:column="32"/></name><index pos:line="3" pos:column="32">[<expr><literal type="number" pos:line="3" pos:column="33">20<pos:position pos:line="3" pos:column="35"/></literal></expr>]<pos:position pos:line="3" pos:column="36"/></index></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><call><name pos:line="5" pos:column="14">file_exists<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><call><name pos:line="5" pos:column="26">git_path_cherry_pick_head<pos:position pos:line="5" pos:column="51"/></name><argument_list pos:line="5" pos:column="51">()<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call> <operator pos:line="5" pos:column="55">&amp;&amp;<pos:position pos:line="5" pos:column="65"/></operator>
	    <operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">file_exists<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><call><name pos:line="6" pos:column="26">git_path_revert_head<pos:position pos:line="6" pos:column="46"/></name><argument_list pos:line="6" pos:column="46">()<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="50"/></condition><then pos:line="6" pos:column="50">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><call><name pos:line="7" pos:column="24">error<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><call><name pos:line="7" pos:column="30">_<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><literal type="string" pos:line="7" pos:column="32">"no cherry-pick or revert in progress"<pos:position pos:line="7" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="73"/></return></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">read_ref_full<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><literal type="string" pos:line="8" pos:column="27">"HEAD"<pos:position pos:line="8" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="35">0<pos:position pos:line="8" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="38">head_sha1<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="49">NULL<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="55"/></condition><then pos:line="8" pos:column="55">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><call><name pos:line="9" pos:column="24">error<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><call><name pos:line="9" pos:column="30">_<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><literal type="string" pos:line="9" pos:column="32">"cannot resolve HEAD"<pos:position pos:line="9" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></return></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">is_null_sha1<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">head_sha1<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="37"/></condition><then pos:line="10" pos:column="37">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><call><name pos:line="11" pos:column="24">error<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><call><name pos:line="11" pos:column="30">_<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><literal type="string" pos:line="11" pos:column="32">"cannot abort from a branch yet to be born"<pos:position pos:line="11" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="78"/></return></block></then></if>
	<return pos:line="12" pos:column="9">return <expr><call><name pos:line="12" pos:column="16">reset_for_rollback<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">head_sha1<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

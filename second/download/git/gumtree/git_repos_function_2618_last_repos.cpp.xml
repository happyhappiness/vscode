<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2618_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fill_active_slot<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">walker<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">walker<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object_request<pos:position pos:line="3" pos:column="30"/></name></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">obj_req<pos:position pos:line="3" pos:column="39"/></name></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">list_head<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">pos<pos:position pos:line="4" pos:column="30"/></name></decl>, <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="33">tmp<pos:position pos:line="4" pos:column="36"/></name></decl>, <modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="39">head<pos:position pos:line="4" pos:column="43"/></name> <init pos:line="4" pos:column="44">= <expr><operator pos:line="4" pos:column="46">&amp;<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="47">object_queue_head<pos:position pos:line="4" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="65"/></decl_stmt>

	<macro><name pos:line="6" pos:column="9">list_for_each_safe<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument pos:line="6" pos:column="28">pos<pos:position pos:line="6" pos:column="31"/></argument>, <argument pos:line="6" pos:column="33">tmp<pos:position pos:line="6" pos:column="36"/></argument>, <argument pos:line="6" pos:column="38">head<pos:position pos:line="6" pos:column="42"/></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></macro> <block pos:line="6" pos:column="44">{
		<expr_stmt><expr><name pos:line="7" pos:column="17">obj_req<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">=<pos:position pos:line="7" pos:column="26"/></operator> <call><name pos:line="7" pos:column="27">list_entry<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><name pos:line="7" pos:column="38">pos<pos:position pos:line="7" pos:column="41"/></name></expr></argument>, <argument><expr pos:line="7" pos:column="43">struct <name pos:line="7" pos:column="50">object_request<pos:position pos:line="7" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="66">node<pos:position pos:line="7" pos:column="70"/></name></expr></argument>)<pos:position pos:line="7" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="72"/></expr_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name><name pos:line="8" pos:column="21">obj_req<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">state<pos:position pos:line="8" pos:column="35"/></name></name> <operator pos:line="8" pos:column="36">==<pos:position pos:line="8" pos:column="38"/></operator> <name pos:line="8" pos:column="39">WAITING<pos:position pos:line="8" pos:column="46"/></name></expr>)<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47"> <block pos:line="8" pos:column="48">{
			<if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><call><name pos:line="9" pos:column="29">has_sha1_file<pos:position pos:line="9" pos:column="42"/></name><argument_list pos:line="9" pos:column="42">(<argument><expr><name><name pos:line="9" pos:column="43">obj_req<pos:position pos:line="9" pos:column="50"/></name><operator pos:line="9" pos:column="50">-&gt;<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="52">sha1<pos:position pos:line="9" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="58"/></condition><then pos:line="9" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="33">obj_req<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">-&gt;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="42">state<pos:position pos:line="10" pos:column="47"/></name></name> <operator pos:line="10" pos:column="48">=<pos:position pos:line="10" pos:column="49"/></operator> <name pos:line="10" pos:column="50">COMPLETE<pos:position pos:line="10" pos:column="58"/></name></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt></block></then>
			<else pos:line="11" pos:column="25">else <block pos:line="11" pos:column="30">{
				<expr_stmt><expr><call><name pos:line="12" pos:column="33">start_object_request<pos:position pos:line="12" pos:column="53"/></name><argument_list pos:line="12" pos:column="53">(<argument><expr><name pos:line="12" pos:column="54">walker<pos:position pos:line="12" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="62">obj_req<pos:position pos:line="12" pos:column="69"/></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>
				<return pos:line="13" pos:column="33">return <expr><literal type="number" pos:line="13" pos:column="40">1<pos:position pos:line="13" pos:column="41"/></literal></expr>;<pos:position pos:line="13" pos:column="42"/></return>
			}<pos:position pos:line="14" pos:column="26"/></block></else></if>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
	}<pos:position pos:line="16" pos:column="10"/></block>
	<return pos:line="17" pos:column="9">return <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

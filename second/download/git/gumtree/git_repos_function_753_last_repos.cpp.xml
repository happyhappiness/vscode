<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_753_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">parse_gpg_output<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">signature_check<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">sigc<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">buf<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name><name pos:line="3" pos:column="27">sigc<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">-&gt;<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="33">gpg_status<pos:position pos:line="3" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* Iterate over all search strings */</comment>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <call><name pos:line="7" pos:column="25">ARRAY_SIZE<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><name pos:line="7" pos:column="36">sigcheck_gpg_status<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="57"/></condition> <incr><expr><name pos:line="7" pos:column="58">i<pos:position pos:line="7" pos:column="59"/></name><operator pos:line="7" pos:column="59">++<pos:position pos:line="7" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="62"/></control> <block pos:line="7" pos:column="63">{
		<decl_stmt><decl><type><specifier pos:line="8" pos:column="17">const<pos:position pos:line="8" pos:column="22"/></specifier> <name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">found<pos:position pos:line="8" pos:column="34"/></name></decl>, <modifier pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="37">next<pos:position pos:line="8" pos:column="41"/></name></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>

		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><call><name pos:line="10" pos:column="22">skip_prefix<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">buf<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="39">sigcheck_gpg_status<pos:position pos:line="10" pos:column="58"/></name><index pos:line="10" pos:column="58">[<expr><name pos:line="10" pos:column="59">i<pos:position pos:line="10" pos:column="60"/></name></expr>]<pos:position pos:line="10" pos:column="61"/></index></name><operator pos:line="10" pos:column="61">.<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="62">check<pos:position pos:line="10" pos:column="67"/></name> <operator pos:line="10" pos:column="68">+<pos:position pos:line="10" pos:column="69"/></operator> <literal type="number" pos:line="10" pos:column="70">1<pos:position pos:line="10" pos:column="71"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="73">&amp;<pos:position pos:line="10" pos:column="78"/></operator><name pos:line="10" pos:column="74">found<pos:position pos:line="10" pos:column="79"/></name></expr></argument>)<pos:position pos:line="10" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="81"/></condition><then pos:line="10" pos:column="81"> <block pos:line="10" pos:column="82">{
			<expr_stmt><expr><name pos:line="11" pos:column="25">found<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">=<pos:position pos:line="11" pos:column="32"/></operator> <call><name pos:line="11" pos:column="33">strstr<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">buf<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="45">sigcheck_gpg_status<pos:position pos:line="11" pos:column="64"/></name><index pos:line="11" pos:column="64">[<expr><name pos:line="11" pos:column="65">i<pos:position pos:line="11" pos:column="66"/></name></expr>]<pos:position pos:line="11" pos:column="67"/></index></name><operator pos:line="11" pos:column="67">.<pos:position pos:line="11" pos:column="68"/></operator><name pos:line="11" pos:column="68">check<pos:position pos:line="11" pos:column="73"/></name></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="75"/></expr_stmt>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><operator pos:line="12" pos:column="29">!<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">found<pos:position pos:line="12" pos:column="35"/></name></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36">
				<block type="pseudo"><continue pos:line="13" pos:column="33">continue;<pos:position pos:line="13" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="14" pos:column="25">found<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">+=<pos:position pos:line="14" pos:column="33"/></operator> <call><name pos:line="14" pos:column="34">strlen<pos:position pos:line="14" pos:column="40"/></name><argument_list pos:line="14" pos:column="40">(<argument><expr><name><name pos:line="14" pos:column="41">sigcheck_gpg_status<pos:position pos:line="14" pos:column="60"/></name><index pos:line="14" pos:column="60">[<expr><name pos:line="14" pos:column="61">i<pos:position pos:line="14" pos:column="62"/></name></expr>]<pos:position pos:line="14" pos:column="63"/></index></name><operator pos:line="14" pos:column="63">.<pos:position pos:line="14" pos:column="64"/></operator><name pos:line="14" pos:column="64">check<pos:position pos:line="14" pos:column="69"/></name></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">sigc<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">result<pos:position pos:line="16" pos:column="29"/></name></name> <operator pos:line="16" pos:column="30">=<pos:position pos:line="16" pos:column="31"/></operator> <name><name pos:line="16" pos:column="32">sigcheck_gpg_status<pos:position pos:line="16" pos:column="51"/></name><index pos:line="16" pos:column="51">[<expr><name pos:line="16" pos:column="52">i<pos:position pos:line="16" pos:column="53"/></name></expr>]<pos:position pos:line="16" pos:column="54"/></index></name><operator pos:line="16" pos:column="54">.<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="55">result<pos:position pos:line="16" pos:column="61"/></name></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt>
		<comment type="block" pos:line="17" pos:column="17">/* The trust messages are not followed by key/signer information */</comment>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">sigc<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">result<pos:position pos:line="18" pos:column="33"/></name></name> <operator pos:line="18" pos:column="34">!=<pos:position pos:line="18" pos:column="36"/></operator> <literal type="char" pos:line="18" pos:column="37">'U'<pos:position pos:line="18" pos:column="40"/></literal></expr>)<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41"> <block pos:line="18" pos:column="42">{
			<expr_stmt><expr><name><name pos:line="19" pos:column="25">sigc<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">key<pos:position pos:line="19" pos:column="34"/></name></name> <operator pos:line="19" pos:column="35">=<pos:position pos:line="19" pos:column="36"/></operator> <call><name pos:line="19" pos:column="37">xmemdupz<pos:position pos:line="19" pos:column="45"/></name><argument_list pos:line="19" pos:column="45">(<argument><expr><name pos:line="19" pos:column="46">found<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="53">16<pos:position pos:line="19" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>
			<comment type="block" pos:line="20" pos:column="25">/* The ERRSIG message is not followed by signer information */</comment>
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name><name pos:line="21" pos:column="29">sigc<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">-&gt;<pos:position pos:line="21" pos:column="38"/></operator> <name pos:line="21" pos:column="36">result<pos:position pos:line="21" pos:column="42"/></name></name> <operator pos:line="21" pos:column="43">!=<pos:position pos:line="21" pos:column="45"/></operator> <literal type="char" pos:line="21" pos:column="46">'E'<pos:position pos:line="21" pos:column="49"/></literal></expr>)<pos:position pos:line="21" pos:column="50"/></condition><then pos:line="21" pos:column="50"> <block pos:line="21" pos:column="51">{
				<expr_stmt><expr><name pos:line="22" pos:column="33">found<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">+=<pos:position pos:line="22" pos:column="41"/></operator> <literal type="number" pos:line="22" pos:column="42">17<pos:position pos:line="22" pos:column="44"/></literal></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
				<expr_stmt><expr><name pos:line="23" pos:column="33">next<pos:position pos:line="23" pos:column="37"/></name> <operator pos:line="23" pos:column="38">=<pos:position pos:line="23" pos:column="39"/></operator> <call><name pos:line="23" pos:column="40">strchrnul<pos:position pos:line="23" pos:column="49"/></name><argument_list pos:line="23" pos:column="49">(<argument><expr><name pos:line="23" pos:column="50">found<pos:position pos:line="23" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="57">'\n'<pos:position pos:line="23" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="24" pos:column="33">sigc<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">-&gt;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="39">signer<pos:position pos:line="24" pos:column="45"/></name></name> <operator pos:line="24" pos:column="46">=<pos:position pos:line="24" pos:column="47"/></operator> <call><name pos:line="24" pos:column="48">xmemdupz<pos:position pos:line="24" pos:column="56"/></name><argument_list pos:line="24" pos:column="56">(<argument><expr><name pos:line="24" pos:column="57">found<pos:position pos:line="24" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="64">next<pos:position pos:line="24" pos:column="68"/></name> <operator pos:line="24" pos:column="69">-<pos:position pos:line="24" pos:column="70"/></operator> <name pos:line="24" pos:column="71">found<pos:position pos:line="24" pos:column="76"/></name></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="78"/></expr_stmt>
			}<pos:position pos:line="25" pos:column="26"/></block></then></if>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></for>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

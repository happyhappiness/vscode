<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5315_git-2.9.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">fmt_merge_msg<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name><name pos:line="1" pos:column="19">struct<pos:position pos:line="1" pos:column="25"/></name> <name pos:line="1" pos:column="26">strbuf<pos:position pos:line="1" pos:column="32"/></name></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">in<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">strbuf<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">out<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
		  <parameter><decl><type><name><name pos:line="2" pos:column="19">struct<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">fmt_merge_msg_opts<pos:position pos:line="2" pos:column="44"/></name></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">opts<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="20">pos<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">char<pos:position pos:line="5" pos:column="22"/></name></type> <name><name pos:line="5" pos:column="23">head_sha1<pos:position pos:line="5" pos:column="32"/></name><index pos:line="5" pos:column="32">[<expr><literal type="number" pos:line="5" pos:column="33">20<pos:position pos:line="5" pos:column="35"/></literal></expr>]<pos:position pos:line="5" pos:column="36"/></index></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">current_branch<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">void<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">current_branch_to_free<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">merge_parents<pos:position pos:line="8" pos:column="29"/></name></name></type> <name pos:line="8" pos:column="30">merge_parents<pos:position pos:line="8" pos:column="43"/></name></decl>;<pos:position pos:line="8" pos:column="44"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">memset<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><operator pos:line="10" pos:column="16">&amp;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="17">merge_parents<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="32">0<pos:position pos:line="10" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="35">sizeof<argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">merge_parents<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>

	<comment type="block" pos:line="12" pos:column="9">/* get current branch */</comment>
	<expr_stmt><expr><name pos:line="13" pos:column="9">current_branch<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="26">current_branch_to_free<pos:position pos:line="13" pos:column="48"/></name> <operator pos:line="13" pos:column="49">=<pos:position pos:line="13" pos:column="50"/></operator>
		<call><name pos:line="14" pos:column="17">resolve_refdup<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><literal type="string" pos:line="14" pos:column="32">"HEAD"<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">RESOLVE_REF_READING<pos:position pos:line="14" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="61">head_sha1<pos:position pos:line="14" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="72">NULL<pos:position pos:line="14" pos:column="76"/></name></expr></argument>)<pos:position pos:line="14" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="78"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">current_branch<pos:position pos:line="15" pos:column="28"/></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">die<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><literal type="string" pos:line="16" pos:column="21">"No current branch"<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">starts_with<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">current_branch<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="41">"refs/heads/"<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="56"/></condition><then pos:line="17" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">current_branch<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">+=<pos:position pos:line="18" pos:column="34"/></operator> <literal type="number" pos:line="18" pos:column="35">11<pos:position pos:line="18" pos:column="37"/></literal></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">find_merge_parents<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><operator pos:line="20" pos:column="28">&amp;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="29">merge_parents<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">in<pos:position pos:line="20" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="48">head_sha1<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>

	<comment type="block" pos:line="22" pos:column="9">/* get a line */</comment>
	<while pos:line="23" pos:column="9">while <condition pos:line="23" pos:column="15">(<expr><name pos:line="23" pos:column="16">pos<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">&lt;<pos:position pos:line="23" pos:column="24"/></operator> <name><name pos:line="23" pos:column="22">in<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">len<pos:position pos:line="23" pos:column="29"/></name></name></expr>)<pos:position pos:line="23" pos:column="30"/></condition> <block pos:line="23" pos:column="31">{
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">int<pos:position pos:line="24" pos:column="20"/></name></type> <name pos:line="24" pos:column="21">len<pos:position pos:line="24" pos:column="24"/></name></decl>;<pos:position pos:line="24" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">char<pos:position pos:line="25" pos:column="21"/></name> <modifier pos:line="25" pos:column="22">*<pos:position pos:line="25" pos:column="23"/></modifier></type><name pos:line="25" pos:column="23">newline<pos:position pos:line="25" pos:column="30"/></name></decl>, <modifier pos:line="25" pos:column="32">*<pos:position pos:line="25" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="25" pos:column="33">p<pos:position pos:line="25" pos:column="34"/></name> <init pos:line="25" pos:column="35">= <expr><name><name pos:line="25" pos:column="37">in<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">-&gt;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="41">buf<pos:position pos:line="25" pos:column="44"/></name></name> <operator pos:line="25" pos:column="45">+<pos:position pos:line="25" pos:column="46"/></operator> <name pos:line="25" pos:column="47">pos<pos:position pos:line="25" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="51"/></decl_stmt>

		<expr_stmt><expr><name pos:line="27" pos:column="17">newline<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <call><name pos:line="27" pos:column="27">strchr<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">p<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="27" pos:column="37">'\n'<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">len<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="28" pos:column="23">newline<pos:position pos:line="28" pos:column="30"/></name></expr> ?<pos:position pos:line="28" pos:column="32"/></condition><then pos:line="28" pos:column="32"> <expr><name pos:line="28" pos:column="33">newline<pos:position pos:line="28" pos:column="40"/></name> <operator pos:line="28" pos:column="41">-<pos:position pos:line="28" pos:column="42"/></operator> <name pos:line="28" pos:column="43">p<pos:position pos:line="28" pos:column="44"/></name></expr> <pos:position pos:line="28" pos:column="45"/></then><else pos:line="28" pos:column="45">: <expr><call><name pos:line="28" pos:column="47">strlen<pos:position pos:line="28" pos:column="53"/></name><argument_list pos:line="28" pos:column="53">(<argument><expr><name pos:line="28" pos:column="54">p<pos:position pos:line="28" pos:column="55"/></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="28" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">pos<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">+=<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">len<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">+<pos:position pos:line="29" pos:column="29"/></operator> <operator pos:line="29" pos:column="30">!<pos:position pos:line="29" pos:column="31"/></operator><operator pos:line="29" pos:column="31">!<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="32">newline<pos:position pos:line="29" pos:column="39"/></name></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">i<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">++<pos:position pos:line="30" pos:column="20"/></operator></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">p<pos:position pos:line="31" pos:column="18"/></name><index pos:line="31" pos:column="18">[<expr><name pos:line="31" pos:column="19">len<pos:position pos:line="31" pos:column="22"/></name></expr>]<pos:position pos:line="31" pos:column="23"/></index></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <literal type="number" pos:line="31" pos:column="26">0<pos:position pos:line="31" pos:column="27"/></literal></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">handle_line<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">p<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="36">&amp;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="37">merge_parents<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="25">die<pos:position pos:line="33" pos:column="28"/></name> <argument_list pos:line="33" pos:column="29">(<argument><expr><literal type="string" pos:line="33" pos:column="30">"Error in line %d: %.*s"<pos:position pos:line="33" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="56">i<pos:position pos:line="33" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="59">len<pos:position pos:line="33" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="64">p<pos:position pos:line="33" pos:column="65"/></name></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block></while>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">opts<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">add_title<pos:position pos:line="36" pos:column="28"/></name></name> <operator pos:line="36" pos:column="29">&amp;&amp;<pos:position pos:line="36" pos:column="39"/></operator> <name><name pos:line="36" pos:column="32">srcs<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">.<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="37">nr<pos:position pos:line="36" pos:column="39"/></name></name></expr>)<pos:position pos:line="36" pos:column="40"/></condition><then pos:line="36" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="17">fmt_merge_msg_title<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">out<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="42">current_branch<pos:position pos:line="37" pos:column="56"/></name></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="58"/></expr_stmt></block></then></if>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">origins<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">.<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="21">nr<pos:position pos:line="39" pos:column="23"/></name></name></expr>)<pos:position pos:line="39" pos:column="24"/></condition><then pos:line="39" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">fmt_merge_msg_sigs<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">out<pos:position pos:line="40" pos:column="39"/></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt></block></then></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name><name pos:line="42" pos:column="13">opts<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">-&gt;<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="19">shortlog_len<pos:position pos:line="42" pos:column="31"/></name></name></expr>)<pos:position pos:line="42" pos:column="32"/></condition><then pos:line="42" pos:column="32"> <block pos:line="42" pos:column="33">{
		<decl_stmt><decl><type><name><name pos:line="43" pos:column="17">struct<pos:position pos:line="43" pos:column="23"/></name> <name pos:line="43" pos:column="24">commit<pos:position pos:line="43" pos:column="30"/></name></name> <modifier pos:line="43" pos:column="31">*<pos:position pos:line="43" pos:column="32"/></modifier></type><name pos:line="43" pos:column="32">head<pos:position pos:line="43" pos:column="36"/></name></decl>;<pos:position pos:line="43" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="44" pos:column="17">struct<pos:position pos:line="44" pos:column="23"/></name> <name pos:line="44" pos:column="24">rev_info<pos:position pos:line="44" pos:column="32"/></name></name></type> <name pos:line="44" pos:column="33">rev<pos:position pos:line="44" pos:column="36"/></name></decl>;<pos:position pos:line="44" pos:column="37"/></decl_stmt>

		<expr_stmt><expr><name pos:line="46" pos:column="17">head<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <call><name pos:line="46" pos:column="24">lookup_commit_or_die<pos:position pos:line="46" pos:column="44"/></name><argument_list pos:line="46" pos:column="44">(<argument><expr><name pos:line="46" pos:column="45">head_sha1<pos:position pos:line="46" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="56">"HEAD"<pos:position pos:line="46" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">init_revisions<pos:position pos:line="47" pos:column="31"/></name><argument_list pos:line="47" pos:column="31">(<argument><expr><operator pos:line="47" pos:column="32">&amp;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="33">rev<pos:position pos:line="47" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="38">NULL<pos:position pos:line="47" pos:column="42"/></name></expr></argument>)<pos:position pos:line="47" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="48" pos:column="17">rev<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">.<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="21">commit_format<pos:position pos:line="48" pos:column="34"/></name></name> <operator pos:line="48" pos:column="35">=<pos:position pos:line="48" pos:column="36"/></operator> <name pos:line="48" pos:column="37">CMIT_FMT_ONELINE<pos:position pos:line="48" pos:column="53"/></name></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="49" pos:column="17">rev<pos:position pos:line="49" pos:column="20"/></name><operator pos:line="49" pos:column="20">.<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="21">ignore_merges<pos:position pos:line="49" pos:column="34"/></name></name> <operator pos:line="49" pos:column="35">=<pos:position pos:line="49" pos:column="36"/></operator> <literal type="number" pos:line="49" pos:column="37">1<pos:position pos:line="49" pos:column="38"/></literal></expr>;<pos:position pos:line="49" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="50" pos:column="17">rev<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">.<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="21">limited<pos:position pos:line="50" pos:column="28"/></name></name> <operator pos:line="50" pos:column="29">=<pos:position pos:line="50" pos:column="30"/></operator> <literal type="number" pos:line="50" pos:column="31">1<pos:position pos:line="50" pos:column="32"/></literal></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="52" pos:column="17">strbuf_complete_line<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">(<argument><expr><name pos:line="52" pos:column="38">out<pos:position pos:line="52" pos:column="41"/></name></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt>

		<for pos:line="54" pos:column="17">for <control pos:line="54" pos:column="21">(<init><expr><name pos:line="54" pos:column="22">i<pos:position pos:line="54" pos:column="23"/></name> <operator pos:line="54" pos:column="24">=<pos:position pos:line="54" pos:column="25"/></operator> <literal type="number" pos:line="54" pos:column="26">0<pos:position pos:line="54" pos:column="27"/></literal></expr>;<pos:position pos:line="54" pos:column="28"/></init> <condition><expr><name pos:line="54" pos:column="29">i<pos:position pos:line="54" pos:column="30"/></name> <operator pos:line="54" pos:column="31">&lt;<pos:position pos:line="54" pos:column="35"/></operator> <name><name pos:line="54" pos:column="33">origins<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">.<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="41">nr<pos:position pos:line="54" pos:column="43"/></name></name></expr>;<pos:position pos:line="54" pos:column="44"/></condition> <incr><expr><name pos:line="54" pos:column="45">i<pos:position pos:line="54" pos:column="46"/></name><operator pos:line="54" pos:column="46">++<pos:position pos:line="54" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="49"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="25">shortlog<pos:position pos:line="55" pos:column="33"/></name><argument_list pos:line="55" pos:column="33">(<argument><expr><name><name pos:line="55" pos:column="34">origins<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">.<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="42">items<pos:position pos:line="55" pos:column="47"/></name><index pos:line="55" pos:column="47">[<expr><name pos:line="55" pos:column="48">i<pos:position pos:line="55" pos:column="49"/></name></expr>]<pos:position pos:line="55" pos:column="50"/></index></name><operator pos:line="55" pos:column="50">.<pos:position pos:line="55" pos:column="51"/></operator><name pos:line="55" pos:column="51">string<pos:position pos:line="55" pos:column="57"/></name></expr></argument>,
				 <argument><expr><name><name pos:line="56" pos:column="34">origins<pos:position pos:line="56" pos:column="41"/></name><operator pos:line="56" pos:column="41">.<pos:position pos:line="56" pos:column="42"/></operator><name pos:line="56" pos:column="42">items<pos:position pos:line="56" pos:column="47"/></name><index pos:line="56" pos:column="47">[<expr><name pos:line="56" pos:column="48">i<pos:position pos:line="56" pos:column="49"/></name></expr>]<pos:position pos:line="56" pos:column="50"/></index></name><operator pos:line="56" pos:column="50">.<pos:position pos:line="56" pos:column="51"/></operator><name pos:line="56" pos:column="51">util<pos:position pos:line="56" pos:column="55"/></name></expr></argument>,
				 <argument><expr><name pos:line="57" pos:column="34">head<pos:position pos:line="57" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="40">&amp;<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="41">rev<pos:position pos:line="57" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="46">opts<pos:position pos:line="57" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="52">out<pos:position pos:line="57" pos:column="55"/></name></expr></argument>)<pos:position pos:line="57" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="57"/></expr_stmt></block></for>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="60" pos:column="9">strbuf_complete_line<pos:position pos:line="60" pos:column="29"/></name><argument_list pos:line="60" pos:column="29">(<argument><expr><name pos:line="60" pos:column="30">out<pos:position pos:line="60" pos:column="33"/></name></expr></argument>)<pos:position pos:line="60" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">free<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">(<argument><expr><name pos:line="61" pos:column="14">current_branch_to_free<pos:position pos:line="61" pos:column="36"/></name></expr></argument>)<pos:position pos:line="61" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">free<pos:position pos:line="62" pos:column="13"/></name><argument_list pos:line="62" pos:column="13">(<argument><expr><name><name pos:line="62" pos:column="14">merge_parents<pos:position pos:line="62" pos:column="27"/></name><operator pos:line="62" pos:column="27">.<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="28">item<pos:position pos:line="62" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="34"/></expr_stmt>
	<return pos:line="63" pos:column="9">return <expr><literal type="number" pos:line="63" pos:column="16">0<pos:position pos:line="63" pos:column="17"/></literal></expr>;<pos:position pos:line="63" pos:column="18"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

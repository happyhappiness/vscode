<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_435_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">has_changes<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">mmfile_t<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">one<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">mmfile_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">two<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
		       <parameter><decl><type><name><name pos:line="2" pos:column="24">struct<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">diff_options<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">o<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="3" pos:column="24">regex_t<pos:position pos:line="3" pos:column="31"/></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">regexp<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="41">kwset_t<pos:position pos:line="3" pos:column="48"/></name></type> <name pos:line="3" pos:column="49">kws<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="53"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">one_contains<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><ternary><condition><expr><name pos:line="5" pos:column="37">one<pos:position pos:line="5" pos:column="40"/></name></expr> ?<pos:position pos:line="5" pos:column="42"/></condition><then pos:line="5" pos:column="42"> <expr><call><name pos:line="5" pos:column="43">contains<pos:position pos:line="5" pos:column="51"/></name><argument_list pos:line="5" pos:column="51">(<argument><expr><name pos:line="5" pos:column="52">one<pos:position pos:line="5" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="57">regexp<pos:position pos:line="5" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="65">kws<pos:position pos:line="5" pos:column="68"/></name></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr> <pos:position pos:line="5" pos:column="70"/></then><else pos:line="5" pos:column="70">: <expr><literal type="number" pos:line="5" pos:column="72">0<pos:position pos:line="5" pos:column="73"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="74"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">int<pos:position pos:line="6" pos:column="21"/></name></type> <name pos:line="6" pos:column="22">two_contains<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><ternary><condition><expr><name pos:line="6" pos:column="37">two<pos:position pos:line="6" pos:column="40"/></name></expr> ?<pos:position pos:line="6" pos:column="42"/></condition><then pos:line="6" pos:column="42"> <expr><call><name pos:line="6" pos:column="43">contains<pos:position pos:line="6" pos:column="51"/></name><argument_list pos:line="6" pos:column="51">(<argument><expr><name pos:line="6" pos:column="52">two<pos:position pos:line="6" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="57">regexp<pos:position pos:line="6" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="65">kws<pos:position pos:line="6" pos:column="68"/></name></expr></argument>)<pos:position pos:line="6" pos:column="69"/></argument_list></call></expr> <pos:position pos:line="6" pos:column="70"/></then><else pos:line="6" pos:column="70">: <expr><literal type="number" pos:line="6" pos:column="72">0<pos:position pos:line="6" pos:column="73"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="74"/></decl_stmt>
	<return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">one_contains<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">!=<pos:position pos:line="7" pos:column="31"/></operator> <name pos:line="7" pos:column="32">two_contains<pos:position pos:line="7" pos:column="44"/></name></expr>;<pos:position pos:line="7" pos:column="45"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

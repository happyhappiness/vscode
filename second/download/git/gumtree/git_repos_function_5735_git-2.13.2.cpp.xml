<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5735_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">prune<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">ac<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">av<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">prefix<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">option<pos:position pos:line="3" pos:column="22"/></name></name></type> <name><name pos:line="3" pos:column="23">options<pos:position pos:line="3" pos:column="30"/></name><index pos:line="3" pos:column="30">[]<pos:position pos:line="3" pos:column="32"/></index></name> <init pos:line="3" pos:column="33">= <expr><block pos:line="3" pos:column="35">{
		<expr><call><name pos:line="4" pos:column="17">OPT__DRY_RUN<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><operator pos:line="4" pos:column="30">&amp;<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="31">show_only<pos:position pos:line="4" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="42">N_<pos:position pos:line="4" pos:column="44"/></name><argument_list pos:line="4" pos:column="44">(<argument><expr><literal type="string" pos:line="4" pos:column="45">"do not remove, show only"<pos:position pos:line="4" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="73"/></argument_list></call></expr>,
		<expr><call><name pos:line="5" pos:column="17">OPT__VERBOSE<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><operator pos:line="5" pos:column="30">&amp;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="31">verbose<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="40">N_<pos:position pos:line="5" pos:column="42"/></name><argument_list pos:line="5" pos:column="42">(<argument><expr><literal type="string" pos:line="5" pos:column="43">"report pruned working trees"<pos:position pos:line="5" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="74"/></argument_list></call></expr>,
		<expr><call><name pos:line="6" pos:column="17">OPT_EXPIRY_DATE<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><literal type="number" pos:line="6" pos:column="33">0<pos:position pos:line="6" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="36">"expire"<pos:position pos:line="6" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="46">&amp;<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="47">expire<pos:position pos:line="6" pos:column="53"/></name></expr></argument>,
				<argument><expr><call><name pos:line="7" pos:column="33">N_<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><literal type="string" pos:line="7" pos:column="36">"expire working trees older than &lt;time&gt;"<pos:position pos:line="7" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="78"/></argument_list></call></expr>,
		<macro><name pos:line="8" pos:column="17">OPT_END<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">()<pos:position pos:line="8" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="9" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">expire<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">ULONG_MAX<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">ac<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">parse_options<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">ac<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">av<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">prefix<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">options<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">worktree_usage<pos:position pos:line="12" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="69">0<pos:position pos:line="12" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">ac<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">usage_with_options<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><name pos:line="14" pos:column="36">worktree_usage<pos:position pos:line="14" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="52">options<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">prune_worktrees<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">()<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
	<return pos:line="16" pos:column="9">return <expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

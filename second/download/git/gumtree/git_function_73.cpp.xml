<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_73.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">create_graft<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">argc<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier><modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">argv<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">force<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">old<pos:position pos:line="3" pos:column="26"/></name><index pos:line="3" pos:column="26">[<expr><literal type="number" pos:line="3" pos:column="27">20<pos:position pos:line="3" pos:column="29"/></literal></expr>]<pos:position pos:line="3" pos:column="30"/></index></name></decl>, new[20];<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">old_ref<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name><name pos:line="4" pos:column="31">argv<pos:position pos:line="4" pos:column="35"/></name><index pos:line="4" pos:column="35">[<expr><literal type="number" pos:line="4" pos:column="36">0<pos:position pos:line="4" pos:column="37"/></literal></expr>]<pos:position pos:line="4" pos:column="38"/></index></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">commit<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">buf<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">STRBUF_INIT<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">buffer<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">long<pos:position pos:line="8" pos:column="22"/></name></type> <name pos:line="8" pos:column="23">size<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">get_sha1<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">old_ref<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="31">old<pos:position pos:line="10" pos:column="34"/></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call> <operator pos:line="10" pos:column="36">&lt;<pos:position pos:line="10" pos:column="40"/></operator> <literal type="number" pos:line="10" pos:column="38">0<pos:position pos:line="10" pos:column="39"/></literal></expr>)<pos:position pos:line="10" pos:column="40"/></condition><then pos:line="10" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">die<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><call><name pos:line="11" pos:column="21">_<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><literal type="string" pos:line="11" pos:column="23">"Not a valid object name: '%s'"<pos:position pos:line="11" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="57">old_ref<pos:position pos:line="11" pos:column="64"/></name></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="66"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="12" pos:column="9">commit<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">lookup_commit_or_die<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><name pos:line="12" pos:column="39">old<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">old_ref<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">buffer<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">get_commit_buffer<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><name pos:line="14" pos:column="36">commit<pos:position pos:line="14" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="44">&amp;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="45">size<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">strbuf_add<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><operator pos:line="15" pos:column="20">&amp;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="21">buf<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="26">buffer<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">size<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">unuse_commit_buffer<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">commit<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">buffer<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">replace_parents<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><operator pos:line="18" pos:column="25">&amp;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="26">buf<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="31">argc<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">-<pos:position pos:line="18" pos:column="37"/></operator> <literal type="number" pos:line="18" pos:column="38">1<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="41">&amp;<pos:position pos:line="18" pos:column="46"/></operator><name><name pos:line="18" pos:column="42">argv<pos:position pos:line="18" pos:column="46"/></name><index pos:line="18" pos:column="46">[<expr><literal type="number" pos:line="18" pos:column="47">1<pos:position pos:line="18" pos:column="48"/></literal></expr>]<pos:position pos:line="18" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">remove_signature<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><operator pos:line="20" pos:column="30">&amp;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="31">buf<pos:position pos:line="20" pos:column="34"/></name></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36"> <block pos:line="20" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">warning<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><call><name pos:line="21" pos:column="25">_<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><literal type="string" pos:line="21" pos:column="27">"the original commit '%s' has a gpg signature."<pos:position pos:line="21" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="77">old_ref<pos:position pos:line="21" pos:column="84"/></name></expr></argument>)<pos:position pos:line="21" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="86"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">warning<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><call><name pos:line="22" pos:column="25">_<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><literal type="string" pos:line="22" pos:column="27">"the signature will be removed in the replacement commit!"<pos:position pos:line="22" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="88"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">check_mergetags<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">commit<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="33">argc<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">argv<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">write_sha1_file<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name><name pos:line="27" pos:column="29">buf<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">.<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="33">buf<pos:position pos:line="27" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="38">buf<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">.<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="42">len<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">commit_type<pos:position pos:line="27" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="60">new<pos:position pos:line="27" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="65"/></condition><then pos:line="27" pos:column="65">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">die<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><call><name pos:line="28" pos:column="21">_<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><literal type="string" pos:line="28" pos:column="23">"could not write replacement commit for: '%s'"<pos:position pos:line="28" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="72">old_ref<pos:position pos:line="28" pos:column="79"/></name></expr></argument>)<pos:position pos:line="28" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="81"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="30" pos:column="9">strbuf_release<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><operator pos:line="30" pos:column="24">&amp;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="25">buf<pos:position pos:line="30" pos:column="28"/></name></expr></argument>)<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">hashcmp<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">old<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="27">new<pos:position pos:line="32" pos:column="30"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="32"/></condition><then pos:line="32" pos:column="32">
		<block type="pseudo"><return pos:line="33" pos:column="17">return <expr><call><name pos:line="33" pos:column="24">error<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><literal type="string" pos:line="33" pos:column="30">"new commit is the same as the old one: '%s'"<pos:position pos:line="33" pos:column="75"/></literal></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="77">sha1_to_hex<pos:position pos:line="33" pos:column="88"/></name><argument_list pos:line="33" pos:column="88">(<argument><expr><name pos:line="33" pos:column="89">old<pos:position pos:line="33" pos:column="92"/></name></expr></argument>)<pos:position pos:line="33" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="95"/></return></block></then></if>

	<return pos:line="35" pos:column="9">return <expr><call><name pos:line="35" pos:column="16">replace_object_sha1<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name pos:line="35" pos:column="36">old_ref<pos:position pos:line="35" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="45">old<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="50">"replacement"<pos:position pos:line="35" pos:column="63"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="65">new<pos:position pos:line="35" pos:column="68"/></operator></expr></argument>, <argument><expr><name pos:line="35" pos:column="70">force<pos:position pos:line="35" pos:column="75"/></name></expr></argument>)<pos:position pos:line="35" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="77"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

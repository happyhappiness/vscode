<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_539_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">objectname_atom_parser<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">ref_format<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">format<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="69">struct<pos:position pos:line="1" pos:column="75"/></name> <name pos:line="1" pos:column="76">used_atom<pos:position pos:line="1" pos:column="85"/></name></name> <modifier pos:line="1" pos:column="86">*<pos:position pos:line="1" pos:column="87"/></modifier></type><name pos:line="1" pos:column="87">atom<pos:position pos:line="1" pos:column="91"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="93">const<pos:position pos:line="1" pos:column="98"/></specifier> <name pos:line="1" pos:column="99">char<pos:position pos:line="1" pos:column="103"/></name> <modifier pos:line="1" pos:column="104">*<pos:position pos:line="1" pos:column="105"/></modifier></type><name pos:line="1" pos:column="105">arg<pos:position pos:line="1" pos:column="108"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="109"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">arg<pos:position pos:line="3" pos:column="17"/></name></expr>)<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="4" pos:column="17">atom<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">-&gt;<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="23">u<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">.<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">objectname<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">.<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="36">option<pos:position pos:line="4" pos:column="42"/></name></name> <operator pos:line="4" pos:column="43">=<pos:position pos:line="4" pos:column="44"/></operator> <name pos:line="4" pos:column="45">O_FULL<pos:position pos:line="4" pos:column="51"/></name></expr>;<pos:position pos:line="4" pos:column="52"/></expr_stmt></block></then>
	<elseif pos:line="5" pos:column="9">else <if pos:line="5" pos:column="14">if <condition pos:line="5" pos:column="17">(<expr><operator pos:line="5" pos:column="18">!<pos:position pos:line="5" pos:column="19"/></operator><call><name pos:line="5" pos:column="19">strcmp<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">arg<pos:position pos:line="5" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="31">"short"<pos:position pos:line="5" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="40"/></condition><then pos:line="5" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="6" pos:column="17">atom<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">u<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">.<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">objectname<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">.<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="36">option<pos:position pos:line="6" pos:column="42"/></name></name> <operator pos:line="6" pos:column="43">=<pos:position pos:line="6" pos:column="44"/></operator> <name pos:line="6" pos:column="45">O_SHORT<pos:position pos:line="6" pos:column="52"/></name></expr>;<pos:position pos:line="6" pos:column="53"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="7" pos:column="9">else <if pos:line="7" pos:column="14">if <condition pos:line="7" pos:column="17">(<expr><call><name pos:line="7" pos:column="18">skip_prefix<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">arg<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="35">"short="<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="45">&amp;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="46">arg<pos:position pos:line="7" pos:column="49"/></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="51"/></condition><then pos:line="7" pos:column="51"> <block pos:line="7" pos:column="52">{
		<expr_stmt><expr><name><name pos:line="8" pos:column="17">atom<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">u<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">.<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">objectname<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">.<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">option<pos:position pos:line="8" pos:column="42"/></name></name> <operator pos:line="8" pos:column="43">=<pos:position pos:line="8" pos:column="44"/></operator> <name pos:line="8" pos:column="45">O_LENGTH<pos:position pos:line="8" pos:column="53"/></name></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">strtoul_ui<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">arg<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="37">10<pos:position pos:line="9" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="41">&amp;<pos:position pos:line="9" pos:column="46"/></operator><name><name pos:line="9" pos:column="42">atom<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">-&gt;<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="48">u<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">.<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="50">objectname<pos:position pos:line="9" pos:column="60"/></name><operator pos:line="9" pos:column="60">.<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="61">length<pos:position pos:line="9" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="68"/></argument_list></call> <operator pos:line="9" pos:column="69">||<pos:position pos:line="9" pos:column="71"/></operator>
		    <name><name pos:line="10" pos:column="21">atom<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">u<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">.<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">objectname<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">.<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">length<pos:position pos:line="10" pos:column="46"/></name></name> <operator pos:line="10" pos:column="47">==<pos:position pos:line="10" pos:column="49"/></operator> <literal type="number" pos:line="10" pos:column="50">0<pos:position pos:line="10" pos:column="51"/></literal></expr>)<pos:position pos:line="10" pos:column="52"/></condition><then pos:line="10" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="25">die<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><call><name pos:line="11" pos:column="29">_<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><literal type="string" pos:line="11" pos:column="31">"positive value expected objectname:short=%s"<pos:position pos:line="11" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="79">arg<pos:position pos:line="11" pos:column="82"/></name></expr></argument>)<pos:position pos:line="11" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="84"/></expr_stmt></block></then></if>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name><name pos:line="12" pos:column="21">atom<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">u<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">.<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">objectname<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">.<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">length<pos:position pos:line="12" pos:column="46"/></name></name> <operator pos:line="12" pos:column="47">&lt;<pos:position pos:line="12" pos:column="51"/></operator> <name pos:line="12" pos:column="49">MINIMUM_ABBREV<pos:position pos:line="12" pos:column="63"/></name></expr>)<pos:position pos:line="12" pos:column="64"/></condition><then pos:line="12" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="25">atom<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">u<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">.<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">objectname<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">.<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="44">length<pos:position pos:line="13" pos:column="50"/></name></name> <operator pos:line="13" pos:column="51">=<pos:position pos:line="13" pos:column="52"/></operator> <name pos:line="13" pos:column="53">MINIMUM_ABBREV<pos:position pos:line="13" pos:column="67"/></name></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt></block></then></if>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if></elseif> <else pos:line="14" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">die<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><call><name pos:line="15" pos:column="21">_<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><literal type="string" pos:line="15" pos:column="23">"unrecognized %%(objectname) argument: %s"<pos:position pos:line="15" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="68">arg<pos:position pos:line="15" pos:column="71"/></name></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt></block></else></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

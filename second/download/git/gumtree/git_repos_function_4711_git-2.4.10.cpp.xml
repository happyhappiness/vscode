<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4711_git-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_v2_anomalous_offsets<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">packed_git<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">p<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
				      <parameter><decl><type><name><name pos:line="2" pos:column="39">struct<pos:position pos:line="2" pos:column="45"/></name> <name pos:line="2" pos:column="46">pack_idx_option<pos:position pos:line="2" pos:column="61"/></name></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">opts<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">uint32_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">idx1<pos:position pos:line="4" pos:column="29"/></name></decl>, <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="32">idx2<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">uint32_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">i<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* The address of the 4-byte offset table */</comment>
	<expr_stmt><expr><name pos:line="8" pos:column="9">idx1<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><operator pos:line="8" pos:column="17">(<pos:position pos:line="8" pos:column="18"/></operator><operator pos:line="8" pos:column="18">(<pos:position pos:line="8" pos:column="19"/></operator><specifier pos:line="8" pos:column="19">const<pos:position pos:line="8" pos:column="24"/></specifier> <name pos:line="8" pos:column="25">uint32_t<pos:position pos:line="8" pos:column="33"/></name> <operator pos:line="8" pos:column="34">*<pos:position pos:line="8" pos:column="35"/></operator><operator pos:line="8" pos:column="35">)<pos:position pos:line="8" pos:column="36"/></operator><name><name pos:line="8" pos:column="36">p<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">index_data<pos:position pos:line="8" pos:column="49"/></name></name><operator pos:line="8" pos:column="49">)<pos:position pos:line="8" pos:column="50"/></operator>
		<operator pos:line="9" pos:column="17">+<pos:position pos:line="9" pos:column="18"/></operator> <literal type="number" pos:line="9" pos:column="19">2<pos:position pos:line="9" pos:column="20"/></literal> <comment type="block" pos:line="9" pos:column="21">/* 8-byte header */</comment>
		<operator pos:line="10" pos:column="17">+<pos:position pos:line="10" pos:column="18"/></operator> <literal type="number" pos:line="10" pos:column="19">256<pos:position pos:line="10" pos:column="22"/></literal> <comment type="block" pos:line="10" pos:column="23">/* fan out */</comment>
		<operator pos:line="11" pos:column="17">+<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">5<pos:position pos:line="11" pos:column="20"/></literal> <operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator> <name><name pos:line="11" pos:column="23">p<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">num_objects<pos:position pos:line="11" pos:column="37"/></name></name> <comment type="block" pos:line="11" pos:column="38">/* 20-byte SHA-1 table */</comment>
		<operator pos:line="12" pos:column="17">+<pos:position pos:line="12" pos:column="18"/></operator> <name><name pos:line="12" pos:column="19">p<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">num_objects<pos:position pos:line="12" pos:column="33"/></name></name> <comment type="block" pos:line="12" pos:column="34">/* CRC32 table */</comment>
		<operator pos:line="13" pos:column="17">)<pos:position pos:line="13" pos:column="18"/></operator></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>

	<comment type="block" pos:line="15" pos:column="9">/* The address of the 8-byte offset table */</comment>
	<expr_stmt><expr><name pos:line="16" pos:column="9">idx2<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">idx1<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">+<pos:position pos:line="16" pos:column="22"/></operator> <name><name pos:line="16" pos:column="23">p<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">num_objects<pos:position pos:line="16" pos:column="37"/></name></name></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>

	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="25">p<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">-&gt;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="28">num_objects<pos:position pos:line="18" pos:column="39"/></name></name></expr>;<pos:position pos:line="18" pos:column="40"/></condition> <incr><expr><name pos:line="18" pos:column="41">i<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">++<pos:position pos:line="18" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="45"/></control> <block pos:line="18" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">uint32_t<pos:position pos:line="19" pos:column="25"/></name></type> <name pos:line="19" pos:column="26">off<pos:position pos:line="19" pos:column="29"/></name> <init pos:line="19" pos:column="30">= <expr><call><name pos:line="19" pos:column="32">ntohl<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name><name pos:line="19" pos:column="38">idx1<pos:position pos:line="19" pos:column="42"/></name><index pos:line="19" pos:column="42">[<expr><name pos:line="19" pos:column="43">i<pos:position pos:line="19" pos:column="44"/></name></expr>]<pos:position pos:line="19" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="47"/></decl_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><operator pos:line="20" pos:column="22">(<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">off<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">&amp;<pos:position pos:line="20" pos:column="32"/></operator> <literal type="number" pos:line="20" pos:column="29">0x80000000<pos:position pos:line="20" pos:column="39"/></literal><operator pos:line="20" pos:column="39">)<pos:position pos:line="20" pos:column="40"/></operator></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41">
			<block type="pseudo"><continue pos:line="21" pos:column="25">continue;<pos:position pos:line="21" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="22" pos:column="17">off<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="23">off<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">&amp;<pos:position pos:line="22" pos:column="32"/></operator> <literal type="number" pos:line="22" pos:column="29">0x7fffffff<pos:position pos:line="22" pos:column="39"/></literal></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name><name pos:line="23" pos:column="21">idx2<pos:position pos:line="23" pos:column="25"/></name><index pos:line="23" pos:column="25">[<expr><name pos:line="23" pos:column="26">off<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">*<pos:position pos:line="23" pos:column="31"/></operator> <literal type="number" pos:line="23" pos:column="32">2<pos:position pos:line="23" pos:column="33"/></literal></expr>]<pos:position pos:line="23" pos:column="34"/></index></name></expr>)<pos:position pos:line="23" pos:column="35"/></condition><then pos:line="23" pos:column="35">
			<block type="pseudo"><continue pos:line="24" pos:column="25">continue;<pos:position pos:line="24" pos:column="34"/></continue></block></then></if>
		<comment type="block" pos:line="25" pos:column="17">/*
		 * The real offset is ntohl(idx2[off * 2]) in high 4
		 * octets, and ntohl(idx2[off * 2 + 1]) in low 4
		 * octets.  But idx2[off * 2] is Zero!!!
		 */</comment>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">ALLOC_GROW<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name><name pos:line="30" pos:column="28">opts<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">-&gt;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="34">anomaly<pos:position pos:line="30" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="43">opts<pos:position pos:line="30" pos:column="47"/></name><operator pos:line="30" pos:column="47">-&gt;<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="49">anomaly_nr<pos:position pos:line="30" pos:column="59"/></name></name> <operator pos:line="30" pos:column="60">+<pos:position pos:line="30" pos:column="61"/></operator> <literal type="number" pos:line="30" pos:column="62">1<pos:position pos:line="30" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="65">opts<pos:position pos:line="30" pos:column="69"/></name><operator pos:line="30" pos:column="69">-&gt;<pos:position pos:line="30" pos:column="74"/></operator><name pos:line="30" pos:column="71">anomaly_alloc<pos:position pos:line="30" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="86"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">opts<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">anomaly<pos:position pos:line="31" pos:column="30"/></name><index pos:line="31" pos:column="30">[<expr><name><name pos:line="31" pos:column="31">opts<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">-&gt;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="37">anomaly_nr<pos:position pos:line="31" pos:column="47"/></name></name><operator pos:line="31" pos:column="47">++<pos:position pos:line="31" pos:column="49"/></operator></expr>]<pos:position pos:line="31" pos:column="50"/></index></name> <operator pos:line="31" pos:column="51">=<pos:position pos:line="31" pos:column="52"/></operator> <call><name pos:line="31" pos:column="53">ntohl<pos:position pos:line="31" pos:column="58"/></name><argument_list pos:line="31" pos:column="58">(<argument><expr><name><name pos:line="31" pos:column="59">idx2<pos:position pos:line="31" pos:column="63"/></name><index pos:line="31" pos:column="63">[<expr><name pos:line="31" pos:column="64">off<pos:position pos:line="31" pos:column="67"/></name> <operator pos:line="31" pos:column="68">*<pos:position pos:line="31" pos:column="69"/></operator> <literal type="number" pos:line="31" pos:column="70">2<pos:position pos:line="31" pos:column="71"/></literal> <operator pos:line="31" pos:column="72">+<pos:position pos:line="31" pos:column="73"/></operator> <literal type="number" pos:line="31" pos:column="74">1<pos:position pos:line="31" pos:column="75"/></literal></expr>]<pos:position pos:line="31" pos:column="76"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="78"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></for>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><literal type="number" pos:line="34" pos:column="13">1<pos:position pos:line="34" pos:column="14"/></literal> <operator pos:line="34" pos:column="15">&lt;<pos:position pos:line="34" pos:column="19"/></operator> <name><name pos:line="34" pos:column="17">opts<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">anomaly_nr<pos:position pos:line="34" pos:column="33"/></name></name></expr>)<pos:position pos:line="34" pos:column="34"/></condition><then pos:line="34" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">qsort<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name><name pos:line="35" pos:column="23">opts<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">anomaly<pos:position pos:line="35" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="38">opts<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">-&gt;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="44">anomaly_nr<pos:position pos:line="35" pos:column="54"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="56">sizeof<argument_list pos:line="35" pos:column="62">(<argument><expr><name pos:line="35" pos:column="63">uint32_t<pos:position pos:line="35" pos:column="71"/></name></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="35" pos:column="74">cmp_uint32<pos:position pos:line="35" pos:column="84"/></name></expr></argument>)<pos:position pos:line="35" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="86"/></expr_stmt></block></then></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

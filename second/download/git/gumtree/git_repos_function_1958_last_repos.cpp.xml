<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1958_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_hex_color<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">in<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">unsigned<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">out<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">int<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">val<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<expr_stmt><expr><name pos:line="4" pos:column="9">val<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">=<pos:position pos:line="4" pos:column="14"/></operator> <operator pos:line="4" pos:column="15">(<pos:position pos:line="4" pos:column="16"/></operator><call><name pos:line="4" pos:column="16">hexval<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name><name pos:line="4" pos:column="23">in<pos:position pos:line="4" pos:column="25"/></name><index pos:line="4" pos:column="25">[<expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr>]<pos:position pos:line="4" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></call> <operator pos:line="4" pos:column="30">&lt;&lt;<pos:position pos:line="4" pos:column="38"/></operator> <literal type="number" pos:line="4" pos:column="33">4<pos:position pos:line="4" pos:column="34"/></literal><operator pos:line="4" pos:column="34">)<pos:position pos:line="4" pos:column="35"/></operator> <operator pos:line="4" pos:column="36">|<pos:position pos:line="4" pos:column="37"/></operator> <call><name pos:line="4" pos:column="38">hexval<pos:position pos:line="4" pos:column="44"/></name><argument_list pos:line="4" pos:column="44">(<argument><expr><name><name pos:line="4" pos:column="45">in<pos:position pos:line="4" pos:column="47"/></name><index pos:line="4" pos:column="47">[<expr><literal type="number" pos:line="4" pos:column="48">1<pos:position pos:line="4" pos:column="49"/></literal></expr>]<pos:position pos:line="4" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="52"/></expr_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">val<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">&amp;<pos:position pos:line="5" pos:column="22"/></operator> <operator pos:line="5" pos:column="19">~<pos:position pos:line="5" pos:column="20"/></operator><literal type="number" pos:line="5" pos:column="20">0xff<pos:position pos:line="5" pos:column="24"/></literal></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">-<pos:position pos:line="6" pos:column="25"/></operator><literal type="number" pos:line="6" pos:column="25">1<pos:position pos:line="6" pos:column="26"/></literal></expr>;<pos:position pos:line="6" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">out<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <name pos:line="7" pos:column="16">val<pos:position pos:line="7" pos:column="19"/></name></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>
	<return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

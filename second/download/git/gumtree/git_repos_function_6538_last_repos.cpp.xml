<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6538_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fast_export_truncate<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">path<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">uint32_t<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">mode<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">fast_export_modify<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">(<argument><expr><name pos:line="3" pos:column="28">path<pos:position pos:line="3" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="34">mode<pos:position pos:line="3" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="40">"inline"<pos:position pos:line="3" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">printf<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><literal type="string" pos:line="4" pos:column="16">"data 0\n\n"<pos:position pos:line="4" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="30"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

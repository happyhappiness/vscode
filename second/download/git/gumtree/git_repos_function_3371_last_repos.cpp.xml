<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3371_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_content_type<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">strbuf<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">hdr<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">accepted_type<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">actual_type<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><call><name pos:line="3" pos:column="35">getenv<pos:position pos:line="3" pos:column="41"/></name><argument_list pos:line="3" pos:column="41">(<argument><expr><literal type="string" pos:line="3" pos:column="42">"CONTENT_TYPE"<pos:position pos:line="3" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">actual_type<pos:position pos:line="5" pos:column="25"/></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">actual_type<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">=<pos:position pos:line="6" pos:column="30"/></operator> <literal type="string" pos:line="6" pos:column="31">""<pos:position pos:line="6" pos:column="33"/></literal></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">strcmp<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">actual_type<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">accepted_type<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="48"/></condition><then pos:line="8" pos:column="48"> <block pos:line="8" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">http_status<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">hdr<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="34">415<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="39">"Unsupported Media Type"<pos:position pos:line="9" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">hdr_nocache<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">hdr<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">end_headers<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">hdr<pos:position pos:line="11" pos:column="32"/></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">format_write<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><literal type="number" pos:line="12" pos:column="30">1<pos:position pos:line="12" pos:column="31"/></literal></expr></argument>,
			<argument><expr><literal type="string" pos:line="13" pos:column="25">"Expected POST with Content-Type '%s',"<pos:position pos:line="13" pos:column="64"/></literal>
			<literal type="string" pos:line="14" pos:column="25">" but received '%s' instead.\n"<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>,
			<argument><expr><name pos:line="15" pos:column="25">accepted_type<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="40">actual_type<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">exit<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4143_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">dir_iterator_advance<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">dir_iterator<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">dir_iterator<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">dir_iterator_int<pos:position pos:line="3" pos:column="32"/></name></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">iter<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">=
		<expr><operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator>struct <name pos:line="4" pos:column="25">dir_iterator_int<pos:position pos:line="4" pos:column="41"/></name> <operator pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></operator><operator pos:line="4" pos:column="43">)<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="44">dir_iterator<pos:position pos:line="4" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr>)<pos:position pos:line="6" pos:column="18"/></condition> <block pos:line="6" pos:column="19">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">dir_iterator_level<pos:position pos:line="7" pos:column="42"/></name></name> <modifier pos:line="7" pos:column="43">*<pos:position pos:line="7" pos:column="44"/></modifier></type><name pos:line="7" pos:column="44">level<pos:position pos:line="7" pos:column="49"/></name> <init pos:line="7" pos:column="50">=
			<expr><operator pos:line="8" pos:column="25">&amp;<pos:position pos:line="8" pos:column="30"/></operator><name><name pos:line="8" pos:column="26">iter<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-&gt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="32">levels<pos:position pos:line="8" pos:column="38"/></name><index pos:line="8" pos:column="38">[<expr><name><name pos:line="8" pos:column="39">iter<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">levels_nr<pos:position pos:line="8" pos:column="54"/></name></name> <operator pos:line="8" pos:column="55">-<pos:position pos:line="8" pos:column="56"/></operator> <literal type="number" pos:line="8" pos:column="57">1<pos:position pos:line="8" pos:column="58"/></literal></expr>]<pos:position pos:line="8" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="60"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">dirent<pos:position pos:line="9" pos:column="30"/></name></name> <modifier pos:line="9" pos:column="31">*<pos:position pos:line="9" pos:column="32"/></modifier></type><name pos:line="9" pos:column="32">de<pos:position pos:line="9" pos:column="34"/></name></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><name><name pos:line="11" pos:column="22">level<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">initialized<pos:position pos:line="11" pos:column="40"/></name></name></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41"> <block pos:line="11" pos:column="42">{
			<comment type="block" pos:line="12" pos:column="25">/*
			 * Note: dir_iterator_begin() ensures that
			 * path is not the empty string.
			 */</comment>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><operator pos:line="16" pos:column="29">!<pos:position pos:line="16" pos:column="30"/></operator><call><name pos:line="16" pos:column="30">is_dir_sep<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><name><name pos:line="16" pos:column="41">iter<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">base<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">.<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="52">path<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">.<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="57">buf<pos:position pos:line="16" pos:column="60"/></name><index pos:line="16" pos:column="60">[<expr><name><name pos:line="16" pos:column="61">iter<pos:position pos:line="16" pos:column="65"/></name><operator pos:line="16" pos:column="65">-&gt;<pos:position pos:line="16" pos:column="70"/></operator><name pos:line="16" pos:column="67">base<pos:position pos:line="16" pos:column="71"/></name><operator pos:line="16" pos:column="71">.<pos:position pos:line="16" pos:column="72"/></operator><name pos:line="16" pos:column="72">path<pos:position pos:line="16" pos:column="76"/></name><operator pos:line="16" pos:column="76">.<pos:position pos:line="16" pos:column="77"/></operator><name pos:line="16" pos:column="77">len<pos:position pos:line="16" pos:column="80"/></name></name> <operator pos:line="16" pos:column="81">-<pos:position pos:line="16" pos:column="82"/></operator> <literal type="number" pos:line="16" pos:column="83">1<pos:position pos:line="16" pos:column="84"/></literal></expr>]<pos:position pos:line="16" pos:column="85"/></index></name></expr></argument>)<pos:position pos:line="16" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="87"/></condition><then pos:line="16" pos:column="87">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="33">strbuf_addch<pos:position pos:line="17" pos:column="45"/></name><argument_list pos:line="17" pos:column="45">(<argument><expr><operator pos:line="17" pos:column="46">&amp;<pos:position pos:line="17" pos:column="51"/></operator><name><name pos:line="17" pos:column="47">iter<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">-&gt;<pos:position pos:line="17" pos:column="56"/></operator><name pos:line="17" pos:column="53">base<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">.<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="58">path<pos:position pos:line="17" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="64">'/'<pos:position pos:line="17" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="69"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="18" pos:column="25">level<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">prefix_len<pos:position pos:line="18" pos:column="42"/></name></name> <operator pos:line="18" pos:column="43">=<pos:position pos:line="18" pos:column="44"/></operator> <name><name pos:line="18" pos:column="45">iter<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">base<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">.<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="56">path<pos:position pos:line="18" pos:column="60"/></name><operator pos:line="18" pos:column="60">.<pos:position pos:line="18" pos:column="61"/></operator><name pos:line="18" pos:column="61">len<pos:position pos:line="18" pos:column="64"/></name></name></expr>;<pos:position pos:line="18" pos:column="65"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="20" pos:column="25">level<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">dir<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">=<pos:position pos:line="20" pos:column="37"/></operator> <call><name pos:line="20" pos:column="38">opendir<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><name><name pos:line="20" pos:column="46">iter<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">-&gt;<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="52">base<pos:position pos:line="20" pos:column="56"/></name><operator pos:line="20" pos:column="56">.<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="57">path<pos:position pos:line="20" pos:column="61"/></name><operator pos:line="20" pos:column="61">.<pos:position pos:line="20" pos:column="62"/></operator><name pos:line="20" pos:column="62">buf<pos:position pos:line="20" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt>
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><operator pos:line="21" pos:column="29">!<pos:position pos:line="21" pos:column="30"/></operator><name><name pos:line="21" pos:column="30">level<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">dir<pos:position pos:line="21" pos:column="40"/></name></name> <operator pos:line="21" pos:column="41">&amp;&amp;<pos:position pos:line="21" pos:column="51"/></operator> <name pos:line="21" pos:column="44">errno<pos:position pos:line="21" pos:column="49"/></name> <operator pos:line="21" pos:column="50">!=<pos:position pos:line="21" pos:column="52"/></operator> <name pos:line="21" pos:column="53">ENOENT<pos:position pos:line="21" pos:column="59"/></name></expr>)<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60"> <block pos:line="21" pos:column="61">{
				<expr_stmt><expr><call><name pos:line="22" pos:column="33">warning<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><literal type="string" pos:line="22" pos:column="41">"error opening directory %s: %s"<pos:position pos:line="22" pos:column="73"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="23" pos:column="41">iter<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">-&gt;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="47">base<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">.<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="52">path<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">.<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="57">buf<pos:position pos:line="23" pos:column="60"/></name></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="62">strerror<pos:position pos:line="23" pos:column="70"/></name><argument_list pos:line="23" pos:column="70">(<argument><expr><name pos:line="23" pos:column="71">errno<pos:position pos:line="23" pos:column="76"/></name></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="79"/></expr_stmt>
				<comment type="block" pos:line="24" pos:column="33">/* Popping the level is handled below */</comment>
			}<pos:position pos:line="25" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name><name pos:line="27" pos:column="25">level<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">initialized<pos:position pos:line="27" pos:column="43"/></name></name> <operator pos:line="27" pos:column="44">=<pos:position pos:line="27" pos:column="45"/></operator> <literal type="number" pos:line="27" pos:column="46">1<pos:position pos:line="27" pos:column="47"/></literal></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then> <elseif pos:line="28" pos:column="19">else <if pos:line="28" pos:column="24">if <condition pos:line="28" pos:column="27">(<expr><call><name pos:line="28" pos:column="28">S_ISDIR<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name><name pos:line="28" pos:column="36">iter<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">-&gt;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="42">base<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">.<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="47">st<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">.<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="50">st_mode<pos:position pos:line="28" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="59"/></condition><then pos:line="28" pos:column="59"> <block pos:line="28" pos:column="60">{
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><name><name pos:line="29" pos:column="29">level<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">-&gt;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="36">dir_state<pos:position pos:line="29" pos:column="45"/></name></name> <operator pos:line="29" pos:column="46">==<pos:position pos:line="29" pos:column="48"/></operator> <name pos:line="29" pos:column="49">DIR_STATE_ITER<pos:position pos:line="29" pos:column="63"/></name></expr>)<pos:position pos:line="29" pos:column="64"/></condition><then pos:line="29" pos:column="64"> <block pos:line="29" pos:column="65">{
				<comment type="block" pos:line="30" pos:column="33">/*
				 * The directory was just iterated
				 * over; now prepare to iterate into
				 * it.
				 */</comment>
				<expr_stmt><expr><name><name pos:line="35" pos:column="33">level<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">-&gt;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="40">dir_state<pos:position pos:line="35" pos:column="49"/></name></name> <operator pos:line="35" pos:column="50">=<pos:position pos:line="35" pos:column="51"/></operator> <name pos:line="35" pos:column="52">DIR_STATE_RECURSE<pos:position pos:line="35" pos:column="69"/></name></expr>;<pos:position pos:line="35" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="36" pos:column="33">ALLOC_GROW<pos:position pos:line="36" pos:column="43"/></name><argument_list pos:line="36" pos:column="43">(<argument><expr><name><name pos:line="36" pos:column="44">iter<pos:position pos:line="36" pos:column="48"/></name><operator pos:line="36" pos:column="48">-&gt;<pos:position pos:line="36" pos:column="53"/></operator><name pos:line="36" pos:column="50">levels<pos:position pos:line="36" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="58">iter<pos:position pos:line="36" pos:column="62"/></name><operator pos:line="36" pos:column="62">-&gt;<pos:position pos:line="36" pos:column="67"/></operator><name pos:line="36" pos:column="64">levels_nr<pos:position pos:line="36" pos:column="73"/></name></name> <operator pos:line="36" pos:column="74">+<pos:position pos:line="36" pos:column="75"/></operator> <literal type="number" pos:line="36" pos:column="76">1<pos:position pos:line="36" pos:column="77"/></literal></expr></argument>,
					   <argument><expr><name><name pos:line="37" pos:column="44">iter<pos:position pos:line="37" pos:column="48"/></name><operator pos:line="37" pos:column="48">-&gt;<pos:position pos:line="37" pos:column="53"/></operator><name pos:line="37" pos:column="50">levels_alloc<pos:position pos:line="37" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="64"/></expr_stmt>
				<expr_stmt><expr><name pos:line="38" pos:column="33">level<pos:position pos:line="38" pos:column="38"/></name> <operator pos:line="38" pos:column="39">=<pos:position pos:line="38" pos:column="40"/></operator> <operator pos:line="38" pos:column="41">&amp;<pos:position pos:line="38" pos:column="46"/></operator><name><name pos:line="38" pos:column="42">iter<pos:position pos:line="38" pos:column="46"/></name><operator pos:line="38" pos:column="46">-&gt;<pos:position pos:line="38" pos:column="51"/></operator><name pos:line="38" pos:column="48">levels<pos:position pos:line="38" pos:column="54"/></name><index pos:line="38" pos:column="54">[<expr><name><name pos:line="38" pos:column="55">iter<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">-&gt;<pos:position pos:line="38" pos:column="64"/></operator><name pos:line="38" pos:column="61">levels_nr<pos:position pos:line="38" pos:column="70"/></name></name><operator pos:line="38" pos:column="70">++<pos:position pos:line="38" pos:column="72"/></operator></expr>]<pos:position pos:line="38" pos:column="73"/></index></name></expr>;<pos:position pos:line="38" pos:column="74"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="39" pos:column="33">level<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">-&gt;<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="40">initialized<pos:position pos:line="39" pos:column="51"/></name></name> <operator pos:line="39" pos:column="52">=<pos:position pos:line="39" pos:column="53"/></operator> <literal type="number" pos:line="39" pos:column="54">0<pos:position pos:line="39" pos:column="55"/></literal></expr>;<pos:position pos:line="39" pos:column="56"/></expr_stmt>
				<continue pos:line="40" pos:column="33">continue;<pos:position pos:line="40" pos:column="42"/></continue>
			}<pos:position pos:line="41" pos:column="26"/></block></then> <else pos:line="41" pos:column="27">else <block pos:line="41" pos:column="32">{
				<comment type="block" pos:line="42" pos:column="33">/*
				 * The directory has already been
				 * iterated over and iterated into;
				 * we're done with it.
				 */</comment>
			}<pos:position pos:line="47" pos:column="26"/></block></else></if>
		}<pos:position pos:line="48" pos:column="18"/></block></then></if></elseif></if>

		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><operator pos:line="50" pos:column="21">!<pos:position pos:line="50" pos:column="22"/></operator><name><name pos:line="50" pos:column="22">level<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">-&gt;<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="29">dir<pos:position pos:line="50" pos:column="32"/></name></name></expr>)<pos:position pos:line="50" pos:column="33"/></condition><then pos:line="50" pos:column="33"> <block pos:line="50" pos:column="34">{
			<comment type="block" pos:line="51" pos:column="25">/*
			 * This level is exhausted (or wasn't opened
			 * successfully); pop up a level.
			 */</comment>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><operator pos:line="55" pos:column="29">--<pos:position pos:line="55" pos:column="31"/></operator><name><name pos:line="55" pos:column="31">iter<pos:position pos:line="55" pos:column="35"/></name><operator pos:line="55" pos:column="35">-&gt;<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="37">levels_nr<pos:position pos:line="55" pos:column="46"/></name></name> <operator pos:line="55" pos:column="47">==<pos:position pos:line="55" pos:column="49"/></operator> <literal type="number" pos:line="55" pos:column="50">0<pos:position pos:line="55" pos:column="51"/></literal></expr>)<pos:position pos:line="55" pos:column="52"/></condition><then pos:line="55" pos:column="52">
				<block type="pseudo"><return pos:line="56" pos:column="33">return <expr><call><name pos:line="56" pos:column="40">dir_iterator_abort<pos:position pos:line="56" pos:column="58"/></name><argument_list pos:line="56" pos:column="58">(<argument><expr><name pos:line="56" pos:column="59">dir_iterator<pos:position pos:line="56" pos:column="71"/></name></expr></argument>)<pos:position pos:line="56" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="73"/></return></block></then></if>

			<continue pos:line="58" pos:column="25">continue;<pos:position pos:line="58" pos:column="34"/></continue>
		}<pos:position pos:line="59" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="61" pos:column="17">/*
		 * Loop until we find an entry that we can give back
		 * to the caller:
		 */</comment>
		<while pos:line="65" pos:column="17">while <condition pos:line="65" pos:column="23">(<expr><literal type="number" pos:line="65" pos:column="24">1<pos:position pos:line="65" pos:column="25"/></literal></expr>)<pos:position pos:line="65" pos:column="26"/></condition> <block pos:line="65" pos:column="27">{
			<expr_stmt><expr><call><name pos:line="66" pos:column="25">strbuf_setlen<pos:position pos:line="66" pos:column="38"/></name><argument_list pos:line="66" pos:column="38">(<argument><expr><operator pos:line="66" pos:column="39">&amp;<pos:position pos:line="66" pos:column="44"/></operator><name><name pos:line="66" pos:column="40">iter<pos:position pos:line="66" pos:column="44"/></name><operator pos:line="66" pos:column="44">-&gt;<pos:position pos:line="66" pos:column="49"/></operator><name pos:line="66" pos:column="46">base<pos:position pos:line="66" pos:column="50"/></name><operator pos:line="66" pos:column="50">.<pos:position pos:line="66" pos:column="51"/></operator><name pos:line="66" pos:column="51">path<pos:position pos:line="66" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="57">level<pos:position pos:line="66" pos:column="62"/></name><operator pos:line="66" pos:column="62">-&gt;<pos:position pos:line="66" pos:column="67"/></operator><name pos:line="66" pos:column="64">prefix_len<pos:position pos:line="66" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><name pos:line="67" pos:column="25">errno<pos:position pos:line="67" pos:column="30"/></name> <operator pos:line="67" pos:column="31">=<pos:position pos:line="67" pos:column="32"/></operator> <literal type="number" pos:line="67" pos:column="33">0<pos:position pos:line="67" pos:column="34"/></literal></expr>;<pos:position pos:line="67" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="68" pos:column="25">de<pos:position pos:line="68" pos:column="27"/></name> <operator pos:line="68" pos:column="28">=<pos:position pos:line="68" pos:column="29"/></operator> <call><name pos:line="68" pos:column="30">readdir<pos:position pos:line="68" pos:column="37"/></name><argument_list pos:line="68" pos:column="37">(<argument><expr><name><name pos:line="68" pos:column="38">level<pos:position pos:line="68" pos:column="43"/></name><operator pos:line="68" pos:column="43">-&gt;<pos:position pos:line="68" pos:column="48"/></operator><name pos:line="68" pos:column="45">dir<pos:position pos:line="68" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="50"/></expr_stmt>

			<if pos:line="70" pos:column="25">if <condition pos:line="70" pos:column="28">(<expr><operator pos:line="70" pos:column="29">!<pos:position pos:line="70" pos:column="30"/></operator><name pos:line="70" pos:column="30">de<pos:position pos:line="70" pos:column="32"/></name></expr>)<pos:position pos:line="70" pos:column="33"/></condition><then pos:line="70" pos:column="33"> <block pos:line="70" pos:column="34">{
				<comment type="block" pos:line="71" pos:column="33">/* This level is exhausted; pop up a level. */</comment>
				<if pos:line="72" pos:column="33">if <condition pos:line="72" pos:column="36">(<expr><name pos:line="72" pos:column="37">errno<pos:position pos:line="72" pos:column="42"/></name></expr>)<pos:position pos:line="72" pos:column="43"/></condition><then pos:line="72" pos:column="43"> <block pos:line="72" pos:column="44">{
					<expr_stmt><expr><call><name pos:line="73" pos:column="41">warning<pos:position pos:line="73" pos:column="48"/></name><argument_list pos:line="73" pos:column="48">(<argument><expr><literal type="string" pos:line="73" pos:column="49">"error reading directory %s: %s"<pos:position pos:line="73" pos:column="81"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="74" pos:column="49">iter<pos:position pos:line="74" pos:column="53"/></name><operator pos:line="74" pos:column="53">-&gt;<pos:position pos:line="74" pos:column="58"/></operator><name pos:line="74" pos:column="55">base<pos:position pos:line="74" pos:column="59"/></name><operator pos:line="74" pos:column="59">.<pos:position pos:line="74" pos:column="60"/></operator><name pos:line="74" pos:column="60">path<pos:position pos:line="74" pos:column="64"/></name><operator pos:line="74" pos:column="64">.<pos:position pos:line="74" pos:column="65"/></operator><name pos:line="74" pos:column="65">buf<pos:position pos:line="74" pos:column="68"/></name></name></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="70">strerror<pos:position pos:line="74" pos:column="78"/></name><argument_list pos:line="74" pos:column="78">(<argument><expr><name pos:line="74" pos:column="79">errno<pos:position pos:line="74" pos:column="84"/></name></expr></argument>)<pos:position pos:line="74" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="87"/></expr_stmt>
				}<pos:position pos:line="75" pos:column="34"/></block></then> <elseif pos:line="75" pos:column="35">else <if pos:line="75" pos:column="40">if <condition pos:line="75" pos:column="43">(<expr><call><name pos:line="75" pos:column="44">closedir<pos:position pos:line="75" pos:column="52"/></name><argument_list pos:line="75" pos:column="52">(<argument><expr><name><name pos:line="75" pos:column="53">level<pos:position pos:line="75" pos:column="58"/></name><operator pos:line="75" pos:column="58">-&gt;<pos:position pos:line="75" pos:column="63"/></operator><name pos:line="75" pos:column="60">dir<pos:position pos:line="75" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="65"/></condition><then pos:line="75" pos:column="65">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="41">warning<pos:position pos:line="76" pos:column="48"/></name><argument_list pos:line="76" pos:column="48">(<argument><expr><literal type="string" pos:line="76" pos:column="49">"error closing directory %s: %s"<pos:position pos:line="76" pos:column="81"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="77" pos:column="49">iter<pos:position pos:line="77" pos:column="53"/></name><operator pos:line="77" pos:column="53">-&gt;<pos:position pos:line="77" pos:column="58"/></operator><name pos:line="77" pos:column="55">base<pos:position pos:line="77" pos:column="59"/></name><operator pos:line="77" pos:column="59">.<pos:position pos:line="77" pos:column="60"/></operator><name pos:line="77" pos:column="60">path<pos:position pos:line="77" pos:column="64"/></name><operator pos:line="77" pos:column="64">.<pos:position pos:line="77" pos:column="65"/></operator><name pos:line="77" pos:column="65">buf<pos:position pos:line="77" pos:column="68"/></name></name></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="70">strerror<pos:position pos:line="77" pos:column="78"/></name><argument_list pos:line="77" pos:column="78">(<argument><expr><name pos:line="77" pos:column="79">errno<pos:position pos:line="77" pos:column="84"/></name></expr></argument>)<pos:position pos:line="77" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="87"/></expr_stmt></block></then></if></elseif></if>

				<expr_stmt><expr><name><name pos:line="79" pos:column="33">level<pos:position pos:line="79" pos:column="38"/></name><operator pos:line="79" pos:column="38">-&gt;<pos:position pos:line="79" pos:column="43"/></operator><name pos:line="79" pos:column="40">dir<pos:position pos:line="79" pos:column="43"/></name></name> <operator pos:line="79" pos:column="44">=<pos:position pos:line="79" pos:column="45"/></operator> <name pos:line="79" pos:column="46">NULL<pos:position pos:line="79" pos:column="50"/></name></expr>;<pos:position pos:line="79" pos:column="51"/></expr_stmt>
				<if pos:line="80" pos:column="33">if <condition pos:line="80" pos:column="36">(<expr><operator pos:line="80" pos:column="37">--<pos:position pos:line="80" pos:column="39"/></operator><name><name pos:line="80" pos:column="39">iter<pos:position pos:line="80" pos:column="43"/></name><operator pos:line="80" pos:column="43">-&gt;<pos:position pos:line="80" pos:column="48"/></operator><name pos:line="80" pos:column="45">levels_nr<pos:position pos:line="80" pos:column="54"/></name></name> <operator pos:line="80" pos:column="55">==<pos:position pos:line="80" pos:column="57"/></operator> <literal type="number" pos:line="80" pos:column="58">0<pos:position pos:line="80" pos:column="59"/></literal></expr>)<pos:position pos:line="80" pos:column="60"/></condition><then pos:line="80" pos:column="60">
					<block type="pseudo"><return pos:line="81" pos:column="41">return <expr><call><name pos:line="81" pos:column="48">dir_iterator_abort<pos:position pos:line="81" pos:column="66"/></name><argument_list pos:line="81" pos:column="66">(<argument><expr><name pos:line="81" pos:column="67">dir_iterator<pos:position pos:line="81" pos:column="79"/></name></expr></argument>)<pos:position pos:line="81" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="81"/></return></block></then></if>
				<break pos:line="82" pos:column="33">break;<pos:position pos:line="82" pos:column="39"/></break>
			}<pos:position pos:line="83" pos:column="26"/></block></then></if>

			<if pos:line="85" pos:column="25">if <condition pos:line="85" pos:column="28">(<expr><call><name pos:line="85" pos:column="29">is_dot_or_dotdot<pos:position pos:line="85" pos:column="45"/></name><argument_list pos:line="85" pos:column="45">(<argument><expr><name><name pos:line="85" pos:column="46">de<pos:position pos:line="85" pos:column="48"/></name><operator pos:line="85" pos:column="48">-&gt;<pos:position pos:line="85" pos:column="53"/></operator><name pos:line="85" pos:column="50">d_name<pos:position pos:line="85" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="58"/></condition><then pos:line="85" pos:column="58">
				<block type="pseudo"><continue pos:line="86" pos:column="33">continue;<pos:position pos:line="86" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><call><name pos:line="88" pos:column="25">strbuf_addstr<pos:position pos:line="88" pos:column="38"/></name><argument_list pos:line="88" pos:column="38">(<argument><expr><operator pos:line="88" pos:column="39">&amp;<pos:position pos:line="88" pos:column="44"/></operator><name><name pos:line="88" pos:column="40">iter<pos:position pos:line="88" pos:column="44"/></name><operator pos:line="88" pos:column="44">-&gt;<pos:position pos:line="88" pos:column="49"/></operator><name pos:line="88" pos:column="46">base<pos:position pos:line="88" pos:column="50"/></name><operator pos:line="88" pos:column="50">.<pos:position pos:line="88" pos:column="51"/></operator><name pos:line="88" pos:column="51">path<pos:position pos:line="88" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="57">de<pos:position pos:line="88" pos:column="59"/></name><operator pos:line="88" pos:column="59">-&gt;<pos:position pos:line="88" pos:column="64"/></operator><name pos:line="88" pos:column="61">d_name<pos:position pos:line="88" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="69"/></expr_stmt>
			<if pos:line="89" pos:column="25">if <condition pos:line="89" pos:column="28">(<expr><call><name pos:line="89" pos:column="29">lstat<pos:position pos:line="89" pos:column="34"/></name><argument_list pos:line="89" pos:column="34">(<argument><expr><name><name pos:line="89" pos:column="35">iter<pos:position pos:line="89" pos:column="39"/></name><operator pos:line="89" pos:column="39">-&gt;<pos:position pos:line="89" pos:column="44"/></operator><name pos:line="89" pos:column="41">base<pos:position pos:line="89" pos:column="45"/></name><operator pos:line="89" pos:column="45">.<pos:position pos:line="89" pos:column="46"/></operator><name pos:line="89" pos:column="46">path<pos:position pos:line="89" pos:column="50"/></name><operator pos:line="89" pos:column="50">.<pos:position pos:line="89" pos:column="51"/></operator><name pos:line="89" pos:column="51">buf<pos:position pos:line="89" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="56">&amp;<pos:position pos:line="89" pos:column="61"/></operator><name><name pos:line="89" pos:column="57">iter<pos:position pos:line="89" pos:column="61"/></name><operator pos:line="89" pos:column="61">-&gt;<pos:position pos:line="89" pos:column="66"/></operator><name pos:line="89" pos:column="63">base<pos:position pos:line="89" pos:column="67"/></name><operator pos:line="89" pos:column="67">.<pos:position pos:line="89" pos:column="68"/></operator><name pos:line="89" pos:column="68">st<pos:position pos:line="89" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="71"/></argument_list></call> <operator pos:line="89" pos:column="72">&lt;<pos:position pos:line="89" pos:column="76"/></operator> <literal type="number" pos:line="89" pos:column="74">0<pos:position pos:line="89" pos:column="75"/></literal></expr>)<pos:position pos:line="89" pos:column="76"/></condition><then pos:line="89" pos:column="76"> <block pos:line="89" pos:column="77">{
				<if pos:line="90" pos:column="33">if <condition pos:line="90" pos:column="36">(<expr><name pos:line="90" pos:column="37">errno<pos:position pos:line="90" pos:column="42"/></name> <operator pos:line="90" pos:column="43">!=<pos:position pos:line="90" pos:column="45"/></operator> <name pos:line="90" pos:column="46">ENOENT<pos:position pos:line="90" pos:column="52"/></name></expr>)<pos:position pos:line="90" pos:column="53"/></condition><then pos:line="90" pos:column="53">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="91" pos:column="41">warning<pos:position pos:line="91" pos:column="48"/></name><argument_list pos:line="91" pos:column="48">(<argument><expr><literal type="string" pos:line="91" pos:column="49">"error reading path '%s': %s"<pos:position pos:line="91" pos:column="78"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="92" pos:column="49">iter<pos:position pos:line="92" pos:column="53"/></name><operator pos:line="92" pos:column="53">-&gt;<pos:position pos:line="92" pos:column="58"/></operator><name pos:line="92" pos:column="55">base<pos:position pos:line="92" pos:column="59"/></name><operator pos:line="92" pos:column="59">.<pos:position pos:line="92" pos:column="60"/></operator><name pos:line="92" pos:column="60">path<pos:position pos:line="92" pos:column="64"/></name><operator pos:line="92" pos:column="64">.<pos:position pos:line="92" pos:column="65"/></operator><name pos:line="92" pos:column="65">buf<pos:position pos:line="92" pos:column="68"/></name></name></expr></argument>,
						<argument><expr><call><name pos:line="93" pos:column="49">strerror<pos:position pos:line="93" pos:column="57"/></name><argument_list pos:line="93" pos:column="57">(<argument><expr><name pos:line="93" pos:column="58">errno<pos:position pos:line="93" pos:column="63"/></name></expr></argument>)<pos:position pos:line="93" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="93" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="66"/></expr_stmt></block></then></if>
				<continue pos:line="94" pos:column="33">continue;<pos:position pos:line="94" pos:column="42"/></continue>
			}<pos:position pos:line="95" pos:column="26"/></block></then></if>

			<comment type="block" pos:line="97" pos:column="25">/*
			 * We have to set these each time because
			 * the path strbuf might have been realloc()ed.
			 */</comment>
			<expr_stmt><expr><name><name pos:line="101" pos:column="25">iter<pos:position pos:line="101" pos:column="29"/></name><operator pos:line="101" pos:column="29">-&gt;<pos:position pos:line="101" pos:column="34"/></operator><name pos:line="101" pos:column="31">base<pos:position pos:line="101" pos:column="35"/></name><operator pos:line="101" pos:column="35">.<pos:position pos:line="101" pos:column="36"/></operator><name pos:line="101" pos:column="36">relative_path<pos:position pos:line="101" pos:column="49"/></name></name> <operator pos:line="101" pos:column="50">=<pos:position pos:line="101" pos:column="51"/></operator>
				<name><name pos:line="102" pos:column="33">iter<pos:position pos:line="102" pos:column="37"/></name><operator pos:line="102" pos:column="37">-&gt;<pos:position pos:line="102" pos:column="42"/></operator><name pos:line="102" pos:column="39">base<pos:position pos:line="102" pos:column="43"/></name><operator pos:line="102" pos:column="43">.<pos:position pos:line="102" pos:column="44"/></operator><name pos:line="102" pos:column="44">path<pos:position pos:line="102" pos:column="48"/></name><operator pos:line="102" pos:column="48">.<pos:position pos:line="102" pos:column="49"/></operator><name pos:line="102" pos:column="49">buf<pos:position pos:line="102" pos:column="52"/></name></name> <operator pos:line="102" pos:column="53">+<pos:position pos:line="102" pos:column="54"/></operator> <name><name pos:line="102" pos:column="55">iter<pos:position pos:line="102" pos:column="59"/></name><operator pos:line="102" pos:column="59">-&gt;<pos:position pos:line="102" pos:column="64"/></operator><name pos:line="102" pos:column="61">levels<pos:position pos:line="102" pos:column="67"/></name><index pos:line="102" pos:column="67">[<expr><literal type="number" pos:line="102" pos:column="68">0<pos:position pos:line="102" pos:column="69"/></literal></expr>]<pos:position pos:line="102" pos:column="70"/></index></name><operator pos:line="102" pos:column="70">.<pos:position pos:line="102" pos:column="71"/></operator><name pos:line="102" pos:column="71">prefix_len<pos:position pos:line="102" pos:column="81"/></name></expr>;<pos:position pos:line="102" pos:column="82"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="103" pos:column="25">iter<pos:position pos:line="103" pos:column="29"/></name><operator pos:line="103" pos:column="29">-&gt;<pos:position pos:line="103" pos:column="34"/></operator><name pos:line="103" pos:column="31">base<pos:position pos:line="103" pos:column="35"/></name><operator pos:line="103" pos:column="35">.<pos:position pos:line="103" pos:column="36"/></operator><name pos:line="103" pos:column="36">basename<pos:position pos:line="103" pos:column="44"/></name></name> <operator pos:line="103" pos:column="45">=<pos:position pos:line="103" pos:column="46"/></operator>
				<name><name pos:line="104" pos:column="33">iter<pos:position pos:line="104" pos:column="37"/></name><operator pos:line="104" pos:column="37">-&gt;<pos:position pos:line="104" pos:column="42"/></operator><name pos:line="104" pos:column="39">base<pos:position pos:line="104" pos:column="43"/></name><operator pos:line="104" pos:column="43">.<pos:position pos:line="104" pos:column="44"/></operator><name pos:line="104" pos:column="44">path<pos:position pos:line="104" pos:column="48"/></name><operator pos:line="104" pos:column="48">.<pos:position pos:line="104" pos:column="49"/></operator><name pos:line="104" pos:column="49">buf<pos:position pos:line="104" pos:column="52"/></name></name> <operator pos:line="104" pos:column="53">+<pos:position pos:line="104" pos:column="54"/></operator> <name><name pos:line="104" pos:column="55">level<pos:position pos:line="104" pos:column="60"/></name><operator pos:line="104" pos:column="60">-&gt;<pos:position pos:line="104" pos:column="65"/></operator><name pos:line="104" pos:column="62">prefix_len<pos:position pos:line="104" pos:column="72"/></name></name></expr>;<pos:position pos:line="104" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="105" pos:column="25">level<pos:position pos:line="105" pos:column="30"/></name><operator pos:line="105" pos:column="30">-&gt;<pos:position pos:line="105" pos:column="35"/></operator><name pos:line="105" pos:column="32">dir_state<pos:position pos:line="105" pos:column="41"/></name></name> <operator pos:line="105" pos:column="42">=<pos:position pos:line="105" pos:column="43"/></operator> <name pos:line="105" pos:column="44">DIR_STATE_ITER<pos:position pos:line="105" pos:column="58"/></name></expr>;<pos:position pos:line="105" pos:column="59"/></expr_stmt>

			<return pos:line="107" pos:column="25">return <expr><name pos:line="107" pos:column="32">ITER_OK<pos:position pos:line="107" pos:column="39"/></name></expr>;<pos:position pos:line="107" pos:column="40"/></return>
		}<pos:position pos:line="108" pos:column="18"/></block></while>
	}<pos:position pos:line="109" pos:column="10"/></block></while>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

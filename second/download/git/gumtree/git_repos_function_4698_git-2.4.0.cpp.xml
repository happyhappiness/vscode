<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4698_git-2.4.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">enum<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">deny_action<pos:position pos:line="1" pos:column="24"/></name></name></type> <name pos:line="1" pos:column="25">parse_deny_action<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">var<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">value<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">value<pos:position pos:line="3" pos:column="18"/></name></expr>)<pos:position pos:line="3" pos:column="19"/></condition><then pos:line="3" pos:column="19"> <block pos:line="3" pos:column="20">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><operator pos:line="4" pos:column="21">!<pos:position pos:line="4" pos:column="22"/></operator><call><name pos:line="4" pos:column="22">strcasecmp<pos:position pos:line="4" pos:column="32"/></name><argument_list pos:line="4" pos:column="32">(<argument><expr><name pos:line="4" pos:column="33">value<pos:position pos:line="4" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="40">"ignore"<pos:position pos:line="4" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="50"/></condition><then pos:line="4" pos:column="50">
			<block type="pseudo"><return pos:line="5" pos:column="25">return <expr><name pos:line="5" pos:column="32">DENY_IGNORE<pos:position pos:line="5" pos:column="43"/></name></expr>;<pos:position pos:line="5" pos:column="44"/></return></block></then></if>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">!<pos:position pos:line="6" pos:column="22"/></operator><call><name pos:line="6" pos:column="22">strcasecmp<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">value<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="40">"warn"<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="48"/></condition><then pos:line="6" pos:column="48">
			<block type="pseudo"><return pos:line="7" pos:column="25">return <expr><name pos:line="7" pos:column="32">DENY_WARN<pos:position pos:line="7" pos:column="41"/></name></expr>;<pos:position pos:line="7" pos:column="42"/></return></block></then></if>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><call><name pos:line="8" pos:column="22">strcasecmp<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">value<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="40">"refuse"<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50">
			<block type="pseudo"><return pos:line="9" pos:column="25">return <expr><name pos:line="9" pos:column="32">DENY_REFUSE<pos:position pos:line="9" pos:column="43"/></name></expr>;<pos:position pos:line="9" pos:column="44"/></return></block></then></if>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><call><name pos:line="10" pos:column="22">strcasecmp<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">value<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="40">"updateinstead"<pos:position pos:line="10" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="57"/></condition><then pos:line="10" pos:column="57">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><name pos:line="11" pos:column="32">DENY_UPDATE_INSTEAD<pos:position pos:line="11" pos:column="51"/></name></expr>;<pos:position pos:line="11" pos:column="52"/></return></block></then></if>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">git_config_bool<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">var<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">value<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">DENY_REFUSE<pos:position pos:line="14" pos:column="35"/></name></expr>;<pos:position pos:line="14" pos:column="36"/></return></block></then></if>
	<return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">DENY_IGNORE<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

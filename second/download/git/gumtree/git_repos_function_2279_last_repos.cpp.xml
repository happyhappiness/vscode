<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2279_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">read_object_with_reference<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">unsigned<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">sha1<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">required_type_name<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="3" pos:column="34">unsigned<pos:position pos:line="3" pos:column="42"/></name> <name pos:line="3" pos:column="43">long<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">size<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="4" pos:column="34">unsigned<pos:position pos:line="4" pos:column="42"/></name> <name pos:line="4" pos:column="43">char<pos:position pos:line="4" pos:column="47"/></name> <modifier pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></modifier></type><name pos:line="4" pos:column="49">actual_sha1_return<pos:position pos:line="4" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="68"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">enum<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">object_type<pos:position pos:line="6" pos:column="25"/></name></name></type> <name pos:line="6" pos:column="26">type<pos:position pos:line="6" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="32">required_type<pos:position pos:line="6" pos:column="45"/></name></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">void<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">buffer<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">long<pos:position pos:line="8" pos:column="22"/></name></type> <name pos:line="8" pos:column="23">isize<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">char<pos:position pos:line="9" pos:column="22"/></name></type> <name><name pos:line="9" pos:column="23">actual_sha1<pos:position pos:line="9" pos:column="34"/></name><index pos:line="9" pos:column="34">[<expr><literal type="number" pos:line="9" pos:column="35">20<pos:position pos:line="9" pos:column="37"/></literal></expr>]<pos:position pos:line="9" pos:column="38"/></index></name></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">required_type<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <call><name pos:line="11" pos:column="25">type_from_string<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">required_type_name<pos:position pos:line="11" pos:column="60"/></name></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">hashcpy<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">actual_sha1<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="30">sha1<pos:position pos:line="12" pos:column="34"/></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
	<while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>)<pos:position pos:line="13" pos:column="18"/></condition> <block pos:line="13" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">ref_length<pos:position pos:line="14" pos:column="31"/></name> <init pos:line="14" pos:column="32">= <expr><operator pos:line="14" pos:column="34">-<pos:position pos:line="14" pos:column="35"/></operator><literal type="number" pos:line="14" pos:column="35">1<pos:position pos:line="14" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="15" pos:column="17">const<pos:position pos:line="15" pos:column="22"/></specifier> <name pos:line="15" pos:column="23">char<pos:position pos:line="15" pos:column="27"/></name> <modifier pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></modifier></type><name pos:line="15" pos:column="29">ref_type<pos:position pos:line="15" pos:column="37"/></name> <init pos:line="15" pos:column="38">= <expr><name pos:line="15" pos:column="40">NULL<pos:position pos:line="15" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="45"/></decl_stmt>

		<expr_stmt><expr><name pos:line="17" pos:column="17">buffer<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <call><name pos:line="17" pos:column="26">read_sha1_file<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name pos:line="17" pos:column="41">actual_sha1<pos:position pos:line="17" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="54">&amp;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="55">type<pos:position pos:line="17" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="61">&amp;<pos:position pos:line="17" pos:column="66"/></operator><name pos:line="17" pos:column="62">isize<pos:position pos:line="17" pos:column="67"/></name></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="69"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">buffer<pos:position pos:line="18" pos:column="28"/></name></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
			<block type="pseudo"><return pos:line="19" pos:column="25">return <expr><name pos:line="19" pos:column="32">NULL<pos:position pos:line="19" pos:column="36"/></name></expr>;<pos:position pos:line="19" pos:column="37"/></return></block></then></if>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">type<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">==<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="29">required_type<pos:position pos:line="20" pos:column="42"/></name></expr>)<pos:position pos:line="20" pos:column="43"/></condition><then pos:line="20" pos:column="43"> <block pos:line="20" pos:column="44">{
			<expr_stmt><expr><operator pos:line="21" pos:column="25">*<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">size<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="33">isize<pos:position pos:line="21" pos:column="38"/></name></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><name pos:line="22" pos:column="29">actual_sha1_return<pos:position pos:line="22" pos:column="47"/></name></expr>)<pos:position pos:line="22" pos:column="48"/></condition><then pos:line="22" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="33">hashcpy<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">actual_sha1_return<pos:position pos:line="23" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="61">actual_sha1<pos:position pos:line="23" pos:column="72"/></name></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="74"/></expr_stmt></block></then></if>
			<return pos:line="24" pos:column="25">return <expr><name pos:line="24" pos:column="32">buffer<pos:position pos:line="24" pos:column="38"/></name></expr>;<pos:position pos:line="24" pos:column="39"/></return>
		}<pos:position pos:line="25" pos:column="18"/></block></then>
		<comment type="block" pos:line="26" pos:column="17">/* Handle references */</comment>
		<elseif pos:line="27" pos:column="17">else <if pos:line="27" pos:column="22">if <condition pos:line="27" pos:column="25">(<expr><name pos:line="27" pos:column="26">type<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">==<pos:position pos:line="27" pos:column="33"/></operator> <name pos:line="27" pos:column="34">OBJ_COMMIT<pos:position pos:line="27" pos:column="44"/></name></expr>)<pos:position pos:line="27" pos:column="45"/></condition><then pos:line="27" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="25">ref_type<pos:position pos:line="28" pos:column="33"/></name> <operator pos:line="28" pos:column="34">=<pos:position pos:line="28" pos:column="35"/></operator> <literal type="string" pos:line="28" pos:column="36">"tree "<pos:position pos:line="28" pos:column="43"/></literal></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="29" pos:column="17">else <if pos:line="29" pos:column="22">if <condition pos:line="29" pos:column="25">(<expr><name pos:line="29" pos:column="26">type<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">==<pos:position pos:line="29" pos:column="33"/></operator> <name pos:line="29" pos:column="34">OBJ_TAG<pos:position pos:line="29" pos:column="41"/></name></expr>)<pos:position pos:line="29" pos:column="42"/></condition><then pos:line="29" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="25">ref_type<pos:position pos:line="30" pos:column="33"/></name> <operator pos:line="30" pos:column="34">=<pos:position pos:line="30" pos:column="35"/></operator> <literal type="string" pos:line="30" pos:column="36">"object "<pos:position pos:line="30" pos:column="45"/></literal></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt></block></then></if></elseif>
		<else pos:line="31" pos:column="17">else <block pos:line="31" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">free<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">buffer<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
			<return pos:line="33" pos:column="25">return <expr><name pos:line="33" pos:column="32">NULL<pos:position pos:line="33" pos:column="36"/></name></expr>;<pos:position pos:line="33" pos:column="37"/></return>
		}<pos:position pos:line="34" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="35" pos:column="17">ref_length<pos:position pos:line="35" pos:column="27"/></name> <operator pos:line="35" pos:column="28">=<pos:position pos:line="35" pos:column="29"/></operator> <call><name pos:line="35" pos:column="30">strlen<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">ref_type<pos:position pos:line="35" pos:column="45"/></name></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="47"/></expr_stmt>

		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">ref_length<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">+<pos:position pos:line="37" pos:column="33"/></operator> <literal type="number" pos:line="37" pos:column="34">40<pos:position pos:line="37" pos:column="36"/></literal> <operator pos:line="37" pos:column="37">&gt;<pos:position pos:line="37" pos:column="41"/></operator> <name pos:line="37" pos:column="39">isize<pos:position pos:line="37" pos:column="44"/></name> <operator pos:line="37" pos:column="45">||<pos:position pos:line="37" pos:column="47"/></operator>
		    <call><name pos:line="38" pos:column="21">memcmp<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><name pos:line="38" pos:column="28">buffer<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="36">ref_type<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="46">ref_length<pos:position pos:line="38" pos:column="56"/></name></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call> <operator pos:line="38" pos:column="58">||<pos:position pos:line="38" pos:column="60"/></operator>
		    <call><name pos:line="39" pos:column="21">get_sha1_hex<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><operator pos:line="39" pos:column="34">(<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">char<pos:position pos:line="39" pos:column="39"/></name> <operator pos:line="39" pos:column="40">*<pos:position pos:line="39" pos:column="41"/></operator><operator pos:line="39" pos:column="41">)<pos:position pos:line="39" pos:column="42"/></operator> <name pos:line="39" pos:column="43">buffer<pos:position pos:line="39" pos:column="49"/></name> <operator pos:line="39" pos:column="50">+<pos:position pos:line="39" pos:column="51"/></operator> <name pos:line="39" pos:column="52">ref_length<pos:position pos:line="39" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="64">actual_sha1<pos:position pos:line="39" pos:column="75"/></name></expr></argument>)<pos:position pos:line="39" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="77"/></condition><then pos:line="39" pos:column="77"> <block pos:line="39" pos:column="78">{
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">free<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">buffer<pos:position pos:line="40" pos:column="36"/></name></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>
			<return pos:line="41" pos:column="25">return <expr><name pos:line="41" pos:column="32">NULL<pos:position pos:line="41" pos:column="36"/></name></expr>;<pos:position pos:line="41" pos:column="37"/></return>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">free<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">buffer<pos:position pos:line="43" pos:column="28"/></name></expr></argument>)<pos:position pos:line="43" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
		<comment type="block" pos:line="44" pos:column="17">/* Now we have the ID of the referred-to object in
		 * actual_sha1.  Check again. */</comment>
	}<pos:position pos:line="46" pos:column="10"/></block></while>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

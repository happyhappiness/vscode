<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2276_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">verify_absent_sparse<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">cache_entry<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">ce<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="2" pos:column="33">enum<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">unpack_trees_error_types<pos:position pos:line="2" pos:column="62"/></name></name></type> <name pos:line="2" pos:column="63">error_type<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="3" pos:column="33">struct<pos:position pos:line="3" pos:column="39"/></name> <name pos:line="3" pos:column="40">unpack_trees_options<pos:position pos:line="3" pos:column="60"/></name></name> <modifier pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></modifier></type><name pos:line="3" pos:column="62">o<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="64"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">enum<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">unpack_trees_error_types<pos:position pos:line="5" pos:column="38"/></name></name></type> <name pos:line="5" pos:column="39">orphaned_error<pos:position pos:line="5" pos:column="53"/></name> <init pos:line="5" pos:column="54">= <expr><name pos:line="5" pos:column="56">error_type<pos:position pos:line="5" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="67"/></decl_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">orphaned_error<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">==<pos:position pos:line="6" pos:column="30"/></operator> <name pos:line="6" pos:column="31">ERROR_WOULD_LOSE_UNTRACKED_OVERWRITTEN<pos:position pos:line="6" pos:column="69"/></name></expr>)<pos:position pos:line="6" pos:column="70"/></condition><then pos:line="6" pos:column="70">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">orphaned_error<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">=<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="34">ERROR_WOULD_LOSE_ORPHANED_OVERWRITTEN<pos:position pos:line="7" pos:column="71"/></name></expr>;<pos:position pos:line="7" pos:column="72"/></expr_stmt></block></then></if>

	<return pos:line="9" pos:column="9">return <expr><call><name pos:line="9" pos:column="16">verify_absent_1<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">ce<pos:position pos:line="9" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="36">orphaned_error<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="52">o<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

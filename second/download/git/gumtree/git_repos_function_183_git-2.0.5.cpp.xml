<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_183_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">diff_tree_combined<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">unsigned<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">sha1<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">sha1_array<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">parents<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="3" pos:column="25">int<pos:position pos:line="3" pos:column="28"/></name></type> <name pos:line="3" pos:column="29">dense<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="4" pos:column="25">struct<pos:position pos:line="4" pos:column="31"/></name> <name pos:line="4" pos:column="32">rev_info<pos:position pos:line="4" pos:column="40"/></name></name> <modifier pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></modifier></type><name pos:line="4" pos:column="42">rev<pos:position pos:line="4" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="46"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">diff_options<pos:position pos:line="6" pos:column="28"/></name></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">opt<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><operator pos:line="6" pos:column="36">&amp;<pos:position pos:line="6" pos:column="41"/></operator><name><name pos:line="6" pos:column="37">rev<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="42">diffopt<pos:position pos:line="6" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">diff_options<pos:position pos:line="7" pos:column="28"/></name></name></type> <name pos:line="7" pos:column="29">diffopts<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">combine_diff_path<pos:position pos:line="8" pos:column="33"/></name></name> <modifier pos:line="8" pos:column="34">*<pos:position pos:line="8" pos:column="35"/></modifier></type><name pos:line="8" pos:column="35">p<pos:position pos:line="8" pos:column="36"/></name></decl>, <modifier pos:line="8" pos:column="38">*<pos:position pos:line="8" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="39">paths<pos:position pos:line="8" pos:column="44"/></name> <init pos:line="8" pos:column="45">= <expr><name pos:line="8" pos:column="47">NULL<pos:position pos:line="8" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="16">num_paths<pos:position pos:line="9" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="27">needsep<pos:position pos:line="9" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="36">show_log_first<pos:position pos:line="9" pos:column="50"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="52">num_parent<pos:position pos:line="9" pos:column="62"/></name> <init pos:line="9" pos:column="63">= <expr><name><name pos:line="9" pos:column="65">parents<pos:position pos:line="9" pos:column="72"/></name><operator pos:line="9" pos:column="72">-&gt;<pos:position pos:line="9" pos:column="77"/></operator><name pos:line="9" pos:column="74">nr<pos:position pos:line="9" pos:column="76"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="77"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">diffopts<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <operator pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">opt<pos:position pos:line="11" pos:column="24"/></name></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">copy_pathspec<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><operator pos:line="12" pos:column="23">&amp;<pos:position pos:line="12" pos:column="28"/></operator><name><name pos:line="12" pos:column="24">diffopts<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">.<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">pathspec<pos:position pos:line="12" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="43">&amp;<pos:position pos:line="12" pos:column="48"/></operator><name><name pos:line="12" pos:column="44">opt<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">-&gt;<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="49">pathspec<pos:position pos:line="12" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">diffopts<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">output_format<pos:position pos:line="13" pos:column="31"/></name></name> <operator pos:line="13" pos:column="32">=<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="34">DIFF_FORMAT_NO_OUTPUT<pos:position pos:line="13" pos:column="55"/></name></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">DIFF_OPT_SET<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><operator pos:line="14" pos:column="22">&amp;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="23">diffopts<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">RECURSIVE<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">DIFF_OPT_CLR<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><operator pos:line="15" pos:column="22">&amp;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="23">diffopts<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="33">ALLOW_EXTERNAL<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
	<comment type="block" pos:line="16" pos:column="9">/* tell diff_tree to emit paths in sorted (=tree) order */</comment>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">diffopts<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">.<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">orderfile<pos:position pos:line="17" pos:column="27"/></name></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">NULL<pos:position pos:line="17" pos:column="34"/></name></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><name pos:line="19" pos:column="9">show_log_first<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <operator pos:line="19" pos:column="26">!<pos:position pos:line="19" pos:column="27"/></operator><operator pos:line="19" pos:column="27">!<pos:position pos:line="19" pos:column="28"/></operator><name><name pos:line="19" pos:column="28">rev<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">loginfo<pos:position pos:line="19" pos:column="40"/></name></name> <operator pos:line="19" pos:column="41">&amp;&amp;<pos:position pos:line="19" pos:column="51"/></operator> <operator pos:line="19" pos:column="44">!<pos:position pos:line="19" pos:column="45"/></operator><name><name pos:line="19" pos:column="45">rev<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">-&gt;<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="50">no_commit_id<pos:position pos:line="19" pos:column="62"/></name></name></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">needsep<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <literal type="number" pos:line="20" pos:column="19">0<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
	<comment type="block" pos:line="21" pos:column="9">/* find set of paths that everybody touches */</comment>
	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></init> <condition><expr><name pos:line="22" pos:column="21">i<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&lt;<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="25">num_parent<pos:position pos:line="22" pos:column="35"/></name></expr>;<pos:position pos:line="22" pos:column="36"/></condition> <incr><expr><name pos:line="22" pos:column="37">i<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">++<pos:position pos:line="22" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="41"/></control> <block pos:line="22" pos:column="42">{
		<comment type="block" pos:line="23" pos:column="17">/* show stat against the first parent even
		 * when doing combined diff.
		 */</comment>
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">int<pos:position pos:line="26" pos:column="20"/></name></type> <name pos:line="26" pos:column="21">stat_opt<pos:position pos:line="26" pos:column="29"/></name> <init pos:line="26" pos:column="30">= <expr><operator pos:line="26" pos:column="32">(<pos:position pos:line="26" pos:column="33"/></operator><name><name pos:line="26" pos:column="33">opt<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">output_format<pos:position pos:line="26" pos:column="51"/></name></name> <operator pos:line="26" pos:column="52">&amp;<pos:position pos:line="26" pos:column="57"/></operator>
				<operator pos:line="27" pos:column="33">(<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="34">DIFF_FORMAT_NUMSTAT<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">|<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="54">DIFF_FORMAT_DIFFSTAT<pos:position pos:line="27" pos:column="74"/></name><operator pos:line="27" pos:column="74">)<pos:position pos:line="27" pos:column="75"/></operator><operator pos:line="27" pos:column="75">)<pos:position pos:line="27" pos:column="76"/></operator></expr></init></decl>;<pos:position pos:line="27" pos:column="77"/></decl_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">i<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">==<pos:position pos:line="28" pos:column="25"/></operator> <literal type="number" pos:line="28" pos:column="26">0<pos:position pos:line="28" pos:column="27"/></literal> <operator pos:line="28" pos:column="28">&amp;&amp;<pos:position pos:line="28" pos:column="38"/></operator> <name pos:line="28" pos:column="31">stat_opt<pos:position pos:line="28" pos:column="39"/></name></expr>)<pos:position pos:line="28" pos:column="40"/></condition><then pos:line="28" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="25">diffopts<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">.<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="34">output_format<pos:position pos:line="29" pos:column="47"/></name></name> <operator pos:line="29" pos:column="48">=<pos:position pos:line="29" pos:column="49"/></operator> <name pos:line="29" pos:column="50">stat_opt<pos:position pos:line="29" pos:column="58"/></name></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt></block></then>
		<else pos:line="30" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="25">diffopts<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">.<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="34">output_format<pos:position pos:line="31" pos:column="47"/></name></name> <operator pos:line="31" pos:column="48">=<pos:position pos:line="31" pos:column="49"/></operator> <name pos:line="31" pos:column="50">DIFF_FORMAT_NO_OUTPUT<pos:position pos:line="31" pos:column="71"/></name></expr>;<pos:position pos:line="31" pos:column="72"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">diff_tree_sha1<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name><name pos:line="32" pos:column="32">parents<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">-&gt;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="41">sha1<pos:position pos:line="32" pos:column="45"/></name><index pos:line="32" pos:column="45">[<expr><name pos:line="32" pos:column="46">i<pos:position pos:line="32" pos:column="47"/></name></expr>]<pos:position pos:line="32" pos:column="48"/></index></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">sha1<pos:position pos:line="32" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="56">""<pos:position pos:line="32" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="60">&amp;<pos:position pos:line="32" pos:column="65"/></operator><name pos:line="32" pos:column="61">diffopts<pos:position pos:line="32" pos:column="69"/></name></expr></argument>)<pos:position pos:line="32" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">diffcore_std<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><operator pos:line="33" pos:column="30">&amp;<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="31">diffopts<pos:position pos:line="33" pos:column="39"/></name></expr></argument>)<pos:position pos:line="33" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">paths<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <call><name pos:line="34" pos:column="25">intersect_paths<pos:position pos:line="34" pos:column="40"/></name><argument_list pos:line="34" pos:column="40">(<argument><expr><name pos:line="34" pos:column="41">paths<pos:position pos:line="34" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="48">i<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="51">num_parent<pos:position pos:line="34" pos:column="61"/></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>

		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">show_log_first<pos:position pos:line="36" pos:column="35"/></name> <operator pos:line="36" pos:column="36">&amp;&amp;<pos:position pos:line="36" pos:column="46"/></operator> <name pos:line="36" pos:column="39">i<pos:position pos:line="36" pos:column="40"/></name> <operator pos:line="36" pos:column="41">==<pos:position pos:line="36" pos:column="43"/></operator> <literal type="number" pos:line="36" pos:column="44">0<pos:position pos:line="36" pos:column="45"/></literal></expr>)<pos:position pos:line="36" pos:column="46"/></condition><then pos:line="36" pos:column="46"> <block pos:line="36" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">show_log<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">rev<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>

			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name><name pos:line="39" pos:column="29">rev<pos:position pos:line="39" pos:column="32"/></name><operator pos:line="39" pos:column="32">-&gt;<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="34">verbose_header<pos:position pos:line="39" pos:column="48"/></name></name> <operator pos:line="39" pos:column="49">&amp;&amp;<pos:position pos:line="39" pos:column="59"/></operator> <name><name pos:line="39" pos:column="52">opt<pos:position pos:line="39" pos:column="55"/></name><operator pos:line="39" pos:column="55">-&gt;<pos:position pos:line="39" pos:column="60"/></operator><name pos:line="39" pos:column="57">output_format<pos:position pos:line="39" pos:column="70"/></name></name> <operator pos:line="39" pos:column="71">&amp;&amp;<pos:position pos:line="39" pos:column="81"/></operator>
			    <name><name pos:line="40" pos:column="29">opt<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">-&gt;<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="34">output_format<pos:position pos:line="40" pos:column="47"/></name></name> <operator pos:line="40" pos:column="48">!=<pos:position pos:line="40" pos:column="50"/></operator> <name pos:line="40" pos:column="51">DIFF_FORMAT_NO_OUTPUT<pos:position pos:line="40" pos:column="72"/></name></expr>)<pos:position pos:line="40" pos:column="73"/></condition><then pos:line="40" pos:column="73">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="33">printf<pos:position pos:line="41" pos:column="39"/></name><argument_list pos:line="41" pos:column="39">(<argument><expr><literal type="string" pos:line="41" pos:column="40">"%s%c"<pos:position pos:line="41" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="48">diff_line_prefix<pos:position pos:line="41" pos:column="64"/></name><argument_list pos:line="41" pos:column="64">(<argument><expr><name pos:line="41" pos:column="65">opt<pos:position pos:line="41" pos:column="68"/></name></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></call></expr></argument>,
				       <argument><expr><name><name pos:line="42" pos:column="40">opt<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">-&gt;<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="45">line_termination<pos:position pos:line="42" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="63"/></expr_stmt></block></then></if>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="45" pos:column="17">/* if showing diff, show it in requested order */</comment>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name><name pos:line="46" pos:column="21">diffopts<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">.<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="30">output_format<pos:position pos:line="46" pos:column="43"/></name></name> <operator pos:line="46" pos:column="44">!=<pos:position pos:line="46" pos:column="46"/></operator> <name pos:line="46" pos:column="47">DIFF_FORMAT_NO_OUTPUT<pos:position pos:line="46" pos:column="68"/></name> <operator pos:line="46" pos:column="69">&amp;&amp;<pos:position pos:line="46" pos:column="79"/></operator>
		    <name><name pos:line="47" pos:column="21">opt<pos:position pos:line="47" pos:column="24"/></name><operator pos:line="47" pos:column="24">-&gt;<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="26">orderfile<pos:position pos:line="47" pos:column="35"/></name></name></expr>)<pos:position pos:line="47" pos:column="36"/></condition><then pos:line="47" pos:column="36"> <block pos:line="47" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">diffcore_order<pos:position pos:line="48" pos:column="39"/></name><argument_list pos:line="48" pos:column="39">(<argument><expr><name><name pos:line="48" pos:column="40">opt<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">-&gt;<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="45">orderfile<pos:position pos:line="48" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="49" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="51" pos:column="17">diff_flush<pos:position pos:line="51" pos:column="27"/></name><argument_list pos:line="51" pos:column="27">(<argument><expr><operator pos:line="51" pos:column="28">&amp;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="29">diffopts<pos:position pos:line="51" pos:column="37"/></name></expr></argument>)<pos:position pos:line="51" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></for>

	<comment type="block" pos:line="54" pos:column="9">/* find out number of surviving paths */</comment>
	<for pos:line="55" pos:column="9">for <control pos:line="55" pos:column="13">(<init><expr><name pos:line="55" pos:column="14">num_paths<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <literal type="number" pos:line="55" pos:column="26">0<pos:position pos:line="55" pos:column="27"/></literal></expr><operator pos:line="55" pos:column="27">,<pos:position pos:line="55" pos:column="28"/></operator> <expr><name pos:line="55" pos:column="29">p<pos:position pos:line="55" pos:column="30"/></name> <operator pos:line="55" pos:column="31">=<pos:position pos:line="55" pos:column="32"/></operator> <name pos:line="55" pos:column="33">paths<pos:position pos:line="55" pos:column="38"/></name></expr>;<pos:position pos:line="55" pos:column="39"/></init> <condition><expr><name pos:line="55" pos:column="40">p<pos:position pos:line="55" pos:column="41"/></name></expr>;<pos:position pos:line="55" pos:column="42"/></condition> <incr><expr><name pos:line="55" pos:column="43">p<pos:position pos:line="55" pos:column="44"/></name> <operator pos:line="55" pos:column="45">=<pos:position pos:line="55" pos:column="46"/></operator> <name><name pos:line="55" pos:column="47">p<pos:position pos:line="55" pos:column="48"/></name><operator pos:line="55" pos:column="48">-&gt;<pos:position pos:line="55" pos:column="53"/></operator><name pos:line="55" pos:column="50">next<pos:position pos:line="55" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="55" pos:column="55"/></control>
		<block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="17">num_paths<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">++<pos:position pos:line="56" pos:column="28"/></operator></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt></block></for>

	<comment type="block" pos:line="58" pos:column="9">/* order paths according to diffcore_order */</comment>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name><name pos:line="59" pos:column="13">opt<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">-&gt;<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="18">orderfile<pos:position pos:line="59" pos:column="27"/></name></name> <operator pos:line="59" pos:column="28">&amp;&amp;<pos:position pos:line="59" pos:column="38"/></operator> <name pos:line="59" pos:column="31">num_paths<pos:position pos:line="59" pos:column="40"/></name></expr>)<pos:position pos:line="59" pos:column="41"/></condition><then pos:line="59" pos:column="41"> <block pos:line="59" pos:column="42">{
		<decl_stmt><decl><type><name><name pos:line="60" pos:column="17">struct<pos:position pos:line="60" pos:column="23"/></name> <name pos:line="60" pos:column="24">obj_order<pos:position pos:line="60" pos:column="33"/></name></name> <modifier pos:line="60" pos:column="34">*<pos:position pos:line="60" pos:column="35"/></modifier></type><name pos:line="60" pos:column="35">o<pos:position pos:line="60" pos:column="36"/></name></decl>;<pos:position pos:line="60" pos:column="37"/></decl_stmt>

		<expr_stmt><expr><name pos:line="62" pos:column="17">o<pos:position pos:line="62" pos:column="18"/></name> <operator pos:line="62" pos:column="19">=<pos:position pos:line="62" pos:column="20"/></operator> <call><name pos:line="62" pos:column="21">xmalloc<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><sizeof pos:line="62" pos:column="29">sizeof<argument_list pos:line="62" pos:column="35">(<argument><expr><operator pos:line="62" pos:column="36">*<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="37">o<pos:position pos:line="62" pos:column="38"/></name></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></sizeof> <operator pos:line="62" pos:column="40">*<pos:position pos:line="62" pos:column="41"/></operator> <name pos:line="62" pos:column="42">num_paths<pos:position pos:line="62" pos:column="51"/></name></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="53"/></expr_stmt>
		<for pos:line="63" pos:column="17">for <control pos:line="63" pos:column="21">(<init><expr><name pos:line="63" pos:column="22">i<pos:position pos:line="63" pos:column="23"/></name> <operator pos:line="63" pos:column="24">=<pos:position pos:line="63" pos:column="25"/></operator> <literal type="number" pos:line="63" pos:column="26">0<pos:position pos:line="63" pos:column="27"/></literal></expr><operator pos:line="63" pos:column="27">,<pos:position pos:line="63" pos:column="28"/></operator> <expr><name pos:line="63" pos:column="29">p<pos:position pos:line="63" pos:column="30"/></name> <operator pos:line="63" pos:column="31">=<pos:position pos:line="63" pos:column="32"/></operator> <name pos:line="63" pos:column="33">paths<pos:position pos:line="63" pos:column="38"/></name></expr>;<pos:position pos:line="63" pos:column="39"/></init> <condition><expr><name pos:line="63" pos:column="40">p<pos:position pos:line="63" pos:column="41"/></name></expr>;<pos:position pos:line="63" pos:column="42"/></condition> <incr><expr><name pos:line="63" pos:column="43">p<pos:position pos:line="63" pos:column="44"/></name> <operator pos:line="63" pos:column="45">=<pos:position pos:line="63" pos:column="46"/></operator> <name><name pos:line="63" pos:column="47">p<pos:position pos:line="63" pos:column="48"/></name><operator pos:line="63" pos:column="48">-&gt;<pos:position pos:line="63" pos:column="53"/></operator><name pos:line="63" pos:column="50">next<pos:position pos:line="63" pos:column="54"/></name></name></expr><operator pos:line="63" pos:column="54">,<pos:position pos:line="63" pos:column="55"/></operator> <expr><name pos:line="63" pos:column="56">i<pos:position pos:line="63" pos:column="57"/></name><operator pos:line="63" pos:column="57">++<pos:position pos:line="63" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="63" pos:column="60"/></control>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="64" pos:column="25">o<pos:position pos:line="64" pos:column="26"/></name><index pos:line="64" pos:column="26">[<expr><name pos:line="64" pos:column="27">i<pos:position pos:line="64" pos:column="28"/></name></expr>]<pos:position pos:line="64" pos:column="29"/></index></name><operator pos:line="64" pos:column="29">.<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="30">obj<pos:position pos:line="64" pos:column="33"/></name> <operator pos:line="64" pos:column="34">=<pos:position pos:line="64" pos:column="35"/></operator> <name pos:line="64" pos:column="36">p<pos:position pos:line="64" pos:column="37"/></name></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="65" pos:column="17">order_objects<pos:position pos:line="65" pos:column="30"/></name><argument_list pos:line="65" pos:column="30">(<argument><expr><name><name pos:line="65" pos:column="31">opt<pos:position pos:line="65" pos:column="34"/></name><operator pos:line="65" pos:column="34">-&gt;<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="36">orderfile<pos:position pos:line="65" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="47">path_path<pos:position pos:line="65" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="58">o<pos:position pos:line="65" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="61">num_paths<pos:position pos:line="65" pos:column="70"/></name></expr></argument>)<pos:position pos:line="65" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="72"/></expr_stmt>
		<for pos:line="66" pos:column="17">for <control pos:line="66" pos:column="21">(<init><expr><name pos:line="66" pos:column="22">i<pos:position pos:line="66" pos:column="23"/></name> <operator pos:line="66" pos:column="24">=<pos:position pos:line="66" pos:column="25"/></operator> <literal type="number" pos:line="66" pos:column="26">0<pos:position pos:line="66" pos:column="27"/></literal></expr>;<pos:position pos:line="66" pos:column="28"/></init> <condition><expr><name pos:line="66" pos:column="29">i<pos:position pos:line="66" pos:column="30"/></name> <operator pos:line="66" pos:column="31">&lt;<pos:position pos:line="66" pos:column="35"/></operator> <name pos:line="66" pos:column="33">num_paths<pos:position pos:line="66" pos:column="42"/></name> <operator pos:line="66" pos:column="43">-<pos:position pos:line="66" pos:column="44"/></operator> <literal type="number" pos:line="66" pos:column="45">1<pos:position pos:line="66" pos:column="46"/></literal></expr>;<pos:position pos:line="66" pos:column="47"/></condition> <incr><expr><name pos:line="66" pos:column="48">i<pos:position pos:line="66" pos:column="49"/></name><operator pos:line="66" pos:column="49">++<pos:position pos:line="66" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="66" pos:column="52"/></control> <block pos:line="66" pos:column="53">{
			<expr_stmt><expr><name pos:line="67" pos:column="25">p<pos:position pos:line="67" pos:column="26"/></name> <operator pos:line="67" pos:column="27">=<pos:position pos:line="67" pos:column="28"/></operator> <name><name pos:line="67" pos:column="29">o<pos:position pos:line="67" pos:column="30"/></name><index pos:line="67" pos:column="30">[<expr><name pos:line="67" pos:column="31">i<pos:position pos:line="67" pos:column="32"/></name></expr>]<pos:position pos:line="67" pos:column="33"/></index></name><operator pos:line="67" pos:column="33">.<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="34">obj<pos:position pos:line="67" pos:column="37"/></name></expr>;<pos:position pos:line="67" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="68" pos:column="25">p<pos:position pos:line="68" pos:column="26"/></name><operator pos:line="68" pos:column="26">-&gt;<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="28">next<pos:position pos:line="68" pos:column="32"/></name></name> <operator pos:line="68" pos:column="33">=<pos:position pos:line="68" pos:column="34"/></operator> <name><name pos:line="68" pos:column="35">o<pos:position pos:line="68" pos:column="36"/></name><index pos:line="68" pos:column="36">[<expr><name pos:line="68" pos:column="37">i<pos:position pos:line="68" pos:column="38"/></name><operator pos:line="68" pos:column="38">+<pos:position pos:line="68" pos:column="39"/></operator><literal type="number" pos:line="68" pos:column="39">1<pos:position pos:line="68" pos:column="40"/></literal></expr>]<pos:position pos:line="68" pos:column="41"/></index></name><operator pos:line="68" pos:column="41">.<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="42">obj<pos:position pos:line="68" pos:column="45"/></name></expr>;<pos:position pos:line="68" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="69" pos:column="18"/></block></for>

		<expr_stmt><expr><name pos:line="71" pos:column="17">p<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">=<pos:position pos:line="71" pos:column="20"/></operator> <name><name pos:line="71" pos:column="21">o<pos:position pos:line="71" pos:column="22"/></name><index pos:line="71" pos:column="22">[<expr><name pos:line="71" pos:column="23">num_paths<pos:position pos:line="71" pos:column="32"/></name><operator pos:line="71" pos:column="32">-<pos:position pos:line="71" pos:column="33"/></operator><literal type="number" pos:line="71" pos:column="33">1<pos:position pos:line="71" pos:column="34"/></literal></expr>]<pos:position pos:line="71" pos:column="35"/></index></name><operator pos:line="71" pos:column="35">.<pos:position pos:line="71" pos:column="36"/></operator><name pos:line="71" pos:column="36">obj<pos:position pos:line="71" pos:column="39"/></name></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="72" pos:column="17">p<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">-&gt;<pos:position pos:line="72" pos:column="23"/></operator><name pos:line="72" pos:column="20">next<pos:position pos:line="72" pos:column="24"/></name></name> <operator pos:line="72" pos:column="25">=<pos:position pos:line="72" pos:column="26"/></operator> <name pos:line="72" pos:column="27">NULL<pos:position pos:line="72" pos:column="31"/></name></expr>;<pos:position pos:line="72" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="73" pos:column="17">paths<pos:position pos:line="73" pos:column="22"/></name> <operator pos:line="73" pos:column="23">=<pos:position pos:line="73" pos:column="24"/></operator> <name><name pos:line="73" pos:column="25">o<pos:position pos:line="73" pos:column="26"/></name><index pos:line="73" pos:column="26">[<expr><literal type="number" pos:line="73" pos:column="27">0<pos:position pos:line="73" pos:column="28"/></literal></expr>]<pos:position pos:line="73" pos:column="29"/></index></name><operator pos:line="73" pos:column="29">.<pos:position pos:line="73" pos:column="30"/></operator><name pos:line="73" pos:column="30">obj<pos:position pos:line="73" pos:column="33"/></name></expr>;<pos:position pos:line="73" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">free<pos:position pos:line="74" pos:column="21"/></name><argument_list pos:line="74" pos:column="21">(<argument><expr><name pos:line="74" pos:column="22">o<pos:position pos:line="74" pos:column="23"/></name></expr></argument>)<pos:position pos:line="74" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="75" pos:column="10"/></block></then></if>


	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name pos:line="78" pos:column="13">num_paths<pos:position pos:line="78" pos:column="22"/></name></expr>)<pos:position pos:line="78" pos:column="23"/></condition><then pos:line="78" pos:column="23"> <block pos:line="78" pos:column="24">{
		<if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><name><name pos:line="79" pos:column="21">opt<pos:position pos:line="79" pos:column="24"/></name><operator pos:line="79" pos:column="24">-&gt;<pos:position pos:line="79" pos:column="29"/></operator><name pos:line="79" pos:column="26">output_format<pos:position pos:line="79" pos:column="39"/></name></name> <operator pos:line="79" pos:column="40">&amp;<pos:position pos:line="79" pos:column="45"/></operator> <operator pos:line="79" pos:column="42">(<pos:position pos:line="79" pos:column="43"/></operator><name pos:line="79" pos:column="43">DIFF_FORMAT_RAW<pos:position pos:line="79" pos:column="58"/></name> <operator pos:line="79" pos:column="59">|<pos:position pos:line="79" pos:column="60"/></operator>
					  <name pos:line="80" pos:column="43">DIFF_FORMAT_NAME<pos:position pos:line="80" pos:column="59"/></name> <operator pos:line="80" pos:column="60">|<pos:position pos:line="80" pos:column="61"/></operator>
					  <name pos:line="81" pos:column="43">DIFF_FORMAT_NAME_STATUS<pos:position pos:line="81" pos:column="66"/></name><operator pos:line="81" pos:column="66">)<pos:position pos:line="81" pos:column="67"/></operator></expr>)<pos:position pos:line="81" pos:column="68"/></condition><then pos:line="81" pos:column="68"> <block pos:line="81" pos:column="69">{
			<for pos:line="82" pos:column="25">for <control pos:line="82" pos:column="29">(<init><expr><name pos:line="82" pos:column="30">p<pos:position pos:line="82" pos:column="31"/></name> <operator pos:line="82" pos:column="32">=<pos:position pos:line="82" pos:column="33"/></operator> <name pos:line="82" pos:column="34">paths<pos:position pos:line="82" pos:column="39"/></name></expr>;<pos:position pos:line="82" pos:column="40"/></init> <condition><expr><name pos:line="82" pos:column="41">p<pos:position pos:line="82" pos:column="42"/></name></expr>;<pos:position pos:line="82" pos:column="43"/></condition> <incr><expr><name pos:line="82" pos:column="44">p<pos:position pos:line="82" pos:column="45"/></name> <operator pos:line="82" pos:column="46">=<pos:position pos:line="82" pos:column="47"/></operator> <name><name pos:line="82" pos:column="48">p<pos:position pos:line="82" pos:column="49"/></name><operator pos:line="82" pos:column="49">-&gt;<pos:position pos:line="82" pos:column="54"/></operator><name pos:line="82" pos:column="51">next<pos:position pos:line="82" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="82" pos:column="56"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="33">show_raw_diff<pos:position pos:line="83" pos:column="46"/></name><argument_list pos:line="83" pos:column="46">(<argument><expr><name pos:line="83" pos:column="47">p<pos:position pos:line="83" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="50">num_parent<pos:position pos:line="83" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="62">rev<pos:position pos:line="83" pos:column="65"/></name></expr></argument>)<pos:position pos:line="83" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="67"/></expr_stmt></block></for>
			<expr_stmt><expr><name pos:line="84" pos:column="25">needsep<pos:position pos:line="84" pos:column="32"/></name> <operator pos:line="84" pos:column="33">=<pos:position pos:line="84" pos:column="34"/></operator> <literal type="number" pos:line="84" pos:column="35">1<pos:position pos:line="84" pos:column="36"/></literal></expr>;<pos:position pos:line="84" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="85" pos:column="18"/></block></then>
		<elseif pos:line="86" pos:column="17">else <if pos:line="86" pos:column="22">if <condition pos:line="86" pos:column="25">(<expr><name><name pos:line="86" pos:column="26">opt<pos:position pos:line="86" pos:column="29"/></name><operator pos:line="86" pos:column="29">-&gt;<pos:position pos:line="86" pos:column="34"/></operator><name pos:line="86" pos:column="31">output_format<pos:position pos:line="86" pos:column="44"/></name></name> <operator pos:line="86" pos:column="45">&amp;<pos:position pos:line="86" pos:column="50"/></operator>
			 <operator pos:line="87" pos:column="26">(<pos:position pos:line="87" pos:column="27"/></operator><name pos:line="87" pos:column="27">DIFF_FORMAT_NUMSTAT<pos:position pos:line="87" pos:column="46"/></name><operator pos:line="87" pos:column="46">|<pos:position pos:line="87" pos:column="47"/></operator><name pos:line="87" pos:column="47">DIFF_FORMAT_DIFFSTAT<pos:position pos:line="87" pos:column="67"/></name><operator pos:line="87" pos:column="67">)<pos:position pos:line="87" pos:column="68"/></operator></expr>)<pos:position pos:line="87" pos:column="69"/></condition><then pos:line="87" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="25">needsep<pos:position pos:line="88" pos:column="32"/></name> <operator pos:line="88" pos:column="33">=<pos:position pos:line="88" pos:column="34"/></operator> <literal type="number" pos:line="88" pos:column="35">1<pos:position pos:line="88" pos:column="36"/></literal></expr>;<pos:position pos:line="88" pos:column="37"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="89" pos:column="17">else <if pos:line="89" pos:column="22">if <condition pos:line="89" pos:column="25">(<expr><name><name pos:line="89" pos:column="26">opt<pos:position pos:line="89" pos:column="29"/></name><operator pos:line="89" pos:column="29">-&gt;<pos:position pos:line="89" pos:column="34"/></operator><name pos:line="89" pos:column="31">output_format<pos:position pos:line="89" pos:column="44"/></name></name> <operator pos:line="89" pos:column="45">&amp;<pos:position pos:line="89" pos:column="50"/></operator> <name pos:line="89" pos:column="47">DIFF_FORMAT_CALLBACK<pos:position pos:line="89" pos:column="67"/></name></expr>)<pos:position pos:line="89" pos:column="68"/></condition><then pos:line="89" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="25">handle_combined_callback<pos:position pos:line="90" pos:column="49"/></name><argument_list pos:line="90" pos:column="49">(<argument><expr><name pos:line="90" pos:column="50">opt<pos:position pos:line="90" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="55">paths<pos:position pos:line="90" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="62">num_parent<pos:position pos:line="90" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="74">num_paths<pos:position pos:line="90" pos:column="83"/></name></expr></argument>)<pos:position pos:line="90" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="85"/></expr_stmt></block></then></if></elseif></if>

		<if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">(<expr><name><name pos:line="92" pos:column="21">opt<pos:position pos:line="92" pos:column="24"/></name><operator pos:line="92" pos:column="24">-&gt;<pos:position pos:line="92" pos:column="29"/></operator><name pos:line="92" pos:column="26">output_format<pos:position pos:line="92" pos:column="39"/></name></name> <operator pos:line="92" pos:column="40">&amp;<pos:position pos:line="92" pos:column="45"/></operator> <name pos:line="92" pos:column="42">DIFF_FORMAT_PATCH<pos:position pos:line="92" pos:column="59"/></name></expr>)<pos:position pos:line="92" pos:column="60"/></condition><then pos:line="92" pos:column="60"> <block pos:line="92" pos:column="61">{
			<if pos:line="93" pos:column="25">if <condition pos:line="93" pos:column="28">(<expr><name pos:line="93" pos:column="29">needsep<pos:position pos:line="93" pos:column="36"/></name></expr>)<pos:position pos:line="93" pos:column="37"/></condition><then pos:line="93" pos:column="37">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="33">printf<pos:position pos:line="94" pos:column="39"/></name><argument_list pos:line="94" pos:column="39">(<argument><expr><literal type="string" pos:line="94" pos:column="40">"%s%c"<pos:position pos:line="94" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="94" pos:column="48">diff_line_prefix<pos:position pos:line="94" pos:column="64"/></name><argument_list pos:line="94" pos:column="64">(<argument><expr><name pos:line="94" pos:column="65">opt<pos:position pos:line="94" pos:column="68"/></name></expr></argument>)<pos:position pos:line="94" pos:column="69"/></argument_list></call></expr></argument>,
				       <argument><expr><name><name pos:line="95" pos:column="40">opt<pos:position pos:line="95" pos:column="43"/></name><operator pos:line="95" pos:column="43">-&gt;<pos:position pos:line="95" pos:column="48"/></operator><name pos:line="95" pos:column="45">line_termination<pos:position pos:line="95" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="63"/></expr_stmt></block></then></if>
			<for pos:line="96" pos:column="25">for <control pos:line="96" pos:column="29">(<init><expr><name pos:line="96" pos:column="30">p<pos:position pos:line="96" pos:column="31"/></name> <operator pos:line="96" pos:column="32">=<pos:position pos:line="96" pos:column="33"/></operator> <name pos:line="96" pos:column="34">paths<pos:position pos:line="96" pos:column="39"/></name></expr>;<pos:position pos:line="96" pos:column="40"/></init> <condition><expr><name pos:line="96" pos:column="41">p<pos:position pos:line="96" pos:column="42"/></name></expr>;<pos:position pos:line="96" pos:column="43"/></condition> <incr><expr><name pos:line="96" pos:column="44">p<pos:position pos:line="96" pos:column="45"/></name> <operator pos:line="96" pos:column="46">=<pos:position pos:line="96" pos:column="47"/></operator> <name><name pos:line="96" pos:column="48">p<pos:position pos:line="96" pos:column="49"/></name><operator pos:line="96" pos:column="49">-&gt;<pos:position pos:line="96" pos:column="54"/></operator><name pos:line="96" pos:column="51">next<pos:position pos:line="96" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="96" pos:column="56"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="97" pos:column="33">show_patch_diff<pos:position pos:line="97" pos:column="48"/></name><argument_list pos:line="97" pos:column="48">(<argument><expr><name pos:line="97" pos:column="49">p<pos:position pos:line="97" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="52">num_parent<pos:position pos:line="97" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="64">dense<pos:position pos:line="97" pos:column="69"/></name></expr></argument>,
						<argument><expr><literal type="number" pos:line="98" pos:column="49">0<pos:position pos:line="98" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="52">rev<pos:position pos:line="98" pos:column="55"/></name></expr></argument>)<pos:position pos:line="98" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="57"/></expr_stmt></block></for>
		}<pos:position pos:line="99" pos:column="18"/></block></then></if>
	}<pos:position pos:line="100" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="102" pos:column="9">/* Clean things up */</comment>
	<while pos:line="103" pos:column="9">while <condition pos:line="103" pos:column="15">(<expr><name pos:line="103" pos:column="16">paths<pos:position pos:line="103" pos:column="21"/></name></expr>)<pos:position pos:line="103" pos:column="22"/></condition> <block pos:line="103" pos:column="23">{
		<decl_stmt><decl><type><name><name pos:line="104" pos:column="17">struct<pos:position pos:line="104" pos:column="23"/></name> <name pos:line="104" pos:column="24">combine_diff_path<pos:position pos:line="104" pos:column="41"/></name></name> <modifier pos:line="104" pos:column="42">*<pos:position pos:line="104" pos:column="43"/></modifier></type><name pos:line="104" pos:column="43">tmp<pos:position pos:line="104" pos:column="46"/></name> <init pos:line="104" pos:column="47">= <expr><name pos:line="104" pos:column="49">paths<pos:position pos:line="104" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="104" pos:column="55"/></decl_stmt>
		<expr_stmt><expr><name pos:line="105" pos:column="17">paths<pos:position pos:line="105" pos:column="22"/></name> <operator pos:line="105" pos:column="23">=<pos:position pos:line="105" pos:column="24"/></operator> <name><name pos:line="105" pos:column="25">paths<pos:position pos:line="105" pos:column="30"/></name><operator pos:line="105" pos:column="30">-&gt;<pos:position pos:line="105" pos:column="35"/></operator><name pos:line="105" pos:column="32">next<pos:position pos:line="105" pos:column="36"/></name></name></expr>;<pos:position pos:line="105" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="106" pos:column="17">free<pos:position pos:line="106" pos:column="21"/></name><argument_list pos:line="106" pos:column="21">(<argument><expr><name pos:line="106" pos:column="22">tmp<pos:position pos:line="106" pos:column="25"/></name></expr></argument>)<pos:position pos:line="106" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="107" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="109" pos:column="9">free_pathspec<pos:position pos:line="109" pos:column="22"/></name><argument_list pos:line="109" pos:column="22">(<argument><expr><operator pos:line="109" pos:column="23">&amp;<pos:position pos:line="109" pos:column="28"/></operator><name><name pos:line="109" pos:column="24">diffopts<pos:position pos:line="109" pos:column="32"/></name><operator pos:line="109" pos:column="32">.<pos:position pos:line="109" pos:column="33"/></operator><name pos:line="109" pos:column="33">pathspec<pos:position pos:line="109" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="43"/></expr_stmt>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6323_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_sought_entry<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">ref<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">sought<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">nr<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">alloc<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
			     <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">name<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ref<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">ref<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_id<pos:position pos:line="5" pos:column="25"/></name></name></type> <name pos:line="5" pos:column="26">oid<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">get_oid_hex<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><name pos:line="7" pos:column="26">name<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="32">&amp;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="33">oid<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="38"/></condition><then pos:line="7" pos:column="38"> <block pos:line="7" pos:column="39">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name><name pos:line="8" pos:column="21">name<pos:position pos:line="8" pos:column="25"/></name><index pos:line="8" pos:column="25">[<expr><name pos:line="8" pos:column="26">GIT_SHA1_HEXSZ<pos:position pos:line="8" pos:column="40"/></name></expr>]<pos:position pos:line="8" pos:column="41"/></index></name> <operator pos:line="8" pos:column="42">==<pos:position pos:line="8" pos:column="44"/></operator> <literal type="char" pos:line="8" pos:column="45">' '<pos:position pos:line="8" pos:column="48"/></literal></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49"> <block pos:line="8" pos:column="50">{
			<comment type="block" pos:line="9" pos:column="25">/* &lt;sha1&gt; &lt;ref&gt;, find refname */</comment>
			<expr_stmt><expr><name pos:line="10" pos:column="25">name<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">+=<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="33">GIT_SHA1_HEXSZ<pos:position pos:line="10" pos:column="47"/></name> <operator pos:line="10" pos:column="48">+<pos:position pos:line="10" pos:column="49"/></operator> <literal type="number" pos:line="10" pos:column="50">1<pos:position pos:line="10" pos:column="51"/></literal></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="11" pos:column="18"/></block></then> <elseif pos:line="11" pos:column="19">else <if pos:line="11" pos:column="24">if <condition pos:line="11" pos:column="27">(<expr><name><name pos:line="11" pos:column="28">name<pos:position pos:line="11" pos:column="32"/></name><index pos:line="11" pos:column="32">[<expr><name pos:line="11" pos:column="33">GIT_SHA1_HEXSZ<pos:position pos:line="11" pos:column="47"/></name></expr>]<pos:position pos:line="11" pos:column="48"/></index></name> <operator pos:line="11" pos:column="49">==<pos:position pos:line="11" pos:column="51"/></operator> <literal type="char" pos:line="11" pos:column="52">'\0'<pos:position pos:line="11" pos:column="56"/></literal></expr>)<pos:position pos:line="11" pos:column="57"/></condition><then pos:line="11" pos:column="57"> <block pos:line="11" pos:column="58">{
			<empty_stmt pos:line="12" pos:column="25">;<pos:position pos:line="12" pos:column="26"/></empty_stmt> <comment type="block" pos:line="12" pos:column="27">/* &lt;sha1&gt;, leave sha1 as name */</comment>
		}<pos:position pos:line="13" pos:column="18"/></block></then></if></elseif> <else pos:line="13" pos:column="19">else <block pos:line="13" pos:column="24">{
			<comment type="block" pos:line="14" pos:column="25">/* &lt;ref&gt;, clear cruft from oid */</comment>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">oidclr<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><operator pos:line="15" pos:column="32">&amp;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="33">oid<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></else></if>
	}<pos:position pos:line="17" pos:column="10"/></block></then> <else pos:line="17" pos:column="11">else <block pos:line="17" pos:column="16">{
		<comment type="block" pos:line="18" pos:column="17">/* &lt;ref&gt;, clear cruft from get_oid_hex */</comment>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">oidclr<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><operator pos:line="19" pos:column="24">&amp;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="25">oid<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="22" pos:column="9">ref<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">alloc_ref<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">name<pos:position pos:line="22" pos:column="29"/></name></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">oidcpy<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><operator pos:line="23" pos:column="16">&amp;<pos:position pos:line="23" pos:column="21"/></operator><name><name pos:line="23" pos:column="17">ref<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">old_oid<pos:position pos:line="23" pos:column="29"/></name></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="31">&amp;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="32">oid<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><operator pos:line="24" pos:column="10">*<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">nr<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">)<pos:position pos:line="24" pos:column="14"/></operator><operator pos:line="24" pos:column="14">++<pos:position pos:line="24" pos:column="16"/></operator></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">ALLOC_GROW<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><operator pos:line="25" pos:column="20">*<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">sought<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="29">*<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">nr<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="34">*<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="35">alloc<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><operator pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">sought<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">)<pos:position pos:line="26" pos:column="18"/></operator><index pos:line="26" pos:column="18">[<expr><operator pos:line="26" pos:column="19">*<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">nr<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">-<pos:position pos:line="26" pos:column="24"/></operator> <literal type="number" pos:line="26" pos:column="25">1<pos:position pos:line="26" pos:column="26"/></literal></expr>]<pos:position pos:line="26" pos:column="27"/></index> <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="30">ref<pos:position pos:line="26" pos:column="33"/></name></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3597_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">rerere_gc<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name><name pos:line="1" pos:column="16">struct<pos:position pos:line="1" pos:column="22"/></name> <name pos:line="1" pos:column="23">string_list<pos:position pos:line="1" pos:column="34"/></name></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">rr<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list<pos:position pos:line="3" pos:column="27"/></name></name></type> <name pos:line="3" pos:column="28">to_remove<pos:position pos:line="3" pos:column="37"/></name> <init pos:line="3" pos:column="38">= <expr><name pos:line="3" pos:column="40">STRING_LIST_INIT_DUP<pos:position pos:line="3" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">DIR<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">dir<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">dirent<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">e<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">time_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">now<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><call><name pos:line="7" pos:column="22">time<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">cutoff_noresolve<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><literal type="number" pos:line="8" pos:column="32">15<pos:position pos:line="8" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">cutoff_resolve<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><literal type="number" pos:line="9" pos:column="30">60<pos:position pos:line="9" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">setup_rerere<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">rr<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="30">0<pos:position pos:line="11" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call> <operator pos:line="11" pos:column="33">&lt;<pos:position pos:line="11" pos:column="37"/></operator> <literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37">
		<block type="pseudo"><return pos:line="12" pos:column="17">return;<pos:position pos:line="12" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">git_config_get_int<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><literal type="string" pos:line="14" pos:column="28">"gc.rerereresolved"<pos:position pos:line="14" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="49">&amp;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="50">cutoff_resolve<pos:position pos:line="14" pos:column="64"/></name></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">git_config_get_int<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><literal type="string" pos:line="15" pos:column="28">"gc.rerereunresolved"<pos:position pos:line="15" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="51">&amp;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="52">cutoff_noresolve<pos:position pos:line="15" pos:column="68"/></name></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">git_config<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">git_default_config<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">NULL<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">dir<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">opendir<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><call><name pos:line="17" pos:column="23">git_path<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><literal type="string" pos:line="17" pos:column="32">"rr-cache"<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">dir<pos:position pos:line="18" pos:column="17"/></name></expr>)<pos:position pos:line="18" pos:column="18"/></condition><then pos:line="18" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">die_errno<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><literal type="string" pos:line="19" pos:column="27">"unable to open rr-cache directory"<pos:position pos:line="19" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="20" pos:column="9">/* Collect stale conflict IDs ... */</comment>
	<while pos:line="21" pos:column="9">while <condition pos:line="21" pos:column="15">(<expr><operator pos:line="21" pos:column="16">(<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">e<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <call><name pos:line="21" pos:column="21">readdir<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">dir<pos:position pos:line="21" pos:column="32"/></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call><operator pos:line="21" pos:column="33">)<pos:position pos:line="21" pos:column="34"/></operator></expr>)<pos:position pos:line="21" pos:column="35"/></condition> <block pos:line="21" pos:column="36">{
		<decl_stmt><decl><type><name><name pos:line="22" pos:column="17">struct<pos:position pos:line="22" pos:column="23"/></name> <name pos:line="22" pos:column="24">rerere_dir<pos:position pos:line="22" pos:column="34"/></name></name> <modifier pos:line="22" pos:column="35">*<pos:position pos:line="22" pos:column="36"/></modifier></type><name pos:line="22" pos:column="36">rr_dir<pos:position pos:line="22" pos:column="42"/></name></decl>;<pos:position pos:line="22" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="23" pos:column="17">struct<pos:position pos:line="23" pos:column="23"/></name> <name pos:line="23" pos:column="24">rerere_id<pos:position pos:line="23" pos:column="33"/></name></name></type> <name pos:line="23" pos:column="34">id<pos:position pos:line="23" pos:column="36"/></name></decl>;<pos:position pos:line="23" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">int<pos:position pos:line="24" pos:column="20"/></name></type> <name pos:line="24" pos:column="21">now_empty<pos:position pos:line="24" pos:column="30"/></name></decl>;<pos:position pos:line="24" pos:column="31"/></decl_stmt>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><call><name pos:line="26" pos:column="21">is_dot_or_dotdot<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><name><name pos:line="26" pos:column="38">e<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">-&gt;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="41">d_name<pos:position pos:line="26" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="49"/></condition><then pos:line="26" pos:column="49">
			<block type="pseudo"><continue pos:line="27" pos:column="25">continue;<pos:position pos:line="27" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="28" pos:column="17">rr_dir<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <call><name pos:line="28" pos:column="26">find_rerere_dir<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name><name pos:line="28" pos:column="42">e<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">-&gt;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="45">d_name<pos:position pos:line="28" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">rr_dir<pos:position pos:line="29" pos:column="28"/></name></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29">
			<block type="pseudo"><continue pos:line="30" pos:column="25">continue;<pos:position pos:line="30" pos:column="34"/></continue></block></then></if> <comment type="block" pos:line="30" pos:column="35">/* or should we remove e-&gt;d_name? */</comment>

		<expr_stmt><expr><name pos:line="32" pos:column="17">now_empty<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">=<pos:position pos:line="32" pos:column="28"/></operator> <literal type="number" pos:line="32" pos:column="29">1<pos:position pos:line="32" pos:column="30"/></literal></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
		<for pos:line="33" pos:column="17">for <control pos:line="33" pos:column="21">(<init><expr><name><name pos:line="33" pos:column="22">id<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">.<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">variant<pos:position pos:line="33" pos:column="32"/></name></name> <operator pos:line="33" pos:column="33">=<pos:position pos:line="33" pos:column="34"/></operator> <literal type="number" pos:line="33" pos:column="35">0<pos:position pos:line="33" pos:column="36"/></literal></expr><operator pos:line="33" pos:column="36">,<pos:position pos:line="33" pos:column="37"/></operator> <expr><name><name pos:line="33" pos:column="38">id<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">.<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="41">collection<pos:position pos:line="33" pos:column="51"/></name></name> <operator pos:line="33" pos:column="52">=<pos:position pos:line="33" pos:column="53"/></operator> <name pos:line="33" pos:column="54">rr_dir<pos:position pos:line="33" pos:column="60"/></name></expr>;<pos:position pos:line="33" pos:column="61"/></init>
		     <condition><expr><name><name pos:line="34" pos:column="22">id<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">.<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">variant<pos:position pos:line="34" pos:column="32"/></name></name> <operator pos:line="34" pos:column="33">&lt;<pos:position pos:line="34" pos:column="37"/></operator> <name><name pos:line="34" pos:column="35">id<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">.<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="38">collection<pos:position pos:line="34" pos:column="48"/></name><operator pos:line="34" pos:column="48">-&gt;<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="50">status_nr<pos:position pos:line="34" pos:column="59"/></name></name></expr>;<pos:position pos:line="34" pos:column="60"/></condition>
		     <incr><expr><name><name pos:line="35" pos:column="22">id<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">.<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">variant<pos:position pos:line="35" pos:column="32"/></name></name><operator pos:line="35" pos:column="32">++<pos:position pos:line="35" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="35"/></control> <block pos:line="35" pos:column="36">{
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">prune_one<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><operator pos:line="36" pos:column="35">&amp;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="36">id<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="40">now<pos:position pos:line="36" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="45">cutoff_resolve<pos:position pos:line="36" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="61">cutoff_noresolve<pos:position pos:line="36" pos:column="77"/></name></expr></argument>)<pos:position pos:line="36" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="79"/></expr_stmt>
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><name><name pos:line="37" pos:column="29">id<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">.<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="32">collection<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">-&gt;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="44">status<pos:position pos:line="37" pos:column="50"/></name><index pos:line="37" pos:column="50">[<expr><name><name pos:line="37" pos:column="51">id<pos:position pos:line="37" pos:column="53"/></name><operator pos:line="37" pos:column="53">.<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="54">variant<pos:position pos:line="37" pos:column="61"/></name></name></expr>]<pos:position pos:line="37" pos:column="62"/></index></name></expr>)<pos:position pos:line="37" pos:column="63"/></condition><then pos:line="37" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="33">now_empty<pos:position pos:line="38" pos:column="42"/></name> <operator pos:line="38" pos:column="43">=<pos:position pos:line="38" pos:column="44"/></operator> <literal type="number" pos:line="38" pos:column="45">0<pos:position pos:line="38" pos:column="46"/></literal></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt></block></then></if>
		}<pos:position pos:line="39" pos:column="18"/></block></for>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">now_empty<pos:position pos:line="40" pos:column="30"/></name></expr>)<pos:position pos:line="40" pos:column="31"/></condition><then pos:line="40" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="25">string_list_append<pos:position pos:line="41" pos:column="43"/></name><argument_list pos:line="41" pos:column="43">(<argument><expr><operator pos:line="41" pos:column="44">&amp;<pos:position pos:line="41" pos:column="49"/></operator><name pos:line="41" pos:column="45">to_remove<pos:position pos:line="41" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="56">e<pos:position pos:line="41" pos:column="57"/></name><operator pos:line="41" pos:column="57">-&gt;<pos:position pos:line="41" pos:column="62"/></operator><name pos:line="41" pos:column="59">d_name<pos:position pos:line="41" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="67"/></expr_stmt></block></then></if>
	}<pos:position pos:line="42" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">closedir<pos:position pos:line="43" pos:column="17"/></name><argument_list pos:line="43" pos:column="17">(<argument><expr><name pos:line="43" pos:column="18">dir<pos:position pos:line="43" pos:column="21"/></name></expr></argument>)<pos:position pos:line="43" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>

	<comment type="block" pos:line="45" pos:column="9">/* ... and then remove the empty directories */</comment>
	<for pos:line="46" pos:column="9">for <control pos:line="46" pos:column="13">(<init><expr><name pos:line="46" pos:column="14">i<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <literal type="number" pos:line="46" pos:column="18">0<pos:position pos:line="46" pos:column="19"/></literal></expr>;<pos:position pos:line="46" pos:column="20"/></init> <condition><expr><name pos:line="46" pos:column="21">i<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">&lt;<pos:position pos:line="46" pos:column="27"/></operator> <name><name pos:line="46" pos:column="25">to_remove<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">.<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="35">nr<pos:position pos:line="46" pos:column="37"/></name></name></expr>;<pos:position pos:line="46" pos:column="38"/></condition> <incr><expr><name pos:line="46" pos:column="39">i<pos:position pos:line="46" pos:column="40"/></name><operator pos:line="46" pos:column="40">++<pos:position pos:line="46" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="46" pos:column="43"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="17">rmdir<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><call><name pos:line="47" pos:column="23">git_path<pos:position pos:line="47" pos:column="31"/></name><argument_list pos:line="47" pos:column="31">(<argument><expr><literal type="string" pos:line="47" pos:column="32">"rr-cache/%s"<pos:position pos:line="47" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="47">to_remove<pos:position pos:line="47" pos:column="56"/></name><operator pos:line="47" pos:column="56">.<pos:position pos:line="47" pos:column="57"/></operator><name pos:line="47" pos:column="57">items<pos:position pos:line="47" pos:column="62"/></name><index pos:line="47" pos:column="62">[<expr><name pos:line="47" pos:column="63">i<pos:position pos:line="47" pos:column="64"/></name></expr>]<pos:position pos:line="47" pos:column="65"/></index></name><operator pos:line="47" pos:column="65">.<pos:position pos:line="47" pos:column="66"/></operator><name pos:line="47" pos:column="66">string<pos:position pos:line="47" pos:column="72"/></name></expr></argument>)<pos:position pos:line="47" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="75"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">string_list_clear<pos:position pos:line="48" pos:column="26"/></name><argument_list pos:line="48" pos:column="26">(<argument><expr><operator pos:line="48" pos:column="27">&amp;<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="28">to_remove<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="39">0<pos:position pos:line="48" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">rollback_lock_file<pos:position pos:line="49" pos:column="27"/></name><argument_list pos:line="49" pos:column="27">(<argument><expr><operator pos:line="49" pos:column="28">&amp;<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="29">write_lock<pos:position pos:line="49" pos:column="39"/></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

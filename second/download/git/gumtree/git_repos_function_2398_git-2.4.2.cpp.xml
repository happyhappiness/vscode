<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2398_git-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">find_cache_pos<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">traverse_info<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">info<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
			  <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">name_entry<pos:position pos:line="2" pos:column="50"/></name></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">p<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">pos<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">unpack_trees_options<pos:position pos:line="5" pos:column="36"/></name></name> <modifier pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></modifier></type><name pos:line="5" pos:column="38">o<pos:position pos:line="5" pos:column="39"/></name> <init pos:line="5" pos:column="40">= <expr><name><name pos:line="5" pos:column="42">info<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">-&gt;<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="48">data<pos:position pos:line="5" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">index_state<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">index<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><name><name pos:line="6" pos:column="37">o<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">-&gt;<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="40">src_index<pos:position pos:line="6" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">pfxlen<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name><name pos:line="7" pos:column="22">info<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">pathlen<pos:position pos:line="7" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">p_len<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><call><name pos:line="8" pos:column="21">tree_entry_len<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">p<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">pos<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <name><name pos:line="10" pos:column="20">o<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">cache_bottom<pos:position pos:line="10" pos:column="35"/></name></name></expr>;<pos:position pos:line="10" pos:column="36"/></init> <condition><expr><name pos:line="10" pos:column="37">pos<pos:position pos:line="10" pos:column="40"/></name> <operator pos:line="10" pos:column="41">&lt;<pos:position pos:line="10" pos:column="45"/></operator> <name><name pos:line="10" pos:column="43">index<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">-&gt;<pos:position pos:line="10" pos:column="53"/></operator><name pos:line="10" pos:column="50">cache_nr<pos:position pos:line="10" pos:column="58"/></name></name></expr>;<pos:position pos:line="10" pos:column="59"/></condition> <incr><expr><name pos:line="10" pos:column="60">pos<pos:position pos:line="10" pos:column="63"/></name><operator pos:line="10" pos:column="63">++<pos:position pos:line="10" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="66"/></control> <block pos:line="10" pos:column="67">{
		<decl_stmt><decl><type><specifier pos:line="11" pos:column="17">const<pos:position pos:line="11" pos:column="22"/></specifier> <name><name pos:line="11" pos:column="23">struct<pos:position pos:line="11" pos:column="29"/></name> <name pos:line="11" pos:column="30">cache_entry<pos:position pos:line="11" pos:column="41"/></name></name> <modifier pos:line="11" pos:column="42">*<pos:position pos:line="11" pos:column="43"/></modifier></type><name pos:line="11" pos:column="43">ce<pos:position pos:line="11" pos:column="45"/></name> <init pos:line="11" pos:column="46">= <expr><name><name pos:line="11" pos:column="48">index<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">-&gt;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="55">cache<pos:position pos:line="11" pos:column="60"/></name><index pos:line="11" pos:column="60">[<expr><name pos:line="11" pos:column="61">pos<pos:position pos:line="11" pos:column="64"/></name></expr>]<pos:position pos:line="11" pos:column="65"/></index></name></expr></init></decl>;<pos:position pos:line="11" pos:column="66"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="12" pos:column="17">const<pos:position pos:line="12" pos:column="22"/></specifier> <name pos:line="12" pos:column="23">char<pos:position pos:line="12" pos:column="27"/></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">ce_name<pos:position pos:line="12" pos:column="36"/></name></decl>, <modifier pos:line="12" pos:column="38">*<pos:position pos:line="12" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="39">ce_slash<pos:position pos:line="12" pos:column="47"/></name></decl>;<pos:position pos:line="12" pos:column="48"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">cmp<pos:position pos:line="13" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="26">ce_len<pos:position pos:line="13" pos:column="32"/></name></decl>;<pos:position pos:line="13" pos:column="33"/></decl_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">ce<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">ce_flags<pos:position pos:line="15" pos:column="33"/></name></name> <operator pos:line="15" pos:column="34">&amp;<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="36">CE_UNPACKED<pos:position pos:line="15" pos:column="47"/></name></expr>)<pos:position pos:line="15" pos:column="48"/></condition><then pos:line="15" pos:column="48"> <block pos:line="15" pos:column="49">{
			<comment type="block" pos:line="16" pos:column="25">/*
			 * cache_bottom entry is already unpacked, so
			 * we can never match it; don't check it
			 * again.
			 */</comment>
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name pos:line="21" pos:column="29">pos<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">==<pos:position pos:line="21" pos:column="35"/></operator> <name><name pos:line="21" pos:column="36">o<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">-&gt;<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="39">cache_bottom<pos:position pos:line="21" pos:column="51"/></name></name></expr>)<pos:position pos:line="21" pos:column="52"/></condition><then pos:line="21" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="33">++<pos:position pos:line="22" pos:column="35"/></operator><name><name pos:line="22" pos:column="35">o<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">cache_bottom<pos:position pos:line="22" pos:column="50"/></name></name></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt></block></then></if>
			<continue pos:line="23" pos:column="25">continue;<pos:position pos:line="23" pos:column="34"/></continue>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><call><name pos:line="25" pos:column="22">ce_in_traverse_path<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><name pos:line="25" pos:column="42">ce<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="46">info<pos:position pos:line="25" pos:column="50"/></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="52"/></condition><then pos:line="25" pos:column="52">
			<block type="pseudo"><continue pos:line="26" pos:column="25">continue;<pos:position pos:line="26" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="27" pos:column="17">ce_name<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <name><name pos:line="27" pos:column="27">ce<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">name<pos:position pos:line="27" pos:column="35"/></name></name> <operator pos:line="27" pos:column="36">+<pos:position pos:line="27" pos:column="37"/></operator> <name pos:line="27" pos:column="38">pfxlen<pos:position pos:line="27" pos:column="44"/></name></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">ce_slash<pos:position pos:line="28" pos:column="25"/></name> <operator pos:line="28" pos:column="26">=<pos:position pos:line="28" pos:column="27"/></operator> <call><name pos:line="28" pos:column="28">strchr<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">ce_name<pos:position pos:line="28" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="28" pos:column="44">'/'<pos:position pos:line="28" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">ce_slash<pos:position pos:line="29" pos:column="29"/></name></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="25">ce_len<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">=<pos:position pos:line="30" pos:column="33"/></operator> <name pos:line="30" pos:column="34">ce_slash<pos:position pos:line="30" pos:column="42"/></name> <operator pos:line="30" pos:column="43">-<pos:position pos:line="30" pos:column="44"/></operator> <name pos:line="30" pos:column="45">ce_name<pos:position pos:line="30" pos:column="52"/></name></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt></block></then>
		<else pos:line="31" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="25">ce_len<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">=<pos:position pos:line="32" pos:column="33"/></operator> <call><name pos:line="32" pos:column="34">ce_namelen<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">(<argument><expr><name pos:line="32" pos:column="45">ce<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call> <operator pos:line="32" pos:column="49">-<pos:position pos:line="32" pos:column="50"/></operator> <name pos:line="32" pos:column="51">pfxlen<pos:position pos:line="32" pos:column="57"/></name></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="33" pos:column="17">cmp<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <call><name pos:line="33" pos:column="23">name_compare<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name><name pos:line="33" pos:column="36">p<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">-&gt;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="39">path<pos:position pos:line="33" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="45">p_len<pos:position pos:line="33" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="52">ce_name<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="61">ce_len<pos:position pos:line="33" pos:column="67"/></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="69"/></expr_stmt>
		<comment type="block" pos:line="34" pos:column="17">/*
		 * Exact match; if we have a directory we need to
		 * delay returning it.
		 */</comment>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">cmp<pos:position pos:line="38" pos:column="25"/></name></expr>)<pos:position pos:line="38" pos:column="26"/></condition><then pos:line="38" pos:column="26">
			<block type="pseudo"><return pos:line="39" pos:column="25">return <expr><ternary><condition><expr><name pos:line="39" pos:column="32">ce_slash<pos:position pos:line="39" pos:column="40"/></name></expr> ?<pos:position pos:line="39" pos:column="42"/></condition><then pos:line="39" pos:column="42"> <expr><operator pos:line="39" pos:column="43">-<pos:position pos:line="39" pos:column="44"/></operator><literal type="number" pos:line="39" pos:column="44">2<pos:position pos:line="39" pos:column="45"/></literal> <operator pos:line="39" pos:column="46">-<pos:position pos:line="39" pos:column="47"/></operator> <name pos:line="39" pos:column="48">pos<pos:position pos:line="39" pos:column="51"/></name></expr> <pos:position pos:line="39" pos:column="52"/></then><else pos:line="39" pos:column="52">: <expr><name pos:line="39" pos:column="54">pos<pos:position pos:line="39" pos:column="57"/></name></expr></else></ternary></expr>;<pos:position pos:line="39" pos:column="58"/></return></block></then></if>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><literal type="number" pos:line="40" pos:column="21">0<pos:position pos:line="40" pos:column="22"/></literal> <operator pos:line="40" pos:column="23">&lt;<pos:position pos:line="40" pos:column="27"/></operator> <name pos:line="40" pos:column="25">cmp<pos:position pos:line="40" pos:column="28"/></name></expr>)<pos:position pos:line="40" pos:column="29"/></condition><then pos:line="40" pos:column="29">
			<block type="pseudo"><continue pos:line="41" pos:column="25">continue;<pos:position pos:line="41" pos:column="34"/></continue></block></then></if> <comment type="block" pos:line="41" pos:column="35">/* keep looking */</comment>
		<comment type="block" pos:line="42" pos:column="17">/*
		 * ce_name sorts after p-&gt;path; could it be that we
		 * have files under p-&gt;path directory in the index?
		 * E.g.  ce_name == "t-i", and p-&gt;path == "t"; we may
		 * have "t/a" in the index.
		 */</comment>
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">p_len<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">&lt;<pos:position pos:line="48" pos:column="31"/></operator> <name pos:line="48" pos:column="29">ce_len<pos:position pos:line="48" pos:column="35"/></name> <operator pos:line="48" pos:column="36">&amp;&amp;<pos:position pos:line="48" pos:column="46"/></operator> <operator pos:line="48" pos:column="39">!<pos:position pos:line="48" pos:column="40"/></operator><call><name pos:line="48" pos:column="40">memcmp<pos:position pos:line="48" pos:column="46"/></name><argument_list pos:line="48" pos:column="46">(<argument><expr><name pos:line="48" pos:column="47">ce_name<pos:position pos:line="48" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="56">p<pos:position pos:line="48" pos:column="57"/></name><operator pos:line="48" pos:column="57">-&gt;<pos:position pos:line="48" pos:column="62"/></operator><name pos:line="48" pos:column="59">path<pos:position pos:line="48" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="65">p_len<pos:position pos:line="48" pos:column="70"/></name></expr></argument>)<pos:position pos:line="48" pos:column="71"/></argument_list></call> <operator pos:line="48" pos:column="72">&amp;&amp;<pos:position pos:line="48" pos:column="82"/></operator>
		    <name><name pos:line="49" pos:column="21">ce_name<pos:position pos:line="49" pos:column="28"/></name><index pos:line="49" pos:column="28">[<expr><name pos:line="49" pos:column="29">p_len<pos:position pos:line="49" pos:column="34"/></name></expr>]<pos:position pos:line="49" pos:column="35"/></index></name> <operator pos:line="49" pos:column="36">&lt;<pos:position pos:line="49" pos:column="40"/></operator> <literal type="char" pos:line="49" pos:column="38">'/'<pos:position pos:line="49" pos:column="41"/></literal></expr>)<pos:position pos:line="49" pos:column="42"/></condition><then pos:line="49" pos:column="42">
			<block type="pseudo"><continue pos:line="50" pos:column="25">continue;<pos:position pos:line="50" pos:column="34"/></continue></block></then></if> <comment type="block" pos:line="50" pos:column="35">/* keep looking */</comment>
		<break pos:line="51" pos:column="17">break;<pos:position pos:line="51" pos:column="23"/></break>
	}<pos:position pos:line="52" pos:column="10"/></block></for>
	<return pos:line="53" pos:column="9">return <expr><operator pos:line="53" pos:column="16">-<pos:position pos:line="53" pos:column="17"/></operator><literal type="number" pos:line="53" pos:column="17">1<pos:position pos:line="53" pos:column="18"/></literal></expr>;<pos:position pos:line="53" pos:column="19"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1497_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">get_accept_language<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">cached_accept_language<pos:position pos:line="3" pos:column="36"/></name></expr>)<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37"> <block pos:line="3" pos:column="38">{
		<decl_stmt><decl><type><name><name pos:line="4" pos:column="17">struct<pos:position pos:line="4" pos:column="23"/></name> <name pos:line="4" pos:column="24">strbuf<pos:position pos:line="4" pos:column="30"/></name></name></type> <name pos:line="4" pos:column="31">buf<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><name pos:line="4" pos:column="37">STRBUF_INIT<pos:position pos:line="4" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="5" pos:column="17">write_accept_language<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><operator pos:line="5" pos:column="39">&amp;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="40">buf<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="45"/></expr_stmt>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><name><name pos:line="6" pos:column="21">buf<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">.<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">len<pos:position pos:line="6" pos:column="28"/></name></name> <operator pos:line="6" pos:column="29">&gt;<pos:position pos:line="6" pos:column="33"/></operator> <literal type="number" pos:line="6" pos:column="31">0<pos:position pos:line="6" pos:column="32"/></literal></expr>)<pos:position pos:line="6" pos:column="33"/></condition><then pos:line="6" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="25">cached_accept_language<pos:position pos:line="7" pos:column="47"/></name> <operator pos:line="7" pos:column="48">=<pos:position pos:line="7" pos:column="49"/></operator> <call><name pos:line="7" pos:column="50">strbuf_detach<pos:position pos:line="7" pos:column="63"/></name><argument_list pos:line="7" pos:column="63">(<argument><expr><operator pos:line="7" pos:column="64">&amp;<pos:position pos:line="7" pos:column="69"/></operator><name pos:line="7" pos:column="65">buf<pos:position pos:line="7" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="70">NULL<pos:position pos:line="7" pos:column="74"/></name></expr></argument>)<pos:position pos:line="7" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="76"/></expr_stmt></block></then></if>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>

	<return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">cached_accept_language<pos:position pos:line="10" pos:column="38"/></name></expr>;<pos:position pos:line="10" pos:column="39"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

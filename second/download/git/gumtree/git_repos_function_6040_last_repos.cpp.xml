<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6040_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_one_path<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">cache_entry<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">old<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">path<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="74">int<pos:position pos:line="1" pos:column="77"/></name></type> <name pos:line="1" pos:column="78">len<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="83">struct<pos:position pos:line="1" pos:column="89"/></name> <name pos:line="1" pos:column="90">stat<pos:position pos:line="1" pos:column="94"/></name></name> <modifier pos:line="1" pos:column="95">*<pos:position pos:line="1" pos:column="96"/></modifier></type><name pos:line="1" pos:column="96">st<pos:position pos:line="1" pos:column="98"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="99"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">option<pos:position pos:line="3" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="21">size<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">cache_entry<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">ce<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* Was the old index entry already up-to-date? */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">old<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&amp;&amp;<pos:position pos:line="7" pos:column="27"/></operator> <operator pos:line="7" pos:column="20">!<pos:position pos:line="7" pos:column="21"/></operator><call><name pos:line="7" pos:column="21">ce_stage<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">old<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call> <operator pos:line="7" pos:column="35">&amp;&amp;<pos:position pos:line="7" pos:column="45"/></operator> <operator pos:line="7" pos:column="38">!<pos:position pos:line="7" pos:column="39"/></operator><call><name pos:line="7" pos:column="39">ce_match_stat<pos:position pos:line="7" pos:column="52"/></name><argument_list pos:line="7" pos:column="52">(<argument><expr><name pos:line="7" pos:column="53">old<pos:position pos:line="7" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="58">st<pos:position pos:line="7" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="62">0<pos:position pos:line="7" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="65"/></condition><then pos:line="7" pos:column="65">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">size<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">cache_entry_size<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">len<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">ce<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">xcalloc<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><literal type="number" pos:line="11" pos:column="22">1<pos:position pos:line="11" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="25">size<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">memcpy<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name><name pos:line="12" pos:column="16">ce<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">name<pos:position pos:line="12" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="26">path<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">len<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">ce<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">ce_flags<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <call><name pos:line="13" pos:column="24">create_ce_flags<pos:position pos:line="13" pos:column="39"/></name><argument_list pos:line="13" pos:column="39">(<argument><expr><literal type="number" pos:line="13" pos:column="40">0<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">ce<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">ce_namelen<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">len<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">fill_stat_cache_info<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">ce<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">st<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">ce<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">ce_mode<pos:position pos:line="16" pos:column="20"/></name></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <call><name pos:line="16" pos:column="23">ce_mode_from_stat<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><name pos:line="16" pos:column="41">old<pos:position pos:line="16" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="46">st<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">st_mode<pos:position pos:line="16" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">index_path<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name><name pos:line="18" pos:column="24">ce<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">-&gt;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="28">oid<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">.<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="32">hash<pos:position pos:line="18" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">path<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">st<pos:position pos:line="18" pos:column="46"/></name></expr></argument>,
		       <argument><expr><ternary><condition><expr><name pos:line="19" pos:column="24">info_only<pos:position pos:line="19" pos:column="33"/></name></expr> ?<pos:position pos:line="19" pos:column="35"/></condition><then pos:line="19" pos:column="35"> <expr><literal type="number" pos:line="19" pos:column="36">0<pos:position pos:line="19" pos:column="37"/></literal></expr> <pos:position pos:line="19" pos:column="38"/></then><else pos:line="19" pos:column="38">: <expr><name pos:line="19" pos:column="40">HASH_WRITE_OBJECT<pos:position pos:line="19" pos:column="57"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="59"/></condition><then pos:line="19" pos:column="59"> <block pos:line="19" pos:column="60">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">free<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">ce<pos:position pos:line="20" pos:column="24"/></name></expr></argument>)<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><operator pos:line="21" pos:column="24">-<pos:position pos:line="21" pos:column="25"/></operator><literal type="number" pos:line="21" pos:column="25">1<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="23" pos:column="9">option<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <ternary><condition><expr><name pos:line="23" pos:column="18">allow_add<pos:position pos:line="23" pos:column="27"/></name></expr> ?<pos:position pos:line="23" pos:column="29"/></condition><then pos:line="23" pos:column="29"> <expr><name pos:line="23" pos:column="30">ADD_CACHE_OK_TO_ADD<pos:position pos:line="23" pos:column="49"/></name></expr> <pos:position pos:line="23" pos:column="50"/></then><else pos:line="23" pos:column="50">: <expr><literal type="number" pos:line="23" pos:column="52">0<pos:position pos:line="23" pos:column="53"/></literal></expr></else></ternary></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">option<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">|=<pos:position pos:line="24" pos:column="18"/></operator> <ternary><condition><expr><name pos:line="24" pos:column="19">allow_replace<pos:position pos:line="24" pos:column="32"/></name></expr> ?<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34"> <expr><name pos:line="24" pos:column="35">ADD_CACHE_OK_TO_REPLACE<pos:position pos:line="24" pos:column="58"/></name></expr> <pos:position pos:line="24" pos:column="59"/></then><else pos:line="24" pos:column="59">: <expr><literal type="number" pos:line="24" pos:column="61">0<pos:position pos:line="24" pos:column="62"/></literal></expr></else></ternary></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">add_cache_entry<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">ce<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="33">option<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="41"/></condition><then pos:line="25" pos:column="41">
		<block type="pseudo"><return pos:line="26" pos:column="17">return <expr><call><name pos:line="26" pos:column="24">error<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><literal type="string" pos:line="26" pos:column="30">"%s: cannot add to the index - missing --add option?"<pos:position pos:line="26" pos:column="83"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="85">path<pos:position pos:line="26" pos:column="89"/></name></expr></argument>)<pos:position pos:line="26" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="91"/></return></block></then></if>
	<return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

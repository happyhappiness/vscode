<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6130_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">grep_oid<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">grep_opt<pos:position pos:line="1" pos:column="36"/></name></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">opt<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name><name pos:line="1" pos:column="49">struct<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">object_id<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">oid<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
		     <parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">filename<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">tree_name_len<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
		     <parameter><decl><type><specifier pos:line="3" pos:column="22">const<pos:position pos:line="3" pos:column="27"/></specifier> <name pos:line="3" pos:column="28">char<pos:position pos:line="3" pos:column="32"/></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">path<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="39"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">pathbuf<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><name pos:line="5" pos:column="33">STRBUF_INIT<pos:position pos:line="5" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">super_prefix<pos:position pos:line="7" pos:column="25"/></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26"> <block pos:line="7" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">strbuf_add<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><operator pos:line="8" pos:column="28">&amp;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="29">pathbuf<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="38">filename<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">tree_name_len<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">strbuf_addstr<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><operator pos:line="9" pos:column="31">&amp;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="32">pathbuf<pos:position pos:line="9" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="41">super_prefix<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">strbuf_addstr<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><operator pos:line="10" pos:column="31">&amp;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="32">pathbuf<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">filename<pos:position pos:line="10" pos:column="49"/></name> <operator pos:line="10" pos:column="50">+<pos:position pos:line="10" pos:column="51"/></operator> <name pos:line="10" pos:column="52">tree_name_len<pos:position pos:line="10" pos:column="65"/></name></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then> <else pos:line="11" pos:column="11">else <block pos:line="11" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">strbuf_addstr<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><operator pos:line="12" pos:column="31">&amp;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="32">pathbuf<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="41">filename<pos:position pos:line="12" pos:column="49"/></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></else></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">opt<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">relative<pos:position pos:line="15" pos:column="26"/></name></name> <operator pos:line="15" pos:column="27">&amp;&amp;<pos:position pos:line="15" pos:column="37"/></operator> <name><name pos:line="15" pos:column="30">opt<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">prefix_length<pos:position pos:line="15" pos:column="48"/></name></name></expr>)<pos:position pos:line="15" pos:column="49"/></condition><then pos:line="15" pos:column="49"> <block pos:line="15" pos:column="50">{
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">char<pos:position pos:line="16" pos:column="21"/></name> <modifier pos:line="16" pos:column="22">*<pos:position pos:line="16" pos:column="23"/></modifier></type><name pos:line="16" pos:column="23">name<pos:position pos:line="16" pos:column="27"/></name> <init pos:line="16" pos:column="28">= <expr><call><name pos:line="16" pos:column="30">strbuf_detach<pos:position pos:line="16" pos:column="43"/></name><argument_list pos:line="16" pos:column="43">(<argument><expr><operator pos:line="16" pos:column="44">&amp;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="45">pathbuf<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="54">NULL<pos:position pos:line="16" pos:column="58"/></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="60"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">quote_path_relative<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">name<pos:position pos:line="17" pos:column="41"/></name> <operator pos:line="17" pos:column="42">+<pos:position pos:line="17" pos:column="43"/></operator> <name pos:line="17" pos:column="44">tree_name_len<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="59">opt<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">prefix<pos:position pos:line="17" pos:column="70"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="72">&amp;<pos:position pos:line="17" pos:column="77"/></operator><name pos:line="17" pos:column="73">pathbuf<pos:position pos:line="17" pos:column="80"/></name></expr></argument>)<pos:position pos:line="17" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="82"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">strbuf_insert<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><operator pos:line="18" pos:column="31">&amp;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="32">pathbuf<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="41">0<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">name<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">tree_name_len<pos:position pos:line="18" pos:column="63"/></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">free<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">name<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

<cpp:ifndef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifndef<pos:position pos:line="22" pos:column="8"/></cpp:directive> <name pos:line="22" pos:column="9">NO_PTHREADS<pos:position pos:line="22" pos:column="20"/></name></cpp:ifndef>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">num_threads<pos:position pos:line="23" pos:column="24"/></name></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25"> <block pos:line="23" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">add_work<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">opt<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="31">GREP_SOURCE_OID<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="48">pathbuf<pos:position pos:line="24" pos:column="55"/></name><operator pos:line="24" pos:column="55">.<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="56">buf<pos:position pos:line="24" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">path<pos:position pos:line="24" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="67">oid<pos:position pos:line="24" pos:column="70"/></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">strbuf_release<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><operator pos:line="25" pos:column="32">&amp;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="33">pathbuf<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><literal type="number" pos:line="26" pos:column="24">0<pos:position pos:line="26" pos:column="25"/></literal></expr>;<pos:position pos:line="26" pos:column="26"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then> <else pos:line="27" pos:column="11">else
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
	<block pos:line="29" pos:column="9">{
		<decl_stmt><decl><type><name><name pos:line="30" pos:column="17">struct<pos:position pos:line="30" pos:column="23"/></name> <name pos:line="30" pos:column="24">grep_source<pos:position pos:line="30" pos:column="35"/></name></name></type> <name pos:line="30" pos:column="36">gs<pos:position pos:line="30" pos:column="38"/></name></decl>;<pos:position pos:line="30" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">int<pos:position pos:line="31" pos:column="20"/></name></type> <name pos:line="31" pos:column="21">hit<pos:position pos:line="31" pos:column="24"/></name></decl>;<pos:position pos:line="31" pos:column="25"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="33" pos:column="17">grep_source_init<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><operator pos:line="33" pos:column="34">&amp;<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="35">gs<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">GREP_SOURCE_OID<pos:position pos:line="33" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="56">pathbuf<pos:position pos:line="33" pos:column="63"/></name><operator pos:line="33" pos:column="63">.<pos:position pos:line="33" pos:column="64"/></operator><name pos:line="33" pos:column="64">buf<pos:position pos:line="33" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="69">path<pos:position pos:line="33" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="75">oid<pos:position pos:line="33" pos:column="78"/></name></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">strbuf_release<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><operator pos:line="34" pos:column="32">&amp;<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="33">pathbuf<pos:position pos:line="34" pos:column="40"/></name></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">hit<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <call><name pos:line="35" pos:column="23">grep_source<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">opt<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="40">&amp;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="41">gs<pos:position pos:line="35" pos:column="43"/></name></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="37" pos:column="17">grep_source_clear<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><operator pos:line="37" pos:column="35">&amp;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="36">gs<pos:position pos:line="37" pos:column="38"/></name></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
		<return pos:line="38" pos:column="17">return <expr><name pos:line="38" pos:column="24">hit<pos:position pos:line="38" pos:column="27"/></name></expr>;<pos:position pos:line="38" pos:column="28"/></return>
	}<pos:position pos:line="39" pos:column="10"/></block></else></if>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2613.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">print_ok_ref_status<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">ref<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">ref<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">porcelain<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">ref<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">-&gt;<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="18">deletion<pos:position pos:line="3" pos:column="26"/></name></name></expr>)<pos:position pos:line="3" pos:column="27"/></condition><then pos:line="3" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="17">print_ref_status<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><literal type="char" pos:line="4" pos:column="34">'-'<pos:position pos:line="4" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="39">"[deleted]"<pos:position pos:line="4" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="52">ref<pos:position pos:line="4" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="57">NULL<pos:position pos:line="4" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="63">NULL<pos:position pos:line="4" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="69">porcelain<pos:position pos:line="4" pos:column="78"/></name></expr></argument>)<pos:position pos:line="4" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="80"/></expr_stmt></block></then>
	<elseif pos:line="5" pos:column="9">else <if pos:line="5" pos:column="14">if <condition pos:line="5" pos:column="17">(<expr><call><name pos:line="5" pos:column="18">is_null_sha1<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><name><name pos:line="5" pos:column="31">ref<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">-&gt;<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="36">old_sha1<pos:position pos:line="5" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="46"/></condition><then pos:line="5" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">print_ref_status<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><literal type="char" pos:line="6" pos:column="34">'*'<pos:position pos:line="6" pos:column="37"/></literal></expr></argument>,
			<argument><expr><operator pos:line="7" pos:column="25">(<pos:position pos:line="7" pos:column="26"/></operator><ternary><condition><expr><call><name pos:line="7" pos:column="26">starts_with<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><name><name pos:line="7" pos:column="38">ref<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">-&gt;<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="43">name<pos:position pos:line="7" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="49">"refs/tags/"<pos:position pos:line="7" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call></expr> ?<pos:position pos:line="7" pos:column="64"/></condition><then pos:line="7" pos:column="64"> <expr><literal type="string" pos:line="7" pos:column="65">"[new tag]"<pos:position pos:line="7" pos:column="76"/></literal></expr> <pos:position pos:line="7" pos:column="77"/></then><else pos:line="7" pos:column="77">:
			<expr><literal type="string" pos:line="8" pos:column="25">"[new branch]"<pos:position pos:line="8" pos:column="39"/></literal></expr></else></ternary><operator pos:line="8" pos:column="39">)<pos:position pos:line="8" pos:column="40"/></operator></expr></argument>,
			<argument><expr><name pos:line="9" pos:column="25">ref<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="30">ref<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">peer_ref<pos:position pos:line="9" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="45">NULL<pos:position pos:line="9" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="51">porcelain<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt></block></then></if></elseif>
	<else pos:line="10" pos:column="9">else <block pos:line="10" pos:column="14">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">char<pos:position pos:line="11" pos:column="21"/></name></type> <name><name pos:line="11" pos:column="22">quickref<pos:position pos:line="11" pos:column="30"/></name><index pos:line="11" pos:column="30">[<expr><literal type="number" pos:line="11" pos:column="31">84<pos:position pos:line="11" pos:column="33"/></literal></expr>]<pos:position pos:line="11" pos:column="34"/></index></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name></type> <name pos:line="12" pos:column="22">type<pos:position pos:line="12" pos:column="26"/></name></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name pos:line="13" pos:column="23">char<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">msg<pos:position pos:line="13" pos:column="32"/></name></decl>;<pos:position pos:line="13" pos:column="33"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="15" pos:column="17">strcpy<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">quickref<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="34">status_abbrev<pos:position pos:line="15" pos:column="47"/></name><argument_list pos:line="15" pos:column="47">(<argument><expr><name><name pos:line="15" pos:column="48">ref<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">old_sha1<pos:position pos:line="15" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">ref<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">forced_update<pos:position pos:line="16" pos:column="39"/></name></name></expr>)<pos:position pos:line="16" pos:column="40"/></condition><then pos:line="16" pos:column="40"> <block pos:line="16" pos:column="41">{
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">strcat<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">quickref<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="42">"..."<pos:position pos:line="17" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="18" pos:column="25">type<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">=<pos:position pos:line="18" pos:column="31"/></operator> <literal type="char" pos:line="18" pos:column="32">'+'<pos:position pos:line="18" pos:column="35"/></literal></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="19" pos:column="25">msg<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <literal type="string" pos:line="19" pos:column="31">"forced update"<pos:position pos:line="19" pos:column="46"/></literal></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></then> <else pos:line="20" pos:column="19">else <block pos:line="20" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">strcat<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">quickref<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="42">".."<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">type<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <literal type="char" pos:line="22" pos:column="32">' '<pos:position pos:line="22" pos:column="35"/></literal></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="23" pos:column="25">msg<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <name pos:line="23" pos:column="31">NULL<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">strcat<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">quickref<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="34">status_abbrev<pos:position pos:line="25" pos:column="47"/></name><argument_list pos:line="25" pos:column="47">(<argument><expr><name><name pos:line="25" pos:column="48">ref<pos:position pos:line="25" pos:column="51"/></name><operator pos:line="25" pos:column="51">-&gt;<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="53">new_sha1<pos:position pos:line="25" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="27" pos:column="17">print_ref_status<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">type<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="40">quickref<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">ref<pos:position pos:line="27" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="55">ref<pos:position pos:line="27" pos:column="58"/></name><operator pos:line="27" pos:column="58">-&gt;<pos:position pos:line="27" pos:column="63"/></operator><name pos:line="27" pos:column="60">peer_ref<pos:position pos:line="27" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="70">msg<pos:position pos:line="27" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="75">porcelain<pos:position pos:line="27" pos:column="84"/></name></expr></argument>)<pos:position pos:line="27" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="86"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></else></if>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2355_git-2.13.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_excludes<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">fname<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">base<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">baselen<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">exclude_list<pos:position pos:line="2" pos:column="44"/></name></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">el<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">int<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">check_index<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="3" pos:column="25">struct<pos:position pos:line="3" pos:column="31"/></name> <name pos:line="3" pos:column="32">sha1_stat<pos:position pos:line="3" pos:column="41"/></name></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">sha1_stat<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="53"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">stat<pos:position pos:line="5" pos:column="20"/></name></name></type> <name pos:line="5" pos:column="21">st<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">fd<pos:position pos:line="6" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="17">i<pos:position pos:line="6" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="20">lineno<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><literal type="number" pos:line="6" pos:column="29">1<pos:position pos:line="6" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">size<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><literal type="number" pos:line="7" pos:column="23">0<pos:position pos:line="7" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">buf<pos:position pos:line="8" pos:column="18"/></name></decl>, <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="21">entry<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">fd<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">open<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">fname<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="26">O_RDONLY<pos:position pos:line="10" pos:column="34"/></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">fd<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">&lt;<pos:position pos:line="11" pos:column="20"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal> <operator pos:line="11" pos:column="20">||<pos:position pos:line="11" pos:column="22"/></operator> <call><name pos:line="11" pos:column="23">fstat<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">fd<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="33">&amp;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="34">st<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call> <operator pos:line="11" pos:column="38">&lt;<pos:position pos:line="11" pos:column="42"/></operator> <literal type="number" pos:line="11" pos:column="40">0<pos:position pos:line="11" pos:column="41"/></literal></expr>)<pos:position pos:line="11" pos:column="42"/></condition><then pos:line="11" pos:column="42"> <block pos:line="11" pos:column="43">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">errno<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">!=<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">ENOENT<pos:position pos:line="12" pos:column="36"/></name></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="25">warn_on_inaccessible<pos:position pos:line="13" pos:column="45"/></name><argument_list pos:line="13" pos:column="45">(<argument><expr><name pos:line="13" pos:column="46">fname<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt></block></then></if>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><literal type="number" pos:line="14" pos:column="21">0<pos:position pos:line="14" pos:column="22"/></literal> <operator pos:line="14" pos:column="23">&lt;=<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="26">fd<pos:position pos:line="14" pos:column="28"/></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">close<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">fd<pos:position pos:line="15" pos:column="33"/></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt></block></then></if>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">check_index<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">||<pos:position pos:line="16" pos:column="36"/></operator>
		    <operator pos:line="17" pos:column="21">(<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">buf<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <call><name pos:line="17" pos:column="28">read_skip_worktree_file_from_index<pos:position pos:line="17" pos:column="62"/></name><argument_list pos:line="17" pos:column="62">(<argument><expr><name pos:line="17" pos:column="63">fname<pos:position pos:line="17" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="70">&amp;<pos:position pos:line="17" pos:column="75"/></operator><name pos:line="17" pos:column="71">size<pos:position pos:line="17" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="77">sha1_stat<pos:position pos:line="17" pos:column="86"/></name></expr></argument>)<pos:position pos:line="17" pos:column="87"/></argument_list></call><operator pos:line="17" pos:column="87">)<pos:position pos:line="17" pos:column="88"/></operator> <operator pos:line="17" pos:column="89">==<pos:position pos:line="17" pos:column="91"/></operator> <name pos:line="17" pos:column="92">NULL<pos:position pos:line="17" pos:column="96"/></name></expr>)<pos:position pos:line="17" pos:column="97"/></condition><then pos:line="17" pos:column="97">
			<block type="pseudo"><return pos:line="18" pos:column="25">return <expr><operator pos:line="18" pos:column="32">-<pos:position pos:line="18" pos:column="33"/></operator><literal type="number" pos:line="18" pos:column="33">1<pos:position pos:line="18" pos:column="34"/></literal></expr>;<pos:position pos:line="18" pos:column="35"/></return></block></then></if>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">size<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">==<pos:position pos:line="19" pos:column="28"/></operator> <literal type="number" pos:line="19" pos:column="29">0<pos:position pos:line="19" pos:column="30"/></literal></expr>)<pos:position pos:line="19" pos:column="31"/></condition><then pos:line="19" pos:column="31"> <block pos:line="19" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">free<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">buf<pos:position pos:line="20" pos:column="33"/></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
			<return pos:line="21" pos:column="25">return <expr><literal type="number" pos:line="21" pos:column="32">0<pos:position pos:line="21" pos:column="33"/></literal></expr>;<pos:position pos:line="21" pos:column="34"/></return>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name><name pos:line="23" pos:column="21">buf<pos:position pos:line="23" pos:column="24"/></name><index pos:line="23" pos:column="24">[<expr><name pos:line="23" pos:column="25">size<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-<pos:position pos:line="23" pos:column="30"/></operator><literal type="number" pos:line="23" pos:column="30">1<pos:position pos:line="23" pos:column="31"/></literal></expr>]<pos:position pos:line="23" pos:column="32"/></index></name> <operator pos:line="23" pos:column="33">!=<pos:position pos:line="23" pos:column="35"/></operator> <literal type="char" pos:line="23" pos:column="36">'\n'<pos:position pos:line="23" pos:column="40"/></literal></expr>)<pos:position pos:line="23" pos:column="41"/></condition><then pos:line="23" pos:column="41"> <block pos:line="23" pos:column="42">{
			<expr_stmt><expr><name pos:line="24" pos:column="25">buf<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator> <call><name pos:line="24" pos:column="31">xrealloc<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">buf<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="45">st_add<pos:position pos:line="24" pos:column="51"/></name><argument_list pos:line="24" pos:column="51">(<argument><expr><name pos:line="24" pos:column="52">size<pos:position pos:line="24" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="58">1<pos:position pos:line="24" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="25" pos:column="25">buf<pos:position pos:line="25" pos:column="28"/></name><index pos:line="25" pos:column="28">[<expr><name pos:line="25" pos:column="29">size<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">++<pos:position pos:line="25" pos:column="35"/></operator></expr>]<pos:position pos:line="25" pos:column="36"/></index></name> <operator pos:line="25" pos:column="37">=<pos:position pos:line="25" pos:column="38"/></operator> <literal type="char" pos:line="25" pos:column="39">'\n'<pos:position pos:line="25" pos:column="43"/></literal></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></then> <else pos:line="27" pos:column="11">else <block pos:line="27" pos:column="16">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">size<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <call><name pos:line="28" pos:column="24">xsize_t<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name><name pos:line="28" pos:column="32">st<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">.<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="35">st_size<pos:position pos:line="28" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">size<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">==<pos:position pos:line="29" pos:column="28"/></operator> <literal type="number" pos:line="29" pos:column="29">0<pos:position pos:line="29" pos:column="30"/></literal></expr>)<pos:position pos:line="29" pos:column="31"/></condition><then pos:line="29" pos:column="31"> <block pos:line="29" pos:column="32">{
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><name pos:line="30" pos:column="29">sha1_stat<pos:position pos:line="30" pos:column="38"/></name></expr>)<pos:position pos:line="30" pos:column="39"/></condition><then pos:line="30" pos:column="39"> <block pos:line="30" pos:column="40">{
				<expr_stmt><expr><call><name pos:line="31" pos:column="33">fill_stat_data<pos:position pos:line="31" pos:column="47"/></name><argument_list pos:line="31" pos:column="47">(<argument><expr><operator pos:line="31" pos:column="48">&amp;<pos:position pos:line="31" pos:column="53"/></operator><name><name pos:line="31" pos:column="49">sha1_stat<pos:position pos:line="31" pos:column="58"/></name><operator pos:line="31" pos:column="58">-&gt;<pos:position pos:line="31" pos:column="63"/></operator><name pos:line="31" pos:column="60">stat<pos:position pos:line="31" pos:column="64"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="66">&amp;<pos:position pos:line="31" pos:column="71"/></operator><name pos:line="31" pos:column="67">st<pos:position pos:line="31" pos:column="69"/></name></expr></argument>)<pos:position pos:line="31" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="71"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="32" pos:column="33">hashcpy<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name><name pos:line="32" pos:column="41">sha1_stat<pos:position pos:line="32" pos:column="50"/></name><operator pos:line="32" pos:column="50">-&gt;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="52">sha1<pos:position pos:line="32" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="58">EMPTY_BLOB_SHA1_BIN<pos:position pos:line="32" pos:column="77"/></name></expr></argument>)<pos:position pos:line="32" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="79"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="33" pos:column="33">sha1_stat<pos:position pos:line="33" pos:column="42"/></name><operator pos:line="33" pos:column="42">-&gt;<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="44">valid<pos:position pos:line="33" pos:column="49"/></name></name> <operator pos:line="33" pos:column="50">=<pos:position pos:line="33" pos:column="51"/></operator> <literal type="number" pos:line="33" pos:column="52">1<pos:position pos:line="33" pos:column="53"/></literal></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="34" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">close<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">fd<pos:position pos:line="35" pos:column="33"/></name></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
			<return pos:line="36" pos:column="25">return <expr><literal type="number" pos:line="36" pos:column="32">0<pos:position pos:line="36" pos:column="33"/></literal></expr>;<pos:position pos:line="36" pos:column="34"/></return>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="38" pos:column="17">buf<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <call><name pos:line="38" pos:column="23">xmallocz<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">size<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><call><name pos:line="39" pos:column="21">read_in_full<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><name pos:line="39" pos:column="34">fd<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">buf<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">size<pos:position pos:line="39" pos:column="47"/></name></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call> <operator pos:line="39" pos:column="49">!=<pos:position pos:line="39" pos:column="51"/></operator> <name pos:line="39" pos:column="52">size<pos:position pos:line="39" pos:column="56"/></name></expr>)<pos:position pos:line="39" pos:column="57"/></condition><then pos:line="39" pos:column="57"> <block pos:line="39" pos:column="58">{
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">free<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">buf<pos:position pos:line="40" pos:column="33"/></name></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">close<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">fd<pos:position pos:line="41" pos:column="33"/></name></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt>
			<return pos:line="42" pos:column="25">return <expr><operator pos:line="42" pos:column="32">-<pos:position pos:line="42" pos:column="33"/></operator><literal type="number" pos:line="42" pos:column="33">1<pos:position pos:line="42" pos:column="34"/></literal></expr>;<pos:position pos:line="42" pos:column="35"/></return>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="44" pos:column="17">buf<pos:position pos:line="44" pos:column="20"/></name><index pos:line="44" pos:column="20">[<expr><name pos:line="44" pos:column="21">size<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">++<pos:position pos:line="44" pos:column="27"/></operator></expr>]<pos:position pos:line="44" pos:column="28"/></index></name> <operator pos:line="44" pos:column="29">=<pos:position pos:line="44" pos:column="30"/></operator> <literal type="char" pos:line="44" pos:column="31">'\n'<pos:position pos:line="44" pos:column="35"/></literal></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">close<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">fd<pos:position pos:line="45" pos:column="25"/></name></expr></argument>)<pos:position pos:line="45" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">sha1_stat<pos:position pos:line="46" pos:column="30"/></name></expr>)<pos:position pos:line="46" pos:column="31"/></condition><then pos:line="46" pos:column="31"> <block pos:line="46" pos:column="32">{
			<decl_stmt><decl><type><name pos:line="47" pos:column="25">int<pos:position pos:line="47" pos:column="28"/></name></type> <name pos:line="47" pos:column="29">pos<pos:position pos:line="47" pos:column="32"/></name></decl>;<pos:position pos:line="47" pos:column="33"/></decl_stmt>
			<if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><name><name pos:line="48" pos:column="29">sha1_stat<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">-&gt;<pos:position pos:line="48" pos:column="43"/></operator><name pos:line="48" pos:column="40">valid<pos:position pos:line="48" pos:column="45"/></name></name> <operator pos:line="48" pos:column="46">&amp;&amp;<pos:position pos:line="48" pos:column="56"/></operator>
			    <operator pos:line="49" pos:column="29">!<pos:position pos:line="49" pos:column="30"/></operator><call><name pos:line="49" pos:column="30">match_stat_data_racy<pos:position pos:line="49" pos:column="50"/></name><argument_list pos:line="49" pos:column="50">(<argument><expr><operator pos:line="49" pos:column="51">&amp;<pos:position pos:line="49" pos:column="56"/></operator><name pos:line="49" pos:column="52">the_index<pos:position pos:line="49" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="63">&amp;<pos:position pos:line="49" pos:column="68"/></operator><name><name pos:line="49" pos:column="64">sha1_stat<pos:position pos:line="49" pos:column="73"/></name><operator pos:line="49" pos:column="73">-&gt;<pos:position pos:line="49" pos:column="78"/></operator><name pos:line="49" pos:column="75">stat<pos:position pos:line="49" pos:column="79"/></name></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="81">&amp;<pos:position pos:line="49" pos:column="86"/></operator><name pos:line="49" pos:column="82">st<pos:position pos:line="49" pos:column="84"/></name></expr></argument>)<pos:position pos:line="49" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="86"/></condition><then pos:line="49" pos:column="86">
				<block type="pseudo"><empty_stmt pos:line="50" pos:column="33">;<pos:position pos:line="50" pos:column="34"/></empty_stmt></block></then> <comment type="block" pos:line="50" pos:column="35">/* no content change, ss-&gt;sha1 still good */</comment>
			<elseif pos:line="51" pos:column="25">else <if pos:line="51" pos:column="30">if <condition pos:line="51" pos:column="33">(<expr><name pos:line="51" pos:column="34">check_index<pos:position pos:line="51" pos:column="45"/></name> <operator pos:line="51" pos:column="46">&amp;&amp;<pos:position pos:line="51" pos:column="56"/></operator>
				 <operator pos:line="52" pos:column="34">(<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="35">pos<pos:position pos:line="52" pos:column="38"/></name> <operator pos:line="52" pos:column="39">=<pos:position pos:line="52" pos:column="40"/></operator> <call><name pos:line="52" pos:column="41">cache_name_pos<pos:position pos:line="52" pos:column="55"/></name><argument_list pos:line="52" pos:column="55">(<argument><expr><name pos:line="52" pos:column="56">fname<pos:position pos:line="52" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="63">strlen<pos:position pos:line="52" pos:column="69"/></name><argument_list pos:line="52" pos:column="69">(<argument><expr><name pos:line="52" pos:column="70">fname<pos:position pos:line="52" pos:column="75"/></name></expr></argument>)<pos:position pos:line="52" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="77"/></argument_list></call><operator pos:line="52" pos:column="77">)<pos:position pos:line="52" pos:column="78"/></operator> <operator pos:line="52" pos:column="79">&gt;=<pos:position pos:line="52" pos:column="84"/></operator> <literal type="number" pos:line="52" pos:column="82">0<pos:position pos:line="52" pos:column="83"/></literal> <operator pos:line="52" pos:column="84">&amp;&amp;<pos:position pos:line="52" pos:column="94"/></operator>
				 <operator pos:line="53" pos:column="34">!<pos:position pos:line="53" pos:column="35"/></operator><call><name pos:line="53" pos:column="35">ce_stage<pos:position pos:line="53" pos:column="43"/></name><argument_list pos:line="53" pos:column="43">(<argument><expr><name><name pos:line="53" pos:column="44">active_cache<pos:position pos:line="53" pos:column="56"/></name><index pos:line="53" pos:column="56">[<expr><name pos:line="53" pos:column="57">pos<pos:position pos:line="53" pos:column="60"/></name></expr>]<pos:position pos:line="53" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call> <operator pos:line="53" pos:column="63">&amp;&amp;<pos:position pos:line="53" pos:column="73"/></operator>
				 <call><name pos:line="54" pos:column="34">ce_uptodate<pos:position pos:line="54" pos:column="45"/></name><argument_list pos:line="54" pos:column="45">(<argument><expr><name><name pos:line="54" pos:column="46">active_cache<pos:position pos:line="54" pos:column="58"/></name><index pos:line="54" pos:column="58">[<expr><name pos:line="54" pos:column="59">pos<pos:position pos:line="54" pos:column="62"/></name></expr>]<pos:position pos:line="54" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="54" pos:column="64"/></argument_list></call> <operator pos:line="54" pos:column="65">&amp;&amp;<pos:position pos:line="54" pos:column="75"/></operator>
				 <operator pos:line="55" pos:column="34">!<pos:position pos:line="55" pos:column="35"/></operator><call><name pos:line="55" pos:column="35">would_convert_to_git<pos:position pos:line="55" pos:column="55"/></name><argument_list pos:line="55" pos:column="55">(<argument><expr><name pos:line="55" pos:column="56">fname<pos:position pos:line="55" pos:column="61"/></name></expr></argument>)<pos:position pos:line="55" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="63"/></condition><then pos:line="55" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="33">hashcpy<pos:position pos:line="56" pos:column="40"/></name><argument_list pos:line="56" pos:column="40">(<argument><expr><name><name pos:line="56" pos:column="41">sha1_stat<pos:position pos:line="56" pos:column="50"/></name><operator pos:line="56" pos:column="50">-&gt;<pos:position pos:line="56" pos:column="55"/></operator><name pos:line="56" pos:column="52">sha1<pos:position pos:line="56" pos:column="56"/></name></name></expr></argument>,
					<argument><expr><name><name pos:line="57" pos:column="41">active_cache<pos:position pos:line="57" pos:column="53"/></name><index pos:line="57" pos:column="53">[<expr><name pos:line="57" pos:column="54">pos<pos:position pos:line="57" pos:column="57"/></name></expr>]<pos:position pos:line="57" pos:column="58"/></index></name><operator pos:line="57" pos:column="58">-&gt;<pos:position pos:line="57" pos:column="63"/></operator><name><name pos:line="57" pos:column="60">oid<pos:position pos:line="57" pos:column="63"/></name><operator pos:line="57" pos:column="63">.<pos:position pos:line="57" pos:column="64"/></operator><name pos:line="57" pos:column="64">hash<pos:position pos:line="57" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="70"/></expr_stmt></block></then></if></elseif>
			<else pos:line="58" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="33">hash_sha1_file<pos:position pos:line="59" pos:column="47"/></name><argument_list pos:line="59" pos:column="47">(<argument><expr><name pos:line="59" pos:column="48">buf<pos:position pos:line="59" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="53">size<pos:position pos:line="59" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="59">"blob"<pos:position pos:line="59" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="67">sha1_stat<pos:position pos:line="59" pos:column="76"/></name><operator pos:line="59" pos:column="76">-&gt;<pos:position pos:line="59" pos:column="81"/></operator><name pos:line="59" pos:column="78">sha1<pos:position pos:line="59" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="84"/></expr_stmt></block></else></if>
			<expr_stmt><expr><call><name pos:line="60" pos:column="25">fill_stat_data<pos:position pos:line="60" pos:column="39"/></name><argument_list pos:line="60" pos:column="39">(<argument><expr><operator pos:line="60" pos:column="40">&amp;<pos:position pos:line="60" pos:column="45"/></operator><name><name pos:line="60" pos:column="41">sha1_stat<pos:position pos:line="60" pos:column="50"/></name><operator pos:line="60" pos:column="50">-&gt;<pos:position pos:line="60" pos:column="55"/></operator><name pos:line="60" pos:column="52">stat<pos:position pos:line="60" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="58">&amp;<pos:position pos:line="60" pos:column="63"/></operator><name pos:line="60" pos:column="59">st<pos:position pos:line="60" pos:column="61"/></name></expr></argument>)<pos:position pos:line="60" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="61" pos:column="25">sha1_stat<pos:position pos:line="61" pos:column="34"/></name><operator pos:line="61" pos:column="34">-&gt;<pos:position pos:line="61" pos:column="39"/></operator><name pos:line="61" pos:column="36">valid<pos:position pos:line="61" pos:column="41"/></name></name> <operator pos:line="61" pos:column="42">=<pos:position pos:line="61" pos:column="43"/></operator> <literal type="number" pos:line="61" pos:column="44">1<pos:position pos:line="61" pos:column="45"/></literal></expr>;<pos:position pos:line="61" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="62" pos:column="18"/></block></then></if>
	}<pos:position pos:line="63" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name><name pos:line="65" pos:column="9">el<pos:position pos:line="65" pos:column="11"/></name><operator pos:line="65" pos:column="11">-&gt;<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="13">filebuf<pos:position pos:line="65" pos:column="20"/></name></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <name pos:line="65" pos:column="23">buf<pos:position pos:line="65" pos:column="26"/></name></expr>;<pos:position pos:line="65" pos:column="27"/></expr_stmt>

	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><call><name pos:line="67" pos:column="13">skip_utf8_bom<pos:position pos:line="67" pos:column="26"/></name><argument_list pos:line="67" pos:column="26">(<argument><expr><operator pos:line="67" pos:column="27">&amp;<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="28">buf<pos:position pos:line="67" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="33">size<pos:position pos:line="67" pos:column="37"/></name></expr></argument>)<pos:position pos:line="67" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="39"/></condition><then pos:line="67" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name pos:line="68" pos:column="17">size<pos:position pos:line="68" pos:column="21"/></name> <operator pos:line="68" pos:column="22">-=<pos:position pos:line="68" pos:column="24"/></operator> <name pos:line="68" pos:column="25">buf<pos:position pos:line="68" pos:column="28"/></name> <operator pos:line="68" pos:column="29">-<pos:position pos:line="68" pos:column="30"/></operator> <name><name pos:line="68" pos:column="31">el<pos:position pos:line="68" pos:column="33"/></name><operator pos:line="68" pos:column="33">-&gt;<pos:position pos:line="68" pos:column="38"/></operator><name pos:line="68" pos:column="35">filebuf<pos:position pos:line="68" pos:column="42"/></name></name></expr>;<pos:position pos:line="68" pos:column="43"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="70" pos:column="9">entry<pos:position pos:line="70" pos:column="14"/></name> <operator pos:line="70" pos:column="15">=<pos:position pos:line="70" pos:column="16"/></operator> <name pos:line="70" pos:column="17">buf<pos:position pos:line="70" pos:column="20"/></name></expr>;<pos:position pos:line="70" pos:column="21"/></expr_stmt>

	<for pos:line="72" pos:column="9">for <control pos:line="72" pos:column="13">(<init><expr><name pos:line="72" pos:column="14">i<pos:position pos:line="72" pos:column="15"/></name> <operator pos:line="72" pos:column="16">=<pos:position pos:line="72" pos:column="17"/></operator> <literal type="number" pos:line="72" pos:column="18">0<pos:position pos:line="72" pos:column="19"/></literal></expr>;<pos:position pos:line="72" pos:column="20"/></init> <condition><expr><name pos:line="72" pos:column="21">i<pos:position pos:line="72" pos:column="22"/></name> <operator pos:line="72" pos:column="23">&lt;<pos:position pos:line="72" pos:column="27"/></operator> <name pos:line="72" pos:column="25">size<pos:position pos:line="72" pos:column="29"/></name></expr>;<pos:position pos:line="72" pos:column="30"/></condition> <incr><expr><name pos:line="72" pos:column="31">i<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">++<pos:position pos:line="72" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="72" pos:column="35"/></control> <block pos:line="72" pos:column="36">{
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name><name pos:line="73" pos:column="21">buf<pos:position pos:line="73" pos:column="24"/></name><index pos:line="73" pos:column="24">[<expr><name pos:line="73" pos:column="25">i<pos:position pos:line="73" pos:column="26"/></name></expr>]<pos:position pos:line="73" pos:column="27"/></index></name> <operator pos:line="73" pos:column="28">==<pos:position pos:line="73" pos:column="30"/></operator> <literal type="char" pos:line="73" pos:column="31">'\n'<pos:position pos:line="73" pos:column="35"/></literal></expr>)<pos:position pos:line="73" pos:column="36"/></condition><then pos:line="73" pos:column="36"> <block pos:line="73" pos:column="37">{
			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><name pos:line="74" pos:column="29">entry<pos:position pos:line="74" pos:column="34"/></name> <operator pos:line="74" pos:column="35">!=<pos:position pos:line="74" pos:column="37"/></operator> <name pos:line="74" pos:column="38">buf<pos:position pos:line="74" pos:column="41"/></name> <operator pos:line="74" pos:column="42">+<pos:position pos:line="74" pos:column="43"/></operator> <name pos:line="74" pos:column="44">i<pos:position pos:line="74" pos:column="45"/></name> <operator pos:line="74" pos:column="46">&amp;&amp;<pos:position pos:line="74" pos:column="56"/></operator> <name><name pos:line="74" pos:column="49">entry<pos:position pos:line="74" pos:column="54"/></name><index pos:line="74" pos:column="54">[<expr><literal type="number" pos:line="74" pos:column="55">0<pos:position pos:line="74" pos:column="56"/></literal></expr>]<pos:position pos:line="74" pos:column="57"/></index></name> <operator pos:line="74" pos:column="58">!=<pos:position pos:line="74" pos:column="60"/></operator> <literal type="char" pos:line="74" pos:column="61">'#'<pos:position pos:line="74" pos:column="64"/></literal></expr>)<pos:position pos:line="74" pos:column="65"/></condition><then pos:line="74" pos:column="65"> <block pos:line="74" pos:column="66">{
				<expr_stmt><expr><name><name pos:line="75" pos:column="33">buf<pos:position pos:line="75" pos:column="36"/></name><index pos:line="75" pos:column="36">[<expr><name pos:line="75" pos:column="37">i<pos:position pos:line="75" pos:column="38"/></name> <operator pos:line="75" pos:column="39">-<pos:position pos:line="75" pos:column="40"/></operator> <operator pos:line="75" pos:column="41">(<pos:position pos:line="75" pos:column="42"/></operator><name pos:line="75" pos:column="42">i<pos:position pos:line="75" pos:column="43"/></name> <operator pos:line="75" pos:column="44">&amp;&amp;<pos:position pos:line="75" pos:column="54"/></operator> <name><name pos:line="75" pos:column="47">buf<pos:position pos:line="75" pos:column="50"/></name><index pos:line="75" pos:column="50">[<expr><name pos:line="75" pos:column="51">i<pos:position pos:line="75" pos:column="52"/></name><operator pos:line="75" pos:column="52">-<pos:position pos:line="75" pos:column="53"/></operator><literal type="number" pos:line="75" pos:column="53">1<pos:position pos:line="75" pos:column="54"/></literal></expr>]<pos:position pos:line="75" pos:column="55"/></index></name> <operator pos:line="75" pos:column="56">==<pos:position pos:line="75" pos:column="58"/></operator> <literal type="char" pos:line="75" pos:column="59">'\r'<pos:position pos:line="75" pos:column="63"/></literal><operator pos:line="75" pos:column="63">)<pos:position pos:line="75" pos:column="64"/></operator></expr>]<pos:position pos:line="75" pos:column="65"/></index></name> <operator pos:line="75" pos:column="66">=<pos:position pos:line="75" pos:column="67"/></operator> <literal type="number" pos:line="75" pos:column="68">0<pos:position pos:line="75" pos:column="69"/></literal></expr>;<pos:position pos:line="75" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="76" pos:column="33">trim_trailing_spaces<pos:position pos:line="76" pos:column="53"/></name><argument_list pos:line="76" pos:column="53">(<argument><expr><name pos:line="76" pos:column="54">entry<pos:position pos:line="76" pos:column="59"/></name></expr></argument>)<pos:position pos:line="76" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="61"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="77" pos:column="33">add_exclude<pos:position pos:line="77" pos:column="44"/></name><argument_list pos:line="77" pos:column="44">(<argument><expr><name pos:line="77" pos:column="45">entry<pos:position pos:line="77" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="52">base<pos:position pos:line="77" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="58">baselen<pos:position pos:line="77" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="67">el<pos:position pos:line="77" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="71">lineno<pos:position pos:line="77" pos:column="77"/></name></expr></argument>)<pos:position pos:line="77" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="79"/></expr_stmt>
			}<pos:position pos:line="78" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="79" pos:column="25">lineno<pos:position pos:line="79" pos:column="31"/></name><operator pos:line="79" pos:column="31">++<pos:position pos:line="79" pos:column="33"/></operator></expr>;<pos:position pos:line="79" pos:column="34"/></expr_stmt>
			<expr_stmt><expr><name pos:line="80" pos:column="25">entry<pos:position pos:line="80" pos:column="30"/></name> <operator pos:line="80" pos:column="31">=<pos:position pos:line="80" pos:column="32"/></operator> <name pos:line="80" pos:column="33">buf<pos:position pos:line="80" pos:column="36"/></name> <operator pos:line="80" pos:column="37">+<pos:position pos:line="80" pos:column="38"/></operator> <name pos:line="80" pos:column="39">i<pos:position pos:line="80" pos:column="40"/></name> <operator pos:line="80" pos:column="41">+<pos:position pos:line="80" pos:column="42"/></operator> <literal type="number" pos:line="80" pos:column="43">1<pos:position pos:line="80" pos:column="44"/></literal></expr>;<pos:position pos:line="80" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="81" pos:column="18"/></block></then></if>
	}<pos:position pos:line="82" pos:column="10"/></block></for>
	<return pos:line="83" pos:column="9">return <expr><literal type="number" pos:line="83" pos:column="16">0<pos:position pos:line="83" pos:column="17"/></literal></expr>;<pos:position pos:line="83" pos:column="18"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3383_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">handle_new_lock_ctx<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">xml_ctx<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ctx<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">tag_closed<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">remote_lock<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">lock<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><operator pos:line="3" pos:column="36">(<pos:position pos:line="3" pos:column="37"/></operator>struct <name pos:line="3" pos:column="44">remote_lock<pos:position pos:line="3" pos:column="55"/></name> <operator pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></operator><operator pos:line="3" pos:column="57">)<pos:position pos:line="3" pos:column="58"/></operator><name><name pos:line="3" pos:column="58">ctx<pos:position pos:line="3" pos:column="61"/></name><operator pos:line="3" pos:column="61">-&gt;<pos:position pos:line="3" pos:column="66"/></operator><name pos:line="3" pos:column="63">userData<pos:position pos:line="3" pos:column="71"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="72"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">git_SHA_CTX<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">sha_ctx<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">char<pos:position pos:line="5" pos:column="22"/></name></type> <name><name pos:line="5" pos:column="23">lock_token_sha1<pos:position pos:line="5" pos:column="38"/></name><index pos:line="5" pos:column="38">[<expr><literal type="number" pos:line="5" pos:column="39">20<pos:position pos:line="5" pos:column="41"/></literal></expr>]<pos:position pos:line="5" pos:column="42"/></index></name></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">tag_closed<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&amp;&amp;<pos:position pos:line="7" pos:column="34"/></operator> <name><name pos:line="7" pos:column="27">ctx<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">cdata<pos:position pos:line="7" pos:column="37"/></name></name></expr>)<pos:position pos:line="7" pos:column="38"/></condition><then pos:line="7" pos:column="38"> <block pos:line="7" pos:column="39">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><call><name pos:line="8" pos:column="22">strcmp<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name><name pos:line="8" pos:column="29">ctx<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">name<pos:position pos:line="8" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="40">DAV_ACTIVELOCK_OWNER<pos:position pos:line="8" pos:column="60"/></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="62"/></condition><then pos:line="8" pos:column="62"> <block pos:line="8" pos:column="63">{
			<expr_stmt><expr><name><name pos:line="9" pos:column="25">lock<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">owner<pos:position pos:line="9" pos:column="36"/></name></name> <operator pos:line="9" pos:column="37">=<pos:position pos:line="9" pos:column="38"/></operator> <call><name pos:line="9" pos:column="39">xstrdup<pos:position pos:line="9" pos:column="46"/></name><argument_list pos:line="9" pos:column="46">(<argument><expr><name><name pos:line="9" pos:column="47">ctx<pos:position pos:line="9" pos:column="50"/></name><operator pos:line="9" pos:column="50">-&gt;<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="52">cdata<pos:position pos:line="9" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="10" pos:column="18"/></block></then> <elseif pos:line="10" pos:column="19">else <if pos:line="10" pos:column="24">if <condition pos:line="10" pos:column="27">(<expr><operator pos:line="10" pos:column="28">!<pos:position pos:line="10" pos:column="29"/></operator><call><name pos:line="10" pos:column="29">strcmp<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name><name pos:line="10" pos:column="36">ctx<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">name<pos:position pos:line="10" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="47">DAV_ACTIVELOCK_TIMEOUT<pos:position pos:line="10" pos:column="69"/></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="71"/></condition><then pos:line="10" pos:column="71"> <block pos:line="10" pos:column="72">{
			<decl_stmt><decl><type><specifier pos:line="11" pos:column="25">const<pos:position pos:line="11" pos:column="30"/></specifier> <name pos:line="11" pos:column="31">char<pos:position pos:line="11" pos:column="35"/></name> <modifier pos:line="11" pos:column="36">*<pos:position pos:line="11" pos:column="37"/></modifier></type><name pos:line="11" pos:column="37">arg<pos:position pos:line="11" pos:column="40"/></name></decl>;<pos:position pos:line="11" pos:column="41"/></decl_stmt>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><call><name pos:line="12" pos:column="29">skip_prefix<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><name><name pos:line="12" pos:column="41">ctx<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">-&gt;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="46">cdata<pos:position pos:line="12" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="53">"Second-"<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="64">&amp;<pos:position pos:line="12" pos:column="69"/></operator><name pos:line="12" pos:column="65">arg<pos:position pos:line="12" pos:column="68"/></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="70"/></condition><then pos:line="12" pos:column="70">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="33">lock<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">-&gt;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="39">timeout<pos:position pos:line="13" pos:column="46"/></name></name> <operator pos:line="13" pos:column="47">=<pos:position pos:line="13" pos:column="48"/></operator> <call><name pos:line="13" pos:column="49">strtol<pos:position pos:line="13" pos:column="55"/></name><argument_list pos:line="13" pos:column="55">(<argument><expr><name pos:line="13" pos:column="56">arg<pos:position pos:line="13" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="61">NULL<pos:position pos:line="13" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="67">10<pos:position pos:line="13" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></expr_stmt></block></then></if>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if></elseif> <elseif pos:line="14" pos:column="19">else <if pos:line="14" pos:column="24">if <condition pos:line="14" pos:column="27">(<expr><operator pos:line="14" pos:column="28">!<pos:position pos:line="14" pos:column="29"/></operator><call><name pos:line="14" pos:column="29">strcmp<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><name><name pos:line="14" pos:column="36">ctx<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">-&gt;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="41">name<pos:position pos:line="14" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">DAV_ACTIVELOCK_TOKEN<pos:position pos:line="14" pos:column="67"/></name></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="69"/></condition><then pos:line="14" pos:column="69"> <block pos:line="14" pos:column="70">{
			<expr_stmt><expr><name><name pos:line="15" pos:column="25">lock<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">token<pos:position pos:line="15" pos:column="36"/></name></name> <operator pos:line="15" pos:column="37">=<pos:position pos:line="15" pos:column="38"/></operator> <call><name pos:line="15" pos:column="39">xstrdup<pos:position pos:line="15" pos:column="46"/></name><argument_list pos:line="15" pos:column="46">(<argument><expr><name><name pos:line="15" pos:column="47">ctx<pos:position pos:line="15" pos:column="50"/></name><operator pos:line="15" pos:column="50">-&gt;<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="52">cdata<pos:position pos:line="15" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="59"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="17" pos:column="25">git_SHA1_Init<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><operator pos:line="17" pos:column="39">&amp;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="40">sha_ctx<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">git_SHA1_Update<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><operator pos:line="18" pos:column="41">&amp;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="42">sha_ctx<pos:position pos:line="18" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="51">lock<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">-&gt;<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="57">token<pos:position pos:line="18" pos:column="62"/></name></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="64">strlen<pos:position pos:line="18" pos:column="70"/></name><argument_list pos:line="18" pos:column="70">(<argument><expr><name><name pos:line="18" pos:column="71">lock<pos:position pos:line="18" pos:column="75"/></name><operator pos:line="18" pos:column="75">-&gt;<pos:position pos:line="18" pos:column="80"/></operator><name pos:line="18" pos:column="77">token<pos:position pos:line="18" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="85"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">git_SHA1_Final<pos:position pos:line="19" pos:column="39"/></name><argument_list pos:line="19" pos:column="39">(<argument><expr><name pos:line="19" pos:column="40">lock_token_sha1<pos:position pos:line="19" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="57">&amp;<pos:position pos:line="19" pos:column="62"/></operator><name pos:line="19" pos:column="58">sha_ctx<pos:position pos:line="19" pos:column="65"/></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="67"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="21" pos:column="25">lock<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">tmpfile_suffix<pos:position pos:line="21" pos:column="45"/></name><index pos:line="21" pos:column="45">[<expr><literal type="number" pos:line="21" pos:column="46">0<pos:position pos:line="21" pos:column="47"/></literal></expr>]<pos:position pos:line="21" pos:column="48"/></index></name> <operator pos:line="21" pos:column="49">=<pos:position pos:line="21" pos:column="50"/></operator> <literal type="char" pos:line="21" pos:column="51">'_'<pos:position pos:line="21" pos:column="54"/></literal></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">memcpy<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name><name pos:line="22" pos:column="32">lock<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">tmpfile_suffix<pos:position pos:line="22" pos:column="52"/></name></name> <operator pos:line="22" pos:column="53">+<pos:position pos:line="22" pos:column="54"/></operator> <literal type="number" pos:line="22" pos:column="55">1<pos:position pos:line="22" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="58">sha1_to_hex<pos:position pos:line="22" pos:column="69"/></name><argument_list pos:line="22" pos:column="69">(<argument><expr><name pos:line="22" pos:column="70">lock_token_sha1<pos:position pos:line="22" pos:column="85"/></name></expr></argument>)<pos:position pos:line="22" pos:column="86"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="88">40<pos:position pos:line="22" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="92"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

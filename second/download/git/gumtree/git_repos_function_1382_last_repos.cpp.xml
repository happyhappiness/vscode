<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1382_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">line_by_line_fuzzy_match<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">image<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">img<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="2" pos:column="37">struct<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">image<pos:position pos:line="2" pos:column="49"/></name></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">preimage<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="3" pos:column="37">struct<pos:position pos:line="3" pos:column="43"/></name> <name pos:line="3" pos:column="44">image<pos:position pos:line="3" pos:column="49"/></name></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">postimage<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>,
				    <parameter><decl><type><name pos:line="4" pos:column="37">unsigned<pos:position pos:line="4" pos:column="45"/></name> <name pos:line="4" pos:column="46">long<pos:position pos:line="4" pos:column="50"/></name></type> <name pos:line="4" pos:column="51">try<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>,
				    <parameter><decl><type><name pos:line="5" pos:column="37">int<pos:position pos:line="5" pos:column="40"/></name></type> <name pos:line="5" pos:column="41">try_lno<pos:position pos:line="5" pos:column="48"/></name></decl></parameter>,
				    <parameter><decl><type><name pos:line="6" pos:column="37">int<pos:position pos:line="6" pos:column="40"/></name></type> <name pos:line="6" pos:column="41">preimage_limit<pos:position pos:line="6" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="56"/></parameter_list>
<block pos:line="7" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">imgoff<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">preoff<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><literal type="number" pos:line="10" pos:column="25">0<pos:position pos:line="10" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">size_t<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">postlen<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><name><name pos:line="11" pos:column="26">postimage<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">len<pos:position pos:line="11" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">size_t<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">extra_chars<pos:position pos:line="12" pos:column="27"/></name></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">buf<pos:position pos:line="13" pos:column="18"/></name></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">preimage_eof<pos:position pos:line="14" pos:column="27"/></name></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">preimage_end<pos:position pos:line="15" pos:column="27"/></name></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="16" pos:column="9">struct<pos:position pos:line="16" pos:column="15"/></name> <name pos:line="16" pos:column="16">strbuf<pos:position pos:line="16" pos:column="22"/></name></name></type> <name pos:line="16" pos:column="23">fixed<pos:position pos:line="16" pos:column="28"/></name></decl>;<pos:position pos:line="16" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">fixed_buf<pos:position pos:line="17" pos:column="24"/></name></decl>;<pos:position pos:line="17" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">size_t<pos:position pos:line="18" pos:column="15"/></name></type> <name pos:line="18" pos:column="16">fixed_len<pos:position pos:line="18" pos:column="25"/></name></decl>;<pos:position pos:line="18" pos:column="26"/></decl_stmt>

	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">i<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></init> <condition><expr><name pos:line="20" pos:column="21">i<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="25">preimage_limit<pos:position pos:line="20" pos:column="39"/></name></expr>;<pos:position pos:line="20" pos:column="40"/></condition> <incr><expr><name pos:line="20" pos:column="41">i<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">++<pos:position pos:line="20" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="45"/></control> <block pos:line="20" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">size_t<pos:position pos:line="21" pos:column="23"/></name></type> <name pos:line="21" pos:column="24">prelen<pos:position pos:line="21" pos:column="30"/></name> <init pos:line="21" pos:column="31">= <expr><name><name pos:line="21" pos:column="33">preimage<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">-&gt;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="43">line<pos:position pos:line="21" pos:column="47"/></name><index pos:line="21" pos:column="47">[<expr><name pos:line="21" pos:column="48">i<pos:position pos:line="21" pos:column="49"/></name></expr>]<pos:position pos:line="21" pos:column="50"/></index></name><operator pos:line="21" pos:column="50">.<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="51">len<pos:position pos:line="21" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="55"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">size_t<pos:position pos:line="22" pos:column="23"/></name></type> <name pos:line="22" pos:column="24">imglen<pos:position pos:line="22" pos:column="30"/></name> <init pos:line="22" pos:column="31">= <expr><name><name pos:line="22" pos:column="33">img<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">line<pos:position pos:line="22" pos:column="42"/></name><index pos:line="22" pos:column="42">[<expr><name pos:line="22" pos:column="43">try_lno<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">+<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="51">i<pos:position pos:line="22" pos:column="52"/></name></expr>]<pos:position pos:line="22" pos:column="53"/></index></name><operator pos:line="22" pos:column="53">.<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="54">len<pos:position pos:line="22" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="58"/></decl_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><call><name pos:line="24" pos:column="22">fuzzy_matchlines<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><name><name pos:line="24" pos:column="39">img<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">-&gt;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="44">buf<pos:position pos:line="24" pos:column="47"/></name></name> <operator pos:line="24" pos:column="48">+<pos:position pos:line="24" pos:column="49"/></operator> <name pos:line="24" pos:column="50">try<pos:position pos:line="24" pos:column="53"/></name> <operator pos:line="24" pos:column="54">+<pos:position pos:line="24" pos:column="55"/></operator> <name pos:line="24" pos:column="56">imgoff<pos:position pos:line="24" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="64">imglen<pos:position pos:line="24" pos:column="70"/></name></expr></argument>,
				      <argument><expr><name><name pos:line="25" pos:column="39">preimage<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">buf<pos:position pos:line="25" pos:column="52"/></name></name> <operator pos:line="25" pos:column="53">+<pos:position pos:line="25" pos:column="54"/></operator> <name pos:line="25" pos:column="55">preoff<pos:position pos:line="25" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="63">prelen<pos:position pos:line="25" pos:column="69"/></name></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="71"/></condition><then pos:line="25" pos:column="71">
			<block type="pseudo"><return pos:line="26" pos:column="25">return <expr><literal type="number" pos:line="26" pos:column="32">0<pos:position pos:line="26" pos:column="33"/></literal></expr>;<pos:position pos:line="26" pos:column="34"/></return></block></then></if>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name><name pos:line="27" pos:column="21">preimage<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">line<pos:position pos:line="27" pos:column="35"/></name><index pos:line="27" pos:column="35">[<expr><name pos:line="27" pos:column="36">i<pos:position pos:line="27" pos:column="37"/></name></expr>]<pos:position pos:line="27" pos:column="38"/></index></name><operator pos:line="27" pos:column="38">.<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="39">flag<pos:position pos:line="27" pos:column="43"/></name> <operator pos:line="27" pos:column="44">&amp;<pos:position pos:line="27" pos:column="49"/></operator> <name pos:line="27" pos:column="46">LINE_COMMON<pos:position pos:line="27" pos:column="57"/></name></expr>)<pos:position pos:line="27" pos:column="58"/></condition><then pos:line="27" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="25">postlen<pos:position pos:line="28" pos:column="32"/></name> <operator pos:line="28" pos:column="33">+=<pos:position pos:line="28" pos:column="35"/></operator> <name pos:line="28" pos:column="36">imglen<pos:position pos:line="28" pos:column="42"/></name> <operator pos:line="28" pos:column="43">-<pos:position pos:line="28" pos:column="44"/></operator> <name pos:line="28" pos:column="45">prelen<pos:position pos:line="28" pos:column="51"/></name></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="29" pos:column="17">imgoff<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">+=<pos:position pos:line="29" pos:column="26"/></operator> <name pos:line="29" pos:column="27">imglen<pos:position pos:line="29" pos:column="33"/></name></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">preoff<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">+=<pos:position pos:line="30" pos:column="26"/></operator> <name pos:line="30" pos:column="27">prelen<pos:position pos:line="30" pos:column="33"/></name></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></for>

	<comment type="block" pos:line="33" pos:column="9">/*
	 * Ok, the preimage matches with whitespace fuzz.
	 *
	 * imgoff now holds the true length of the target that
	 * matches the preimage before the end of the file.
	 *
	 * Count the number of characters in the preimage that fall
	 * beyond the end of the file and make sure that all of them
	 * are whitespace characters. (This can only happen if
	 * we are removing blank lines at the end of the file.)
	 */</comment>
	<expr_stmt><expr><name pos:line="44" pos:column="9">buf<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <name pos:line="44" pos:column="15">preimage_eof<pos:position pos:line="44" pos:column="27"/></name> <operator pos:line="44" pos:column="28">=<pos:position pos:line="44" pos:column="29"/></operator> <name><name pos:line="44" pos:column="30">preimage<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">-&gt;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="40">buf<pos:position pos:line="44" pos:column="43"/></name></name> <operator pos:line="44" pos:column="44">+<pos:position pos:line="44" pos:column="45"/></operator> <name pos:line="44" pos:column="46">preoff<pos:position pos:line="44" pos:column="52"/></name></expr>;<pos:position pos:line="44" pos:column="53"/></expr_stmt>
	<for pos:line="45" pos:column="9">for <control pos:line="45" pos:column="13">( <init pos:line="45" pos:column="15">;<pos:position pos:line="45" pos:column="16"/></init> <condition><expr><name pos:line="45" pos:column="17">i<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">&lt;<pos:position pos:line="45" pos:column="23"/></operator> <name><name pos:line="45" pos:column="21">preimage<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">-&gt;<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="31">nr<pos:position pos:line="45" pos:column="33"/></name></name></expr>;<pos:position pos:line="45" pos:column="34"/></condition> <incr><expr><name pos:line="45" pos:column="35">i<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">++<pos:position pos:line="45" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="45" pos:column="39"/></control>
		<block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="17">preoff<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">+=<pos:position pos:line="46" pos:column="26"/></operator> <name><name pos:line="46" pos:column="27">preimage<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">-&gt;<pos:position pos:line="46" pos:column="40"/></operator><name pos:line="46" pos:column="37">line<pos:position pos:line="46" pos:column="41"/></name><index pos:line="46" pos:column="41">[<expr><name pos:line="46" pos:column="42">i<pos:position pos:line="46" pos:column="43"/></name></expr>]<pos:position pos:line="46" pos:column="44"/></index></name><operator pos:line="46" pos:column="44">.<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="45">len<pos:position pos:line="46" pos:column="48"/></name></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt></block></for>
	<expr_stmt><expr><name pos:line="47" pos:column="9">preimage_end<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">=<pos:position pos:line="47" pos:column="23"/></operator> <name><name pos:line="47" pos:column="24">preimage<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">buf<pos:position pos:line="47" pos:column="37"/></name></name> <operator pos:line="47" pos:column="38">+<pos:position pos:line="47" pos:column="39"/></operator> <name pos:line="47" pos:column="40">preoff<pos:position pos:line="47" pos:column="46"/></name></expr>;<pos:position pos:line="47" pos:column="47"/></expr_stmt>
	<for pos:line="48" pos:column="9">for <control pos:line="48" pos:column="13">( <init pos:line="48" pos:column="15">;<pos:position pos:line="48" pos:column="16"/></init> <condition><expr><name pos:line="48" pos:column="17">buf<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">&lt;<pos:position pos:line="48" pos:column="25"/></operator> <name pos:line="48" pos:column="23">preimage_end<pos:position pos:line="48" pos:column="35"/></name></expr>;<pos:position pos:line="48" pos:column="36"/></condition> <incr><expr><name pos:line="48" pos:column="37">buf<pos:position pos:line="48" pos:column="40"/></name><operator pos:line="48" pos:column="40">++<pos:position pos:line="48" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="48" pos:column="43"/></control>
		<block type="pseudo"><if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><operator pos:line="49" pos:column="21">!<pos:position pos:line="49" pos:column="22"/></operator><call><name pos:line="49" pos:column="22">isspace<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><operator pos:line="49" pos:column="30">*<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="31">buf<pos:position pos:line="49" pos:column="34"/></name></expr></argument>)<pos:position pos:line="49" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="36"/></condition><then pos:line="49" pos:column="36">
			<block type="pseudo"><return pos:line="50" pos:column="25">return <expr><literal type="number" pos:line="50" pos:column="32">0<pos:position pos:line="50" pos:column="33"/></literal></expr>;<pos:position pos:line="50" pos:column="34"/></return></block></then></if></block></for>

	<comment type="block" pos:line="52" pos:column="9">/*
	 * Update the preimage and the common postimage context
	 * lines to use the same whitespace as the target.
	 * If whitespace is missing in the target (i.e.
	 * if the preimage extends beyond the end of the file),
	 * use the whitespace from the preimage.
	 */</comment>
	<expr_stmt><expr><name pos:line="59" pos:column="9">extra_chars<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">=<pos:position pos:line="59" pos:column="22"/></operator> <name pos:line="59" pos:column="23">preimage_end<pos:position pos:line="59" pos:column="35"/></name> <operator pos:line="59" pos:column="36">-<pos:position pos:line="59" pos:column="37"/></operator> <name pos:line="59" pos:column="38">preimage_eof<pos:position pos:line="59" pos:column="50"/></name></expr>;<pos:position pos:line="59" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">strbuf_init<pos:position pos:line="60" pos:column="20"/></name><argument_list pos:line="60" pos:column="20">(<argument><expr><operator pos:line="60" pos:column="21">&amp;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="22">fixed<pos:position pos:line="60" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="29">imgoff<pos:position pos:line="60" pos:column="35"/></name> <operator pos:line="60" pos:column="36">+<pos:position pos:line="60" pos:column="37"/></operator> <name pos:line="60" pos:column="38">extra_chars<pos:position pos:line="60" pos:column="49"/></name></expr></argument>)<pos:position pos:line="60" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">strbuf_add<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><operator pos:line="61" pos:column="20">&amp;<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="21">fixed<pos:position pos:line="61" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="28">img<pos:position pos:line="61" pos:column="31"/></name><operator pos:line="61" pos:column="31">-&gt;<pos:position pos:line="61" pos:column="36"/></operator><name pos:line="61" pos:column="33">buf<pos:position pos:line="61" pos:column="36"/></name></name> <operator pos:line="61" pos:column="37">+<pos:position pos:line="61" pos:column="38"/></operator> <name pos:line="61" pos:column="39">try<pos:position pos:line="61" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="44">imgoff<pos:position pos:line="61" pos:column="50"/></name></expr></argument>)<pos:position pos:line="61" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">strbuf_add<pos:position pos:line="62" pos:column="19"/></name><argument_list pos:line="62" pos:column="19">(<argument><expr><operator pos:line="62" pos:column="20">&amp;<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="21">fixed<pos:position pos:line="62" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="28">preimage_eof<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="42">extra_chars<pos:position pos:line="62" pos:column="53"/></name></expr></argument>)<pos:position pos:line="62" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name pos:line="63" pos:column="9">fixed_buf<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">=<pos:position pos:line="63" pos:column="20"/></operator> <call><name pos:line="63" pos:column="21">strbuf_detach<pos:position pos:line="63" pos:column="34"/></name><argument_list pos:line="63" pos:column="34">(<argument><expr><operator pos:line="63" pos:column="35">&amp;<pos:position pos:line="63" pos:column="40"/></operator><name pos:line="63" pos:column="36">fixed<pos:position pos:line="63" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="43">&amp;<pos:position pos:line="63" pos:column="48"/></operator><name pos:line="63" pos:column="44">fixed_len<pos:position pos:line="63" pos:column="53"/></name></expr></argument>)<pos:position pos:line="63" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="64" pos:column="9">update_pre_post_images<pos:position pos:line="64" pos:column="31"/></name><argument_list pos:line="64" pos:column="31">(<argument><expr><name pos:line="64" pos:column="32">preimage<pos:position pos:line="64" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="42">postimage<pos:position pos:line="64" pos:column="51"/></name></expr></argument>,
			       <argument><expr><name pos:line="65" pos:column="32">fixed_buf<pos:position pos:line="65" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="43">fixed_len<pos:position pos:line="65" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="54">postlen<pos:position pos:line="65" pos:column="61"/></name></expr></argument>)<pos:position pos:line="65" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="63"/></expr_stmt>
	<return pos:line="66" pos:column="9">return <expr><literal type="number" pos:line="66" pos:column="16">1<pos:position pos:line="66" pos:column="17"/></literal></expr>;<pos:position pos:line="66" pos:column="18"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

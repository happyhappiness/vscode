<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2378_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">patchbreak<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">strbuf<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">line<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">i<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* Beginning of a "diff -" header? */</comment>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">starts_with<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name><name pos:line="6" pos:column="25">line<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">buf<pos:position pos:line="6" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="36">"diff -"<pos:position pos:line="6" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="46"/></condition><then pos:line="6" pos:column="46">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><literal type="number" pos:line="7" pos:column="24">1<pos:position pos:line="7" pos:column="25"/></literal></expr>;<pos:position pos:line="7" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="9" pos:column="9">/* CVS "Index: " line? */</comment>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">starts_with<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name><name pos:line="10" pos:column="25">line<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">buf<pos:position pos:line="10" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="36">"Index: "<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="13" pos:column="9">/*
	 * "--- &lt;filename&gt;" starts patches without headers
	 * "---&lt;sp&gt;*" is a manual separator
	 */</comment>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">line<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">len<pos:position pos:line="17" pos:column="22"/></name></name> <operator pos:line="17" pos:column="23">&lt;<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="25">4<pos:position pos:line="17" pos:column="26"/></literal></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return></block></then></if>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">starts_with<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name><name pos:line="20" pos:column="25">line<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">buf<pos:position pos:line="20" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="36">"---"<pos:position pos:line="20" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="43"/></condition><then pos:line="20" pos:column="43"> <block pos:line="20" pos:column="44">{
		<comment type="block" pos:line="21" pos:column="17">/* space followed by a filename? */</comment>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">line<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">-&gt;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="27">buf<pos:position pos:line="22" pos:column="30"/></name><index pos:line="22" pos:column="30">[<expr><literal type="number" pos:line="22" pos:column="31">3<pos:position pos:line="22" pos:column="32"/></literal></expr>]<pos:position pos:line="22" pos:column="33"/></index></name> <operator pos:line="22" pos:column="34">==<pos:position pos:line="22" pos:column="36"/></operator> <literal type="char" pos:line="22" pos:column="37">' '<pos:position pos:line="22" pos:column="40"/></literal> <operator pos:line="22" pos:column="41">&amp;&amp;<pos:position pos:line="22" pos:column="51"/></operator> <operator pos:line="22" pos:column="44">!<pos:position pos:line="22" pos:column="45"/></operator><call><name pos:line="22" pos:column="45">isspace<pos:position pos:line="22" pos:column="52"/></name><argument_list pos:line="22" pos:column="52">(<argument><expr><name><name pos:line="22" pos:column="53">line<pos:position pos:line="22" pos:column="57"/></name><operator pos:line="22" pos:column="57">-&gt;<pos:position pos:line="22" pos:column="62"/></operator><name pos:line="22" pos:column="59">buf<pos:position pos:line="22" pos:column="62"/></name><index pos:line="22" pos:column="62">[<expr><literal type="number" pos:line="22" pos:column="63">4<pos:position pos:line="22" pos:column="64"/></literal></expr>]<pos:position pos:line="22" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="67"/></condition><then pos:line="22" pos:column="67">
			<block type="pseudo"><return pos:line="23" pos:column="25">return <expr><literal type="number" pos:line="23" pos:column="32">1<pos:position pos:line="23" pos:column="33"/></literal></expr>;<pos:position pos:line="23" pos:column="34"/></return></block></then></if>
		<comment type="block" pos:line="24" pos:column="17">/* Just whitespace? */</comment>
		<for pos:line="25" pos:column="17">for <control pos:line="25" pos:column="21">(<init><expr><name pos:line="25" pos:column="22">i<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <literal type="number" pos:line="25" pos:column="26">3<pos:position pos:line="25" pos:column="27"/></literal></expr>;<pos:position pos:line="25" pos:column="28"/></init> <condition><expr><name pos:line="25" pos:column="29">i<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">&lt;<pos:position pos:line="25" pos:column="35"/></operator> <name><name pos:line="25" pos:column="33">line<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">len<pos:position pos:line="25" pos:column="42"/></name></name></expr>;<pos:position pos:line="25" pos:column="43"/></condition> <incr><expr><name pos:line="25" pos:column="44">i<pos:position pos:line="25" pos:column="45"/></name><operator pos:line="25" pos:column="45">++<pos:position pos:line="25" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="48"/></control> <block pos:line="25" pos:column="49">{
			<decl_stmt><decl><type><name pos:line="26" pos:column="25">unsigned<pos:position pos:line="26" pos:column="33"/></name> <name pos:line="26" pos:column="34">char<pos:position pos:line="26" pos:column="38"/></name></type> <name pos:line="26" pos:column="39">c<pos:position pos:line="26" pos:column="40"/></name> <init pos:line="26" pos:column="41">= <expr><name><name pos:line="26" pos:column="43">line<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">-&gt;<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="49">buf<pos:position pos:line="26" pos:column="52"/></name><index pos:line="26" pos:column="52">[<expr><name pos:line="26" pos:column="53">i<pos:position pos:line="26" pos:column="54"/></name></expr>]<pos:position pos:line="26" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="26" pos:column="56"/></decl_stmt>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><name pos:line="27" pos:column="29">c<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">==<pos:position pos:line="27" pos:column="33"/></operator> <literal type="char" pos:line="27" pos:column="34">'\n'<pos:position pos:line="27" pos:column="38"/></literal></expr>)<pos:position pos:line="27" pos:column="39"/></condition><then pos:line="27" pos:column="39">
				<block type="pseudo"><return pos:line="28" pos:column="33">return <expr><literal type="number" pos:line="28" pos:column="40">1<pos:position pos:line="28" pos:column="41"/></literal></expr>;<pos:position pos:line="28" pos:column="42"/></return></block></then></if>
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><operator pos:line="29" pos:column="29">!<pos:position pos:line="29" pos:column="30"/></operator><call><name pos:line="29" pos:column="30">isspace<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">c<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="41"/></condition><then pos:line="29" pos:column="41">
				<block type="pseudo"><break pos:line="30" pos:column="33">break;<pos:position pos:line="30" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="31" pos:column="18"/></block></for>
		<return pos:line="32" pos:column="17">return <expr><literal type="number" pos:line="32" pos:column="24">0<pos:position pos:line="32" pos:column="25"/></literal></expr>;<pos:position pos:line="32" pos:column="26"/></return>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>
	<return pos:line="34" pos:column="9">return <expr><literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

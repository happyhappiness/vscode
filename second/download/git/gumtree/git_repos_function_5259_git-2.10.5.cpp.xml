<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5259_git-2.10.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">adjust_refcol_width<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">ref<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ref<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">max<pos:position pos:line="3" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="18">rlen<pos:position pos:line="3" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="24">llen<pos:position pos:line="3" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="30">len<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* uptodate lines are only shown on high verbosity level */</comment>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">verbosity<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">&amp;&amp;<pos:position pos:line="6" pos:column="34"/></operator> <operator pos:line="6" pos:column="27">!<pos:position pos:line="6" pos:column="28"/></operator><call><name pos:line="6" pos:column="28">oidcmp<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><operator pos:line="6" pos:column="35">&amp;<pos:position pos:line="6" pos:column="40"/></operator><name><name pos:line="6" pos:column="36">ref<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">peer_ref<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">-&gt;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="51">old_oid<pos:position pos:line="6" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="60">&amp;<pos:position pos:line="6" pos:column="65"/></operator><name><name pos:line="6" pos:column="61">ref<pos:position pos:line="6" pos:column="64"/></name><operator pos:line="6" pos:column="64">-&gt;<pos:position pos:line="6" pos:column="69"/></operator><name pos:line="6" pos:column="66">old_oid<pos:position pos:line="6" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="75"/></condition><then pos:line="6" pos:column="75">
		<block type="pseudo"><return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">max<pos:position pos:line="9" pos:column="12"/></name>    <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <call><name pos:line="9" pos:column="18">term_columns<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">()<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">rlen<pos:position pos:line="10" pos:column="13"/></name>   <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <call><name pos:line="10" pos:column="18">utf8_strwidth<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><call><name pos:line="10" pos:column="32">prettify_refname<pos:position pos:line="10" pos:column="48"/></name><argument_list pos:line="10" pos:column="48">(<argument><expr><name><name pos:line="10" pos:column="49">ref<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">-&gt;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="54">name<pos:position pos:line="10" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">llen<pos:position pos:line="12" pos:column="13"/></name>   <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">utf8_strwidth<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><call><name pos:line="12" pos:column="32">prettify_refname<pos:position pos:line="12" pos:column="48"/></name><argument_list pos:line="12" pos:column="48">(<argument><expr><name><name pos:line="12" pos:column="49">ref<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">-&gt;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="54">peer_ref<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">-&gt;<pos:position pos:line="12" pos:column="67"/></operator><name pos:line="12" pos:column="64">name<pos:position pos:line="12" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>

	<comment type="block" pos:line="14" pos:column="9">/*
	 * rough estimation to see if the output line is too long and
	 * should not be counted (we can't do precise calculation
	 * anyway because we don't know if the error explanation part
	 * will be printed in update_local_ref)
	 */</comment>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">compact_format<pos:position pos:line="20" pos:column="27"/></name></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28"> <block pos:line="20" pos:column="29">{
		<expr_stmt><expr><name pos:line="21" pos:column="17">llen<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">max<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="23">max<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">*<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="29">2<pos:position pos:line="22" pos:column="30"/></literal> <operator pos:line="22" pos:column="31">/<pos:position pos:line="22" pos:column="32"/></operator> <literal type="number" pos:line="22" pos:column="33">3<pos:position pos:line="22" pos:column="34"/></literal></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="24" pos:column="9">len<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <literal type="number" pos:line="24" pos:column="15">21<pos:position pos:line="24" pos:column="17"/></literal> <comment type="block" pos:line="24" pos:column="18">/* flag and summary */</comment> <operator pos:line="24" pos:column="41">+<pos:position pos:line="24" pos:column="42"/></operator> <name pos:line="24" pos:column="43">rlen<pos:position pos:line="24" pos:column="47"/></name> <operator pos:line="24" pos:column="48">+<pos:position pos:line="24" pos:column="49"/></operator> <literal type="number" pos:line="24" pos:column="50">4<pos:position pos:line="24" pos:column="51"/></literal> <comment type="block" pos:line="24" pos:column="52">/* -&gt; */</comment> <operator pos:line="24" pos:column="61">+<pos:position pos:line="24" pos:column="62"/></operator> <name pos:line="24" pos:column="63">llen<pos:position pos:line="24" pos:column="67"/></name></expr>;<pos:position pos:line="24" pos:column="68"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">len<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">&gt;=<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="20">max<pos:position pos:line="25" pos:column="23"/></name></expr>)<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24">
		<block type="pseudo"><return pos:line="26" pos:column="17">return;<pos:position pos:line="26" pos:column="24"/></return></block></then></if>

	<comment type="block" pos:line="28" pos:column="9">/*
	 * Not precise calculation for compact mode because '*' can
	 * appear on the left hand side of '-&gt;' and shrink the column
	 * back.
	 */</comment>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">refcol_width<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">&lt;<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="28">rlen<pos:position pos:line="33" pos:column="32"/></name></expr>)<pos:position pos:line="33" pos:column="33"/></condition><then pos:line="33" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="17">refcol_width<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">=<pos:position pos:line="34" pos:column="31"/></operator> <name pos:line="34" pos:column="32">rlen<pos:position pos:line="34" pos:column="36"/></name></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt></block></then></if>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

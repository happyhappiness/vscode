<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2139_git-2.7.5.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">git_user_agent_sanitized<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">void<pos:position pos:line="1" pos:column="42"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> <name pos:line="3" pos:column="22">char<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">agent<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">NULL<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">agent<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20"> <block pos:line="5" pos:column="21">{
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">struct<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">strbuf<pos:position pos:line="6" pos:column="30"/></name></name></type> <name pos:line="6" pos:column="31">buf<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><name pos:line="6" pos:column="37">STRBUF_INIT<pos:position pos:line="6" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="9" pos:column="17">strbuf_addstr<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><operator pos:line="9" pos:column="31">&amp;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="32">buf<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="37">git_user_agent<pos:position pos:line="9" pos:column="51"/></name><argument_list pos:line="9" pos:column="51">()<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">strbuf_trim<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><operator pos:line="10" pos:column="29">&amp;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="30">buf<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
		<for pos:line="11" pos:column="17">for <control pos:line="11" pos:column="21">(<init><expr><name pos:line="11" pos:column="22">i<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr>;<pos:position pos:line="11" pos:column="28"/></init> <condition><expr><name pos:line="11" pos:column="29">i<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">&lt;<pos:position pos:line="11" pos:column="35"/></operator> <name><name pos:line="11" pos:column="33">buf<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">.<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">len<pos:position pos:line="11" pos:column="40"/></name></name></expr>;<pos:position pos:line="11" pos:column="41"/></condition> <incr><expr><name pos:line="11" pos:column="42">i<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">++<pos:position pos:line="11" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="46"/></control> <block pos:line="11" pos:column="47">{
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><name><name pos:line="12" pos:column="29">buf<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">.<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">buf<pos:position pos:line="12" pos:column="36"/></name><index pos:line="12" pos:column="36">[<expr><name pos:line="12" pos:column="37">i<pos:position pos:line="12" pos:column="38"/></name></expr>]<pos:position pos:line="12" pos:column="39"/></index></name> <operator pos:line="12" pos:column="40">&lt;=<pos:position pos:line="12" pos:column="45"/></operator> <literal type="number" pos:line="12" pos:column="43">32<pos:position pos:line="12" pos:column="45"/></literal> <operator pos:line="12" pos:column="46">||<pos:position pos:line="12" pos:column="48"/></operator> <name><name pos:line="12" pos:column="49">buf<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">.<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="53">buf<pos:position pos:line="12" pos:column="56"/></name><index pos:line="12" pos:column="56">[<expr><name pos:line="12" pos:column="57">i<pos:position pos:line="12" pos:column="58"/></name></expr>]<pos:position pos:line="12" pos:column="59"/></index></name> <operator pos:line="12" pos:column="60">&gt;=<pos:position pos:line="12" pos:column="65"/></operator> <literal type="number" pos:line="12" pos:column="63">127<pos:position pos:line="12" pos:column="66"/></literal></expr>)<pos:position pos:line="12" pos:column="67"/></condition><then pos:line="12" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="33">buf<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">.<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="37">buf<pos:position pos:line="13" pos:column="40"/></name><index pos:line="13" pos:column="40">[<expr><name pos:line="13" pos:column="41">i<pos:position pos:line="13" pos:column="42"/></name></expr>]<pos:position pos:line="13" pos:column="43"/></index></name> <operator pos:line="13" pos:column="44">=<pos:position pos:line="13" pos:column="45"/></operator> <literal type="char" pos:line="13" pos:column="46">'.'<pos:position pos:line="13" pos:column="49"/></literal></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt></block></then></if>
		}<pos:position pos:line="14" pos:column="18"/></block></for>
		<expr_stmt><expr><name pos:line="15" pos:column="17">agent<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <name><name pos:line="15" pos:column="25">buf<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">.<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">buf<pos:position pos:line="15" pos:column="32"/></name></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">agent<pos:position pos:line="18" pos:column="21"/></name></expr>;<pos:position pos:line="18" pos:column="22"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

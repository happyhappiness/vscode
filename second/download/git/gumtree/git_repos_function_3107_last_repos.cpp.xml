<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3107_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">ref<pos:position pos:line="1" pos:column="18"/></name></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">parse_info_refs<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">discovery<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">heads<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">data<pos:position pos:line="3" pos:column="19"/></name></decl>, <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="22">start<pos:position pos:line="3" pos:column="27"/></name></decl>, <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="30">mid<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">ref_name<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">ref<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">refs<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">NULL<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">ref<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">ref<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name pos:line="8" pos:column="27">NULL<pos:position pos:line="8" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">ref<pos:position pos:line="9" pos:column="19"/></name></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">last_ref<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name pos:line="9" pos:column="32">NULL<pos:position pos:line="9" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">data<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name><name pos:line="11" pos:column="16">heads<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">buf<pos:position pos:line="11" pos:column="26"/></name></name></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">start<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">NULL<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">mid<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">data<pos:position pos:line="13" pos:column="19"/></name></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>
	<while pos:line="14" pos:column="9">while <condition pos:line="14" pos:column="15">(<expr><name pos:line="14" pos:column="16">i<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">&lt;<pos:position pos:line="14" pos:column="22"/></operator> <name><name pos:line="14" pos:column="20">heads<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">len<pos:position pos:line="14" pos:column="30"/></name></name></expr>)<pos:position pos:line="14" pos:column="31"/></condition> <block pos:line="14" pos:column="32">{
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">start<pos:position pos:line="15" pos:column="27"/></name></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28"> <block pos:line="15" pos:column="29">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">start<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <operator pos:line="16" pos:column="33">&amp;<pos:position pos:line="16" pos:column="38"/></operator><name><name pos:line="16" pos:column="34">data<pos:position pos:line="16" pos:column="38"/></name><index pos:line="16" pos:column="38">[<expr><name pos:line="16" pos:column="39">i<pos:position pos:line="16" pos:column="40"/></name></expr>]<pos:position pos:line="16" pos:column="41"/></index></name></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">data<pos:position pos:line="18" pos:column="25"/></name><index pos:line="18" pos:column="25">[<expr><name pos:line="18" pos:column="26">i<pos:position pos:line="18" pos:column="27"/></name></expr>]<pos:position pos:line="18" pos:column="28"/></index></name> <operator pos:line="18" pos:column="29">==<pos:position pos:line="18" pos:column="31"/></operator> <literal type="char" pos:line="18" pos:column="32">'\t'<pos:position pos:line="18" pos:column="36"/></literal></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="25">mid<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <operator pos:line="19" pos:column="31">&amp;<pos:position pos:line="19" pos:column="36"/></operator><name><name pos:line="19" pos:column="32">data<pos:position pos:line="19" pos:column="36"/></name><index pos:line="19" pos:column="36">[<expr><name pos:line="19" pos:column="37">i<pos:position pos:line="19" pos:column="38"/></name></expr>]<pos:position pos:line="19" pos:column="39"/></index></name></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt></block></then></if>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name><name pos:line="20" pos:column="21">data<pos:position pos:line="20" pos:column="25"/></name><index pos:line="20" pos:column="25">[<expr><name pos:line="20" pos:column="26">i<pos:position pos:line="20" pos:column="27"/></name></expr>]<pos:position pos:line="20" pos:column="28"/></index></name> <operator pos:line="20" pos:column="29">==<pos:position pos:line="20" pos:column="31"/></operator> <literal type="char" pos:line="20" pos:column="32">'\n'<pos:position pos:line="20" pos:column="36"/></literal></expr>)<pos:position pos:line="20" pos:column="37"/></condition><then pos:line="20" pos:column="37"> <block pos:line="20" pos:column="38">{
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name pos:line="21" pos:column="29">mid<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">-<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="35">start<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">!=<pos:position pos:line="21" pos:column="43"/></operator> <literal type="number" pos:line="21" pos:column="44">40<pos:position pos:line="21" pos:column="46"/></literal></expr>)<pos:position pos:line="21" pos:column="47"/></condition><then pos:line="21" pos:column="47">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="33">die<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><literal type="string" pos:line="22" pos:column="37">"%sinfo/refs not valid: is this a git repository?"<pos:position pos:line="22" pos:column="87"/></literal></expr></argument>,
				    <argument><expr><name><name pos:line="23" pos:column="37">url<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">.<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="41">buf<pos:position pos:line="23" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="24" pos:column="25">data<pos:position pos:line="24" pos:column="29"/></name><index pos:line="24" pos:column="29">[<expr><name pos:line="24" pos:column="30">i<pos:position pos:line="24" pos:column="31"/></name></expr>]<pos:position pos:line="24" pos:column="32"/></index></name> <operator pos:line="24" pos:column="33">=<pos:position pos:line="24" pos:column="34"/></operator> <literal type="number" pos:line="24" pos:column="35">0<pos:position pos:line="24" pos:column="36"/></literal></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="25" pos:column="25">ref_name<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">=<pos:position pos:line="25" pos:column="35"/></operator> <name pos:line="25" pos:column="36">mid<pos:position pos:line="25" pos:column="39"/></name> <operator pos:line="25" pos:column="40">+<pos:position pos:line="25" pos:column="41"/></operator> <literal type="number" pos:line="25" pos:column="42">1<pos:position pos:line="25" pos:column="43"/></literal></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="26" pos:column="25">ref<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <call><name pos:line="26" pos:column="31">alloc_ref<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">ref_name<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">get_oid_hex<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><name pos:line="27" pos:column="37">start<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="44">&amp;<pos:position pos:line="27" pos:column="49"/></operator><name><name pos:line="27" pos:column="45">ref<pos:position pos:line="27" pos:column="48"/></name><operator pos:line="27" pos:column="48">-&gt;<pos:position pos:line="27" pos:column="53"/></operator><name pos:line="27" pos:column="50">old_oid<pos:position pos:line="27" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><operator pos:line="28" pos:column="29">!<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">refs<pos:position pos:line="28" pos:column="34"/></name></expr>)<pos:position pos:line="28" pos:column="35"/></condition><then pos:line="28" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="33">refs<pos:position pos:line="29" pos:column="37"/></name> <operator pos:line="29" pos:column="38">=<pos:position pos:line="29" pos:column="39"/></operator> <name pos:line="29" pos:column="40">ref<pos:position pos:line="29" pos:column="43"/></name></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt></block></then></if>
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><name pos:line="30" pos:column="29">last_ref<pos:position pos:line="30" pos:column="37"/></name></expr>)<pos:position pos:line="30" pos:column="38"/></condition><then pos:line="30" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="33">last_ref<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">-&gt;<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="43">next<pos:position pos:line="31" pos:column="47"/></name></name> <operator pos:line="31" pos:column="48">=<pos:position pos:line="31" pos:column="49"/></operator> <name pos:line="31" pos:column="50">ref<pos:position pos:line="31" pos:column="53"/></name></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="32" pos:column="25">last_ref<pos:position pos:line="32" pos:column="33"/></name> <operator pos:line="32" pos:column="34">=<pos:position pos:line="32" pos:column="35"/></operator> <name pos:line="32" pos:column="36">ref<pos:position pos:line="32" pos:column="39"/></name></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="33" pos:column="25">start<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">=<pos:position pos:line="33" pos:column="32"/></operator> <name pos:line="33" pos:column="33">NULL<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="35" pos:column="17">i<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">++<pos:position pos:line="35" pos:column="20"/></operator></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></while>

	<expr_stmt><expr><name pos:line="38" pos:column="9">ref<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <call><name pos:line="38" pos:column="15">alloc_ref<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><literal type="string" pos:line="38" pos:column="25">"HEAD"<pos:position pos:line="38" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">!<pos:position pos:line="39" pos:column="14"/></operator><call><name pos:line="39" pos:column="14">http_fetch_ref<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><name><name pos:line="39" pos:column="29">url<pos:position pos:line="39" pos:column="32"/></name><operator pos:line="39" pos:column="32">.<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="33">buf<pos:position pos:line="39" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">ref<pos:position pos:line="39" pos:column="41"/></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call> <operator pos:line="39" pos:column="43">&amp;&amp;<pos:position pos:line="39" pos:column="53"/></operator>
	    <operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><call><name pos:line="40" pos:column="14">resolve_remote_symref<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">ref<pos:position pos:line="40" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="41">refs<pos:position pos:line="40" pos:column="45"/></name></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="47"/></condition><then pos:line="40" pos:column="47"> <block pos:line="40" pos:column="48">{
		<expr_stmt><expr><name><name pos:line="41" pos:column="17">ref<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">next<pos:position pos:line="41" pos:column="26"/></name></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <name pos:line="41" pos:column="29">refs<pos:position pos:line="41" pos:column="33"/></name></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">refs<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="24">ref<pos:position pos:line="42" pos:column="27"/></name></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></then> <else pos:line="43" pos:column="11">else <block pos:line="43" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">free<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">ref<pos:position pos:line="44" pos:column="25"/></name></expr></argument>)<pos:position pos:line="44" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></else></if>

	<return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">refs<pos:position pos:line="47" pos:column="20"/></name></expr>;<pos:position pos:line="47" pos:column="21"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4118_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">dir_entry<pos:position pos:line="1" pos:column="24"/></name></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">hash_dir_entry_with_parent_and_prefix<pos:position pos:line="1" pos:column="63"/></name><parameter_list pos:line="1" pos:column="63">(
	<parameter><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">index_state<pos:position pos:line="2" pos:column="27"/></name></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">istate<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">dir_entry<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">parent<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">prefix<pos:position pos:line="4" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="31"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">dir_entry<pos:position pos:line="6" pos:column="25"/></name></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">dir<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">int<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">hash<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">lock_nr<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

	<comment type="block" pos:line="10" pos:column="9">/*
	 * Either we have a parent directory and path with slash(es)
	 * or the directory is an immediate child of the root directory.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">assert<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">parent<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">!=<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">NULL<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">)<pos:position pos:line="14" pos:column="32"/></operator> <operator pos:line="14" pos:column="33">^<pos:position pos:line="14" pos:column="34"/></operator> <operator pos:line="14" pos:column="35">(<pos:position pos:line="14" pos:column="36"/></operator><call><name pos:line="14" pos:column="36">strchr<pos:position pos:line="14" pos:column="42"/></name><argument_list pos:line="14" pos:column="42">(<argument><expr><name><name pos:line="14" pos:column="43">prefix<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">buf<pos:position pos:line="14" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="56">'/'<pos:position pos:line="14" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call> <operator pos:line="14" pos:column="61">==<pos:position pos:line="14" pos:column="63"/></operator> <name pos:line="14" pos:column="64">NULL<pos:position pos:line="14" pos:column="68"/></name><operator pos:line="14" pos:column="68">)<pos:position pos:line="14" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="71"/></expr_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">parent<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">hash<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <call><name pos:line="17" pos:column="24">memihash_cont<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name><name pos:line="17" pos:column="38">parent<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">-&gt;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="46">ent<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">.<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="50">hash<pos:position pos:line="17" pos:column="54"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="18" pos:column="25">prefix<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">buf<pos:position pos:line="18" pos:column="36"/></name></name> <operator pos:line="18" pos:column="37">+<pos:position pos:line="18" pos:column="38"/></operator> <name><name pos:line="18" pos:column="39">parent<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">-&gt;<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="47">namelen<pos:position pos:line="18" pos:column="54"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="19" pos:column="25">prefix<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">len<pos:position pos:line="19" pos:column="36"/></name></name> <operator pos:line="19" pos:column="37">-<pos:position pos:line="19" pos:column="38"/></operator> <name><name pos:line="19" pos:column="39">parent<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">-&gt;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="47">namelen<pos:position pos:line="19" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt></block></then>
	<else pos:line="20" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">hash<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="24">memihash<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name><name pos:line="21" pos:column="33">prefix<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">-&gt;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="41">buf<pos:position pos:line="21" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="46">prefix<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">-&gt;<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="54">len<pos:position pos:line="21" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">lock_nr<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <call><name pos:line="23" pos:column="19">compute_dir_lock_nr<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><operator pos:line="23" pos:column="39">&amp;<pos:position pos:line="23" pos:column="44"/></operator><name><name pos:line="23" pos:column="40">istate<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">-&gt;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="48">dir_hash<pos:position pos:line="23" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="58">hash<pos:position pos:line="23" pos:column="62"/></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">lock_dir_mutex<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">lock_nr<pos:position pos:line="24" pos:column="31"/></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><name pos:line="26" pos:column="9">dir<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <call><name pos:line="26" pos:column="15">find_dir_entry__hash<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><name pos:line="26" pos:column="36">istate<pos:position pos:line="26" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="44">prefix<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">-&gt;<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="52">buf<pos:position pos:line="26" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="57">prefix<pos:position pos:line="26" pos:column="63"/></name><operator pos:line="26" pos:column="63">-&gt;<pos:position pos:line="26" pos:column="68"/></operator><name pos:line="26" pos:column="65">len<pos:position pos:line="26" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="70">hash<pos:position pos:line="26" pos:column="74"/></name></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="76"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">dir<pos:position pos:line="27" pos:column="17"/></name></expr>)<pos:position pos:line="27" pos:column="18"/></condition><then pos:line="27" pos:column="18"> <block pos:line="27" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">FLEX_ALLOC_MEM<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">dir<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="37">name<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="43">prefix<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">-&gt;<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="51">buf<pos:position pos:line="28" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="56">prefix<pos:position pos:line="28" pos:column="62"/></name><operator pos:line="28" pos:column="62">-&gt;<pos:position pos:line="28" pos:column="67"/></operator><name pos:line="28" pos:column="64">len<pos:position pos:line="28" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">hashmap_entry_init<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">dir<pos:position pos:line="29" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="41">hash<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="30" pos:column="17">dir<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">namelen<pos:position pos:line="30" pos:column="29"/></name></name> <operator pos:line="30" pos:column="30">=<pos:position pos:line="30" pos:column="31"/></operator> <name><name pos:line="30" pos:column="32">prefix<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">-&gt;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="40">len<pos:position pos:line="30" pos:column="43"/></name></name></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">dir<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">parent<pos:position pos:line="31" pos:column="28"/></name></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <name pos:line="31" pos:column="31">parent<pos:position pos:line="31" pos:column="37"/></name></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">hashmap_add<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><operator pos:line="32" pos:column="29">&amp;<pos:position pos:line="32" pos:column="34"/></operator><name><name pos:line="32" pos:column="30">istate<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">dir_hash<pos:position pos:line="32" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">dir<pos:position pos:line="32" pos:column="51"/></name></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt>

		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">parent<pos:position pos:line="34" pos:column="27"/></name></expr>)<pos:position pos:line="34" pos:column="28"/></condition><then pos:line="34" pos:column="28"> <block pos:line="34" pos:column="29">{
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">unlock_dir_mutex<pos:position pos:line="35" pos:column="41"/></name><argument_list pos:line="35" pos:column="41">(<argument><expr><name pos:line="35" pos:column="42">lock_nr<pos:position pos:line="35" pos:column="49"/></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>

			<comment type="block" pos:line="37" pos:column="25">/* All I really need here is an InterlockedIncrement(&amp;(parent-&gt;nr)) */</comment>
			<expr_stmt><expr><name pos:line="38" pos:column="25">lock_nr<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">=<pos:position pos:line="38" pos:column="34"/></operator> <call><name pos:line="38" pos:column="35">compute_dir_lock_nr<pos:position pos:line="38" pos:column="54"/></name><argument_list pos:line="38" pos:column="54">(<argument><expr><operator pos:line="38" pos:column="55">&amp;<pos:position pos:line="38" pos:column="60"/></operator><name><name pos:line="38" pos:column="56">istate<pos:position pos:line="38" pos:column="62"/></name><operator pos:line="38" pos:column="62">-&gt;<pos:position pos:line="38" pos:column="67"/></operator><name pos:line="38" pos:column="64">dir_hash<pos:position pos:line="38" pos:column="72"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="74">parent<pos:position pos:line="38" pos:column="80"/></name><operator pos:line="38" pos:column="80">-&gt;<pos:position pos:line="38" pos:column="85"/></operator><name pos:line="38" pos:column="82">ent<pos:position pos:line="38" pos:column="85"/></name><operator pos:line="38" pos:column="85">.<pos:position pos:line="38" pos:column="86"/></operator><name pos:line="38" pos:column="86">hash<pos:position pos:line="38" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="92"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">lock_dir_mutex<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><name pos:line="39" pos:column="40">lock_nr<pos:position pos:line="39" pos:column="47"/></name></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="40" pos:column="25">parent<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">-&gt;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="33">nr<pos:position pos:line="40" pos:column="35"/></name></name><operator pos:line="40" pos:column="35">++<pos:position pos:line="40" pos:column="37"/></operator></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="44" pos:column="9">unlock_dir_mutex<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">lock_nr<pos:position pos:line="44" pos:column="33"/></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>

	<return pos:line="46" pos:column="9">return <expr><name pos:line="46" pos:column="16">dir<pos:position pos:line="46" pos:column="19"/></name></expr>;<pos:position pos:line="46" pos:column="20"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

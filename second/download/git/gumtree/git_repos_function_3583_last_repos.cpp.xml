<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3583_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">update_paths<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">string_list<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">update<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">hold_locked_index<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><operator pos:line="5" pos:column="27">&amp;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="28">index_lock<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">LOCK_DIE_ON_ERROR<pos:position pos:line="5" pos:column="57"/></name></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="59"/></expr_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name><name pos:line="7" pos:column="25">update<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">nr<pos:position pos:line="7" pos:column="35"/></name></name></expr>;<pos:position pos:line="7" pos:column="36"/></condition> <incr><expr><name pos:line="7" pos:column="37">i<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">++<pos:position pos:line="7" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="41"/></control> <block pos:line="7" pos:column="42">{
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">string_list_item<pos:position pos:line="8" pos:column="40"/></name></name> <modifier pos:line="8" pos:column="41">*<pos:position pos:line="8" pos:column="42"/></modifier></type><name pos:line="8" pos:column="42">item<pos:position pos:line="8" pos:column="46"/></name> <init pos:line="8" pos:column="47">= <expr><operator pos:line="8" pos:column="49">&amp;<pos:position pos:line="8" pos:column="54"/></operator><name><name pos:line="8" pos:column="50">update<pos:position pos:line="8" pos:column="56"/></name><operator pos:line="8" pos:column="56">-&gt;<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="58">items<pos:position pos:line="8" pos:column="63"/></name><index pos:line="8" pos:column="63">[<expr><name pos:line="8" pos:column="64">i<pos:position pos:line="8" pos:column="65"/></name></expr>]<pos:position pos:line="8" pos:column="66"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="67"/></decl_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">add_file_to_cache<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">(<argument><expr><name><name pos:line="9" pos:column="39">item<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">-&gt;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="45">string<pos:position pos:line="9" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="53">0<pos:position pos:line="9" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="56"/></condition><then pos:line="9" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">exit<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><literal type="number" pos:line="10" pos:column="30">128<pos:position pos:line="10" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">fprintf<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">stderr<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="33">"Staged '%s' using previous resolution.\n"<pos:position pos:line="11" pos:column="75"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="12" pos:column="25">item<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">string<pos:position pos:line="12" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></for>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">active_cache_changed<pos:position pos:line="15" pos:column="33"/></name></expr>)<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34"> <block pos:line="15" pos:column="35">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><call><name pos:line="16" pos:column="21">write_locked_index<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><operator pos:line="16" pos:column="40">&amp;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="41">the_index<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="52">&amp;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="53">index_lock<pos:position pos:line="16" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="65">COMMIT_LOCK<pos:position pos:line="16" pos:column="76"/></name></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="78"/></condition><then pos:line="16" pos:column="78">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">die<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><literal type="string" pos:line="17" pos:column="29">"Unable to write new index file"<pos:position pos:line="17" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></then> <else pos:line="18" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">rollback_lock_file<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><operator pos:line="19" pos:column="36">&amp;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="37">index_lock<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt></block></else></if>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

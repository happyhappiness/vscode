<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3019_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sequencer_pick_revisions<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">replay_opts<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">opts<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">todo_list<pos:position pos:line="3" pos:column="25"/></name></name></type> <name pos:line="3" pos:column="26">todo_list<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><name pos:line="3" pos:column="38">TODO_LIST_INIT<pos:position pos:line="3" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object_id<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">oid<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">res<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">assert<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name><name pos:line="7" pos:column="16">opts<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">revs<pos:position pos:line="7" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">read_and_refresh_cache<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">opts<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="42"/></condition><then pos:line="8" pos:column="42">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">-<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">1<pos:position pos:line="9" pos:column="26"/></literal></expr>;<pos:position pos:line="9" pos:column="27"/></return></block></then></if>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="25">opts<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">-&gt;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="31">revs<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">pending<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">.<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="45">nr<pos:position pos:line="11" pos:column="47"/></name></name></expr>;<pos:position pos:line="11" pos:column="48"/></condition> <incr><expr><name pos:line="11" pos:column="49">i<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">++<pos:position pos:line="11" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="53"/></control> <block pos:line="11" pos:column="54">{
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">object_id<pos:position pos:line="12" pos:column="33"/></name></name></type> <name pos:line="12" pos:column="34">oid<pos:position pos:line="12" pos:column="37"/></name></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name pos:line="13" pos:column="23">char<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">name<pos:position pos:line="13" pos:column="33"/></name> <init pos:line="13" pos:column="34">= <expr><name><name pos:line="13" pos:column="36">opts<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">-&gt;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="42">revs<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">-&gt;<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="48">pending<pos:position pos:line="13" pos:column="55"/></name><operator pos:line="13" pos:column="55">.<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="56">objects<pos:position pos:line="13" pos:column="63"/></name><index pos:line="13" pos:column="63">[<expr><name pos:line="13" pos:column="64">i<pos:position pos:line="13" pos:column="65"/></name></expr>]<pos:position pos:line="13" pos:column="66"/></index></name><operator pos:line="13" pos:column="66">.<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="67">name<pos:position pos:line="13" pos:column="71"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="72"/></decl_stmt>

		<comment type="block" pos:line="15" pos:column="17">/* This happens when using --stdin. */</comment>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><call><name pos:line="16" pos:column="22">strlen<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">name<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35">
			<block type="pseudo"><continue pos:line="17" pos:column="25">continue;<pos:position pos:line="17" pos:column="34"/></continue></block></then></if>

		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><call><name pos:line="19" pos:column="22">get_oid<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">name<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="36">&amp;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="37">oid<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="42"/></condition><then pos:line="19" pos:column="42"> <block pos:line="19" pos:column="43">{
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><operator pos:line="20" pos:column="29">!<pos:position pos:line="20" pos:column="30"/></operator><call><name pos:line="20" pos:column="30">lookup_commit_reference_gently<pos:position pos:line="20" pos:column="60"/></name><argument_list pos:line="20" pos:column="60">(<argument><expr><operator pos:line="20" pos:column="61">&amp;<pos:position pos:line="20" pos:column="66"/></operator><name pos:line="20" pos:column="62">oid<pos:position pos:line="20" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="67">1<pos:position pos:line="20" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="70"/></condition><then pos:line="20" pos:column="70"> <block pos:line="20" pos:column="71">{
				<decl_stmt><decl><type><name><name pos:line="21" pos:column="33">enum<pos:position pos:line="21" pos:column="37"/></name> <name pos:line="21" pos:column="38">object_type<pos:position pos:line="21" pos:column="49"/></name></name></type> <name pos:line="21" pos:column="50">type<pos:position pos:line="21" pos:column="54"/></name> <init pos:line="21" pos:column="55">= <expr><call><name pos:line="21" pos:column="57">sha1_object_info<pos:position pos:line="21" pos:column="73"/></name><argument_list pos:line="21" pos:column="73">(<argument><expr><name><name pos:line="21" pos:column="74">oid<pos:position pos:line="21" pos:column="77"/></name><operator pos:line="21" pos:column="77">.<pos:position pos:line="21" pos:column="78"/></operator><name pos:line="21" pos:column="78">hash<pos:position pos:line="21" pos:column="82"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="84">NULL<pos:position pos:line="21" pos:column="88"/></name></expr></argument>)<pos:position pos:line="21" pos:column="89"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="90"/></decl_stmt>
				<return pos:line="22" pos:column="33">return <expr><call><name pos:line="22" pos:column="40">error<pos:position pos:line="22" pos:column="45"/></name><argument_list pos:line="22" pos:column="45">(<argument><expr><call><name pos:line="22" pos:column="46">_<pos:position pos:line="22" pos:column="47"/></name><argument_list pos:line="22" pos:column="47">(<argument><expr><literal type="string" pos:line="22" pos:column="48">"%s: can't cherry-pick a %s"<pos:position pos:line="22" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></call></expr></argument>,
					<argument><expr><name pos:line="23" pos:column="41">name<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><name><typename pos:line="23" pos:column="47">typename<pos:position pos:line="23" pos:column="55"/></typename></name><operator pos:line="23" pos:column="55">(<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="56">type<pos:position pos:line="23" pos:column="60"/></name><operator pos:line="23" pos:column="60">)<pos:position pos:line="23" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="63"/></return>
			}<pos:position pos:line="24" pos:column="26"/></block></then></if>
		}<pos:position pos:line="25" pos:column="18"/></block></then> <else pos:line="25" pos:column="19">else
			<block type="pseudo"><return pos:line="26" pos:column="25">return <expr><call><name pos:line="26" pos:column="32">error<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><call><name pos:line="26" pos:column="38">_<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><literal type="string" pos:line="26" pos:column="40">"%s: bad revision"<pos:position pos:line="26" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="61">name<pos:position pos:line="26" pos:column="65"/></name></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></return></block></else></if>
	}<pos:position pos:line="27" pos:column="10"/></block></for>

	<comment type="block" pos:line="29" pos:column="9">/*
	 * If we were called as "git cherry-pick &lt;commit&gt;", just
	 * cherry-pick/revert it, set CHERRY_PICK_HEAD /
	 * REVERT_HEAD, and don't touch the sequencer state.
	 * This means it is possible to cherry-pick in the middle
	 * of a cherry-pick sequence.
	 */</comment>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">opts<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">revs<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">cmdline<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">.<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="33">nr<pos:position pos:line="36" pos:column="35"/></name></name> <operator pos:line="36" pos:column="36">==<pos:position pos:line="36" pos:column="38"/></operator> <literal type="number" pos:line="36" pos:column="39">1<pos:position pos:line="36" pos:column="40"/></literal> <operator pos:line="36" pos:column="41">&amp;&amp;<pos:position pos:line="36" pos:column="51"/></operator>
	    <name><name pos:line="37" pos:column="13">opts<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">-&gt;<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="19">revs<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">-&gt;<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="25">cmdline<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">.<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="33">rev<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">-&gt;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="38">whence<pos:position pos:line="37" pos:column="44"/></name></name> <operator pos:line="37" pos:column="45">==<pos:position pos:line="37" pos:column="47"/></operator> <name pos:line="37" pos:column="48">REV_CMD_REV<pos:position pos:line="37" pos:column="59"/></name> <operator pos:line="37" pos:column="60">&amp;&amp;<pos:position pos:line="37" pos:column="70"/></operator>
	    <name><name pos:line="38" pos:column="13">opts<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">revs<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">no_walk<pos:position pos:line="38" pos:column="32"/></name></name> <operator pos:line="38" pos:column="33">&amp;&amp;<pos:position pos:line="38" pos:column="43"/></operator>
	    <operator pos:line="39" pos:column="13">!<pos:position pos:line="39" pos:column="14"/></operator><name><name pos:line="39" pos:column="14">opts<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">revs<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">-&gt;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="26">cmdline<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">.<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="34">rev<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">-&gt;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="39">flags<pos:position pos:line="39" pos:column="44"/></name></name></expr>)<pos:position pos:line="39" pos:column="45"/></condition><then pos:line="39" pos:column="45"> <block pos:line="39" pos:column="46">{
		<decl_stmt><decl><type><name><name pos:line="40" pos:column="17">struct<pos:position pos:line="40" pos:column="23"/></name> <name pos:line="40" pos:column="24">commit<pos:position pos:line="40" pos:column="30"/></name></name> <modifier pos:line="40" pos:column="31">*<pos:position pos:line="40" pos:column="32"/></modifier></type><name pos:line="40" pos:column="32">cmit<pos:position pos:line="40" pos:column="36"/></name></decl>;<pos:position pos:line="40" pos:column="37"/></decl_stmt>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><call><name pos:line="41" pos:column="21">prepare_revision_walk<pos:position pos:line="41" pos:column="42"/></name><argument_list pos:line="41" pos:column="42">(<argument><expr><name><name pos:line="41" pos:column="43">opts<pos:position pos:line="41" pos:column="47"/></name><operator pos:line="41" pos:column="47">-&gt;<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="49">revs<pos:position pos:line="41" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="55"/></condition><then pos:line="41" pos:column="55">
			<block type="pseudo"><return pos:line="42" pos:column="25">return <expr><call><name pos:line="42" pos:column="32">error<pos:position pos:line="42" pos:column="37"/></name><argument_list pos:line="42" pos:column="37">(<argument><expr><call><name pos:line="42" pos:column="38">_<pos:position pos:line="42" pos:column="39"/></name><argument_list pos:line="42" pos:column="39">(<argument><expr><literal type="string" pos:line="42" pos:column="40">"revision walk setup failed"<pos:position pos:line="42" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="71"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="43" pos:column="17">cmit<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">=<pos:position pos:line="43" pos:column="23"/></operator> <call><name pos:line="43" pos:column="24">get_revision<pos:position pos:line="43" pos:column="36"/></name><argument_list pos:line="43" pos:column="36">(<argument><expr><name><name pos:line="43" pos:column="37">opts<pos:position pos:line="43" pos:column="41"/></name><operator pos:line="43" pos:column="41">-&gt;<pos:position pos:line="43" pos:column="46"/></operator><name pos:line="43" pos:column="43">revs<pos:position pos:line="43" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="49"/></expr_stmt>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><operator pos:line="44" pos:column="21">!<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">cmit<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">||<pos:position pos:line="44" pos:column="29"/></operator> <call><name pos:line="44" pos:column="30">get_revision<pos:position pos:line="44" pos:column="42"/></name><argument_list pos:line="44" pos:column="42">(<argument><expr><name><name pos:line="44" pos:column="43">opts<pos:position pos:line="44" pos:column="47"/></name><operator pos:line="44" pos:column="47">-&gt;<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="49">revs<pos:position pos:line="44" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="55"/></condition><then pos:line="44" pos:column="55">
			<block type="pseudo"><return pos:line="45" pos:column="25">return <expr><call><name pos:line="45" pos:column="32">error<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><literal type="string" pos:line="45" pos:column="38">"BUG: expected exactly one commit from walk"<pos:position pos:line="45" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="84"/></return></block></then></if>
		<return pos:line="46" pos:column="17">return <expr><call><name pos:line="46" pos:column="24">single_pick<pos:position pos:line="46" pos:column="35"/></name><argument_list pos:line="46" pos:column="35">(<argument><expr><name pos:line="46" pos:column="36">cmit<pos:position pos:line="46" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="42">opts<pos:position pos:line="46" pos:column="46"/></name></expr></argument>)<pos:position pos:line="46" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="48"/></return>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="49" pos:column="9">/*
	 * Start a new cherry-pick/ revert sequence; but
	 * first, make sure that an existing one isn't in
	 * progress
	 */</comment>

	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><call><name pos:line="55" pos:column="13">walk_revs_populate_todo<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><operator pos:line="55" pos:column="37">&amp;<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="38">todo_list<pos:position pos:line="55" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="49">opts<pos:position pos:line="55" pos:column="53"/></name></expr></argument>)<pos:position pos:line="55" pos:column="54"/></argument_list></call> <operator pos:line="55" pos:column="55">||<pos:position pos:line="55" pos:column="57"/></operator>
			<call><name pos:line="56" pos:column="25">create_seq_dir<pos:position pos:line="56" pos:column="39"/></name><argument_list pos:line="56" pos:column="39">()<pos:position pos:line="56" pos:column="41"/></argument_list></call> <operator pos:line="56" pos:column="42">&lt;<pos:position pos:line="56" pos:column="46"/></operator> <literal type="number" pos:line="56" pos:column="44">0<pos:position pos:line="56" pos:column="45"/></literal></expr>)<pos:position pos:line="56" pos:column="46"/></condition><then pos:line="56" pos:column="46">
		<block type="pseudo"><return pos:line="57" pos:column="17">return <expr><operator pos:line="57" pos:column="24">-<pos:position pos:line="57" pos:column="25"/></operator><literal type="number" pos:line="57" pos:column="25">1<pos:position pos:line="57" pos:column="26"/></literal></expr>;<pos:position pos:line="57" pos:column="27"/></return></block></then></if>
	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><call><name pos:line="58" pos:column="13">get_oid<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><literal type="string" pos:line="58" pos:column="21">"HEAD"<pos:position pos:line="58" pos:column="27"/></literal></expr></argument>, <argument><expr><operator pos:line="58" pos:column="29">&amp;<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="30">oid<pos:position pos:line="58" pos:column="33"/></name></expr></argument>)<pos:position pos:line="58" pos:column="34"/></argument_list></call> <operator pos:line="58" pos:column="35">&amp;&amp;<pos:position pos:line="58" pos:column="45"/></operator> <operator pos:line="58" pos:column="38">(<pos:position pos:line="58" pos:column="39"/></operator><name><name pos:line="58" pos:column="39">opts<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">action<pos:position pos:line="58" pos:column="51"/></name></name> <operator pos:line="58" pos:column="52">==<pos:position pos:line="58" pos:column="54"/></operator> <name pos:line="58" pos:column="55">REPLAY_REVERT<pos:position pos:line="58" pos:column="68"/></name><operator pos:line="58" pos:column="68">)<pos:position pos:line="58" pos:column="69"/></operator></expr>)<pos:position pos:line="58" pos:column="70"/></condition><then pos:line="58" pos:column="70">
		<block type="pseudo"><return pos:line="59" pos:column="17">return <expr><call><name pos:line="59" pos:column="24">error<pos:position pos:line="59" pos:column="29"/></name><argument_list pos:line="59" pos:column="29">(<argument><expr><call><name pos:line="59" pos:column="30">_<pos:position pos:line="59" pos:column="31"/></name><argument_list pos:line="59" pos:column="31">(<argument><expr><literal type="string" pos:line="59" pos:column="32">"can't revert as initial commit"<pos:position pos:line="59" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="67"/></return></block></then></if>
	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><call><name pos:line="60" pos:column="13">save_head<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">(<argument><expr><call><name pos:line="60" pos:column="23">oid_to_hex<pos:position pos:line="60" pos:column="33"/></name><argument_list pos:line="60" pos:column="33">(<argument><expr><operator pos:line="60" pos:column="34">&amp;<pos:position pos:line="60" pos:column="39"/></operator><name pos:line="60" pos:column="35">oid<pos:position pos:line="60" pos:column="38"/></name></expr></argument>)<pos:position pos:line="60" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="41"/></condition><then pos:line="60" pos:column="41">
		<block type="pseudo"><return pos:line="61" pos:column="17">return <expr><operator pos:line="61" pos:column="24">-<pos:position pos:line="61" pos:column="25"/></operator><literal type="number" pos:line="61" pos:column="25">1<pos:position pos:line="61" pos:column="26"/></literal></expr>;<pos:position pos:line="61" pos:column="27"/></return></block></then></if>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><call><name pos:line="62" pos:column="13">save_opts<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">(<argument><expr><name pos:line="62" pos:column="23">opts<pos:position pos:line="62" pos:column="27"/></name></expr></argument>)<pos:position pos:line="62" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="29"/></condition><then pos:line="62" pos:column="29">
		<block type="pseudo"><return pos:line="63" pos:column="17">return <expr><operator pos:line="63" pos:column="24">-<pos:position pos:line="63" pos:column="25"/></operator><literal type="number" pos:line="63" pos:column="25">1<pos:position pos:line="63" pos:column="26"/></literal></expr>;<pos:position pos:line="63" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="64" pos:column="9">update_abort_safety_file<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">()<pos:position pos:line="64" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="65" pos:column="9">res<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">=<pos:position pos:line="65" pos:column="14"/></operator> <call><name pos:line="65" pos:column="15">pick_commits<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><operator pos:line="65" pos:column="28">&amp;<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="29">todo_list<pos:position pos:line="65" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="40">opts<pos:position pos:line="65" pos:column="44"/></name></expr></argument>)<pos:position pos:line="65" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="66" pos:column="9">todo_list_release<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><operator pos:line="66" pos:column="27">&amp;<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="28">todo_list<pos:position pos:line="66" pos:column="37"/></name></expr></argument>)<pos:position pos:line="66" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="39"/></expr_stmt>
	<return pos:line="67" pos:column="9">return <expr><name pos:line="67" pos:column="16">res<pos:position pos:line="67" pos:column="19"/></name></expr>;<pos:position pos:line="67" pos:column="20"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_3019.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">prepare_to_commit<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">index_file<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">prefix<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
			     <parameter><decl><type><name><name pos:line="2" pos:column="30">struct<pos:position pos:line="2" pos:column="36"/></name> <name pos:line="2" pos:column="37">commit<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">current_head<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
			     <parameter><decl><type><name><name pos:line="3" pos:column="30">struct<pos:position pos:line="3" pos:column="36"/></name> <name pos:line="3" pos:column="37">wt_status<pos:position pos:line="3" pos:column="46"/></name></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">s<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>,
			     <parameter><decl><type><name><name pos:line="4" pos:column="30">struct<pos:position pos:line="4" pos:column="36"/></name> <name pos:line="4" pos:column="37">strbuf<pos:position pos:line="4" pos:column="43"/></name></name> <modifier pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></modifier></type><name pos:line="4" pos:column="45">author_ident<pos:position pos:line="4" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="58"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">stat<pos:position pos:line="6" pos:column="20"/></name></name></type> <name pos:line="6" pos:column="21">statbuf<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">committer_ident<pos:position pos:line="7" pos:column="38"/></name> <init pos:line="7" pos:column="39">= <expr><name pos:line="7" pos:column="41">STRBUF_INIT<pos:position pos:line="7" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">commitable<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">strbuf<pos:position pos:line="9" pos:column="22"/></name></name></type> <name pos:line="9" pos:column="23">sb<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name pos:line="9" pos:column="28">STRBUF_INIT<pos:position pos:line="9" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">hook_arg1<pos:position pos:line="10" pos:column="30"/></name> <init pos:line="10" pos:column="31">= <expr><name pos:line="10" pos:column="33">NULL<pos:position pos:line="10" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">hook_arg2<pos:position pos:line="11" pos:column="30"/></name> <init pos:line="11" pos:column="31">= <expr><name pos:line="11" pos:column="33">NULL<pos:position pos:line="11" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">clean_message_contents<pos:position pos:line="12" pos:column="35"/></name> <init pos:line="12" pos:column="36">= <expr><operator pos:line="12" pos:column="38">(<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="39">cleanup_mode<pos:position pos:line="12" pos:column="51"/></name> <operator pos:line="12" pos:column="52">!=<pos:position pos:line="12" pos:column="54"/></operator> <name pos:line="12" pos:column="55">CLEANUP_NONE<pos:position pos:line="12" pos:column="67"/></name><operator pos:line="12" pos:column="67">)<pos:position pos:line="12" pos:column="68"/></operator></expr></init></decl>;<pos:position pos:line="12" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">old_display_comment_prefix<pos:position pos:line="13" pos:column="39"/></name></decl>;<pos:position pos:line="13" pos:column="40"/></decl_stmt>

	<comment type="block" pos:line="15" pos:column="9">/* This checks and barfs if author is badly specified */</comment>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">determine_author_info<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">author_ident<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">no_verify<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">&amp;&amp;<pos:position pos:line="18" pos:column="34"/></operator> <call><name pos:line="18" pos:column="27">run_commit_hook<pos:position pos:line="18" pos:column="42"/></name><argument_list pos:line="18" pos:column="42">(<argument><expr><name pos:line="18" pos:column="43">use_editor<pos:position pos:line="18" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="55">index_file<pos:position pos:line="18" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="67">"pre-commit"<pos:position pos:line="18" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="81">NULL<pos:position pos:line="18" pos:column="85"/></name></expr></argument>)<pos:position pos:line="18" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="87"/></condition><then pos:line="18" pos:column="87">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">squash_message<pos:position pos:line="21" pos:column="27"/></name></expr>)<pos:position pos:line="21" pos:column="28"/></condition><then pos:line="21" pos:column="28"> <block pos:line="21" pos:column="29">{
		<comment type="block" pos:line="22" pos:column="17">/*
		 * Insert the proper subject line before other commit
		 * message options add their content.
		 */</comment>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">use_message<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">&amp;&amp;<pos:position pos:line="26" pos:column="43"/></operator> <operator pos:line="26" pos:column="36">!<pos:position pos:line="26" pos:column="37"/></operator><call><name pos:line="26" pos:column="37">strcmp<pos:position pos:line="26" pos:column="43"/></name><argument_list pos:line="26" pos:column="43">(<argument><expr><name pos:line="26" pos:column="44">use_message<pos:position pos:line="26" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="57">squash_message<pos:position pos:line="26" pos:column="71"/></name></expr></argument>)<pos:position pos:line="26" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="73"/></condition><then pos:line="26" pos:column="73">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="25">strbuf_addstr<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><operator pos:line="27" pos:column="39">&amp;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="40">sb<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="44">"squash! "<pos:position pos:line="27" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt></block></then>
		<else pos:line="28" pos:column="17">else <block pos:line="28" pos:column="22">{
			<decl_stmt><decl><type><name><name pos:line="29" pos:column="25">struct<pos:position pos:line="29" pos:column="31"/></name> <name pos:line="29" pos:column="32">pretty_print_context<pos:position pos:line="29" pos:column="52"/></name></name></type> <name pos:line="29" pos:column="53">ctx<pos:position pos:line="29" pos:column="56"/></name> <init pos:line="29" pos:column="57">= <expr><block pos:line="29" pos:column="59">{<expr><literal type="number" pos:line="29" pos:column="60">0<pos:position pos:line="29" pos:column="61"/></literal></expr>}<pos:position pos:line="29" pos:column="62"/></block></expr></init></decl>;<pos:position pos:line="29" pos:column="63"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="30" pos:column="25">struct<pos:position pos:line="30" pos:column="31"/></name> <name pos:line="30" pos:column="32">commit<pos:position pos:line="30" pos:column="38"/></name></name> <modifier pos:line="30" pos:column="39">*<pos:position pos:line="30" pos:column="40"/></modifier></type><name pos:line="30" pos:column="40">c<pos:position pos:line="30" pos:column="41"/></name></decl>;<pos:position pos:line="30" pos:column="42"/></decl_stmt>
			<expr_stmt><expr><name pos:line="31" pos:column="25">c<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">=<pos:position pos:line="31" pos:column="28"/></operator> <call><name pos:line="31" pos:column="29">lookup_commit_reference_by_name<pos:position pos:line="31" pos:column="60"/></name><argument_list pos:line="31" pos:column="60">(<argument><expr><name pos:line="31" pos:column="61">squash_message<pos:position pos:line="31" pos:column="75"/></name></expr></argument>)<pos:position pos:line="31" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="77"/></expr_stmt>
			<if pos:line="32" pos:column="25">if <condition pos:line="32" pos:column="28">(<expr><operator pos:line="32" pos:column="29">!<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">c<pos:position pos:line="32" pos:column="31"/></name></expr>)<pos:position pos:line="32" pos:column="32"/></condition><then pos:line="32" pos:column="32">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="33">die<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><call><name pos:line="33" pos:column="37">_<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><literal type="string" pos:line="33" pos:column="39">"could not lookup commit %s"<pos:position pos:line="33" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="33" pos:column="70">squash_message<pos:position pos:line="33" pos:column="84"/></name></expr></argument>)<pos:position pos:line="33" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="86"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="34" pos:column="25">ctx<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">.<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="29">output_encoding<pos:position pos:line="34" pos:column="44"/></name></name> <operator pos:line="34" pos:column="45">=<pos:position pos:line="34" pos:column="46"/></operator> <call><name pos:line="34" pos:column="47">get_commit_output_encoding<pos:position pos:line="34" pos:column="73"/></name><argument_list pos:line="34" pos:column="73">()<pos:position pos:line="34" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">format_commit_message<pos:position pos:line="35" pos:column="46"/></name><argument_list pos:line="35" pos:column="46">(<argument><expr><name pos:line="35" pos:column="47">c<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="50">"squash! %s\n\n"<pos:position pos:line="35" pos:column="66"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="68">&amp;<pos:position pos:line="35" pos:column="73"/></operator><name pos:line="35" pos:column="69">sb<pos:position pos:line="35" pos:column="71"/></name></expr></argument>,
					      <argument><expr><operator pos:line="36" pos:column="47">&amp;<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="48">ctx<pos:position pos:line="36" pos:column="51"/></name></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></else></if>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">have_option_m<pos:position pos:line="40" pos:column="26"/></name></expr>)<pos:position pos:line="40" pos:column="27"/></condition><then pos:line="40" pos:column="27"> <block pos:line="40" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">strbuf_addbuf<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><operator pos:line="41" pos:column="31">&amp;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="32">sb<pos:position pos:line="41" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="36">&amp;<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="37">message<pos:position pos:line="41" pos:column="44"/></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">hook_arg1<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <literal type="string" pos:line="42" pos:column="29">"message"<pos:position pos:line="42" pos:column="38"/></literal></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></then> <elseif pos:line="43" pos:column="11">else <if pos:line="43" pos:column="16">if <condition pos:line="43" pos:column="19">(<expr><name pos:line="43" pos:column="20">logfile<pos:position pos:line="43" pos:column="27"/></name> <operator pos:line="43" pos:column="28">&amp;&amp;<pos:position pos:line="43" pos:column="38"/></operator> <operator pos:line="43" pos:column="31">!<pos:position pos:line="43" pos:column="32"/></operator><call><name pos:line="43" pos:column="32">strcmp<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><name pos:line="43" pos:column="39">logfile<pos:position pos:line="43" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="48">"-"<pos:position pos:line="43" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="53"/></condition><then pos:line="43" pos:column="53"> <block pos:line="43" pos:column="54">{
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><call><name pos:line="44" pos:column="21">isatty<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><literal type="number" pos:line="44" pos:column="28">0<pos:position pos:line="44" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="25">fprintf<pos:position pos:line="45" pos:column="32"/></name><argument_list pos:line="45" pos:column="32">(<argument><expr><name pos:line="45" pos:column="33">stderr<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="41">_<pos:position pos:line="45" pos:column="42"/></name><argument_list pos:line="45" pos:column="42">(<argument><expr><literal type="string" pos:line="45" pos:column="43">"(reading log message from standard input)\n"<pos:position pos:line="45" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="91"/></expr_stmt></block></then></if>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><call><name pos:line="46" pos:column="21">strbuf_read<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><operator pos:line="46" pos:column="33">&amp;<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="34">sb<pos:position pos:line="46" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="38">0<pos:position pos:line="46" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="41">0<pos:position pos:line="46" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></call> <operator pos:line="46" pos:column="44">&lt;<pos:position pos:line="46" pos:column="48"/></operator> <literal type="number" pos:line="46" pos:column="46">0<pos:position pos:line="46" pos:column="47"/></literal></expr>)<pos:position pos:line="46" pos:column="48"/></condition><then pos:line="46" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="25">die_errno<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><call><name pos:line="47" pos:column="35">_<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><literal type="string" pos:line="47" pos:column="37">"could not read log from standard input"<pos:position pos:line="47" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="80"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="48" pos:column="17">hook_arg1<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">=<pos:position pos:line="48" pos:column="28"/></operator> <literal type="string" pos:line="48" pos:column="29">"message"<pos:position pos:line="48" pos:column="38"/></literal></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if></elseif> <elseif pos:line="49" pos:column="11">else <if pos:line="49" pos:column="16">if <condition pos:line="49" pos:column="19">(<expr><name pos:line="49" pos:column="20">logfile<pos:position pos:line="49" pos:column="27"/></name></expr>)<pos:position pos:line="49" pos:column="28"/></condition><then pos:line="49" pos:column="28"> <block pos:line="49" pos:column="29">{
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><call><name pos:line="50" pos:column="21">strbuf_read_file<pos:position pos:line="50" pos:column="37"/></name><argument_list pos:line="50" pos:column="37">(<argument><expr><operator pos:line="50" pos:column="38">&amp;<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="39">sb<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="43">logfile<pos:position pos:line="50" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="52">0<pos:position pos:line="50" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></call> <operator pos:line="50" pos:column="55">&lt;<pos:position pos:line="50" pos:column="59"/></operator> <literal type="number" pos:line="50" pos:column="57">0<pos:position pos:line="50" pos:column="58"/></literal></expr>)<pos:position pos:line="50" pos:column="59"/></condition><then pos:line="50" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="25">die_errno<pos:position pos:line="51" pos:column="34"/></name><argument_list pos:line="51" pos:column="34">(<argument><expr><call><name pos:line="51" pos:column="35">_<pos:position pos:line="51" pos:column="36"/></name><argument_list pos:line="51" pos:column="36">(<argument><expr><literal type="string" pos:line="51" pos:column="37">"could not read log file '%s'"<pos:position pos:line="51" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="68"/></argument_list></call></expr></argument>,
				  <argument><expr><name pos:line="52" pos:column="35">logfile<pos:position pos:line="52" pos:column="42"/></name></expr></argument>)<pos:position pos:line="52" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="44"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="53" pos:column="17">hook_arg1<pos:position pos:line="53" pos:column="26"/></name> <operator pos:line="53" pos:column="27">=<pos:position pos:line="53" pos:column="28"/></operator> <literal type="string" pos:line="53" pos:column="29">"message"<pos:position pos:line="53" pos:column="38"/></literal></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if></elseif> <elseif pos:line="54" pos:column="11">else <if pos:line="54" pos:column="16">if <condition pos:line="54" pos:column="19">(<expr><name pos:line="54" pos:column="20">use_message<pos:position pos:line="54" pos:column="31"/></name></expr>)<pos:position pos:line="54" pos:column="32"/></condition><then pos:line="54" pos:column="32"> <block pos:line="54" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="55" pos:column="17">char<pos:position pos:line="55" pos:column="21"/></name> <modifier pos:line="55" pos:column="22">*<pos:position pos:line="55" pos:column="23"/></modifier></type><name pos:line="55" pos:column="23">buffer<pos:position pos:line="55" pos:column="29"/></name></decl>;<pos:position pos:line="55" pos:column="30"/></decl_stmt>
		<expr_stmt><expr><name pos:line="56" pos:column="17">buffer<pos:position pos:line="56" pos:column="23"/></name> <operator pos:line="56" pos:column="24">=<pos:position pos:line="56" pos:column="25"/></operator> <call><name pos:line="56" pos:column="26">strstr<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><name pos:line="56" pos:column="33">use_message_buffer<pos:position pos:line="56" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="53">"\n\n"<pos:position pos:line="56" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="61"/></expr_stmt>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><name pos:line="57" pos:column="21">buffer<pos:position pos:line="57" pos:column="27"/></name></expr>)<pos:position pos:line="57" pos:column="28"/></condition><then pos:line="57" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="25">strbuf_addstr<pos:position pos:line="58" pos:column="38"/></name><argument_list pos:line="58" pos:column="38">(<argument><expr><operator pos:line="58" pos:column="39">&amp;<pos:position pos:line="58" pos:column="44"/></operator><name pos:line="58" pos:column="40">sb<pos:position pos:line="58" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="44">buffer<pos:position pos:line="58" pos:column="50"/></name> <operator pos:line="58" pos:column="51">+<pos:position pos:line="58" pos:column="52"/></operator> <literal type="number" pos:line="58" pos:column="53">2<pos:position pos:line="58" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="56"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="59" pos:column="17">hook_arg1<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator> <literal type="string" pos:line="59" pos:column="29">"commit"<pos:position pos:line="59" pos:column="37"/></literal></expr>;<pos:position pos:line="59" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="60" pos:column="17">hook_arg2<pos:position pos:line="60" pos:column="26"/></name> <operator pos:line="60" pos:column="27">=<pos:position pos:line="60" pos:column="28"/></operator> <name pos:line="60" pos:column="29">use_message<pos:position pos:line="60" pos:column="40"/></name></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if></elseif> <elseif pos:line="61" pos:column="11">else <if pos:line="61" pos:column="16">if <condition pos:line="61" pos:column="19">(<expr><name pos:line="61" pos:column="20">fixup_message<pos:position pos:line="61" pos:column="33"/></name></expr>)<pos:position pos:line="61" pos:column="34"/></condition><then pos:line="61" pos:column="34"> <block pos:line="61" pos:column="35">{
		<decl_stmt><decl><type><name><name pos:line="62" pos:column="17">struct<pos:position pos:line="62" pos:column="23"/></name> <name pos:line="62" pos:column="24">pretty_print_context<pos:position pos:line="62" pos:column="44"/></name></name></type> <name pos:line="62" pos:column="45">ctx<pos:position pos:line="62" pos:column="48"/></name> <init pos:line="62" pos:column="49">= <expr><block pos:line="62" pos:column="51">{<expr><literal type="number" pos:line="62" pos:column="52">0<pos:position pos:line="62" pos:column="53"/></literal></expr>}<pos:position pos:line="62" pos:column="54"/></block></expr></init></decl>;<pos:position pos:line="62" pos:column="55"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="63" pos:column="17">struct<pos:position pos:line="63" pos:column="23"/></name> <name pos:line="63" pos:column="24">commit<pos:position pos:line="63" pos:column="30"/></name></name> <modifier pos:line="63" pos:column="31">*<pos:position pos:line="63" pos:column="32"/></modifier></type><name pos:line="63" pos:column="32">commit<pos:position pos:line="63" pos:column="38"/></name></decl>;<pos:position pos:line="63" pos:column="39"/></decl_stmt>
		<expr_stmt><expr><name pos:line="64" pos:column="17">commit<pos:position pos:line="64" pos:column="23"/></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <call><name pos:line="64" pos:column="26">lookup_commit_reference_by_name<pos:position pos:line="64" pos:column="57"/></name><argument_list pos:line="64" pos:column="57">(<argument><expr><name pos:line="64" pos:column="58">fixup_message<pos:position pos:line="64" pos:column="71"/></name></expr></argument>)<pos:position pos:line="64" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="73"/></expr_stmt>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><operator pos:line="65" pos:column="21">!<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="22">commit<pos:position pos:line="65" pos:column="28"/></name></expr>)<pos:position pos:line="65" pos:column="29"/></condition><then pos:line="65" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="25">die<pos:position pos:line="66" pos:column="28"/></name><argument_list pos:line="66" pos:column="28">(<argument><expr><call><name pos:line="66" pos:column="29">_<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><literal type="string" pos:line="66" pos:column="31">"could not lookup commit %s"<pos:position pos:line="66" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="66" pos:column="62">fixup_message<pos:position pos:line="66" pos:column="75"/></name></expr></argument>)<pos:position pos:line="66" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="77"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="67" pos:column="17">ctx<pos:position pos:line="67" pos:column="20"/></name><operator pos:line="67" pos:column="20">.<pos:position pos:line="67" pos:column="21"/></operator><name pos:line="67" pos:column="21">output_encoding<pos:position pos:line="67" pos:column="36"/></name></name> <operator pos:line="67" pos:column="37">=<pos:position pos:line="67" pos:column="38"/></operator> <call><name pos:line="67" pos:column="39">get_commit_output_encoding<pos:position pos:line="67" pos:column="65"/></name><argument_list pos:line="67" pos:column="65">()<pos:position pos:line="67" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">format_commit_message<pos:position pos:line="68" pos:column="38"/></name><argument_list pos:line="68" pos:column="38">(<argument><expr><name pos:line="68" pos:column="39">commit<pos:position pos:line="68" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="47">"fixup! %s\n\n"<pos:position pos:line="68" pos:column="62"/></literal></expr></argument>,
				      <argument><expr><operator pos:line="69" pos:column="39">&amp;<pos:position pos:line="69" pos:column="44"/></operator><name pos:line="69" pos:column="40">sb<pos:position pos:line="69" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="44">&amp;<pos:position pos:line="69" pos:column="49"/></operator><name pos:line="69" pos:column="45">ctx<pos:position pos:line="69" pos:column="48"/></name></expr></argument>)<pos:position pos:line="69" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="70" pos:column="17">hook_arg1<pos:position pos:line="70" pos:column="26"/></name> <operator pos:line="70" pos:column="27">=<pos:position pos:line="70" pos:column="28"/></operator> <literal type="string" pos:line="70" pos:column="29">"message"<pos:position pos:line="70" pos:column="38"/></literal></expr>;<pos:position pos:line="70" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if></elseif> <elseif pos:line="71" pos:column="11">else <if pos:line="71" pos:column="16">if <condition pos:line="71" pos:column="19">(<expr><operator pos:line="71" pos:column="20">!<pos:position pos:line="71" pos:column="21"/></operator><call><name pos:line="71" pos:column="21">stat<pos:position pos:line="71" pos:column="25"/></name><argument_list pos:line="71" pos:column="25">(<argument><expr><call><name pos:line="71" pos:column="26">git_path_merge_msg<pos:position pos:line="71" pos:column="44"/></name><argument_list pos:line="71" pos:column="44">()<pos:position pos:line="71" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="71" pos:column="48">&amp;<pos:position pos:line="71" pos:column="53"/></operator><name pos:line="71" pos:column="49">statbuf<pos:position pos:line="71" pos:column="56"/></name></expr></argument>)<pos:position pos:line="71" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="58"/></condition><then pos:line="71" pos:column="58"> <block pos:line="71" pos:column="59">{
		<comment type="block" pos:line="72" pos:column="17">/*
		 * prepend SQUASH_MSG here if it exists and a
		 * "merge --squash" was originally performed
		 */</comment>
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><operator pos:line="76" pos:column="21">!<pos:position pos:line="76" pos:column="22"/></operator><call><name pos:line="76" pos:column="22">stat<pos:position pos:line="76" pos:column="26"/></name><argument_list pos:line="76" pos:column="26">(<argument><expr><call><name pos:line="76" pos:column="27">git_path_squash_msg<pos:position pos:line="76" pos:column="46"/></name><argument_list pos:line="76" pos:column="46">()<pos:position pos:line="76" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="76" pos:column="50">&amp;<pos:position pos:line="76" pos:column="55"/></operator><name pos:line="76" pos:column="51">statbuf<pos:position pos:line="76" pos:column="58"/></name></expr></argument>)<pos:position pos:line="76" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="60"/></condition><then pos:line="76" pos:column="60"> <block pos:line="76" pos:column="61">{
			<if pos:line="77" pos:column="25">if <condition pos:line="77" pos:column="28">(<expr><call><name pos:line="77" pos:column="29">strbuf_read_file<pos:position pos:line="77" pos:column="45"/></name><argument_list pos:line="77" pos:column="45">(<argument><expr><operator pos:line="77" pos:column="46">&amp;<pos:position pos:line="77" pos:column="51"/></operator><name pos:line="77" pos:column="47">sb<pos:position pos:line="77" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="51">git_path_squash_msg<pos:position pos:line="77" pos:column="70"/></name><argument_list pos:line="77" pos:column="70">()<pos:position pos:line="77" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="74">0<pos:position pos:line="77" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="76"/></argument_list></call> <operator pos:line="77" pos:column="77">&lt;<pos:position pos:line="77" pos:column="81"/></operator> <literal type="number" pos:line="77" pos:column="79">0<pos:position pos:line="77" pos:column="80"/></literal></expr>)<pos:position pos:line="77" pos:column="81"/></condition><then pos:line="77" pos:column="81">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="33">die_errno<pos:position pos:line="78" pos:column="42"/></name><argument_list pos:line="78" pos:column="42">(<argument><expr><call><name pos:line="78" pos:column="43">_<pos:position pos:line="78" pos:column="44"/></name><argument_list pos:line="78" pos:column="44">(<argument><expr><literal type="string" pos:line="78" pos:column="45">"could not read SQUASH_MSG"<pos:position pos:line="78" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="75"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="79" pos:column="25">hook_arg1<pos:position pos:line="79" pos:column="34"/></name> <operator pos:line="79" pos:column="35">=<pos:position pos:line="79" pos:column="36"/></operator> <literal type="string" pos:line="79" pos:column="37">"squash"<pos:position pos:line="79" pos:column="45"/></literal></expr>;<pos:position pos:line="79" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="80" pos:column="18"/></block></then> <else pos:line="80" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="25">hook_arg1<pos:position pos:line="81" pos:column="34"/></name> <operator pos:line="81" pos:column="35">=<pos:position pos:line="81" pos:column="36"/></operator> <literal type="string" pos:line="81" pos:column="37">"merge"<pos:position pos:line="81" pos:column="44"/></literal></expr>;<pos:position pos:line="81" pos:column="45"/></expr_stmt></block></else></if>
		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><call><name pos:line="82" pos:column="21">strbuf_read_file<pos:position pos:line="82" pos:column="37"/></name><argument_list pos:line="82" pos:column="37">(<argument><expr><operator pos:line="82" pos:column="38">&amp;<pos:position pos:line="82" pos:column="43"/></operator><name pos:line="82" pos:column="39">sb<pos:position pos:line="82" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="82" pos:column="43">git_path_merge_msg<pos:position pos:line="82" pos:column="61"/></name><argument_list pos:line="82" pos:column="61">()<pos:position pos:line="82" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="65">0<pos:position pos:line="82" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="67"/></argument_list></call> <operator pos:line="82" pos:column="68">&lt;<pos:position pos:line="82" pos:column="72"/></operator> <literal type="number" pos:line="82" pos:column="70">0<pos:position pos:line="82" pos:column="71"/></literal></expr>)<pos:position pos:line="82" pos:column="72"/></condition><then pos:line="82" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="25">die_errno<pos:position pos:line="83" pos:column="34"/></name><argument_list pos:line="83" pos:column="34">(<argument><expr><call><name pos:line="83" pos:column="35">_<pos:position pos:line="83" pos:column="36"/></name><argument_list pos:line="83" pos:column="36">(<argument><expr><literal type="string" pos:line="83" pos:column="37">"could not read MERGE_MSG"<pos:position pos:line="83" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="66"/></expr_stmt></block></then></if>
	}<pos:position pos:line="84" pos:column="10"/></block></then></if></elseif> <elseif pos:line="84" pos:column="11">else <if pos:line="84" pos:column="16">if <condition pos:line="84" pos:column="19">(<expr><operator pos:line="84" pos:column="20">!<pos:position pos:line="84" pos:column="21"/></operator><call><name pos:line="84" pos:column="21">stat<pos:position pos:line="84" pos:column="25"/></name><argument_list pos:line="84" pos:column="25">(<argument><expr><call><name pos:line="84" pos:column="26">git_path_squash_msg<pos:position pos:line="84" pos:column="45"/></name><argument_list pos:line="84" pos:column="45">()<pos:position pos:line="84" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="84" pos:column="49">&amp;<pos:position pos:line="84" pos:column="54"/></operator><name pos:line="84" pos:column="50">statbuf<pos:position pos:line="84" pos:column="57"/></name></expr></argument>)<pos:position pos:line="84" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="59"/></condition><then pos:line="84" pos:column="59"> <block pos:line="84" pos:column="60">{
		<if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><call><name pos:line="85" pos:column="21">strbuf_read_file<pos:position pos:line="85" pos:column="37"/></name><argument_list pos:line="85" pos:column="37">(<argument><expr><operator pos:line="85" pos:column="38">&amp;<pos:position pos:line="85" pos:column="43"/></operator><name pos:line="85" pos:column="39">sb<pos:position pos:line="85" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="85" pos:column="43">git_path_squash_msg<pos:position pos:line="85" pos:column="62"/></name><argument_list pos:line="85" pos:column="62">()<pos:position pos:line="85" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="66">0<pos:position pos:line="85" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="68"/></argument_list></call> <operator pos:line="85" pos:column="69">&lt;<pos:position pos:line="85" pos:column="73"/></operator> <literal type="number" pos:line="85" pos:column="71">0<pos:position pos:line="85" pos:column="72"/></literal></expr>)<pos:position pos:line="85" pos:column="73"/></condition><then pos:line="85" pos:column="73">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="25">die_errno<pos:position pos:line="86" pos:column="34"/></name><argument_list pos:line="86" pos:column="34">(<argument><expr><call><name pos:line="86" pos:column="35">_<pos:position pos:line="86" pos:column="36"/></name><argument_list pos:line="86" pos:column="36">(<argument><expr><literal type="string" pos:line="86" pos:column="37">"could not read SQUASH_MSG"<pos:position pos:line="86" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="67"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="87" pos:column="17">hook_arg1<pos:position pos:line="87" pos:column="26"/></name> <operator pos:line="87" pos:column="27">=<pos:position pos:line="87" pos:column="28"/></operator> <literal type="string" pos:line="87" pos:column="29">"squash"<pos:position pos:line="87" pos:column="37"/></literal></expr>;<pos:position pos:line="87" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="88" pos:column="10"/></block></then></if></elseif> <elseif pos:line="88" pos:column="11">else <if pos:line="88" pos:column="16">if <condition pos:line="88" pos:column="19">(<expr><name pos:line="88" pos:column="20">template_file<pos:position pos:line="88" pos:column="33"/></name></expr>)<pos:position pos:line="88" pos:column="34"/></condition><then pos:line="88" pos:column="34"> <block pos:line="88" pos:column="35">{
		<if pos:line="89" pos:column="17">if <condition pos:line="89" pos:column="20">(<expr><call><name pos:line="89" pos:column="21">strbuf_read_file<pos:position pos:line="89" pos:column="37"/></name><argument_list pos:line="89" pos:column="37">(<argument><expr><operator pos:line="89" pos:column="38">&amp;<pos:position pos:line="89" pos:column="43"/></operator><name pos:line="89" pos:column="39">sb<pos:position pos:line="89" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="43">template_file<pos:position pos:line="89" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="58">0<pos:position pos:line="89" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="60"/></argument_list></call> <operator pos:line="89" pos:column="61">&lt;<pos:position pos:line="89" pos:column="65"/></operator> <literal type="number" pos:line="89" pos:column="63">0<pos:position pos:line="89" pos:column="64"/></literal></expr>)<pos:position pos:line="89" pos:column="65"/></condition><then pos:line="89" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="25">die_errno<pos:position pos:line="90" pos:column="34"/></name><argument_list pos:line="90" pos:column="34">(<argument><expr><call><name pos:line="90" pos:column="35">_<pos:position pos:line="90" pos:column="36"/></name><argument_list pos:line="90" pos:column="36">(<argument><expr><literal type="string" pos:line="90" pos:column="37">"could not read '%s'"<pos:position pos:line="90" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="90" pos:column="61">template_file<pos:position pos:line="90" pos:column="74"/></name></expr></argument>)<pos:position pos:line="90" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="76"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="91" pos:column="17">hook_arg1<pos:position pos:line="91" pos:column="26"/></name> <operator pos:line="91" pos:column="27">=<pos:position pos:line="91" pos:column="28"/></operator> <literal type="string" pos:line="91" pos:column="29">"template"<pos:position pos:line="91" pos:column="39"/></literal></expr>;<pos:position pos:line="91" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="92" pos:column="17">clean_message_contents<pos:position pos:line="92" pos:column="39"/></name> <operator pos:line="92" pos:column="40">=<pos:position pos:line="92" pos:column="41"/></operator> <literal type="number" pos:line="92" pos:column="42">0<pos:position pos:line="92" pos:column="43"/></literal></expr>;<pos:position pos:line="92" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="93" pos:column="10"/></block></then></if></elseif>

	<comment type="block" pos:line="95" pos:column="9">/*
	 * The remaining cases don't modify the template message, but
	 * just set the argument(s) to the prepare-commit-msg hook.
	 */</comment>
	<elseif pos:line="99" pos:column="9">else <if pos:line="99" pos:column="14">if <condition pos:line="99" pos:column="17">(<expr><name pos:line="99" pos:column="18">whence<pos:position pos:line="99" pos:column="24"/></name> <operator pos:line="99" pos:column="25">==<pos:position pos:line="99" pos:column="27"/></operator> <name pos:line="99" pos:column="28">FROM_MERGE<pos:position pos:line="99" pos:column="38"/></name></expr>)<pos:position pos:line="99" pos:column="39"/></condition><then pos:line="99" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="17">hook_arg1<pos:position pos:line="100" pos:column="26"/></name> <operator pos:line="100" pos:column="27">=<pos:position pos:line="100" pos:column="28"/></operator> <literal type="string" pos:line="100" pos:column="29">"merge"<pos:position pos:line="100" pos:column="36"/></literal></expr>;<pos:position pos:line="100" pos:column="37"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="101" pos:column="9">else <if pos:line="101" pos:column="14">if <condition pos:line="101" pos:column="17">(<expr><name pos:line="101" pos:column="18">whence<pos:position pos:line="101" pos:column="24"/></name> <operator pos:line="101" pos:column="25">==<pos:position pos:line="101" pos:column="27"/></operator> <name pos:line="101" pos:column="28">FROM_CHERRY_PICK<pos:position pos:line="101" pos:column="44"/></name></expr>)<pos:position pos:line="101" pos:column="45"/></condition><then pos:line="101" pos:column="45"> <block pos:line="101" pos:column="46">{
		<expr_stmt><expr><name pos:line="102" pos:column="17">hook_arg1<pos:position pos:line="102" pos:column="26"/></name> <operator pos:line="102" pos:column="27">=<pos:position pos:line="102" pos:column="28"/></operator> <literal type="string" pos:line="102" pos:column="29">"commit"<pos:position pos:line="102" pos:column="37"/></literal></expr>;<pos:position pos:line="102" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="103" pos:column="17">hook_arg2<pos:position pos:line="103" pos:column="26"/></name> <operator pos:line="103" pos:column="27">=<pos:position pos:line="103" pos:column="28"/></operator> <literal type="string" pos:line="103" pos:column="29">"CHERRY_PICK_HEAD"<pos:position pos:line="103" pos:column="47"/></literal></expr>;<pos:position pos:line="103" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="104" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><name pos:line="106" pos:column="13">squash_message<pos:position pos:line="106" pos:column="27"/></name></expr>)<pos:position pos:line="106" pos:column="28"/></condition><then pos:line="106" pos:column="28"> <block pos:line="106" pos:column="29">{
		<comment type="block" pos:line="107" pos:column="17">/*
		 * If squash_commit was used for the commit subject,
		 * then we're possibly hijacking other commit log options.
		 * Reset the hook args to tell the real story.
		 */</comment>
		<expr_stmt><expr><name pos:line="112" pos:column="17">hook_arg1<pos:position pos:line="112" pos:column="26"/></name> <operator pos:line="112" pos:column="27">=<pos:position pos:line="112" pos:column="28"/></operator> <literal type="string" pos:line="112" pos:column="29">"message"<pos:position pos:line="112" pos:column="38"/></literal></expr>;<pos:position pos:line="112" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="113" pos:column="17">hook_arg2<pos:position pos:line="113" pos:column="26"/></name> <operator pos:line="113" pos:column="27">=<pos:position pos:line="113" pos:column="28"/></operator> <literal type="string" pos:line="113" pos:column="29">""<pos:position pos:line="113" pos:column="31"/></literal></expr>;<pos:position pos:line="113" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="114" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="116" pos:column="9">s<pos:position pos:line="116" pos:column="10"/></name><operator pos:line="116" pos:column="10">-&gt;<pos:position pos:line="116" pos:column="15"/></operator><name pos:line="116" pos:column="12">fp<pos:position pos:line="116" pos:column="14"/></name></name> <operator pos:line="116" pos:column="15">=<pos:position pos:line="116" pos:column="16"/></operator> <call><name pos:line="116" pos:column="17">fopen_for_writing<pos:position pos:line="116" pos:column="34"/></name><argument_list pos:line="116" pos:column="34">(<argument><expr><call><name pos:line="116" pos:column="35">git_path<pos:position pos:line="116" pos:column="43"/></name><argument_list pos:line="116" pos:column="43">(<argument><expr><name pos:line="116" pos:column="44">commit_editmsg<pos:position pos:line="116" pos:column="58"/></name></expr></argument>)<pos:position pos:line="116" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="116" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="61"/></expr_stmt>
	<if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><name><name pos:line="117" pos:column="13">s<pos:position pos:line="117" pos:column="14"/></name><operator pos:line="117" pos:column="14">-&gt;<pos:position pos:line="117" pos:column="19"/></operator><name pos:line="117" pos:column="16">fp<pos:position pos:line="117" pos:column="18"/></name></name> <operator pos:line="117" pos:column="19">==<pos:position pos:line="117" pos:column="21"/></operator> <name pos:line="117" pos:column="22">NULL<pos:position pos:line="117" pos:column="26"/></name></expr>)<pos:position pos:line="117" pos:column="27"/></condition><then pos:line="117" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="118" pos:column="17">die_errno<pos:position pos:line="118" pos:column="26"/></name><argument_list pos:line="118" pos:column="26">(<argument><expr><call><name pos:line="118" pos:column="27">_<pos:position pos:line="118" pos:column="28"/></name><argument_list pos:line="118" pos:column="28">(<argument><expr><literal type="string" pos:line="118" pos:column="29">"could not open '%s'"<pos:position pos:line="118" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="118" pos:column="53">git_path<pos:position pos:line="118" pos:column="61"/></name><argument_list pos:line="118" pos:column="61">(<argument><expr><name pos:line="118" pos:column="62">commit_editmsg<pos:position pos:line="118" pos:column="76"/></name></expr></argument>)<pos:position pos:line="118" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="118" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="79"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="120" pos:column="9">/* Ignore status.displayCommentPrefix: we do need comments in COMMIT_EDITMSG. */</comment>
	<expr_stmt><expr><name pos:line="121" pos:column="9">old_display_comment_prefix<pos:position pos:line="121" pos:column="35"/></name> <operator pos:line="121" pos:column="36">=<pos:position pos:line="121" pos:column="37"/></operator> <name><name pos:line="121" pos:column="38">s<pos:position pos:line="121" pos:column="39"/></name><operator pos:line="121" pos:column="39">-&gt;<pos:position pos:line="121" pos:column="44"/></operator><name pos:line="121" pos:column="41">display_comment_prefix<pos:position pos:line="121" pos:column="63"/></name></name></expr>;<pos:position pos:line="121" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="122" pos:column="9">s<pos:position pos:line="122" pos:column="10"/></name><operator pos:line="122" pos:column="10">-&gt;<pos:position pos:line="122" pos:column="15"/></operator><name pos:line="122" pos:column="12">display_comment_prefix<pos:position pos:line="122" pos:column="34"/></name></name> <operator pos:line="122" pos:column="35">=<pos:position pos:line="122" pos:column="36"/></operator> <literal type="number" pos:line="122" pos:column="37">1<pos:position pos:line="122" pos:column="38"/></literal></expr>;<pos:position pos:line="122" pos:column="39"/></expr_stmt>

	<comment type="block" pos:line="124" pos:column="9">/*
	 * Most hints are counter-productive when the commit has
	 * already started.
	 */</comment>
	<expr_stmt><expr><name><name pos:line="128" pos:column="9">s<pos:position pos:line="128" pos:column="10"/></name><operator pos:line="128" pos:column="10">-&gt;<pos:position pos:line="128" pos:column="15"/></operator><name pos:line="128" pos:column="12">hints<pos:position pos:line="128" pos:column="17"/></name></name> <operator pos:line="128" pos:column="18">=<pos:position pos:line="128" pos:column="19"/></operator> <literal type="number" pos:line="128" pos:column="20">0<pos:position pos:line="128" pos:column="21"/></literal></expr>;<pos:position pos:line="128" pos:column="22"/></expr_stmt>

	<if pos:line="130" pos:column="9">if <condition pos:line="130" pos:column="12">(<expr><name pos:line="130" pos:column="13">clean_message_contents<pos:position pos:line="130" pos:column="35"/></name></expr>)<pos:position pos:line="130" pos:column="36"/></condition><then pos:line="130" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="131" pos:column="17">strbuf_stripspace<pos:position pos:line="131" pos:column="34"/></name><argument_list pos:line="131" pos:column="34">(<argument><expr><operator pos:line="131" pos:column="35">&amp;<pos:position pos:line="131" pos:column="40"/></operator><name pos:line="131" pos:column="36">sb<pos:position pos:line="131" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="131" pos:column="40">0<pos:position pos:line="131" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="43"/></expr_stmt></block></then></if>

	<if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><name pos:line="133" pos:column="13">signoff<pos:position pos:line="133" pos:column="20"/></name></expr>)<pos:position pos:line="133" pos:column="21"/></condition><then pos:line="133" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="134" pos:column="17">append_signoff<pos:position pos:line="134" pos:column="31"/></name><argument_list pos:line="134" pos:column="31">(<argument><expr><operator pos:line="134" pos:column="32">&amp;<pos:position pos:line="134" pos:column="37"/></operator><name pos:line="134" pos:column="33">sb<pos:position pos:line="134" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="134" pos:column="37">ignore_non_trailer<pos:position pos:line="134" pos:column="55"/></name><argument_list pos:line="134" pos:column="55">(<argument><expr><operator pos:line="134" pos:column="56">&amp;<pos:position pos:line="134" pos:column="61"/></operator><name pos:line="134" pos:column="57">sb<pos:position pos:line="134" pos:column="59"/></name></expr></argument>)<pos:position pos:line="134" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="62">0<pos:position pos:line="134" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="65"/></expr_stmt></block></then></if>

	<if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><call><name pos:line="136" pos:column="13">fwrite<pos:position pos:line="136" pos:column="19"/></name><argument_list pos:line="136" pos:column="19">(<argument><expr><name><name pos:line="136" pos:column="20">sb<pos:position pos:line="136" pos:column="22"/></name><operator pos:line="136" pos:column="22">.<pos:position pos:line="136" pos:column="23"/></operator><name pos:line="136" pos:column="23">buf<pos:position pos:line="136" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="136" pos:column="28">1<pos:position pos:line="136" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="31">sb<pos:position pos:line="136" pos:column="33"/></name><operator pos:line="136" pos:column="33">.<pos:position pos:line="136" pos:column="34"/></operator><name pos:line="136" pos:column="34">len<pos:position pos:line="136" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="39">s<pos:position pos:line="136" pos:column="40"/></name><operator pos:line="136" pos:column="40">-&gt;<pos:position pos:line="136" pos:column="45"/></operator><name pos:line="136" pos:column="42">fp<pos:position pos:line="136" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="45"/></argument_list></call> <operator pos:line="136" pos:column="46">&lt;<pos:position pos:line="136" pos:column="50"/></operator> <name><name pos:line="136" pos:column="48">sb<pos:position pos:line="136" pos:column="50"/></name><operator pos:line="136" pos:column="50">.<pos:position pos:line="136" pos:column="51"/></operator><name pos:line="136" pos:column="51">len<pos:position pos:line="136" pos:column="54"/></name></name></expr>)<pos:position pos:line="136" pos:column="55"/></condition><then pos:line="136" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="137" pos:column="17">die_errno<pos:position pos:line="137" pos:column="26"/></name><argument_list pos:line="137" pos:column="26">(<argument><expr><call><name pos:line="137" pos:column="27">_<pos:position pos:line="137" pos:column="28"/></name><argument_list pos:line="137" pos:column="28">(<argument><expr><literal type="string" pos:line="137" pos:column="29">"could not write commit template"<pos:position pos:line="137" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="137" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="65"/></expr_stmt></block></then></if>

	<if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><name pos:line="139" pos:column="13">auto_comment_line_char<pos:position pos:line="139" pos:column="35"/></name></expr>)<pos:position pos:line="139" pos:column="36"/></condition><then pos:line="139" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="140" pos:column="17">adjust_comment_line_char<pos:position pos:line="140" pos:column="41"/></name><argument_list pos:line="140" pos:column="41">(<argument><expr><operator pos:line="140" pos:column="42">&amp;<pos:position pos:line="140" pos:column="47"/></operator><name pos:line="140" pos:column="43">sb<pos:position pos:line="140" pos:column="45"/></name></expr></argument>)<pos:position pos:line="140" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="47"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="141" pos:column="9">strbuf_release<pos:position pos:line="141" pos:column="23"/></name><argument_list pos:line="141" pos:column="23">(<argument><expr><operator pos:line="141" pos:column="24">&amp;<pos:position pos:line="141" pos:column="29"/></operator><name pos:line="141" pos:column="25">sb<pos:position pos:line="141" pos:column="27"/></name></expr></argument>)<pos:position pos:line="141" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="29"/></expr_stmt>

	<comment type="block" pos:line="143" pos:column="9">/* This checks if committer ident is explicitly given */</comment>
	<expr_stmt><expr><call><name pos:line="144" pos:column="9">strbuf_addstr<pos:position pos:line="144" pos:column="22"/></name><argument_list pos:line="144" pos:column="22">(<argument><expr><operator pos:line="144" pos:column="23">&amp;<pos:position pos:line="144" pos:column="28"/></operator><name pos:line="144" pos:column="24">committer_ident<pos:position pos:line="144" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="144" pos:column="41">git_committer_info<pos:position pos:line="144" pos:column="59"/></name><argument_list pos:line="144" pos:column="59">(<argument><expr><name pos:line="144" pos:column="60">IDENT_STRICT<pos:position pos:line="144" pos:column="72"/></name></expr></argument>)<pos:position pos:line="144" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="144" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="75"/></expr_stmt>
	<if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><name pos:line="145" pos:column="13">use_editor<pos:position pos:line="145" pos:column="23"/></name> <operator pos:line="145" pos:column="24">&amp;&amp;<pos:position pos:line="145" pos:column="34"/></operator> <name pos:line="145" pos:column="27">include_status<pos:position pos:line="145" pos:column="41"/></name></expr>)<pos:position pos:line="145" pos:column="42"/></condition><then pos:line="145" pos:column="42"> <block pos:line="145" pos:column="43">{
		<decl_stmt><decl><type><name pos:line="146" pos:column="17">int<pos:position pos:line="146" pos:column="20"/></name></type> <name pos:line="146" pos:column="21">ident_shown<pos:position pos:line="146" pos:column="32"/></name> <init pos:line="146" pos:column="33">= <expr><literal type="number" pos:line="146" pos:column="35">0<pos:position pos:line="146" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="146" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="147" pos:column="17">int<pos:position pos:line="147" pos:column="20"/></name></type> <name pos:line="147" pos:column="21">saved_color_setting<pos:position pos:line="147" pos:column="40"/></name></decl>;<pos:position pos:line="147" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="148" pos:column="17">struct<pos:position pos:line="148" pos:column="23"/></name> <name pos:line="148" pos:column="24">ident_split<pos:position pos:line="148" pos:column="35"/></name></name></type> <name pos:line="148" pos:column="36">ci<pos:position pos:line="148" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="148" pos:column="40">ai<pos:position pos:line="148" pos:column="42"/></name></decl>;<pos:position pos:line="148" pos:column="43"/></decl_stmt>

		<if pos:line="150" pos:column="17">if <condition pos:line="150" pos:column="20">(<expr><name pos:line="150" pos:column="21">whence<pos:position pos:line="150" pos:column="27"/></name> <operator pos:line="150" pos:column="28">!=<pos:position pos:line="150" pos:column="30"/></operator> <name pos:line="150" pos:column="31">FROM_COMMIT<pos:position pos:line="150" pos:column="42"/></name></expr>)<pos:position pos:line="150" pos:column="43"/></condition><then pos:line="150" pos:column="43"> <block pos:line="150" pos:column="44">{
			<if pos:line="151" pos:column="25">if <condition pos:line="151" pos:column="28">(<expr><name pos:line="151" pos:column="29">cleanup_mode<pos:position pos:line="151" pos:column="41"/></name> <operator pos:line="151" pos:column="42">==<pos:position pos:line="151" pos:column="44"/></operator> <name pos:line="151" pos:column="45">CLEANUP_SCISSORS<pos:position pos:line="151" pos:column="61"/></name></expr>)<pos:position pos:line="151" pos:column="62"/></condition><then pos:line="151" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="152" pos:column="33">wt_status_add_cut_line<pos:position pos:line="152" pos:column="55"/></name><argument_list pos:line="152" pos:column="55">(<argument><expr><name><name pos:line="152" pos:column="56">s<pos:position pos:line="152" pos:column="57"/></name><operator pos:line="152" pos:column="57">-&gt;<pos:position pos:line="152" pos:column="62"/></operator><name pos:line="152" pos:column="59">fp<pos:position pos:line="152" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="152" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="63"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="153" pos:column="25">status_printf_ln<pos:position pos:line="153" pos:column="41"/></name><argument_list pos:line="153" pos:column="41">(<argument><expr><name pos:line="153" pos:column="42">s<pos:position pos:line="153" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="45">GIT_COLOR_NORMAL<pos:position pos:line="153" pos:column="61"/></name></expr></argument>,
			    <argument><expr><ternary><condition><expr><name pos:line="154" pos:column="29">whence<pos:position pos:line="154" pos:column="35"/></name> <operator pos:line="154" pos:column="36">==<pos:position pos:line="154" pos:column="38"/></operator> <name pos:line="154" pos:column="39">FROM_MERGE<pos:position pos:line="154" pos:column="49"/></name></expr>
				?<pos:position pos:line="155" pos:column="34"/></condition><then pos:line="155" pos:column="34"> <expr><call><name pos:line="155" pos:column="35">_<pos:position pos:line="155" pos:column="36"/></name><argument_list pos:line="155" pos:column="36">(<argument><expr><literal type="string" pos:line="155" pos:column="37">"\n"<pos:position pos:line="155" pos:column="41"/></literal>
					<literal type="string" pos:line="156" pos:column="41">"It looks like you may be committing a merge.\n"<pos:position pos:line="156" pos:column="89"/></literal>
					<literal type="string" pos:line="157" pos:column="41">"If this is not correct, please remove the file\n"<pos:position pos:line="157" pos:column="91"/></literal>
					<literal type="string" pos:line="158" pos:column="41">"	%s\n"<pos:position pos:line="158" pos:column="48"/></literal>
					<literal type="string" pos:line="159" pos:column="41">"and try again.\n"<pos:position pos:line="159" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="60"/></argument_list></call></expr>
				<pos:position pos:line="160" pos:column="5"/></then><else pos:line="160" pos:column="33">: <expr><call><name pos:line="160" pos:column="35">_<pos:position pos:line="160" pos:column="36"/></name><argument_list pos:line="160" pos:column="36">(<argument><expr><literal type="string" pos:line="160" pos:column="37">"\n"<pos:position pos:line="160" pos:column="41"/></literal>
					<literal type="string" pos:line="161" pos:column="41">"It looks like you may be committing a cherry-pick.\n"<pos:position pos:line="161" pos:column="95"/></literal>
					<literal type="string" pos:line="162" pos:column="41">"If this is not correct, please remove the file\n"<pos:position pos:line="162" pos:column="91"/></literal>
					<literal type="string" pos:line="163" pos:column="41">"	%s\n"<pos:position pos:line="163" pos:column="48"/></literal>
					<literal type="string" pos:line="164" pos:column="41">"and try again.\n"<pos:position pos:line="164" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="60"/></argument_list></call></expr></else></ternary></expr></argument>,
				<argument><expr><call><name pos:line="165" pos:column="33">git_path<pos:position pos:line="165" pos:column="41"/></name><argument_list pos:line="165" pos:column="41">(<argument><expr><ternary><condition><expr><name pos:line="165" pos:column="42">whence<pos:position pos:line="165" pos:column="48"/></name> <operator pos:line="165" pos:column="49">==<pos:position pos:line="165" pos:column="51"/></operator> <name pos:line="165" pos:column="52">FROM_MERGE<pos:position pos:line="165" pos:column="62"/></name></expr>
					 ?<pos:position pos:line="166" pos:column="43"/></condition><then pos:line="166" pos:column="43"> <expr><literal type="string" pos:line="166" pos:column="44">"MERGE_HEAD"<pos:position pos:line="166" pos:column="56"/></literal></expr>
					 <pos:position pos:line="167" pos:column="7"/></then><else pos:line="167" pos:column="42">: <expr><literal type="string" pos:line="167" pos:column="44">"CHERRY_PICK_HEAD"<pos:position pos:line="167" pos:column="62"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="167" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="167" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="168" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="170" pos:column="17">fprintf<pos:position pos:line="170" pos:column="24"/></name><argument_list pos:line="170" pos:column="24">(<argument><expr><name><name pos:line="170" pos:column="25">s<pos:position pos:line="170" pos:column="26"/></name><operator pos:line="170" pos:column="26">-&gt;<pos:position pos:line="170" pos:column="31"/></operator><name pos:line="170" pos:column="28">fp<pos:position pos:line="170" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="32">"\n"<pos:position pos:line="170" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="38"/></expr_stmt>
		<if pos:line="171" pos:column="17">if <condition pos:line="171" pos:column="20">(<expr><name pos:line="171" pos:column="21">cleanup_mode<pos:position pos:line="171" pos:column="33"/></name> <operator pos:line="171" pos:column="34">==<pos:position pos:line="171" pos:column="36"/></operator> <name pos:line="171" pos:column="37">CLEANUP_ALL<pos:position pos:line="171" pos:column="48"/></name></expr>)<pos:position pos:line="171" pos:column="49"/></condition><then pos:line="171" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="172" pos:column="25">status_printf<pos:position pos:line="172" pos:column="38"/></name><argument_list pos:line="172" pos:column="38">(<argument><expr><name pos:line="172" pos:column="39">s<pos:position pos:line="172" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="42">GIT_COLOR_NORMAL<pos:position pos:line="172" pos:column="58"/></name></expr></argument>,
				<argument><expr><call><name pos:line="173" pos:column="33">_<pos:position pos:line="173" pos:column="34"/></name><argument_list pos:line="173" pos:column="34">(<argument><expr><literal type="string" pos:line="173" pos:column="35">"Please enter the commit message for your changes."<pos:position pos:line="173" pos:column="86"/></literal>
				  <literal type="string" pos:line="174" pos:column="35">" Lines starting\nwith '%c' will be ignored, and an empty"<pos:position pos:line="174" pos:column="93"/></literal>
				  <literal type="string" pos:line="175" pos:column="35">" message aborts the commit.\n"<pos:position pos:line="175" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="175" pos:column="69">comment_line_char<pos:position pos:line="175" pos:column="86"/></name></expr></argument>)<pos:position pos:line="175" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="88"/></expr_stmt></block></then>
		<elseif pos:line="176" pos:column="17">else <if pos:line="176" pos:column="22">if <condition pos:line="176" pos:column="25">(<expr><name pos:line="176" pos:column="26">cleanup_mode<pos:position pos:line="176" pos:column="38"/></name> <operator pos:line="176" pos:column="39">==<pos:position pos:line="176" pos:column="41"/></operator> <name pos:line="176" pos:column="42">CLEANUP_SCISSORS<pos:position pos:line="176" pos:column="58"/></name> <operator pos:line="176" pos:column="59">&amp;&amp;<pos:position pos:line="176" pos:column="69"/></operator> <name pos:line="176" pos:column="62">whence<pos:position pos:line="176" pos:column="68"/></name> <operator pos:line="176" pos:column="69">==<pos:position pos:line="176" pos:column="71"/></operator> <name pos:line="176" pos:column="72">FROM_COMMIT<pos:position pos:line="176" pos:column="83"/></name></expr>)<pos:position pos:line="176" pos:column="84"/></condition><then pos:line="176" pos:column="84">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="177" pos:column="25">wt_status_add_cut_line<pos:position pos:line="177" pos:column="47"/></name><argument_list pos:line="177" pos:column="47">(<argument><expr><name><name pos:line="177" pos:column="48">s<pos:position pos:line="177" pos:column="49"/></name><operator pos:line="177" pos:column="49">-&gt;<pos:position pos:line="177" pos:column="54"/></operator><name pos:line="177" pos:column="51">fp<pos:position pos:line="177" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="177" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="55"/></expr_stmt></block></then></if></elseif>
		<else pos:line="178" pos:column="17">else <comment type="block" pos:line="178" pos:column="22">/* CLEANUP_SPACE, that is. */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="179" pos:column="25">status_printf<pos:position pos:line="179" pos:column="38"/></name><argument_list pos:line="179" pos:column="38">(<argument><expr><name pos:line="179" pos:column="39">s<pos:position pos:line="179" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="42">GIT_COLOR_NORMAL<pos:position pos:line="179" pos:column="58"/></name></expr></argument>,
				<argument><expr><call><name pos:line="180" pos:column="33">_<pos:position pos:line="180" pos:column="34"/></name><argument_list pos:line="180" pos:column="34">(<argument><expr><literal type="string" pos:line="180" pos:column="35">"Please enter the commit message for your changes."<pos:position pos:line="180" pos:column="86"/></literal>
				  <literal type="string" pos:line="181" pos:column="35">" Lines starting\n"<pos:position pos:line="181" pos:column="54"/></literal>
				  <literal type="string" pos:line="182" pos:column="35">"with '%c' will be kept; you may remove them"<pos:position pos:line="182" pos:column="80"/></literal>
				  <literal type="string" pos:line="183" pos:column="35">" yourself if you want to.\n"<pos:position pos:line="183" pos:column="64"/></literal>
				  <literal type="string" pos:line="184" pos:column="35">"An empty message aborts the commit.\n"<pos:position pos:line="184" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="184" pos:column="77">comment_line_char<pos:position pos:line="184" pos:column="94"/></name></expr></argument>)<pos:position pos:line="184" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="96"/></expr_stmt></block></else></if>
		<if pos:line="185" pos:column="17">if <condition pos:line="185" pos:column="20">(<expr><name pos:line="185" pos:column="21">only_include_assumed<pos:position pos:line="185" pos:column="41"/></name></expr>)<pos:position pos:line="185" pos:column="42"/></condition><then pos:line="185" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="186" pos:column="25">status_printf_ln<pos:position pos:line="186" pos:column="41"/></name><argument_list pos:line="186" pos:column="41">(<argument><expr><name pos:line="186" pos:column="42">s<pos:position pos:line="186" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="45">GIT_COLOR_NORMAL<pos:position pos:line="186" pos:column="61"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="187" pos:column="41">"%s"<pos:position pos:line="187" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="187" pos:column="47">only_include_assumed<pos:position pos:line="187" pos:column="67"/></name></expr></argument>)<pos:position pos:line="187" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="69"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="189" pos:column="17">/*
		 * These should never fail because they come from our own
		 * fmt_ident. They may fail the sane_ident test, but we know
		 * that the name and mail pointers will at least be valid,
		 * which is enough for our tests and printing here.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="195" pos:column="17">assert_split_ident<pos:position pos:line="195" pos:column="35"/></name><argument_list pos:line="195" pos:column="35">(<argument><expr><operator pos:line="195" pos:column="36">&amp;<pos:position pos:line="195" pos:column="41"/></operator><name pos:line="195" pos:column="37">ai<pos:position pos:line="195" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="41">author_ident<pos:position pos:line="195" pos:column="53"/></name></expr></argument>)<pos:position pos:line="195" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="196" pos:column="17">assert_split_ident<pos:position pos:line="196" pos:column="35"/></name><argument_list pos:line="196" pos:column="35">(<argument><expr><operator pos:line="196" pos:column="36">&amp;<pos:position pos:line="196" pos:column="41"/></operator><name pos:line="196" pos:column="37">ci<pos:position pos:line="196" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="196" pos:column="41">&amp;<pos:position pos:line="196" pos:column="46"/></operator><name pos:line="196" pos:column="42">committer_ident<pos:position pos:line="196" pos:column="57"/></name></expr></argument>)<pos:position pos:line="196" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="59"/></expr_stmt>

		<if pos:line="198" pos:column="17">if <condition pos:line="198" pos:column="20">(<expr><call><name pos:line="198" pos:column="21">ident_cmp<pos:position pos:line="198" pos:column="30"/></name><argument_list pos:line="198" pos:column="30">(<argument><expr><operator pos:line="198" pos:column="31">&amp;<pos:position pos:line="198" pos:column="36"/></operator><name pos:line="198" pos:column="32">ai<pos:position pos:line="198" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="198" pos:column="36">&amp;<pos:position pos:line="198" pos:column="41"/></operator><name pos:line="198" pos:column="37">ci<pos:position pos:line="198" pos:column="39"/></name></expr></argument>)<pos:position pos:line="198" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="198" pos:column="41"/></condition><then pos:line="198" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="199" pos:column="25">status_printf_ln<pos:position pos:line="199" pos:column="41"/></name><argument_list pos:line="199" pos:column="41">(<argument><expr><name pos:line="199" pos:column="42">s<pos:position pos:line="199" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="45">GIT_COLOR_NORMAL<pos:position pos:line="199" pos:column="61"/></name></expr></argument>,
				<argument><expr><call><name pos:line="200" pos:column="33">_<pos:position pos:line="200" pos:column="34"/></name><argument_list pos:line="200" pos:column="34">(<argument><expr><literal type="string" pos:line="200" pos:column="35">"%s"<pos:position pos:line="200" pos:column="39"/></literal>
				<literal type="string" pos:line="201" pos:column="33">"Author:    %.*s &lt;%.*s&gt;"<pos:position pos:line="201" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="58"/></argument_list></call></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="202" pos:column="33">ident_shown<pos:position pos:line="202" pos:column="44"/></name><operator pos:line="202" pos:column="44">++<pos:position pos:line="202" pos:column="46"/></operator></expr> ?<pos:position pos:line="202" pos:column="48"/></condition><then pos:line="202" pos:column="48"> <expr><literal type="string" pos:line="202" pos:column="49">""<pos:position pos:line="202" pos:column="51"/></literal></expr> <pos:position pos:line="202" pos:column="52"/></then><else pos:line="202" pos:column="52">: <expr><literal type="string" pos:line="202" pos:column="54">"\n"<pos:position pos:line="202" pos:column="58"/></literal></expr></else></ternary></expr></argument>,
				<argument><expr><call pos:line="203" pos:column="33">(<name pos:line="203" pos:column="34">int<pos:position pos:line="203" pos:column="37"/></name>)<argument_list pos:line="203" pos:column="38">(<argument><expr><name><name pos:line="203" pos:column="39">ai<pos:position pos:line="203" pos:column="41"/></name><operator pos:line="203" pos:column="41">.<pos:position pos:line="203" pos:column="42"/></operator><name pos:line="203" pos:column="42">name_end<pos:position pos:line="203" pos:column="50"/></name></name> <operator pos:line="203" pos:column="51">-<pos:position pos:line="203" pos:column="52"/></operator> <name><name pos:line="203" pos:column="53">ai<pos:position pos:line="203" pos:column="55"/></name><operator pos:line="203" pos:column="55">.<pos:position pos:line="203" pos:column="56"/></operator><name pos:line="203" pos:column="56">name_begin<pos:position pos:line="203" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="203" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="203" pos:column="69">ai<pos:position pos:line="203" pos:column="71"/></name><operator pos:line="203" pos:column="71">.<pos:position pos:line="203" pos:column="72"/></operator><name pos:line="203" pos:column="72">name_begin<pos:position pos:line="203" pos:column="82"/></name></name></expr></argument>,
				<argument><expr><call pos:line="204" pos:column="33">(<name pos:line="204" pos:column="34">int<pos:position pos:line="204" pos:column="37"/></name>)<argument_list pos:line="204" pos:column="38">(<argument><expr><name><name pos:line="204" pos:column="39">ai<pos:position pos:line="204" pos:column="41"/></name><operator pos:line="204" pos:column="41">.<pos:position pos:line="204" pos:column="42"/></operator><name pos:line="204" pos:column="42">mail_end<pos:position pos:line="204" pos:column="50"/></name></name> <operator pos:line="204" pos:column="51">-<pos:position pos:line="204" pos:column="52"/></operator> <name><name pos:line="204" pos:column="53">ai<pos:position pos:line="204" pos:column="55"/></name><operator pos:line="204" pos:column="55">.<pos:position pos:line="204" pos:column="56"/></operator><name pos:line="204" pos:column="56">mail_begin<pos:position pos:line="204" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="204" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="204" pos:column="69">ai<pos:position pos:line="204" pos:column="71"/></name><operator pos:line="204" pos:column="71">.<pos:position pos:line="204" pos:column="72"/></operator><name pos:line="204" pos:column="72">mail_begin<pos:position pos:line="204" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="204" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="84"/></expr_stmt></block></then></if>

		<if pos:line="206" pos:column="17">if <condition pos:line="206" pos:column="20">(<expr><call><name pos:line="206" pos:column="21">author_date_is_interesting<pos:position pos:line="206" pos:column="47"/></name><argument_list pos:line="206" pos:column="47">()<pos:position pos:line="206" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="206" pos:column="50"/></condition><then pos:line="206" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="207" pos:column="25">status_printf_ln<pos:position pos:line="207" pos:column="41"/></name><argument_list pos:line="207" pos:column="41">(<argument><expr><name pos:line="207" pos:column="42">s<pos:position pos:line="207" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="45">GIT_COLOR_NORMAL<pos:position pos:line="207" pos:column="61"/></name></expr></argument>,
				<argument><expr><call><name pos:line="208" pos:column="33">_<pos:position pos:line="208" pos:column="34"/></name><argument_list pos:line="208" pos:column="34">(<argument><expr><literal type="string" pos:line="208" pos:column="35">"%s"<pos:position pos:line="208" pos:column="39"/></literal>
				<literal type="string" pos:line="209" pos:column="33">"Date:      %s"<pos:position pos:line="209" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="209" pos:column="49"/></argument_list></call></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="210" pos:column="33">ident_shown<pos:position pos:line="210" pos:column="44"/></name><operator pos:line="210" pos:column="44">++<pos:position pos:line="210" pos:column="46"/></operator></expr> ?<pos:position pos:line="210" pos:column="48"/></condition><then pos:line="210" pos:column="48"> <expr><literal type="string" pos:line="210" pos:column="49">""<pos:position pos:line="210" pos:column="51"/></literal></expr> <pos:position pos:line="210" pos:column="52"/></then><else pos:line="210" pos:column="52">: <expr><literal type="string" pos:line="210" pos:column="54">"\n"<pos:position pos:line="210" pos:column="58"/></literal></expr></else></ternary></expr></argument>,
				<argument><expr><call><name pos:line="211" pos:column="33">show_ident_date<pos:position pos:line="211" pos:column="48"/></name><argument_list pos:line="211" pos:column="48">(<argument><expr><operator pos:line="211" pos:column="49">&amp;<pos:position pos:line="211" pos:column="54"/></operator><name pos:line="211" pos:column="50">ai<pos:position pos:line="211" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="211" pos:column="54">DATE_MODE<pos:position pos:line="211" pos:column="63"/></name><argument_list pos:line="211" pos:column="63">(<argument><expr><name pos:line="211" pos:column="64">NORMAL<pos:position pos:line="211" pos:column="70"/></name></expr></argument>)<pos:position pos:line="211" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="211" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="211" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="74"/></expr_stmt></block></then></if>

		<if pos:line="213" pos:column="17">if <condition pos:line="213" pos:column="20">(<expr><operator pos:line="213" pos:column="21">!<pos:position pos:line="213" pos:column="22"/></operator><call><name pos:line="213" pos:column="22">committer_ident_sufficiently_given<pos:position pos:line="213" pos:column="56"/></name><argument_list pos:line="213" pos:column="56">()<pos:position pos:line="213" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="213" pos:column="59"/></condition><then pos:line="213" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="214" pos:column="25">status_printf_ln<pos:position pos:line="214" pos:column="41"/></name><argument_list pos:line="214" pos:column="41">(<argument><expr><name pos:line="214" pos:column="42">s<pos:position pos:line="214" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="45">GIT_COLOR_NORMAL<pos:position pos:line="214" pos:column="61"/></name></expr></argument>,
				<argument><expr><call><name pos:line="215" pos:column="33">_<pos:position pos:line="215" pos:column="34"/></name><argument_list pos:line="215" pos:column="34">(<argument><expr><literal type="string" pos:line="215" pos:column="35">"%s"<pos:position pos:line="215" pos:column="39"/></literal>
				<literal type="string" pos:line="216" pos:column="33">"Committer: %.*s &lt;%.*s&gt;"<pos:position pos:line="216" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="58"/></argument_list></call></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="217" pos:column="33">ident_shown<pos:position pos:line="217" pos:column="44"/></name><operator pos:line="217" pos:column="44">++<pos:position pos:line="217" pos:column="46"/></operator></expr> ?<pos:position pos:line="217" pos:column="48"/></condition><then pos:line="217" pos:column="48"> <expr><literal type="string" pos:line="217" pos:column="49">""<pos:position pos:line="217" pos:column="51"/></literal></expr> <pos:position pos:line="217" pos:column="52"/></then><else pos:line="217" pos:column="52">: <expr><literal type="string" pos:line="217" pos:column="54">"\n"<pos:position pos:line="217" pos:column="58"/></literal></expr></else></ternary></expr></argument>,
				<argument><expr><call pos:line="218" pos:column="33">(<name pos:line="218" pos:column="34">int<pos:position pos:line="218" pos:column="37"/></name>)<argument_list pos:line="218" pos:column="38">(<argument><expr><name><name pos:line="218" pos:column="39">ci<pos:position pos:line="218" pos:column="41"/></name><operator pos:line="218" pos:column="41">.<pos:position pos:line="218" pos:column="42"/></operator><name pos:line="218" pos:column="42">name_end<pos:position pos:line="218" pos:column="50"/></name></name> <operator pos:line="218" pos:column="51">-<pos:position pos:line="218" pos:column="52"/></operator> <name><name pos:line="218" pos:column="53">ci<pos:position pos:line="218" pos:column="55"/></name><operator pos:line="218" pos:column="55">.<pos:position pos:line="218" pos:column="56"/></operator><name pos:line="218" pos:column="56">name_begin<pos:position pos:line="218" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="218" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="218" pos:column="69">ci<pos:position pos:line="218" pos:column="71"/></name><operator pos:line="218" pos:column="71">.<pos:position pos:line="218" pos:column="72"/></operator><name pos:line="218" pos:column="72">name_begin<pos:position pos:line="218" pos:column="82"/></name></name></expr></argument>,
				<argument><expr><call pos:line="219" pos:column="33">(<name pos:line="219" pos:column="34">int<pos:position pos:line="219" pos:column="37"/></name>)<argument_list pos:line="219" pos:column="38">(<argument><expr><name><name pos:line="219" pos:column="39">ci<pos:position pos:line="219" pos:column="41"/></name><operator pos:line="219" pos:column="41">.<pos:position pos:line="219" pos:column="42"/></operator><name pos:line="219" pos:column="42">mail_end<pos:position pos:line="219" pos:column="50"/></name></name> <operator pos:line="219" pos:column="51">-<pos:position pos:line="219" pos:column="52"/></operator> <name><name pos:line="219" pos:column="53">ci<pos:position pos:line="219" pos:column="55"/></name><operator pos:line="219" pos:column="55">.<pos:position pos:line="219" pos:column="56"/></operator><name pos:line="219" pos:column="56">mail_begin<pos:position pos:line="219" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="219" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="219" pos:column="69">ci<pos:position pos:line="219" pos:column="71"/></name><operator pos:line="219" pos:column="71">.<pos:position pos:line="219" pos:column="72"/></operator><name pos:line="219" pos:column="72">mail_begin<pos:position pos:line="219" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="219" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="84"/></expr_stmt></block></then></if>

		<if pos:line="221" pos:column="17">if <condition pos:line="221" pos:column="20">(<expr><name pos:line="221" pos:column="21">ident_shown<pos:position pos:line="221" pos:column="32"/></name></expr>)<pos:position pos:line="221" pos:column="33"/></condition><then pos:line="221" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="222" pos:column="25">status_printf_ln<pos:position pos:line="222" pos:column="41"/></name><argument_list pos:line="222" pos:column="41">(<argument><expr><name pos:line="222" pos:column="42">s<pos:position pos:line="222" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="222" pos:column="45">GIT_COLOR_NORMAL<pos:position pos:line="222" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="63">"%s"<pos:position pos:line="222" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="69">""<pos:position pos:line="222" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="73"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="224" pos:column="17">saved_color_setting<pos:position pos:line="224" pos:column="36"/></name> <operator pos:line="224" pos:column="37">=<pos:position pos:line="224" pos:column="38"/></operator> <name><name pos:line="224" pos:column="39">s<pos:position pos:line="224" pos:column="40"/></name><operator pos:line="224" pos:column="40">-&gt;<pos:position pos:line="224" pos:column="45"/></operator><name pos:line="224" pos:column="42">use_color<pos:position pos:line="224" pos:column="51"/></name></name></expr>;<pos:position pos:line="224" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="225" pos:column="17">s<pos:position pos:line="225" pos:column="18"/></name><operator pos:line="225" pos:column="18">-&gt;<pos:position pos:line="225" pos:column="23"/></operator><name pos:line="225" pos:column="20">use_color<pos:position pos:line="225" pos:column="29"/></name></name> <operator pos:line="225" pos:column="30">=<pos:position pos:line="225" pos:column="31"/></operator> <literal type="number" pos:line="225" pos:column="32">0<pos:position pos:line="225" pos:column="33"/></literal></expr>;<pos:position pos:line="225" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="226" pos:column="17">commitable<pos:position pos:line="226" pos:column="27"/></name> <operator pos:line="226" pos:column="28">=<pos:position pos:line="226" pos:column="29"/></operator> <call><name pos:line="226" pos:column="30">run_status<pos:position pos:line="226" pos:column="40"/></name><argument_list pos:line="226" pos:column="40">(<argument><expr><name><name pos:line="226" pos:column="41">s<pos:position pos:line="226" pos:column="42"/></name><operator pos:line="226" pos:column="42">-&gt;<pos:position pos:line="226" pos:column="47"/></operator><name pos:line="226" pos:column="44">fp<pos:position pos:line="226" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="48">index_file<pos:position pos:line="226" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="60">prefix<pos:position pos:line="226" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="226" pos:column="68">1<pos:position pos:line="226" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="226" pos:column="71">s<pos:position pos:line="226" pos:column="72"/></name></expr></argument>)<pos:position pos:line="226" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="227" pos:column="17">s<pos:position pos:line="227" pos:column="18"/></name><operator pos:line="227" pos:column="18">-&gt;<pos:position pos:line="227" pos:column="23"/></operator><name pos:line="227" pos:column="20">use_color<pos:position pos:line="227" pos:column="29"/></name></name> <operator pos:line="227" pos:column="30">=<pos:position pos:line="227" pos:column="31"/></operator> <name pos:line="227" pos:column="32">saved_color_setting<pos:position pos:line="227" pos:column="51"/></name></expr>;<pos:position pos:line="227" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="228" pos:column="10"/></block></then> <else pos:line="228" pos:column="11">else <block pos:line="228" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="229" pos:column="17">unsigned<pos:position pos:line="229" pos:column="25"/></name> <name pos:line="229" pos:column="26">char<pos:position pos:line="229" pos:column="30"/></name></type> <name><name pos:line="229" pos:column="31">sha1<pos:position pos:line="229" pos:column="35"/></name><index pos:line="229" pos:column="35">[<expr><literal type="number" pos:line="229" pos:column="36">20<pos:position pos:line="229" pos:column="38"/></literal></expr>]<pos:position pos:line="229" pos:column="39"/></index></name></decl>;<pos:position pos:line="229" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="230" pos:column="17">const<pos:position pos:line="230" pos:column="22"/></specifier> <name pos:line="230" pos:column="23">char<pos:position pos:line="230" pos:column="27"/></name> <modifier pos:line="230" pos:column="28">*<pos:position pos:line="230" pos:column="29"/></modifier></type><name pos:line="230" pos:column="29">parent<pos:position pos:line="230" pos:column="35"/></name> <init pos:line="230" pos:column="36">= <expr><literal type="string" pos:line="230" pos:column="38">"HEAD"<pos:position pos:line="230" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="230" pos:column="45"/></decl_stmt>

		<if pos:line="232" pos:column="17">if <condition pos:line="232" pos:column="20">(<expr><operator pos:line="232" pos:column="21">!<pos:position pos:line="232" pos:column="22"/></operator><name pos:line="232" pos:column="22">active_nr<pos:position pos:line="232" pos:column="31"/></name> <operator pos:line="232" pos:column="32">&amp;&amp;<pos:position pos:line="232" pos:column="42"/></operator> <call><name pos:line="232" pos:column="35">read_cache<pos:position pos:line="232" pos:column="45"/></name><argument_list pos:line="232" pos:column="45">()<pos:position pos:line="232" pos:column="47"/></argument_list></call> <operator pos:line="232" pos:column="48">&lt;<pos:position pos:line="232" pos:column="52"/></operator> <literal type="number" pos:line="232" pos:column="50">0<pos:position pos:line="232" pos:column="51"/></literal></expr>)<pos:position pos:line="232" pos:column="52"/></condition><then pos:line="232" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="233" pos:column="25">die<pos:position pos:line="233" pos:column="28"/></name><argument_list pos:line="233" pos:column="28">(<argument><expr><call><name pos:line="233" pos:column="29">_<pos:position pos:line="233" pos:column="30"/></name><argument_list pos:line="233" pos:column="30">(<argument><expr><literal type="string" pos:line="233" pos:column="31">"Cannot read index"<pos:position pos:line="233" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="233" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="233" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="53"/></expr_stmt></block></then></if>

		<if pos:line="235" pos:column="17">if <condition pos:line="235" pos:column="20">(<expr><name pos:line="235" pos:column="21">amend<pos:position pos:line="235" pos:column="26"/></name></expr>)<pos:position pos:line="235" pos:column="27"/></condition><then pos:line="235" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><name pos:line="236" pos:column="25">parent<pos:position pos:line="236" pos:column="31"/></name> <operator pos:line="236" pos:column="32">=<pos:position pos:line="236" pos:column="33"/></operator> <literal type="string" pos:line="236" pos:column="34">"HEAD^1"<pos:position pos:line="236" pos:column="42"/></literal></expr>;<pos:position pos:line="236" pos:column="43"/></expr_stmt></block></then></if>

		<if pos:line="238" pos:column="17">if <condition pos:line="238" pos:column="20">(<expr><call><name pos:line="238" pos:column="21">get_sha1<pos:position pos:line="238" pos:column="29"/></name><argument_list pos:line="238" pos:column="29">(<argument><expr><name pos:line="238" pos:column="30">parent<pos:position pos:line="238" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="38">sha1<pos:position pos:line="238" pos:column="42"/></name></expr></argument>)<pos:position pos:line="238" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="238" pos:column="44"/></condition><then pos:line="238" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name pos:line="239" pos:column="25">commitable<pos:position pos:line="239" pos:column="35"/></name> <operator pos:line="239" pos:column="36">=<pos:position pos:line="239" pos:column="37"/></operator> <operator pos:line="239" pos:column="38">!<pos:position pos:line="239" pos:column="39"/></operator><operator pos:line="239" pos:column="39">!<pos:position pos:line="239" pos:column="40"/></operator><name pos:line="239" pos:column="40">active_nr<pos:position pos:line="239" pos:column="49"/></name></expr>;<pos:position pos:line="239" pos:column="50"/></expr_stmt></block></then>
		<else pos:line="240" pos:column="17">else <block pos:line="240" pos:column="22">{
			<comment type="block" pos:line="241" pos:column="25">/*
			 * Unless the user did explicitly request a submodule
			 * ignore mode by passing a command line option we do
			 * not ignore any changed submodule SHA-1s when
			 * comparing index and parent, no matter what is
			 * configured. Otherwise we won't commit any
			 * submodules which were manually staged, which would
			 * be really confusing.
			 */</comment>
			<decl_stmt><decl><type><name pos:line="250" pos:column="25">int<pos:position pos:line="250" pos:column="28"/></name></type> <name pos:line="250" pos:column="29">diff_flags<pos:position pos:line="250" pos:column="39"/></name> <init pos:line="250" pos:column="40">= <expr><name pos:line="250" pos:column="42">DIFF_OPT_OVERRIDE_SUBMODULE_CONFIG<pos:position pos:line="250" pos:column="76"/></name></expr></init></decl>;<pos:position pos:line="250" pos:column="77"/></decl_stmt>
			<if pos:line="251" pos:column="25">if <condition pos:line="251" pos:column="28">(<expr><name pos:line="251" pos:column="29">ignore_submodule_arg<pos:position pos:line="251" pos:column="49"/></name> <operator pos:line="251" pos:column="50">&amp;&amp;<pos:position pos:line="251" pos:column="60"/></operator>
			    <operator pos:line="252" pos:column="29">!<pos:position pos:line="252" pos:column="30"/></operator><call><name pos:line="252" pos:column="30">strcmp<pos:position pos:line="252" pos:column="36"/></name><argument_list pos:line="252" pos:column="36">(<argument><expr><name pos:line="252" pos:column="37">ignore_submodule_arg<pos:position pos:line="252" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="252" pos:column="59">"all"<pos:position pos:line="252" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="252" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="252" pos:column="66"/></condition><then pos:line="252" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="253" pos:column="33">diff_flags<pos:position pos:line="253" pos:column="43"/></name> <operator pos:line="253" pos:column="44">|=<pos:position pos:line="253" pos:column="46"/></operator> <name pos:line="253" pos:column="47">DIFF_OPT_IGNORE_SUBMODULES<pos:position pos:line="253" pos:column="73"/></name></expr>;<pos:position pos:line="253" pos:column="74"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="254" pos:column="25">commitable<pos:position pos:line="254" pos:column="35"/></name> <operator pos:line="254" pos:column="36">=<pos:position pos:line="254" pos:column="37"/></operator> <call><name pos:line="254" pos:column="38">index_differs_from<pos:position pos:line="254" pos:column="56"/></name><argument_list pos:line="254" pos:column="56">(<argument><expr><name pos:line="254" pos:column="57">parent<pos:position pos:line="254" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="254" pos:column="65">diff_flags<pos:position pos:line="254" pos:column="75"/></name></expr></argument>)<pos:position pos:line="254" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="77"/></expr_stmt>
		}<pos:position pos:line="255" pos:column="18"/></block></else></if>
	}<pos:position pos:line="256" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="257" pos:column="9">strbuf_release<pos:position pos:line="257" pos:column="23"/></name><argument_list pos:line="257" pos:column="23">(<argument><expr><operator pos:line="257" pos:column="24">&amp;<pos:position pos:line="257" pos:column="29"/></operator><name pos:line="257" pos:column="25">committer_ident<pos:position pos:line="257" pos:column="40"/></name></expr></argument>)<pos:position pos:line="257" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="259" pos:column="9">fclose<pos:position pos:line="259" pos:column="15"/></name><argument_list pos:line="259" pos:column="15">(<argument><expr><name><name pos:line="259" pos:column="16">s<pos:position pos:line="259" pos:column="17"/></name><operator pos:line="259" pos:column="17">-&gt;<pos:position pos:line="259" pos:column="22"/></operator><name pos:line="259" pos:column="19">fp<pos:position pos:line="259" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="259" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="23"/></expr_stmt>

	<comment type="block" pos:line="261" pos:column="9">/*
	 * Reject an attempt to record a non-merge empty commit without
	 * explicit --allow-empty. In the cherry-pick case, it may be
	 * empty due to conflict resolution, which the user should okay.
	 */</comment>
	<if pos:line="266" pos:column="9">if <condition pos:line="266" pos:column="12">(<expr><operator pos:line="266" pos:column="13">!<pos:position pos:line="266" pos:column="14"/></operator><name pos:line="266" pos:column="14">commitable<pos:position pos:line="266" pos:column="24"/></name> <operator pos:line="266" pos:column="25">&amp;&amp;<pos:position pos:line="266" pos:column="35"/></operator> <name pos:line="266" pos:column="28">whence<pos:position pos:line="266" pos:column="34"/></name> <operator pos:line="266" pos:column="35">!=<pos:position pos:line="266" pos:column="37"/></operator> <name pos:line="266" pos:column="38">FROM_MERGE<pos:position pos:line="266" pos:column="48"/></name> <operator pos:line="266" pos:column="49">&amp;&amp;<pos:position pos:line="266" pos:column="59"/></operator> <operator pos:line="266" pos:column="52">!<pos:position pos:line="266" pos:column="53"/></operator><name pos:line="266" pos:column="53">allow_empty<pos:position pos:line="266" pos:column="64"/></name> <operator pos:line="266" pos:column="65">&amp;&amp;<pos:position pos:line="266" pos:column="75"/></operator>
	    <operator pos:line="267" pos:column="13">!<pos:position pos:line="267" pos:column="14"/></operator><operator pos:line="267" pos:column="14">(<pos:position pos:line="267" pos:column="15"/></operator><name pos:line="267" pos:column="15">amend<pos:position pos:line="267" pos:column="20"/></name> <operator pos:line="267" pos:column="21">&amp;&amp;<pos:position pos:line="267" pos:column="31"/></operator> <call><name pos:line="267" pos:column="24">is_a_merge<pos:position pos:line="267" pos:column="34"/></name><argument_list pos:line="267" pos:column="34">(<argument><expr><name pos:line="267" pos:column="35">current_head<pos:position pos:line="267" pos:column="47"/></name></expr></argument>)<pos:position pos:line="267" pos:column="48"/></argument_list></call><operator pos:line="267" pos:column="48">)<pos:position pos:line="267" pos:column="49"/></operator></expr>)<pos:position pos:line="267" pos:column="50"/></condition><then pos:line="267" pos:column="50"> <block pos:line="267" pos:column="51">{
		<expr_stmt><expr><name><name pos:line="268" pos:column="17">s<pos:position pos:line="268" pos:column="18"/></name><operator pos:line="268" pos:column="18">-&gt;<pos:position pos:line="268" pos:column="23"/></operator><name pos:line="268" pos:column="20">display_comment_prefix<pos:position pos:line="268" pos:column="42"/></name></name> <operator pos:line="268" pos:column="43">=<pos:position pos:line="268" pos:column="44"/></operator> <name pos:line="268" pos:column="45">old_display_comment_prefix<pos:position pos:line="268" pos:column="71"/></name></expr>;<pos:position pos:line="268" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="269" pos:column="17">run_status<pos:position pos:line="269" pos:column="27"/></name><argument_list pos:line="269" pos:column="27">(<argument><expr><name pos:line="269" pos:column="28">stdout<pos:position pos:line="269" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="36">index_file<pos:position pos:line="269" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="48">prefix<pos:position pos:line="269" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="269" pos:column="56">0<pos:position pos:line="269" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="269" pos:column="59">s<pos:position pos:line="269" pos:column="60"/></name></expr></argument>)<pos:position pos:line="269" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="62"/></expr_stmt>
		<if pos:line="270" pos:column="17">if <condition pos:line="270" pos:column="20">(<expr><name pos:line="270" pos:column="21">amend<pos:position pos:line="270" pos:column="26"/></name></expr>)<pos:position pos:line="270" pos:column="27"/></condition><then pos:line="270" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="271" pos:column="25">fputs<pos:position pos:line="271" pos:column="30"/></name><argument_list pos:line="271" pos:column="30">(<argument><expr><call><name pos:line="271" pos:column="31">_<pos:position pos:line="271" pos:column="32"/></name><argument_list pos:line="271" pos:column="32">(<argument><expr><name pos:line="271" pos:column="33">empty_amend_advice<pos:position pos:line="271" pos:column="51"/></name></expr></argument>)<pos:position pos:line="271" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="271" pos:column="54">stderr<pos:position pos:line="271" pos:column="60"/></name></expr></argument>)<pos:position pos:line="271" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="62"/></expr_stmt></block></then>
		<elseif pos:line="272" pos:column="17">else <if pos:line="272" pos:column="22">if <condition pos:line="272" pos:column="25">(<expr><name pos:line="272" pos:column="26">whence<pos:position pos:line="272" pos:column="32"/></name> <operator pos:line="272" pos:column="33">==<pos:position pos:line="272" pos:column="35"/></operator> <name pos:line="272" pos:column="36">FROM_CHERRY_PICK<pos:position pos:line="272" pos:column="52"/></name></expr>)<pos:position pos:line="272" pos:column="53"/></condition><then pos:line="272" pos:column="53"> <block pos:line="272" pos:column="54">{
			<expr_stmt><expr><call><name pos:line="273" pos:column="25">fputs<pos:position pos:line="273" pos:column="30"/></name><argument_list pos:line="273" pos:column="30">(<argument><expr><call><name pos:line="273" pos:column="31">_<pos:position pos:line="273" pos:column="32"/></name><argument_list pos:line="273" pos:column="32">(<argument><expr><name pos:line="273" pos:column="33">empty_cherry_pick_advice<pos:position pos:line="273" pos:column="57"/></name></expr></argument>)<pos:position pos:line="273" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="273" pos:column="60">stderr<pos:position pos:line="273" pos:column="66"/></name></expr></argument>)<pos:position pos:line="273" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="68"/></expr_stmt>
			<if pos:line="274" pos:column="25">if <condition pos:line="274" pos:column="28">(<expr><operator pos:line="274" pos:column="29">!<pos:position pos:line="274" pos:column="30"/></operator><name pos:line="274" pos:column="30">sequencer_in_use<pos:position pos:line="274" pos:column="46"/></name></expr>)<pos:position pos:line="274" pos:column="47"/></condition><then pos:line="274" pos:column="47">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="275" pos:column="33">fputs<pos:position pos:line="275" pos:column="38"/></name><argument_list pos:line="275" pos:column="38">(<argument><expr><call><name pos:line="275" pos:column="39">_<pos:position pos:line="275" pos:column="40"/></name><argument_list pos:line="275" pos:column="40">(<argument><expr><name pos:line="275" pos:column="41">empty_cherry_pick_advice_single<pos:position pos:line="275" pos:column="72"/></name></expr></argument>)<pos:position pos:line="275" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="275" pos:column="75">stderr<pos:position pos:line="275" pos:column="81"/></name></expr></argument>)<pos:position pos:line="275" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="83"/></expr_stmt></block></then>
			<else pos:line="276" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="277" pos:column="33">fputs<pos:position pos:line="277" pos:column="38"/></name><argument_list pos:line="277" pos:column="38">(<argument><expr><call><name pos:line="277" pos:column="39">_<pos:position pos:line="277" pos:column="40"/></name><argument_list pos:line="277" pos:column="40">(<argument><expr><name pos:line="277" pos:column="41">empty_cherry_pick_advice_multi<pos:position pos:line="277" pos:column="71"/></name></expr></argument>)<pos:position pos:line="277" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="277" pos:column="74">stderr<pos:position pos:line="277" pos:column="80"/></name></expr></argument>)<pos:position pos:line="277" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="82"/></expr_stmt></block></else></if>
		}<pos:position pos:line="278" pos:column="18"/></block></then></if></elseif></if>
		<return pos:line="279" pos:column="17">return <expr><literal type="number" pos:line="279" pos:column="24">0<pos:position pos:line="279" pos:column="25"/></literal></expr>;<pos:position pos:line="279" pos:column="26"/></return>
	}<pos:position pos:line="280" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="282" pos:column="9">/*
	 * Re-read the index as pre-commit hook could have updated it,
	 * and write it out as a tree.  We must do this before we invoke
	 * the editor and after we invoke run_status above.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="287" pos:column="9">discard_cache<pos:position pos:line="287" pos:column="22"/></name><argument_list pos:line="287" pos:column="22">()<pos:position pos:line="287" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="288" pos:column="9">read_cache_from<pos:position pos:line="288" pos:column="24"/></name><argument_list pos:line="288" pos:column="24">(<argument><expr><name pos:line="288" pos:column="25">index_file<pos:position pos:line="288" pos:column="35"/></name></expr></argument>)<pos:position pos:line="288" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="37"/></expr_stmt>
	<if pos:line="289" pos:column="9">if <condition pos:line="289" pos:column="12">(<expr><call><name pos:line="289" pos:column="13">update_main_cache_tree<pos:position pos:line="289" pos:column="35"/></name><argument_list pos:line="289" pos:column="35">(<argument><expr><literal type="number" pos:line="289" pos:column="36">0<pos:position pos:line="289" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="289" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="289" pos:column="39"/></condition><then pos:line="289" pos:column="39"> <block pos:line="289" pos:column="40">{
		<expr_stmt><expr><call><name pos:line="290" pos:column="17">error<pos:position pos:line="290" pos:column="22"/></name><argument_list pos:line="290" pos:column="22">(<argument><expr><call><name pos:line="290" pos:column="23">_<pos:position pos:line="290" pos:column="24"/></name><argument_list pos:line="290" pos:column="24">(<argument><expr><literal type="string" pos:line="290" pos:column="25">"Error building trees"<pos:position pos:line="290" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="290" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="290" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="50"/></expr_stmt>
		<return pos:line="291" pos:column="17">return <expr><literal type="number" pos:line="291" pos:column="24">0<pos:position pos:line="291" pos:column="25"/></literal></expr>;<pos:position pos:line="291" pos:column="26"/></return>
	}<pos:position pos:line="292" pos:column="10"/></block></then></if>

	<if pos:line="294" pos:column="9">if <condition pos:line="294" pos:column="12">(<expr><call><name pos:line="294" pos:column="13">run_commit_hook<pos:position pos:line="294" pos:column="28"/></name><argument_list pos:line="294" pos:column="28">(<argument><expr><name pos:line="294" pos:column="29">use_editor<pos:position pos:line="294" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="41">index_file<pos:position pos:line="294" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="53">"prepare-commit-msg"<pos:position pos:line="294" pos:column="73"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="295" pos:column="29">git_path<pos:position pos:line="295" pos:column="37"/></name><argument_list pos:line="295" pos:column="37">(<argument><expr><name pos:line="295" pos:column="38">commit_editmsg<pos:position pos:line="295" pos:column="52"/></name></expr></argument>)<pos:position pos:line="295" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="295" pos:column="55">hook_arg1<pos:position pos:line="295" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="295" pos:column="66">hook_arg2<pos:position pos:line="295" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="295" pos:column="77">NULL<pos:position pos:line="295" pos:column="81"/></name></expr></argument>)<pos:position pos:line="295" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="295" pos:column="83"/></condition><then pos:line="295" pos:column="83">
		<block type="pseudo"><return pos:line="296" pos:column="17">return <expr><literal type="number" pos:line="296" pos:column="24">0<pos:position pos:line="296" pos:column="25"/></literal></expr>;<pos:position pos:line="296" pos:column="26"/></return></block></then></if>

	<if pos:line="298" pos:column="9">if <condition pos:line="298" pos:column="12">(<expr><name pos:line="298" pos:column="13">use_editor<pos:position pos:line="298" pos:column="23"/></name></expr>)<pos:position pos:line="298" pos:column="24"/></condition><then pos:line="298" pos:column="24"> <block pos:line="298" pos:column="25">{
		<decl_stmt><decl><type><name pos:line="299" pos:column="17">char<pos:position pos:line="299" pos:column="21"/></name></type> <name><name pos:line="299" pos:column="22">index<pos:position pos:line="299" pos:column="27"/></name><index pos:line="299" pos:column="27">[<expr><name pos:line="299" pos:column="28">PATH_MAX<pos:position pos:line="299" pos:column="36"/></name></expr>]<pos:position pos:line="299" pos:column="37"/></index></name></decl>;<pos:position pos:line="299" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="300" pos:column="17">const<pos:position pos:line="300" pos:column="22"/></specifier> <name pos:line="300" pos:column="23">char<pos:position pos:line="300" pos:column="27"/></name> <modifier pos:line="300" pos:column="28">*<pos:position pos:line="300" pos:column="29"/></modifier></type><name><name pos:line="300" pos:column="29">env<pos:position pos:line="300" pos:column="32"/></name><index pos:line="300" pos:column="32">[<expr><literal type="number" pos:line="300" pos:column="33">2<pos:position pos:line="300" pos:column="34"/></literal></expr>]<pos:position pos:line="300" pos:column="35"/></index></name> <init pos:line="300" pos:column="36">= <expr><block pos:line="300" pos:column="38">{ <expr><name pos:line="300" pos:column="40">NULL<pos:position pos:line="300" pos:column="44"/></name></expr> }<pos:position pos:line="300" pos:column="46"/></block></expr></init></decl>;<pos:position pos:line="300" pos:column="47"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="301" pos:column="17">env<pos:position pos:line="301" pos:column="20"/></name><index pos:line="301" pos:column="20">[<expr><literal type="number" pos:line="301" pos:column="21">0<pos:position pos:line="301" pos:column="22"/></literal></expr>]<pos:position pos:line="301" pos:column="23"/></index></name> <operator pos:line="301" pos:column="24">=<pos:position pos:line="301" pos:column="25"/></operator>  <name pos:line="301" pos:column="27">index<pos:position pos:line="301" pos:column="32"/></name></expr>;<pos:position pos:line="301" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="302" pos:column="17">snprintf<pos:position pos:line="302" pos:column="25"/></name><argument_list pos:line="302" pos:column="25">(<argument><expr><name pos:line="302" pos:column="26">index<pos:position pos:line="302" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="302" pos:column="33">sizeof<argument_list pos:line="302" pos:column="39">(<argument><expr><name pos:line="302" pos:column="40">index<pos:position pos:line="302" pos:column="45"/></name></expr></argument>)<pos:position pos:line="302" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="302" pos:column="48">"GIT_INDEX_FILE=%s"<pos:position pos:line="302" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="302" pos:column="69">index_file<pos:position pos:line="302" pos:column="79"/></name></expr></argument>)<pos:position pos:line="302" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="81"/></expr_stmt>
		<if pos:line="303" pos:column="17">if <condition pos:line="303" pos:column="20">(<expr><call><name pos:line="303" pos:column="21">launch_editor<pos:position pos:line="303" pos:column="34"/></name><argument_list pos:line="303" pos:column="34">(<argument><expr><call><name pos:line="303" pos:column="35">git_path<pos:position pos:line="303" pos:column="43"/></name><argument_list pos:line="303" pos:column="43">(<argument><expr><name pos:line="303" pos:column="44">commit_editmsg<pos:position pos:line="303" pos:column="58"/></name></expr></argument>)<pos:position pos:line="303" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="303" pos:column="61">NULL<pos:position pos:line="303" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="303" pos:column="67">env<pos:position pos:line="303" pos:column="70"/></name></expr></argument>)<pos:position pos:line="303" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="303" pos:column="72"/></condition><then pos:line="303" pos:column="72"> <block pos:line="303" pos:column="73">{
			<expr_stmt><expr><call><name pos:line="304" pos:column="25">fprintf<pos:position pos:line="304" pos:column="32"/></name><argument_list pos:line="304" pos:column="32">(<argument><expr><name pos:line="304" pos:column="33">stderr<pos:position pos:line="304" pos:column="39"/></name></expr></argument>,
			<argument><expr><call><name pos:line="305" pos:column="25">_<pos:position pos:line="305" pos:column="26"/></name><argument_list pos:line="305" pos:column="26">(<argument><expr><literal type="string" pos:line="305" pos:column="27">"Please supply the message using either -m or -F option.\n"<pos:position pos:line="305" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="305" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="305" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="89"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="306" pos:column="25">exit<pos:position pos:line="306" pos:column="29"/></name><argument_list pos:line="306" pos:column="29">(<argument><expr><literal type="number" pos:line="306" pos:column="30">1<pos:position pos:line="306" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="306" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="307" pos:column="18"/></block></then></if>
	}<pos:position pos:line="308" pos:column="10"/></block></then></if>

	<if pos:line="310" pos:column="9">if <condition pos:line="310" pos:column="12">(<expr><operator pos:line="310" pos:column="13">!<pos:position pos:line="310" pos:column="14"/></operator><name pos:line="310" pos:column="14">no_verify<pos:position pos:line="310" pos:column="23"/></name> <operator pos:line="310" pos:column="24">&amp;&amp;<pos:position pos:line="310" pos:column="34"/></operator>
	    <call><name pos:line="311" pos:column="13">run_commit_hook<pos:position pos:line="311" pos:column="28"/></name><argument_list pos:line="311" pos:column="28">(<argument><expr><name pos:line="311" pos:column="29">use_editor<pos:position pos:line="311" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="311" pos:column="41">index_file<pos:position pos:line="311" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="311" pos:column="53">"commit-msg"<pos:position pos:line="311" pos:column="65"/></literal></expr></argument>, <argument><expr><call><name pos:line="311" pos:column="67">git_path<pos:position pos:line="311" pos:column="75"/></name><argument_list pos:line="311" pos:column="75">(<argument><expr><name pos:line="311" pos:column="76">commit_editmsg<pos:position pos:line="311" pos:column="90"/></name></expr></argument>)<pos:position pos:line="311" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="311" pos:column="93">NULL<pos:position pos:line="311" pos:column="97"/></name></expr></argument>)<pos:position pos:line="311" pos:column="98"/></argument_list></call></expr>)<pos:position pos:line="311" pos:column="99"/></condition><then pos:line="311" pos:column="99"> <block pos:line="311" pos:column="100">{
		<return pos:line="312" pos:column="17">return <expr><literal type="number" pos:line="312" pos:column="24">0<pos:position pos:line="312" pos:column="25"/></literal></expr>;<pos:position pos:line="312" pos:column="26"/></return>
	}<pos:position pos:line="313" pos:column="10"/></block></then></if>

	<return pos:line="315" pos:column="9">return <expr><literal type="number" pos:line="315" pos:column="16">1<pos:position pos:line="315" pos:column="17"/></literal></expr>;<pos:position pos:line="315" pos:column="18"/></return>
}<pos:position pos:line="316" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1245_git-2.12.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_to_create<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">apply_state<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">state<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
			   <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">new_name<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="3" pos:column="28">int<pos:position pos:line="3" pos:column="31"/></name></type> <name pos:line="3" pos:column="32">ok_if_exists<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="45"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">stat<pos:position pos:line="5" pos:column="20"/></name></name></type> <name pos:line="5" pos:column="21">nst<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">state<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">check_index<pos:position pos:line="7" pos:column="31"/></name></name> <operator pos:line="7" pos:column="32">&amp;&amp;<pos:position pos:line="7" pos:column="42"/></operator>
	    <call><name pos:line="8" pos:column="13">cache_name_pos<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">new_name<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="38">strlen<pos:position pos:line="8" pos:column="44"/></name><argument_list pos:line="8" pos:column="44">(<argument><expr><name pos:line="8" pos:column="45">new_name<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call> <operator pos:line="8" pos:column="56">&gt;=<pos:position pos:line="8" pos:column="61"/></operator> <literal type="number" pos:line="8" pos:column="59">0<pos:position pos:line="8" pos:column="60"/></literal> <operator pos:line="8" pos:column="61">&amp;&amp;<pos:position pos:line="8" pos:column="71"/></operator>
	    <operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">ok_if_exists<pos:position pos:line="9" pos:column="26"/></name></expr>)<pos:position pos:line="9" pos:column="27"/></condition><then pos:line="9" pos:column="27">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><name pos:line="10" pos:column="24">EXISTS_IN_INDEX<pos:position pos:line="10" pos:column="39"/></name></expr>;<pos:position pos:line="10" pos:column="40"/></return></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">state<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">cached<pos:position pos:line="11" pos:column="26"/></name></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">lstat<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">new_name<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="30">&amp;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="31">nst<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36"> <block pos:line="14" pos:column="37">{
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><call><name pos:line="15" pos:column="21">S_ISDIR<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name><name pos:line="15" pos:column="29">nst<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">.<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">st_mode<pos:position pos:line="15" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call> <operator pos:line="15" pos:column="42">||<pos:position pos:line="15" pos:column="44"/></operator> <name pos:line="15" pos:column="45">ok_if_exists<pos:position pos:line="15" pos:column="57"/></name></expr>)<pos:position pos:line="15" pos:column="58"/></condition><then pos:line="15" pos:column="58">
			<block type="pseudo"><return pos:line="16" pos:column="25">return <expr><literal type="number" pos:line="16" pos:column="32">0<pos:position pos:line="16" pos:column="33"/></literal></expr>;<pos:position pos:line="16" pos:column="34"/></return></block></then></if>
		<comment type="block" pos:line="17" pos:column="17">/*
		 * A leading component of new_name might be a symlink
		 * that is going to be removed with this patch, but
		 * still pointing at somewhere that has the path.
		 * In such a case, path "new_name" does not exist as
		 * far as git is concerned.
		 */</comment>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">has_symlink_leading_path<pos:position pos:line="24" pos:column="45"/></name><argument_list pos:line="24" pos:column="45">(<argument><expr><name pos:line="24" pos:column="46">new_name<pos:position pos:line="24" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="56">strlen<pos:position pos:line="24" pos:column="62"/></name><argument_list pos:line="24" pos:column="62">(<argument><expr><name pos:line="24" pos:column="63">new_name<pos:position pos:line="24" pos:column="71"/></name></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="74"/></condition><then pos:line="24" pos:column="74">
			<block type="pseudo"><return pos:line="25" pos:column="25">return <expr><literal type="number" pos:line="25" pos:column="32">0<pos:position pos:line="25" pos:column="33"/></literal></expr>;<pos:position pos:line="25" pos:column="34"/></return></block></then></if>

		<return pos:line="27" pos:column="17">return <expr><name pos:line="27" pos:column="24">EXISTS_IN_WORKTREE<pos:position pos:line="27" pos:column="42"/></name></expr>;<pos:position pos:line="27" pos:column="43"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then> <elseif pos:line="28" pos:column="11">else <if pos:line="28" pos:column="16">if <condition pos:line="28" pos:column="19">(<expr><operator pos:line="28" pos:column="20">(<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">errno<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">!=<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="30">ENOENT<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">)<pos:position pos:line="28" pos:column="37"/></operator> <operator pos:line="28" pos:column="38">&amp;&amp;<pos:position pos:line="28" pos:column="48"/></operator> <operator pos:line="28" pos:column="41">(<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="42">errno<pos:position pos:line="28" pos:column="47"/></name> <operator pos:line="28" pos:column="48">!=<pos:position pos:line="28" pos:column="50"/></operator> <name pos:line="28" pos:column="51">ENOTDIR<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">)<pos:position pos:line="28" pos:column="59"/></operator></expr>)<pos:position pos:line="28" pos:column="60"/></condition><then pos:line="28" pos:column="60"> <block pos:line="28" pos:column="61">{
		<return pos:line="29" pos:column="17">return <expr><call><name pos:line="29" pos:column="24">error_errno<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><literal type="string" pos:line="29" pos:column="36">"%s"<pos:position pos:line="29" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">new_name<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if></elseif></if>
	<return pos:line="31" pos:column="9">return <expr><literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr>;<pos:position pos:line="31" pos:column="18"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

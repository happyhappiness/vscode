<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3612_git-2.8.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">grep_expr<pos:position pos:line="1" pos:column="24"/></name></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">compile_pattern_atom<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">grep_pat<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier><modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">list<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">grep_pat<pos:position pos:line="3" pos:column="24"/></name></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">p<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">grep_expr<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">x<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">p<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <operator pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">list<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">p<pos:position pos:line="7" pos:column="15"/></name></expr>)<pos:position pos:line="7" pos:column="16"/></condition><then pos:line="7" pos:column="16">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><name pos:line="8" pos:column="24">NULL<pos:position pos:line="8" pos:column="28"/></name></expr>;<pos:position pos:line="8" pos:column="29"/></return></block></then></if>
	<switch pos:line="9" pos:column="9">switch <condition pos:line="9" pos:column="16">(<expr><name><name pos:line="9" pos:column="17">p<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">token<pos:position pos:line="9" pos:column="25"/></name></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition> <block pos:line="9" pos:column="27">{
	<case pos:line="10" pos:column="9">case <expr><name pos:line="10" pos:column="14">GREP_PATTERN<pos:position pos:line="10" pos:column="26"/></name></expr>:<pos:position pos:line="10" pos:column="27"/></case> <comment type="block" pos:line="10" pos:column="28">/* atom */</comment>
	<case pos:line="11" pos:column="9">case <expr><name pos:line="11" pos:column="14">GREP_PATTERN_HEAD<pos:position pos:line="11" pos:column="31"/></name></expr>:<pos:position pos:line="11" pos:column="32"/></case>
	<case pos:line="12" pos:column="9">case <expr><name pos:line="12" pos:column="14">GREP_PATTERN_BODY<pos:position pos:line="12" pos:column="31"/></name></expr>:<pos:position pos:line="12" pos:column="32"/></case>
		<expr_stmt><expr><name pos:line="13" pos:column="17">x<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <call><name pos:line="13" pos:column="21">xcalloc<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="number" pos:line="13" pos:column="29">1<pos:position pos:line="13" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="32">sizeof <argument_list pos:line="13" pos:column="39">(<argument><expr pos:line="13" pos:column="40">struct <name pos:line="13" pos:column="47">grep_expr<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="14" pos:column="17">x<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">node<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">GREP_NODE_ATOM<pos:position pos:line="14" pos:column="41"/></name></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">x<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">u<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">.<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">atom<pos:position pos:line="15" pos:column="26"/></name></name> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">p<pos:position pos:line="15" pos:column="30"/></name></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">list<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <name><name pos:line="16" pos:column="25">p<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">next<pos:position pos:line="16" pos:column="32"/></name></name></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><name pos:line="17" pos:column="24">x<pos:position pos:line="17" pos:column="25"/></name></expr>;<pos:position pos:line="17" pos:column="26"/></return>
	<case pos:line="18" pos:column="9">case <expr><name pos:line="18" pos:column="14">GREP_OPEN_PAREN<pos:position pos:line="18" pos:column="29"/></name></expr>:<pos:position pos:line="18" pos:column="30"/></case>
		<expr_stmt><expr><operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">list<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name><name pos:line="19" pos:column="25">p<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">-&gt;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="28">next<pos:position pos:line="19" pos:column="32"/></name></name></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">x<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <call><name pos:line="20" pos:column="21">compile_pattern_or<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">(<argument><expr><name pos:line="20" pos:column="40">list<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">!<pos:position pos:line="21" pos:column="22"/></operator><operator pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">list<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">||<pos:position pos:line="21" pos:column="30"/></operator> <name><operator pos:line="21" pos:column="31">(<pos:position pos:line="21" pos:column="32"/></operator><operator pos:line="21" pos:column="32">*<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">list<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">)<pos:position pos:line="21" pos:column="38"/></operator><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">token<pos:position pos:line="21" pos:column="45"/></name></name> <operator pos:line="21" pos:column="46">!=<pos:position pos:line="21" pos:column="48"/></operator> <name pos:line="21" pos:column="49">GREP_CLOSE_PAREN<pos:position pos:line="21" pos:column="65"/></name></expr>)<pos:position pos:line="21" pos:column="66"/></condition><then pos:line="21" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="25">die<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><literal type="string" pos:line="22" pos:column="29">"unmatched parenthesis"<pos:position pos:line="22" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt></block></then></if>
		<expr_stmt><expr><operator pos:line="23" pos:column="17">*<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">list<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name><operator pos:line="23" pos:column="25">(<pos:position pos:line="23" pos:column="26"/></operator><operator pos:line="23" pos:column="26">*<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">list<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">)<pos:position pos:line="23" pos:column="32"/></operator><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">next<pos:position pos:line="23" pos:column="38"/></name></name></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
		<return pos:line="24" pos:column="17">return <expr><name pos:line="24" pos:column="24">x<pos:position pos:line="24" pos:column="25"/></name></expr>;<pos:position pos:line="24" pos:column="26"/></return>
	<default pos:line="25" pos:column="9">default:<pos:position pos:line="25" pos:column="17"/></default>
		<return pos:line="26" pos:column="17">return <expr><name pos:line="26" pos:column="24">NULL<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></switch>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

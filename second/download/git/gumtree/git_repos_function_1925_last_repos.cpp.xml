<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1925_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">strip_suffix_mem<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">buf<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">size_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">len<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
				   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">suffix<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">suflen<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><call><name pos:line="4" pos:column="25">strlen<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">(<argument><expr><name pos:line="4" pos:column="32">suffix<pos:position pos:line="4" pos:column="38"/></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">len<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">&lt;<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="20">suflen<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">||<pos:position pos:line="5" pos:column="29"/></operator> <call><name pos:line="5" pos:column="30">memcmp<pos:position pos:line="5" pos:column="36"/></name><argument_list pos:line="5" pos:column="36">(<argument><expr><name pos:line="5" pos:column="37">buf<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">+<pos:position pos:line="5" pos:column="42"/></operator> <operator pos:line="5" pos:column="43">(<pos:position pos:line="5" pos:column="44"/></operator><operator pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="45">len<pos:position pos:line="5" pos:column="48"/></name> <operator pos:line="5" pos:column="49">-<pos:position pos:line="5" pos:column="50"/></operator> <name pos:line="5" pos:column="51">suflen<pos:position pos:line="5" pos:column="57"/></name><operator pos:line="5" pos:column="57">)<pos:position pos:line="5" pos:column="58"/></operator></expr></argument>, <argument><expr><name pos:line="5" pos:column="60">suffix<pos:position pos:line="5" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="68">suflen<pos:position pos:line="5" pos:column="74"/></name></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="76"/></condition><then pos:line="5" pos:column="76">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">len<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">-=<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">suflen<pos:position pos:line="7" pos:column="23"/></name></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>
	<return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">1<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

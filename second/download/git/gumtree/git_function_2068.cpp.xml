<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2068.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pass_blame_to_parent<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">scoreboard<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">sb<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
				 <parameter><decl><type><name><name pos:line="2" pos:column="34">struct<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">origin<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">target<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
				 <parameter><decl><type><name><name pos:line="3" pos:column="34">struct<pos:position pos:line="3" pos:column="40"/></name> <name pos:line="3" pos:column="41">origin<pos:position pos:line="3" pos:column="47"/></name></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">parent<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">mmfile_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">file_p<pos:position pos:line="5" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="26">file_o<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">blame_chunk_cb_data<pos:position pos:line="6" pos:column="35"/></name></name></type> <name pos:line="6" pos:column="36">d<pos:position pos:line="6" pos:column="37"/></name></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">blame_entry<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">newdest<pos:position pos:line="7" pos:column="36"/></name> <init pos:line="7" pos:column="37">= <expr><name pos:line="7" pos:column="39">NULL<pos:position pos:line="7" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name><name pos:line="9" pos:column="14">target<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">suspects<pos:position pos:line="9" pos:column="30"/></name></name></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
		<block type="pseudo"><return pos:line="10" pos:column="17">return;<pos:position pos:line="10" pos:column="24"/></return></block></then></if> <comment type="block" pos:line="10" pos:column="25">/* nothing remains for this target */</comment>

	<expr_stmt><expr><name><name pos:line="12" pos:column="9">d<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">.<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">parent<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">parent<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">d<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">.<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">offset<pos:position pos:line="13" pos:column="17"/></name></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <literal type="number" pos:line="13" pos:column="20">0<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">d<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">.<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">dstq<pos:position pos:line="14" pos:column="15"/></name></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <operator pos:line="14" pos:column="18">&amp;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="19">newdest<pos:position pos:line="14" pos:column="26"/></name></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt> <expr_stmt><expr><name><name pos:line="14" pos:column="28">d<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">.<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">srcq<pos:position pos:line="14" pos:column="34"/></name></name> <operator pos:line="14" pos:column="35">=<pos:position pos:line="14" pos:column="36"/></operator> <operator pos:line="14" pos:column="37">&amp;<pos:position pos:line="14" pos:column="42"/></operator><name><name pos:line="14" pos:column="38">target<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">-&gt;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="46">suspects<pos:position pos:line="14" pos:column="54"/></name></name></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">fill_origin_blob<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name><name pos:line="16" pos:column="27">sb<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">revs<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">diffopt<pos:position pos:line="16" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="46">parent<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="54">&amp;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="55">file_p<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">fill_origin_blob<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><operator pos:line="17" pos:column="26">&amp;<pos:position pos:line="17" pos:column="31"/></operator><name><name pos:line="17" pos:column="27">sb<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">revs<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">diffopt<pos:position pos:line="17" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">target<pos:position pos:line="17" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="54">&amp;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="55">file_o<pos:position pos:line="17" pos:column="61"/></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">num_get_patch<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">++<pos:position pos:line="18" pos:column="24"/></operator></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">diff_hunks<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="25">file_p<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="33">&amp;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="34">file_o<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="42">0<pos:position pos:line="20" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">blame_chunk_cb<pos:position pos:line="20" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="61">&amp;<pos:position pos:line="20" pos:column="66"/></operator><name pos:line="20" pos:column="62">d<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="65"/></condition><then pos:line="20" pos:column="65">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">die<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><literal type="string" pos:line="21" pos:column="21">"unable to generate diff (%s -&gt; %s)"<pos:position pos:line="21" pos:column="60"/></literal></expr></argument>,
		    <argument><expr><call><name pos:line="22" pos:column="21">sha1_to_hex<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name><name pos:line="22" pos:column="33">parent<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">-&gt;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="41">commit<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">-&gt;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="49">object<pos:position pos:line="22" pos:column="55"/></name><operator pos:line="22" pos:column="55">.<pos:position pos:line="22" pos:column="56"/></operator><name pos:line="22" pos:column="56">sha1<pos:position pos:line="22" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr></argument>,
		    <argument><expr><call><name pos:line="23" pos:column="21">sha1_to_hex<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name><name pos:line="23" pos:column="33">target<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">-&gt;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="41">commit<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">-&gt;<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="49">object<pos:position pos:line="23" pos:column="55"/></name><operator pos:line="23" pos:column="55">.<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="56">sha1<pos:position pos:line="23" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="63"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="24" pos:column="9">/* The rest are the same as the parent */</comment>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">blame_chunk<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><operator pos:line="25" pos:column="21">&amp;<pos:position pos:line="25" pos:column="26"/></operator><name><name pos:line="25" pos:column="22">d<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">.<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="24">dstq<pos:position pos:line="25" pos:column="28"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="30">&amp;<pos:position pos:line="25" pos:column="35"/></operator><name><name pos:line="25" pos:column="31">d<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">.<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="33">srcq<pos:position pos:line="25" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">INT_MAX<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="48">d<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">.<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="50">offset<pos:position pos:line="25" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="58">INT_MAX<pos:position pos:line="25" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="67">parent<pos:position pos:line="25" pos:column="73"/></name></expr></argument>)<pos:position pos:line="25" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name><name pos:line="26" pos:column="10">d<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">.<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">dstq<pos:position pos:line="26" pos:column="16"/></name></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="19">NULL<pos:position pos:line="26" pos:column="23"/></name></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">queue_blames<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">sb<pos:position pos:line="27" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="26">parent<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="34">newdest<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>

	<return pos:line="29" pos:column="9">return;<pos:position pos:line="29" pos:column="16"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

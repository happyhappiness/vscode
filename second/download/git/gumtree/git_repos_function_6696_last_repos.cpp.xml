<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6696_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mingw_fgetc<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">FILE<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">stream<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ch<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><call><name pos:line="4" pos:column="14">isatty<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><call><name pos:line="4" pos:column="21">_fileno<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><name pos:line="4" pos:column="29">stream<pos:position pos:line="4" pos:column="35"/></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="38"/></condition><then pos:line="4" pos:column="38">
		<block type="pseudo"><return pos:line="5" pos:column="17">return <expr><call><name pos:line="5" pos:column="24">fgetc<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">stream<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="38"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">SetConsoleCtrlHandler<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">ctrl_ignore<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="44">TRUE<pos:position pos:line="7" pos:column="48"/></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="50"/></expr_stmt>
	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><literal type="number" pos:line="8" pos:column="16">1<pos:position pos:line="8" pos:column="17"/></literal></expr>)<pos:position pos:line="8" pos:column="18"/></condition> <block pos:line="8" pos:column="19">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">ch<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <call><name pos:line="9" pos:column="22">fgetc<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">stream<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">ch<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">!=<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="27">EOF<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">||<pos:position pos:line="10" pos:column="33"/></operator> <call><name pos:line="10" pos:column="34">GetLastError<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">()<pos:position pos:line="10" pos:column="48"/></argument_list></call> <operator pos:line="10" pos:column="49">!=<pos:position pos:line="10" pos:column="51"/></operator> <name pos:line="10" pos:column="52">ERROR_OPERATION_ABORTED<pos:position pos:line="10" pos:column="75"/></name></expr>)<pos:position pos:line="10" pos:column="76"/></condition><then pos:line="10" pos:column="76">
			<block type="pseudo"><break pos:line="11" pos:column="25">break;<pos:position pos:line="11" pos:column="31"/></break></block></then></if>

		<comment type="block" pos:line="13" pos:column="17">/* Ctrl+C was pressed, simulate SIGINT and retry */</comment>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">mingw_raise<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">SIGINT<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">SetConsoleCtrlHandler<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">ctrl_ignore<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">FALSE<pos:position pos:line="16" pos:column="49"/></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt>
	<return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">ch<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

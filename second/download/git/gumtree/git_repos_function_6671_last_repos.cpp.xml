<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6671_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">uint64_t<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">git_bswap64<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">uint64_t<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">x<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uint64_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">result<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">__builtin_constant_p<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><name pos:line="4" pos:column="34">x<pos:position pos:line="4" pos:column="35"/></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="37"/></condition><then pos:line="4" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="17">result<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">=<pos:position pos:line="5" pos:column="25"/></operator> <call><name pos:line="5" pos:column="26">default_bswap64<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><name pos:line="5" pos:column="42">x<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="45"/></expr_stmt></block></then>
	<else pos:line="6" pos:column="9">else
		<block type="pseudo"><asm pos:line="7" pos:column="17">__asm__("bswap %q0" : "=r" (result) : "0" (x));<pos:position pos:line="7" pos:column="64"/></asm></block></else></if>
	<return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">result<pos:position pos:line="8" pos:column="22"/></name></expr>;<pos:position pos:line="8" pos:column="23"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

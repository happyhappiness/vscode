<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6777_git-2.14.0.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">dirent_prec_psx<pos:position pos:line="1" pos:column="23"/></name></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">precompose_utf8_readdir<pos:position pos:line="1" pos:column="48"/></name><parameter_list pos:line="1" pos:column="48">(<parameter><decl><type><name pos:line="1" pos:column="49">PREC_DIR<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">prec_dir<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">dirent<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">res<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<expr_stmt><expr><name pos:line="4" pos:column="9">res<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">=<pos:position pos:line="4" pos:column="14"/></operator> <call><name pos:line="4" pos:column="15">readdir<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name><name pos:line="4" pos:column="23">prec_dir<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">dirp<pos:position pos:line="4" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="39"/></expr_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">res<pos:position pos:line="5" pos:column="16"/></name></expr>)<pos:position pos:line="5" pos:column="17"/></condition><then pos:line="5" pos:column="17"> <block pos:line="5" pos:column="18">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">size_t<pos:position pos:line="6" pos:column="23"/></name></type> <name pos:line="6" pos:column="24">namelenz<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><call><name pos:line="6" pos:column="35">strlen<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">(<argument><expr><name><name pos:line="6" pos:column="42">res<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">-&gt;<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="47">d_name<pos:position pos:line="6" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call> <operator pos:line="6" pos:column="55">+<pos:position pos:line="6" pos:column="56"/></operator> <literal type="number" pos:line="6" pos:column="57">1<pos:position pos:line="6" pos:column="58"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="59"/></decl_stmt> <comment type="block" pos:line="6" pos:column="60">/* \0 */</comment>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">size_t<pos:position pos:line="7" pos:column="23"/></name></type> <name pos:line="7" pos:column="24">new_maxlen<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><name pos:line="7" pos:column="37">namelenz<pos:position pos:line="7" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">ret_errno<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><name pos:line="9" pos:column="33">errno<pos:position pos:line="9" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">new_maxlen<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">&gt;<pos:position pos:line="11" pos:column="36"/></operator> <name><name pos:line="11" pos:column="34">prec_dir<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">dirent_nfc<pos:position pos:line="11" pos:column="54"/></name><operator pos:line="11" pos:column="54">-&gt;<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="56">max_name_len<pos:position pos:line="11" pos:column="68"/></name></name></expr>)<pos:position pos:line="11" pos:column="69"/></condition><then pos:line="11" pos:column="69"> <block pos:line="11" pos:column="70">{
			<decl_stmt><decl><type><name pos:line="12" pos:column="25">size_t<pos:position pos:line="12" pos:column="31"/></name></type> <name pos:line="12" pos:column="32">new_len<pos:position pos:line="12" pos:column="39"/></name> <init pos:line="12" pos:column="40">= <expr><sizeof pos:line="12" pos:column="42">sizeof<argument_list pos:line="12" pos:column="48">(<argument><expr><name pos:line="12" pos:column="49">dirent_prec_psx<pos:position pos:line="12" pos:column="64"/></name></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></sizeof> <operator pos:line="12" pos:column="66">+<pos:position pos:line="12" pos:column="67"/></operator> <name pos:line="12" pos:column="68">new_maxlen<pos:position pos:line="12" pos:column="78"/></name> <operator pos:line="12" pos:column="79">-<pos:position pos:line="12" pos:column="80"/></operator>
				<sizeof pos:line="13" pos:column="33">sizeof<argument_list pos:line="13" pos:column="39">(<argument><expr><name><name pos:line="13" pos:column="40">prec_dir<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">-&gt;<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="50">dirent_nfc<pos:position pos:line="13" pos:column="60"/></name><operator pos:line="13" pos:column="60">-&gt;<pos:position pos:line="13" pos:column="65"/></operator><name pos:line="13" pos:column="62">d_name<pos:position pos:line="13" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="69"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="13" pos:column="70"/></decl_stmt>

			<expr_stmt><expr><name><name pos:line="15" pos:column="25">prec_dir<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">dirent_nfc<pos:position pos:line="15" pos:column="45"/></name></name> <operator pos:line="15" pos:column="46">=<pos:position pos:line="15" pos:column="47"/></operator> <call><name pos:line="15" pos:column="48">xrealloc<pos:position pos:line="15" pos:column="56"/></name><argument_list pos:line="15" pos:column="56">(<argument><expr><name><name pos:line="15" pos:column="57">prec_dir<pos:position pos:line="15" pos:column="65"/></name><operator pos:line="15" pos:column="65">-&gt;<pos:position pos:line="15" pos:column="70"/></operator><name pos:line="15" pos:column="67">dirent_nfc<pos:position pos:line="15" pos:column="77"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="79">new_len<pos:position pos:line="15" pos:column="86"/></name></expr></argument>)<pos:position pos:line="15" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="88"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="16" pos:column="25">prec_dir<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">dirent_nfc<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">max_name_len<pos:position pos:line="16" pos:column="59"/></name></name> <operator pos:line="16" pos:column="60">=<pos:position pos:line="16" pos:column="61"/></operator> <name pos:line="16" pos:column="62">new_maxlen<pos:position pos:line="16" pos:column="72"/></name></expr>;<pos:position pos:line="16" pos:column="73"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="19" pos:column="17">prec_dir<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">dirent_nfc<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">d_ino<pos:position pos:line="19" pos:column="44"/></name></name>  <operator pos:line="19" pos:column="46">=<pos:position pos:line="19" pos:column="47"/></operator> <name><name pos:line="19" pos:column="48">res<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">-&gt;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="53">d_ino<pos:position pos:line="19" pos:column="58"/></name></name></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">prec_dir<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">dirent_nfc<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">d_type<pos:position pos:line="20" pos:column="45"/></name></name> <operator pos:line="20" pos:column="46">=<pos:position pos:line="20" pos:column="47"/></operator> <name><name pos:line="20" pos:column="48">res<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">-&gt;<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="53">d_type<pos:position pos:line="20" pos:column="59"/></name></name></expr>;<pos:position pos:line="20" pos:column="60"/></expr_stmt>

		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">(<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">precomposed_unicode<pos:position pos:line="22" pos:column="41"/></name> <operator pos:line="22" pos:column="42">==<pos:position pos:line="22" pos:column="44"/></operator> <literal type="number" pos:line="22" pos:column="45">1<pos:position pos:line="22" pos:column="46"/></literal><operator pos:line="22" pos:column="46">)<pos:position pos:line="22" pos:column="47"/></operator> <operator pos:line="22" pos:column="48">&amp;&amp;<pos:position pos:line="22" pos:column="58"/></operator> <call><name pos:line="22" pos:column="51">has_non_ascii<pos:position pos:line="22" pos:column="64"/></name><argument_list pos:line="22" pos:column="64">(<argument><expr><name><name pos:line="22" pos:column="65">res<pos:position pos:line="22" pos:column="68"/></name><operator pos:line="22" pos:column="68">-&gt;<pos:position pos:line="22" pos:column="73"/></operator><name pos:line="22" pos:column="70">d_name<pos:position pos:line="22" pos:column="76"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="78">(<pos:position pos:line="22" pos:column="79"/></operator><name pos:line="22" pos:column="79">size_t<pos:position pos:line="22" pos:column="85"/></name><operator pos:line="22" pos:column="85">)<pos:position pos:line="22" pos:column="86"/></operator><operator pos:line="22" pos:column="86">-<pos:position pos:line="22" pos:column="87"/></operator><literal type="number" pos:line="22" pos:column="87">1<pos:position pos:line="22" pos:column="88"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="90">NULL<pos:position pos:line="22" pos:column="94"/></name></expr></argument>)<pos:position pos:line="22" pos:column="95"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="96"/></condition><then pos:line="22" pos:column="96"> <block pos:line="22" pos:column="97">{
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><name><name pos:line="23" pos:column="29">prec_dir<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">ic_precompose<pos:position pos:line="23" pos:column="52"/></name></name> <operator pos:line="23" pos:column="53">==<pos:position pos:line="23" pos:column="55"/></operator> <operator pos:line="23" pos:column="56">(<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="57">iconv_t<pos:position pos:line="23" pos:column="64"/></name><operator pos:line="23" pos:column="64">)<pos:position pos:line="23" pos:column="65"/></operator><operator pos:line="23" pos:column="65">-<pos:position pos:line="23" pos:column="66"/></operator><literal type="number" pos:line="23" pos:column="66">1<pos:position pos:line="23" pos:column="67"/></literal></expr>)<pos:position pos:line="23" pos:column="68"/></condition><then pos:line="23" pos:column="68"> <block pos:line="23" pos:column="69">{
				<expr_stmt><expr><call><name pos:line="24" pos:column="33">die<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><literal type="string" pos:line="24" pos:column="37">"iconv_open(%s,%s) failed, but needed:\n"<pos:position pos:line="24" pos:column="78"/></literal>
						<literal type="string" pos:line="25" pos:column="49">"    precomposed unicode is not supported.\n"<pos:position pos:line="25" pos:column="94"/></literal>
						<literal type="string" pos:line="26" pos:column="49">"    If you want to use decomposed unicode, run\n"<pos:position pos:line="26" pos:column="99"/></literal>
						<literal type="string" pos:line="27" pos:column="49">"    \"git config core.precomposeunicode false\"\n"<pos:position pos:line="27" pos:column="100"/></literal></expr></argument>,
						<argument><expr><name pos:line="28" pos:column="49">repo_encoding<pos:position pos:line="28" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="64">path_encoding<pos:position pos:line="28" pos:column="77"/></name></expr></argument>)<pos:position pos:line="28" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="79"/></expr_stmt>
			}<pos:position pos:line="29" pos:column="26"/></block></then> <else pos:line="29" pos:column="27">else <block pos:line="29" pos:column="32">{
				<decl_stmt><decl><type><name pos:line="30" pos:column="33">iconv_ibp<pos:position pos:line="30" pos:column="42"/></name></type>	<name pos:line="30" pos:column="49">cp<pos:position pos:line="30" pos:column="51"/></name> <init pos:line="30" pos:column="52">= <expr><operator pos:line="30" pos:column="54">(<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="55">iconv_ibp<pos:position pos:line="30" pos:column="64"/></name><operator pos:line="30" pos:column="64">)<pos:position pos:line="30" pos:column="65"/></operator><name><name pos:line="30" pos:column="65">res<pos:position pos:line="30" pos:column="68"/></name><operator pos:line="30" pos:column="68">-&gt;<pos:position pos:line="30" pos:column="73"/></operator><name pos:line="30" pos:column="70">d_name<pos:position pos:line="30" pos:column="76"/></name></name></expr></init></decl>;<pos:position pos:line="30" pos:column="77"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="31" pos:column="33">size_t<pos:position pos:line="31" pos:column="39"/></name></type> <name pos:line="31" pos:column="40">inleft<pos:position pos:line="31" pos:column="46"/></name> <init pos:line="31" pos:column="47">= <expr><name pos:line="31" pos:column="49">namelenz<pos:position pos:line="31" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="58"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="32" pos:column="33">char<pos:position pos:line="32" pos:column="37"/></name> <modifier pos:line="32" pos:column="38">*<pos:position pos:line="32" pos:column="39"/></modifier></type><name pos:line="32" pos:column="39">outpos<pos:position pos:line="32" pos:column="45"/></name> <init pos:line="32" pos:column="46">= <expr><operator pos:line="32" pos:column="48">&amp;<pos:position pos:line="32" pos:column="53"/></operator><name><name pos:line="32" pos:column="49">prec_dir<pos:position pos:line="32" pos:column="57"/></name><operator pos:line="32" pos:column="57">-&gt;<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="59">dirent_nfc<pos:position pos:line="32" pos:column="69"/></name><operator pos:line="32" pos:column="69">-&gt;<pos:position pos:line="32" pos:column="74"/></operator><name pos:line="32" pos:column="71">d_name<pos:position pos:line="32" pos:column="77"/></name><index pos:line="32" pos:column="77">[<expr><literal type="number" pos:line="32" pos:column="78">0<pos:position pos:line="32" pos:column="79"/></literal></expr>]<pos:position pos:line="32" pos:column="80"/></index></name></expr></init></decl>;<pos:position pos:line="32" pos:column="81"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="33" pos:column="33">size_t<pos:position pos:line="33" pos:column="39"/></name></type> <name pos:line="33" pos:column="40">outsz<pos:position pos:line="33" pos:column="45"/></name> <init pos:line="33" pos:column="46">= <expr><name><name pos:line="33" pos:column="48">prec_dir<pos:position pos:line="33" pos:column="56"/></name><operator pos:line="33" pos:column="56">-&gt;<pos:position pos:line="33" pos:column="61"/></operator><name pos:line="33" pos:column="58">dirent_nfc<pos:position pos:line="33" pos:column="68"/></name><operator pos:line="33" pos:column="68">-&gt;<pos:position pos:line="33" pos:column="73"/></operator><name pos:line="33" pos:column="70">max_name_len<pos:position pos:line="33" pos:column="82"/></name></name></expr></init></decl>;<pos:position pos:line="33" pos:column="83"/></decl_stmt>
				<expr_stmt><expr><name pos:line="34" pos:column="33">errno<pos:position pos:line="34" pos:column="38"/></name> <operator pos:line="34" pos:column="39">=<pos:position pos:line="34" pos:column="40"/></operator> <literal type="number" pos:line="34" pos:column="41">0<pos:position pos:line="34" pos:column="42"/></literal></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="35" pos:column="33">iconv<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name><name pos:line="35" pos:column="39">prec_dir<pos:position pos:line="35" pos:column="47"/></name><operator pos:line="35" pos:column="47">-&gt;<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="49">ic_precompose<pos:position pos:line="35" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="64">&amp;<pos:position pos:line="35" pos:column="69"/></operator><name pos:line="35" pos:column="65">cp<pos:position pos:line="35" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="69">&amp;<pos:position pos:line="35" pos:column="74"/></operator><name pos:line="35" pos:column="70">inleft<pos:position pos:line="35" pos:column="76"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="78">&amp;<pos:position pos:line="35" pos:column="83"/></operator><name pos:line="35" pos:column="79">outpos<pos:position pos:line="35" pos:column="85"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="87">&amp;<pos:position pos:line="35" pos:column="92"/></operator><name pos:line="35" pos:column="88">outsz<pos:position pos:line="35" pos:column="93"/></name></expr></argument>)<pos:position pos:line="35" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="95"/></expr_stmt>
				<if pos:line="36" pos:column="33">if <condition pos:line="36" pos:column="36">(<expr><name pos:line="36" pos:column="37">errno<pos:position pos:line="36" pos:column="42"/></name> <operator pos:line="36" pos:column="43">||<pos:position pos:line="36" pos:column="45"/></operator> <name pos:line="36" pos:column="46">inleft<pos:position pos:line="36" pos:column="52"/></name></expr>)<pos:position pos:line="36" pos:column="53"/></condition><then pos:line="36" pos:column="53"> <block pos:line="36" pos:column="54">{
					<comment type="block" pos:line="37" pos:column="41">/*
					 * iconv() failed and errno could be E2BIG, EILSEQ, EINVAL, EBADF
					 * MacOS X avoids illegal byte sequences.
					 * If they occur on a mounted drive (e.g. NFS) it is not worth to
					 * die() for that, but rather let the user see the original name
					*/</comment>
					<expr_stmt><expr><name pos:line="43" pos:column="41">namelenz<pos:position pos:line="43" pos:column="49"/></name> <operator pos:line="43" pos:column="50">=<pos:position pos:line="43" pos:column="51"/></operator> <literal type="number" pos:line="43" pos:column="52">0<pos:position pos:line="43" pos:column="53"/></literal></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt> <comment type="block" pos:line="43" pos:column="55">/* trigger strlcpy */</comment>
				}<pos:position pos:line="44" pos:column="34"/></block></then></if>
			}<pos:position pos:line="45" pos:column="26"/></block></else></if>
		}<pos:position pos:line="46" pos:column="18"/></block></then> <else pos:line="46" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="25">namelenz<pos:position pos:line="47" pos:column="33"/></name> <operator pos:line="47" pos:column="34">=<pos:position pos:line="47" pos:column="35"/></operator> <literal type="number" pos:line="47" pos:column="36">0<pos:position pos:line="47" pos:column="37"/></literal></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt></block></else></if>

		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><operator pos:line="49" pos:column="21">!<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">namelenz<pos:position pos:line="49" pos:column="30"/></name></expr>)<pos:position pos:line="49" pos:column="31"/></condition><then pos:line="49" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">strlcpy<pos:position pos:line="50" pos:column="32"/></name><argument_list pos:line="50" pos:column="32">(<argument><expr><name><name pos:line="50" pos:column="33">prec_dir<pos:position pos:line="50" pos:column="41"/></name><operator pos:line="50" pos:column="41">-&gt;<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="43">dirent_nfc<pos:position pos:line="50" pos:column="53"/></name><operator pos:line="50" pos:column="53">-&gt;<pos:position pos:line="50" pos:column="58"/></operator><name pos:line="50" pos:column="55">d_name<pos:position pos:line="50" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="63">res<pos:position pos:line="50" pos:column="66"/></name><operator pos:line="50" pos:column="66">-&gt;<pos:position pos:line="50" pos:column="71"/></operator><name pos:line="50" pos:column="68">d_name<pos:position pos:line="50" pos:column="74"/></name></name></expr></argument>,
							<argument><expr><name><name pos:line="51" pos:column="57">prec_dir<pos:position pos:line="51" pos:column="65"/></name><operator pos:line="51" pos:column="65">-&gt;<pos:position pos:line="51" pos:column="70"/></operator><name pos:line="51" pos:column="67">dirent_nfc<pos:position pos:line="51" pos:column="77"/></name><operator pos:line="51" pos:column="77">-&gt;<pos:position pos:line="51" pos:column="82"/></operator><name pos:line="51" pos:column="79">max_name_len<pos:position pos:line="51" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="93"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="53" pos:column="17">errno<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">=<pos:position pos:line="53" pos:column="24"/></operator> <name pos:line="53" pos:column="25">ret_errno<pos:position pos:line="53" pos:column="34"/></name></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt>
		<return pos:line="54" pos:column="17">return <expr><name><name pos:line="54" pos:column="24">prec_dir<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">-&gt;<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="34">dirent_nfc<pos:position pos:line="54" pos:column="44"/></name></name></expr>;<pos:position pos:line="54" pos:column="45"/></return>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if>
	<return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">NULL<pos:position pos:line="56" pos:column="20"/></name></expr>;<pos:position pos:line="56" pos:column="21"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

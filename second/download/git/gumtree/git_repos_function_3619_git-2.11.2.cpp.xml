<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3619_git-2.11.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">graph_output_collapsing_line<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">git_graph<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">graph<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="67">struct<pos:position pos:line="1" pos:column="73"/></name> <name pos:line="1" pos:column="74">strbuf<pos:position pos:line="1" pos:column="80"/></name></name> <modifier pos:line="1" pos:column="81">*<pos:position pos:line="1" pos:column="82"/></modifier></type><name pos:line="1" pos:column="82">sb<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">tmp_mapping<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">short<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">used_horizontal<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><literal type="number" pos:line="5" pos:column="33">0<pos:position pos:line="5" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">horizontal_edge<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><operator pos:line="6" pos:column="31">-<pos:position pos:line="6" pos:column="32"/></operator><literal type="number" pos:line="6" pos:column="32">1<pos:position pos:line="6" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">horizontal_edge_target<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><operator pos:line="7" pos:column="38">-<pos:position pos:line="7" pos:column="39"/></operator><literal type="number" pos:line="7" pos:column="39">1<pos:position pos:line="7" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>

	<comment type="block" pos:line="9" pos:column="9">/*
	 * Clear out the new_mapping array
	 */</comment>
	<for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">i<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></init> <condition><expr><name pos:line="12" pos:column="21">i<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&lt;<pos:position pos:line="12" pos:column="27"/></operator> <name><name pos:line="12" pos:column="25">graph<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">mapping_size<pos:position pos:line="12" pos:column="44"/></name></name></expr>;<pos:position pos:line="12" pos:column="45"/></condition> <incr><expr><name pos:line="12" pos:column="46">i<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">++<pos:position pos:line="12" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="50"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="17">graph<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">new_mapping<pos:position pos:line="13" pos:column="35"/></name><index pos:line="13" pos:column="35">[<expr><name pos:line="13" pos:column="36">i<pos:position pos:line="13" pos:column="37"/></name></expr>]<pos:position pos:line="13" pos:column="38"/></index></name> <operator pos:line="13" pos:column="39">=<pos:position pos:line="13" pos:column="40"/></operator> <operator pos:line="13" pos:column="41">-<pos:position pos:line="13" pos:column="42"/></operator><literal type="number" pos:line="13" pos:column="42">1<pos:position pos:line="13" pos:column="43"/></literal></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt></block></for>

	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></init> <condition><expr><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <name><name pos:line="15" pos:column="25">graph<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">mapping_size<pos:position pos:line="15" pos:column="44"/></name></name></expr>;<pos:position pos:line="15" pos:column="45"/></condition> <incr><expr><name pos:line="15" pos:column="46">i<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">++<pos:position pos:line="15" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="50"/></control> <block pos:line="15" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">int<pos:position pos:line="16" pos:column="20"/></name></type> <name pos:line="16" pos:column="21">target<pos:position pos:line="16" pos:column="27"/></name> <init pos:line="16" pos:column="28">= <expr><name><name pos:line="16" pos:column="30">graph<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">mapping<pos:position pos:line="16" pos:column="44"/></name><index pos:line="16" pos:column="44">[<expr><name pos:line="16" pos:column="45">i<pos:position pos:line="16" pos:column="46"/></name></expr>]<pos:position pos:line="16" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="16" pos:column="48"/></decl_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">target<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">&lt;<pos:position pos:line="17" pos:column="32"/></operator> <literal type="number" pos:line="17" pos:column="30">0<pos:position pos:line="17" pos:column="31"/></literal></expr>)<pos:position pos:line="17" pos:column="32"/></condition><then pos:line="17" pos:column="32">
			<block type="pseudo"><continue pos:line="18" pos:column="25">continue;<pos:position pos:line="18" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="20" pos:column="17">/*
		 * Since update_columns() always inserts the leftmost
		 * column first, each branch's target location should
		 * always be either its current location or to the left of
		 * its current location.
		 *
		 * We never have to move branches to the right.  This makes
		 * the graph much more legible, since whenever branches
		 * cross, only one is moving directions.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">assert<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">target<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">*<pos:position pos:line="30" pos:column="32"/></operator> <literal type="number" pos:line="30" pos:column="33">2<pos:position pos:line="30" pos:column="34"/></literal> <operator pos:line="30" pos:column="35">&lt;=<pos:position pos:line="30" pos:column="40"/></operator> <name pos:line="30" pos:column="38">i<pos:position pos:line="30" pos:column="39"/></name></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>

		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">target<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">*<pos:position pos:line="32" pos:column="29"/></operator> <literal type="number" pos:line="32" pos:column="30">2<pos:position pos:line="32" pos:column="31"/></literal> <operator pos:line="32" pos:column="32">==<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="35">i<pos:position pos:line="32" pos:column="36"/></name></expr>)<pos:position pos:line="32" pos:column="37"/></condition><then pos:line="32" pos:column="37"> <block pos:line="32" pos:column="38">{
			<comment type="block" pos:line="33" pos:column="25">/*
			 * This column is already in the
			 * correct place
			 */</comment>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">assert<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name><name pos:line="37" pos:column="32">graph<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">new_mapping<pos:position pos:line="37" pos:column="50"/></name><index pos:line="37" pos:column="50">[<expr><name pos:line="37" pos:column="51">i<pos:position pos:line="37" pos:column="52"/></name></expr>]<pos:position pos:line="37" pos:column="53"/></index></name> <operator pos:line="37" pos:column="54">==<pos:position pos:line="37" pos:column="56"/></operator> <operator pos:line="37" pos:column="57">-<pos:position pos:line="37" pos:column="58"/></operator><literal type="number" pos:line="37" pos:column="58">1<pos:position pos:line="37" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="38" pos:column="25">graph<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">new_mapping<pos:position pos:line="38" pos:column="43"/></name><index pos:line="38" pos:column="43">[<expr><name pos:line="38" pos:column="44">i<pos:position pos:line="38" pos:column="45"/></name></expr>]<pos:position pos:line="38" pos:column="46"/></index></name> <operator pos:line="38" pos:column="47">=<pos:position pos:line="38" pos:column="48"/></operator> <name pos:line="38" pos:column="49">target<pos:position pos:line="38" pos:column="55"/></name></expr>;<pos:position pos:line="38" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></then> <elseif pos:line="39" pos:column="19">else <if pos:line="39" pos:column="24">if <condition pos:line="39" pos:column="27">(<expr><name><name pos:line="39" pos:column="28">graph<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">-&gt;<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="35">new_mapping<pos:position pos:line="39" pos:column="46"/></name><index pos:line="39" pos:column="46">[<expr><name pos:line="39" pos:column="47">i<pos:position pos:line="39" pos:column="48"/></name> <operator pos:line="39" pos:column="49">-<pos:position pos:line="39" pos:column="50"/></operator> <literal type="number" pos:line="39" pos:column="51">1<pos:position pos:line="39" pos:column="52"/></literal></expr>]<pos:position pos:line="39" pos:column="53"/></index></name> <operator pos:line="39" pos:column="54">&lt;<pos:position pos:line="39" pos:column="58"/></operator> <literal type="number" pos:line="39" pos:column="56">0<pos:position pos:line="39" pos:column="57"/></literal></expr>)<pos:position pos:line="39" pos:column="58"/></condition><then pos:line="39" pos:column="58"> <block pos:line="39" pos:column="59">{
			<comment type="block" pos:line="40" pos:column="25">/*
			 * Nothing is to the left.
			 * Move to the left by one
			 */</comment>
			<expr_stmt><expr><name><name pos:line="44" pos:column="25">graph<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">-&gt;<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="32">new_mapping<pos:position pos:line="44" pos:column="43"/></name><index pos:line="44" pos:column="43">[<expr><name pos:line="44" pos:column="44">i<pos:position pos:line="44" pos:column="45"/></name> <operator pos:line="44" pos:column="46">-<pos:position pos:line="44" pos:column="47"/></operator> <literal type="number" pos:line="44" pos:column="48">1<pos:position pos:line="44" pos:column="49"/></literal></expr>]<pos:position pos:line="44" pos:column="50"/></index></name> <operator pos:line="44" pos:column="51">=<pos:position pos:line="44" pos:column="52"/></operator> <name pos:line="44" pos:column="53">target<pos:position pos:line="44" pos:column="59"/></name></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt>
			<comment type="block" pos:line="45" pos:column="25">/*
			 * If there isn't already an edge moving horizontally
			 * select this one.
			 */</comment>
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><name pos:line="49" pos:column="29">horizontal_edge<pos:position pos:line="49" pos:column="44"/></name> <operator pos:line="49" pos:column="45">==<pos:position pos:line="49" pos:column="47"/></operator> <operator pos:line="49" pos:column="48">-<pos:position pos:line="49" pos:column="49"/></operator><literal type="number" pos:line="49" pos:column="49">1<pos:position pos:line="49" pos:column="50"/></literal></expr>)<pos:position pos:line="49" pos:column="51"/></condition><then pos:line="49" pos:column="51"> <block pos:line="49" pos:column="52">{
				<decl_stmt><decl><type><name pos:line="50" pos:column="33">int<pos:position pos:line="50" pos:column="36"/></name></type> <name pos:line="50" pos:column="37">j<pos:position pos:line="50" pos:column="38"/></name></decl>;<pos:position pos:line="50" pos:column="39"/></decl_stmt>
				<expr_stmt><expr><name pos:line="51" pos:column="33">horizontal_edge<pos:position pos:line="51" pos:column="48"/></name> <operator pos:line="51" pos:column="49">=<pos:position pos:line="51" pos:column="50"/></operator> <name pos:line="51" pos:column="51">i<pos:position pos:line="51" pos:column="52"/></name></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><name pos:line="52" pos:column="33">horizontal_edge_target<pos:position pos:line="52" pos:column="55"/></name> <operator pos:line="52" pos:column="56">=<pos:position pos:line="52" pos:column="57"/></operator> <name pos:line="52" pos:column="58">target<pos:position pos:line="52" pos:column="64"/></name></expr>;<pos:position pos:line="52" pos:column="65"/></expr_stmt>
				<comment type="block" pos:line="53" pos:column="33">/*
				 * The variable target is the index of the graph
				 * column, and therefore target*2+3 is the
				 * actual screen column of the first horizontal
				 * line.
				 */</comment>
				<for pos:line="59" pos:column="33">for <control pos:line="59" pos:column="37">(<init><expr><name pos:line="59" pos:column="38">j<pos:position pos:line="59" pos:column="39"/></name> <operator pos:line="59" pos:column="40">=<pos:position pos:line="59" pos:column="41"/></operator> <operator pos:line="59" pos:column="42">(<pos:position pos:line="59" pos:column="43"/></operator><name pos:line="59" pos:column="43">target<pos:position pos:line="59" pos:column="49"/></name> <operator pos:line="59" pos:column="50">*<pos:position pos:line="59" pos:column="51"/></operator> <literal type="number" pos:line="59" pos:column="52">2<pos:position pos:line="59" pos:column="53"/></literal><operator pos:line="59" pos:column="53">)<pos:position pos:line="59" pos:column="54"/></operator><operator pos:line="59" pos:column="54">+<pos:position pos:line="59" pos:column="55"/></operator><literal type="number" pos:line="59" pos:column="55">3<pos:position pos:line="59" pos:column="56"/></literal></expr>;<pos:position pos:line="59" pos:column="57"/></init> <condition><expr><name pos:line="59" pos:column="58">j<pos:position pos:line="59" pos:column="59"/></name> <operator pos:line="59" pos:column="60">&lt;<pos:position pos:line="59" pos:column="64"/></operator> <operator pos:line="59" pos:column="62">(<pos:position pos:line="59" pos:column="63"/></operator><name pos:line="59" pos:column="63">i<pos:position pos:line="59" pos:column="64"/></name> <operator pos:line="59" pos:column="65">-<pos:position pos:line="59" pos:column="66"/></operator> <literal type="number" pos:line="59" pos:column="67">2<pos:position pos:line="59" pos:column="68"/></literal><operator pos:line="59" pos:column="68">)<pos:position pos:line="59" pos:column="69"/></operator></expr>;<pos:position pos:line="59" pos:column="70"/></condition> <incr><expr><name pos:line="59" pos:column="71">j<pos:position pos:line="59" pos:column="72"/></name> <operator pos:line="59" pos:column="73">+=<pos:position pos:line="59" pos:column="75"/></operator> <literal type="number" pos:line="59" pos:column="76">2<pos:position pos:line="59" pos:column="77"/></literal></expr></incr>)<pos:position pos:line="59" pos:column="78"/></control>
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="41">graph<pos:position pos:line="60" pos:column="46"/></name><operator pos:line="60" pos:column="46">-&gt;<pos:position pos:line="60" pos:column="51"/></operator><name pos:line="60" pos:column="48">new_mapping<pos:position pos:line="60" pos:column="59"/></name><index pos:line="60" pos:column="59">[<expr><name pos:line="60" pos:column="60">j<pos:position pos:line="60" pos:column="61"/></name></expr>]<pos:position pos:line="60" pos:column="62"/></index></name> <operator pos:line="60" pos:column="63">=<pos:position pos:line="60" pos:column="64"/></operator> <name pos:line="60" pos:column="65">target<pos:position pos:line="60" pos:column="71"/></name></expr>;<pos:position pos:line="60" pos:column="72"/></expr_stmt></block></for>
			}<pos:position pos:line="61" pos:column="26"/></block></then></if>
		}<pos:position pos:line="62" pos:column="18"/></block></then></if></elseif> <elseif pos:line="62" pos:column="19">else <if pos:line="62" pos:column="24">if <condition pos:line="62" pos:column="27">(<expr><name><name pos:line="62" pos:column="28">graph<pos:position pos:line="62" pos:column="33"/></name><operator pos:line="62" pos:column="33">-&gt;<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="35">new_mapping<pos:position pos:line="62" pos:column="46"/></name><index pos:line="62" pos:column="46">[<expr><name pos:line="62" pos:column="47">i<pos:position pos:line="62" pos:column="48"/></name> <operator pos:line="62" pos:column="49">-<pos:position pos:line="62" pos:column="50"/></operator> <literal type="number" pos:line="62" pos:column="51">1<pos:position pos:line="62" pos:column="52"/></literal></expr>]<pos:position pos:line="62" pos:column="53"/></index></name> <operator pos:line="62" pos:column="54">==<pos:position pos:line="62" pos:column="56"/></operator> <name pos:line="62" pos:column="57">target<pos:position pos:line="62" pos:column="63"/></name></expr>)<pos:position pos:line="62" pos:column="64"/></condition><then pos:line="62" pos:column="64"> <block pos:line="62" pos:column="65">{
			<comment type="block" pos:line="63" pos:column="25">/*
			 * There is a branch line to our left
			 * already, and it is our target.  We
			 * combine with this line, since we share
			 * the same parent commit.
			 *
			 * We don't have to add anything to the
			 * output or new_mapping, since the
			 * existing branch line has already taken
			 * care of it.
			 */</comment>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if></elseif> <else pos:line="74" pos:column="19">else <block pos:line="74" pos:column="24">{
			<comment type="block" pos:line="75" pos:column="25">/*
			 * There is a branch line to our left,
			 * but it isn't our target.  We need to
			 * cross over it.
			 *
			 * The space just to the left of this
			 * branch should always be empty.
			 *
			 * The branch to the left of that space
			 * should be our eventual target.
			 */</comment>
			<expr_stmt><expr><call><name pos:line="86" pos:column="25">assert<pos:position pos:line="86" pos:column="31"/></name><argument_list pos:line="86" pos:column="31">(<argument><expr><name><name pos:line="86" pos:column="32">graph<pos:position pos:line="86" pos:column="37"/></name><operator pos:line="86" pos:column="37">-&gt;<pos:position pos:line="86" pos:column="42"/></operator><name pos:line="86" pos:column="39">new_mapping<pos:position pos:line="86" pos:column="50"/></name><index pos:line="86" pos:column="50">[<expr><name pos:line="86" pos:column="51">i<pos:position pos:line="86" pos:column="52"/></name> <operator pos:line="86" pos:column="53">-<pos:position pos:line="86" pos:column="54"/></operator> <literal type="number" pos:line="86" pos:column="55">1<pos:position pos:line="86" pos:column="56"/></literal></expr>]<pos:position pos:line="86" pos:column="57"/></index></name> <operator pos:line="86" pos:column="58">&gt;<pos:position pos:line="86" pos:column="62"/></operator> <name pos:line="86" pos:column="60">target<pos:position pos:line="86" pos:column="66"/></name></expr></argument>)<pos:position pos:line="86" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="87" pos:column="25">assert<pos:position pos:line="87" pos:column="31"/></name><argument_list pos:line="87" pos:column="31">(<argument><expr><name><name pos:line="87" pos:column="32">graph<pos:position pos:line="87" pos:column="37"/></name><operator pos:line="87" pos:column="37">-&gt;<pos:position pos:line="87" pos:column="42"/></operator><name pos:line="87" pos:column="39">new_mapping<pos:position pos:line="87" pos:column="50"/></name><index pos:line="87" pos:column="50">[<expr><name pos:line="87" pos:column="51">i<pos:position pos:line="87" pos:column="52"/></name> <operator pos:line="87" pos:column="53">-<pos:position pos:line="87" pos:column="54"/></operator> <literal type="number" pos:line="87" pos:column="55">2<pos:position pos:line="87" pos:column="56"/></literal></expr>]<pos:position pos:line="87" pos:column="57"/></index></name> <operator pos:line="87" pos:column="58">&lt;<pos:position pos:line="87" pos:column="62"/></operator> <literal type="number" pos:line="87" pos:column="60">0<pos:position pos:line="87" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="88" pos:column="25">assert<pos:position pos:line="88" pos:column="31"/></name><argument_list pos:line="88" pos:column="31">(<argument><expr><name><name pos:line="88" pos:column="32">graph<pos:position pos:line="88" pos:column="37"/></name><operator pos:line="88" pos:column="37">-&gt;<pos:position pos:line="88" pos:column="42"/></operator><name pos:line="88" pos:column="39">new_mapping<pos:position pos:line="88" pos:column="50"/></name><index pos:line="88" pos:column="50">[<expr><name pos:line="88" pos:column="51">i<pos:position pos:line="88" pos:column="52"/></name> <operator pos:line="88" pos:column="53">-<pos:position pos:line="88" pos:column="54"/></operator> <literal type="number" pos:line="88" pos:column="55">3<pos:position pos:line="88" pos:column="56"/></literal></expr>]<pos:position pos:line="88" pos:column="57"/></index></name> <operator pos:line="88" pos:column="58">==<pos:position pos:line="88" pos:column="60"/></operator> <name pos:line="88" pos:column="61">target<pos:position pos:line="88" pos:column="67"/></name></expr></argument>)<pos:position pos:line="88" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="89" pos:column="25">graph<pos:position pos:line="89" pos:column="30"/></name><operator pos:line="89" pos:column="30">-&gt;<pos:position pos:line="89" pos:column="35"/></operator><name pos:line="89" pos:column="32">new_mapping<pos:position pos:line="89" pos:column="43"/></name><index pos:line="89" pos:column="43">[<expr><name pos:line="89" pos:column="44">i<pos:position pos:line="89" pos:column="45"/></name> <operator pos:line="89" pos:column="46">-<pos:position pos:line="89" pos:column="47"/></operator> <literal type="number" pos:line="89" pos:column="48">2<pos:position pos:line="89" pos:column="49"/></literal></expr>]<pos:position pos:line="89" pos:column="50"/></index></name> <operator pos:line="89" pos:column="51">=<pos:position pos:line="89" pos:column="52"/></operator> <name pos:line="89" pos:column="53">target<pos:position pos:line="89" pos:column="59"/></name></expr>;<pos:position pos:line="89" pos:column="60"/></expr_stmt>
			<comment type="block" pos:line="90" pos:column="25">/*
			 * Mark this branch as the horizontal edge to
			 * prevent any other edges from moving
			 * horizontally.
			 */</comment>
			<if pos:line="95" pos:column="25">if <condition pos:line="95" pos:column="28">(<expr><name pos:line="95" pos:column="29">horizontal_edge<pos:position pos:line="95" pos:column="44"/></name> <operator pos:line="95" pos:column="45">==<pos:position pos:line="95" pos:column="47"/></operator> <operator pos:line="95" pos:column="48">-<pos:position pos:line="95" pos:column="49"/></operator><literal type="number" pos:line="95" pos:column="49">1<pos:position pos:line="95" pos:column="50"/></literal></expr>)<pos:position pos:line="95" pos:column="51"/></condition><then pos:line="95" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="33">horizontal_edge<pos:position pos:line="96" pos:column="48"/></name> <operator pos:line="96" pos:column="49">=<pos:position pos:line="96" pos:column="50"/></operator> <name pos:line="96" pos:column="51">i<pos:position pos:line="96" pos:column="52"/></name></expr>;<pos:position pos:line="96" pos:column="53"/></expr_stmt></block></then></if>
		}<pos:position pos:line="97" pos:column="18"/></block></else></if>
	}<pos:position pos:line="98" pos:column="10"/></block></for>

	<comment type="block" pos:line="100" pos:column="9">/*
	 * The new mapping may be 1 smaller than the old mapping
	 */</comment>
	<if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name><name pos:line="103" pos:column="13">graph<pos:position pos:line="103" pos:column="18"/></name><operator pos:line="103" pos:column="18">-&gt;<pos:position pos:line="103" pos:column="23"/></operator><name pos:line="103" pos:column="20">new_mapping<pos:position pos:line="103" pos:column="31"/></name><index pos:line="103" pos:column="31">[<expr><name><name pos:line="103" pos:column="32">graph<pos:position pos:line="103" pos:column="37"/></name><operator pos:line="103" pos:column="37">-&gt;<pos:position pos:line="103" pos:column="42"/></operator><name pos:line="103" pos:column="39">mapping_size<pos:position pos:line="103" pos:column="51"/></name></name> <operator pos:line="103" pos:column="52">-<pos:position pos:line="103" pos:column="53"/></operator> <literal type="number" pos:line="103" pos:column="54">1<pos:position pos:line="103" pos:column="55"/></literal></expr>]<pos:position pos:line="103" pos:column="56"/></index></name> <operator pos:line="103" pos:column="57">&lt;<pos:position pos:line="103" pos:column="61"/></operator> <literal type="number" pos:line="103" pos:column="59">0<pos:position pos:line="103" pos:column="60"/></literal></expr>)<pos:position pos:line="103" pos:column="61"/></condition><then pos:line="103" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="104" pos:column="17">graph<pos:position pos:line="104" pos:column="22"/></name><operator pos:line="104" pos:column="22">-&gt;<pos:position pos:line="104" pos:column="27"/></operator><name pos:line="104" pos:column="24">mapping_size<pos:position pos:line="104" pos:column="36"/></name></name><operator pos:line="104" pos:column="36">--<pos:position pos:line="104" pos:column="38"/></operator></expr>;<pos:position pos:line="104" pos:column="39"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="106" pos:column="9">/*
	 * Output out a line based on the new mapping info
	 */</comment>
	<for pos:line="109" pos:column="9">for <control pos:line="109" pos:column="13">(<init><expr><name pos:line="109" pos:column="14">i<pos:position pos:line="109" pos:column="15"/></name> <operator pos:line="109" pos:column="16">=<pos:position pos:line="109" pos:column="17"/></operator> <literal type="number" pos:line="109" pos:column="18">0<pos:position pos:line="109" pos:column="19"/></literal></expr>;<pos:position pos:line="109" pos:column="20"/></init> <condition><expr><name pos:line="109" pos:column="21">i<pos:position pos:line="109" pos:column="22"/></name> <operator pos:line="109" pos:column="23">&lt;<pos:position pos:line="109" pos:column="27"/></operator> <name><name pos:line="109" pos:column="25">graph<pos:position pos:line="109" pos:column="30"/></name><operator pos:line="109" pos:column="30">-&gt;<pos:position pos:line="109" pos:column="35"/></operator><name pos:line="109" pos:column="32">mapping_size<pos:position pos:line="109" pos:column="44"/></name></name></expr>;<pos:position pos:line="109" pos:column="45"/></condition> <incr><expr><name pos:line="109" pos:column="46">i<pos:position pos:line="109" pos:column="47"/></name><operator pos:line="109" pos:column="47">++<pos:position pos:line="109" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="109" pos:column="50"/></control> <block pos:line="109" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="110" pos:column="17">int<pos:position pos:line="110" pos:column="20"/></name></type> <name pos:line="110" pos:column="21">target<pos:position pos:line="110" pos:column="27"/></name> <init pos:line="110" pos:column="28">= <expr><name><name pos:line="110" pos:column="30">graph<pos:position pos:line="110" pos:column="35"/></name><operator pos:line="110" pos:column="35">-&gt;<pos:position pos:line="110" pos:column="40"/></operator><name pos:line="110" pos:column="37">new_mapping<pos:position pos:line="110" pos:column="48"/></name><index pos:line="110" pos:column="48">[<expr><name pos:line="110" pos:column="49">i<pos:position pos:line="110" pos:column="50"/></name></expr>]<pos:position pos:line="110" pos:column="51"/></index></name></expr></init></decl>;<pos:position pos:line="110" pos:column="52"/></decl_stmt>
		<if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><name pos:line="111" pos:column="21">target<pos:position pos:line="111" pos:column="27"/></name> <operator pos:line="111" pos:column="28">&lt;<pos:position pos:line="111" pos:column="32"/></operator> <literal type="number" pos:line="111" pos:column="30">0<pos:position pos:line="111" pos:column="31"/></literal></expr>)<pos:position pos:line="111" pos:column="32"/></condition><then pos:line="111" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="112" pos:column="25">strbuf_addch<pos:position pos:line="112" pos:column="37"/></name><argument_list pos:line="112" pos:column="37">(<argument><expr><name pos:line="112" pos:column="38">sb<pos:position pos:line="112" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="112" pos:column="42">' '<pos:position pos:line="112" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="47"/></expr_stmt></block></then>
		<elseif pos:line="113" pos:column="17">else <if pos:line="113" pos:column="22">if <condition pos:line="113" pos:column="25">(<expr><name pos:line="113" pos:column="26">target<pos:position pos:line="113" pos:column="32"/></name> <operator pos:line="113" pos:column="33">*<pos:position pos:line="113" pos:column="34"/></operator> <literal type="number" pos:line="113" pos:column="35">2<pos:position pos:line="113" pos:column="36"/></literal> <operator pos:line="113" pos:column="37">==<pos:position pos:line="113" pos:column="39"/></operator> <name pos:line="113" pos:column="40">i<pos:position pos:line="113" pos:column="41"/></name></expr>)<pos:position pos:line="113" pos:column="42"/></condition><then pos:line="113" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="25">strbuf_write_column<pos:position pos:line="114" pos:column="44"/></name><argument_list pos:line="114" pos:column="44">(<argument><expr><name pos:line="114" pos:column="45">sb<pos:position pos:line="114" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="49">&amp;<pos:position pos:line="114" pos:column="54"/></operator><name><name pos:line="114" pos:column="50">graph<pos:position pos:line="114" pos:column="55"/></name><operator pos:line="114" pos:column="55">-&gt;<pos:position pos:line="114" pos:column="60"/></operator><name pos:line="114" pos:column="57">new_columns<pos:position pos:line="114" pos:column="68"/></name><index pos:line="114" pos:column="68">[<expr><name pos:line="114" pos:column="69">target<pos:position pos:line="114" pos:column="75"/></name></expr>]<pos:position pos:line="114" pos:column="76"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="114" pos:column="78">'|'<pos:position pos:line="114" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="83"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="115" pos:column="17">else <if pos:line="115" pos:column="22">if <condition pos:line="115" pos:column="25">(<expr><name pos:line="115" pos:column="26">target<pos:position pos:line="115" pos:column="32"/></name> <operator pos:line="115" pos:column="33">==<pos:position pos:line="115" pos:column="35"/></operator> <name pos:line="115" pos:column="36">horizontal_edge_target<pos:position pos:line="115" pos:column="58"/></name> <operator pos:line="115" pos:column="59">&amp;&amp;<pos:position pos:line="115" pos:column="69"/></operator>
			 <name pos:line="116" pos:column="26">i<pos:position pos:line="116" pos:column="27"/></name> <operator pos:line="116" pos:column="28">!=<pos:position pos:line="116" pos:column="30"/></operator> <name pos:line="116" pos:column="31">horizontal_edge<pos:position pos:line="116" pos:column="46"/></name> <operator pos:line="116" pos:column="47">-<pos:position pos:line="116" pos:column="48"/></operator> <literal type="number" pos:line="116" pos:column="49">1<pos:position pos:line="116" pos:column="50"/></literal></expr>)<pos:position pos:line="116" pos:column="51"/></condition><then pos:line="116" pos:column="51"> <block pos:line="116" pos:column="52">{
				<comment type="block" pos:line="117" pos:column="33">/*
				 * Set the mappings for all but the
				 * first segment to -1 so that they
				 * won't continue into the next line.
				 */</comment>
				<if pos:line="122" pos:column="33">if <condition pos:line="122" pos:column="36">(<expr><name pos:line="122" pos:column="37">i<pos:position pos:line="122" pos:column="38"/></name> <operator pos:line="122" pos:column="39">!=<pos:position pos:line="122" pos:column="41"/></operator> <operator pos:line="122" pos:column="42">(<pos:position pos:line="122" pos:column="43"/></operator><name pos:line="122" pos:column="43">target<pos:position pos:line="122" pos:column="49"/></name> <operator pos:line="122" pos:column="50">*<pos:position pos:line="122" pos:column="51"/></operator> <literal type="number" pos:line="122" pos:column="52">2<pos:position pos:line="122" pos:column="53"/></literal><operator pos:line="122" pos:column="53">)<pos:position pos:line="122" pos:column="54"/></operator><operator pos:line="122" pos:column="54">+<pos:position pos:line="122" pos:column="55"/></operator><literal type="number" pos:line="122" pos:column="55">3<pos:position pos:line="122" pos:column="56"/></literal></expr>)<pos:position pos:line="122" pos:column="57"/></condition><then pos:line="122" pos:column="57">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="123" pos:column="41">graph<pos:position pos:line="123" pos:column="46"/></name><operator pos:line="123" pos:column="46">-&gt;<pos:position pos:line="123" pos:column="51"/></operator><name pos:line="123" pos:column="48">new_mapping<pos:position pos:line="123" pos:column="59"/></name><index pos:line="123" pos:column="59">[<expr><name pos:line="123" pos:column="60">i<pos:position pos:line="123" pos:column="61"/></name></expr>]<pos:position pos:line="123" pos:column="62"/></index></name> <operator pos:line="123" pos:column="63">=<pos:position pos:line="123" pos:column="64"/></operator> <operator pos:line="123" pos:column="65">-<pos:position pos:line="123" pos:column="66"/></operator><literal type="number" pos:line="123" pos:column="66">1<pos:position pos:line="123" pos:column="67"/></literal></expr>;<pos:position pos:line="123" pos:column="68"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="124" pos:column="33">used_horizontal<pos:position pos:line="124" pos:column="48"/></name> <operator pos:line="124" pos:column="49">=<pos:position pos:line="124" pos:column="50"/></operator> <literal type="number" pos:line="124" pos:column="51">1<pos:position pos:line="124" pos:column="52"/></literal></expr>;<pos:position pos:line="124" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="125" pos:column="25">strbuf_write_column<pos:position pos:line="125" pos:column="44"/></name><argument_list pos:line="125" pos:column="44">(<argument><expr><name pos:line="125" pos:column="45">sb<pos:position pos:line="125" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="49">&amp;<pos:position pos:line="125" pos:column="54"/></operator><name><name pos:line="125" pos:column="50">graph<pos:position pos:line="125" pos:column="55"/></name><operator pos:line="125" pos:column="55">-&gt;<pos:position pos:line="125" pos:column="60"/></operator><name pos:line="125" pos:column="57">new_columns<pos:position pos:line="125" pos:column="68"/></name><index pos:line="125" pos:column="68">[<expr><name pos:line="125" pos:column="69">target<pos:position pos:line="125" pos:column="75"/></name></expr>]<pos:position pos:line="125" pos:column="76"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="125" pos:column="78">'_'<pos:position pos:line="125" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="83"/></expr_stmt>
		}<pos:position pos:line="126" pos:column="18"/></block></then></if></elseif> <else pos:line="126" pos:column="19">else <block pos:line="126" pos:column="24">{
			<if pos:line="127" pos:column="25">if <condition pos:line="127" pos:column="28">(<expr><name pos:line="127" pos:column="29">used_horizontal<pos:position pos:line="127" pos:column="44"/></name> <operator pos:line="127" pos:column="45">&amp;&amp;<pos:position pos:line="127" pos:column="55"/></operator> <name pos:line="127" pos:column="48">i<pos:position pos:line="127" pos:column="49"/></name> <operator pos:line="127" pos:column="50">&lt;<pos:position pos:line="127" pos:column="54"/></operator> <name pos:line="127" pos:column="52">horizontal_edge<pos:position pos:line="127" pos:column="67"/></name></expr>)<pos:position pos:line="127" pos:column="68"/></condition><then pos:line="127" pos:column="68">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="128" pos:column="33">graph<pos:position pos:line="128" pos:column="38"/></name><operator pos:line="128" pos:column="38">-&gt;<pos:position pos:line="128" pos:column="43"/></operator><name pos:line="128" pos:column="40">new_mapping<pos:position pos:line="128" pos:column="51"/></name><index pos:line="128" pos:column="51">[<expr><name pos:line="128" pos:column="52">i<pos:position pos:line="128" pos:column="53"/></name></expr>]<pos:position pos:line="128" pos:column="54"/></index></name> <operator pos:line="128" pos:column="55">=<pos:position pos:line="128" pos:column="56"/></operator> <operator pos:line="128" pos:column="57">-<pos:position pos:line="128" pos:column="58"/></operator><literal type="number" pos:line="128" pos:column="58">1<pos:position pos:line="128" pos:column="59"/></literal></expr>;<pos:position pos:line="128" pos:column="60"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="129" pos:column="25">strbuf_write_column<pos:position pos:line="129" pos:column="44"/></name><argument_list pos:line="129" pos:column="44">(<argument><expr><name pos:line="129" pos:column="45">sb<pos:position pos:line="129" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="129" pos:column="49">&amp;<pos:position pos:line="129" pos:column="54"/></operator><name><name pos:line="129" pos:column="50">graph<pos:position pos:line="129" pos:column="55"/></name><operator pos:line="129" pos:column="55">-&gt;<pos:position pos:line="129" pos:column="60"/></operator><name pos:line="129" pos:column="57">new_columns<pos:position pos:line="129" pos:column="68"/></name><index pos:line="129" pos:column="68">[<expr><name pos:line="129" pos:column="69">target<pos:position pos:line="129" pos:column="75"/></name></expr>]<pos:position pos:line="129" pos:column="76"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="129" pos:column="78">'/'<pos:position pos:line="129" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="83"/></expr_stmt>

		}<pos:position pos:line="131" pos:column="18"/></block></else></if>
	}<pos:position pos:line="132" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="134" pos:column="9">graph_pad_horizontally<pos:position pos:line="134" pos:column="31"/></name><argument_list pos:line="134" pos:column="31">(<argument><expr><name pos:line="134" pos:column="32">graph<pos:position pos:line="134" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="39">sb<pos:position pos:line="134" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="43">graph<pos:position pos:line="134" pos:column="48"/></name><operator pos:line="134" pos:column="48">-&gt;<pos:position pos:line="134" pos:column="53"/></operator><name pos:line="134" pos:column="50">mapping_size<pos:position pos:line="134" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="134" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="64"/></expr_stmt>

	<comment type="block" pos:line="136" pos:column="9">/*
	 * Swap mapping and new_mapping
	 */</comment>
	<expr_stmt><expr><name pos:line="139" pos:column="9">tmp_mapping<pos:position pos:line="139" pos:column="20"/></name> <operator pos:line="139" pos:column="21">=<pos:position pos:line="139" pos:column="22"/></operator> <name><name pos:line="139" pos:column="23">graph<pos:position pos:line="139" pos:column="28"/></name><operator pos:line="139" pos:column="28">-&gt;<pos:position pos:line="139" pos:column="33"/></operator><name pos:line="139" pos:column="30">mapping<pos:position pos:line="139" pos:column="37"/></name></name></expr>;<pos:position pos:line="139" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="140" pos:column="9">graph<pos:position pos:line="140" pos:column="14"/></name><operator pos:line="140" pos:column="14">-&gt;<pos:position pos:line="140" pos:column="19"/></operator><name pos:line="140" pos:column="16">mapping<pos:position pos:line="140" pos:column="23"/></name></name> <operator pos:line="140" pos:column="24">=<pos:position pos:line="140" pos:column="25"/></operator> <name><name pos:line="140" pos:column="26">graph<pos:position pos:line="140" pos:column="31"/></name><operator pos:line="140" pos:column="31">-&gt;<pos:position pos:line="140" pos:column="36"/></operator><name pos:line="140" pos:column="33">new_mapping<pos:position pos:line="140" pos:column="44"/></name></name></expr>;<pos:position pos:line="140" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="141" pos:column="9">graph<pos:position pos:line="141" pos:column="14"/></name><operator pos:line="141" pos:column="14">-&gt;<pos:position pos:line="141" pos:column="19"/></operator><name pos:line="141" pos:column="16">new_mapping<pos:position pos:line="141" pos:column="27"/></name></name> <operator pos:line="141" pos:column="28">=<pos:position pos:line="141" pos:column="29"/></operator> <name pos:line="141" pos:column="30">tmp_mapping<pos:position pos:line="141" pos:column="41"/></name></expr>;<pos:position pos:line="141" pos:column="42"/></expr_stmt>

	<comment type="block" pos:line="143" pos:column="9">/*
	 * If graph-&gt;mapping indicates that all of the branch lines
	 * are already in the correct positions, we are done.
	 * Otherwise, we need to collapse some branch lines together.
	 */</comment>
	<if pos:line="148" pos:column="9">if <condition pos:line="148" pos:column="12">(<expr><call><name pos:line="148" pos:column="13">graph_is_mapping_correct<pos:position pos:line="148" pos:column="37"/></name><argument_list pos:line="148" pos:column="37">(<argument><expr><name pos:line="148" pos:column="38">graph<pos:position pos:line="148" pos:column="43"/></name></expr></argument>)<pos:position pos:line="148" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="148" pos:column="45"/></condition><then pos:line="148" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="149" pos:column="17">graph_update_state<pos:position pos:line="149" pos:column="35"/></name><argument_list pos:line="149" pos:column="35">(<argument><expr><name pos:line="149" pos:column="36">graph<pos:position pos:line="149" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="43">GRAPH_PADDING<pos:position pos:line="149" pos:column="56"/></name></expr></argument>)<pos:position pos:line="149" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="58"/></expr_stmt></block></then></if>
}<pos:position pos:line="150" pos:column="2"/></block></function></unit>

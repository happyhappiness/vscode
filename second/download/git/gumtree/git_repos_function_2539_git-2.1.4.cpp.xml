<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2539_git-2.1.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">print_columns<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">string_list<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">list<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">unsigned<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">colopts<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
		   <parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name><name pos:line="2" pos:column="26">struct<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">column_options<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">opts<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">column_options<pos:position pos:line="4" pos:column="30"/></name></name></type> <name pos:line="4" pos:column="31">nopts<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name><name pos:line="6" pos:column="14">list<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">nr<pos:position pos:line="6" pos:column="22"/></name></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
		<block type="pseudo"><return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">assert<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">colopts<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">&amp;<pos:position pos:line="8" pos:column="30"/></operator> <name pos:line="8" pos:column="27">COL_ENABLE_MASK<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">)<pos:position pos:line="8" pos:column="43"/></operator> <operator pos:line="8" pos:column="44">!=<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="47">COL_AUTO<pos:position pos:line="8" pos:column="55"/></name></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="57"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">memset<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><operator pos:line="10" pos:column="16">&amp;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="17">nopts<pos:position pos:line="10" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="27">sizeof<argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">nopts<pos:position pos:line="10" pos:column="39"/></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">nopts<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">.<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">indent<pos:position pos:line="11" pos:column="21"/></name></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="11" pos:column="24">opts<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">&amp;&amp;<pos:position pos:line="11" pos:column="39"/></operator> <name><name pos:line="11" pos:column="32">opts<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">indent<pos:position pos:line="11" pos:column="44"/></name></name></expr> ?<pos:position pos:line="11" pos:column="46"/></condition><then pos:line="11" pos:column="46"> <expr><name><name pos:line="11" pos:column="47">opts<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">-&gt;<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="53">indent<pos:position pos:line="11" pos:column="59"/></name></name></expr> <pos:position pos:line="11" pos:column="60"/></then><else pos:line="11" pos:column="60">: <expr><literal type="string" pos:line="11" pos:column="62">""<pos:position pos:line="11" pos:column="64"/></literal></expr></else></ternary></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">nopts<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">.<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">nl<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <ternary><condition><expr><name pos:line="12" pos:column="20">opts<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">&amp;&amp;<pos:position pos:line="12" pos:column="35"/></operator> <name><name pos:line="12" pos:column="28">opts<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">nl<pos:position pos:line="12" pos:column="36"/></name></name></expr> ?<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38"> <expr><name><name pos:line="12" pos:column="39">opts<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">nl<pos:position pos:line="12" pos:column="47"/></name></name></expr> <pos:position pos:line="12" pos:column="48"/></then><else pos:line="12" pos:column="48">: <expr><literal type="string" pos:line="12" pos:column="50">"\n"<pos:position pos:line="12" pos:column="54"/></literal></expr></else></ternary></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">nopts<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">padding<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="13" pos:column="25">opts<pos:position pos:line="13" pos:column="29"/></name></expr> ?<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <expr><name><name pos:line="13" pos:column="32">opts<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">-&gt;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="38">padding<pos:position pos:line="13" pos:column="45"/></name></name></expr> <pos:position pos:line="13" pos:column="46"/></then><else pos:line="13" pos:column="46">: <expr><literal type="number" pos:line="13" pos:column="48">1<pos:position pos:line="13" pos:column="49"/></literal></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">nopts<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">.<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">width<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="14" pos:column="23">opts<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">&amp;&amp;<pos:position pos:line="14" pos:column="38"/></operator> <name><name pos:line="14" pos:column="31">opts<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">width<pos:position pos:line="14" pos:column="42"/></name></name></expr> ?<pos:position pos:line="14" pos:column="44"/></condition><then pos:line="14" pos:column="44"> <expr><name><name pos:line="14" pos:column="45">opts<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">width<pos:position pos:line="14" pos:column="56"/></name></name></expr> <pos:position pos:line="14" pos:column="57"/></then><else pos:line="14" pos:column="57">: <expr><call><name pos:line="14" pos:column="59">term_columns<pos:position pos:line="14" pos:column="71"/></name><argument_list pos:line="14" pos:column="71">()<pos:position pos:line="14" pos:column="73"/></argument_list></call> <operator pos:line="14" pos:column="74">-<pos:position pos:line="14" pos:column="75"/></operator> <literal type="number" pos:line="14" pos:column="76">1<pos:position pos:line="14" pos:column="77"/></literal></expr></else></ternary></expr>;<pos:position pos:line="14" pos:column="78"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><call><name pos:line="15" pos:column="14">column_active<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">colopts<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37"> <block pos:line="15" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">display_plain<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">list<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="37">""<pos:position pos:line="16" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="41">"\n"<pos:position pos:line="16" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
		<return pos:line="17" pos:column="17">return;<pos:position pos:line="17" pos:column="24"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<switch pos:line="19" pos:column="9">switch <condition pos:line="19" pos:column="16">(<expr><call><name pos:line="19" pos:column="17">COL_LAYOUT<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">colopts<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="37"/></condition> <block pos:line="19" pos:column="38">{
	<case pos:line="20" pos:column="9">case <expr><name pos:line="20" pos:column="14">COL_PLAIN<pos:position pos:line="20" pos:column="23"/></name></expr>:<pos:position pos:line="20" pos:column="24"/></case>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">display_plain<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">list<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="37">nopts<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">.<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="43">indent<pos:position pos:line="21" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="51">nopts<pos:position pos:line="21" pos:column="56"/></name><operator pos:line="21" pos:column="56">.<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="57">nl<pos:position pos:line="21" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>
		<break pos:line="22" pos:column="17">break;<pos:position pos:line="22" pos:column="23"/></break>
	<case pos:line="23" pos:column="9">case <expr><name pos:line="23" pos:column="14">COL_ROW<pos:position pos:line="23" pos:column="21"/></name></expr>:<pos:position pos:line="23" pos:column="22"/></case>
	<case pos:line="24" pos:column="9">case <expr><name pos:line="24" pos:column="14">COL_COLUMN<pos:position pos:line="24" pos:column="24"/></name></expr>:<pos:position pos:line="24" pos:column="25"/></case>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">display_table<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">list<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="37">colopts<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="46">&amp;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="47">nopts<pos:position pos:line="25" pos:column="52"/></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt>
		<break pos:line="26" pos:column="17">break;<pos:position pos:line="26" pos:column="23"/></break>
	<default pos:line="27" pos:column="9">default:<pos:position pos:line="27" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">die<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><literal type="string" pos:line="28" pos:column="21">"BUG: invalid layout mode %d"<pos:position pos:line="28" pos:column="50"/></literal></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="52">COL_LAYOUT<pos:position pos:line="28" pos:column="62"/></name><argument_list pos:line="28" pos:column="62">(<argument><expr><name pos:line="28" pos:column="63">colopts<pos:position pos:line="28" pos:column="70"/></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="73"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></switch>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1358.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">compile_pcre2_pattern<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">grep_pat<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">p<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name><name pos:line="1" pos:column="61">struct<pos:position pos:line="1" pos:column="67"/></name> <name pos:line="1" pos:column="68">grep_opt<pos:position pos:line="1" pos:column="76"/></name></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">opt<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="82"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">error<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">PCRE2_UCHAR<pos:position pos:line="4" pos:column="20"/></name></type> <name><name pos:line="4" pos:column="21">errbuf<pos:position pos:line="4" pos:column="27"/></name><index pos:line="4" pos:column="27">[<expr><literal type="number" pos:line="4" pos:column="28">256<pos:position pos:line="4" pos:column="31"/></literal></expr>]<pos:position pos:line="4" pos:column="32"/></index></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">PCRE2_SIZE<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">erroffset<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">options<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">PCRE2_MULTILINE<pos:position pos:line="6" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">uint8_t<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">character_tables<pos:position pos:line="7" pos:column="40"/></name> <init pos:line="7" pos:column="41">= <expr><name pos:line="7" pos:column="43">NULL<pos:position pos:line="7" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">jitret<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">assert<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name><name pos:line="10" pos:column="16">opt<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">pcre2<pos:position pos:line="10" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="12" pos:column="9">p<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">pcre2_compile_context<pos:position pos:line="12" pos:column="33"/></name></name> <operator pos:line="12" pos:column="34">=<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="36">NULL<pos:position pos:line="12" pos:column="40"/></name></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">opt<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">ignore_case<pos:position pos:line="14" pos:column="29"/></name></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30"> <block pos:line="14" pos:column="31">{
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><call><name pos:line="15" pos:column="21">has_non_ascii<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name><name pos:line="15" pos:column="35">p<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">pattern<pos:position pos:line="15" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="47"/></condition><then pos:line="15" pos:column="47"> <block pos:line="15" pos:column="48">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">character_tables<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">=<pos:position pos:line="16" pos:column="43"/></operator> <call><name pos:line="16" pos:column="44">pcre2_maketables<pos:position pos:line="16" pos:column="60"/></name><argument_list pos:line="16" pos:column="60">(<argument><expr><name pos:line="16" pos:column="61">NULL<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="17" pos:column="25">p<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">pcre2_compile_context<pos:position pos:line="17" pos:column="49"/></name></name> <operator pos:line="17" pos:column="50">=<pos:position pos:line="17" pos:column="51"/></operator> <call><name pos:line="17" pos:column="52">pcre2_compile_context_create<pos:position pos:line="17" pos:column="80"/></name><argument_list pos:line="17" pos:column="80">(<argument><expr><name pos:line="17" pos:column="81">NULL<pos:position pos:line="17" pos:column="85"/></name></expr></argument>)<pos:position pos:line="17" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="87"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">pcre2_set_character_tables<pos:position pos:line="18" pos:column="51"/></name><argument_list pos:line="18" pos:column="51">(<argument><expr><name><name pos:line="18" pos:column="52">p<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">-&gt;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="55">pcre2_compile_context<pos:position pos:line="18" pos:column="76"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="78">character_tables<pos:position pos:line="18" pos:column="94"/></name></expr></argument>)<pos:position pos:line="18" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="96"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="20" pos:column="17">options<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">|=<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="28">PCRE2_CASELESS<pos:position pos:line="20" pos:column="42"/></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">is_utf8_locale<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">()<pos:position pos:line="22" pos:column="29"/></argument_list></call> <operator pos:line="22" pos:column="30">&amp;&amp;<pos:position pos:line="22" pos:column="40"/></operator> <call><name pos:line="22" pos:column="33">has_non_ascii<pos:position pos:line="22" pos:column="46"/></name><argument_list pos:line="22" pos:column="46">(<argument><expr><name><name pos:line="22" pos:column="47">p<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">-&gt;<pos:position pos:line="22" pos:column="53"/></operator><name pos:line="22" pos:column="50">pattern<pos:position pos:line="22" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="59"/></condition><then pos:line="22" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="17">options<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">|=<pos:position pos:line="23" pos:column="27"/></operator> <name pos:line="23" pos:column="28">PCRE2_UTF<pos:position pos:line="23" pos:column="37"/></name></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="25" pos:column="9">p<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">pcre2_pattern<pos:position pos:line="25" pos:column="25"/></name></name> <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <call><name pos:line="25" pos:column="28">pcre2_compile<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><operator pos:line="25" pos:column="42">(<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">PCRE2_SPTR<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">)<pos:position pos:line="25" pos:column="54"/></operator><name><name pos:line="25" pos:column="54">p<pos:position pos:line="25" pos:column="55"/></name><operator pos:line="25" pos:column="55">-&gt;<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="57">pattern<pos:position pos:line="25" pos:column="64"/></name></name></expr></argument>,
					 <argument><expr><name><name pos:line="26" pos:column="42">p<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">-&gt;<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="45">patternlen<pos:position pos:line="26" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="57">options<pos:position pos:line="26" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="66">&amp;<pos:position pos:line="26" pos:column="71"/></operator><name pos:line="26" pos:column="67">error<pos:position pos:line="26" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="74">&amp;<pos:position pos:line="26" pos:column="79"/></operator><name pos:line="26" pos:column="75">erroffset<pos:position pos:line="26" pos:column="84"/></name></expr></argument>,
					 <argument><expr><name><name pos:line="27" pos:column="42">p<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">-&gt;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="45">pcre2_compile_context<pos:position pos:line="27" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name><name pos:line="29" pos:column="13">p<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">pcre2_pattern<pos:position pos:line="29" pos:column="29"/></name></name></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30"> <block pos:line="29" pos:column="31">{
		<expr_stmt><expr><name><name pos:line="30" pos:column="17">p<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">-&gt;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="20">pcre2_match_data<pos:position pos:line="30" pos:column="36"/></name></name> <operator pos:line="30" pos:column="37">=<pos:position pos:line="30" pos:column="38"/></operator> <call><name pos:line="30" pos:column="39">pcre2_match_data_create_from_pattern<pos:position pos:line="30" pos:column="75"/></name><argument_list pos:line="30" pos:column="75">(<argument><expr><name><name pos:line="30" pos:column="76">p<pos:position pos:line="30" pos:column="77"/></name><operator pos:line="30" pos:column="77">-&gt;<pos:position pos:line="30" pos:column="82"/></operator><name pos:line="30" pos:column="79">pcre2_pattern<pos:position pos:line="30" pos:column="92"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="94">NULL<pos:position pos:line="30" pos:column="98"/></name></expr></argument>)<pos:position pos:line="30" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="100"/></expr_stmt>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><operator pos:line="31" pos:column="21">!<pos:position pos:line="31" pos:column="22"/></operator><name><name pos:line="31" pos:column="22">p<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">pcre2_match_data<pos:position pos:line="31" pos:column="41"/></name></name></expr>)<pos:position pos:line="31" pos:column="42"/></condition><then pos:line="31" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="25">die<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><literal type="string" pos:line="32" pos:column="29">"Couldn't allocate PCRE2 match data"<pos:position pos:line="32" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt></block></then></if>
	}<pos:position pos:line="33" pos:column="10"/></block></then> <else pos:line="33" pos:column="11">else <block pos:line="33" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">pcre2_get_error_message<pos:position pos:line="34" pos:column="40"/></name><argument_list pos:line="34" pos:column="40">(<argument><expr><name pos:line="34" pos:column="41">error<pos:position pos:line="34" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="48">errbuf<pos:position pos:line="34" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="56">sizeof<argument_list pos:line="34" pos:column="62">(<argument><expr><name pos:line="34" pos:column="63">errbuf<pos:position pos:line="34" pos:column="69"/></name></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">compile_regexp_failed<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">p<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="42">(<pos:position pos:line="35" pos:column="43"/></operator><specifier pos:line="35" pos:column="43">const<pos:position pos:line="35" pos:column="48"/></specifier> <name pos:line="35" pos:column="49">char<pos:position pos:line="35" pos:column="53"/></name> <operator pos:line="35" pos:column="54">*<pos:position pos:line="35" pos:column="55"/></operator><operator pos:line="35" pos:column="55">)<pos:position pos:line="35" pos:column="56"/></operator><operator pos:line="35" pos:column="56">&amp;<pos:position pos:line="35" pos:column="61"/></operator><name pos:line="35" pos:column="57">errbuf<pos:position pos:line="35" pos:column="63"/></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="38" pos:column="9">pcre2_config<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">PCRE2_CONFIG_JIT<pos:position pos:line="38" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="40">&amp;<pos:position pos:line="38" pos:column="45"/></operator><name><name pos:line="38" pos:column="41">p<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">-&gt;<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="44">pcre2_jit_on<pos:position pos:line="38" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="58"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">p<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">-&gt;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="16">pcre2_jit_on<pos:position pos:line="39" pos:column="28"/></name></name> <operator pos:line="39" pos:column="29">==<pos:position pos:line="39" pos:column="31"/></operator> <literal type="number" pos:line="39" pos:column="32">1<pos:position pos:line="39" pos:column="33"/></literal></expr>)<pos:position pos:line="39" pos:column="34"/></condition><then pos:line="39" pos:column="34"> <block pos:line="39" pos:column="35">{
		<expr_stmt><expr><name pos:line="40" pos:column="17">jitret<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <call><name pos:line="40" pos:column="26">pcre2_jit_compile<pos:position pos:line="40" pos:column="43"/></name><argument_list pos:line="40" pos:column="43">(<argument><expr><name><name pos:line="40" pos:column="44">p<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">pcre2_pattern<pos:position pos:line="40" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="62">PCRE2_JIT_COMPLETE<pos:position pos:line="40" pos:column="80"/></name></expr></argument>)<pos:position pos:line="40" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="82"/></expr_stmt>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">jitret<pos:position pos:line="41" pos:column="27"/></name></expr>)<pos:position pos:line="41" pos:column="28"/></condition><then pos:line="41" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="25">die<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><literal type="string" pos:line="42" pos:column="29">"Couldn't JIT the PCRE2 pattern '%s', got '%d'\n"<pos:position pos:line="42" pos:column="78"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="80">p<pos:position pos:line="42" pos:column="81"/></name><operator pos:line="42" pos:column="81">-&gt;<pos:position pos:line="42" pos:column="86"/></operator><name pos:line="42" pos:column="83">pattern<pos:position pos:line="42" pos:column="90"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="92">jitret<pos:position pos:line="42" pos:column="98"/></name></expr></argument>)<pos:position pos:line="42" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="100"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="43" pos:column="17">p<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">pcre2_jit_stack<pos:position pos:line="43" pos:column="35"/></name></name> <operator pos:line="43" pos:column="36">=<pos:position pos:line="43" pos:column="37"/></operator> <call><name pos:line="43" pos:column="38">pcre2_jit_stack_create<pos:position pos:line="43" pos:column="60"/></name><argument_list pos:line="43" pos:column="60">(<argument><expr><literal type="number" pos:line="43" pos:column="61">1<pos:position pos:line="43" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="64">1024<pos:position pos:line="43" pos:column="68"/></literal> <operator pos:line="43" pos:column="69">*<pos:position pos:line="43" pos:column="70"/></operator> <literal type="number" pos:line="43" pos:column="71">1024<pos:position pos:line="43" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="77">NULL<pos:position pos:line="43" pos:column="81"/></name></expr></argument>)<pos:position pos:line="43" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="83"/></expr_stmt>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><operator pos:line="44" pos:column="21">!<pos:position pos:line="44" pos:column="22"/></operator><name><name pos:line="44" pos:column="22">p<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">-&gt;<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="25">pcre2_jit_stack<pos:position pos:line="44" pos:column="40"/></name></name></expr>)<pos:position pos:line="44" pos:column="41"/></condition><then pos:line="44" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="25">die<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><literal type="string" pos:line="45" pos:column="29">"Couldn't allocate PCRE2 JIT stack"<pos:position pos:line="45" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="66"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="46" pos:column="17">p<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">-&gt;<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="20">pcre2_match_context<pos:position pos:line="46" pos:column="39"/></name></name> <operator pos:line="46" pos:column="40">=<pos:position pos:line="46" pos:column="41"/></operator> <call><name pos:line="46" pos:column="42">pcre2_match_context_create<pos:position pos:line="46" pos:column="68"/></name><argument_list pos:line="46" pos:column="68">(<argument><expr><name pos:line="46" pos:column="69">NULL<pos:position pos:line="46" pos:column="73"/></name></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="75"/></expr_stmt>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><operator pos:line="47" pos:column="21">!<pos:position pos:line="47" pos:column="22"/></operator><name><name pos:line="47" pos:column="22">p<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">-&gt;<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="25">pcre2_match_context<pos:position pos:line="47" pos:column="44"/></name></name></expr>)<pos:position pos:line="47" pos:column="45"/></condition><then pos:line="47" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="25">die<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><literal type="string" pos:line="48" pos:column="29">"Couldn't allocate PCRE2 match context"<pos:position pos:line="48" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="70"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">pcre2_jit_stack_assign<pos:position pos:line="49" pos:column="39"/></name><argument_list pos:line="49" pos:column="39">(<argument><expr><name><name pos:line="49" pos:column="40">p<pos:position pos:line="49" pos:column="41"/></name><operator pos:line="49" pos:column="41">-&gt;<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="43">pcre2_match_context<pos:position pos:line="49" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="64">NULL<pos:position pos:line="49" pos:column="68"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="70">p<pos:position pos:line="49" pos:column="71"/></name><operator pos:line="49" pos:column="71">-&gt;<pos:position pos:line="49" pos:column="76"/></operator><name pos:line="49" pos:column="73">pcre2_jit_stack<pos:position pos:line="49" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="90"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></then> <elseif pos:line="50" pos:column="11">else <if pos:line="50" pos:column="16">if <condition pos:line="50" pos:column="19">(<expr><name><name pos:line="50" pos:column="20">p<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">pcre2_jit_on<pos:position pos:line="50" pos:column="35"/></name></name> <operator pos:line="50" pos:column="36">!=<pos:position pos:line="50" pos:column="38"/></operator> <literal type="number" pos:line="50" pos:column="39">0<pos:position pos:line="50" pos:column="40"/></literal></expr>)<pos:position pos:line="50" pos:column="41"/></condition><then pos:line="50" pos:column="41"> <block pos:line="50" pos:column="42">{
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">die<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">(<argument><expr><literal type="string" pos:line="51" pos:column="21">"BUG: The pcre2_jit_on variable should be 0 or 1, not %d"<pos:position pos:line="51" pos:column="78"/></literal></expr></argument>,
		    <argument><expr><name><name pos:line="52" pos:column="21">p<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">-&gt;<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="24">pcre1_jit_on<pos:position pos:line="52" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if></elseif></if>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

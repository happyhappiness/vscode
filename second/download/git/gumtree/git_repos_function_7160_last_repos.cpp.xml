<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7160_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_new<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">enum<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">object_type<pos:position pos:line="1" pos:column="38"/></name></name></type> <name pos:line="1" pos:column="39">type<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">unsigned<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">sha1_new<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">fprintf<pos:position pos:line="3" pos:column="16"/></name><argument_list pos:line="3" pos:column="16">(<argument><expr><name pos:line="3" pos:column="17">stderr<pos:position pos:line="3" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="25">"  %s: %s\n"<pos:position pos:line="3" pos:column="37"/></literal></expr></argument>, <argument><expr><name><typename pos:line="3" pos:column="39">typename<pos:position pos:line="3" pos:column="47"/></typename></name><operator pos:line="3" pos:column="47">(<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="48">type<pos:position pos:line="3" pos:column="52"/></name><operator pos:line="3" pos:column="52">)<pos:position pos:line="3" pos:column="53"/></operator></expr></argument>,
		<argument><expr><call><name pos:line="4" pos:column="17">find_unique_abbrev<pos:position pos:line="4" pos:column="35"/></name><argument_list pos:line="4" pos:column="35">(<argument><expr><name pos:line="4" pos:column="36">sha1_new<pos:position pos:line="4" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="46">DEFAULT_ABBREV<pos:position pos:line="4" pos:column="60"/></name></expr></argument>)<pos:position pos:line="4" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="63"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

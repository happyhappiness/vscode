<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4785_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_notes_merge_worktree<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name><name pos:line="1" pos:column="40">struct<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">notes_merge_options<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">o<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name><name pos:line="3" pos:column="14">o<pos:position pos:line="3" pos:column="15"/></name><operator pos:line="3" pos:column="15">-&gt;<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="17">has_worktree<pos:position pos:line="3" pos:column="29"/></name></name></expr>)<pos:position pos:line="3" pos:column="30"/></condition><then pos:line="3" pos:column="30"> <block pos:line="3" pos:column="31">{
		<comment type="block" pos:line="4" pos:column="17">/*
		 * Must establish NOTES_MERGE_WORKTREE.
		 * Abort if NOTES_MERGE_WORKTREE already exists
		 */</comment>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><call><name pos:line="8" pos:column="21">file_exists<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><call><name pos:line="8" pos:column="33">git_path<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><name pos:line="8" pos:column="42">NOTES_MERGE_WORKTREE<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call> <operator pos:line="8" pos:column="65">&amp;&amp;<pos:position pos:line="8" pos:column="75"/></operator>
		    <operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><call><name pos:line="9" pos:column="22">is_empty_dir<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><call><name pos:line="9" pos:column="35">git_path<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><name pos:line="9" pos:column="44">NOTES_MERGE_WORKTREE<pos:position pos:line="9" pos:column="64"/></name></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="67"/></condition><then pos:line="9" pos:column="67"> <block pos:line="9" pos:column="68">{
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><name pos:line="10" pos:column="29">advice_resolve_conflict<pos:position pos:line="10" pos:column="52"/></name></expr>)<pos:position pos:line="10" pos:column="53"/></condition><then pos:line="10" pos:column="53">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="33">die<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><call><name pos:line="11" pos:column="37">_<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><literal type="string" pos:line="11" pos:column="39">"You have not concluded your previous "<pos:position pos:line="11" pos:column="78"/></literal>
				    <literal type="string" pos:line="12" pos:column="37">"notes merge (%s exists).\nPlease, use "<pos:position pos:line="12" pos:column="77"/></literal>
				    <literal type="string" pos:line="13" pos:column="37">"'git notes merge --commit' or 'git notes "<pos:position pos:line="13" pos:column="80"/></literal>
				    <literal type="string" pos:line="14" pos:column="37">"merge --abort' to commit/abort the "<pos:position pos:line="14" pos:column="74"/></literal>
				    <literal type="string" pos:line="15" pos:column="37">"previous merge before you start a new "<pos:position pos:line="15" pos:column="77"/></literal>
				    <literal type="string" pos:line="16" pos:column="37">"notes merge."<pos:position pos:line="16" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="54">git_path<pos:position pos:line="16" pos:column="62"/></name><argument_list pos:line="16" pos:column="62">(<argument><expr><literal type="string" pos:line="16" pos:column="63">"NOTES_MERGE_*"<pos:position pos:line="16" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="81"/></expr_stmt></block></then>
			<else pos:line="17" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="33">die<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><call><name pos:line="18" pos:column="37">_<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><literal type="string" pos:line="18" pos:column="39">"You have not concluded your notes merge "<pos:position pos:line="18" pos:column="81"/></literal>
				    <literal type="string" pos:line="19" pos:column="37">"(%s exists)."<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="54">git_path<pos:position pos:line="19" pos:column="62"/></name><argument_list pos:line="19" pos:column="62">(<argument><expr><literal type="string" pos:line="19" pos:column="63">"NOTES_MERGE_*"<pos:position pos:line="19" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="81"/></expr_stmt></block></else></if>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>

		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><call><name pos:line="22" pos:column="21">safe_create_leading_directories_const<pos:position pos:line="22" pos:column="58"/></name><argument_list pos:line="22" pos:column="58">(<argument><expr><call><name pos:line="22" pos:column="59">git_path<pos:position pos:line="22" pos:column="67"/></name><argument_list pos:line="22" pos:column="67">(
				<argument><expr><name pos:line="23" pos:column="33">NOTES_MERGE_WORKTREE<pos:position pos:line="23" pos:column="53"/></name> <literal type="string" pos:line="23" pos:column="54">"/.test"<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="65"/></condition><then pos:line="23" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">die_errno<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><literal type="string" pos:line="24" pos:column="35">"unable to create directory %s"<pos:position pos:line="24" pos:column="66"/></literal></expr></argument>,
				  <argument><expr><call><name pos:line="25" pos:column="35">git_path<pos:position pos:line="25" pos:column="43"/></name><argument_list pos:line="25" pos:column="43">(<argument><expr><name pos:line="25" pos:column="44">NOTES_MERGE_WORKTREE<pos:position pos:line="25" pos:column="64"/></name></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="67"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">o<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">has_worktree<pos:position pos:line="26" pos:column="32"/></name></name> <operator pos:line="26" pos:column="33">=<pos:position pos:line="26" pos:column="34"/></operator> <literal type="number" pos:line="26" pos:column="35">1<pos:position pos:line="26" pos:column="36"/></literal></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then> <elseif pos:line="27" pos:column="11">else <if pos:line="27" pos:column="16">if <condition pos:line="27" pos:column="19">(<expr><operator pos:line="27" pos:column="20">!<pos:position pos:line="27" pos:column="21"/></operator><call><name pos:line="27" pos:column="21">file_exists<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><call><name pos:line="27" pos:column="33">git_path<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">NOTES_MERGE_WORKTREE<pos:position pos:line="27" pos:column="62"/></name></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="65"/></condition><then pos:line="27" pos:column="65">
		<comment type="block" pos:line="28" pos:column="17">/* NOTES_MERGE_WORKTREE should already be established */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">die<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><literal type="string" pos:line="29" pos:column="21">"missing '%s'. This should not happen"<pos:position pos:line="29" pos:column="59"/></literal></expr></argument>,
		    <argument><expr><call><name pos:line="30" pos:column="21">git_path<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">NOTES_MERGE_WORKTREE<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt></block></then></if></elseif></if>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4897_git-2.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fmt_merge_msg_title<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">strbuf<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">out<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
	<parameter><decl><type><specifier pos:line="2" pos:column="9">const<pos:position pos:line="2" pos:column="14"/></specifier> <name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">current_branch<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list> <block pos:line="2" pos:column="37">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><literal type="number" pos:line="3" pos:column="17">0<pos:position pos:line="3" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">sep<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="string" pos:line="4" pos:column="21">""<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">strbuf_addstr<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">out<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="28">"Merge "<pos:position pos:line="6" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name><name pos:line="7" pos:column="25">srcs<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">.<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="30">nr<pos:position pos:line="7" pos:column="32"/></name></name></expr>;<pos:position pos:line="7" pos:column="33"/></condition> <incr><expr><name pos:line="7" pos:column="34">i<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">++<pos:position pos:line="7" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="38"/></control> <block pos:line="7" pos:column="39">{
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">src_data<pos:position pos:line="8" pos:column="32"/></name></name> <modifier pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></modifier></type><name pos:line="8" pos:column="34">src_data<pos:position pos:line="8" pos:column="42"/></name> <init pos:line="8" pos:column="43">= <expr><name><name pos:line="8" pos:column="45">srcs<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">.<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="50">items<pos:position pos:line="8" pos:column="55"/></name><index pos:line="8" pos:column="55">[<expr><name pos:line="8" pos:column="56">i<pos:position pos:line="8" pos:column="57"/></name></expr>]<pos:position pos:line="8" pos:column="58"/></index></name><operator pos:line="8" pos:column="58">.<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="59">util<pos:position pos:line="8" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="64"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">subsep<pos:position pos:line="9" pos:column="35"/></name> <init pos:line="9" pos:column="36">= <expr><literal type="string" pos:line="9" pos:column="38">""<pos:position pos:line="9" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="11" pos:column="17">strbuf_addstr<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">out<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="36">sep<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">sep<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <literal type="string" pos:line="12" pos:column="23">"; "<pos:position pos:line="12" pos:column="27"/></literal></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name><name pos:line="14" pos:column="21">src_data<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">head_status<pos:position pos:line="14" pos:column="42"/></name></name> <operator pos:line="14" pos:column="43">==<pos:position pos:line="14" pos:column="45"/></operator> <literal type="number" pos:line="14" pos:column="46">1<pos:position pos:line="14" pos:column="47"/></literal></expr>)<pos:position pos:line="14" pos:column="48"/></condition><then pos:line="14" pos:column="48"> <block pos:line="14" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">strbuf_addstr<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><name pos:line="15" pos:column="39">out<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="44">srcs<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">.<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="49">items<pos:position pos:line="15" pos:column="54"/></name><index pos:line="15" pos:column="54">[<expr><name pos:line="15" pos:column="55">i<pos:position pos:line="15" pos:column="56"/></name></expr>]<pos:position pos:line="15" pos:column="57"/></index></name><operator pos:line="15" pos:column="57">.<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="58">string<pos:position pos:line="15" pos:column="64"/></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>
			<continue pos:line="16" pos:column="25">continue;<pos:position pos:line="16" pos:column="34"/></continue>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">src_data<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">head_status<pos:position pos:line="18" pos:column="42"/></name></name> <operator pos:line="18" pos:column="43">==<pos:position pos:line="18" pos:column="45"/></operator> <literal type="number" pos:line="18" pos:column="46">3<pos:position pos:line="18" pos:column="47"/></literal></expr>)<pos:position pos:line="18" pos:column="48"/></condition><then pos:line="18" pos:column="48"> <block pos:line="18" pos:column="49">{
			<expr_stmt><expr><name pos:line="19" pos:column="25">subsep<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">=<pos:position pos:line="19" pos:column="33"/></operator> <literal type="string" pos:line="19" pos:column="34">", "<pos:position pos:line="19" pos:column="38"/></literal></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">strbuf_addstr<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">out<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="44">"HEAD"<pos:position pos:line="20" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">src_data<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">-&gt;<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="31">branch<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">.<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">nr<pos:position pos:line="22" pos:column="40"/></name></name></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41"> <block pos:line="22" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">strbuf_addstr<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><name pos:line="23" pos:column="39">out<pos:position pos:line="23" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="44">subsep<pos:position pos:line="23" pos:column="50"/></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">subsep<pos:position pos:line="24" pos:column="31"/></name> <operator pos:line="24" pos:column="32">=<pos:position pos:line="24" pos:column="33"/></operator> <literal type="string" pos:line="24" pos:column="34">", "<pos:position pos:line="24" pos:column="38"/></literal></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">print_joined<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><literal type="string" pos:line="25" pos:column="38">"branch "<pos:position pos:line="25" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="49">"branches "<pos:position pos:line="25" pos:column="60"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="62">&amp;<pos:position pos:line="25" pos:column="67"/></operator><name><name pos:line="25" pos:column="63">src_data<pos:position pos:line="25" pos:column="71"/></name><operator pos:line="25" pos:column="71">-&gt;<pos:position pos:line="25" pos:column="76"/></operator><name pos:line="25" pos:column="73">branch<pos:position pos:line="25" pos:column="79"/></name></name></expr></argument>,
					<argument><expr><name pos:line="26" pos:column="41">out<pos:position pos:line="26" pos:column="44"/></name></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name><name pos:line="28" pos:column="21">src_data<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">-&gt;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="31">r_branch<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">.<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="40">nr<pos:position pos:line="28" pos:column="42"/></name></name></expr>)<pos:position pos:line="28" pos:column="43"/></condition><then pos:line="28" pos:column="43"> <block pos:line="28" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">strbuf_addstr<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><name pos:line="29" pos:column="39">out<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">subsep<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">subsep<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">=<pos:position pos:line="30" pos:column="33"/></operator> <literal type="string" pos:line="30" pos:column="34">", "<pos:position pos:line="30" pos:column="38"/></literal></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">print_joined<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><literal type="string" pos:line="31" pos:column="38">"remote-tracking branch "<pos:position pos:line="31" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="65">"remote-tracking branches "<pos:position pos:line="31" pos:column="92"/></literal></expr></argument>,
					<argument><expr><operator pos:line="32" pos:column="41">&amp;<pos:position pos:line="32" pos:column="46"/></operator><name><name pos:line="32" pos:column="42">src_data<pos:position pos:line="32" pos:column="50"/></name><operator pos:line="32" pos:column="50">-&gt;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="52">r_branch<pos:position pos:line="32" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="62">out<pos:position pos:line="32" pos:column="65"/></name></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name><name pos:line="34" pos:column="21">src_data<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">tag<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">.<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">nr<pos:position pos:line="34" pos:column="37"/></name></name></expr>)<pos:position pos:line="34" pos:column="38"/></condition><then pos:line="34" pos:column="38"> <block pos:line="34" pos:column="39">{
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">strbuf_addstr<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">out<pos:position pos:line="35" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="44">subsep<pos:position pos:line="35" pos:column="50"/></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="36" pos:column="25">subsep<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">=<pos:position pos:line="36" pos:column="33"/></operator> <literal type="string" pos:line="36" pos:column="34">", "<pos:position pos:line="36" pos:column="38"/></literal></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">print_joined<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><literal type="string" pos:line="37" pos:column="38">"tag "<pos:position pos:line="37" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="46">"tags "<pos:position pos:line="37" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="37" pos:column="55">&amp;<pos:position pos:line="37" pos:column="60"/></operator><name><name pos:line="37" pos:column="56">src_data<pos:position pos:line="37" pos:column="64"/></name><operator pos:line="37" pos:column="64">-&gt;<pos:position pos:line="37" pos:column="69"/></operator><name pos:line="37" pos:column="66">tag<pos:position pos:line="37" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="71">out<pos:position pos:line="37" pos:column="74"/></name></expr></argument>)<pos:position pos:line="37" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name><name pos:line="39" pos:column="21">src_data<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">-&gt;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="31">generic<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">.<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="39">nr<pos:position pos:line="39" pos:column="41"/></name></name></expr>)<pos:position pos:line="39" pos:column="42"/></condition><then pos:line="39" pos:column="42"> <block pos:line="39" pos:column="43">{
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">strbuf_addstr<pos:position pos:line="40" pos:column="38"/></name><argument_list pos:line="40" pos:column="38">(<argument><expr><name pos:line="40" pos:column="39">out<pos:position pos:line="40" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="44">subsep<pos:position pos:line="40" pos:column="50"/></name></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">print_joined<pos:position pos:line="41" pos:column="37"/></name><argument_list pos:line="41" pos:column="37">(<argument><expr><literal type="string" pos:line="41" pos:column="38">"commit "<pos:position pos:line="41" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="49">"commits "<pos:position pos:line="41" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="61">&amp;<pos:position pos:line="41" pos:column="66"/></operator><name><name pos:line="41" pos:column="62">src_data<pos:position pos:line="41" pos:column="70"/></name><operator pos:line="41" pos:column="70">-&gt;<pos:position pos:line="41" pos:column="75"/></operator><name pos:line="41" pos:column="72">generic<pos:position pos:line="41" pos:column="79"/></name></name></expr></argument>,
					<argument><expr><name pos:line="42" pos:column="41">out<pos:position pos:line="42" pos:column="44"/></name></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><call><name pos:line="44" pos:column="21">strcmp<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><literal type="string" pos:line="44" pos:column="28">"."<pos:position pos:line="44" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="33">srcs<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">.<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="38">items<pos:position pos:line="44" pos:column="43"/></name><index pos:line="44" pos:column="43">[<expr><name pos:line="44" pos:column="44">i<pos:position pos:line="44" pos:column="45"/></name></expr>]<pos:position pos:line="44" pos:column="46"/></index></name><operator pos:line="44" pos:column="46">.<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="47">string<pos:position pos:line="44" pos:column="53"/></name></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="55"/></condition><then pos:line="44" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="25">strbuf_addf<pos:position pos:line="45" pos:column="36"/></name><argument_list pos:line="45" pos:column="36">(<argument><expr><name pos:line="45" pos:column="37">out<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="42">" of %s"<pos:position pos:line="45" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="52">srcs<pos:position pos:line="45" pos:column="56"/></name><operator pos:line="45" pos:column="56">.<pos:position pos:line="45" pos:column="57"/></operator><name pos:line="45" pos:column="57">items<pos:position pos:line="45" pos:column="62"/></name><index pos:line="45" pos:column="62">[<expr><name pos:line="45" pos:column="63">i<pos:position pos:line="45" pos:column="64"/></name></expr>]<pos:position pos:line="45" pos:column="65"/></index></name><operator pos:line="45" pos:column="65">.<pos:position pos:line="45" pos:column="66"/></operator><name pos:line="45" pos:column="66">string<pos:position pos:line="45" pos:column="72"/></name></expr></argument>)<pos:position pos:line="45" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="74"/></expr_stmt></block></then></if>
	}<pos:position pos:line="46" pos:column="10"/></block></for>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">!<pos:position pos:line="48" pos:column="14"/></operator><call><name pos:line="48" pos:column="14">strcmp<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><literal type="string" pos:line="48" pos:column="21">"master"<pos:position pos:line="48" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="31">current_branch<pos:position pos:line="48" pos:column="45"/></name></expr></argument>)<pos:position pos:line="48" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="47"/></condition><then pos:line="48" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="17">strbuf_addch<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><name pos:line="49" pos:column="30">out<pos:position pos:line="49" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="49" pos:column="35">'\n'<pos:position pos:line="49" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt></block></then>
	<else pos:line="50" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="17">strbuf_addf<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">out<pos:position pos:line="51" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="34">" into %s\n"<pos:position pos:line="51" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="48">current_branch<pos:position pos:line="51" pos:column="62"/></name></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="64"/></expr_stmt></block></else></if>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4716_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">uint64_t<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">highres_nanos<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">void<pos:position pos:line="1" pos:column="42"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">uint64_t<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">high_ns<pos:position pos:line="3" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="34">scaled_low_ns<pos:position pos:line="3" pos:column="47"/></name></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">int<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">scale<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">LARGE_INTEGER<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">cnt<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">scale<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20"> <block pos:line="7" pos:column="21">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><call><name pos:line="8" pos:column="22">QueryPerformanceFrequency<pos:position pos:line="8" pos:column="47"/></name><argument_list pos:line="8" pos:column="47">(<argument><expr><operator pos:line="8" pos:column="48">&amp;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="49">cnt<pos:position pos:line="8" pos:column="52"/></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="54"/></condition><then pos:line="8" pos:column="54">
			<block type="pseudo"><return pos:line="9" pos:column="25">return <expr><literal type="number" pos:line="9" pos:column="32">0<pos:position pos:line="9" pos:column="33"/></literal></expr>;<pos:position pos:line="9" pos:column="34"/></return></block></then></if>

		<comment type="block" pos:line="11" pos:column="17">/* high_ns = number of ns per cnt.HighPart */</comment>
		<expr_stmt><expr><name pos:line="12" pos:column="17">high_ns<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">=<pos:position pos:line="12" pos:column="26"/></operator> <operator pos:line="12" pos:column="27">(<pos:position pos:line="12" pos:column="28"/></operator><literal type="number" pos:line="12" pos:column="28">1000000000LL<pos:position pos:line="12" pos:column="40"/></literal> <operator pos:line="12" pos:column="41">&lt;&lt;<pos:position pos:line="12" pos:column="49"/></operator> <literal type="number" pos:line="12" pos:column="44">32<pos:position pos:line="12" pos:column="46"/></literal><operator pos:line="12" pos:column="46">)<pos:position pos:line="12" pos:column="47"/></operator> <operator pos:line="12" pos:column="48">/<pos:position pos:line="12" pos:column="49"/></operator> <operator pos:line="12" pos:column="50">(<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">uint64_t<pos:position pos:line="12" pos:column="59"/></name><operator pos:line="12" pos:column="59">)<pos:position pos:line="12" pos:column="60"/></operator> <name><name pos:line="12" pos:column="61">cnt<pos:position pos:line="12" pos:column="64"/></name><operator pos:line="12" pos:column="64">.<pos:position pos:line="12" pos:column="65"/></operator><name pos:line="12" pos:column="65">QuadPart<pos:position pos:line="12" pos:column="73"/></name></name></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt>

		<comment type="block" pos:line="14" pos:column="17">/*
		 * Number of ns per cnt.LowPart is 10^9 / frequency (or
		 * high_ns &gt;&gt; 32). For maximum precision, we scale this factor
		 * so that it just fits within 32 bit (i.e. won't overflow if
		 * multiplied with cnt.LowPart).
		 */</comment>
		<expr_stmt><expr><name pos:line="20" pos:column="17">scaled_low_ns<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">=<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="33">high_ns<pos:position pos:line="20" pos:column="40"/></name></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">scale<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <literal type="number" pos:line="21" pos:column="25">32<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
		<while pos:line="22" pos:column="17">while <condition pos:line="22" pos:column="23">(<expr><name pos:line="22" pos:column="24">scaled_low_ns<pos:position pos:line="22" pos:column="37"/></name> <operator pos:line="22" pos:column="38">&gt;=<pos:position pos:line="22" pos:column="43"/></operator> <literal type="number" pos:line="22" pos:column="41">0x100000000LL<pos:position pos:line="22" pos:column="54"/></literal></expr>)<pos:position pos:line="22" pos:column="55"/></condition> <block pos:line="22" pos:column="56">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">scaled_low_ns<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">&gt;&gt;=<pos:position pos:line="23" pos:column="48"/></operator> <literal type="number" pos:line="23" pos:column="43">1<pos:position pos:line="23" pos:column="44"/></literal></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">scale<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">--<pos:position pos:line="24" pos:column="32"/></operator></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></while>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="28" pos:column="9">/* if QPF worked on initialization, we expect QPC to work as well */</comment>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">QueryPerformanceCounter<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><operator pos:line="29" pos:column="33">&amp;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="34">cnt<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>

	<return pos:line="31" pos:column="9">return <expr><operator pos:line="31" pos:column="16">(<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">high_ns<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">*<pos:position pos:line="31" pos:column="26"/></operator> <name><name pos:line="31" pos:column="27">cnt<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">.<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="31">HighPart<pos:position pos:line="31" pos:column="39"/></name></name><operator pos:line="31" pos:column="39">)<pos:position pos:line="31" pos:column="40"/></operator> <operator pos:line="31" pos:column="41">+<pos:position pos:line="31" pos:column="42"/></operator>
	       <operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><operator pos:line="32" pos:column="17">(<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">scaled_low_ns<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">*<pos:position pos:line="32" pos:column="33"/></operator> <name><name pos:line="32" pos:column="34">cnt<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">.<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="38">LowPart<pos:position pos:line="32" pos:column="45"/></name></name><operator pos:line="32" pos:column="45">)<pos:position pos:line="32" pos:column="46"/></operator> <operator pos:line="32" pos:column="47">&gt;&gt;<pos:position pos:line="32" pos:column="52"/></operator> <name pos:line="32" pos:column="50">scale<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">)<pos:position pos:line="32" pos:column="56"/></operator></expr>;<pos:position pos:line="32" pos:column="57"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

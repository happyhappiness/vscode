<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5906_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dissociate_from_references<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> <name pos:line="3" pos:column="22">char<pos:position pos:line="3" pos:column="26"/></name><modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type> <name><name pos:line="3" pos:column="28">argv<pos:position pos:line="3" pos:column="32"/></name><index pos:line="3" pos:column="32">[]<pos:position pos:line="3" pos:column="34"/></index></name> <init pos:line="3" pos:column="35">= <expr><block pos:line="3" pos:column="37">{ <expr><literal type="string" pos:line="3" pos:column="39">"repack"<pos:position pos:line="3" pos:column="47"/></literal></expr>, <expr><literal type="string" pos:line="3" pos:column="49">"-a"<pos:position pos:line="3" pos:column="53"/></literal></expr>, <expr><literal type="string" pos:line="3" pos:column="55">"-d"<pos:position pos:line="3" pos:column="59"/></literal></expr>, <expr><name pos:line="3" pos:column="61">NULL<pos:position pos:line="3" pos:column="65"/></name></expr> }<pos:position pos:line="3" pos:column="67"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="68"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">alternates<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">git_pathdup<pos:position pos:line="4" pos:column="39"/></name><argument_list pos:line="4" pos:column="39">(<argument><expr><literal type="string" pos:line="4" pos:column="40">"objects/info/alternates"<pos:position pos:line="4" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="67"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">access<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">alternates<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="33">F_OK<pos:position pos:line="6" pos:column="37"/></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39"> <block pos:line="6" pos:column="40">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><call><name pos:line="7" pos:column="21">run_command_v_opt<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name pos:line="7" pos:column="39">argv<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">RUN_GIT_CMD<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">|<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="57">RUN_COMMAND_NO_STDIN<pos:position pos:line="7" pos:column="77"/></name></expr></argument>)<pos:position pos:line="7" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="79"/></condition><then pos:line="7" pos:column="79">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="25">die<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><call><name pos:line="8" pos:column="29">_<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><literal type="string" pos:line="8" pos:column="31">"cannot repack to clean up"<pos:position pos:line="8" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt></block></then></if>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">unlink<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">alternates<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call> <operator pos:line="9" pos:column="40">&amp;&amp;<pos:position pos:line="9" pos:column="50"/></operator> <name pos:line="9" pos:column="43">errno<pos:position pos:line="9" pos:column="48"/></name> <operator pos:line="9" pos:column="49">!=<pos:position pos:line="9" pos:column="51"/></operator> <name pos:line="9" pos:column="52">ENOENT<pos:position pos:line="9" pos:column="58"/></name></expr>)<pos:position pos:line="9" pos:column="59"/></condition><then pos:line="9" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">die_errno<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><call><name pos:line="10" pos:column="35">_<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">(<argument><expr><literal type="string" pos:line="10" pos:column="37">"cannot unlink temporary alternates file"<pos:position pos:line="10" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="81"/></expr_stmt></block></then></if>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">free<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">alternates<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

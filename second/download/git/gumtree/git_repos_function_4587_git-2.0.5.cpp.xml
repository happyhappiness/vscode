<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4587_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">prune_refs<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">refspec<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">refs<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">ref_count<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="60">struct<pos:position pos:line="1" pos:column="66"/></name> <name pos:line="1" pos:column="67">ref<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">ref_map<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">raw_url<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">url_len<pos:position pos:line="4" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">i<pos:position pos:line="4" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="25">result<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><literal type="number" pos:line="4" pos:column="34">0<pos:position pos:line="4" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ref<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">ref<pos:position pos:line="5" pos:column="24"/></name></decl>, <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="27">stale_refs<pos:position pos:line="5" pos:column="37"/></name> <init pos:line="5" pos:column="38">= <expr><call><name pos:line="5" pos:column="40">get_stale_heads<pos:position pos:line="5" pos:column="55"/></name><argument_list pos:line="5" pos:column="55">(<argument><expr><name pos:line="5" pos:column="56">refs<pos:position pos:line="5" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="62">ref_count<pos:position pos:line="5" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="73">ref_map<pos:position pos:line="5" pos:column="80"/></name></expr></argument>)<pos:position pos:line="5" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="82"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">url<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">dangling_msg<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><ternary><condition><expr><name pos:line="7" pos:column="36">dry_run<pos:position pos:line="7" pos:column="43"/></name></expr>
		?<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18"> <expr><call><name pos:line="8" pos:column="19">_<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><literal type="string" pos:line="8" pos:column="21">"   (%s will become dangling)"<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>
		<pos:position pos:line="9" pos:column="3"/></then><else pos:line="9" pos:column="17">: <expr><call><name pos:line="9" pos:column="19">_<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><literal type="string" pos:line="9" pos:column="21">"   (%s has become dangling)"<pos:position pos:line="9" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="9" pos:column="52"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">raw_url<pos:position pos:line="11" pos:column="20"/></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">url<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">transport_anonymize_url<pos:position pos:line="12" pos:column="46"/></name><argument_list pos:line="12" pos:column="46">(<argument><expr><name pos:line="12" pos:column="47">raw_url<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt></block></then>
	<else pos:line="13" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">url<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <call><name pos:line="14" pos:column="23">xstrdup<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><literal type="string" pos:line="14" pos:column="31">"foreign"<pos:position pos:line="14" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="16" pos:column="9">url_len<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">strlen<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">url<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
	<for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">i<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">url_len<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">-<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="28">1<pos:position pos:line="17" pos:column="29"/></literal></expr>;<pos:position pos:line="17" pos:column="30"/></init> <condition><expr><name><name pos:line="17" pos:column="31">url<pos:position pos:line="17" pos:column="34"/></name><index pos:line="17" pos:column="34">[<expr><name pos:line="17" pos:column="35">i<pos:position pos:line="17" pos:column="36"/></name></expr>]<pos:position pos:line="17" pos:column="37"/></index></name> <operator pos:line="17" pos:column="38">==<pos:position pos:line="17" pos:column="40"/></operator> <literal type="char" pos:line="17" pos:column="41">'/'<pos:position pos:line="17" pos:column="44"/></literal> <operator pos:line="17" pos:column="45">&amp;&amp;<pos:position pos:line="17" pos:column="55"/></operator> <literal type="number" pos:line="17" pos:column="48">0<pos:position pos:line="17" pos:column="49"/></literal> <operator pos:line="17" pos:column="50">&lt;=<pos:position pos:line="17" pos:column="55"/></operator> <name pos:line="17" pos:column="53">i<pos:position pos:line="17" pos:column="54"/></name></expr>;<pos:position pos:line="17" pos:column="55"/></condition> <incr><expr><name pos:line="17" pos:column="56">i<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">--<pos:position pos:line="17" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="60"/></control>
		<block type="pseudo"><empty_stmt pos:line="18" pos:column="17">;<pos:position pos:line="18" pos:column="18"/></empty_stmt></block></for>

	<expr_stmt><expr><name pos:line="20" pos:column="9">url_len<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <name pos:line="20" pos:column="19">i<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">+<pos:position pos:line="20" pos:column="22"/></operator> <literal type="number" pos:line="20" pos:column="23">1<pos:position pos:line="20" pos:column="24"/></literal></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><literal type="number" pos:line="21" pos:column="13">4<pos:position pos:line="21" pos:column="14"/></literal> <operator pos:line="21" pos:column="15">&lt;<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="17">i<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">&amp;&amp;<pos:position pos:line="21" pos:column="29"/></operator> <operator pos:line="21" pos:column="22">!<pos:position pos:line="21" pos:column="23"/></operator><call><name pos:line="21" pos:column="23">strncmp<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><literal type="string" pos:line="21" pos:column="31">".git"<pos:position pos:line="21" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">url<pos:position pos:line="21" pos:column="42"/></name> <operator pos:line="21" pos:column="43">+<pos:position pos:line="21" pos:column="44"/></operator> <name pos:line="21" pos:column="45">i<pos:position pos:line="21" pos:column="46"/></name> <operator pos:line="21" pos:column="47">-<pos:position pos:line="21" pos:column="48"/></operator> <literal type="number" pos:line="21" pos:column="49">3<pos:position pos:line="21" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="52">4<pos:position pos:line="21" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="55"/></condition><then pos:line="21" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="17">url_len<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <name pos:line="22" pos:column="27">i<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">-<pos:position pos:line="22" pos:column="30"/></operator> <literal type="number" pos:line="22" pos:column="31">3<pos:position pos:line="22" pos:column="32"/></literal></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt></block></then></if>

	<for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">ref<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="20">stale_refs<pos:position pos:line="24" pos:column="30"/></name></expr>;<pos:position pos:line="24" pos:column="31"/></init> <condition><expr><name pos:line="24" pos:column="32">ref<pos:position pos:line="24" pos:column="35"/></name></expr>;<pos:position pos:line="24" pos:column="36"/></condition> <incr><expr><name pos:line="24" pos:column="37">ref<pos:position pos:line="24" pos:column="40"/></name> <operator pos:line="24" pos:column="41">=<pos:position pos:line="24" pos:column="42"/></operator> <name><name pos:line="24" pos:column="43">ref<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">-&gt;<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="48">next<pos:position pos:line="24" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="24" pos:column="53"/></control> <block pos:line="24" pos:column="54">{
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">dry_run<pos:position pos:line="25" pos:column="29"/></name></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="25">result<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">|=<pos:position pos:line="26" pos:column="34"/></operator> <call><name pos:line="26" pos:column="35">delete_ref<pos:position pos:line="26" pos:column="45"/></name><argument_list pos:line="26" pos:column="45">(<argument><expr><name><name pos:line="26" pos:column="46">ref<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">-&gt;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="51">name<pos:position pos:line="26" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="57">NULL<pos:position pos:line="26" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="63">0<pos:position pos:line="26" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="66"/></expr_stmt></block></then></if>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">verbosity<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">&gt;=<pos:position pos:line="27" pos:column="36"/></operator> <literal type="number" pos:line="27" pos:column="34">0<pos:position pos:line="27" pos:column="35"/></literal> <operator pos:line="27" pos:column="36">&amp;&amp;<pos:position pos:line="27" pos:column="46"/></operator> <operator pos:line="27" pos:column="39">!<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="40">shown_url<pos:position pos:line="27" pos:column="49"/></name></expr>)<pos:position pos:line="27" pos:column="50"/></condition><then pos:line="27" pos:column="50"> <block pos:line="27" pos:column="51">{
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">fprintf<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">stderr<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="41">_<pos:position pos:line="28" pos:column="42"/></name><argument_list pos:line="28" pos:column="42">(<argument><expr><literal type="string" pos:line="28" pos:column="43">"From %.*s\n"<pos:position pos:line="28" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="59">url_len<pos:position pos:line="28" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="68">url<pos:position pos:line="28" pos:column="71"/></name></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><name pos:line="29" pos:column="25">shown_url<pos:position pos:line="29" pos:column="34"/></name> <operator pos:line="29" pos:column="35">=<pos:position pos:line="29" pos:column="36"/></operator> <literal type="number" pos:line="29" pos:column="37">1<pos:position pos:line="29" pos:column="38"/></literal></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">verbosity<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">&gt;=<pos:position pos:line="31" pos:column="36"/></operator> <literal type="number" pos:line="31" pos:column="34">0<pos:position pos:line="31" pos:column="35"/></literal></expr>)<pos:position pos:line="31" pos:column="36"/></condition><then pos:line="31" pos:column="36"> <block pos:line="31" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">fprintf<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">stderr<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="41">" x %-*s %-*s -&gt; %s\n"<pos:position pos:line="32" pos:column="66"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="33" pos:column="33">TRANSPORT_SUMMARY<pos:position pos:line="33" pos:column="50"/></name><argument_list pos:line="33" pos:column="50">(<argument><expr><call><name pos:line="33" pos:column="51">_<pos:position pos:line="33" pos:column="52"/></name><argument_list pos:line="33" pos:column="52">(<argument><expr><literal type="string" pos:line="33" pos:column="53">"[deleted]"<pos:position pos:line="33" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="34" pos:column="33">REFCOL_WIDTH<pos:position pos:line="34" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="47">_<pos:position pos:line="34" pos:column="48"/></name><argument_list pos:line="34" pos:column="48">(<argument><expr><literal type="string" pos:line="34" pos:column="49">"(none)"<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="60">prettify_refname<pos:position pos:line="34" pos:column="76"/></name><argument_list pos:line="34" pos:column="76">(<argument><expr><name><name pos:line="34" pos:column="77">ref<pos:position pos:line="34" pos:column="80"/></name><operator pos:line="34" pos:column="80">-&gt;<pos:position pos:line="34" pos:column="85"/></operator><name pos:line="34" pos:column="82">name<pos:position pos:line="34" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="89"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">warn_dangling_symref<pos:position pos:line="35" pos:column="45"/></name><argument_list pos:line="35" pos:column="45">(<argument><expr><name pos:line="35" pos:column="46">stderr<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="54">dangling_msg<pos:position pos:line="35" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="68">ref<pos:position pos:line="35" pos:column="71"/></name><operator pos:line="35" pos:column="71">-&gt;<pos:position pos:line="35" pos:column="76"/></operator><name pos:line="35" pos:column="73">name<pos:position pos:line="35" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="79"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
	}<pos:position pos:line="37" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">free<pos:position pos:line="38" pos:column="13"/></name><argument_list pos:line="38" pos:column="13">(<argument><expr><name pos:line="38" pos:column="14">url<pos:position pos:line="38" pos:column="17"/></name></expr></argument>)<pos:position pos:line="38" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">free_refs<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><name pos:line="39" pos:column="19">stale_refs<pos:position pos:line="39" pos:column="29"/></name></expr></argument>)<pos:position pos:line="39" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
	<return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">result<pos:position pos:line="40" pos:column="22"/></name></expr>;<pos:position pos:line="40" pos:column="23"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

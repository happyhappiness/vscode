<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5208_git-2.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">store_updated_refs<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">raw_url<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">remote_name<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">ref<pos:position pos:line="2" pos:column="27"/></name></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">ref_map<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">FILE<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">fp<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">commit<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">url_len<pos:position pos:line="6" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="22">i<pos:position pos:line="6" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="25">rc<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><literal type="number" pos:line="6" pos:column="30">0<pos:position pos:line="6" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">note<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><name pos:line="7" pos:column="30">STRBUF_INIT<pos:position pos:line="7" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">what<pos:position pos:line="8" pos:column="25"/></name></decl>, <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="28">kind<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">ref<pos:position pos:line="9" pos:column="19"/></name></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">rm<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">url<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">filename<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><ternary><condition><expr><name pos:line="11" pos:column="32">dry_run<pos:position pos:line="11" pos:column="39"/></name></expr> ?<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41"> <expr><literal type="string" pos:line="11" pos:column="42">"/dev/null"<pos:position pos:line="11" pos:column="53"/></literal></expr> <pos:position pos:line="11" pos:column="54"/></then><else pos:line="11" pos:column="54">: <expr><call><name pos:line="11" pos:column="56">git_path_fetch_head<pos:position pos:line="11" pos:column="75"/></name><argument_list pos:line="11" pos:column="75">()<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="11" pos:column="78"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">want_status<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">fp<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">fopen<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">filename<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="30">"a"<pos:position pos:line="14" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">fp<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><call><name pos:line="16" pos:column="24">error_errno<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><call><name pos:line="16" pos:column="36">_<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><literal type="string" pos:line="16" pos:column="38">"cannot open %s"<pos:position pos:line="16" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="57">filename<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></return></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">raw_url<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">url<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <call><name pos:line="19" pos:column="23">transport_anonymize_url<pos:position pos:line="19" pos:column="46"/></name><argument_list pos:line="19" pos:column="46">(<argument><expr><name pos:line="19" pos:column="47">raw_url<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt></block></then>
	<else pos:line="20" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">url<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">xstrdup<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><literal type="string" pos:line="21" pos:column="31">"foreign"<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">rm<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <name pos:line="23" pos:column="14">ref_map<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">check_everything_connected<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">iterate_ref_map<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="57">0<pos:position pos:line="24" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="60">&amp;<pos:position pos:line="24" pos:column="65"/></operator><name pos:line="24" pos:column="61">rm<pos:position pos:line="24" pos:column="63"/></name></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="65"/></condition><then pos:line="24" pos:column="65"> <block pos:line="24" pos:column="66">{
		<expr_stmt><expr><name pos:line="25" pos:column="17">rc<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <call><name pos:line="25" pos:column="22">error<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><call><name pos:line="25" pos:column="28">_<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><literal type="string" pos:line="25" pos:column="30">"%s did not send all necessary objects\n"<pos:position pos:line="25" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="74">url<pos:position pos:line="25" pos:column="77"/></name></expr></argument>)<pos:position pos:line="25" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="79"/></expr_stmt>
		<goto pos:line="26" pos:column="17">goto <name pos:line="26" pos:column="22">abort<pos:position pos:line="26" pos:column="27"/></name>;<pos:position pos:line="26" pos:column="28"/></goto>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="29" pos:column="9">/*
	 * We do a pass for each fetch_head_status type in their enum order, so
	 * merged entries are written before not-for-merge. That lets readers
	 * use FETCH_HEAD as a refname to refer to the ref to be merged.
	 */</comment>
	<for pos:line="34" pos:column="9">for <control pos:line="34" pos:column="13">(<init><expr><name pos:line="34" pos:column="14">want_status<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">FETCH_HEAD_MERGE<pos:position pos:line="34" pos:column="44"/></name></expr>;<pos:position pos:line="34" pos:column="45"/></init>
	     <condition><expr><name pos:line="35" pos:column="14">want_status<pos:position pos:line="35" pos:column="25"/></name> <operator pos:line="35" pos:column="26">&lt;=<pos:position pos:line="35" pos:column="31"/></operator> <name pos:line="35" pos:column="29">FETCH_HEAD_IGNORE<pos:position pos:line="35" pos:column="46"/></name></expr>;<pos:position pos:line="35" pos:column="47"/></condition>
	     <incr><expr><name pos:line="36" pos:column="14">want_status<pos:position pos:line="36" pos:column="25"/></name><operator pos:line="36" pos:column="25">++<pos:position pos:line="36" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="28"/></control> <block pos:line="36" pos:column="29">{
		<for pos:line="37" pos:column="17">for <control pos:line="37" pos:column="21">(<init><expr><name pos:line="37" pos:column="22">rm<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="27">ref_map<pos:position pos:line="37" pos:column="34"/></name></expr>;<pos:position pos:line="37" pos:column="35"/></init> <condition><expr><name pos:line="37" pos:column="36">rm<pos:position pos:line="37" pos:column="38"/></name></expr>;<pos:position pos:line="37" pos:column="39"/></condition> <incr><expr><name pos:line="37" pos:column="40">rm<pos:position pos:line="37" pos:column="42"/></name> <operator pos:line="37" pos:column="43">=<pos:position pos:line="37" pos:column="44"/></operator> <name><name pos:line="37" pos:column="45">rm<pos:position pos:line="37" pos:column="47"/></name><operator pos:line="37" pos:column="47">-&gt;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="49">next<pos:position pos:line="37" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="37" pos:column="54"/></control> <block pos:line="37" pos:column="55">{
			<decl_stmt><decl><type><name><name pos:line="38" pos:column="25">struct<pos:position pos:line="38" pos:column="31"/></name> <name pos:line="38" pos:column="32">ref<pos:position pos:line="38" pos:column="35"/></name></name> <modifier pos:line="38" pos:column="36">*<pos:position pos:line="38" pos:column="37"/></modifier></type><name pos:line="38" pos:column="37">ref<pos:position pos:line="38" pos:column="40"/></name> <init pos:line="38" pos:column="41">= <expr><name pos:line="38" pos:column="43">NULL<pos:position pos:line="38" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="38" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="39" pos:column="25">const<pos:position pos:line="39" pos:column="30"/></specifier> <name pos:line="39" pos:column="31">char<pos:position pos:line="39" pos:column="35"/></name> <modifier pos:line="39" pos:column="36">*<pos:position pos:line="39" pos:column="37"/></modifier></type><name pos:line="39" pos:column="37">merge_status_marker<pos:position pos:line="39" pos:column="56"/></name> <init pos:line="39" pos:column="57">= <expr><literal type="string" pos:line="39" pos:column="59">""<pos:position pos:line="39" pos:column="61"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="62"/></decl_stmt>

			<if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><name><name pos:line="41" pos:column="29">rm<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">status<pos:position pos:line="41" pos:column="39"/></name></name> <operator pos:line="41" pos:column="40">==<pos:position pos:line="41" pos:column="42"/></operator> <name pos:line="41" pos:column="43">REF_STATUS_REJECT_SHALLOW<pos:position pos:line="41" pos:column="68"/></name></expr>)<pos:position pos:line="41" pos:column="69"/></condition><then pos:line="41" pos:column="69"> <block pos:line="41" pos:column="70">{
				<if pos:line="42" pos:column="33">if <condition pos:line="42" pos:column="36">(<expr><name pos:line="42" pos:column="37">want_status<pos:position pos:line="42" pos:column="48"/></name> <operator pos:line="42" pos:column="49">==<pos:position pos:line="42" pos:column="51"/></operator> <name pos:line="42" pos:column="52">FETCH_HEAD_MERGE<pos:position pos:line="42" pos:column="68"/></name></expr>)<pos:position pos:line="42" pos:column="69"/></condition><then pos:line="42" pos:column="69">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="41">warning<pos:position pos:line="43" pos:column="48"/></name><argument_list pos:line="43" pos:column="48">(<argument><expr><call><name pos:line="43" pos:column="49">_<pos:position pos:line="43" pos:column="50"/></name><argument_list pos:line="43" pos:column="50">(<argument><expr><literal type="string" pos:line="43" pos:column="51">"reject %s because shallow roots are not allowed to be updated"<pos:position pos:line="43" pos:column="114"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="115"/></argument_list></call></expr></argument>,
						<argument><expr><ternary><condition><expr><name><name pos:line="44" pos:column="49">rm<pos:position pos:line="44" pos:column="51"/></name><operator pos:line="44" pos:column="51">-&gt;<pos:position pos:line="44" pos:column="56"/></operator><name pos:line="44" pos:column="53">peer_ref<pos:position pos:line="44" pos:column="61"/></name></name></expr> ?<pos:position pos:line="44" pos:column="63"/></condition><then pos:line="44" pos:column="63"> <expr><name><name pos:line="44" pos:column="64">rm<pos:position pos:line="44" pos:column="66"/></name><operator pos:line="44" pos:column="66">-&gt;<pos:position pos:line="44" pos:column="71"/></operator><name pos:line="44" pos:column="68">peer_ref<pos:position pos:line="44" pos:column="76"/></name><operator pos:line="44" pos:column="76">-&gt;<pos:position pos:line="44" pos:column="81"/></operator><name pos:line="44" pos:column="78">name<pos:position pos:line="44" pos:column="82"/></name></name></expr> <pos:position pos:line="44" pos:column="83"/></then><else pos:line="44" pos:column="83">: <expr><name><name pos:line="44" pos:column="85">rm<pos:position pos:line="44" pos:column="87"/></name><operator pos:line="44" pos:column="87">-&gt;<pos:position pos:line="44" pos:column="92"/></operator><name pos:line="44" pos:column="89">name<pos:position pos:line="44" pos:column="93"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="44" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="95"/></expr_stmt></block></then></if>
				<continue pos:line="45" pos:column="33">continue;<pos:position pos:line="45" pos:column="42"/></continue>
			}<pos:position pos:line="46" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="48" pos:column="25">commit<pos:position pos:line="48" pos:column="31"/></name> <operator pos:line="48" pos:column="32">=<pos:position pos:line="48" pos:column="33"/></operator> <call><name pos:line="48" pos:column="34">lookup_commit_reference_gently<pos:position pos:line="48" pos:column="64"/></name><argument_list pos:line="48" pos:column="64">(<argument><expr><name><name pos:line="48" pos:column="65">rm<pos:position pos:line="48" pos:column="67"/></name><operator pos:line="48" pos:column="67">-&gt;<pos:position pos:line="48" pos:column="72"/></operator><name pos:line="48" pos:column="69">old_oid<pos:position pos:line="48" pos:column="76"/></name><operator pos:line="48" pos:column="76">.<pos:position pos:line="48" pos:column="77"/></operator><name pos:line="48" pos:column="77">hash<pos:position pos:line="48" pos:column="81"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="83">1<pos:position pos:line="48" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="86"/></expr_stmt>
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><operator pos:line="49" pos:column="29">!<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="30">commit<pos:position pos:line="49" pos:column="36"/></name></expr>)<pos:position pos:line="49" pos:column="37"/></condition><then pos:line="49" pos:column="37">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="33">rm<pos:position pos:line="50" pos:column="35"/></name><operator pos:line="50" pos:column="35">-&gt;<pos:position pos:line="50" pos:column="40"/></operator><name pos:line="50" pos:column="37">fetch_head_status<pos:position pos:line="50" pos:column="54"/></name></name> <operator pos:line="50" pos:column="55">=<pos:position pos:line="50" pos:column="56"/></operator> <name pos:line="50" pos:column="57">FETCH_HEAD_NOT_FOR_MERGE<pos:position pos:line="50" pos:column="81"/></name></expr>;<pos:position pos:line="50" pos:column="82"/></expr_stmt></block></then></if>

			<if pos:line="52" pos:column="25">if <condition pos:line="52" pos:column="28">(<expr><name><name pos:line="52" pos:column="29">rm<pos:position pos:line="52" pos:column="31"/></name><operator pos:line="52" pos:column="31">-&gt;<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="33">fetch_head_status<pos:position pos:line="52" pos:column="50"/></name></name> <operator pos:line="52" pos:column="51">!=<pos:position pos:line="52" pos:column="53"/></operator> <name pos:line="52" pos:column="54">want_status<pos:position pos:line="52" pos:column="65"/></name></expr>)<pos:position pos:line="52" pos:column="66"/></condition><then pos:line="52" pos:column="66">
				<block type="pseudo"><continue pos:line="53" pos:column="33">continue;<pos:position pos:line="53" pos:column="42"/></continue></block></then></if>

			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><name><name pos:line="55" pos:column="29">rm<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">-&gt;<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="33">peer_ref<pos:position pos:line="55" pos:column="41"/></name></name></expr>)<pos:position pos:line="55" pos:column="42"/></condition><then pos:line="55" pos:column="42"> <block pos:line="55" pos:column="43">{
				<expr_stmt><expr><name pos:line="56" pos:column="33">ref<pos:position pos:line="56" pos:column="36"/></name> <operator pos:line="56" pos:column="37">=<pos:position pos:line="56" pos:column="38"/></operator> <call><name pos:line="56" pos:column="39">alloc_ref<pos:position pos:line="56" pos:column="48"/></name><argument_list pos:line="56" pos:column="48">(<argument><expr><name><name pos:line="56" pos:column="49">rm<pos:position pos:line="56" pos:column="51"/></name><operator pos:line="56" pos:column="51">-&gt;<pos:position pos:line="56" pos:column="56"/></operator><name pos:line="56" pos:column="53">peer_ref<pos:position pos:line="56" pos:column="61"/></name><operator pos:line="56" pos:column="61">-&gt;<pos:position pos:line="56" pos:column="66"/></operator><name pos:line="56" pos:column="63">name<pos:position pos:line="56" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="69"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="57" pos:column="33">oidcpy<pos:position pos:line="57" pos:column="39"/></name><argument_list pos:line="57" pos:column="39">(<argument><expr><operator pos:line="57" pos:column="40">&amp;<pos:position pos:line="57" pos:column="45"/></operator><name><name pos:line="57" pos:column="41">ref<pos:position pos:line="57" pos:column="44"/></name><operator pos:line="57" pos:column="44">-&gt;<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="46">old_oid<pos:position pos:line="57" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="55">&amp;<pos:position pos:line="57" pos:column="60"/></operator><name><name pos:line="57" pos:column="56">rm<pos:position pos:line="57" pos:column="58"/></name><operator pos:line="57" pos:column="58">-&gt;<pos:position pos:line="57" pos:column="63"/></operator><name pos:line="57" pos:column="60">peer_ref<pos:position pos:line="57" pos:column="68"/></name><operator pos:line="57" pos:column="68">-&gt;<pos:position pos:line="57" pos:column="73"/></operator><name pos:line="57" pos:column="70">old_oid<pos:position pos:line="57" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="79"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="58" pos:column="33">oidcpy<pos:position pos:line="58" pos:column="39"/></name><argument_list pos:line="58" pos:column="39">(<argument><expr><operator pos:line="58" pos:column="40">&amp;<pos:position pos:line="58" pos:column="45"/></operator><name><name pos:line="58" pos:column="41">ref<pos:position pos:line="58" pos:column="44"/></name><operator pos:line="58" pos:column="44">-&gt;<pos:position pos:line="58" pos:column="49"/></operator><name pos:line="58" pos:column="46">new_oid<pos:position pos:line="58" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="55">&amp;<pos:position pos:line="58" pos:column="60"/></operator><name><name pos:line="58" pos:column="56">rm<pos:position pos:line="58" pos:column="58"/></name><operator pos:line="58" pos:column="58">-&gt;<pos:position pos:line="58" pos:column="63"/></operator><name pos:line="58" pos:column="60">old_oid<pos:position pos:line="58" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="69"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="59" pos:column="33">ref<pos:position pos:line="59" pos:column="36"/></name><operator pos:line="59" pos:column="36">-&gt;<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="38">force<pos:position pos:line="59" pos:column="43"/></name></name> <operator pos:line="59" pos:column="44">=<pos:position pos:line="59" pos:column="45"/></operator> <name><name pos:line="59" pos:column="46">rm<pos:position pos:line="59" pos:column="48"/></name><operator pos:line="59" pos:column="48">-&gt;<pos:position pos:line="59" pos:column="53"/></operator><name pos:line="59" pos:column="50">peer_ref<pos:position pos:line="59" pos:column="58"/></name><operator pos:line="59" pos:column="58">-&gt;<pos:position pos:line="59" pos:column="63"/></operator><name pos:line="59" pos:column="60">force<pos:position pos:line="59" pos:column="65"/></name></name></expr>;<pos:position pos:line="59" pos:column="66"/></expr_stmt>
			}<pos:position pos:line="60" pos:column="26"/></block></then></if>


			<if pos:line="63" pos:column="25">if <condition pos:line="63" pos:column="28">(<expr><operator pos:line="63" pos:column="29">!<pos:position pos:line="63" pos:column="30"/></operator><call><name pos:line="63" pos:column="30">strcmp<pos:position pos:line="63" pos:column="36"/></name><argument_list pos:line="63" pos:column="36">(<argument><expr><name><name pos:line="63" pos:column="37">rm<pos:position pos:line="63" pos:column="39"/></name><operator pos:line="63" pos:column="39">-&gt;<pos:position pos:line="63" pos:column="44"/></operator><name pos:line="63" pos:column="41">name<pos:position pos:line="63" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="47">"HEAD"<pos:position pos:line="63" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="55"/></condition><then pos:line="63" pos:column="55"> <block pos:line="63" pos:column="56">{
				<expr_stmt><expr><name pos:line="64" pos:column="33">kind<pos:position pos:line="64" pos:column="37"/></name> <operator pos:line="64" pos:column="38">=<pos:position pos:line="64" pos:column="39"/></operator> <literal type="string" pos:line="64" pos:column="40">""<pos:position pos:line="64" pos:column="42"/></literal></expr>;<pos:position pos:line="64" pos:column="43"/></expr_stmt>
				<expr_stmt><expr><name pos:line="65" pos:column="33">what<pos:position pos:line="65" pos:column="37"/></name> <operator pos:line="65" pos:column="38">=<pos:position pos:line="65" pos:column="39"/></operator> <literal type="string" pos:line="65" pos:column="40">""<pos:position pos:line="65" pos:column="42"/></literal></expr>;<pos:position pos:line="65" pos:column="43"/></expr_stmt>
			}<pos:position pos:line="66" pos:column="26"/></block></then>
			<elseif pos:line="67" pos:column="25">else <if pos:line="67" pos:column="30">if <condition pos:line="67" pos:column="33">(<expr><call><name pos:line="67" pos:column="34">starts_with<pos:position pos:line="67" pos:column="45"/></name><argument_list pos:line="67" pos:column="45">(<argument><expr><name><name pos:line="67" pos:column="46">rm<pos:position pos:line="67" pos:column="48"/></name><operator pos:line="67" pos:column="48">-&gt;<pos:position pos:line="67" pos:column="53"/></operator><name pos:line="67" pos:column="50">name<pos:position pos:line="67" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="56">"refs/heads/"<pos:position pos:line="67" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="71"/></condition><then pos:line="67" pos:column="71"> <block pos:line="67" pos:column="72">{
				<expr_stmt><expr><name pos:line="68" pos:column="33">kind<pos:position pos:line="68" pos:column="37"/></name> <operator pos:line="68" pos:column="38">=<pos:position pos:line="68" pos:column="39"/></operator> <literal type="string" pos:line="68" pos:column="40">"branch"<pos:position pos:line="68" pos:column="48"/></literal></expr>;<pos:position pos:line="68" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name pos:line="69" pos:column="33">what<pos:position pos:line="69" pos:column="37"/></name> <operator pos:line="69" pos:column="38">=<pos:position pos:line="69" pos:column="39"/></operator> <name><name pos:line="69" pos:column="40">rm<pos:position pos:line="69" pos:column="42"/></name><operator pos:line="69" pos:column="42">-&gt;<pos:position pos:line="69" pos:column="47"/></operator><name pos:line="69" pos:column="44">name<pos:position pos:line="69" pos:column="48"/></name></name> <operator pos:line="69" pos:column="49">+<pos:position pos:line="69" pos:column="50"/></operator> <literal type="number" pos:line="69" pos:column="51">11<pos:position pos:line="69" pos:column="53"/></literal></expr>;<pos:position pos:line="69" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="70" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="71" pos:column="25">else <if pos:line="71" pos:column="30">if <condition pos:line="71" pos:column="33">(<expr><call><name pos:line="71" pos:column="34">starts_with<pos:position pos:line="71" pos:column="45"/></name><argument_list pos:line="71" pos:column="45">(<argument><expr><name><name pos:line="71" pos:column="46">rm<pos:position pos:line="71" pos:column="48"/></name><operator pos:line="71" pos:column="48">-&gt;<pos:position pos:line="71" pos:column="53"/></operator><name pos:line="71" pos:column="50">name<pos:position pos:line="71" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="56">"refs/tags/"<pos:position pos:line="71" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="70"/></condition><then pos:line="71" pos:column="70"> <block pos:line="71" pos:column="71">{
				<expr_stmt><expr><name pos:line="72" pos:column="33">kind<pos:position pos:line="72" pos:column="37"/></name> <operator pos:line="72" pos:column="38">=<pos:position pos:line="72" pos:column="39"/></operator> <literal type="string" pos:line="72" pos:column="40">"tag"<pos:position pos:line="72" pos:column="45"/></literal></expr>;<pos:position pos:line="72" pos:column="46"/></expr_stmt>
				<expr_stmt><expr><name pos:line="73" pos:column="33">what<pos:position pos:line="73" pos:column="37"/></name> <operator pos:line="73" pos:column="38">=<pos:position pos:line="73" pos:column="39"/></operator> <name><name pos:line="73" pos:column="40">rm<pos:position pos:line="73" pos:column="42"/></name><operator pos:line="73" pos:column="42">-&gt;<pos:position pos:line="73" pos:column="47"/></operator><name pos:line="73" pos:column="44">name<pos:position pos:line="73" pos:column="48"/></name></name> <operator pos:line="73" pos:column="49">+<pos:position pos:line="73" pos:column="50"/></operator> <literal type="number" pos:line="73" pos:column="51">10<pos:position pos:line="73" pos:column="53"/></literal></expr>;<pos:position pos:line="73" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="74" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="75" pos:column="25">else <if pos:line="75" pos:column="30">if <condition pos:line="75" pos:column="33">(<expr><call><name pos:line="75" pos:column="34">starts_with<pos:position pos:line="75" pos:column="45"/></name><argument_list pos:line="75" pos:column="45">(<argument><expr><name><name pos:line="75" pos:column="46">rm<pos:position pos:line="75" pos:column="48"/></name><operator pos:line="75" pos:column="48">-&gt;<pos:position pos:line="75" pos:column="53"/></operator><name pos:line="75" pos:column="50">name<pos:position pos:line="75" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="56">"refs/remotes/"<pos:position pos:line="75" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="73"/></condition><then pos:line="75" pos:column="73"> <block pos:line="75" pos:column="74">{
				<expr_stmt><expr><name pos:line="76" pos:column="33">kind<pos:position pos:line="76" pos:column="37"/></name> <operator pos:line="76" pos:column="38">=<pos:position pos:line="76" pos:column="39"/></operator> <literal type="string" pos:line="76" pos:column="40">"remote-tracking branch"<pos:position pos:line="76" pos:column="64"/></literal></expr>;<pos:position pos:line="76" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><name pos:line="77" pos:column="33">what<pos:position pos:line="77" pos:column="37"/></name> <operator pos:line="77" pos:column="38">=<pos:position pos:line="77" pos:column="39"/></operator> <name><name pos:line="77" pos:column="40">rm<pos:position pos:line="77" pos:column="42"/></name><operator pos:line="77" pos:column="42">-&gt;<pos:position pos:line="77" pos:column="47"/></operator><name pos:line="77" pos:column="44">name<pos:position pos:line="77" pos:column="48"/></name></name> <operator pos:line="77" pos:column="49">+<pos:position pos:line="77" pos:column="50"/></operator> <literal type="number" pos:line="77" pos:column="51">13<pos:position pos:line="77" pos:column="53"/></literal></expr>;<pos:position pos:line="77" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="78" pos:column="26"/></block></then></if></elseif>
			<else pos:line="79" pos:column="25">else <block pos:line="79" pos:column="30">{
				<expr_stmt><expr><name pos:line="80" pos:column="33">kind<pos:position pos:line="80" pos:column="37"/></name> <operator pos:line="80" pos:column="38">=<pos:position pos:line="80" pos:column="39"/></operator> <literal type="string" pos:line="80" pos:column="40">""<pos:position pos:line="80" pos:column="42"/></literal></expr>;<pos:position pos:line="80" pos:column="43"/></expr_stmt>
				<expr_stmt><expr><name pos:line="81" pos:column="33">what<pos:position pos:line="81" pos:column="37"/></name> <operator pos:line="81" pos:column="38">=<pos:position pos:line="81" pos:column="39"/></operator> <name><name pos:line="81" pos:column="40">rm<pos:position pos:line="81" pos:column="42"/></name><operator pos:line="81" pos:column="42">-&gt;<pos:position pos:line="81" pos:column="47"/></operator><name pos:line="81" pos:column="44">name<pos:position pos:line="81" pos:column="48"/></name></name></expr>;<pos:position pos:line="81" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="82" pos:column="26"/></block></else></if>

			<expr_stmt><expr><name pos:line="84" pos:column="25">url_len<pos:position pos:line="84" pos:column="32"/></name> <operator pos:line="84" pos:column="33">=<pos:position pos:line="84" pos:column="34"/></operator> <call><name pos:line="84" pos:column="35">strlen<pos:position pos:line="84" pos:column="41"/></name><argument_list pos:line="84" pos:column="41">(<argument><expr><name pos:line="84" pos:column="42">url<pos:position pos:line="84" pos:column="45"/></name></expr></argument>)<pos:position pos:line="84" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="47"/></expr_stmt>
			<for pos:line="85" pos:column="25">for <control pos:line="85" pos:column="29">(<init><expr><name pos:line="85" pos:column="30">i<pos:position pos:line="85" pos:column="31"/></name> <operator pos:line="85" pos:column="32">=<pos:position pos:line="85" pos:column="33"/></operator> <name pos:line="85" pos:column="34">url_len<pos:position pos:line="85" pos:column="41"/></name> <operator pos:line="85" pos:column="42">-<pos:position pos:line="85" pos:column="43"/></operator> <literal type="number" pos:line="85" pos:column="44">1<pos:position pos:line="85" pos:column="45"/></literal></expr>;<pos:position pos:line="85" pos:column="46"/></init> <condition><expr><name><name pos:line="85" pos:column="47">url<pos:position pos:line="85" pos:column="50"/></name><index pos:line="85" pos:column="50">[<expr><name pos:line="85" pos:column="51">i<pos:position pos:line="85" pos:column="52"/></name></expr>]<pos:position pos:line="85" pos:column="53"/></index></name> <operator pos:line="85" pos:column="54">==<pos:position pos:line="85" pos:column="56"/></operator> <literal type="char" pos:line="85" pos:column="57">'/'<pos:position pos:line="85" pos:column="60"/></literal> <operator pos:line="85" pos:column="61">&amp;&amp;<pos:position pos:line="85" pos:column="71"/></operator> <literal type="number" pos:line="85" pos:column="64">0<pos:position pos:line="85" pos:column="65"/></literal> <operator pos:line="85" pos:column="66">&lt;=<pos:position pos:line="85" pos:column="71"/></operator> <name pos:line="85" pos:column="69">i<pos:position pos:line="85" pos:column="70"/></name></expr>;<pos:position pos:line="85" pos:column="71"/></condition> <incr><expr><name pos:line="85" pos:column="72">i<pos:position pos:line="85" pos:column="73"/></name><operator pos:line="85" pos:column="73">--<pos:position pos:line="85" pos:column="75"/></operator></expr></incr>)<pos:position pos:line="85" pos:column="76"/></control>
				<block type="pseudo"><empty_stmt pos:line="86" pos:column="33">;<pos:position pos:line="86" pos:column="34"/></empty_stmt></block></for>
			<expr_stmt><expr><name pos:line="87" pos:column="25">url_len<pos:position pos:line="87" pos:column="32"/></name> <operator pos:line="87" pos:column="33">=<pos:position pos:line="87" pos:column="34"/></operator> <name pos:line="87" pos:column="35">i<pos:position pos:line="87" pos:column="36"/></name> <operator pos:line="87" pos:column="37">+<pos:position pos:line="87" pos:column="38"/></operator> <literal type="number" pos:line="87" pos:column="39">1<pos:position pos:line="87" pos:column="40"/></literal></expr>;<pos:position pos:line="87" pos:column="41"/></expr_stmt>
			<if pos:line="88" pos:column="25">if <condition pos:line="88" pos:column="28">(<expr><literal type="number" pos:line="88" pos:column="29">4<pos:position pos:line="88" pos:column="30"/></literal> <operator pos:line="88" pos:column="31">&lt;<pos:position pos:line="88" pos:column="35"/></operator> <name pos:line="88" pos:column="33">i<pos:position pos:line="88" pos:column="34"/></name> <operator pos:line="88" pos:column="35">&amp;&amp;<pos:position pos:line="88" pos:column="45"/></operator> <operator pos:line="88" pos:column="38">!<pos:position pos:line="88" pos:column="39"/></operator><call><name pos:line="88" pos:column="39">strncmp<pos:position pos:line="88" pos:column="46"/></name><argument_list pos:line="88" pos:column="46">(<argument><expr><literal type="string" pos:line="88" pos:column="47">".git"<pos:position pos:line="88" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="55">url<pos:position pos:line="88" pos:column="58"/></name> <operator pos:line="88" pos:column="59">+<pos:position pos:line="88" pos:column="60"/></operator> <name pos:line="88" pos:column="61">i<pos:position pos:line="88" pos:column="62"/></name> <operator pos:line="88" pos:column="63">-<pos:position pos:line="88" pos:column="64"/></operator> <literal type="number" pos:line="88" pos:column="65">3<pos:position pos:line="88" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="68">4<pos:position pos:line="88" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="71"/></condition><then pos:line="88" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><name pos:line="89" pos:column="33">url_len<pos:position pos:line="89" pos:column="40"/></name> <operator pos:line="89" pos:column="41">=<pos:position pos:line="89" pos:column="42"/></operator> <name pos:line="89" pos:column="43">i<pos:position pos:line="89" pos:column="44"/></name> <operator pos:line="89" pos:column="45">-<pos:position pos:line="89" pos:column="46"/></operator> <literal type="number" pos:line="89" pos:column="47">3<pos:position pos:line="89" pos:column="48"/></literal></expr>;<pos:position pos:line="89" pos:column="49"/></expr_stmt></block></then></if>

			<expr_stmt><expr><call><name pos:line="91" pos:column="25">strbuf_reset<pos:position pos:line="91" pos:column="37"/></name><argument_list pos:line="91" pos:column="37">(<argument><expr><operator pos:line="91" pos:column="38">&amp;<pos:position pos:line="91" pos:column="43"/></operator><name pos:line="91" pos:column="39">note<pos:position pos:line="91" pos:column="43"/></name></expr></argument>)<pos:position pos:line="91" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="45"/></expr_stmt>
			<if pos:line="92" pos:column="25">if <condition pos:line="92" pos:column="28">(<expr><operator pos:line="92" pos:column="29">*<pos:position pos:line="92" pos:column="30"/></operator><name pos:line="92" pos:column="30">what<pos:position pos:line="92" pos:column="34"/></name></expr>)<pos:position pos:line="92" pos:column="35"/></condition><then pos:line="92" pos:column="35"> <block pos:line="92" pos:column="36">{
				<if pos:line="93" pos:column="33">if <condition pos:line="93" pos:column="36">(<expr><operator pos:line="93" pos:column="37">*<pos:position pos:line="93" pos:column="38"/></operator><name pos:line="93" pos:column="38">kind<pos:position pos:line="93" pos:column="42"/></name></expr>)<pos:position pos:line="93" pos:column="43"/></condition><then pos:line="93" pos:column="43">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="41">strbuf_addf<pos:position pos:line="94" pos:column="52"/></name><argument_list pos:line="94" pos:column="52">(<argument><expr><operator pos:line="94" pos:column="53">&amp;<pos:position pos:line="94" pos:column="58"/></operator><name pos:line="94" pos:column="54">note<pos:position pos:line="94" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="60">"%s "<pos:position pos:line="94" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="67">kind<pos:position pos:line="94" pos:column="71"/></name></expr></argument>)<pos:position pos:line="94" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="73"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="95" pos:column="33">strbuf_addf<pos:position pos:line="95" pos:column="44"/></name><argument_list pos:line="95" pos:column="44">(<argument><expr><operator pos:line="95" pos:column="45">&amp;<pos:position pos:line="95" pos:column="50"/></operator><name pos:line="95" pos:column="46">note<pos:position pos:line="95" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="52">"'%s' of "<pos:position pos:line="95" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="64">what<pos:position pos:line="95" pos:column="68"/></name></expr></argument>)<pos:position pos:line="95" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="96" pos:column="26"/></block></then></if>
			<switch pos:line="97" pos:column="25">switch <condition pos:line="97" pos:column="32">(<expr><name><name pos:line="97" pos:column="33">rm<pos:position pos:line="97" pos:column="35"/></name><operator pos:line="97" pos:column="35">-&gt;<pos:position pos:line="97" pos:column="40"/></operator><name pos:line="97" pos:column="37">fetch_head_status<pos:position pos:line="97" pos:column="54"/></name></name></expr>)<pos:position pos:line="97" pos:column="55"/></condition> <block pos:line="97" pos:column="56">{
			<case pos:line="98" pos:column="25">case <expr><name pos:line="98" pos:column="30">FETCH_HEAD_NOT_FOR_MERGE<pos:position pos:line="98" pos:column="54"/></name></expr>:<pos:position pos:line="98" pos:column="55"/></case>
				<expr_stmt><expr><name pos:line="99" pos:column="33">merge_status_marker<pos:position pos:line="99" pos:column="52"/></name> <operator pos:line="99" pos:column="53">=<pos:position pos:line="99" pos:column="54"/></operator> <literal type="string" pos:line="99" pos:column="55">"not-for-merge"<pos:position pos:line="99" pos:column="70"/></literal></expr>;<pos:position pos:line="99" pos:column="71"/></expr_stmt>
				<comment type="block" pos:line="100" pos:column="33">/* fall-through */</comment>
			<case pos:line="101" pos:column="25">case <expr><name pos:line="101" pos:column="30">FETCH_HEAD_MERGE<pos:position pos:line="101" pos:column="46"/></name></expr>:<pos:position pos:line="101" pos:column="47"/></case>
				<expr_stmt><expr><call><name pos:line="102" pos:column="33">fprintf<pos:position pos:line="102" pos:column="40"/></name><argument_list pos:line="102" pos:column="40">(<argument><expr><name pos:line="102" pos:column="41">fp<pos:position pos:line="102" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="45">"%s\t%s\t%s"<pos:position pos:line="102" pos:column="57"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="103" pos:column="41">oid_to_hex<pos:position pos:line="103" pos:column="51"/></name><argument_list pos:line="103" pos:column="51">(<argument><expr><operator pos:line="103" pos:column="52">&amp;<pos:position pos:line="103" pos:column="57"/></operator><name><name pos:line="103" pos:column="53">rm<pos:position pos:line="103" pos:column="55"/></name><operator pos:line="103" pos:column="55">-&gt;<pos:position pos:line="103" pos:column="60"/></operator><name pos:line="103" pos:column="57">old_oid<pos:position pos:line="103" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="65"/></argument_list></call></expr></argument>,
					<argument><expr><name pos:line="104" pos:column="41">merge_status_marker<pos:position pos:line="104" pos:column="60"/></name></expr></argument>,
					<argument><expr><name><name pos:line="105" pos:column="41">note<pos:position pos:line="105" pos:column="45"/></name><operator pos:line="105" pos:column="45">.<pos:position pos:line="105" pos:column="46"/></operator><name pos:line="105" pos:column="46">buf<pos:position pos:line="105" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="51"/></expr_stmt>
				<for pos:line="106" pos:column="33">for <control pos:line="106" pos:column="37">(<init><expr><name pos:line="106" pos:column="38">i<pos:position pos:line="106" pos:column="39"/></name> <operator pos:line="106" pos:column="40">=<pos:position pos:line="106" pos:column="41"/></operator> <literal type="number" pos:line="106" pos:column="42">0<pos:position pos:line="106" pos:column="43"/></literal></expr>;<pos:position pos:line="106" pos:column="44"/></init> <condition><expr><name pos:line="106" pos:column="45">i<pos:position pos:line="106" pos:column="46"/></name> <operator pos:line="106" pos:column="47">&lt;<pos:position pos:line="106" pos:column="51"/></operator> <name pos:line="106" pos:column="49">url_len<pos:position pos:line="106" pos:column="56"/></name></expr>;<pos:position pos:line="106" pos:column="57"/></condition> <incr><expr><operator pos:line="106" pos:column="58">++<pos:position pos:line="106" pos:column="60"/></operator><name pos:line="106" pos:column="60">i<pos:position pos:line="106" pos:column="61"/></name></expr></incr>)<pos:position pos:line="106" pos:column="62"/></control>
					<block type="pseudo"><if pos:line="107" pos:column="41">if <condition pos:line="107" pos:column="44">(<expr><literal type="char" pos:line="107" pos:column="45">'\n'<pos:position pos:line="107" pos:column="49"/></literal> <operator pos:line="107" pos:column="50">==<pos:position pos:line="107" pos:column="52"/></operator> <name><name pos:line="107" pos:column="53">url<pos:position pos:line="107" pos:column="56"/></name><index pos:line="107" pos:column="56">[<expr><name pos:line="107" pos:column="57">i<pos:position pos:line="107" pos:column="58"/></name></expr>]<pos:position pos:line="107" pos:column="59"/></index></name></expr>)<pos:position pos:line="107" pos:column="60"/></condition><then pos:line="107" pos:column="60">
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="108" pos:column="49">fputs<pos:position pos:line="108" pos:column="54"/></name><argument_list pos:line="108" pos:column="54">(<argument><expr><literal type="string" pos:line="108" pos:column="55">"\\n"<pos:position pos:line="108" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="62">fp<pos:position pos:line="108" pos:column="64"/></name></expr></argument>)<pos:position pos:line="108" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="66"/></expr_stmt></block></then>
					<else pos:line="109" pos:column="41">else
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="49">fputc<pos:position pos:line="110" pos:column="54"/></name><argument_list pos:line="110" pos:column="54">(<argument><expr><name><name pos:line="110" pos:column="55">url<pos:position pos:line="110" pos:column="58"/></name><index pos:line="110" pos:column="58">[<expr><name pos:line="110" pos:column="59">i<pos:position pos:line="110" pos:column="60"/></name></expr>]<pos:position pos:line="110" pos:column="61"/></index></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="63">fp<pos:position pos:line="110" pos:column="65"/></name></expr></argument>)<pos:position pos:line="110" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="67"/></expr_stmt></block></else></if></block></for>
				<expr_stmt><expr><call><name pos:line="111" pos:column="33">fputc<pos:position pos:line="111" pos:column="38"/></name><argument_list pos:line="111" pos:column="38">(<argument><expr><literal type="char" pos:line="111" pos:column="39">'\n'<pos:position pos:line="111" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="45">fp<pos:position pos:line="111" pos:column="47"/></name></expr></argument>)<pos:position pos:line="111" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="49"/></expr_stmt>
				<break pos:line="112" pos:column="33">break;<pos:position pos:line="112" pos:column="39"/></break>
			<default pos:line="113" pos:column="25">default:<pos:position pos:line="113" pos:column="33"/></default>
				<comment type="block" pos:line="114" pos:column="33">/* do not write anything to FETCH_HEAD */</comment>
				<break pos:line="115" pos:column="33">break;<pos:position pos:line="115" pos:column="39"/></break>
			}<pos:position pos:line="116" pos:column="26"/></block></switch>

			<expr_stmt><expr><call><name pos:line="118" pos:column="25">strbuf_reset<pos:position pos:line="118" pos:column="37"/></name><argument_list pos:line="118" pos:column="37">(<argument><expr><operator pos:line="118" pos:column="38">&amp;<pos:position pos:line="118" pos:column="43"/></operator><name pos:line="118" pos:column="39">note<pos:position pos:line="118" pos:column="43"/></name></expr></argument>)<pos:position pos:line="118" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="45"/></expr_stmt>
			<if pos:line="119" pos:column="25">if <condition pos:line="119" pos:column="28">(<expr><name pos:line="119" pos:column="29">ref<pos:position pos:line="119" pos:column="32"/></name></expr>)<pos:position pos:line="119" pos:column="33"/></condition><then pos:line="119" pos:column="33"> <block pos:line="119" pos:column="34">{
				<expr_stmt><expr><name pos:line="120" pos:column="33">rc<pos:position pos:line="120" pos:column="35"/></name> <operator pos:line="120" pos:column="36">|=<pos:position pos:line="120" pos:column="38"/></operator> <call><name pos:line="120" pos:column="39">update_local_ref<pos:position pos:line="120" pos:column="55"/></name><argument_list pos:line="120" pos:column="55">(<argument><expr><name pos:line="120" pos:column="56">ref<pos:position pos:line="120" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="61">what<pos:position pos:line="120" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="67">rm<pos:position pos:line="120" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="120" pos:column="71">&amp;<pos:position pos:line="120" pos:column="76"/></operator><name pos:line="120" pos:column="72">note<pos:position pos:line="120" pos:column="76"/></name></expr></argument>)<pos:position pos:line="120" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="78"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="121" pos:column="33">free<pos:position pos:line="121" pos:column="37"/></name><argument_list pos:line="121" pos:column="37">(<argument><expr><name pos:line="121" pos:column="38">ref<pos:position pos:line="121" pos:column="41"/></name></expr></argument>)<pos:position pos:line="121" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="43"/></expr_stmt>
			}<pos:position pos:line="122" pos:column="26"/></block></then> <else pos:line="122" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="123" pos:column="33">strbuf_addf<pos:position pos:line="123" pos:column="44"/></name><argument_list pos:line="123" pos:column="44">(<argument><expr><operator pos:line="123" pos:column="45">&amp;<pos:position pos:line="123" pos:column="50"/></operator><name pos:line="123" pos:column="46">note<pos:position pos:line="123" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="52">"* %-*s %-*s -&gt; FETCH_HEAD"<pos:position pos:line="123" pos:column="82"/></literal></expr></argument>,
					    <argument><expr><name pos:line="124" pos:column="45">TRANSPORT_SUMMARY_WIDTH<pos:position pos:line="124" pos:column="68"/></name></expr></argument>,
					    <argument><expr><ternary><condition><expr><operator pos:line="125" pos:column="45">*<pos:position pos:line="125" pos:column="46"/></operator><name pos:line="125" pos:column="46">kind<pos:position pos:line="125" pos:column="50"/></name></expr> ?<pos:position pos:line="125" pos:column="52"/></condition><then pos:line="125" pos:column="52"> <expr><name pos:line="125" pos:column="53">kind<pos:position pos:line="125" pos:column="57"/></name></expr> <pos:position pos:line="125" pos:column="58"/></then><else pos:line="125" pos:column="58">: <expr><literal type="string" pos:line="125" pos:column="60">"branch"<pos:position pos:line="125" pos:column="68"/></literal></expr></else></ternary></expr></argument>,
					    <argument><expr><name pos:line="126" pos:column="45">REFCOL_WIDTH<pos:position pos:line="126" pos:column="57"/></name></expr></argument>,
					    <argument><expr><ternary><condition><expr><operator pos:line="127" pos:column="45">*<pos:position pos:line="127" pos:column="46"/></operator><name pos:line="127" pos:column="46">what<pos:position pos:line="127" pos:column="50"/></name></expr> ?<pos:position pos:line="127" pos:column="52"/></condition><then pos:line="127" pos:column="52"> <expr><name pos:line="127" pos:column="53">what<pos:position pos:line="127" pos:column="57"/></name></expr> <pos:position pos:line="127" pos:column="58"/></then><else pos:line="127" pos:column="58">: <expr><literal type="string" pos:line="127" pos:column="60">"HEAD"<pos:position pos:line="127" pos:column="66"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="127" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="68"/></expr_stmt></block></else></if>
			<if pos:line="128" pos:column="25">if <condition pos:line="128" pos:column="28">(<expr><name><name pos:line="128" pos:column="29">note<pos:position pos:line="128" pos:column="33"/></name><operator pos:line="128" pos:column="33">.<pos:position pos:line="128" pos:column="34"/></operator><name pos:line="128" pos:column="34">len<pos:position pos:line="128" pos:column="37"/></name></name></expr>)<pos:position pos:line="128" pos:column="38"/></condition><then pos:line="128" pos:column="38"> <block pos:line="128" pos:column="39">{
				<if pos:line="129" pos:column="33">if <condition pos:line="129" pos:column="36">(<expr><name pos:line="129" pos:column="37">verbosity<pos:position pos:line="129" pos:column="46"/></name> <operator pos:line="129" pos:column="47">&gt;=<pos:position pos:line="129" pos:column="52"/></operator> <literal type="number" pos:line="129" pos:column="50">0<pos:position pos:line="129" pos:column="51"/></literal> <operator pos:line="129" pos:column="52">&amp;&amp;<pos:position pos:line="129" pos:column="62"/></operator> <operator pos:line="129" pos:column="55">!<pos:position pos:line="129" pos:column="56"/></operator><name pos:line="129" pos:column="56">shown_url<pos:position pos:line="129" pos:column="65"/></name></expr>)<pos:position pos:line="129" pos:column="66"/></condition><then pos:line="129" pos:column="66"> <block pos:line="129" pos:column="67">{
					<expr_stmt><expr><call><name pos:line="130" pos:column="41">fprintf<pos:position pos:line="130" pos:column="48"/></name><argument_list pos:line="130" pos:column="48">(<argument><expr><name pos:line="130" pos:column="49">stderr<pos:position pos:line="130" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="130" pos:column="57">_<pos:position pos:line="130" pos:column="58"/></name><argument_list pos:line="130" pos:column="58">(<argument><expr><literal type="string" pos:line="130" pos:column="59">"From %.*s\n"<pos:position pos:line="130" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="73"/></argument_list></call></expr></argument>,
							<argument><expr><name pos:line="131" pos:column="57">url_len<pos:position pos:line="131" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="66">url<pos:position pos:line="131" pos:column="69"/></name></expr></argument>)<pos:position pos:line="131" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="71"/></expr_stmt>
					<expr_stmt><expr><name pos:line="132" pos:column="41">shown_url<pos:position pos:line="132" pos:column="50"/></name> <operator pos:line="132" pos:column="51">=<pos:position pos:line="132" pos:column="52"/></operator> <literal type="number" pos:line="132" pos:column="53">1<pos:position pos:line="132" pos:column="54"/></literal></expr>;<pos:position pos:line="132" pos:column="55"/></expr_stmt>
				}<pos:position pos:line="133" pos:column="34"/></block></then></if>
				<if pos:line="134" pos:column="33">if <condition pos:line="134" pos:column="36">(<expr><name pos:line="134" pos:column="37">verbosity<pos:position pos:line="134" pos:column="46"/></name> <operator pos:line="134" pos:column="47">&gt;=<pos:position pos:line="134" pos:column="52"/></operator> <literal type="number" pos:line="134" pos:column="50">0<pos:position pos:line="134" pos:column="51"/></literal></expr>)<pos:position pos:line="134" pos:column="52"/></condition><then pos:line="134" pos:column="52">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="135" pos:column="41">fprintf<pos:position pos:line="135" pos:column="48"/></name><argument_list pos:line="135" pos:column="48">(<argument><expr><name pos:line="135" pos:column="49">stderr<pos:position pos:line="135" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="57">" %s\n"<pos:position pos:line="135" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="135" pos:column="66">note<pos:position pos:line="135" pos:column="70"/></name><operator pos:line="135" pos:column="70">.<pos:position pos:line="135" pos:column="71"/></operator><name pos:line="135" pos:column="71">buf<pos:position pos:line="135" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="76"/></expr_stmt></block></then></if>
			}<pos:position pos:line="136" pos:column="26"/></block></then></if>
		}<pos:position pos:line="137" pos:column="18"/></block></for>
	}<pos:position pos:line="138" pos:column="10"/></block></for>

	<if pos:line="140" pos:column="9">if <condition pos:line="140" pos:column="12">(<expr><name pos:line="140" pos:column="13">rc<pos:position pos:line="140" pos:column="15"/></name> <operator pos:line="140" pos:column="16">&amp;<pos:position pos:line="140" pos:column="21"/></operator> <name pos:line="140" pos:column="18">STORE_REF_ERROR_DF_CONFLICT<pos:position pos:line="140" pos:column="45"/></name></expr>)<pos:position pos:line="140" pos:column="46"/></condition><then pos:line="140" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="141" pos:column="17">error<pos:position pos:line="141" pos:column="22"/></name><argument_list pos:line="141" pos:column="22">(<argument><expr><call><name pos:line="141" pos:column="23">_<pos:position pos:line="141" pos:column="24"/></name><argument_list pos:line="141" pos:column="24">(<argument><expr><literal type="string" pos:line="141" pos:column="25">"some local refs could not be updated; try running\n"<pos:position pos:line="141" pos:column="78"/></literal>
		      <literal type="string" pos:line="142" pos:column="23">" 'git remote prune %s' to remove any old, conflicting "<pos:position pos:line="142" pos:column="79"/></literal>
		      <literal type="string" pos:line="143" pos:column="23">"branches"<pos:position pos:line="143" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="143" pos:column="36">remote_name<pos:position pos:line="143" pos:column="47"/></name></expr></argument>)<pos:position pos:line="143" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="49"/></expr_stmt></block></then></if>

 <label><name pos:line="145" pos:column="2">abort<pos:position pos:line="145" pos:column="7"/></name>:<pos:position pos:line="145" pos:column="8"/></label>
	<expr_stmt><expr><call><name pos:line="146" pos:column="9">strbuf_release<pos:position pos:line="146" pos:column="23"/></name><argument_list pos:line="146" pos:column="23">(<argument><expr><operator pos:line="146" pos:column="24">&amp;<pos:position pos:line="146" pos:column="29"/></operator><name pos:line="146" pos:column="25">note<pos:position pos:line="146" pos:column="29"/></name></expr></argument>)<pos:position pos:line="146" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="147" pos:column="9">free<pos:position pos:line="147" pos:column="13"/></name><argument_list pos:line="147" pos:column="13">(<argument><expr><name pos:line="147" pos:column="14">url<pos:position pos:line="147" pos:column="17"/></name></expr></argument>)<pos:position pos:line="147" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="148" pos:column="9">fclose<pos:position pos:line="148" pos:column="15"/></name><argument_list pos:line="148" pos:column="15">(<argument><expr><name pos:line="148" pos:column="16">fp<pos:position pos:line="148" pos:column="18"/></name></expr></argument>)<pos:position pos:line="148" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="20"/></expr_stmt>
	<return pos:line="149" pos:column="9">return <expr><name pos:line="149" pos:column="16">rc<pos:position pos:line="149" pos:column="18"/></name></expr>;<pos:position pos:line="149" pos:column="19"/></return>
}<pos:position pos:line="150" pos:column="2"/></block></function></unit>

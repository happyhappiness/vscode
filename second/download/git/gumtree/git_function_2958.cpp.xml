<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2958.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">do_rerere_one_path<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">string_list_item<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">rr_item<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">string_list<pos:position pos:line="2" pos:column="50"/></name></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">update<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">path<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">rr_item<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">-&gt;<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="37">string<pos:position pos:line="4" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">rerere_id<pos:position pos:line="5" pos:column="25"/></name></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">id<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name><name pos:line="5" pos:column="32">rr_item<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">-&gt;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="41">util<pos:position pos:line="5" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">rerere_dir<pos:position pos:line="6" pos:column="26"/></name></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">rr_dir<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><name><name pos:line="6" pos:column="37">id<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">collection<pos:position pos:line="6" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">variant<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">variant<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <name><name pos:line="9" pos:column="19">id<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">variant<pos:position pos:line="9" pos:column="30"/></name></name></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* Has the user resolved it already? */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">variant<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">&gt;=<pos:position pos:line="12" pos:column="26"/></operator> <literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26"> <block pos:line="12" pos:column="27">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><call><name pos:line="13" pos:column="22">handle_file<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">path<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">NULL<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">NULL<pos:position pos:line="13" pos:column="50"/></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52"> <block pos:line="13" pos:column="53">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">copy_file<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><call><name pos:line="14" pos:column="35">rerere_path<pos:position pos:line="14" pos:column="46"/></name><argument_list pos:line="14" pos:column="46">(<argument><expr><name pos:line="14" pos:column="47">id<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="51">"postimage"<pos:position pos:line="14" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="65">path<pos:position pos:line="14" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="71">0666<pos:position pos:line="14" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="15" pos:column="25">id<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">collection<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">status<pos:position pos:line="15" pos:column="47"/></name><index pos:line="15" pos:column="47">[<expr><name pos:line="15" pos:column="48">variant<pos:position pos:line="15" pos:column="55"/></name></expr>]<pos:position pos:line="15" pos:column="56"/></index></name> <operator pos:line="15" pos:column="57">|=<pos:position pos:line="15" pos:column="59"/></operator> <name pos:line="15" pos:column="60">RR_HAS_POSTIMAGE<pos:position pos:line="15" pos:column="76"/></name></expr>;<pos:position pos:line="15" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">fprintf<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">stderr<pos:position pos:line="16" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="41">"Recorded resolution for '%s'.\n"<pos:position pos:line="16" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="76">path<pos:position pos:line="16" pos:column="80"/></name></expr></argument>)<pos:position pos:line="16" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="82"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">free_rerere_id<pos:position pos:line="17" pos:column="39"/></name><argument_list pos:line="17" pos:column="39">(<argument><expr><name pos:line="17" pos:column="40">rr_item<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="18" pos:column="25">rr_item<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">util<pos:position pos:line="18" pos:column="38"/></name></name> <operator pos:line="18" pos:column="39">=<pos:position pos:line="18" pos:column="40"/></operator> <name pos:line="18" pos:column="41">NULL<pos:position pos:line="18" pos:column="45"/></name></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
			<return pos:line="19" pos:column="25">return;<pos:position pos:line="19" pos:column="32"/></return>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="21" pos:column="17">/*
		 * There may be other variants that can cleanly
		 * replay.  Try them and update the variant number for
		 * this one.
		 */</comment>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="28" pos:column="9">/* Does any existing resolution apply cleanly? */</comment>
	<for pos:line="29" pos:column="9">for <control pos:line="29" pos:column="13">(<init><expr><name pos:line="29" pos:column="14">variant<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <literal type="number" pos:line="29" pos:column="24">0<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></init> <condition><expr><name pos:line="29" pos:column="27">variant<pos:position pos:line="29" pos:column="34"/></name> <operator pos:line="29" pos:column="35">&lt;<pos:position pos:line="29" pos:column="39"/></operator> <name><name pos:line="29" pos:column="37">rr_dir<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">-&gt;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="45">status_nr<pos:position pos:line="29" pos:column="54"/></name></name></expr>;<pos:position pos:line="29" pos:column="55"/></condition> <incr><expr><name pos:line="29" pos:column="56">variant<pos:position pos:line="29" pos:column="63"/></name><operator pos:line="29" pos:column="63">++<pos:position pos:line="29" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="66"/></control> <block pos:line="29" pos:column="67">{
		<decl_stmt><decl><type><specifier pos:line="30" pos:column="17">const<pos:position pos:line="30" pos:column="22"/></specifier> <name pos:line="30" pos:column="23">int<pos:position pos:line="30" pos:column="26"/></name></type> <name pos:line="30" pos:column="27">both<pos:position pos:line="30" pos:column="31"/></name> <init pos:line="30" pos:column="32">= <expr><name pos:line="30" pos:column="34">RR_HAS_PREIMAGE<pos:position pos:line="30" pos:column="49"/></name> <operator pos:line="30" pos:column="50">|<pos:position pos:line="30" pos:column="51"/></operator> <name pos:line="30" pos:column="52">RR_HAS_POSTIMAGE<pos:position pos:line="30" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="69"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="31" pos:column="17">struct<pos:position pos:line="31" pos:column="23"/></name> <name pos:line="31" pos:column="24">rerere_id<pos:position pos:line="31" pos:column="33"/></name></name></type> <name pos:line="31" pos:column="34">vid<pos:position pos:line="31" pos:column="37"/></name> <init pos:line="31" pos:column="38">= <expr><operator pos:line="31" pos:column="40">*<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="41">id<pos:position pos:line="31" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="44"/></decl_stmt>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">(<pos:position pos:line="33" pos:column="22"/></operator><name><name pos:line="33" pos:column="22">rr_dir<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">-&gt;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="30">status<pos:position pos:line="33" pos:column="36"/></name><index pos:line="33" pos:column="36">[<expr><name pos:line="33" pos:column="37">variant<pos:position pos:line="33" pos:column="44"/></name></expr>]<pos:position pos:line="33" pos:column="45"/></index></name> <operator pos:line="33" pos:column="46">&amp;<pos:position pos:line="33" pos:column="51"/></operator> <name pos:line="33" pos:column="48">both<pos:position pos:line="33" pos:column="52"/></name><operator pos:line="33" pos:column="52">)<pos:position pos:line="33" pos:column="53"/></operator> <operator pos:line="33" pos:column="54">!=<pos:position pos:line="33" pos:column="56"/></operator> <name pos:line="33" pos:column="57">both<pos:position pos:line="33" pos:column="61"/></name></expr>)<pos:position pos:line="33" pos:column="62"/></condition><then pos:line="33" pos:column="62">
			<block type="pseudo"><continue pos:line="34" pos:column="25">continue;<pos:position pos:line="34" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name><name pos:line="36" pos:column="17">vid<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">.<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">variant<pos:position pos:line="36" pos:column="28"/></name></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <name pos:line="36" pos:column="31">variant<pos:position pos:line="36" pos:column="38"/></name></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><call><name pos:line="37" pos:column="21">merge<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><operator pos:line="37" pos:column="27">&amp;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="28">vid<pos:position pos:line="37" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="33">path<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="39"/></condition><then pos:line="37" pos:column="39">
			<block type="pseudo"><continue pos:line="38" pos:column="25">continue;<pos:position pos:line="38" pos:column="34"/></continue></block></then></if> <comment type="block" pos:line="38" pos:column="35">/* failed to replay */</comment>

		<comment type="block" pos:line="40" pos:column="17">/*
		 * If there already is a different variant that applies
		 * cleanly, there is no point maintaining our own variant.
		 */</comment>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><literal type="number" pos:line="44" pos:column="21">0<pos:position pos:line="44" pos:column="22"/></literal> <operator pos:line="44" pos:column="23">&lt;=<pos:position pos:line="44" pos:column="28"/></operator> <name><name pos:line="44" pos:column="26">id<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">-&gt;<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="30">variant<pos:position pos:line="44" pos:column="37"/></name></name> <operator pos:line="44" pos:column="38">&amp;&amp;<pos:position pos:line="44" pos:column="48"/></operator> <name><name pos:line="44" pos:column="41">id<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">-&gt;<pos:position pos:line="44" pos:column="48"/></operator><name pos:line="44" pos:column="45">variant<pos:position pos:line="44" pos:column="52"/></name></name> <operator pos:line="44" pos:column="53">!=<pos:position pos:line="44" pos:column="55"/></operator> <name pos:line="44" pos:column="56">variant<pos:position pos:line="44" pos:column="63"/></name></expr>)<pos:position pos:line="44" pos:column="64"/></condition><then pos:line="44" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="25">remove_variant<pos:position pos:line="45" pos:column="39"/></name><argument_list pos:line="45" pos:column="39">(<argument><expr><name pos:line="45" pos:column="40">id<pos:position pos:line="45" pos:column="42"/></name></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt></block></then></if>

		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">rerere_autoupdate<pos:position pos:line="47" pos:column="38"/></name></expr>)<pos:position pos:line="47" pos:column="39"/></condition><then pos:line="47" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="25">string_list_insert<pos:position pos:line="48" pos:column="43"/></name><argument_list pos:line="48" pos:column="43">(<argument><expr><name pos:line="48" pos:column="44">update<pos:position pos:line="48" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="52">path<pos:position pos:line="48" pos:column="56"/></name></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="58"/></expr_stmt></block></then>
		<else pos:line="49" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">fprintf<pos:position pos:line="50" pos:column="32"/></name><argument_list pos:line="50" pos:column="32">(<argument><expr><name pos:line="50" pos:column="33">stderr<pos:position pos:line="50" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="51" pos:column="33">"Resolved '%s' using previous resolution.\n"<pos:position pos:line="51" pos:column="77"/></literal></expr></argument>,
				<argument><expr><name pos:line="52" pos:column="33">path<pos:position pos:line="52" pos:column="37"/></name></expr></argument>)<pos:position pos:line="52" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">free_rerere_id<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><name pos:line="53" pos:column="32">rr_item<pos:position pos:line="53" pos:column="39"/></name></expr></argument>)<pos:position pos:line="53" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="54" pos:column="17">rr_item<pos:position pos:line="54" pos:column="24"/></name><operator pos:line="54" pos:column="24">-&gt;<pos:position pos:line="54" pos:column="29"/></operator><name pos:line="54" pos:column="26">util<pos:position pos:line="54" pos:column="30"/></name></name> <operator pos:line="54" pos:column="31">=<pos:position pos:line="54" pos:column="32"/></operator> <name pos:line="54" pos:column="33">NULL<pos:position pos:line="54" pos:column="37"/></name></expr>;<pos:position pos:line="54" pos:column="38"/></expr_stmt>
		<return pos:line="55" pos:column="17">return;<pos:position pos:line="55" pos:column="24"/></return>
	}<pos:position pos:line="56" pos:column="10"/></block></for>

	<comment type="block" pos:line="58" pos:column="9">/* None of the existing one applies; we need a new variant */</comment>
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">assign_variant<pos:position pos:line="59" pos:column="23"/></name><argument_list pos:line="59" pos:column="23">(<argument><expr><name pos:line="59" pos:column="24">id<pos:position pos:line="59" pos:column="26"/></name></expr></argument>)<pos:position pos:line="59" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><name pos:line="61" pos:column="9">variant<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <name><name pos:line="61" pos:column="19">id<pos:position pos:line="61" pos:column="21"/></name><operator pos:line="61" pos:column="21">-&gt;<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="23">variant<pos:position pos:line="61" pos:column="30"/></name></name></expr>;<pos:position pos:line="61" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">handle_file<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><name pos:line="62" pos:column="21">path<pos:position pos:line="62" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="27">NULL<pos:position pos:line="62" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="33">rerere_path<pos:position pos:line="62" pos:column="44"/></name><argument_list pos:line="62" pos:column="44">(<argument><expr><name pos:line="62" pos:column="45">id<pos:position pos:line="62" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="49">"preimage"<pos:position pos:line="62" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="62"/></expr_stmt>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name><name pos:line="63" pos:column="13">id<pos:position pos:line="63" pos:column="15"/></name><operator pos:line="63" pos:column="15">-&gt;<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="17">collection<pos:position pos:line="63" pos:column="27"/></name><operator pos:line="63" pos:column="27">-&gt;<pos:position pos:line="63" pos:column="32"/></operator><name pos:line="63" pos:column="29">status<pos:position pos:line="63" pos:column="35"/></name><index pos:line="63" pos:column="35">[<expr><name pos:line="63" pos:column="36">variant<pos:position pos:line="63" pos:column="43"/></name></expr>]<pos:position pos:line="63" pos:column="44"/></index></name> <operator pos:line="63" pos:column="45">&amp;<pos:position pos:line="63" pos:column="50"/></operator> <name pos:line="63" pos:column="47">RR_HAS_POSTIMAGE<pos:position pos:line="63" pos:column="63"/></name></expr>)<pos:position pos:line="63" pos:column="64"/></condition><then pos:line="63" pos:column="64"> <block pos:line="63" pos:column="65">{
		<decl_stmt><decl><type><specifier pos:line="64" pos:column="17">const<pos:position pos:line="64" pos:column="22"/></specifier> <name pos:line="64" pos:column="23">char<pos:position pos:line="64" pos:column="27"/></name> <modifier pos:line="64" pos:column="28">*<pos:position pos:line="64" pos:column="29"/></modifier></type><name pos:line="64" pos:column="29">path<pos:position pos:line="64" pos:column="33"/></name> <init pos:line="64" pos:column="34">= <expr><call><name pos:line="64" pos:column="36">rerere_path<pos:position pos:line="64" pos:column="47"/></name><argument_list pos:line="64" pos:column="47">(<argument><expr><name pos:line="64" pos:column="48">id<pos:position pos:line="64" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="52">"postimage"<pos:position pos:line="64" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="64" pos:column="65"/></decl_stmt>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><call><name pos:line="65" pos:column="21">unlink<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><name pos:line="65" pos:column="28">path<pos:position pos:line="65" pos:column="32"/></name></expr></argument>)<pos:position pos:line="65" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="34"/></condition><then pos:line="65" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="25">die_errno<pos:position pos:line="66" pos:column="34"/></name><argument_list pos:line="66" pos:column="34">(<argument><expr><literal type="string" pos:line="66" pos:column="35">"cannot unlink stray '%s'"<pos:position pos:line="66" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="63">path<pos:position pos:line="66" pos:column="67"/></name></expr></argument>)<pos:position pos:line="66" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="69"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="67" pos:column="17">id<pos:position pos:line="67" pos:column="19"/></name><operator pos:line="67" pos:column="19">-&gt;<pos:position pos:line="67" pos:column="24"/></operator><name pos:line="67" pos:column="21">collection<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">-&gt;<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="33">status<pos:position pos:line="67" pos:column="39"/></name><index pos:line="67" pos:column="39">[<expr><name pos:line="67" pos:column="40">variant<pos:position pos:line="67" pos:column="47"/></name></expr>]<pos:position pos:line="67" pos:column="48"/></index></name> <operator pos:line="67" pos:column="49">&amp;=<pos:position pos:line="67" pos:column="55"/></operator> <operator pos:line="67" pos:column="52">~<pos:position pos:line="67" pos:column="53"/></operator><name pos:line="67" pos:column="53">RR_HAS_POSTIMAGE<pos:position pos:line="67" pos:column="69"/></name></expr>;<pos:position pos:line="67" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="69" pos:column="9">id<pos:position pos:line="69" pos:column="11"/></name><operator pos:line="69" pos:column="11">-&gt;<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="13">collection<pos:position pos:line="69" pos:column="23"/></name><operator pos:line="69" pos:column="23">-&gt;<pos:position pos:line="69" pos:column="28"/></operator><name pos:line="69" pos:column="25">status<pos:position pos:line="69" pos:column="31"/></name><index pos:line="69" pos:column="31">[<expr><name pos:line="69" pos:column="32">variant<pos:position pos:line="69" pos:column="39"/></name></expr>]<pos:position pos:line="69" pos:column="40"/></index></name> <operator pos:line="69" pos:column="41">|=<pos:position pos:line="69" pos:column="43"/></operator> <name pos:line="69" pos:column="44">RR_HAS_PREIMAGE<pos:position pos:line="69" pos:column="59"/></name></expr>;<pos:position pos:line="69" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">fprintf<pos:position pos:line="70" pos:column="16"/></name><argument_list pos:line="70" pos:column="16">(<argument><expr><name pos:line="70" pos:column="17">stderr<pos:position pos:line="70" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="25">"Recorded preimage for '%s'\n"<pos:position pos:line="70" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="57">path<pos:position pos:line="70" pos:column="61"/></name></expr></argument>)<pos:position pos:line="70" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="63"/></expr_stmt>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

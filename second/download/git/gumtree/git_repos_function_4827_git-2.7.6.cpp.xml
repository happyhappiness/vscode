<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4827_git-2.7.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_am<pos:position pos:line="1" pos:column="11"/></name><parameter_list pos:line="1" pos:column="11">(<parameter><decl><type><name pos:line="1" pos:column="12">int<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">argc<pos:position pos:line="1" pos:column="20"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier><modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">argv<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">prefix<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">am_state<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">state<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">binary<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><operator pos:line="4" pos:column="22">-<pos:position pos:line="4" pos:column="23"/></operator><literal type="number" pos:line="4" pos:column="23">1<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">keep_cr<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><operator pos:line="5" pos:column="23">-<pos:position pos:line="5" pos:column="24"/></operator><literal type="number" pos:line="5" pos:column="24">1<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">patch_format<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name pos:line="6" pos:column="28">PATCH_FORMAT_UNKNOWN<pos:position pos:line="6" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">enum<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">resume_mode<pos:position pos:line="7" pos:column="25"/></name></name></type> <name pos:line="7" pos:column="26">resume<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><name pos:line="7" pos:column="35">RESUME_FALSE<pos:position pos:line="7" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">in_progress<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier> <specifier pos:line="10" pos:column="22">const<pos:position pos:line="10" pos:column="27"/></specifier></type> <name><name pos:line="10" pos:column="28">usage<pos:position pos:line="10" pos:column="33"/></name><index pos:line="10" pos:column="33">[]<pos:position pos:line="10" pos:column="35"/></index></name> <init pos:line="10" pos:column="36">= <expr><block pos:line="10" pos:column="38">{
		<expr><call><name pos:line="11" pos:column="17">N_<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><literal type="string" pos:line="11" pos:column="20">"git am [&lt;options&gt;] [(&lt;mbox&gt;|&lt;Maildir&gt;)...]"<pos:position pos:line="11" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr>,
		<expr><call><name pos:line="12" pos:column="17">N_<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="string" pos:line="12" pos:column="20">"git am [&lt;options&gt;] (--continue | --skip | --abort)"<pos:position pos:line="12" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>,
		<expr><name pos:line="13" pos:column="17">NULL<pos:position pos:line="13" pos:column="21"/></name></expr>
	}<pos:position pos:line="14" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="14" pos:column="11"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="16" pos:column="9">struct<pos:position pos:line="16" pos:column="15"/></name> <name pos:line="16" pos:column="16">option<pos:position pos:line="16" pos:column="22"/></name></name></type> <name><name pos:line="16" pos:column="23">options<pos:position pos:line="16" pos:column="30"/></name><index pos:line="16" pos:column="30">[]<pos:position pos:line="16" pos:column="32"/></index></name> <init pos:line="16" pos:column="33">= <expr><block pos:line="16" pos:column="35">{
		<expr><call><name pos:line="17" pos:column="17">OPT_BOOL<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><literal type="char" pos:line="17" pos:column="26">'i'<pos:position pos:line="17" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="31">"interactive"<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="46">&amp;<pos:position pos:line="17" pos:column="51"/></operator><name><name pos:line="17" pos:column="47">state<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">.<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="53">interactive<pos:position pos:line="17" pos:column="64"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="18" pos:column="25">N_<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><literal type="string" pos:line="18" pos:column="28">"run interactively"<pos:position pos:line="18" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>,
		<expr><call><name pos:line="19" pos:column="17">OPT_HIDDEN_BOOL<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><literal type="char" pos:line="19" pos:column="33">'b'<pos:position pos:line="19" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="38">"binary"<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="48">&amp;<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="49">binary<pos:position pos:line="19" pos:column="55"/></name></expr></argument>,
			<argument><expr><call><name pos:line="20" pos:column="25">N_<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><literal type="string" pos:line="20" pos:column="28">"historical option -- no-op"<pos:position pos:line="20" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>,
		<expr><call><name pos:line="21" pos:column="17">OPT_BOOL<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><literal type="char" pos:line="21" pos:column="26">'3'<pos:position pos:line="21" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="31">"3way"<pos:position pos:line="21" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="39">&amp;<pos:position pos:line="21" pos:column="44"/></operator><name><name pos:line="21" pos:column="40">state<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">.<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="46">threeway<pos:position pos:line="21" pos:column="54"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="22" pos:column="25">N_<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><literal type="string" pos:line="22" pos:column="28">"allow fall back on 3way merging if needed"<pos:position pos:line="22" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="73"/></argument_list></call></expr>,
		<expr><call><name pos:line="23" pos:column="17">OPT__QUIET<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><operator pos:line="23" pos:column="28">&amp;<pos:position pos:line="23" pos:column="33"/></operator><name><name pos:line="23" pos:column="29">state<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">.<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="35">quiet<pos:position pos:line="23" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="42">N_<pos:position pos:line="23" pos:column="44"/></name><argument_list pos:line="23" pos:column="44">(<argument><expr><literal type="string" pos:line="23" pos:column="45">"be quiet"<pos:position pos:line="23" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr>,
		<expr><call><name pos:line="24" pos:column="17">OPT_SET_INT<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><literal type="char" pos:line="24" pos:column="29">'s'<pos:position pos:line="24" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="34">"signoff"<pos:position pos:line="24" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="45">&amp;<pos:position pos:line="24" pos:column="50"/></operator><name><name pos:line="24" pos:column="46">state<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">.<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="52">signoff<pos:position pos:line="24" pos:column="59"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="25" pos:column="25">N_<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><literal type="string" pos:line="25" pos:column="28">"add a Signed-off-by line to the commit message"<pos:position pos:line="25" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="77"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="26" pos:column="25">SIGNOFF_EXPLICIT<pos:position pos:line="26" pos:column="41"/></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>,
		<expr><call><name pos:line="27" pos:column="17">OPT_BOOL<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><literal type="char" pos:line="27" pos:column="26">'u'<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="31">"utf8"<pos:position pos:line="27" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="39">&amp;<pos:position pos:line="27" pos:column="44"/></operator><name><name pos:line="27" pos:column="40">state<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">.<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">utf8<pos:position pos:line="27" pos:column="50"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="28" pos:column="25">N_<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><literal type="string" pos:line="28" pos:column="28">"recode into utf8 (default)"<pos:position pos:line="28" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr>,
		<expr><call><name pos:line="29" pos:column="17">OPT_SET_INT<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="char" pos:line="29" pos:column="29">'k'<pos:position pos:line="29" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="34">"keep"<pos:position pos:line="29" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="42">&amp;<pos:position pos:line="29" pos:column="47"/></operator><name><name pos:line="29" pos:column="43">state<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">.<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="49">keep<pos:position pos:line="29" pos:column="53"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="30" pos:column="25">N_<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><literal type="string" pos:line="30" pos:column="28">"pass -k flag to git-mailinfo"<pos:position pos:line="30" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="61">KEEP_TRUE<pos:position pos:line="30" pos:column="70"/></name></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr>,
		<expr><call><name pos:line="31" pos:column="17">OPT_SET_INT<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><literal type="number" pos:line="31" pos:column="29">0<pos:position pos:line="31" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="32">"keep-non-patch"<pos:position pos:line="31" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="50">&amp;<pos:position pos:line="31" pos:column="55"/></operator><name><name pos:line="31" pos:column="51">state<pos:position pos:line="31" pos:column="56"/></name><operator pos:line="31" pos:column="56">.<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="57">keep<pos:position pos:line="31" pos:column="61"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="32" pos:column="25">N_<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><literal type="string" pos:line="32" pos:column="28">"pass -b flag to git-mailinfo"<pos:position pos:line="32" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="61">KEEP_NON_PATCH<pos:position pos:line="32" pos:column="75"/></name></expr></argument>)<pos:position pos:line="32" pos:column="76"/></argument_list></call></expr>,
		<expr><call><name pos:line="33" pos:column="17">OPT_BOOL<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><literal type="char" pos:line="33" pos:column="26">'m'<pos:position pos:line="33" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="31">"message-id"<pos:position pos:line="33" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="45">&amp;<pos:position pos:line="33" pos:column="50"/></operator><name><name pos:line="33" pos:column="46">state<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">.<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="52">message_id<pos:position pos:line="33" pos:column="62"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="34" pos:column="25">N_<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><literal type="string" pos:line="34" pos:column="28">"pass -m flag to git-mailinfo"<pos:position pos:line="34" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call></expr>,
		<expr><block pos:line="35" pos:column="17">{ <expr><name pos:line="35" pos:column="19">OPTION_SET_INT<pos:position pos:line="35" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="35" pos:column="35">0<pos:position pos:line="35" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="35" pos:column="38">"keep-cr"<pos:position pos:line="35" pos:column="47"/></literal></expr>, <expr><operator pos:line="35" pos:column="49">&amp;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="50">keep_cr<pos:position pos:line="35" pos:column="57"/></name></expr>, <expr><name pos:line="35" pos:column="59">NULL<pos:position pos:line="35" pos:column="63"/></name></expr>,
		  <expr><call><name pos:line="36" pos:column="19">N_<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><literal type="string" pos:line="36" pos:column="22">"pass --keep-cr flag to git-mailsplit for mbox format"<pos:position pos:line="36" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="77"/></argument_list></call></expr>,
		  <expr><name pos:line="37" pos:column="19">PARSE_OPT_NOARG<pos:position pos:line="37" pos:column="34"/></name> <operator pos:line="37" pos:column="35">|<pos:position pos:line="37" pos:column="36"/></operator> <name pos:line="37" pos:column="37">PARSE_OPT_NONEG<pos:position pos:line="37" pos:column="52"/></name></expr>, <expr><name pos:line="37" pos:column="54">NULL<pos:position pos:line="37" pos:column="58"/></name></expr>, <expr><literal type="number" pos:line="37" pos:column="60">1<pos:position pos:line="37" pos:column="61"/></literal></expr>}<pos:position pos:line="37" pos:column="62"/></block></expr>,
		<expr><block pos:line="38" pos:column="17">{ <expr><name pos:line="38" pos:column="19">OPTION_SET_INT<pos:position pos:line="38" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="38" pos:column="35">0<pos:position pos:line="38" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="38" pos:column="38">"no-keep-cr"<pos:position pos:line="38" pos:column="50"/></literal></expr>, <expr><operator pos:line="38" pos:column="52">&amp;<pos:position pos:line="38" pos:column="57"/></operator><name pos:line="38" pos:column="53">keep_cr<pos:position pos:line="38" pos:column="60"/></name></expr>, <expr><name pos:line="38" pos:column="62">NULL<pos:position pos:line="38" pos:column="66"/></name></expr>,
		  <expr><call><name pos:line="39" pos:column="19">N_<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><literal type="string" pos:line="39" pos:column="22">"do not pass --keep-cr flag to git-mailsplit independent of am.keepcr"<pos:position pos:line="39" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="93"/></argument_list></call></expr>,
		  <expr><name pos:line="40" pos:column="19">PARSE_OPT_NOARG<pos:position pos:line="40" pos:column="34"/></name> <operator pos:line="40" pos:column="35">|<pos:position pos:line="40" pos:column="36"/></operator> <name pos:line="40" pos:column="37">PARSE_OPT_NONEG<pos:position pos:line="40" pos:column="52"/></name></expr>, <expr><name pos:line="40" pos:column="54">NULL<pos:position pos:line="40" pos:column="58"/></name></expr>, <expr><literal type="number" pos:line="40" pos:column="60">0<pos:position pos:line="40" pos:column="61"/></literal></expr>}<pos:position pos:line="40" pos:column="62"/></block></expr>,
		<expr><call><name pos:line="41" pos:column="17">OPT_BOOL<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><literal type="char" pos:line="41" pos:column="26">'c'<pos:position pos:line="41" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="31">"scissors"<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="43">&amp;<pos:position pos:line="41" pos:column="48"/></operator><name><name pos:line="41" pos:column="44">state<pos:position pos:line="41" pos:column="49"/></name><operator pos:line="41" pos:column="49">.<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="50">scissors<pos:position pos:line="41" pos:column="58"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="42" pos:column="25">N_<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><literal type="string" pos:line="42" pos:column="28">"strip everything before a scissors line"<pos:position pos:line="42" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></call></expr>,
		<expr><call><name pos:line="43" pos:column="17">OPT_PASSTHRU_ARGV<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><literal type="number" pos:line="43" pos:column="35">0<pos:position pos:line="43" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="38">"whitespace"<pos:position pos:line="43" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="52">&amp;<pos:position pos:line="43" pos:column="57"/></operator><name><name pos:line="43" pos:column="53">state<pos:position pos:line="43" pos:column="58"/></name><operator pos:line="43" pos:column="58">.<pos:position pos:line="43" pos:column="59"/></operator><name pos:line="43" pos:column="59">git_apply_opts<pos:position pos:line="43" pos:column="73"/></name></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="75">N_<pos:position pos:line="43" pos:column="77"/></name><argument_list pos:line="43" pos:column="77">(<argument><expr><literal type="string" pos:line="43" pos:column="78">"action"<pos:position pos:line="43" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="87"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="44" pos:column="25">N_<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><literal type="string" pos:line="44" pos:column="28">"pass it through git-apply"<pos:position pos:line="44" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr></argument>,
			<argument><expr><literal type="number" pos:line="45" pos:column="25">0<pos:position pos:line="45" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="27"/></argument_list></call></expr>,
		<expr><call><name pos:line="46" pos:column="17">OPT_PASSTHRU_ARGV<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><literal type="number" pos:line="46" pos:column="35">0<pos:position pos:line="46" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="38">"ignore-space-change"<pos:position pos:line="46" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="46" pos:column="61">&amp;<pos:position pos:line="46" pos:column="66"/></operator><name><name pos:line="46" pos:column="62">state<pos:position pos:line="46" pos:column="67"/></name><operator pos:line="46" pos:column="67">.<pos:position pos:line="46" pos:column="68"/></operator><name pos:line="46" pos:column="68">git_apply_opts<pos:position pos:line="46" pos:column="82"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="84">NULL<pos:position pos:line="46" pos:column="88"/></name></expr></argument>,
			<argument><expr><call><name pos:line="47" pos:column="25">N_<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><literal type="string" pos:line="47" pos:column="28">"pass it through git-apply"<pos:position pos:line="47" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="56"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="48" pos:column="25">PARSE_OPT_NOARG<pos:position pos:line="48" pos:column="40"/></name></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></call></expr>,
		<expr><call><name pos:line="49" pos:column="17">OPT_PASSTHRU_ARGV<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><literal type="number" pos:line="49" pos:column="35">0<pos:position pos:line="49" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="38">"ignore-whitespace"<pos:position pos:line="49" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="59">&amp;<pos:position pos:line="49" pos:column="64"/></operator><name><name pos:line="49" pos:column="60">state<pos:position pos:line="49" pos:column="65"/></name><operator pos:line="49" pos:column="65">.<pos:position pos:line="49" pos:column="66"/></operator><name pos:line="49" pos:column="66">git_apply_opts<pos:position pos:line="49" pos:column="80"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="82">NULL<pos:position pos:line="49" pos:column="86"/></name></expr></argument>,
			<argument><expr><call><name pos:line="50" pos:column="25">N_<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><literal type="string" pos:line="50" pos:column="28">"pass it through git-apply"<pos:position pos:line="50" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="51" pos:column="25">PARSE_OPT_NOARG<pos:position pos:line="51" pos:column="40"/></name></expr></argument>)<pos:position pos:line="51" pos:column="41"/></argument_list></call></expr>,
		<expr><call><name pos:line="52" pos:column="17">OPT_PASSTHRU_ARGV<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><literal type="number" pos:line="52" pos:column="35">0<pos:position pos:line="52" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="38">"directory"<pos:position pos:line="52" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="51">&amp;<pos:position pos:line="52" pos:column="56"/></operator><name><name pos:line="52" pos:column="52">state<pos:position pos:line="52" pos:column="57"/></name><operator pos:line="52" pos:column="57">.<pos:position pos:line="52" pos:column="58"/></operator><name pos:line="52" pos:column="58">git_apply_opts<pos:position pos:line="52" pos:column="72"/></name></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="74">N_<pos:position pos:line="52" pos:column="76"/></name><argument_list pos:line="52" pos:column="76">(<argument><expr><literal type="string" pos:line="52" pos:column="77">"root"<pos:position pos:line="52" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="84"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="53" pos:column="25">N_<pos:position pos:line="53" pos:column="27"/></name><argument_list pos:line="53" pos:column="27">(<argument><expr><literal type="string" pos:line="53" pos:column="28">"pass it through git-apply"<pos:position pos:line="53" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr></argument>,
			<argument><expr><literal type="number" pos:line="54" pos:column="25">0<pos:position pos:line="54" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="27"/></argument_list></call></expr>,
		<expr><call><name pos:line="55" pos:column="17">OPT_PASSTHRU_ARGV<pos:position pos:line="55" pos:column="34"/></name><argument_list pos:line="55" pos:column="34">(<argument><expr><literal type="number" pos:line="55" pos:column="35">0<pos:position pos:line="55" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="38">"exclude"<pos:position pos:line="55" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="55" pos:column="49">&amp;<pos:position pos:line="55" pos:column="54"/></operator><name><name pos:line="55" pos:column="50">state<pos:position pos:line="55" pos:column="55"/></name><operator pos:line="55" pos:column="55">.<pos:position pos:line="55" pos:column="56"/></operator><name pos:line="55" pos:column="56">git_apply_opts<pos:position pos:line="55" pos:column="70"/></name></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="72">N_<pos:position pos:line="55" pos:column="74"/></name><argument_list pos:line="55" pos:column="74">(<argument><expr><literal type="string" pos:line="55" pos:column="75">"path"<pos:position pos:line="55" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="82"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="56" pos:column="25">N_<pos:position pos:line="56" pos:column="27"/></name><argument_list pos:line="56" pos:column="27">(<argument><expr><literal type="string" pos:line="56" pos:column="28">"pass it through git-apply"<pos:position pos:line="56" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="56"/></argument_list></call></expr></argument>,
			<argument><expr><literal type="number" pos:line="57" pos:column="25">0<pos:position pos:line="57" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="27"/></argument_list></call></expr>,
		<expr><call><name pos:line="58" pos:column="17">OPT_PASSTHRU_ARGV<pos:position pos:line="58" pos:column="34"/></name><argument_list pos:line="58" pos:column="34">(<argument><expr><literal type="number" pos:line="58" pos:column="35">0<pos:position pos:line="58" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="38">"include"<pos:position pos:line="58" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="58" pos:column="49">&amp;<pos:position pos:line="58" pos:column="54"/></operator><name><name pos:line="58" pos:column="50">state<pos:position pos:line="58" pos:column="55"/></name><operator pos:line="58" pos:column="55">.<pos:position pos:line="58" pos:column="56"/></operator><name pos:line="58" pos:column="56">git_apply_opts<pos:position pos:line="58" pos:column="70"/></name></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="72">N_<pos:position pos:line="58" pos:column="74"/></name><argument_list pos:line="58" pos:column="74">(<argument><expr><literal type="string" pos:line="58" pos:column="75">"path"<pos:position pos:line="58" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="82"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="59" pos:column="25">N_<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><literal type="string" pos:line="59" pos:column="28">"pass it through git-apply"<pos:position pos:line="59" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="56"/></argument_list></call></expr></argument>,
			<argument><expr><literal type="number" pos:line="60" pos:column="25">0<pos:position pos:line="60" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="27"/></argument_list></call></expr>,
		<expr><call><name pos:line="61" pos:column="17">OPT_PASSTHRU_ARGV<pos:position pos:line="61" pos:column="34"/></name><argument_list pos:line="61" pos:column="34">(<argument><expr><literal type="char" pos:line="61" pos:column="35">'C'<pos:position pos:line="61" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="40">NULL<pos:position pos:line="61" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="46">&amp;<pos:position pos:line="61" pos:column="51"/></operator><name><name pos:line="61" pos:column="47">state<pos:position pos:line="61" pos:column="52"/></name><operator pos:line="61" pos:column="52">.<pos:position pos:line="61" pos:column="53"/></operator><name pos:line="61" pos:column="53">git_apply_opts<pos:position pos:line="61" pos:column="67"/></name></name></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="69">N_<pos:position pos:line="61" pos:column="71"/></name><argument_list pos:line="61" pos:column="71">(<argument><expr><literal type="string" pos:line="61" pos:column="72">"n"<pos:position pos:line="61" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="76"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="62" pos:column="25">N_<pos:position pos:line="62" pos:column="27"/></name><argument_list pos:line="62" pos:column="27">(<argument><expr><literal type="string" pos:line="62" pos:column="28">"pass it through git-apply"<pos:position pos:line="62" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="56"/></argument_list></call></expr></argument>,
			<argument><expr><literal type="number" pos:line="63" pos:column="25">0<pos:position pos:line="63" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="27"/></argument_list></call></expr>,
		<expr><call><name pos:line="64" pos:column="17">OPT_PASSTHRU_ARGV<pos:position pos:line="64" pos:column="34"/></name><argument_list pos:line="64" pos:column="34">(<argument><expr><literal type="char" pos:line="64" pos:column="35">'p'<pos:position pos:line="64" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="40">NULL<pos:position pos:line="64" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="46">&amp;<pos:position pos:line="64" pos:column="51"/></operator><name><name pos:line="64" pos:column="47">state<pos:position pos:line="64" pos:column="52"/></name><operator pos:line="64" pos:column="52">.<pos:position pos:line="64" pos:column="53"/></operator><name pos:line="64" pos:column="53">git_apply_opts<pos:position pos:line="64" pos:column="67"/></name></name></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="69">N_<pos:position pos:line="64" pos:column="71"/></name><argument_list pos:line="64" pos:column="71">(<argument><expr><literal type="string" pos:line="64" pos:column="72">"num"<pos:position pos:line="64" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="78"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="65" pos:column="25">N_<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><literal type="string" pos:line="65" pos:column="28">"pass it through git-apply"<pos:position pos:line="65" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></call></expr></argument>,
			<argument><expr><literal type="number" pos:line="66" pos:column="25">0<pos:position pos:line="66" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="27"/></argument_list></call></expr>,
		<expr><call><name pos:line="67" pos:column="17">OPT_CALLBACK<pos:position pos:line="67" pos:column="29"/></name><argument_list pos:line="67" pos:column="29">(<argument><expr><literal type="number" pos:line="67" pos:column="30">0<pos:position pos:line="67" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="33">"patch-format"<pos:position pos:line="67" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="67" pos:column="49">&amp;<pos:position pos:line="67" pos:column="54"/></operator><name pos:line="67" pos:column="50">patch_format<pos:position pos:line="67" pos:column="62"/></name></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="64">N_<pos:position pos:line="67" pos:column="66"/></name><argument_list pos:line="67" pos:column="66">(<argument><expr><literal type="string" pos:line="67" pos:column="67">"format"<pos:position pos:line="67" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="76"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="68" pos:column="25">N_<pos:position pos:line="68" pos:column="27"/></name><argument_list pos:line="68" pos:column="27">(<argument><expr><literal type="string" pos:line="68" pos:column="28">"format the patch(es) are in"<pos:position pos:line="68" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="58"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="69" pos:column="25">parse_opt_patchformat<pos:position pos:line="69" pos:column="46"/></name></expr></argument>)<pos:position pos:line="69" pos:column="47"/></argument_list></call></expr>,
		<expr><call><name pos:line="70" pos:column="17">OPT_PASSTHRU_ARGV<pos:position pos:line="70" pos:column="34"/></name><argument_list pos:line="70" pos:column="34">(<argument><expr><literal type="number" pos:line="70" pos:column="35">0<pos:position pos:line="70" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="38">"reject"<pos:position pos:line="70" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="70" pos:column="48">&amp;<pos:position pos:line="70" pos:column="53"/></operator><name><name pos:line="70" pos:column="49">state<pos:position pos:line="70" pos:column="54"/></name><operator pos:line="70" pos:column="54">.<pos:position pos:line="70" pos:column="55"/></operator><name pos:line="70" pos:column="55">git_apply_opts<pos:position pos:line="70" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="71">NULL<pos:position pos:line="70" pos:column="75"/></name></expr></argument>,
			<argument><expr><call><name pos:line="71" pos:column="25">N_<pos:position pos:line="71" pos:column="27"/></name><argument_list pos:line="71" pos:column="27">(<argument><expr><literal type="string" pos:line="71" pos:column="28">"pass it through git-apply"<pos:position pos:line="71" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="56"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="72" pos:column="25">PARSE_OPT_NOARG<pos:position pos:line="72" pos:column="40"/></name></expr></argument>)<pos:position pos:line="72" pos:column="41"/></argument_list></call></expr>,
		<expr><call><name pos:line="73" pos:column="17">OPT_STRING<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><literal type="number" pos:line="73" pos:column="28">0<pos:position pos:line="73" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="31">"resolvemsg"<pos:position pos:line="73" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="73" pos:column="45">&amp;<pos:position pos:line="73" pos:column="50"/></operator><name><name pos:line="73" pos:column="46">state<pos:position pos:line="73" pos:column="51"/></name><operator pos:line="73" pos:column="51">.<pos:position pos:line="73" pos:column="52"/></operator><name pos:line="73" pos:column="52">resolvemsg<pos:position pos:line="73" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="64">NULL<pos:position pos:line="73" pos:column="68"/></name></expr></argument>,
			<argument><expr><call><name pos:line="74" pos:column="25">N_<pos:position pos:line="74" pos:column="27"/></name><argument_list pos:line="74" pos:column="27">(<argument><expr><literal type="string" pos:line="74" pos:column="28">"override error message when patch failure occurs"<pos:position pos:line="74" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="80"/></argument_list></call></expr>,
		<expr><call><name pos:line="75" pos:column="17">OPT_CMDMODE<pos:position pos:line="75" pos:column="28"/></name><argument_list pos:line="75" pos:column="28">(<argument><expr><literal type="number" pos:line="75" pos:column="29">0<pos:position pos:line="75" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="32">"continue"<pos:position pos:line="75" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="75" pos:column="44">&amp;<pos:position pos:line="75" pos:column="49"/></operator><name pos:line="75" pos:column="45">resume<pos:position pos:line="75" pos:column="51"/></name></expr></argument>,
			<argument><expr><call><name pos:line="76" pos:column="25">N_<pos:position pos:line="76" pos:column="27"/></name><argument_list pos:line="76" pos:column="27">(<argument><expr><literal type="string" pos:line="76" pos:column="28">"continue applying patches after resolving a conflict"<pos:position pos:line="76" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="83"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="77" pos:column="25">RESUME_RESOLVED<pos:position pos:line="77" pos:column="40"/></name></expr></argument>)<pos:position pos:line="77" pos:column="41"/></argument_list></call></expr>,
		<expr><call><name pos:line="78" pos:column="17">OPT_CMDMODE<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><literal type="char" pos:line="78" pos:column="29">'r'<pos:position pos:line="78" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="34">"resolved"<pos:position pos:line="78" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="78" pos:column="46">&amp;<pos:position pos:line="78" pos:column="51"/></operator><name pos:line="78" pos:column="47">resume<pos:position pos:line="78" pos:column="53"/></name></expr></argument>,
			<argument><expr><call><name pos:line="79" pos:column="25">N_<pos:position pos:line="79" pos:column="27"/></name><argument_list pos:line="79" pos:column="27">(<argument><expr><literal type="string" pos:line="79" pos:column="28">"synonyms for --continue"<pos:position pos:line="79" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="54"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="80" pos:column="25">RESUME_RESOLVED<pos:position pos:line="80" pos:column="40"/></name></expr></argument>)<pos:position pos:line="80" pos:column="41"/></argument_list></call></expr>,
		<expr><call><name pos:line="81" pos:column="17">OPT_CMDMODE<pos:position pos:line="81" pos:column="28"/></name><argument_list pos:line="81" pos:column="28">(<argument><expr><literal type="number" pos:line="81" pos:column="29">0<pos:position pos:line="81" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="32">"skip"<pos:position pos:line="81" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="81" pos:column="40">&amp;<pos:position pos:line="81" pos:column="45"/></operator><name pos:line="81" pos:column="41">resume<pos:position pos:line="81" pos:column="47"/></name></expr></argument>,
			<argument><expr><call><name pos:line="82" pos:column="25">N_<pos:position pos:line="82" pos:column="27"/></name><argument_list pos:line="82" pos:column="27">(<argument><expr><literal type="string" pos:line="82" pos:column="28">"skip the current patch"<pos:position pos:line="82" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="53"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="83" pos:column="25">RESUME_SKIP<pos:position pos:line="83" pos:column="36"/></name></expr></argument>)<pos:position pos:line="83" pos:column="37"/></argument_list></call></expr>,
		<expr><call><name pos:line="84" pos:column="17">OPT_CMDMODE<pos:position pos:line="84" pos:column="28"/></name><argument_list pos:line="84" pos:column="28">(<argument><expr><literal type="number" pos:line="84" pos:column="29">0<pos:position pos:line="84" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="32">"abort"<pos:position pos:line="84" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="84" pos:column="41">&amp;<pos:position pos:line="84" pos:column="46"/></operator><name pos:line="84" pos:column="42">resume<pos:position pos:line="84" pos:column="48"/></name></expr></argument>,
			<argument><expr><call><name pos:line="85" pos:column="25">N_<pos:position pos:line="85" pos:column="27"/></name><argument_list pos:line="85" pos:column="27">(<argument><expr><literal type="string" pos:line="85" pos:column="28">"restore the original branch and abort the patching operation."<pos:position pos:line="85" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="92"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="86" pos:column="25">RESUME_ABORT<pos:position pos:line="86" pos:column="37"/></name></expr></argument>)<pos:position pos:line="86" pos:column="38"/></argument_list></call></expr>,
		<expr><call><name pos:line="87" pos:column="17">OPT_BOOL<pos:position pos:line="87" pos:column="25"/></name><argument_list pos:line="87" pos:column="25">(<argument><expr><literal type="number" pos:line="87" pos:column="26">0<pos:position pos:line="87" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="29">"committer-date-is-author-date"<pos:position pos:line="87" pos:column="60"/></literal></expr></argument>,
			<argument><expr><operator pos:line="88" pos:column="25">&amp;<pos:position pos:line="88" pos:column="30"/></operator><name><name pos:line="88" pos:column="26">state<pos:position pos:line="88" pos:column="31"/></name><operator pos:line="88" pos:column="31">.<pos:position pos:line="88" pos:column="32"/></operator><name pos:line="88" pos:column="32">committer_date_is_author_date<pos:position pos:line="88" pos:column="61"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="89" pos:column="25">N_<pos:position pos:line="89" pos:column="27"/></name><argument_list pos:line="89" pos:column="27">(<argument><expr><literal type="string" pos:line="89" pos:column="28">"lie about committer date"<pos:position pos:line="89" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="56"/></argument_list></call></expr>,
		<expr><call><name pos:line="90" pos:column="17">OPT_BOOL<pos:position pos:line="90" pos:column="25"/></name><argument_list pos:line="90" pos:column="25">(<argument><expr><literal type="number" pos:line="90" pos:column="26">0<pos:position pos:line="90" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="29">"ignore-date"<pos:position pos:line="90" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="90" pos:column="44">&amp;<pos:position pos:line="90" pos:column="49"/></operator><name><name pos:line="90" pos:column="45">state<pos:position pos:line="90" pos:column="50"/></name><operator pos:line="90" pos:column="50">.<pos:position pos:line="90" pos:column="51"/></operator><name pos:line="90" pos:column="51">ignore_date<pos:position pos:line="90" pos:column="62"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="91" pos:column="25">N_<pos:position pos:line="91" pos:column="27"/></name><argument_list pos:line="91" pos:column="27">(<argument><expr><literal type="string" pos:line="91" pos:column="28">"use current timestamp for author date"<pos:position pos:line="91" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="69"/></argument_list></call></expr>,
		<expr><call><name pos:line="92" pos:column="17">OPT_RERERE_AUTOUPDATE<pos:position pos:line="92" pos:column="38"/></name><argument_list pos:line="92" pos:column="38">(<argument><expr><operator pos:line="92" pos:column="39">&amp;<pos:position pos:line="92" pos:column="44"/></operator><name><name pos:line="92" pos:column="40">state<pos:position pos:line="92" pos:column="45"/></name><operator pos:line="92" pos:column="45">.<pos:position pos:line="92" pos:column="46"/></operator><name pos:line="92" pos:column="46">allow_rerere_autoupdate<pos:position pos:line="92" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="70"/></argument_list></call></expr>,
		<expr><block pos:line="93" pos:column="17">{ <expr><name pos:line="93" pos:column="19">OPTION_STRING<pos:position pos:line="93" pos:column="32"/></name></expr>, <expr><literal type="char" pos:line="93" pos:column="34">'S'<pos:position pos:line="93" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="93" pos:column="39">"gpg-sign"<pos:position pos:line="93" pos:column="49"/></literal></expr>, <expr><operator pos:line="93" pos:column="51">&amp;<pos:position pos:line="93" pos:column="56"/></operator><name><name pos:line="93" pos:column="52">state<pos:position pos:line="93" pos:column="57"/></name><operator pos:line="93" pos:column="57">.<pos:position pos:line="93" pos:column="58"/></operator><name pos:line="93" pos:column="58">sign_commit<pos:position pos:line="93" pos:column="69"/></name></name></expr>, <expr><call><name pos:line="93" pos:column="71">N_<pos:position pos:line="93" pos:column="73"/></name><argument_list pos:line="93" pos:column="73">(<argument><expr><literal type="string" pos:line="93" pos:column="74">"key-id"<pos:position pos:line="93" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="83"/></argument_list></call></expr>,
		  <expr><call><name pos:line="94" pos:column="19">N_<pos:position pos:line="94" pos:column="21"/></name><argument_list pos:line="94" pos:column="21">(<argument><expr><literal type="string" pos:line="94" pos:column="22">"GPG-sign commits"<pos:position pos:line="94" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="41"/></argument_list></call></expr>,
		  <expr><name pos:line="95" pos:column="19">PARSE_OPT_OPTARG<pos:position pos:line="95" pos:column="35"/></name></expr>, <expr><name pos:line="95" pos:column="37">NULL<pos:position pos:line="95" pos:column="41"/></name></expr>, <expr><operator pos:line="95" pos:column="43">(<pos:position pos:line="95" pos:column="44"/></operator><name pos:line="95" pos:column="44">intptr_t<pos:position pos:line="95" pos:column="52"/></name><operator pos:line="95" pos:column="52">)<pos:position pos:line="95" pos:column="53"/></operator> <literal type="string" pos:line="95" pos:column="54">""<pos:position pos:line="95" pos:column="56"/></literal></expr> }<pos:position pos:line="95" pos:column="58"/></block></expr>,
		<expr><call><name pos:line="96" pos:column="17">OPT_HIDDEN_BOOL<pos:position pos:line="96" pos:column="32"/></name><argument_list pos:line="96" pos:column="32">(<argument><expr><literal type="number" pos:line="96" pos:column="33">0<pos:position pos:line="96" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="36">"rebasing"<pos:position pos:line="96" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="96" pos:column="48">&amp;<pos:position pos:line="96" pos:column="53"/></operator><name><name pos:line="96" pos:column="49">state<pos:position pos:line="96" pos:column="54"/></name><operator pos:line="96" pos:column="54">.<pos:position pos:line="96" pos:column="55"/></operator><name pos:line="96" pos:column="55">rebasing<pos:position pos:line="96" pos:column="63"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="97" pos:column="25">N_<pos:position pos:line="97" pos:column="27"/></name><argument_list pos:line="97" pos:column="27">(<argument><expr><literal type="string" pos:line="97" pos:column="28">"(internal use for git-rebase)"<pos:position pos:line="97" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="61"/></argument_list></call></expr>,
		<macro><name pos:line="98" pos:column="17">OPT_END<pos:position pos:line="98" pos:column="24"/></name><argument_list pos:line="98" pos:column="24">()<pos:position pos:line="98" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="99" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="99" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="101" pos:column="9">git_config<pos:position pos:line="101" pos:column="19"/></name><argument_list pos:line="101" pos:column="19">(<argument><expr><name pos:line="101" pos:column="20">git_am_config<pos:position pos:line="101" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="35">NULL<pos:position pos:line="101" pos:column="39"/></name></expr></argument>)<pos:position pos:line="101" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="103" pos:column="9">am_state_init<pos:position pos:line="103" pos:column="22"/></name><argument_list pos:line="103" pos:column="22">(<argument><expr><operator pos:line="103" pos:column="23">&amp;<pos:position pos:line="103" pos:column="28"/></operator><name pos:line="103" pos:column="24">state<pos:position pos:line="103" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="103" pos:column="31">git_path<pos:position pos:line="103" pos:column="39"/></name><argument_list pos:line="103" pos:column="39">(<argument><expr><literal type="string" pos:line="103" pos:column="40">"rebase-apply"<pos:position pos:line="103" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="103" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="57"/></expr_stmt>

	<expr_stmt><expr><name pos:line="105" pos:column="9">in_progress<pos:position pos:line="105" pos:column="20"/></name> <operator pos:line="105" pos:column="21">=<pos:position pos:line="105" pos:column="22"/></operator> <call><name pos:line="105" pos:column="23">am_in_progress<pos:position pos:line="105" pos:column="37"/></name><argument_list pos:line="105" pos:column="37">(<argument><expr><operator pos:line="105" pos:column="38">&amp;<pos:position pos:line="105" pos:column="43"/></operator><name pos:line="105" pos:column="39">state<pos:position pos:line="105" pos:column="44"/></name></expr></argument>)<pos:position pos:line="105" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="46"/></expr_stmt>
	<if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><name pos:line="106" pos:column="13">in_progress<pos:position pos:line="106" pos:column="24"/></name></expr>)<pos:position pos:line="106" pos:column="25"/></condition><then pos:line="106" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="17">am_load<pos:position pos:line="107" pos:column="24"/></name><argument_list pos:line="107" pos:column="24">(<argument><expr><operator pos:line="107" pos:column="25">&amp;<pos:position pos:line="107" pos:column="30"/></operator><name pos:line="107" pos:column="26">state<pos:position pos:line="107" pos:column="31"/></name></expr></argument>)<pos:position pos:line="107" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="33"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="109" pos:column="9">argc<pos:position pos:line="109" pos:column="13"/></name> <operator pos:line="109" pos:column="14">=<pos:position pos:line="109" pos:column="15"/></operator> <call><name pos:line="109" pos:column="16">parse_options<pos:position pos:line="109" pos:column="29"/></name><argument_list pos:line="109" pos:column="29">(<argument><expr><name pos:line="109" pos:column="30">argc<pos:position pos:line="109" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="36">argv<pos:position pos:line="109" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="42">prefix<pos:position pos:line="109" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="50">options<pos:position pos:line="109" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="59">usage<pos:position pos:line="109" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="66">0<pos:position pos:line="109" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="69"/></expr_stmt>

	<if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><name pos:line="111" pos:column="13">binary<pos:position pos:line="111" pos:column="19"/></name> <operator pos:line="111" pos:column="20">&gt;=<pos:position pos:line="111" pos:column="25"/></operator> <literal type="number" pos:line="111" pos:column="23">0<pos:position pos:line="111" pos:column="24"/></literal></expr>)<pos:position pos:line="111" pos:column="25"/></condition><then pos:line="111" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="112" pos:column="17">fprintf_ln<pos:position pos:line="112" pos:column="27"/></name><argument_list pos:line="112" pos:column="27">(<argument><expr><name pos:line="112" pos:column="28">stderr<pos:position pos:line="112" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="112" pos:column="36">_<pos:position pos:line="112" pos:column="37"/></name><argument_list pos:line="112" pos:column="37">(<argument><expr><literal type="string" pos:line="112" pos:column="38">"The -b/--binary option has been a no-op for long time, and\n"<pos:position pos:line="112" pos:column="100"/></literal>
				<literal type="string" pos:line="113" pos:column="33">"it will be removed. Please do not use it anymore."<pos:position pos:line="113" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="113" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="87"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="115" pos:column="9">/* Ensure a valid committer ident can be constructed */</comment>
	<expr_stmt><expr><call><name pos:line="116" pos:column="9">git_committer_info<pos:position pos:line="116" pos:column="27"/></name><argument_list pos:line="116" pos:column="27">(<argument><expr><name pos:line="116" pos:column="28">IDENT_STRICT<pos:position pos:line="116" pos:column="40"/></name></expr></argument>)<pos:position pos:line="116" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="42"/></expr_stmt>

	<if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><call><name pos:line="118" pos:column="13">read_index_preload<pos:position pos:line="118" pos:column="31"/></name><argument_list pos:line="118" pos:column="31">(<argument><expr><operator pos:line="118" pos:column="32">&amp;<pos:position pos:line="118" pos:column="37"/></operator><name pos:line="118" pos:column="33">the_index<pos:position pos:line="118" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="44">NULL<pos:position pos:line="118" pos:column="48"/></name></expr></argument>)<pos:position pos:line="118" pos:column="49"/></argument_list></call> <operator pos:line="118" pos:column="50">&lt;<pos:position pos:line="118" pos:column="54"/></operator> <literal type="number" pos:line="118" pos:column="52">0<pos:position pos:line="118" pos:column="53"/></literal></expr>)<pos:position pos:line="118" pos:column="54"/></condition><then pos:line="118" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="119" pos:column="17">die<pos:position pos:line="119" pos:column="20"/></name><argument_list pos:line="119" pos:column="20">(<argument><expr><call><name pos:line="119" pos:column="21">_<pos:position pos:line="119" pos:column="22"/></name><argument_list pos:line="119" pos:column="22">(<argument><expr><literal type="string" pos:line="119" pos:column="23">"failed to read the index"<pos:position pos:line="119" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="119" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="52"/></expr_stmt></block></then></if>

	<if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><name pos:line="121" pos:column="13">in_progress<pos:position pos:line="121" pos:column="24"/></name></expr>)<pos:position pos:line="121" pos:column="25"/></condition><then pos:line="121" pos:column="25"> <block pos:line="121" pos:column="26">{
		<comment type="block" pos:line="122" pos:column="17">/*
		 * Catch user error to feed us patches when there is a session
		 * in progress:
		 *
		 * 1. mbox path(s) are provided on the command-line.
		 * 2. stdin is not a tty: the user is trying to feed us a patch
		 *    from standard input. This is somewhat unreliable -- stdin
		 *    could be /dev/null for example and the caller did not
		 *    intend to feed us a patch but wanted to continue
		 *    unattended.
		 */</comment>
		<if pos:line="133" pos:column="17">if <condition pos:line="133" pos:column="20">(<expr><name pos:line="133" pos:column="21">argc<pos:position pos:line="133" pos:column="25"/></name> <operator pos:line="133" pos:column="26">||<pos:position pos:line="133" pos:column="28"/></operator> <operator pos:line="133" pos:column="29">(<pos:position pos:line="133" pos:column="30"/></operator><name pos:line="133" pos:column="30">resume<pos:position pos:line="133" pos:column="36"/></name> <operator pos:line="133" pos:column="37">==<pos:position pos:line="133" pos:column="39"/></operator> <name pos:line="133" pos:column="40">RESUME_FALSE<pos:position pos:line="133" pos:column="52"/></name> <operator pos:line="133" pos:column="53">&amp;&amp;<pos:position pos:line="133" pos:column="63"/></operator> <operator pos:line="133" pos:column="56">!<pos:position pos:line="133" pos:column="57"/></operator><call><name pos:line="133" pos:column="57">isatty<pos:position pos:line="133" pos:column="63"/></name><argument_list pos:line="133" pos:column="63">(<argument><expr><literal type="number" pos:line="133" pos:column="64">0<pos:position pos:line="133" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="66"/></argument_list></call><operator pos:line="133" pos:column="66">)<pos:position pos:line="133" pos:column="67"/></operator></expr>)<pos:position pos:line="133" pos:column="68"/></condition><then pos:line="133" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="134" pos:column="25">die<pos:position pos:line="134" pos:column="28"/></name><argument_list pos:line="134" pos:column="28">(<argument><expr><call><name pos:line="134" pos:column="29">_<pos:position pos:line="134" pos:column="30"/></name><argument_list pos:line="134" pos:column="30">(<argument><expr><literal type="string" pos:line="134" pos:column="31">"previous rebase directory %s still exists but mbox given."<pos:position pos:line="134" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="91"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="135" pos:column="33">state<pos:position pos:line="135" pos:column="38"/></name><operator pos:line="135" pos:column="38">.<pos:position pos:line="135" pos:column="39"/></operator><name pos:line="135" pos:column="39">dir<pos:position pos:line="135" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="44"/></expr_stmt></block></then></if>

		<if pos:line="137" pos:column="17">if <condition pos:line="137" pos:column="20">(<expr><name pos:line="137" pos:column="21">resume<pos:position pos:line="137" pos:column="27"/></name> <operator pos:line="137" pos:column="28">==<pos:position pos:line="137" pos:column="30"/></operator> <name pos:line="137" pos:column="31">RESUME_FALSE<pos:position pos:line="137" pos:column="43"/></name></expr>)<pos:position pos:line="137" pos:column="44"/></condition><then pos:line="137" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name pos:line="138" pos:column="25">resume<pos:position pos:line="138" pos:column="31"/></name> <operator pos:line="138" pos:column="32">=<pos:position pos:line="138" pos:column="33"/></operator> <name pos:line="138" pos:column="34">RESUME_APPLY<pos:position pos:line="138" pos:column="46"/></name></expr>;<pos:position pos:line="138" pos:column="47"/></expr_stmt></block></then></if>

		<if pos:line="140" pos:column="17">if <condition pos:line="140" pos:column="20">(<expr><name><name pos:line="140" pos:column="21">state<pos:position pos:line="140" pos:column="26"/></name><operator pos:line="140" pos:column="26">.<pos:position pos:line="140" pos:column="27"/></operator><name pos:line="140" pos:column="27">signoff<pos:position pos:line="140" pos:column="34"/></name></name> <operator pos:line="140" pos:column="35">==<pos:position pos:line="140" pos:column="37"/></operator> <name pos:line="140" pos:column="38">SIGNOFF_EXPLICIT<pos:position pos:line="140" pos:column="54"/></name></expr>)<pos:position pos:line="140" pos:column="55"/></condition><then pos:line="140" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="141" pos:column="25">am_append_signoff<pos:position pos:line="141" pos:column="42"/></name><argument_list pos:line="141" pos:column="42">(<argument><expr><operator pos:line="141" pos:column="43">&amp;<pos:position pos:line="141" pos:column="48"/></operator><name pos:line="141" pos:column="44">state<pos:position pos:line="141" pos:column="49"/></name></expr></argument>)<pos:position pos:line="141" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="51"/></expr_stmt></block></then></if>
	}<pos:position pos:line="142" pos:column="10"/></block></then> <else pos:line="142" pos:column="11">else <block pos:line="142" pos:column="16">{
		<decl_stmt><decl><type><name><name pos:line="143" pos:column="17">struct<pos:position pos:line="143" pos:column="23"/></name> <name pos:line="143" pos:column="24">argv_array<pos:position pos:line="143" pos:column="34"/></name></name></type> <name pos:line="143" pos:column="35">paths<pos:position pos:line="143" pos:column="40"/></name> <init pos:line="143" pos:column="41">= <expr><name pos:line="143" pos:column="43">ARGV_ARRAY_INIT<pos:position pos:line="143" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="143" pos:column="59"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="144" pos:column="17">int<pos:position pos:line="144" pos:column="20"/></name></type> <name pos:line="144" pos:column="21">i<pos:position pos:line="144" pos:column="22"/></name></decl>;<pos:position pos:line="144" pos:column="23"/></decl_stmt>

		<comment type="block" pos:line="146" pos:column="17">/*
		 * Handle stray state directory in the independent-run case. In
		 * the --rebasing case, it is up to the caller to take care of
		 * stray directories.
		 */</comment>
		<if pos:line="151" pos:column="17">if <condition pos:line="151" pos:column="20">(<expr><call><name pos:line="151" pos:column="21">file_exists<pos:position pos:line="151" pos:column="32"/></name><argument_list pos:line="151" pos:column="32">(<argument><expr><name><name pos:line="151" pos:column="33">state<pos:position pos:line="151" pos:column="38"/></name><operator pos:line="151" pos:column="38">.<pos:position pos:line="151" pos:column="39"/></operator><name pos:line="151" pos:column="39">dir<pos:position pos:line="151" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="43"/></argument_list></call> <operator pos:line="151" pos:column="44">&amp;&amp;<pos:position pos:line="151" pos:column="54"/></operator> <operator pos:line="151" pos:column="47">!<pos:position pos:line="151" pos:column="48"/></operator><name><name pos:line="151" pos:column="48">state<pos:position pos:line="151" pos:column="53"/></name><operator pos:line="151" pos:column="53">.<pos:position pos:line="151" pos:column="54"/></operator><name pos:line="151" pos:column="54">rebasing<pos:position pos:line="151" pos:column="62"/></name></name></expr>)<pos:position pos:line="151" pos:column="63"/></condition><then pos:line="151" pos:column="63"> <block pos:line="151" pos:column="64">{
			<if pos:line="152" pos:column="25">if <condition pos:line="152" pos:column="28">(<expr><name pos:line="152" pos:column="29">resume<pos:position pos:line="152" pos:column="35"/></name> <operator pos:line="152" pos:column="36">==<pos:position pos:line="152" pos:column="38"/></operator> <name pos:line="152" pos:column="39">RESUME_ABORT<pos:position pos:line="152" pos:column="51"/></name></expr>)<pos:position pos:line="152" pos:column="52"/></condition><then pos:line="152" pos:column="52"> <block pos:line="152" pos:column="53">{
				<expr_stmt><expr><call><name pos:line="153" pos:column="33">am_destroy<pos:position pos:line="153" pos:column="43"/></name><argument_list pos:line="153" pos:column="43">(<argument><expr><operator pos:line="153" pos:column="44">&amp;<pos:position pos:line="153" pos:column="49"/></operator><name pos:line="153" pos:column="45">state<pos:position pos:line="153" pos:column="50"/></name></expr></argument>)<pos:position pos:line="153" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="154" pos:column="33">am_state_release<pos:position pos:line="154" pos:column="49"/></name><argument_list pos:line="154" pos:column="49">(<argument><expr><operator pos:line="154" pos:column="50">&amp;<pos:position pos:line="154" pos:column="55"/></operator><name pos:line="154" pos:column="51">state<pos:position pos:line="154" pos:column="56"/></name></expr></argument>)<pos:position pos:line="154" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="58"/></expr_stmt>
				<return pos:line="155" pos:column="33">return <expr><literal type="number" pos:line="155" pos:column="40">0<pos:position pos:line="155" pos:column="41"/></literal></expr>;<pos:position pos:line="155" pos:column="42"/></return>
			}<pos:position pos:line="156" pos:column="26"/></block></then></if>

			<expr_stmt><expr><call><name pos:line="158" pos:column="25">die<pos:position pos:line="158" pos:column="28"/></name><argument_list pos:line="158" pos:column="28">(<argument><expr><call><name pos:line="158" pos:column="29">_<pos:position pos:line="158" pos:column="30"/></name><argument_list pos:line="158" pos:column="30">(<argument><expr><literal type="string" pos:line="158" pos:column="31">"Stray %s directory found.\n"<pos:position pos:line="158" pos:column="60"/></literal>
				<literal type="string" pos:line="159" pos:column="33">"Use \"git am --abort\" to remove it."<pos:position pos:line="159" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="72"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="160" pos:column="33">state<pos:position pos:line="160" pos:column="38"/></name><operator pos:line="160" pos:column="38">.<pos:position pos:line="160" pos:column="39"/></operator><name pos:line="160" pos:column="39">dir<pos:position pos:line="160" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="160" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="161" pos:column="18"/></block></then></if>

		<if pos:line="163" pos:column="17">if <condition pos:line="163" pos:column="20">(<expr><name pos:line="163" pos:column="21">resume<pos:position pos:line="163" pos:column="27"/></name></expr>)<pos:position pos:line="163" pos:column="28"/></condition><then pos:line="163" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="164" pos:column="25">die<pos:position pos:line="164" pos:column="28"/></name><argument_list pos:line="164" pos:column="28">(<argument><expr><call><name pos:line="164" pos:column="29">_<pos:position pos:line="164" pos:column="30"/></name><argument_list pos:line="164" pos:column="30">(<argument><expr><literal type="string" pos:line="164" pos:column="31">"Resolve operation not in progress, we are not resuming."<pos:position pos:line="164" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="164" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="91"/></expr_stmt></block></then></if>

		<for pos:line="166" pos:column="17">for <control pos:line="166" pos:column="21">(<init><expr><name pos:line="166" pos:column="22">i<pos:position pos:line="166" pos:column="23"/></name> <operator pos:line="166" pos:column="24">=<pos:position pos:line="166" pos:column="25"/></operator> <literal type="number" pos:line="166" pos:column="26">0<pos:position pos:line="166" pos:column="27"/></literal></expr>;<pos:position pos:line="166" pos:column="28"/></init> <condition><expr><name pos:line="166" pos:column="29">i<pos:position pos:line="166" pos:column="30"/></name> <operator pos:line="166" pos:column="31">&lt;<pos:position pos:line="166" pos:column="35"/></operator> <name pos:line="166" pos:column="33">argc<pos:position pos:line="166" pos:column="37"/></name></expr>;<pos:position pos:line="166" pos:column="38"/></condition> <incr><expr><name pos:line="166" pos:column="39">i<pos:position pos:line="166" pos:column="40"/></name><operator pos:line="166" pos:column="40">++<pos:position pos:line="166" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="166" pos:column="43"/></control> <block pos:line="166" pos:column="44">{
			<if pos:line="167" pos:column="25">if <condition pos:line="167" pos:column="28">(<expr><call><name pos:line="167" pos:column="29">is_absolute_path<pos:position pos:line="167" pos:column="45"/></name><argument_list pos:line="167" pos:column="45">(<argument><expr><name><name pos:line="167" pos:column="46">argv<pos:position pos:line="167" pos:column="50"/></name><index pos:line="167" pos:column="50">[<expr><name pos:line="167" pos:column="51">i<pos:position pos:line="167" pos:column="52"/></name></expr>]<pos:position pos:line="167" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="167" pos:column="54"/></argument_list></call> <operator pos:line="167" pos:column="55">||<pos:position pos:line="167" pos:column="57"/></operator> <operator pos:line="167" pos:column="58">!<pos:position pos:line="167" pos:column="59"/></operator><name pos:line="167" pos:column="59">prefix<pos:position pos:line="167" pos:column="65"/></name></expr>)<pos:position pos:line="167" pos:column="66"/></condition><then pos:line="167" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="168" pos:column="33">argv_array_push<pos:position pos:line="168" pos:column="48"/></name><argument_list pos:line="168" pos:column="48">(<argument><expr><operator pos:line="168" pos:column="49">&amp;<pos:position pos:line="168" pos:column="54"/></operator><name pos:line="168" pos:column="50">paths<pos:position pos:line="168" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="57">argv<pos:position pos:line="168" pos:column="61"/></name><index pos:line="168" pos:column="61">[<expr><name pos:line="168" pos:column="62">i<pos:position pos:line="168" pos:column="63"/></name></expr>]<pos:position pos:line="168" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="168" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="66"/></expr_stmt></block></then>
			<else pos:line="169" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="170" pos:column="33">argv_array_push<pos:position pos:line="170" pos:column="48"/></name><argument_list pos:line="170" pos:column="48">(<argument><expr><operator pos:line="170" pos:column="49">&amp;<pos:position pos:line="170" pos:column="54"/></operator><name pos:line="170" pos:column="50">paths<pos:position pos:line="170" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="170" pos:column="57">mkpath<pos:position pos:line="170" pos:column="63"/></name><argument_list pos:line="170" pos:column="63">(<argument><expr><literal type="string" pos:line="170" pos:column="64">"%s/%s"<pos:position pos:line="170" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="73">prefix<pos:position pos:line="170" pos:column="79"/></name></expr></argument>, <argument><expr><name><name pos:line="170" pos:column="81">argv<pos:position pos:line="170" pos:column="85"/></name><index pos:line="170" pos:column="85">[<expr><name pos:line="170" pos:column="86">i<pos:position pos:line="170" pos:column="87"/></name></expr>]<pos:position pos:line="170" pos:column="88"/></index></name></expr></argument>)<pos:position pos:line="170" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="170" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="91"/></expr_stmt></block></else></if>
		}<pos:position pos:line="171" pos:column="18"/></block></for>

		<expr_stmt><expr><call><name pos:line="173" pos:column="17">am_setup<pos:position pos:line="173" pos:column="25"/></name><argument_list pos:line="173" pos:column="25">(<argument><expr><operator pos:line="173" pos:column="26">&amp;<pos:position pos:line="173" pos:column="31"/></operator><name pos:line="173" pos:column="27">state<pos:position pos:line="173" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="34">patch_format<pos:position pos:line="173" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="173" pos:column="48">paths<pos:position pos:line="173" pos:column="53"/></name><operator pos:line="173" pos:column="53">.<pos:position pos:line="173" pos:column="54"/></operator><name pos:line="173" pos:column="54">argv<pos:position pos:line="173" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="60">keep_cr<pos:position pos:line="173" pos:column="67"/></name></expr></argument>)<pos:position pos:line="173" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="69"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="175" pos:column="17">argv_array_clear<pos:position pos:line="175" pos:column="33"/></name><argument_list pos:line="175" pos:column="33">(<argument><expr><operator pos:line="175" pos:column="34">&amp;<pos:position pos:line="175" pos:column="39"/></operator><name pos:line="175" pos:column="35">paths<pos:position pos:line="175" pos:column="40"/></name></expr></argument>)<pos:position pos:line="175" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="176" pos:column="10"/></block></else></if>

	<switch pos:line="178" pos:column="9">switch <condition pos:line="178" pos:column="16">(<expr><name pos:line="178" pos:column="17">resume<pos:position pos:line="178" pos:column="23"/></name></expr>)<pos:position pos:line="178" pos:column="24"/></condition> <block pos:line="178" pos:column="25">{
	<case pos:line="179" pos:column="9">case <expr><name pos:line="179" pos:column="14">RESUME_FALSE<pos:position pos:line="179" pos:column="26"/></name></expr>:<pos:position pos:line="179" pos:column="27"/></case>
		<expr_stmt><expr><call><name pos:line="180" pos:column="17">am_run<pos:position pos:line="180" pos:column="23"/></name><argument_list pos:line="180" pos:column="23">(<argument><expr><operator pos:line="180" pos:column="24">&amp;<pos:position pos:line="180" pos:column="29"/></operator><name pos:line="180" pos:column="25">state<pos:position pos:line="180" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="180" pos:column="32">0<pos:position pos:line="180" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="35"/></expr_stmt>
		<break pos:line="181" pos:column="17">break;<pos:position pos:line="181" pos:column="23"/></break>
	<case pos:line="182" pos:column="9">case <expr><name pos:line="182" pos:column="14">RESUME_APPLY<pos:position pos:line="182" pos:column="26"/></name></expr>:<pos:position pos:line="182" pos:column="27"/></case>
		<expr_stmt><expr><call><name pos:line="183" pos:column="17">am_run<pos:position pos:line="183" pos:column="23"/></name><argument_list pos:line="183" pos:column="23">(<argument><expr><operator pos:line="183" pos:column="24">&amp;<pos:position pos:line="183" pos:column="29"/></operator><name pos:line="183" pos:column="25">state<pos:position pos:line="183" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="183" pos:column="32">1<pos:position pos:line="183" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="35"/></expr_stmt>
		<break pos:line="184" pos:column="17">break;<pos:position pos:line="184" pos:column="23"/></break>
	<case pos:line="185" pos:column="9">case <expr><name pos:line="185" pos:column="14">RESUME_RESOLVED<pos:position pos:line="185" pos:column="29"/></name></expr>:<pos:position pos:line="185" pos:column="30"/></case>
		<expr_stmt><expr><call><name pos:line="186" pos:column="17">am_resolve<pos:position pos:line="186" pos:column="27"/></name><argument_list pos:line="186" pos:column="27">(<argument><expr><operator pos:line="186" pos:column="28">&amp;<pos:position pos:line="186" pos:column="33"/></operator><name pos:line="186" pos:column="29">state<pos:position pos:line="186" pos:column="34"/></name></expr></argument>)<pos:position pos:line="186" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="36"/></expr_stmt>
		<break pos:line="187" pos:column="17">break;<pos:position pos:line="187" pos:column="23"/></break>
	<case pos:line="188" pos:column="9">case <expr><name pos:line="188" pos:column="14">RESUME_SKIP<pos:position pos:line="188" pos:column="25"/></name></expr>:<pos:position pos:line="188" pos:column="26"/></case>
		<expr_stmt><expr><call><name pos:line="189" pos:column="17">am_skip<pos:position pos:line="189" pos:column="24"/></name><argument_list pos:line="189" pos:column="24">(<argument><expr><operator pos:line="189" pos:column="25">&amp;<pos:position pos:line="189" pos:column="30"/></operator><name pos:line="189" pos:column="26">state<pos:position pos:line="189" pos:column="31"/></name></expr></argument>)<pos:position pos:line="189" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="33"/></expr_stmt>
		<break pos:line="190" pos:column="17">break;<pos:position pos:line="190" pos:column="23"/></break>
	<case pos:line="191" pos:column="9">case <expr><name pos:line="191" pos:column="14">RESUME_ABORT<pos:position pos:line="191" pos:column="26"/></name></expr>:<pos:position pos:line="191" pos:column="27"/></case>
		<expr_stmt><expr><call><name pos:line="192" pos:column="17">am_abort<pos:position pos:line="192" pos:column="25"/></name><argument_list pos:line="192" pos:column="25">(<argument><expr><operator pos:line="192" pos:column="26">&amp;<pos:position pos:line="192" pos:column="31"/></operator><name pos:line="192" pos:column="27">state<pos:position pos:line="192" pos:column="32"/></name></expr></argument>)<pos:position pos:line="192" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="34"/></expr_stmt>
		<break pos:line="193" pos:column="17">break;<pos:position pos:line="193" pos:column="23"/></break>
	<default pos:line="194" pos:column="9">default:<pos:position pos:line="194" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="195" pos:column="17">die<pos:position pos:line="195" pos:column="20"/></name><argument_list pos:line="195" pos:column="20">(<argument><expr><literal type="string" pos:line="195" pos:column="21">"BUG: invalid resume value"<pos:position pos:line="195" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="195" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="196" pos:column="10"/></block></switch>

	<expr_stmt><expr><call><name pos:line="198" pos:column="9">am_state_release<pos:position pos:line="198" pos:column="25"/></name><argument_list pos:line="198" pos:column="25">(<argument><expr><operator pos:line="198" pos:column="26">&amp;<pos:position pos:line="198" pos:column="31"/></operator><name pos:line="198" pos:column="27">state<pos:position pos:line="198" pos:column="32"/></name></expr></argument>)<pos:position pos:line="198" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="34"/></expr_stmt>

	<return pos:line="200" pos:column="9">return <expr><literal type="number" pos:line="200" pos:column="16">0<pos:position pos:line="200" pos:column="17"/></literal></expr>;<pos:position pos:line="200" pos:column="18"/></return>
}<pos:position pos:line="201" pos:column="2"/></block></function></unit>

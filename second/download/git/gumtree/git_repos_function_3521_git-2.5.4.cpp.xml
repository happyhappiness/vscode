<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3521_git-2.5.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_remotes_file<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">remote<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">remote<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">f<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">fopen<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">(<argument><expr><call><name pos:line="3" pos:column="25">git_path<pos:position pos:line="3" pos:column="33"/></name><argument_list pos:line="3" pos:column="33">(<argument><expr><literal type="string" pos:line="3" pos:column="34">"remotes/%s"<pos:position pos:line="3" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="48">remote<pos:position pos:line="3" pos:column="54"/></name><operator pos:line="3" pos:column="54">-&gt;<pos:position pos:line="3" pos:column="59"/></operator><name pos:line="3" pos:column="56">name<pos:position pos:line="3" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="63">"r"<pos:position pos:line="3" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="68"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">f<pos:position pos:line="5" pos:column="15"/></name></expr>)<pos:position pos:line="5" pos:column="16"/></condition><then pos:line="5" pos:column="16">
		<block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">remote<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">origin<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">=<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">REMOTE_REMOTES<pos:position pos:line="7" pos:column="40"/></name></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt>
	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><call><name pos:line="8" pos:column="16">fgets<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">buffer<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="30">BUF_SIZE<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="40">f<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="43"/></condition> <block pos:line="8" pos:column="44">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">value_list<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">char<pos:position pos:line="10" pos:column="21"/></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">s<pos:position pos:line="10" pos:column="24"/></name></decl>, <modifier pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="27">p<pos:position pos:line="10" pos:column="28"/></name></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><call><name pos:line="12" pos:column="21">starts_with<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">buffer<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="41">"URL:"<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="49"/></condition><then pos:line="12" pos:column="49"> <block pos:line="12" pos:column="50">{
			<expr_stmt><expr><name pos:line="13" pos:column="25">value_list<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">=<pos:position pos:line="13" pos:column="37"/></operator> <literal type="number" pos:line="13" pos:column="38">0<pos:position pos:line="13" pos:column="39"/></literal></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="14" pos:column="25">s<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">=<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="29">buffer<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">+<pos:position pos:line="14" pos:column="37"/></operator> <literal type="number" pos:line="14" pos:column="38">4<pos:position pos:line="14" pos:column="39"/></literal></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></then> <elseif pos:line="15" pos:column="19">else <if pos:line="15" pos:column="24">if <condition pos:line="15" pos:column="27">(<expr><call><name pos:line="15" pos:column="28">starts_with<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">buffer<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="48">"Push:"<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="57"/></condition><then pos:line="15" pos:column="57"> <block pos:line="15" pos:column="58">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">value_list<pos:position pos:line="16" pos:column="35"/></name> <operator pos:line="16" pos:column="36">=<pos:position pos:line="16" pos:column="37"/></operator> <literal type="number" pos:line="16" pos:column="38">1<pos:position pos:line="16" pos:column="39"/></literal></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="17" pos:column="25">s<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">buffer<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">+<pos:position pos:line="17" pos:column="37"/></operator> <literal type="number" pos:line="17" pos:column="38">5<pos:position pos:line="17" pos:column="39"/></literal></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if></elseif> <elseif pos:line="18" pos:column="19">else <if pos:line="18" pos:column="24">if <condition pos:line="18" pos:column="27">(<expr><call><name pos:line="18" pos:column="28">starts_with<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">buffer<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="48">"Pull:"<pos:position pos:line="18" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="57"/></condition><then pos:line="18" pos:column="57"> <block pos:line="18" pos:column="58">{
			<expr_stmt><expr><name pos:line="19" pos:column="25">value_list<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">=<pos:position pos:line="19" pos:column="37"/></operator> <literal type="number" pos:line="19" pos:column="38">2<pos:position pos:line="19" pos:column="39"/></literal></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="20" pos:column="25">s<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="29">buffer<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">+<pos:position pos:line="20" pos:column="37"/></operator> <literal type="number" pos:line="20" pos:column="38">5<pos:position pos:line="20" pos:column="39"/></literal></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if></elseif> <else pos:line="21" pos:column="19">else
			<block type="pseudo"><continue pos:line="22" pos:column="25">continue;<pos:position pos:line="22" pos:column="34"/></continue></block></else></if>

		<while pos:line="24" pos:column="17">while <condition pos:line="24" pos:column="23">(<expr><call><name pos:line="24" pos:column="24">isspace<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><operator pos:line="24" pos:column="32">*<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">s<pos:position pos:line="24" pos:column="34"/></name></expr></argument>)<pos:position pos:line="24" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="36"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="25">s<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">++<pos:position pos:line="25" pos:column="28"/></operator></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt></block></while>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><operator pos:line="26" pos:column="22">*<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">s<pos:position pos:line="26" pos:column="24"/></name></expr>)<pos:position pos:line="26" pos:column="25"/></condition><then pos:line="26" pos:column="25">
			<block type="pseudo"><continue pos:line="27" pos:column="25">continue;<pos:position pos:line="27" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="29" pos:column="17">p<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">s<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">+<pos:position pos:line="29" pos:column="24"/></operator> <call><name pos:line="29" pos:column="25">strlen<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">s<pos:position pos:line="29" pos:column="33"/></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
		<while pos:line="30" pos:column="17">while <condition pos:line="30" pos:column="23">(<expr><call><name pos:line="30" pos:column="24">isspace<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name><name pos:line="30" pos:column="32">p<pos:position pos:line="30" pos:column="33"/></name><index pos:line="30" pos:column="33">[<expr><operator pos:line="30" pos:column="34">-<pos:position pos:line="30" pos:column="35"/></operator><literal type="number" pos:line="30" pos:column="35">1<pos:position pos:line="30" pos:column="36"/></literal></expr>]<pos:position pos:line="30" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="39"/></condition>
			<block type="pseudo"><expr_stmt><expr><operator pos:line="31" pos:column="25">*<pos:position pos:line="31" pos:column="26"/></operator><operator pos:line="31" pos:column="26">--<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">p<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <literal type="number" pos:line="31" pos:column="32">0<pos:position pos:line="31" pos:column="33"/></literal></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt></block></while>

		<switch pos:line="33" pos:column="17">switch <condition pos:line="33" pos:column="24">(<expr><name pos:line="33" pos:column="25">value_list<pos:position pos:line="33" pos:column="35"/></name></expr>)<pos:position pos:line="33" pos:column="36"/></condition> <block pos:line="33" pos:column="37">{
		<case pos:line="34" pos:column="17">case <expr><literal type="number" pos:line="34" pos:column="22">0<pos:position pos:line="34" pos:column="23"/></literal></expr>:<pos:position pos:line="34" pos:column="24"/></case>
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">add_url_alias<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">remote<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="47">xstrdup<pos:position pos:line="35" pos:column="54"/></name><argument_list pos:line="35" pos:column="54">(<argument><expr><name pos:line="35" pos:column="55">s<pos:position pos:line="35" pos:column="56"/></name></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="59"/></expr_stmt>
			<break pos:line="36" pos:column="25">break;<pos:position pos:line="36" pos:column="31"/></break>
		<case pos:line="37" pos:column="17">case <expr><literal type="number" pos:line="37" pos:column="22">1<pos:position pos:line="37" pos:column="23"/></literal></expr>:<pos:position pos:line="37" pos:column="24"/></case>
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">add_push_refspec<pos:position pos:line="38" pos:column="41"/></name><argument_list pos:line="38" pos:column="41">(<argument><expr><name pos:line="38" pos:column="42">remote<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="50">xstrdup<pos:position pos:line="38" pos:column="57"/></name><argument_list pos:line="38" pos:column="57">(<argument><expr><name pos:line="38" pos:column="58">s<pos:position pos:line="38" pos:column="59"/></name></expr></argument>)<pos:position pos:line="38" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>
			<break pos:line="39" pos:column="25">break;<pos:position pos:line="39" pos:column="31"/></break>
		<case pos:line="40" pos:column="17">case <expr><literal type="number" pos:line="40" pos:column="22">2<pos:position pos:line="40" pos:column="23"/></literal></expr>:<pos:position pos:line="40" pos:column="24"/></case>
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">add_fetch_refspec<pos:position pos:line="41" pos:column="42"/></name><argument_list pos:line="41" pos:column="42">(<argument><expr><name pos:line="41" pos:column="43">remote<pos:position pos:line="41" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="51">xstrdup<pos:position pos:line="41" pos:column="58"/></name><argument_list pos:line="41" pos:column="58">(<argument><expr><name pos:line="41" pos:column="59">s<pos:position pos:line="41" pos:column="60"/></name></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="63"/></expr_stmt>
			<break pos:line="42" pos:column="25">break;<pos:position pos:line="42" pos:column="31"/></break>
		}<pos:position pos:line="43" pos:column="18"/></block></switch>
	}<pos:position pos:line="44" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">fclose<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><name pos:line="45" pos:column="16">f<pos:position pos:line="45" pos:column="17"/></name></expr></argument>)<pos:position pos:line="45" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="19"/></expr_stmt>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2807_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">graph_ensure_capacity<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">git_graph<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">graph<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">num_columns<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">graph<pos:position pos:line="3" pos:column="18"/></name><operator pos:line="3" pos:column="18">-&gt;<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="20">column_capacity<pos:position pos:line="3" pos:column="35"/></name></name> <operator pos:line="3" pos:column="36">&gt;=<pos:position pos:line="3" pos:column="41"/></operator> <name pos:line="3" pos:column="39">num_columns<pos:position pos:line="3" pos:column="50"/></name></expr>)<pos:position pos:line="3" pos:column="51"/></condition><then pos:line="3" pos:column="51">
		<block type="pseudo"><return pos:line="4" pos:column="17">return;<pos:position pos:line="4" pos:column="24"/></return></block></then></if>

	<do pos:line="6" pos:column="9">do <block pos:line="6" pos:column="12">{
		<expr_stmt><expr><name><name pos:line="7" pos:column="17">graph<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">-&gt;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="24">column_capacity<pos:position pos:line="7" pos:column="39"/></name></name> <operator pos:line="7" pos:column="40">*=<pos:position pos:line="7" pos:column="42"/></operator> <literal type="number" pos:line="7" pos:column="43">2<pos:position pos:line="7" pos:column="44"/></literal></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block> while <condition pos:line="8" pos:column="17">(<expr><name><name pos:line="8" pos:column="18">graph<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">column_capacity<pos:position pos:line="8" pos:column="40"/></name></name> <operator pos:line="8" pos:column="41">&lt;<pos:position pos:line="8" pos:column="45"/></operator> <name pos:line="8" pos:column="43">num_columns<pos:position pos:line="8" pos:column="54"/></name></expr>)<pos:position pos:line="8" pos:column="55"/></condition>;<pos:position pos:line="8" pos:column="56"/></do>

	<expr_stmt><expr><name><name pos:line="10" pos:column="9">graph<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">columns<pos:position pos:line="10" pos:column="23"/></name></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <call><name pos:line="10" pos:column="26">xrealloc<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name><name pos:line="10" pos:column="35">graph<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">-&gt;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="42">columns<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>,
				  <argument><expr><sizeof pos:line="11" pos:column="35">sizeof<argument_list pos:line="11" pos:column="41">(<argument><expr pos:line="11" pos:column="42">struct <name pos:line="11" pos:column="49">column<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></sizeof> <operator pos:line="11" pos:column="57">*<pos:position pos:line="11" pos:column="58"/></operator>
				  <name><name pos:line="12" pos:column="35">graph<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">-&gt;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="42">column_capacity<pos:position pos:line="12" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">graph<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">new_columns<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <call><name pos:line="13" pos:column="30">xrealloc<pos:position pos:line="13" pos:column="38"/></name><argument_list pos:line="13" pos:column="38">(<argument><expr><name><name pos:line="13" pos:column="39">graph<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">-&gt;<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="46">new_columns<pos:position pos:line="13" pos:column="57"/></name></name></expr></argument>,
				      <argument><expr><sizeof pos:line="14" pos:column="39">sizeof<argument_list pos:line="14" pos:column="45">(<argument><expr pos:line="14" pos:column="46">struct <name pos:line="14" pos:column="53">column<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></sizeof> <operator pos:line="14" pos:column="61">*<pos:position pos:line="14" pos:column="62"/></operator>
				      <name><name pos:line="15" pos:column="39">graph<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">-&gt;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="46">column_capacity<pos:position pos:line="15" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">graph<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">mapping<pos:position pos:line="16" pos:column="23"/></name></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <call><name pos:line="16" pos:column="26">xrealloc<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name><name pos:line="16" pos:column="35">graph<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">-&gt;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="42">mapping<pos:position pos:line="16" pos:column="49"/></name></name></expr></argument>,
				  <argument><expr><sizeof pos:line="17" pos:column="35">sizeof<argument_list pos:line="17" pos:column="41">(<argument><expr><name pos:line="17" pos:column="42">int<pos:position pos:line="17" pos:column="45"/></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></sizeof> <operator pos:line="17" pos:column="47">*<pos:position pos:line="17" pos:column="48"/></operator> <literal type="number" pos:line="17" pos:column="49">2<pos:position pos:line="17" pos:column="50"/></literal> <operator pos:line="17" pos:column="51">*<pos:position pos:line="17" pos:column="52"/></operator> <name><name pos:line="17" pos:column="53">graph<pos:position pos:line="17" pos:column="58"/></name><operator pos:line="17" pos:column="58">-&gt;<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="60">column_capacity<pos:position pos:line="17" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="77"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">graph<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">new_mapping<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <call><name pos:line="18" pos:column="30">xrealloc<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name><name pos:line="18" pos:column="39">graph<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">-&gt;<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="46">new_mapping<pos:position pos:line="18" pos:column="57"/></name></name></expr></argument>,
				      <argument><expr><sizeof pos:line="19" pos:column="39">sizeof<argument_list pos:line="19" pos:column="45">(<argument><expr><name pos:line="19" pos:column="46">int<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></sizeof> <operator pos:line="19" pos:column="51">*<pos:position pos:line="19" pos:column="52"/></operator> <literal type="number" pos:line="19" pos:column="53">2<pos:position pos:line="19" pos:column="54"/></literal> <operator pos:line="19" pos:column="55">*<pos:position pos:line="19" pos:column="56"/></operator> <name><name pos:line="19" pos:column="57">graph<pos:position pos:line="19" pos:column="62"/></name><operator pos:line="19" pos:column="62">-&gt;<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="64">column_capacity<pos:position pos:line="19" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="81"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

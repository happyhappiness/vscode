<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_573_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">append_lines<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">strbuf<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">out<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">buf<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">unsigned<pos:position pos:line="1" pos:column="71"/></name> <name pos:line="1" pos:column="72">long<pos:position pos:line="1" pos:column="76"/></name></type> <name pos:line="1" pos:column="77">size<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="83">int<pos:position pos:line="1" pos:column="86"/></name></type> <name pos:line="1" pos:column="87">lines<pos:position pos:line="1" pos:column="92"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="93"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">sp<pos:position pos:line="4" pos:column="23"/></name></decl>, <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="26">eol<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">sp<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">buf<pos:position pos:line="7" pos:column="17"/></name></expr>;<pos:position pos:line="7" pos:column="18"/></expr_stmt>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><name pos:line="9" pos:column="21">i<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="25">lines<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">&amp;&amp;<pos:position pos:line="9" pos:column="41"/></operator> <name pos:line="9" pos:column="34">sp<pos:position pos:line="9" pos:column="36"/></name> <operator pos:line="9" pos:column="37">&lt;<pos:position pos:line="9" pos:column="41"/></operator> <name pos:line="9" pos:column="39">buf<pos:position pos:line="9" pos:column="42"/></name> <operator pos:line="9" pos:column="43">+<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">size<pos:position pos:line="9" pos:column="49"/></name></expr>;<pos:position pos:line="9" pos:column="50"/></condition> <incr><expr><name pos:line="9" pos:column="51">i<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">++<pos:position pos:line="9" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="55"/></control> <block pos:line="9" pos:column="56">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">i<pos:position pos:line="10" pos:column="22"/></name></expr>)<pos:position pos:line="10" pos:column="23"/></condition><then pos:line="10" pos:column="23">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="25">strbuf_addstr<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><name pos:line="11" pos:column="39">out<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="44">"\n    "<pos:position pos:line="11" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="12" pos:column="17">eol<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">memchr<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">sp<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="34">'\n'<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="40">size<pos:position pos:line="12" pos:column="44"/></name> <operator pos:line="12" pos:column="45">-<pos:position pos:line="12" pos:column="46"/></operator> <operator pos:line="12" pos:column="47">(<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="48">sp<pos:position pos:line="12" pos:column="50"/></name> <operator pos:line="12" pos:column="51">-<pos:position pos:line="12" pos:column="52"/></operator> <name pos:line="12" pos:column="53">buf<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">)<pos:position pos:line="12" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="13" pos:column="17">len<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="13" pos:column="23">eol<pos:position pos:line="13" pos:column="26"/></name></expr> ?<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28"> <expr><name pos:line="13" pos:column="29">eol<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">-<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="35">sp<pos:position pos:line="13" pos:column="37"/></name></expr> <pos:position pos:line="13" pos:column="38"/></then><else pos:line="13" pos:column="38">: <expr><name pos:line="13" pos:column="40">size<pos:position pos:line="13" pos:column="44"/></name> <operator pos:line="13" pos:column="45">-<pos:position pos:line="13" pos:column="46"/></operator> <operator pos:line="13" pos:column="47">(<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">sp<pos:position pos:line="13" pos:column="50"/></name> <operator pos:line="13" pos:column="51">-<pos:position pos:line="13" pos:column="52"/></operator> <name pos:line="13" pos:column="53">buf<pos:position pos:line="13" pos:column="56"/></name><operator pos:line="13" pos:column="56">)<pos:position pos:line="13" pos:column="57"/></operator></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">strbuf_add<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">out<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">sp<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="37">len<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">eol<pos:position pos:line="15" pos:column="25"/></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26">
			<block type="pseudo"><break pos:line="16" pos:column="25">break;<pos:position pos:line="16" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="17" pos:column="17">sp<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">eol<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">+<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="28">1<pos:position pos:line="17" pos:column="29"/></literal></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

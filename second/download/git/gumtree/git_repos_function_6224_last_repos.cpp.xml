<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6224_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">merge_trivial<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">commit<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">head<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">commit_list<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">remoteheads<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object_id<pos:position pos:line="3" pos:column="25"/></name></name></type> <name pos:line="3" pos:column="26">result_tree<pos:position pos:line="3" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="39">result_commit<pos:position pos:line="3" pos:column="52"/></name></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit_list<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">parents<pos:position pos:line="4" pos:column="36"/></name></decl>, <modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier><modifier pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="40">pptr<pos:position pos:line="4" pos:column="44"/></name> <init pos:line="4" pos:column="45">= <expr><operator pos:line="4" pos:column="47">&amp;<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="48">parents<pos:position pos:line="4" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name><name pos:line="5" pos:column="16">struct<pos:position pos:line="5" pos:column="22"/></name> <name pos:line="5" pos:column="23">lock_file<pos:position pos:line="5" pos:column="32"/></name></name></type> <name pos:line="5" pos:column="33">lock<pos:position pos:line="5" pos:column="37"/></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">hold_locked_index<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><operator pos:line="7" pos:column="27">&amp;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="28">lock<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">LOCK_DIE_ON_ERROR<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">refresh_cache<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">REFRESH_QUIET<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">active_cache_changed<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">&amp;&amp;<pos:position pos:line="9" pos:column="44"/></operator>
	    <call><name pos:line="10" pos:column="13">write_locked_index<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><operator pos:line="10" pos:column="32">&amp;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="33">the_index<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="44">&amp;<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="45">lock<pos:position pos:line="10" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="51">COMMIT_LOCK<pos:position pos:line="10" pos:column="62"/></name></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="64"/></condition><then pos:line="10" pos:column="64">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><call><name pos:line="11" pos:column="24">error<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><call><name pos:line="11" pos:column="30">_<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><literal type="string" pos:line="11" pos:column="32">"Unable to write index."<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">rollback_lock_file<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><operator pos:line="12" pos:column="28">&amp;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="29">lock<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">write_tree_trivial<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><operator pos:line="14" pos:column="28">&amp;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="29">result_tree<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">printf<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><call><name pos:line="15" pos:column="16">_<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><literal type="string" pos:line="15" pos:column="18">"Wonderful.\n"<pos:position pos:line="15" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">pptr<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">commit_list_append<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">head<pos:position pos:line="16" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="41">pptr<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">pptr<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <call><name pos:line="17" pos:column="16">commit_list_append<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name><name pos:line="17" pos:column="35">remoteheads<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">item<pos:position pos:line="17" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">pptr<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">prepare_to_commit<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">remoteheads<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">commit_tree<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name><name pos:line="19" pos:column="25">merge_msg<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">.<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">buf<pos:position pos:line="19" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="40">merge_msg<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">.<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="50">len<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="55">result_tree<pos:position pos:line="19" pos:column="66"/></name><operator pos:line="19" pos:column="66">.<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="67">hash<pos:position pos:line="19" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="73">parents<pos:position pos:line="19" pos:column="80"/></name></expr></argument>,
			<argument><expr><name><name pos:line="20" pos:column="25">result_commit<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">.<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">hash<pos:position pos:line="20" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">NULL<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">sign_commit<pos:position pos:line="20" pos:column="62"/></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="64"/></condition><then pos:line="20" pos:column="64">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">die<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><call><name pos:line="21" pos:column="21">_<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><literal type="string" pos:line="21" pos:column="23">"failed to write commit object"<pos:position pos:line="21" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">finish<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name pos:line="22" pos:column="16">head<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="22">remoteheads<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="35">&amp;<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="36">result_commit<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="51">"In-index merge"<pos:position pos:line="22" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">drop_save<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">()<pos:position pos:line="23" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
	<return pos:line="24" pos:column="9">return <expr><literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

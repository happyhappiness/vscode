<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3979_git-2.7.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">free_notes<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name><name pos:line="1" pos:column="17">struct<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">notes_tree<pos:position pos:line="1" pos:column="34"/></name></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">t<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">t<pos:position pos:line="3" pos:column="15"/></name></expr>)<pos:position pos:line="3" pos:column="16"/></condition><then pos:line="3" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><name pos:line="4" pos:column="17">t<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">=<pos:position pos:line="4" pos:column="20"/></operator> <operator pos:line="4" pos:column="21">&amp;<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="22">default_notes_tree<pos:position pos:line="4" pos:column="40"/></name></expr>;<pos:position pos:line="4" pos:column="41"/></expr_stmt></block></then></if>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">t<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">root<pos:position pos:line="5" pos:column="20"/></name></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">note_tree_free<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><name><name pos:line="6" pos:column="32">t<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">root<pos:position pos:line="6" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">free<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name><name pos:line="7" pos:column="14">t<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">root<pos:position pos:line="7" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name><name pos:line="8" pos:column="16">t<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">first_non_note<pos:position pos:line="8" pos:column="33"/></name></name></expr>)<pos:position pos:line="8" pos:column="34"/></condition> <block pos:line="8" pos:column="35">{
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">t<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">prev_non_note<pos:position pos:line="9" pos:column="33"/></name></name> <operator pos:line="9" pos:column="34">=<pos:position pos:line="9" pos:column="35"/></operator> <name><name pos:line="9" pos:column="36">t<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">-&gt;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="39">first_non_note<pos:position pos:line="9" pos:column="53"/></name><operator pos:line="9" pos:column="53">-&gt;<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="55">next<pos:position pos:line="9" pos:column="59"/></name></name></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">free<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name><name pos:line="10" pos:column="22">t<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">first_non_note<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">path<pos:position pos:line="10" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">free<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name><name pos:line="11" pos:column="22">t<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">first_non_note<pos:position pos:line="11" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="12" pos:column="17">t<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">first_non_note<pos:position pos:line="12" pos:column="34"/></name></name> <operator pos:line="12" pos:column="35">=<pos:position pos:line="12" pos:column="36"/></operator> <name><name pos:line="12" pos:column="37">t<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">prev_non_note<pos:position pos:line="12" pos:column="53"/></name></name></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">free<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><name><name pos:line="14" pos:column="14">t<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">ref<pos:position pos:line="14" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">memset<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">t<pos:position pos:line="15" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="22">sizeof<argument_list pos:line="15" pos:column="28">(<argument><expr pos:line="15" pos:column="29">struct <name pos:line="15" pos:column="36">notes_tree<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

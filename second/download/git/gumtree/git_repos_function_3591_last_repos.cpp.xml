<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3591_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rerere_forget_one_path<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">path<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">string_list<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">rr<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">filename<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">rerere_id<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">id<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">char<pos:position pos:line="5" pos:column="22"/></name></type> <name><name pos:line="5" pos:column="23">sha1<pos:position pos:line="5" pos:column="27"/></name><index pos:line="5" pos:column="27">[<expr><literal type="number" pos:line="5" pos:column="28">20<pos:position pos:line="5" pos:column="30"/></literal></expr>]<pos:position pos:line="5" pos:column="31"/></index></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ret<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">string_list_item<pos:position pos:line="7" pos:column="32"/></name></name> <modifier pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></modifier></type><name pos:line="7" pos:column="34">item<pos:position pos:line="7" pos:column="38"/></name></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>

	<comment type="block" pos:line="9" pos:column="9">/*
	 * Recreate the original conflict from the stages in the
	 * index and compute the conflict ID
	 */</comment>
	<expr_stmt><expr><name pos:line="13" pos:column="9">ret<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">handle_cache<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">path<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">sha1<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">NULL<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">ret<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&lt;<pos:position pos:line="14" pos:column="21"/></operator> <literal type="number" pos:line="14" pos:column="19">1<pos:position pos:line="14" pos:column="20"/></literal></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><call><name pos:line="15" pos:column="24">error<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><literal type="string" pos:line="15" pos:column="30">"Could not parse conflict hunks in '%s'"<pos:position pos:line="15" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="72">path<pos:position pos:line="15" pos:column="76"/></name></expr></argument>)<pos:position pos:line="15" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="78"/></return></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/* Nuke the recorded resolution for the conflict */</comment>
	<expr_stmt><expr><name pos:line="18" pos:column="9">id<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">new_rerere_id<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">sha1<pos:position pos:line="18" pos:column="32"/></name></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>

	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name><name pos:line="20" pos:column="14">id<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">variant<pos:position pos:line="20" pos:column="25"/></name></name> <operator pos:line="20" pos:column="26">=<pos:position pos:line="20" pos:column="27"/></operator> <literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal></expr>;<pos:position pos:line="20" pos:column="30"/></init>
	     <condition><expr><name><name pos:line="21" pos:column="14">id<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">variant<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">&lt;<pos:position pos:line="21" pos:column="30"/></operator> <name><name pos:line="21" pos:column="28">id<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">collection<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">-&gt;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="44">status_nr<pos:position pos:line="21" pos:column="53"/></name></name></expr>;<pos:position pos:line="21" pos:column="54"/></condition>
	     <incr><expr><name><name pos:line="22" pos:column="14">id<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">variant<pos:position pos:line="22" pos:column="25"/></name></name><operator pos:line="22" pos:column="25">++<pos:position pos:line="22" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="28"/></control> <block pos:line="22" pos:column="29">{
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">mmfile_t<pos:position pos:line="23" pos:column="25"/></name></type> <name pos:line="23" pos:column="26">cur<pos:position pos:line="23" pos:column="29"/></name> <init pos:line="23" pos:column="30">= <expr><block pos:line="23" pos:column="32">{ <expr><name pos:line="23" pos:column="34">NULL<pos:position pos:line="23" pos:column="38"/></name></expr>, <expr><literal type="number" pos:line="23" pos:column="40">0<pos:position pos:line="23" pos:column="41"/></literal></expr> }<pos:position pos:line="23" pos:column="43"/></block></expr></init></decl>;<pos:position pos:line="23" pos:column="44"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">mmbuffer_t<pos:position pos:line="24" pos:column="27"/></name></type> <name pos:line="24" pos:column="28">result<pos:position pos:line="24" pos:column="34"/></name> <init pos:line="24" pos:column="35">= <expr><block pos:line="24" pos:column="37">{<expr><name pos:line="24" pos:column="38">NULL<pos:position pos:line="24" pos:column="42"/></name></expr>, <expr><literal type="number" pos:line="24" pos:column="44">0<pos:position pos:line="24" pos:column="45"/></literal></expr>}<pos:position pos:line="24" pos:column="46"/></block></expr></init></decl>;<pos:position pos:line="24" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">int<pos:position pos:line="25" pos:column="20"/></name></type> <name pos:line="25" pos:column="21">cleanly_resolved<pos:position pos:line="25" pos:column="37"/></name></decl>;<pos:position pos:line="25" pos:column="38"/></decl_stmt>

		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><call><name pos:line="27" pos:column="22">has_rerere_resolution<pos:position pos:line="27" pos:column="43"/></name><argument_list pos:line="27" pos:column="43">(<argument><expr><name pos:line="27" pos:column="44">id<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="48"/></condition><then pos:line="27" pos:column="48">
			<block type="pseudo"><continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="30" pos:column="17">handle_cache<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">path<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="36">sha1<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="42">rerere_path<pos:position pos:line="30" pos:column="53"/></name><argument_list pos:line="30" pos:column="53">(<argument><expr><name pos:line="30" pos:column="54">id<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="58">"thisimage"<pos:position pos:line="30" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="72"/></expr_stmt>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">read_mmfile<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><operator pos:line="31" pos:column="33">&amp;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="34">cur<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="39">rerere_path<pos:position pos:line="31" pos:column="50"/></name><argument_list pos:line="31" pos:column="50">(<argument><expr><name pos:line="31" pos:column="51">id<pos:position pos:line="31" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="55">"thisimage"<pos:position pos:line="31" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="69"/></condition><then pos:line="31" pos:column="69"> <block pos:line="31" pos:column="70">{
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">free<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name><name pos:line="32" pos:column="30">cur<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">.<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="34">ptr<pos:position pos:line="32" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">error<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><literal type="string" pos:line="33" pos:column="31">"Failed to update conflicted state in '%s'"<pos:position pos:line="33" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="76">path<pos:position pos:line="33" pos:column="80"/></name></expr></argument>)<pos:position pos:line="33" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="82"/></expr_stmt>
			<goto pos:line="34" pos:column="25">goto <name pos:line="34" pos:column="30">fail_exit<pos:position pos:line="34" pos:column="39"/></name>;<pos:position pos:line="34" pos:column="40"/></goto>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="36" pos:column="17">cleanly_resolved<pos:position pos:line="36" pos:column="33"/></name> <operator pos:line="36" pos:column="34">=<pos:position pos:line="36" pos:column="35"/></operator> <operator pos:line="36" pos:column="36">!<pos:position pos:line="36" pos:column="37"/></operator><call><name pos:line="36" pos:column="37">try_merge<pos:position pos:line="36" pos:column="46"/></name><argument_list pos:line="36" pos:column="46">(<argument><expr><name pos:line="36" pos:column="47">id<pos:position pos:line="36" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">path<pos:position pos:line="36" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="57">&amp;<pos:position pos:line="36" pos:column="62"/></operator><name pos:line="36" pos:column="58">cur<pos:position pos:line="36" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="63">&amp;<pos:position pos:line="36" pos:column="68"/></operator><name pos:line="36" pos:column="64">result<pos:position pos:line="36" pos:column="70"/></name></expr></argument>)<pos:position pos:line="36" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">free<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name><name pos:line="37" pos:column="22">result<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">.<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="29">ptr<pos:position pos:line="37" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">free<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name><name pos:line="38" pos:column="22">cur<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">.<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">ptr<pos:position pos:line="38" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">cleanly_resolved<pos:position pos:line="39" pos:column="37"/></name></expr>)<pos:position pos:line="39" pos:column="38"/></condition><then pos:line="39" pos:column="38">
			<block type="pseudo"><break pos:line="40" pos:column="25">break;<pos:position pos:line="40" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="41" pos:column="10"/></block></for>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name><name pos:line="43" pos:column="13">id<pos:position pos:line="43" pos:column="15"/></name><operator pos:line="43" pos:column="15">-&gt;<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="17">collection<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">status_nr<pos:position pos:line="43" pos:column="38"/></name></name> <operator pos:line="43" pos:column="39">&lt;=<pos:position pos:line="43" pos:column="44"/></operator> <name><name pos:line="43" pos:column="42">id<pos:position pos:line="43" pos:column="44"/></name><operator pos:line="43" pos:column="44">-&gt;<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="46">variant<pos:position pos:line="43" pos:column="53"/></name></name></expr>)<pos:position pos:line="43" pos:column="54"/></condition><then pos:line="43" pos:column="54"> <block pos:line="43" pos:column="55">{
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">error<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><literal type="string" pos:line="44" pos:column="23">"no remembered resolution for '%s'"<pos:position pos:line="44" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="60">path<pos:position pos:line="44" pos:column="64"/></name></expr></argument>)<pos:position pos:line="44" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="66"/></expr_stmt>
		<goto pos:line="45" pos:column="17">goto <name pos:line="45" pos:column="22">fail_exit<pos:position pos:line="45" pos:column="31"/></name>;<pos:position pos:line="45" pos:column="32"/></goto>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="48" pos:column="9">filename<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <call><name pos:line="48" pos:column="20">rerere_path<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><name pos:line="48" pos:column="32">id<pos:position pos:line="48" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="36">"postimage"<pos:position pos:line="48" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="49"/></expr_stmt>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><call><name pos:line="49" pos:column="13">unlink<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><name pos:line="49" pos:column="20">filename<pos:position pos:line="49" pos:column="28"/></name></expr></argument>)<pos:position pos:line="49" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="30"/></condition><then pos:line="49" pos:column="30"> <block pos:line="49" pos:column="31">{
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">errno<pos:position pos:line="50" pos:column="26"/></name> <operator pos:line="50" pos:column="27">==<pos:position pos:line="50" pos:column="29"/></operator> <name pos:line="50" pos:column="30">ENOENT<pos:position pos:line="50" pos:column="36"/></name></expr>)<pos:position pos:line="50" pos:column="37"/></condition><then pos:line="50" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="25">error<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">(<argument><expr><literal type="string" pos:line="51" pos:column="31">"no remembered resolution for %s"<pos:position pos:line="51" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="66">path<pos:position pos:line="51" pos:column="70"/></name></expr></argument>)<pos:position pos:line="51" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="72"/></expr_stmt></block></then>
		<else pos:line="52" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="25">error_errno<pos:position pos:line="53" pos:column="36"/></name><argument_list pos:line="53" pos:column="36">(<argument><expr><literal type="string" pos:line="53" pos:column="37">"cannot unlink %s"<pos:position pos:line="53" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="57">filename<pos:position pos:line="53" pos:column="65"/></name></expr></argument>)<pos:position pos:line="53" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="67"/></expr_stmt></block></else></if>
		<goto pos:line="54" pos:column="17">goto <name pos:line="54" pos:column="22">fail_exit<pos:position pos:line="54" pos:column="31"/></name>;<pos:position pos:line="54" pos:column="32"/></goto>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="57" pos:column="9">/*
	 * Update the preimage so that the user can resolve the
	 * conflict in the working tree, run us again to record
	 * the postimage.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">handle_cache<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">(<argument><expr><name pos:line="62" pos:column="22">path<pos:position pos:line="62" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="28">sha1<pos:position pos:line="62" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="34">rerere_path<pos:position pos:line="62" pos:column="45"/></name><argument_list pos:line="62" pos:column="45">(<argument><expr><name pos:line="62" pos:column="46">id<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="50">"preimage"<pos:position pos:line="62" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">fprintf<pos:position pos:line="63" pos:column="16"/></name><argument_list pos:line="63" pos:column="16">(<argument><expr><name pos:line="63" pos:column="17">stderr<pos:position pos:line="63" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="25">"Updated preimage for '%s'\n"<pos:position pos:line="63" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="56">path<pos:position pos:line="63" pos:column="60"/></name></expr></argument>)<pos:position pos:line="63" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="62"/></expr_stmt>

	<comment type="block" pos:line="65" pos:column="9">/*
	 * And remember that we can record resolution for this
	 * conflict when the user is done.
	 */</comment>
	<expr_stmt><expr><name pos:line="69" pos:column="9">item<pos:position pos:line="69" pos:column="13"/></name> <operator pos:line="69" pos:column="14">=<pos:position pos:line="69" pos:column="15"/></operator> <call><name pos:line="69" pos:column="16">string_list_insert<pos:position pos:line="69" pos:column="34"/></name><argument_list pos:line="69" pos:column="34">(<argument><expr><name pos:line="69" pos:column="35">rr<pos:position pos:line="69" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="39">path<pos:position pos:line="69" pos:column="43"/></name></expr></argument>)<pos:position pos:line="69" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">free_rerere_id<pos:position pos:line="70" pos:column="23"/></name><argument_list pos:line="70" pos:column="23">(<argument><expr><name pos:line="70" pos:column="24">item<pos:position pos:line="70" pos:column="28"/></name></expr></argument>)<pos:position pos:line="70" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="71" pos:column="9">item<pos:position pos:line="71" pos:column="13"/></name><operator pos:line="71" pos:column="13">-&gt;<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="15">util<pos:position pos:line="71" pos:column="19"/></name></name> <operator pos:line="71" pos:column="20">=<pos:position pos:line="71" pos:column="21"/></operator> <name pos:line="71" pos:column="22">id<pos:position pos:line="71" pos:column="24"/></name></expr>;<pos:position pos:line="71" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="72" pos:column="9">fprintf<pos:position pos:line="72" pos:column="16"/></name><argument_list pos:line="72" pos:column="16">(<argument><expr><name pos:line="72" pos:column="17">stderr<pos:position pos:line="72" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="25">"Forgot resolution for %s\n"<pos:position pos:line="72" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="55">path<pos:position pos:line="72" pos:column="59"/></name></expr></argument>)<pos:position pos:line="72" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="61"/></expr_stmt>
	<return pos:line="73" pos:column="9">return <expr><literal type="number" pos:line="73" pos:column="16">0<pos:position pos:line="73" pos:column="17"/></literal></expr>;<pos:position pos:line="73" pos:column="18"/></return>

<label><name pos:line="75" pos:column="1">fail_exit<pos:position pos:line="75" pos:column="10"/></name>:<pos:position pos:line="75" pos:column="11"/></label>
	<expr_stmt><expr><call><name pos:line="76" pos:column="9">free<pos:position pos:line="76" pos:column="13"/></name><argument_list pos:line="76" pos:column="13">(<argument><expr><name pos:line="76" pos:column="14">id<pos:position pos:line="76" pos:column="16"/></name></expr></argument>)<pos:position pos:line="76" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="18"/></expr_stmt>
	<return pos:line="77" pos:column="9">return <expr><operator pos:line="77" pos:column="16">-<pos:position pos:line="77" pos:column="17"/></operator><literal type="number" pos:line="77" pos:column="17">1<pos:position pos:line="77" pos:column="18"/></literal></expr>;<pos:position pos:line="77" pos:column="19"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_432_git-2.6.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">find_identical_files<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">hashmap<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">srcs<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="2" pos:column="33">int<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">dst_index<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="3" pos:column="33">struct<pos:position pos:line="3" pos:column="39"/></name> <name pos:line="3" pos:column="40">diff_options<pos:position pos:line="3" pos:column="52"/></name></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">options<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">renames<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">diff_filespec<pos:position pos:line="7" pos:column="29"/></name></name> <modifier pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></modifier></type><name pos:line="7" pos:column="31">target<pos:position pos:line="7" pos:column="37"/></name> <init pos:line="7" pos:column="38">= <expr><name><name pos:line="7" pos:column="40">rename_dst<pos:position pos:line="7" pos:column="50"/></name><index pos:line="7" pos:column="50">[<expr><name pos:line="7" pos:column="51">dst_index<pos:position pos:line="7" pos:column="60"/></name></expr>]<pos:position pos:line="7" pos:column="61"/></index></name><operator pos:line="7" pos:column="61">.<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="62">two<pos:position pos:line="7" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">file_similarity<pos:position pos:line="8" pos:column="31"/></name></name> <modifier pos:line="8" pos:column="32">*<pos:position pos:line="8" pos:column="33"/></modifier></type><name pos:line="8" pos:column="33">p<pos:position pos:line="8" pos:column="34"/></name></decl>, <modifier pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="37">best<pos:position pos:line="8" pos:column="41"/></name> <init pos:line="8" pos:column="42">= <expr><name pos:line="8" pos:column="44">NULL<pos:position pos:line="8" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><literal type="number" pos:line="9" pos:column="17">100<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="22">best_score<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><operator pos:line="9" pos:column="35">-<pos:position pos:line="9" pos:column="36"/></operator><literal type="number" pos:line="9" pos:column="36">1<pos:position pos:line="9" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>

	<comment type="block" pos:line="11" pos:column="9">/*
	 * Find the best source match for specified destination.
	 */</comment>
	<expr_stmt><expr><name pos:line="14" pos:column="9">p<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <call><name pos:line="14" pos:column="13">hashmap_get_from_hash<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">srcs<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="41">hash_filespec<pos:position pos:line="14" pos:column="54"/></name><argument_list pos:line="14" pos:column="54">(<argument><expr><name pos:line="14" pos:column="55">target<pos:position pos:line="14" pos:column="61"/></name></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="64">NULL<pos:position pos:line="14" pos:column="68"/></name></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="70"/></expr_stmt>
	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init pos:line="15" pos:column="14">;<pos:position pos:line="15" pos:column="15"/></init> <condition><expr><name pos:line="15" pos:column="16">p<pos:position pos:line="15" pos:column="17"/></name></expr>;<pos:position pos:line="15" pos:column="18"/></condition> <incr><expr><name pos:line="15" pos:column="19">p<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <call><name pos:line="15" pos:column="23">hashmap_get_next<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">srcs<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">p<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr></incr>)<pos:position pos:line="15" pos:column="49"/></control> <block pos:line="15" pos:column="50">{
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">int<pos:position pos:line="16" pos:column="20"/></name></type> <name pos:line="16" pos:column="21">score<pos:position pos:line="16" pos:column="26"/></name></decl>;<pos:position pos:line="16" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="17" pos:column="17">struct<pos:position pos:line="17" pos:column="23"/></name> <name pos:line="17" pos:column="24">diff_filespec<pos:position pos:line="17" pos:column="37"/></name></name> <modifier pos:line="17" pos:column="38">*<pos:position pos:line="17" pos:column="39"/></modifier></type><name pos:line="17" pos:column="39">source<pos:position pos:line="17" pos:column="45"/></name> <init pos:line="17" pos:column="46">= <expr><name><name pos:line="17" pos:column="48">p<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">-&gt;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="51">filespec<pos:position pos:line="17" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="60"/></decl_stmt>

		<comment type="block" pos:line="19" pos:column="17">/* False hash collision? */</comment>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">hashcmp<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name><name pos:line="20" pos:column="29">source<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">sha1<pos:position pos:line="20" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="43">target<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">-&gt;<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="51">sha1<pos:position pos:line="20" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="57"/></condition><then pos:line="20" pos:column="57">
			<block type="pseudo"><continue pos:line="21" pos:column="25">continue;<pos:position pos:line="21" pos:column="34"/></continue></block></then></if>
		<comment type="block" pos:line="22" pos:column="17">/* Non-regular files? If so, the modes must match! */</comment>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><call><name pos:line="23" pos:column="22">S_ISREG<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name><name pos:line="23" pos:column="30">source<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">mode<pos:position pos:line="23" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call> <operator pos:line="23" pos:column="44">||<pos:position pos:line="23" pos:column="46"/></operator> <operator pos:line="23" pos:column="47">!<pos:position pos:line="23" pos:column="48"/></operator><call><name pos:line="23" pos:column="48">S_ISREG<pos:position pos:line="23" pos:column="55"/></name><argument_list pos:line="23" pos:column="55">(<argument><expr><name><name pos:line="23" pos:column="56">target<pos:position pos:line="23" pos:column="62"/></name><operator pos:line="23" pos:column="62">-&gt;<pos:position pos:line="23" pos:column="67"/></operator><name pos:line="23" pos:column="64">mode<pos:position pos:line="23" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="70"/></condition><then pos:line="23" pos:column="70"> <block pos:line="23" pos:column="71">{
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><name><name pos:line="24" pos:column="29">source<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">mode<pos:position pos:line="24" pos:column="41"/></name></name> <operator pos:line="24" pos:column="42">!=<pos:position pos:line="24" pos:column="44"/></operator> <name><name pos:line="24" pos:column="45">target<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">-&gt;<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="53">mode<pos:position pos:line="24" pos:column="57"/></name></name></expr>)<pos:position pos:line="24" pos:column="58"/></condition><then pos:line="24" pos:column="58">
				<block type="pseudo"><continue pos:line="25" pos:column="33">continue;<pos:position pos:line="25" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="27" pos:column="17">/* Give higher scores to sources that haven't been used already */</comment>
		<expr_stmt><expr><name pos:line="28" pos:column="17">score<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <operator pos:line="28" pos:column="25">!<pos:position pos:line="28" pos:column="26"/></operator><name><name pos:line="28" pos:column="26">source<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">rename_used<pos:position pos:line="28" pos:column="45"/></name></name></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name><name pos:line="29" pos:column="21">source<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">rename_used<pos:position pos:line="29" pos:column="40"/></name></name> <operator pos:line="29" pos:column="41">&amp;&amp;<pos:position pos:line="29" pos:column="51"/></operator> <name><name pos:line="29" pos:column="44">options<pos:position pos:line="29" pos:column="51"/></name><operator pos:line="29" pos:column="51">-&gt;<pos:position pos:line="29" pos:column="56"/></operator><name pos:line="29" pos:column="53">detect_rename<pos:position pos:line="29" pos:column="66"/></name></name> <operator pos:line="29" pos:column="67">!=<pos:position pos:line="29" pos:column="69"/></operator> <name pos:line="29" pos:column="70">DIFF_DETECT_COPY<pos:position pos:line="29" pos:column="86"/></name></expr>)<pos:position pos:line="29" pos:column="87"/></condition><then pos:line="29" pos:column="87">
			<block type="pseudo"><continue pos:line="30" pos:column="25">continue;<pos:position pos:line="30" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="31" pos:column="17">score<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">+=<pos:position pos:line="31" pos:column="25"/></operator> <call><name pos:line="31" pos:column="26">basename_same<pos:position pos:line="31" pos:column="39"/></name><argument_list pos:line="31" pos:column="39">(<argument><expr><name pos:line="31" pos:column="40">source<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">target<pos:position pos:line="31" pos:column="54"/></name></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="56"/></expr_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">score<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">&gt;<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="29">best_score<pos:position pos:line="32" pos:column="39"/></name></expr>)<pos:position pos:line="32" pos:column="40"/></condition><then pos:line="32" pos:column="40"> <block pos:line="32" pos:column="41">{
			<expr_stmt><expr><name pos:line="33" pos:column="25">best<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <name pos:line="33" pos:column="32">p<pos:position pos:line="33" pos:column="33"/></name></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
			<expr_stmt><expr><name pos:line="34" pos:column="25">best_score<pos:position pos:line="34" pos:column="35"/></name> <operator pos:line="34" pos:column="36">=<pos:position pos:line="34" pos:column="37"/></operator> <name pos:line="34" pos:column="38">score<pos:position pos:line="34" pos:column="43"/></name></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt>
			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><name pos:line="35" pos:column="29">score<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">==<pos:position pos:line="35" pos:column="37"/></operator> <literal type="number" pos:line="35" pos:column="38">2<pos:position pos:line="35" pos:column="39"/></literal></expr>)<pos:position pos:line="35" pos:column="40"/></condition><then pos:line="35" pos:column="40">
				<block type="pseudo"><break pos:line="36" pos:column="33">break;<pos:position pos:line="36" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="39" pos:column="17">/* Too many identical alternatives? Pick one */</comment>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><operator pos:line="40" pos:column="21">!<pos:position pos:line="40" pos:column="22"/></operator><operator pos:line="40" pos:column="22">--<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">i<pos:position pos:line="40" pos:column="25"/></name></expr>)<pos:position pos:line="40" pos:column="26"/></condition><then pos:line="40" pos:column="26">
			<block type="pseudo"><break pos:line="41" pos:column="25">break;<pos:position pos:line="41" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="42" pos:column="10"/></block></for>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">best<pos:position pos:line="43" pos:column="17"/></name></expr>)<pos:position pos:line="43" pos:column="18"/></condition><then pos:line="43" pos:column="18"> <block pos:line="43" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">record_rename_pair<pos:position pos:line="44" pos:column="35"/></name><argument_list pos:line="44" pos:column="35">(<argument><expr><name pos:line="44" pos:column="36">dst_index<pos:position pos:line="44" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="47">best<pos:position pos:line="44" pos:column="51"/></name><operator pos:line="44" pos:column="51">-&gt;<pos:position pos:line="44" pos:column="56"/></operator><name pos:line="44" pos:column="53">index<pos:position pos:line="44" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="60">MAX_SCORE<pos:position pos:line="44" pos:column="69"/></name></expr></argument>)<pos:position pos:line="44" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><name pos:line="45" pos:column="17">renames<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">++<pos:position pos:line="45" pos:column="26"/></operator></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>
	<return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">renames<pos:position pos:line="47" pos:column="23"/></name></expr>;<pos:position pos:line="47" pos:column="24"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

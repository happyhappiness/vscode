<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3298_git-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">find_short_object_filename<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">len<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">hex_pfx<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="70">struct<pos:position pos:line="1" pos:column="76"/></name> <name pos:line="1" pos:column="77">disambiguate_state<pos:position pos:line="1" pos:column="95"/></name></name> <modifier pos:line="1" pos:column="96">*<pos:position pos:line="1" pos:column="97"/></modifier></type><name pos:line="1" pos:column="97">ds<pos:position pos:line="1" pos:column="99"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="100"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">alternate_object_database<pos:position pos:line="3" pos:column="41"/></name></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">alt<pos:position pos:line="3" pos:column="46"/></name></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">hex<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">40<pos:position pos:line="4" pos:column="20"/></literal></expr>]<pos:position pos:line="4" pos:column="21"/></index></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name><name pos:line="5" pos:column="16">struct<pos:position pos:line="5" pos:column="22"/></name> <name pos:line="5" pos:column="23">alternate_object_database<pos:position pos:line="5" pos:column="48"/></name></name> <modifier pos:line="5" pos:column="49">*<pos:position pos:line="5" pos:column="50"/></modifier></type><name pos:line="5" pos:column="50">fakeent<pos:position pos:line="5" pos:column="57"/></name></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">fakeent<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22"> <block pos:line="7" pos:column="23">{
		<comment type="block" pos:line="8" pos:column="17">/*
		 * Create a "fake" alternate object database that
		 * points to our own object database, to make it
		 * easier to get a temporary working space in
		 * alt-&gt;name/alt-&gt;base while iterating over the
		 * object databases including our own.
		 */</comment>
		<decl_stmt><decl><type><specifier pos:line="15" pos:column="17">const<pos:position pos:line="15" pos:column="22"/></specifier> <name pos:line="15" pos:column="23">char<pos:position pos:line="15" pos:column="27"/></name> <modifier pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></modifier></type><name pos:line="15" pos:column="29">objdir<pos:position pos:line="15" pos:column="35"/></name> <init pos:line="15" pos:column="36">= <expr><call><name pos:line="15" pos:column="38">get_object_directory<pos:position pos:line="15" pos:column="58"/></name><argument_list pos:line="15" pos:column="58">()<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="61"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">int<pos:position pos:line="16" pos:column="20"/></name></type> <name pos:line="16" pos:column="21">objdir_len<pos:position pos:line="16" pos:column="31"/></name> <init pos:line="16" pos:column="32">= <expr><call><name pos:line="16" pos:column="34">strlen<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><name pos:line="16" pos:column="41">objdir<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">int<pos:position pos:line="17" pos:column="20"/></name></type> <name pos:line="17" pos:column="21">entlen<pos:position pos:line="17" pos:column="27"/></name> <init pos:line="17" pos:column="28">= <expr><name pos:line="17" pos:column="30">objdir_len<pos:position pos:line="17" pos:column="40"/></name> <operator pos:line="17" pos:column="41">+<pos:position pos:line="17" pos:column="42"/></operator> <literal type="number" pos:line="17" pos:column="43">43<pos:position pos:line="17" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="46"/></decl_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">fakeent<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <call><name pos:line="18" pos:column="27">xmalloc<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><sizeof pos:line="18" pos:column="35">sizeof<argument_list pos:line="18" pos:column="41">(<argument><expr><operator pos:line="18" pos:column="42">*<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="43">fakeent<pos:position pos:line="18" pos:column="50"/></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></sizeof> <operator pos:line="18" pos:column="52">+<pos:position pos:line="18" pos:column="53"/></operator> <name pos:line="18" pos:column="54">entlen<pos:position pos:line="18" pos:column="60"/></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">memcpy<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name><name pos:line="19" pos:column="24">fakeent<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">base<pos:position pos:line="19" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">objdir<pos:position pos:line="19" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="47">objdir_len<pos:position pos:line="19" pos:column="57"/></name></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">fakeent<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">-&gt;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="26">name<pos:position pos:line="20" pos:column="30"/></name></name> <operator pos:line="20" pos:column="31">=<pos:position pos:line="20" pos:column="32"/></operator> <name><name pos:line="20" pos:column="33">fakeent<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">-&gt;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="42">base<pos:position pos:line="20" pos:column="46"/></name></name> <operator pos:line="20" pos:column="47">+<pos:position pos:line="20" pos:column="48"/></operator> <name pos:line="20" pos:column="49">objdir_len<pos:position pos:line="20" pos:column="59"/></name> <operator pos:line="20" pos:column="60">+<pos:position pos:line="20" pos:column="61"/></operator> <literal type="number" pos:line="20" pos:column="62">1<pos:position pos:line="20" pos:column="63"/></literal></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">fakeent<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">-&gt;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="26">name<pos:position pos:line="21" pos:column="30"/></name><index pos:line="21" pos:column="30">[<expr><operator pos:line="21" pos:column="31">-<pos:position pos:line="21" pos:column="32"/></operator><literal type="number" pos:line="21" pos:column="32">1<pos:position pos:line="21" pos:column="33"/></literal></expr>]<pos:position pos:line="21" pos:column="34"/></index></name> <operator pos:line="21" pos:column="35">=<pos:position pos:line="21" pos:column="36"/></operator> <literal type="char" pos:line="21" pos:column="37">'/'<pos:position pos:line="21" pos:column="40"/></literal></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">fakeent<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">next<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">alt_odb_list<pos:position pos:line="23" pos:column="37"/></name></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">sprintf<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">hex<pos:position pos:line="25" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="22">"%.2s"<pos:position pos:line="25" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="30">hex_pfx<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
	<for pos:line="26" pos:column="9">for <control pos:line="26" pos:column="13">(<init><expr><name pos:line="26" pos:column="14">alt<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">fakeent<pos:position pos:line="26" pos:column="27"/></name></expr>;<pos:position pos:line="26" pos:column="28"/></init> <condition><expr><name pos:line="26" pos:column="29">alt<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">&amp;&amp;<pos:position pos:line="26" pos:column="43"/></operator> <operator pos:line="26" pos:column="36">!<pos:position pos:line="26" pos:column="37"/></operator><name><name pos:line="26" pos:column="37">ds<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">-&gt;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="41">ambiguous<pos:position pos:line="26" pos:column="50"/></name></name></expr>;<pos:position pos:line="26" pos:column="51"/></condition> <incr><expr><name pos:line="26" pos:column="52">alt<pos:position pos:line="26" pos:column="55"/></name> <operator pos:line="26" pos:column="56">=<pos:position pos:line="26" pos:column="57"/></operator> <name><name pos:line="26" pos:column="58">alt<pos:position pos:line="26" pos:column="61"/></name><operator pos:line="26" pos:column="61">-&gt;<pos:position pos:line="26" pos:column="66"/></operator><name pos:line="26" pos:column="63">next<pos:position pos:line="26" pos:column="67"/></name></name></expr></incr>)<pos:position pos:line="26" pos:column="68"/></control> <block pos:line="26" pos:column="69">{
		<decl_stmt><decl><type><name><name pos:line="27" pos:column="17">struct<pos:position pos:line="27" pos:column="23"/></name> <name pos:line="27" pos:column="24">dirent<pos:position pos:line="27" pos:column="30"/></name></name> <modifier pos:line="27" pos:column="31">*<pos:position pos:line="27" pos:column="32"/></modifier></type><name pos:line="27" pos:column="32">de<pos:position pos:line="27" pos:column="34"/></name></decl>;<pos:position pos:line="27" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="28" pos:column="17">DIR<pos:position pos:line="28" pos:column="20"/></name> <modifier pos:line="28" pos:column="21">*<pos:position pos:line="28" pos:column="22"/></modifier></type><name pos:line="28" pos:column="22">dir<pos:position pos:line="28" pos:column="25"/></name></decl>;<pos:position pos:line="28" pos:column="26"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">sprintf<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name><name pos:line="29" pos:column="25">alt<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">name<pos:position pos:line="29" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="36">"%.2s/"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="45">hex_pfx<pos:position pos:line="29" pos:column="52"/></name></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">dir<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <call><name pos:line="30" pos:column="23">opendir<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name><name pos:line="30" pos:column="31">alt<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">base<pos:position pos:line="30" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><operator pos:line="31" pos:column="21">!<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">dir<pos:position pos:line="31" pos:column="25"/></name></expr>)<pos:position pos:line="31" pos:column="26"/></condition><then pos:line="31" pos:column="26">
			<block type="pseudo"><continue pos:line="32" pos:column="25">continue;<pos:position pos:line="32" pos:column="34"/></continue></block></then></if>

		<while pos:line="34" pos:column="17">while <condition pos:line="34" pos:column="23">(<expr><operator pos:line="34" pos:column="24">!<pos:position pos:line="34" pos:column="25"/></operator><name><name pos:line="34" pos:column="25">ds<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">ambiguous<pos:position pos:line="34" pos:column="38"/></name></name> <operator pos:line="34" pos:column="39">&amp;&amp;<pos:position pos:line="34" pos:column="49"/></operator> <operator pos:line="34" pos:column="42">(<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="43">de<pos:position pos:line="34" pos:column="45"/></name> <operator pos:line="34" pos:column="46">=<pos:position pos:line="34" pos:column="47"/></operator> <call><name pos:line="34" pos:column="48">readdir<pos:position pos:line="34" pos:column="55"/></name><argument_list pos:line="34" pos:column="55">(<argument><expr><name pos:line="34" pos:column="56">dir<pos:position pos:line="34" pos:column="59"/></name></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call><operator pos:line="34" pos:column="60">)<pos:position pos:line="34" pos:column="61"/></operator> <operator pos:line="34" pos:column="62">!=<pos:position pos:line="34" pos:column="64"/></operator> <name pos:line="34" pos:column="65">NULL<pos:position pos:line="34" pos:column="69"/></name></expr>)<pos:position pos:line="34" pos:column="70"/></condition> <block pos:line="34" pos:column="71">{
			<decl_stmt><decl><type><name pos:line="35" pos:column="25">unsigned<pos:position pos:line="35" pos:column="33"/></name> <name pos:line="35" pos:column="34">char<pos:position pos:line="35" pos:column="38"/></name></type> <name><name pos:line="35" pos:column="39">sha1<pos:position pos:line="35" pos:column="43"/></name><index pos:line="35" pos:column="43">[<expr><literal type="number" pos:line="35" pos:column="44">20<pos:position pos:line="35" pos:column="46"/></literal></expr>]<pos:position pos:line="35" pos:column="47"/></index></name></decl>;<pos:position pos:line="35" pos:column="48"/></decl_stmt>

			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><call><name pos:line="37" pos:column="29">strlen<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><name><name pos:line="37" pos:column="36">de<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">d_name<pos:position pos:line="37" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call> <operator pos:line="37" pos:column="48">!=<pos:position pos:line="37" pos:column="50"/></operator> <literal type="number" pos:line="37" pos:column="51">38<pos:position pos:line="37" pos:column="53"/></literal></expr>)<pos:position pos:line="37" pos:column="54"/></condition><then pos:line="37" pos:column="54">
				<block type="pseudo"><continue pos:line="38" pos:column="33">continue;<pos:position pos:line="38" pos:column="42"/></continue></block></then></if>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><call><name pos:line="39" pos:column="29">memcmp<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument><expr><name><name pos:line="39" pos:column="36">de<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">-&gt;<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="40">d_name<pos:position pos:line="39" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="48">hex_pfx<pos:position pos:line="39" pos:column="55"/></name> <operator pos:line="39" pos:column="56">+<pos:position pos:line="39" pos:column="57"/></operator> <literal type="number" pos:line="39" pos:column="58">2<pos:position pos:line="39" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="61">len<pos:position pos:line="39" pos:column="64"/></name> <operator pos:line="39" pos:column="65">-<pos:position pos:line="39" pos:column="66"/></operator> <literal type="number" pos:line="39" pos:column="67">2<pos:position pos:line="39" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="70"/></condition><then pos:line="39" pos:column="70">
				<block type="pseudo"><continue pos:line="40" pos:column="33">continue;<pos:position pos:line="40" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">memcpy<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">hex<pos:position pos:line="41" pos:column="35"/></name> <operator pos:line="41" pos:column="36">+<pos:position pos:line="41" pos:column="37"/></operator> <literal type="number" pos:line="41" pos:column="38">2<pos:position pos:line="41" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="41">de<pos:position pos:line="41" pos:column="43"/></name><operator pos:line="41" pos:column="43">-&gt;<pos:position pos:line="41" pos:column="48"/></operator><name pos:line="41" pos:column="45">d_name<pos:position pos:line="41" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="53">38<pos:position pos:line="41" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="57"/></expr_stmt>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><operator pos:line="42" pos:column="29">!<pos:position pos:line="42" pos:column="30"/></operator><call><name pos:line="42" pos:column="30">get_sha1_hex<pos:position pos:line="42" pos:column="42"/></name><argument_list pos:line="42" pos:column="42">(<argument><expr><name pos:line="42" pos:column="43">hex<pos:position pos:line="42" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="48">sha1<pos:position pos:line="42" pos:column="52"/></name></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="54"/></condition><then pos:line="42" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="33">update_candidates<pos:position pos:line="43" pos:column="50"/></name><argument_list pos:line="43" pos:column="50">(<argument><expr><name pos:line="43" pos:column="51">ds<pos:position pos:line="43" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="55">sha1<pos:position pos:line="43" pos:column="59"/></name></expr></argument>)<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt></block></then></if>
		}<pos:position pos:line="44" pos:column="18"/></block></while>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">closedir<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">dir<pos:position pos:line="45" pos:column="29"/></name></expr></argument>)<pos:position pos:line="45" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></for>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6887_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_reflist<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">reflist<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">ref<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">printf<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="string" pos:line="5" pos:column="16">"refs='"<pos:position pos:line="5" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>
	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">ref<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">reflist<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></init> <condition><expr><name pos:line="6" pos:column="29">ref<pos:position pos:line="6" pos:column="32"/></name></expr>;<pos:position pos:line="6" pos:column="33"/></condition> <incr/>)<pos:position pos:line="6" pos:column="35"/></control> <block pos:line="6" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="7" pos:column="17">const<pos:position pos:line="7" pos:column="22"/></specifier> <name pos:line="7" pos:column="23">char<pos:position pos:line="7" pos:column="27"/></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">next<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
		<while pos:line="8" pos:column="17">while <condition pos:line="8" pos:column="23">(<expr><operator pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">ref<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">&amp;&amp;<pos:position pos:line="8" pos:column="39"/></operator> <call><name pos:line="8" pos:column="32">isspace<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><operator pos:line="8" pos:column="40">*<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">ref<pos:position pos:line="8" pos:column="44"/></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="46"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="25">ref<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">++<pos:position pos:line="9" pos:column="30"/></operator></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt></block></while>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><operator pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">ref<pos:position pos:line="10" pos:column="26"/></name></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27">
			<block type="pseudo"><break pos:line="11" pos:column="25">break;<pos:position pos:line="11" pos:column="31"/></break></block></then></if>
		<for pos:line="12" pos:column="17">for <control pos:line="12" pos:column="21">(<init><expr><name pos:line="12" pos:column="22">next<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">ref<pos:position pos:line="12" pos:column="32"/></name></expr>;<pos:position pos:line="12" pos:column="33"/></init> <condition><expr><operator pos:line="12" pos:column="34">*<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">next<pos:position pos:line="12" pos:column="39"/></name> <operator pos:line="12" pos:column="40">&amp;&amp;<pos:position pos:line="12" pos:column="50"/></operator> <operator pos:line="12" pos:column="43">!<pos:position pos:line="12" pos:column="44"/></operator><call><name pos:line="12" pos:column="44">isspace<pos:position pos:line="12" pos:column="51"/></name><argument_list pos:line="12" pos:column="51">(<argument><expr><operator pos:line="12" pos:column="52">*<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="53">next<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></condition> <incr><expr><name pos:line="12" pos:column="60">next<pos:position pos:line="12" pos:column="64"/></name><operator pos:line="12" pos:column="64">++<pos:position pos:line="12" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="67"/></control>
			<block type="pseudo"><empty_stmt pos:line="13" pos:column="25">;<pos:position pos:line="13" pos:column="26"/></empty_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">printf<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><literal type="string" pos:line="14" pos:column="24">"\n%.*s"<pos:position pos:line="14" pos:column="32"/></literal></expr></argument>, <argument><expr><call pos:line="14" pos:column="34">(<name pos:line="14" pos:column="35">int<pos:position pos:line="14" pos:column="38"/></name>)<argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">next<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">-<pos:position pos:line="14" pos:column="46"/></operator> <name pos:line="14" pos:column="47">ref<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="53">ref<pos:position pos:line="14" pos:column="56"/></name></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">ref<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="23">next<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">printf<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="string" pos:line="17" pos:column="16">"'\n"<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">printf<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="string" pos:line="19" pos:column="16">"rref='"<pos:position pos:line="19" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">ref<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">reflist<pos:position pos:line="20" pos:column="27"/></name></expr>;<pos:position pos:line="20" pos:column="28"/></init> <condition><expr><name pos:line="20" pos:column="29">ref<pos:position pos:line="20" pos:column="32"/></name></expr>;<pos:position pos:line="20" pos:column="33"/></condition> <incr/>)<pos:position pos:line="20" pos:column="35"/></control> <block pos:line="20" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="21" pos:column="17">const<pos:position pos:line="21" pos:column="22"/></specifier> <name pos:line="21" pos:column="23">char<pos:position pos:line="21" pos:column="27"/></name> <modifier pos:line="21" pos:column="28">*<pos:position pos:line="21" pos:column="29"/></modifier></type><name pos:line="21" pos:column="29">next<pos:position pos:line="21" pos:column="33"/></name></decl>, <modifier pos:line="21" pos:column="35">*<pos:position pos:line="21" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="21" pos:column="36">colon<pos:position pos:line="21" pos:column="41"/></name></decl>;<pos:position pos:line="21" pos:column="42"/></decl_stmt>
		<while pos:line="22" pos:column="17">while <condition pos:line="22" pos:column="23">(<expr><operator pos:line="22" pos:column="24">*<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">ref<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">&amp;&amp;<pos:position pos:line="22" pos:column="39"/></operator> <call><name pos:line="22" pos:column="32">isspace<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><operator pos:line="22" pos:column="40">*<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="41">ref<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="46"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="25">ref<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">++<pos:position pos:line="23" pos:column="30"/></operator></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt></block></while>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><operator pos:line="24" pos:column="22">*<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="23">ref<pos:position pos:line="24" pos:column="26"/></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27">
			<block type="pseudo"><break pos:line="25" pos:column="25">break;<pos:position pos:line="25" pos:column="31"/></break></block></then></if>
		<for pos:line="26" pos:column="17">for <control pos:line="26" pos:column="21">(<init><expr><name pos:line="26" pos:column="22">next<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator> <name pos:line="26" pos:column="29">ref<pos:position pos:line="26" pos:column="32"/></name></expr>;<pos:position pos:line="26" pos:column="33"/></init> <condition><expr><operator pos:line="26" pos:column="34">*<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">next<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">&amp;&amp;<pos:position pos:line="26" pos:column="50"/></operator> <operator pos:line="26" pos:column="43">!<pos:position pos:line="26" pos:column="44"/></operator><call><name pos:line="26" pos:column="44">isspace<pos:position pos:line="26" pos:column="51"/></name><argument_list pos:line="26" pos:column="51">(<argument><expr><operator pos:line="26" pos:column="52">*<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="53">next<pos:position pos:line="26" pos:column="57"/></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></condition> <incr><expr><name pos:line="26" pos:column="60">next<pos:position pos:line="26" pos:column="64"/></name><operator pos:line="26" pos:column="64">++<pos:position pos:line="26" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="67"/></control>
			<block type="pseudo"><empty_stmt pos:line="27" pos:column="25">;<pos:position pos:line="27" pos:column="26"/></empty_stmt></block></for>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">*<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">ref<pos:position pos:line="28" pos:column="25"/></name> <operator pos:line="28" pos:column="26">==<pos:position pos:line="28" pos:column="28"/></operator> <literal type="char" pos:line="28" pos:column="29">'.'<pos:position pos:line="28" pos:column="32"/></literal></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="25">ref<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">++<pos:position pos:line="29" pos:column="30"/></operator></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt></block></then></if>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">*<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">ref<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">==<pos:position pos:line="30" pos:column="28"/></operator> <literal type="char" pos:line="30" pos:column="29">'+'<pos:position pos:line="30" pos:column="32"/></literal></expr>)<pos:position pos:line="30" pos:column="33"/></condition><then pos:line="30" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="25">ref<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">++<pos:position pos:line="31" pos:column="30"/></operator></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="32" pos:column="17">colon<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <call><name pos:line="32" pos:column="25">strchr<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">ref<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="32" pos:column="37">':'<pos:position pos:line="32" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">putchar<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><literal type="char" pos:line="33" pos:column="25">'\n'<pos:position pos:line="33" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">printf<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><literal type="string" pos:line="34" pos:column="24">"%.*s"<pos:position pos:line="34" pos:column="30"/></literal></expr></argument>, <argument><expr><call pos:line="34" pos:column="32">(<name pos:line="34" pos:column="33">int<pos:position pos:line="34" pos:column="36"/></name>)<argument_list pos:line="34" pos:column="37">(<argument><expr><operator pos:line="34" pos:column="38">(<pos:position pos:line="34" pos:column="39"/></operator><ternary><condition><expr><name pos:line="34" pos:column="39">colon<pos:position pos:line="34" pos:column="44"/></name></expr> ?<pos:position pos:line="34" pos:column="46"/></condition><then pos:line="34" pos:column="46"> <expr><name pos:line="34" pos:column="47">colon<pos:position pos:line="34" pos:column="52"/></name></expr> <pos:position pos:line="34" pos:column="53"/></then><else pos:line="34" pos:column="53">: <expr><name pos:line="34" pos:column="55">next<pos:position pos:line="34" pos:column="59"/></name></expr></else></ternary><operator pos:line="34" pos:column="59">)<pos:position pos:line="34" pos:column="60"/></operator> <operator pos:line="34" pos:column="61">-<pos:position pos:line="34" pos:column="62"/></operator> <name pos:line="34" pos:column="63">ref<pos:position pos:line="34" pos:column="66"/></name></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="69">ref<pos:position pos:line="34" pos:column="72"/></name></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">ref<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="23">next<pos:position pos:line="35" pos:column="27"/></name></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">printf<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><literal type="string" pos:line="37" pos:column="16">"'\n"<pos:position pos:line="37" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="23"/></expr_stmt>
	<return pos:line="38" pos:column="9">return <expr><literal type="number" pos:line="38" pos:column="16">0<pos:position pos:line="38" pos:column="17"/></literal></expr>;<pos:position pos:line="38" pos:column="18"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

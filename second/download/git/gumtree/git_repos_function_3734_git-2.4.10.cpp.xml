<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3734_git-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">construct_path_with_fanout<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">unsigned<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">sha1<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">unsigned<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">fanout<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">path<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">i<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="29">j<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><literal type="number" pos:line="4" pos:column="33">0<pos:position pos:line="4" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">hex_sha1<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><call><name pos:line="5" pos:column="32">sha1_to_hex<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">(<argument><expr><name pos:line="5" pos:column="44">sha1<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">assert<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">fanout<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <literal type="number" pos:line="6" pos:column="25">20<pos:position pos:line="6" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">fanout<pos:position pos:line="7" pos:column="22"/></name></expr>)<pos:position pos:line="7" pos:column="23"/></condition> <block pos:line="7" pos:column="24">{
		<expr_stmt><expr><name><name pos:line="8" pos:column="17">path<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><name pos:line="8" pos:column="22">i<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">++<pos:position pos:line="8" pos:column="25"/></operator></expr>]<pos:position pos:line="8" pos:column="26"/></index></name> <operator pos:line="8" pos:column="27">=<pos:position pos:line="8" pos:column="28"/></operator> <name><name pos:line="8" pos:column="29">hex_sha1<pos:position pos:line="8" pos:column="37"/></name><index pos:line="8" pos:column="37">[<expr><name pos:line="8" pos:column="38">j<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">++<pos:position pos:line="8" pos:column="41"/></operator></expr>]<pos:position pos:line="8" pos:column="42"/></index></name></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">path<pos:position pos:line="9" pos:column="21"/></name><index pos:line="9" pos:column="21">[<expr><name pos:line="9" pos:column="22">i<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">++<pos:position pos:line="9" pos:column="25"/></operator></expr>]<pos:position pos:line="9" pos:column="26"/></index></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <name><name pos:line="9" pos:column="29">hex_sha1<pos:position pos:line="9" pos:column="37"/></name><index pos:line="9" pos:column="37">[<expr><name pos:line="9" pos:column="38">j<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">++<pos:position pos:line="9" pos:column="41"/></operator></expr>]<pos:position pos:line="9" pos:column="42"/></index></name></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="10" pos:column="17">path<pos:position pos:line="10" pos:column="21"/></name><index pos:line="10" pos:column="21">[<expr><name pos:line="10" pos:column="22">i<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">++<pos:position pos:line="10" pos:column="25"/></operator></expr>]<pos:position pos:line="10" pos:column="26"/></index></name> <operator pos:line="10" pos:column="27">=<pos:position pos:line="10" pos:column="28"/></operator> <literal type="char" pos:line="10" pos:column="29">'/'<pos:position pos:line="10" pos:column="32"/></literal></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="11" pos:column="17">fanout<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">--<pos:position pos:line="11" pos:column="25"/></operator></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">strcpy<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">path<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">+<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">i<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="26">hex_sha1<pos:position pos:line="13" pos:column="34"/></name> <operator pos:line="13" pos:column="35">+<pos:position pos:line="13" pos:column="36"/></operator> <name pos:line="13" pos:column="37">j<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4457_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">distribute_blame<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">scoreboard<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">sb<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">blame_entry<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">blamed<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><name pos:line="3" pos:column="9">blamed<pos:position pos:line="3" pos:column="15"/></name> <operator pos:line="3" pos:column="16">=<pos:position pos:line="3" pos:column="17"/></operator> <call><name pos:line="3" pos:column="18">blame_sort<pos:position pos:line="3" pos:column="28"/></name><argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">blamed<pos:position pos:line="3" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="37">compare_blame_suspect<pos:position pos:line="3" pos:column="58"/></name></expr></argument>)<pos:position pos:line="3" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="60"/></expr_stmt>
	<while pos:line="4" pos:column="9">while <condition pos:line="4" pos:column="15">(<expr><name pos:line="4" pos:column="16">blamed<pos:position pos:line="4" pos:column="22"/></name></expr>)<pos:position pos:line="4" pos:column="23"/></condition>
	<block pos:line="5" pos:column="9">{
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">struct<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">origin<pos:position pos:line="6" pos:column="30"/></name></name> <modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier></type><name pos:line="6" pos:column="32">porigin<pos:position pos:line="6" pos:column="39"/></name> <init pos:line="6" pos:column="40">= <expr><name><name pos:line="6" pos:column="42">blamed<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">-&gt;<pos:position pos:line="6" pos:column="53"/></operator><name pos:line="6" pos:column="50">suspect<pos:position pos:line="6" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="58"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">blame_entry<pos:position pos:line="7" pos:column="35"/></name></name> <modifier pos:line="7" pos:column="36">*<pos:position pos:line="7" pos:column="37"/></modifier></type><name pos:line="7" pos:column="37">suspects<pos:position pos:line="7" pos:column="45"/></name> <init pos:line="7" pos:column="46">= <expr><name pos:line="7" pos:column="48">NULL<pos:position pos:line="7" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="53"/></decl_stmt>
		<do pos:line="8" pos:column="17">do <block pos:line="8" pos:column="20">{
			<decl_stmt><decl><type><name><name pos:line="9" pos:column="25">struct<pos:position pos:line="9" pos:column="31"/></name> <name pos:line="9" pos:column="32">blame_entry<pos:position pos:line="9" pos:column="43"/></name></name> <modifier pos:line="9" pos:column="44">*<pos:position pos:line="9" pos:column="45"/></modifier></type><name pos:line="9" pos:column="45">next<pos:position pos:line="9" pos:column="49"/></name> <init pos:line="9" pos:column="50">= <expr><name><name pos:line="9" pos:column="52">blamed<pos:position pos:line="9" pos:column="58"/></name><operator pos:line="9" pos:column="58">-&gt;<pos:position pos:line="9" pos:column="63"/></operator><name pos:line="9" pos:column="60">next<pos:position pos:line="9" pos:column="64"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="65"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="10" pos:column="25">blamed<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">next<pos:position pos:line="10" pos:column="37"/></name></name> <operator pos:line="10" pos:column="38">=<pos:position pos:line="10" pos:column="39"/></operator> <name pos:line="10" pos:column="40">suspects<pos:position pos:line="10" pos:column="48"/></name></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="11" pos:column="25">suspects<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">=<pos:position pos:line="11" pos:column="35"/></operator> <name pos:line="11" pos:column="36">blamed<pos:position pos:line="11" pos:column="42"/></name></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="12" pos:column="25">blamed<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">=<pos:position pos:line="12" pos:column="33"/></operator> <name pos:line="12" pos:column="34">next<pos:position pos:line="12" pos:column="38"/></name></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="13" pos:column="18"/></block> while <condition pos:line="13" pos:column="25">(<expr><name pos:line="13" pos:column="26">blamed<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">&amp;&amp;<pos:position pos:line="13" pos:column="43"/></operator> <name><name pos:line="13" pos:column="36">blamed<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">suspect<pos:position pos:line="13" pos:column="51"/></name></name> <operator pos:line="13" pos:column="52">==<pos:position pos:line="13" pos:column="54"/></operator> <name pos:line="13" pos:column="55">porigin<pos:position pos:line="13" pos:column="62"/></name></expr>)<pos:position pos:line="13" pos:column="63"/></condition>;<pos:position pos:line="13" pos:column="64"/></do>
		<expr_stmt><expr><name pos:line="14" pos:column="17">suspects<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="28">reverse_blame<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><name pos:line="14" pos:column="42">suspects<pos:position pos:line="14" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="52">NULL<pos:position pos:line="14" pos:column="56"/></name></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">queue_blames<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">sb<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">porigin<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="43">suspects<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></while>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5516_git-2.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">diff_tree_stdin<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">line<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">len<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">strlen<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">(<argument><expr><name pos:line="3" pos:column="26">line<pos:position pos:line="3" pos:column="30"/></name></expr></argument>)<pos:position pos:line="3" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name></type> <name><name pos:line="4" pos:column="23">sha1<pos:position pos:line="4" pos:column="27"/></name><index pos:line="4" pos:column="27">[<expr><literal type="number" pos:line="4" pos:column="28">20<pos:position pos:line="4" pos:column="30"/></literal></expr>]<pos:position pos:line="4" pos:column="31"/></index></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">obj<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">len<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">||<pos:position pos:line="7" pos:column="20"/></operator> <name><name pos:line="7" pos:column="21">line<pos:position pos:line="7" pos:column="25"/></name><index pos:line="7" pos:column="25">[<expr><name pos:line="7" pos:column="26">len<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">-<pos:position pos:line="7" pos:column="30"/></operator><literal type="number" pos:line="7" pos:column="30">1<pos:position pos:line="7" pos:column="31"/></literal></expr>]<pos:position pos:line="7" pos:column="32"/></index></name> <operator pos:line="7" pos:column="33">!=<pos:position pos:line="7" pos:column="35"/></operator> <literal type="char" pos:line="7" pos:column="36">'\n'<pos:position pos:line="7" pos:column="40"/></literal></expr>)<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">-<pos:position pos:line="8" pos:column="25"/></operator><literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal></expr>;<pos:position pos:line="8" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">line<pos:position pos:line="9" pos:column="13"/></name><index pos:line="9" pos:column="13">[<expr><name pos:line="9" pos:column="14">len<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-<pos:position pos:line="9" pos:column="18"/></operator><literal type="number" pos:line="9" pos:column="18">1<pos:position pos:line="9" pos:column="19"/></literal></expr>]<pos:position pos:line="9" pos:column="20"/></index></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">get_sha1_hex<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">line<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">sha1<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="38"/></condition><then pos:line="10" pos:column="38">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">-<pos:position pos:line="11" pos:column="25"/></operator><literal type="number" pos:line="11" pos:column="25">1<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="12" pos:column="9">obj<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">parse_object<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">sha1<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">obj<pos:position pos:line="13" pos:column="17"/></name></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">obj<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">type<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">==<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="26">OBJ_COMMIT<pos:position pos:line="15" pos:column="36"/></name></expr>)<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><call><name pos:line="16" pos:column="24">stdin_diff_commit<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><operator pos:line="16" pos:column="42">(<pos:position pos:line="16" pos:column="43"/></operator>struct <name pos:line="16" pos:column="50">commit<pos:position pos:line="16" pos:column="56"/></name> <operator pos:line="16" pos:column="57">*<pos:position pos:line="16" pos:column="58"/></operator><operator pos:line="16" pos:column="58">)<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="59">obj<pos:position pos:line="16" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="64">line<pos:position pos:line="16" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="70">len<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="75"/></return></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">obj<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">type<pos:position pos:line="17" pos:column="22"/></name></name> <operator pos:line="17" pos:column="23">==<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="26">OBJ_TREE<pos:position pos:line="17" pos:column="34"/></name></expr>)<pos:position pos:line="17" pos:column="35"/></condition><then pos:line="17" pos:column="35">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><call><name pos:line="18" pos:column="24">stdin_diff_trees<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><operator pos:line="18" pos:column="41">(<pos:position pos:line="18" pos:column="42"/></operator>struct <name pos:line="18" pos:column="49">tree<pos:position pos:line="18" pos:column="53"/></name> <operator pos:line="18" pos:column="54">*<pos:position pos:line="18" pos:column="55"/></operator><operator pos:line="18" pos:column="55">)<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="56">obj<pos:position pos:line="18" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="61">line<pos:position pos:line="18" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="67">len<pos:position pos:line="18" pos:column="70"/></name></expr></argument>)<pos:position pos:line="18" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="72"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">error<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><literal type="string" pos:line="19" pos:column="15">"Object %s is a %s, not a commit or tree"<pos:position pos:line="19" pos:column="56"/></literal></expr></argument>,
	      <argument><expr><call><name pos:line="20" pos:column="15">sha1_to_hex<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">sha1<pos:position pos:line="20" pos:column="31"/></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name><typename pos:line="20" pos:column="34">typename<pos:position pos:line="20" pos:column="42"/></typename></name><operator pos:line="20" pos:column="42">(<pos:position pos:line="20" pos:column="43"/></operator><name><name pos:line="20" pos:column="43">obj<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">-&gt;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="48">type<pos:position pos:line="20" pos:column="52"/></name></name><operator pos:line="20" pos:column="52">)<pos:position pos:line="20" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
	<return pos:line="21" pos:column="9">return <expr><operator pos:line="21" pos:column="16">-<pos:position pos:line="21" pos:column="17"/></operator><literal type="number" pos:line="21" pos:column="17">1<pos:position pos:line="21" pos:column="18"/></literal></expr>;<pos:position pos:line="21" pos:column="19"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

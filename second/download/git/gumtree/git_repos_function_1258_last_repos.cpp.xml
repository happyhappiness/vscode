<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1258_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_revisions_from_stdin<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">rev_info<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">revs<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
				      <parameter><decl><type><name><name pos:line="2" pos:column="39">struct<pos:position pos:line="2" pos:column="45"/></name> <name pos:line="2" pos:column="46">cmdline_pathspec<pos:position pos:line="2" pos:column="62"/></name></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">prune<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">sb<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">seen_dashdash<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">save_warning<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">save_warning<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">warn_on_object_refname_ambiguity<pos:position pos:line="8" pos:column="56"/></name></expr>;<pos:position pos:line="8" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">warn_on_object_refname_ambiguity<pos:position pos:line="9" pos:column="41"/></name> <operator pos:line="9" pos:column="42">=<pos:position pos:line="9" pos:column="43"/></operator> <literal type="number" pos:line="9" pos:column="44">0<pos:position pos:line="9" pos:column="45"/></literal></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">strbuf_init<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><operator pos:line="11" pos:column="21">&amp;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="22">sb<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="26">1000<pos:position pos:line="11" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
	<while pos:line="12" pos:column="9">while <condition pos:line="12" pos:column="15">(<expr><call><name pos:line="12" pos:column="16">strbuf_getline<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><operator pos:line="12" pos:column="31">&amp;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="32">sb<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">stdin<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call> <operator pos:line="12" pos:column="43">!=<pos:position pos:line="12" pos:column="45"/></operator> <name pos:line="12" pos:column="46">EOF<pos:position pos:line="12" pos:column="49"/></name></expr>)<pos:position pos:line="12" pos:column="50"/></condition> <block pos:line="12" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">len<pos:position pos:line="13" pos:column="24"/></name> <init pos:line="13" pos:column="25">= <expr><name><name pos:line="13" pos:column="27">sb<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">.<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">len<pos:position pos:line="13" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">len<pos:position pos:line="14" pos:column="25"/></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
			<block type="pseudo"><break pos:line="15" pos:column="25">break;<pos:position pos:line="15" pos:column="31"/></break></block></then></if>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">sb<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">.<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">buf<pos:position pos:line="16" pos:column="27"/></name><index pos:line="16" pos:column="27">[<expr><literal type="number" pos:line="16" pos:column="28">0<pos:position pos:line="16" pos:column="29"/></literal></expr>]<pos:position pos:line="16" pos:column="30"/></index></name> <operator pos:line="16" pos:column="31">==<pos:position pos:line="16" pos:column="33"/></operator> <literal type="char" pos:line="16" pos:column="34">'-'<pos:position pos:line="16" pos:column="37"/></literal></expr>)<pos:position pos:line="16" pos:column="38"/></condition><then pos:line="16" pos:column="38"> <block pos:line="16" pos:column="39">{
			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><name pos:line="17" pos:column="29">len<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">==<pos:position pos:line="17" pos:column="35"/></operator> <literal type="number" pos:line="17" pos:column="36">2<pos:position pos:line="17" pos:column="37"/></literal> <operator pos:line="17" pos:column="38">&amp;&amp;<pos:position pos:line="17" pos:column="48"/></operator> <name><name pos:line="17" pos:column="41">sb<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">.<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="44">buf<pos:position pos:line="17" pos:column="47"/></name><index pos:line="17" pos:column="47">[<expr><literal type="number" pos:line="17" pos:column="48">1<pos:position pos:line="17" pos:column="49"/></literal></expr>]<pos:position pos:line="17" pos:column="50"/></index></name> <operator pos:line="17" pos:column="51">==<pos:position pos:line="17" pos:column="53"/></operator> <literal type="char" pos:line="17" pos:column="54">'-'<pos:position pos:line="17" pos:column="57"/></literal></expr>)<pos:position pos:line="17" pos:column="58"/></condition><then pos:line="17" pos:column="58"> <block pos:line="17" pos:column="59">{
				<expr_stmt><expr><name pos:line="18" pos:column="33">seen_dashdash<pos:position pos:line="18" pos:column="46"/></name> <operator pos:line="18" pos:column="47">=<pos:position pos:line="18" pos:column="48"/></operator> <literal type="number" pos:line="18" pos:column="49">1<pos:position pos:line="18" pos:column="50"/></literal></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>
				<break pos:line="19" pos:column="33">break;<pos:position pos:line="19" pos:column="39"/></break>
			}<pos:position pos:line="20" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">die<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><literal type="string" pos:line="21" pos:column="29">"options not supported in --stdin mode"<pos:position pos:line="21" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="70"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">handle_revision_arg<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><name><name pos:line="23" pos:column="41">sb<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">.<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="44">buf<pos:position pos:line="23" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="49">revs<pos:position pos:line="23" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="55">0<pos:position pos:line="23" pos:column="56"/></literal></expr></argument>,
					<argument><expr><name pos:line="24" pos:column="41">REVARG_CANNOT_BE_FILENAME<pos:position pos:line="24" pos:column="66"/></name></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="68"/></condition><then pos:line="24" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">die<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><literal type="string" pos:line="25" pos:column="29">"bad revision '%s'"<pos:position pos:line="25" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="50">sb<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">.<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="53">buf<pos:position pos:line="25" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="58"/></expr_stmt></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></while>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">seen_dashdash<pos:position pos:line="27" pos:column="26"/></name></expr>)<pos:position pos:line="27" pos:column="27"/></condition><then pos:line="27" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">read_pathspec_from_stdin<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">revs<pos:position pos:line="28" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="48">&amp;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="49">sb<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="53">prune<pos:position pos:line="28" pos:column="58"/></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="30" pos:column="9">strbuf_release<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><operator pos:line="30" pos:column="24">&amp;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="25">sb<pos:position pos:line="30" pos:column="27"/></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="31" pos:column="9">warn_on_object_refname_ambiguity<pos:position pos:line="31" pos:column="41"/></name> <operator pos:line="31" pos:column="42">=<pos:position pos:line="31" pos:column="43"/></operator> <name pos:line="31" pos:column="44">save_warning<pos:position pos:line="31" pos:column="56"/></name></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

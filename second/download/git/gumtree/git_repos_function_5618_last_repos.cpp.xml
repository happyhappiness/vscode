<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5618_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">report_message<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">prefix<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">err<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">va_list<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">params<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">sz<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">msg<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">4096<pos:position pos:line="4" pos:column="22"/></literal></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">sz<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">xsnprintf<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name pos:line="6" pos:column="24">msg<pos:position pos:line="6" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="29">sizeof<argument_list pos:line="6" pos:column="35">(<argument><expr><name pos:line="6" pos:column="36">msg<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="42">"%s"<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="48">prefix<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">sz<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">+=<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">vsnprintf<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">msg<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">+<pos:position pos:line="7" pos:column="30"/></operator> <name pos:line="7" pos:column="31">sz<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="35">sizeof<argument_list pos:line="7" pos:column="41">(<argument><expr><name pos:line="7" pos:column="42">msg<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></sizeof> <operator pos:line="7" pos:column="47">-<pos:position pos:line="7" pos:column="48"/></operator> <name pos:line="7" pos:column="49">sz<pos:position pos:line="7" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="53">err<pos:position pos:line="7" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="58">params<pos:position pos:line="7" pos:column="64"/></name></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="66"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">sz<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">&gt;<pos:position pos:line="8" pos:column="20"/></operator> <operator pos:line="8" pos:column="18">(<pos:position pos:line="8" pos:column="19"/></operator><sizeof pos:line="8" pos:column="19">sizeof<argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">msg<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></sizeof> <operator pos:line="8" pos:column="31">-<pos:position pos:line="8" pos:column="32"/></operator> <literal type="number" pos:line="8" pos:column="33">1<pos:position pos:line="8" pos:column="34"/></literal><operator pos:line="8" pos:column="34">)<pos:position pos:line="8" pos:column="35"/></operator></expr>)<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">sz<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <sizeof pos:line="9" pos:column="22">sizeof<argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">msg<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></sizeof> <operator pos:line="9" pos:column="34">-<pos:position pos:line="9" pos:column="35"/></operator> <literal type="number" pos:line="9" pos:column="36">1<pos:position pos:line="9" pos:column="37"/></literal></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">msg<pos:position pos:line="10" pos:column="12"/></name><index pos:line="10" pos:column="12">[<expr><name pos:line="10" pos:column="13">sz<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">++<pos:position pos:line="10" pos:column="17"/></operator></expr>]<pos:position pos:line="10" pos:column="18"/></index></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <literal type="char" pos:line="10" pos:column="21">'\n'<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">use_sideband<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">send_sideband<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><literal type="number" pos:line="13" pos:column="31">1<pos:position pos:line="13" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="34">2<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">msg<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">sz<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">use_sideband<pos:position pos:line="13" pos:column="58"/></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt></block></then>
	<else pos:line="14" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">xwrite<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><literal type="number" pos:line="15" pos:column="24">2<pos:position pos:line="15" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="27">msg<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">sz<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt></block></else></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3789_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">graph_padding_line<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">git_graph<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">graph<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="57">struct<pos:position pos:line="1" pos:column="63"/></name> <name pos:line="1" pos:column="64">strbuf<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">sb<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">chars_written<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><literal type="number" pos:line="4" pos:column="29">0<pos:position pos:line="4" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">graph<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">state<pos:position pos:line="6" pos:column="25"/></name></name> <operator pos:line="6" pos:column="26">!=<pos:position pos:line="6" pos:column="28"/></operator> <name pos:line="6" pos:column="29">GRAPH_COMMIT<pos:position pos:line="6" pos:column="41"/></name></expr>)<pos:position pos:line="6" pos:column="42"/></condition><then pos:line="6" pos:column="42"> <block pos:line="6" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">graph_next_line<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><name pos:line="7" pos:column="33">graph<pos:position pos:line="7" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="40">sb<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
		<return pos:line="8" pos:column="17">return;<pos:position pos:line="8" pos:column="24"/></return>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="11" pos:column="9">/*
	 * Output the row containing this commit
	 * Iterate up to and including graph-&gt;num_columns,
	 * since the current commit may not be in any of the existing
	 * columns.  (This happens when the current commit doesn't have any
	 * children that we have already processed.)
	 */</comment>
	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="25">graph<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">num_columns<pos:position pos:line="18" pos:column="43"/></name></name></expr>;<pos:position pos:line="18" pos:column="44"/></condition> <incr><expr><name pos:line="18" pos:column="45">i<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">++<pos:position pos:line="18" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="49"/></control> <block pos:line="18" pos:column="50">{
		<decl_stmt><decl><type><name><name pos:line="19" pos:column="17">struct<pos:position pos:line="19" pos:column="23"/></name> <name pos:line="19" pos:column="24">column<pos:position pos:line="19" pos:column="30"/></name></name> <modifier pos:line="19" pos:column="31">*<pos:position pos:line="19" pos:column="32"/></modifier></type><name pos:line="19" pos:column="32">col<pos:position pos:line="19" pos:column="35"/></name> <init pos:line="19" pos:column="36">= <expr><operator pos:line="19" pos:column="38">&amp;<pos:position pos:line="19" pos:column="43"/></operator><name><name pos:line="19" pos:column="39">graph<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">-&gt;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="46">columns<pos:position pos:line="19" pos:column="53"/></name><index pos:line="19" pos:column="53">[<expr><name pos:line="19" pos:column="54">i<pos:position pos:line="19" pos:column="55"/></name></expr>]<pos:position pos:line="19" pos:column="56"/></index></name></expr></init></decl>;<pos:position pos:line="19" pos:column="57"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="21" pos:column="17">strbuf_write_column<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name pos:line="21" pos:column="37">sb<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">col<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="46">'|'<pos:position pos:line="21" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">chars_written<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">++<pos:position pos:line="22" pos:column="32"/></operator></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name><name pos:line="24" pos:column="21">col<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">commit<pos:position pos:line="24" pos:column="32"/></name></name> <operator pos:line="24" pos:column="33">==<pos:position pos:line="24" pos:column="35"/></operator> <name><name pos:line="24" pos:column="36">graph<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">-&gt;<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="43">commit<pos:position pos:line="24" pos:column="49"/></name></name> <operator pos:line="24" pos:column="50">&amp;&amp;<pos:position pos:line="24" pos:column="60"/></operator> <name><name pos:line="24" pos:column="53">graph<pos:position pos:line="24" pos:column="58"/></name><operator pos:line="24" pos:column="58">-&gt;<pos:position pos:line="24" pos:column="63"/></operator><name pos:line="24" pos:column="60">num_parents<pos:position pos:line="24" pos:column="71"/></name></name> <operator pos:line="24" pos:column="72">&gt;<pos:position pos:line="24" pos:column="76"/></operator> <literal type="number" pos:line="24" pos:column="74">2<pos:position pos:line="24" pos:column="75"/></literal></expr>)<pos:position pos:line="24" pos:column="76"/></condition><then pos:line="24" pos:column="76"> <block pos:line="24" pos:column="77">{
			<decl_stmt><decl><type><name pos:line="25" pos:column="25">int<pos:position pos:line="25" pos:column="28"/></name></type> <name pos:line="25" pos:column="29">len<pos:position pos:line="25" pos:column="32"/></name> <init pos:line="25" pos:column="33">= <expr><operator pos:line="25" pos:column="35">(<pos:position pos:line="25" pos:column="36"/></operator><name><name pos:line="25" pos:column="36">graph<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">num_parents<pos:position pos:line="25" pos:column="54"/></name></name> <operator pos:line="25" pos:column="55">-<pos:position pos:line="25" pos:column="56"/></operator> <literal type="number" pos:line="25" pos:column="57">2<pos:position pos:line="25" pos:column="58"/></literal><operator pos:line="25" pos:column="58">)<pos:position pos:line="25" pos:column="59"/></operator> <operator pos:line="25" pos:column="60">*<pos:position pos:line="25" pos:column="61"/></operator> <literal type="number" pos:line="25" pos:column="62">2<pos:position pos:line="25" pos:column="63"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="64"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">strbuf_addchars<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">sb<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="45">' '<pos:position pos:line="26" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="50">len<pos:position pos:line="26" pos:column="53"/></name></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name pos:line="27" pos:column="25">chars_written<pos:position pos:line="27" pos:column="38"/></name> <operator pos:line="27" pos:column="39">+=<pos:position pos:line="27" pos:column="41"/></operator> <name pos:line="27" pos:column="42">len<pos:position pos:line="27" pos:column="45"/></name></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then> <else pos:line="28" pos:column="19">else <block pos:line="28" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">strbuf_addch<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">sb<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="29" pos:column="42">' '<pos:position pos:line="29" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">chars_written<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">++<pos:position pos:line="30" pos:column="40"/></operator></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></else></if>
	}<pos:position pos:line="32" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="34" pos:column="9">graph_pad_horizontally<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">graph<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">sb<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">chars_written<pos:position pos:line="34" pos:column="56"/></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>

	<comment type="block" pos:line="36" pos:column="9">/*
	 * Update graph-&gt;prev_state since we have output a padding line
	 */</comment>
	<expr_stmt><expr><name><name pos:line="39" pos:column="9">graph<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">-&gt;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="16">prev_state<pos:position pos:line="39" pos:column="26"/></name></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <name pos:line="39" pos:column="29">GRAPH_PADDING<pos:position pos:line="39" pos:column="42"/></name></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

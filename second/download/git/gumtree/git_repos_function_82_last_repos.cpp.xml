<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_82_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">cmt_fmt_map<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">find_commit_format_recursive<pos:position pos:line="1" pos:column="56"/></name><parameter_list pos:line="1" pos:column="56">(<parameter><decl><type><specifier pos:line="1" pos:column="57">const<pos:position pos:line="1" pos:column="62"/></specifier> <name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">sought<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
							<parameter><decl><type><specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier> <name pos:line="2" pos:column="63">char<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">original<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>,
							<parameter><decl><type><name pos:line="3" pos:column="57">int<pos:position pos:line="3" pos:column="60"/></name></type> <name pos:line="3" pos:column="61">num_redirections<pos:position pos:line="3" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="78"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">cmt_fmt_map<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">found<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><name pos:line="5" pos:column="37">NULL<pos:position pos:line="5" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">found_match_len<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><literal type="number" pos:line="6" pos:column="34">0<pos:position pos:line="6" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">num_redirections<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">&gt;=<pos:position pos:line="9" pos:column="35"/></operator> <name pos:line="9" pos:column="33">commit_formats_len<pos:position pos:line="9" pos:column="51"/></name></expr>)<pos:position pos:line="9" pos:column="52"/></condition><then pos:line="9" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">die<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><literal type="string" pos:line="10" pos:column="21">"invalid --pretty format: "<pos:position pos:line="10" pos:column="48"/></literal>
		    <literal type="string" pos:line="11" pos:column="21">"'%s' references an alias which points to itself"<pos:position pos:line="11" pos:column="70"/></literal></expr></argument>,
		    <argument><expr><name pos:line="12" pos:column="21">original<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt></block></then></if>

	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">i<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>;<pos:position pos:line="14" pos:column="20"/></init> <condition><expr><name pos:line="14" pos:column="21">i<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="25">commit_formats_len<pos:position pos:line="14" pos:column="43"/></name></expr>;<pos:position pos:line="14" pos:column="44"/></condition> <incr><expr><name pos:line="14" pos:column="45">i<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">++<pos:position pos:line="14" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="49"/></control> <block pos:line="14" pos:column="50">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">size_t<pos:position pos:line="15" pos:column="23"/></name></type> <name pos:line="15" pos:column="24">match_len<pos:position pos:line="15" pos:column="33"/></name></decl>;<pos:position pos:line="15" pos:column="34"/></decl_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><call><name pos:line="17" pos:column="22">starts_with<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name><name pos:line="17" pos:column="34">commit_formats<pos:position pos:line="17" pos:column="48"/></name><index pos:line="17" pos:column="48">[<expr><name pos:line="17" pos:column="49">i<pos:position pos:line="17" pos:column="50"/></name></expr>]<pos:position pos:line="17" pos:column="51"/></index></name><operator pos:line="17" pos:column="51">.<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="52">name<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="58">sought<pos:position pos:line="17" pos:column="64"/></name></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="66"/></condition><then pos:line="17" pos:column="66">
			<block type="pseudo"><continue pos:line="18" pos:column="25">continue;<pos:position pos:line="18" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="20" pos:column="17">match_len<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <call><name pos:line="20" pos:column="29">strlen<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name><name pos:line="20" pos:column="36">commit_formats<pos:position pos:line="20" pos:column="50"/></name><index pos:line="20" pos:column="50">[<expr><name pos:line="20" pos:column="51">i<pos:position pos:line="20" pos:column="52"/></name></expr>]<pos:position pos:line="20" pos:column="53"/></index></name><operator pos:line="20" pos:column="53">.<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="54">name<pos:position pos:line="20" pos:column="58"/></name></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="60"/></expr_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">found<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">==<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="30">NULL<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">||<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="38">found_match_len<pos:position pos:line="21" pos:column="53"/></name> <operator pos:line="21" pos:column="54">&gt;<pos:position pos:line="21" pos:column="58"/></operator> <name pos:line="21" pos:column="56">match_len<pos:position pos:line="21" pos:column="65"/></name></expr>)<pos:position pos:line="21" pos:column="66"/></condition><then pos:line="21" pos:column="66"> <block pos:line="21" pos:column="67">{
			<expr_stmt><expr><name pos:line="22" pos:column="25">found<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">=<pos:position pos:line="22" pos:column="32"/></operator> <operator pos:line="22" pos:column="33">&amp;<pos:position pos:line="22" pos:column="38"/></operator><name><name pos:line="22" pos:column="34">commit_formats<pos:position pos:line="22" pos:column="48"/></name><index pos:line="22" pos:column="48">[<expr><name pos:line="22" pos:column="49">i<pos:position pos:line="22" pos:column="50"/></name></expr>]<pos:position pos:line="22" pos:column="51"/></index></name></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="23" pos:column="25">found_match_len<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">=<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="43">match_len<pos:position pos:line="23" pos:column="52"/></name></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
	}<pos:position pos:line="25" pos:column="10"/></block></for>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">found<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">&amp;&amp;<pos:position pos:line="27" pos:column="29"/></operator> <name><name pos:line="27" pos:column="22">found<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">is_alias<pos:position pos:line="27" pos:column="37"/></name></name></expr>)<pos:position pos:line="27" pos:column="38"/></condition><then pos:line="27" pos:column="38"> <block pos:line="27" pos:column="39">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">found<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <call><name pos:line="28" pos:column="25">find_commit_format_recursive<pos:position pos:line="28" pos:column="53"/></name><argument_list pos:line="28" pos:column="53">(<argument><expr><name><name pos:line="28" pos:column="54">found<pos:position pos:line="28" pos:column="59"/></name><operator pos:line="28" pos:column="59">-&gt;<pos:position pos:line="28" pos:column="64"/></operator><name pos:line="28" pos:column="61">user_format<pos:position pos:line="28" pos:column="72"/></name></name></expr></argument>,
						     <argument><expr><name pos:line="29" pos:column="54">original<pos:position pos:line="29" pos:column="62"/></name></expr></argument>,
						     <argument><expr><name pos:line="30" pos:column="54">num_redirections<pos:position pos:line="30" pos:column="70"/></name><operator pos:line="30" pos:column="70">+<pos:position pos:line="30" pos:column="71"/></operator><literal type="number" pos:line="30" pos:column="71">1<pos:position pos:line="30" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">found<pos:position pos:line="33" pos:column="21"/></name></expr>;<pos:position pos:line="33" pos:column="22"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

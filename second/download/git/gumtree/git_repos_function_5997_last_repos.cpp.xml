<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5997_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">init_submodule<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">path<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">prefix<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">int<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">quiet<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name><name pos:line="3" pos:column="15">struct<pos:position pos:line="3" pos:column="21"/></name> <name pos:line="3" pos:column="22">submodule<pos:position pos:line="3" pos:column="31"/></name></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">sub<pos:position pos:line="3" pos:column="36"/></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">sb<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name pos:line="4" pos:column="28">STRBUF_INIT<pos:position pos:line="4" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">upd<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="28">url<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">NULL<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="41">displaypath<pos:position pos:line="5" pos:column="52"/></name></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* Only loads from .gitmodules, no overlay with .git/config */</comment>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">gitmodules_config<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">()<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">prefix<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">&amp;&amp;<pos:position pos:line="10" pos:column="30"/></operator> <call><name pos:line="10" pos:column="23">get_super_prefix<pos:position pos:line="10" pos:column="39"/></name><argument_list pos:line="10" pos:column="39">()<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">die<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><literal type="string" pos:line="11" pos:column="21">"BUG: cannot have prefix and superprefix"<pos:position pos:line="11" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="64"/></expr_stmt></block></then>
	<elseif pos:line="12" pos:column="9">else <if pos:line="12" pos:column="14">if <condition pos:line="12" pos:column="17">(<expr><name pos:line="12" pos:column="18">prefix<pos:position pos:line="12" pos:column="24"/></name></expr>)<pos:position pos:line="12" pos:column="25"/></condition><then pos:line="12" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">displaypath<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <call><name pos:line="13" pos:column="31">xstrdup<pos:position pos:line="13" pos:column="38"/></name><argument_list pos:line="13" pos:column="38">(<argument><expr><call><name pos:line="13" pos:column="39">relative_path<pos:position pos:line="13" pos:column="52"/></name><argument_list pos:line="13" pos:column="52">(<argument><expr><name pos:line="13" pos:column="53">path<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="59">prefix<pos:position pos:line="13" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="67">&amp;<pos:position pos:line="13" pos:column="72"/></operator><name pos:line="13" pos:column="68">sb<pos:position pos:line="13" pos:column="70"/></name></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="73"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="14" pos:column="9">else <if pos:line="14" pos:column="14">if <condition pos:line="14" pos:column="17">(<expr><call><name pos:line="14" pos:column="18">get_super_prefix<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">()<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="37"/></condition><then pos:line="14" pos:column="37"> <block pos:line="14" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">strbuf_addf<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><operator pos:line="15" pos:column="29">&amp;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="30">sb<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="34">"%s%s"<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="42">get_super_prefix<pos:position pos:line="15" pos:column="58"/></name><argument_list pos:line="15" pos:column="58">()<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="62">path<pos:position pos:line="15" pos:column="66"/></name></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">displaypath<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <call><name pos:line="16" pos:column="31">strbuf_detach<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><operator pos:line="16" pos:column="45">&amp;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="46">sb<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="50">NULL<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if></elseif> <else pos:line="17" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">displaypath<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <call><name pos:line="18" pos:column="31">xstrdup<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name pos:line="18" pos:column="39">path<pos:position pos:line="18" pos:column="43"/></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="20" pos:column="9">sub<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">submodule_from_path<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><name pos:line="20" pos:column="35">null_sha1<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">path<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">sub<pos:position pos:line="22" pos:column="17"/></name></expr>)<pos:position pos:line="22" pos:column="18"/></condition><then pos:line="22" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">die<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><call><name pos:line="23" pos:column="21">_<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><literal type="string" pos:line="23" pos:column="23">"No url found for submodule path '%s' in .gitmodules"<pos:position pos:line="23" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="24" pos:column="25">displaypath<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="26" pos:column="9">/*
	 * NEEDSWORK: In a multi-working-tree world, this needs to be
	 * set in the per-worktree config.
	 *
	 * Set active flag for the submodule being initialized
	 */</comment>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">is_submodule_active<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">the_repository<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">path<pos:position pos:line="32" pos:column="54"/></name></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="56"/></condition><then pos:line="32" pos:column="56"> <block pos:line="32" pos:column="57">{
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">strbuf_reset<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><operator pos:line="33" pos:column="30">&amp;<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="31">sb<pos:position pos:line="33" pos:column="33"/></name></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">strbuf_addf<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><operator pos:line="34" pos:column="29">&amp;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="30">sb<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="34">"submodule.%s.active"<pos:position pos:line="34" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="57">sub<pos:position pos:line="34" pos:column="60"/></name><operator pos:line="34" pos:column="60">-&gt;<pos:position pos:line="34" pos:column="65"/></operator><name pos:line="34" pos:column="62">name<pos:position pos:line="34" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">git_config_set_gently<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name><name pos:line="35" pos:column="39">sb<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">.<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="42">buf<pos:position pos:line="35" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="47">"true"<pos:position pos:line="35" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="38" pos:column="9">/*
	 * Copy url setting when it is not set yet.
	 * To look up the url in .git/config, we must not fall back to
	 * .gitmodules, so look it up directly.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">strbuf_reset<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><operator pos:line="43" pos:column="22">&amp;<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="23">sb<pos:position pos:line="43" pos:column="25"/></name></expr></argument>)<pos:position pos:line="43" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">strbuf_addf<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><operator pos:line="44" pos:column="21">&amp;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="22">sb<pos:position pos:line="44" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="26">"submodule.%s.url"<pos:position pos:line="44" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="46">sub<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">-&gt;<pos:position pos:line="44" pos:column="54"/></operator><name pos:line="44" pos:column="51">name<pos:position pos:line="44" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="57"/></expr_stmt>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">git_config_get_string<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><name><name pos:line="45" pos:column="35">sb<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">.<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="38">buf<pos:position pos:line="45" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="43">&amp;<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="44">url<pos:position pos:line="45" pos:column="47"/></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="49"/></condition><then pos:line="45" pos:column="49"> <block pos:line="45" pos:column="50">{
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><operator pos:line="46" pos:column="21">!<pos:position pos:line="46" pos:column="22"/></operator><name><name pos:line="46" pos:column="22">sub<pos:position pos:line="46" pos:column="25"/></name><operator pos:line="46" pos:column="25">-&gt;<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="27">url<pos:position pos:line="46" pos:column="30"/></name></name></expr>)<pos:position pos:line="46" pos:column="31"/></condition><then pos:line="46" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="25">die<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><call><name pos:line="47" pos:column="29">_<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><literal type="string" pos:line="47" pos:column="31">"No url found for submodule path '%s' in .gitmodules"<pos:position pos:line="47" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="85"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="48" pos:column="33">displaypath<pos:position pos:line="48" pos:column="44"/></name></expr></argument>)<pos:position pos:line="48" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="46"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="50" pos:column="17">url<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <call><name pos:line="50" pos:column="23">xstrdup<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name><name pos:line="50" pos:column="31">sub<pos:position pos:line="50" pos:column="34"/></name><operator pos:line="50" pos:column="34">-&gt;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="36">url<pos:position pos:line="50" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>

		<comment type="block" pos:line="52" pos:column="17">/* Possibly a url relative to parent */</comment>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><call><name pos:line="53" pos:column="21">starts_with_dot_dot_slash<pos:position pos:line="53" pos:column="46"/></name><argument_list pos:line="53" pos:column="46">(<argument><expr><name pos:line="53" pos:column="47">url<pos:position pos:line="53" pos:column="50"/></name></expr></argument>)<pos:position pos:line="53" pos:column="51"/></argument_list></call> <operator pos:line="53" pos:column="52">||<pos:position pos:line="53" pos:column="54"/></operator>
		    <call><name pos:line="54" pos:column="21">starts_with_dot_slash<pos:position pos:line="54" pos:column="42"/></name><argument_list pos:line="54" pos:column="42">(<argument><expr><name pos:line="54" pos:column="43">url<pos:position pos:line="54" pos:column="46"/></name></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="48"/></condition><then pos:line="54" pos:column="48"> <block pos:line="54" pos:column="49">{
			<decl_stmt><decl><type><name pos:line="55" pos:column="25">char<pos:position pos:line="55" pos:column="29"/></name> <modifier pos:line="55" pos:column="30">*<pos:position pos:line="55" pos:column="31"/></modifier></type><name pos:line="55" pos:column="31">remoteurl<pos:position pos:line="55" pos:column="40"/></name></decl>, <modifier pos:line="55" pos:column="42">*<pos:position pos:line="55" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="55" pos:column="43">relurl<pos:position pos:line="55" pos:column="49"/></name></decl>;<pos:position pos:line="55" pos:column="50"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="56" pos:column="25">char<pos:position pos:line="56" pos:column="29"/></name> <modifier pos:line="56" pos:column="30">*<pos:position pos:line="56" pos:column="31"/></modifier></type><name pos:line="56" pos:column="31">remote<pos:position pos:line="56" pos:column="37"/></name> <init pos:line="56" pos:column="38">= <expr><call><name pos:line="56" pos:column="40">get_default_remote<pos:position pos:line="56" pos:column="58"/></name><argument_list pos:line="56" pos:column="58">()<pos:position pos:line="56" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="61"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="57" pos:column="25">struct<pos:position pos:line="57" pos:column="31"/></name> <name pos:line="57" pos:column="32">strbuf<pos:position pos:line="57" pos:column="38"/></name></name></type> <name pos:line="57" pos:column="39">remotesb<pos:position pos:line="57" pos:column="47"/></name> <init pos:line="57" pos:column="48">= <expr><name pos:line="57" pos:column="50">STRBUF_INIT<pos:position pos:line="57" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="57" pos:column="62"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">strbuf_addf<pos:position pos:line="58" pos:column="36"/></name><argument_list pos:line="58" pos:column="36">(<argument><expr><operator pos:line="58" pos:column="37">&amp;<pos:position pos:line="58" pos:column="42"/></operator><name pos:line="58" pos:column="38">remotesb<pos:position pos:line="58" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="48">"remote.%s.url"<pos:position pos:line="58" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="65">remote<pos:position pos:line="58" pos:column="71"/></name></expr></argument>)<pos:position pos:line="58" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">free<pos:position pos:line="59" pos:column="29"/></name><argument_list pos:line="59" pos:column="29">(<argument><expr><name pos:line="59" pos:column="30">remote<pos:position pos:line="59" pos:column="36"/></name></expr></argument>)<pos:position pos:line="59" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="38"/></expr_stmt>

			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><call><name pos:line="61" pos:column="29">git_config_get_string<pos:position pos:line="61" pos:column="50"/></name><argument_list pos:line="61" pos:column="50">(<argument><expr><name><name pos:line="61" pos:column="51">remotesb<pos:position pos:line="61" pos:column="59"/></name><operator pos:line="61" pos:column="59">.<pos:position pos:line="61" pos:column="60"/></operator><name pos:line="61" pos:column="60">buf<pos:position pos:line="61" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="65">&amp;<pos:position pos:line="61" pos:column="70"/></operator><name pos:line="61" pos:column="66">remoteurl<pos:position pos:line="61" pos:column="75"/></name></expr></argument>)<pos:position pos:line="61" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="77"/></condition><then pos:line="61" pos:column="77"> <block pos:line="61" pos:column="78">{
				<expr_stmt><expr><call><name pos:line="62" pos:column="33">warning<pos:position pos:line="62" pos:column="40"/></name><argument_list pos:line="62" pos:column="40">(<argument><expr><call><name pos:line="62" pos:column="41">_<pos:position pos:line="62" pos:column="42"/></name><argument_list pos:line="62" pos:column="42">(<argument><expr><literal type="string" pos:line="62" pos:column="43">"could not lookup configuration '%s'. Assuming this repository is its own authoritative upstream."<pos:position pos:line="62" pos:column="141"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="142"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="144">remotesb<pos:position pos:line="62" pos:column="152"/></name><operator pos:line="62" pos:column="152">.<pos:position pos:line="62" pos:column="153"/></operator><name pos:line="62" pos:column="153">buf<pos:position pos:line="62" pos:column="156"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="157"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="158"/></expr_stmt>
				<expr_stmt><expr><name pos:line="63" pos:column="33">remoteurl<pos:position pos:line="63" pos:column="42"/></name> <operator pos:line="63" pos:column="43">=<pos:position pos:line="63" pos:column="44"/></operator> <call><name pos:line="63" pos:column="45">xgetcwd<pos:position pos:line="63" pos:column="52"/></name><argument_list pos:line="63" pos:column="52">()<pos:position pos:line="63" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="55"/></expr_stmt>
			}<pos:position pos:line="64" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="65" pos:column="25">relurl<pos:position pos:line="65" pos:column="31"/></name> <operator pos:line="65" pos:column="32">=<pos:position pos:line="65" pos:column="33"/></operator> <call><name pos:line="65" pos:column="34">relative_url<pos:position pos:line="65" pos:column="46"/></name><argument_list pos:line="65" pos:column="46">(<argument><expr><name pos:line="65" pos:column="47">remoteurl<pos:position pos:line="65" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="58">url<pos:position pos:line="65" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="63">NULL<pos:position pos:line="65" pos:column="67"/></name></expr></argument>)<pos:position pos:line="65" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="66" pos:column="25">strbuf_release<pos:position pos:line="66" pos:column="39"/></name><argument_list pos:line="66" pos:column="39">(<argument><expr><operator pos:line="66" pos:column="40">&amp;<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="41">remotesb<pos:position pos:line="66" pos:column="49"/></name></expr></argument>)<pos:position pos:line="66" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="67" pos:column="25">free<pos:position pos:line="67" pos:column="29"/></name><argument_list pos:line="67" pos:column="29">(<argument><expr><name pos:line="67" pos:column="30">remoteurl<pos:position pos:line="67" pos:column="39"/></name></expr></argument>)<pos:position pos:line="67" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="68" pos:column="25">free<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><name pos:line="68" pos:column="30">url<pos:position pos:line="68" pos:column="33"/></name></expr></argument>)<pos:position pos:line="68" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="69" pos:column="25">url<pos:position pos:line="69" pos:column="28"/></name> <operator pos:line="69" pos:column="29">=<pos:position pos:line="69" pos:column="30"/></operator> <name pos:line="69" pos:column="31">relurl<pos:position pos:line="69" pos:column="37"/></name></expr>;<pos:position pos:line="69" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="70" pos:column="18"/></block></then></if>

		<if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><call><name pos:line="72" pos:column="21">git_config_set_gently<pos:position pos:line="72" pos:column="42"/></name><argument_list pos:line="72" pos:column="42">(<argument><expr><name><name pos:line="72" pos:column="43">sb<pos:position pos:line="72" pos:column="45"/></name><operator pos:line="72" pos:column="45">.<pos:position pos:line="72" pos:column="46"/></operator><name pos:line="72" pos:column="46">buf<pos:position pos:line="72" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="51">url<pos:position pos:line="72" pos:column="54"/></name></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="56"/></condition><then pos:line="72" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="25">die<pos:position pos:line="73" pos:column="28"/></name><argument_list pos:line="73" pos:column="28">(<argument><expr><call><name pos:line="73" pos:column="29">_<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><literal type="string" pos:line="73" pos:column="31">"Failed to register url for submodule path '%s'"<pos:position pos:line="73" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="80"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="74" pos:column="29">displaypath<pos:position pos:line="74" pos:column="40"/></name></expr></argument>)<pos:position pos:line="74" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="42"/></expr_stmt></block></then></if>
		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><operator pos:line="75" pos:column="21">!<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="22">quiet<pos:position pos:line="75" pos:column="27"/></name></expr>)<pos:position pos:line="75" pos:column="28"/></condition><then pos:line="75" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="25">fprintf<pos:position pos:line="76" pos:column="32"/></name><argument_list pos:line="76" pos:column="32">(<argument><expr><name pos:line="76" pos:column="33">stderr<pos:position pos:line="76" pos:column="39"/></name></expr></argument>,
				<argument><expr><call><name pos:line="77" pos:column="33">_<pos:position pos:line="77" pos:column="34"/></name><argument_list pos:line="77" pos:column="34">(<argument><expr><literal type="string" pos:line="77" pos:column="35">"Submodule '%s' (%s) registered for path '%s'\n"<pos:position pos:line="77" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="84"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="78" pos:column="33">sub<pos:position pos:line="78" pos:column="36"/></name><operator pos:line="78" pos:column="36">-&gt;<pos:position pos:line="78" pos:column="41"/></operator><name pos:line="78" pos:column="38">name<pos:position pos:line="78" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="44">url<pos:position pos:line="78" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="49">displaypath<pos:position pos:line="78" pos:column="60"/></name></expr></argument>)<pos:position pos:line="78" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="62"/></expr_stmt></block></then></if>
	}<pos:position pos:line="79" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="81" pos:column="9">/* Copy "update" setting when it is not set yet */</comment>
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">strbuf_reset<pos:position pos:line="82" pos:column="21"/></name><argument_list pos:line="82" pos:column="21">(<argument><expr><operator pos:line="82" pos:column="22">&amp;<pos:position pos:line="82" pos:column="27"/></operator><name pos:line="82" pos:column="23">sb<pos:position pos:line="82" pos:column="25"/></name></expr></argument>)<pos:position pos:line="82" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="83" pos:column="9">strbuf_addf<pos:position pos:line="83" pos:column="20"/></name><argument_list pos:line="83" pos:column="20">(<argument><expr><operator pos:line="83" pos:column="21">&amp;<pos:position pos:line="83" pos:column="26"/></operator><name pos:line="83" pos:column="22">sb<pos:position pos:line="83" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="26">"submodule.%s.update"<pos:position pos:line="83" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="49">sub<pos:position pos:line="83" pos:column="52"/></name><operator pos:line="83" pos:column="52">-&gt;<pos:position pos:line="83" pos:column="57"/></operator><name pos:line="83" pos:column="54">name<pos:position pos:line="83" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="60"/></expr_stmt>
	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><call><name pos:line="84" pos:column="13">git_config_get_string<pos:position pos:line="84" pos:column="34"/></name><argument_list pos:line="84" pos:column="34">(<argument><expr><name><name pos:line="84" pos:column="35">sb<pos:position pos:line="84" pos:column="37"/></name><operator pos:line="84" pos:column="37">.<pos:position pos:line="84" pos:column="38"/></operator><name pos:line="84" pos:column="38">buf<pos:position pos:line="84" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="43">&amp;<pos:position pos:line="84" pos:column="48"/></operator><name pos:line="84" pos:column="44">upd<pos:position pos:line="84" pos:column="47"/></name></expr></argument>)<pos:position pos:line="84" pos:column="48"/></argument_list></call> <operator pos:line="84" pos:column="49">&amp;&amp;<pos:position pos:line="84" pos:column="59"/></operator>
	    <name><name pos:line="85" pos:column="13">sub<pos:position pos:line="85" pos:column="16"/></name><operator pos:line="85" pos:column="16">-&gt;<pos:position pos:line="85" pos:column="21"/></operator><name pos:line="85" pos:column="18">update_strategy<pos:position pos:line="85" pos:column="33"/></name><operator pos:line="85" pos:column="33">.<pos:position pos:line="85" pos:column="34"/></operator><name pos:line="85" pos:column="34">type<pos:position pos:line="85" pos:column="38"/></name></name> <operator pos:line="85" pos:column="39">!=<pos:position pos:line="85" pos:column="41"/></operator> <name pos:line="85" pos:column="42">SM_UPDATE_UNSPECIFIED<pos:position pos:line="85" pos:column="63"/></name></expr>)<pos:position pos:line="85" pos:column="64"/></condition><then pos:line="85" pos:column="64"> <block pos:line="85" pos:column="65">{
		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name><name pos:line="86" pos:column="21">sub<pos:position pos:line="86" pos:column="24"/></name><operator pos:line="86" pos:column="24">-&gt;<pos:position pos:line="86" pos:column="29"/></operator><name pos:line="86" pos:column="26">update_strategy<pos:position pos:line="86" pos:column="41"/></name><operator pos:line="86" pos:column="41">.<pos:position pos:line="86" pos:column="42"/></operator><name pos:line="86" pos:column="42">type<pos:position pos:line="86" pos:column="46"/></name></name> <operator pos:line="86" pos:column="47">==<pos:position pos:line="86" pos:column="49"/></operator> <name pos:line="86" pos:column="50">SM_UPDATE_COMMAND<pos:position pos:line="86" pos:column="67"/></name></expr>)<pos:position pos:line="86" pos:column="68"/></condition><then pos:line="86" pos:column="68"> <block pos:line="86" pos:column="69">{
			<expr_stmt><expr><call><name pos:line="87" pos:column="25">fprintf<pos:position pos:line="87" pos:column="32"/></name><argument_list pos:line="87" pos:column="32">(<argument><expr><name pos:line="87" pos:column="33">stderr<pos:position pos:line="87" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="87" pos:column="41">_<pos:position pos:line="87" pos:column="42"/></name><argument_list pos:line="87" pos:column="42">(<argument><expr><literal type="string" pos:line="87" pos:column="43">"warning: command update mode suggested for submodule '%s'\n"<pos:position pos:line="87" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="105"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="88" pos:column="33">sub<pos:position pos:line="88" pos:column="36"/></name><operator pos:line="88" pos:column="36">-&gt;<pos:position pos:line="88" pos:column="41"/></operator><name pos:line="88" pos:column="38">name<pos:position pos:line="88" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="89" pos:column="25">upd<pos:position pos:line="89" pos:column="28"/></name> <operator pos:line="89" pos:column="29">=<pos:position pos:line="89" pos:column="30"/></operator> <call><name pos:line="89" pos:column="31">xstrdup<pos:position pos:line="89" pos:column="38"/></name><argument_list pos:line="89" pos:column="38">(<argument><expr><literal type="string" pos:line="89" pos:column="39">"none"<pos:position pos:line="89" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="90" pos:column="18"/></block></then> <else pos:line="90" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="25">upd<pos:position pos:line="91" pos:column="28"/></name> <operator pos:line="91" pos:column="29">=<pos:position pos:line="91" pos:column="30"/></operator> <call><name pos:line="91" pos:column="31">xstrdup<pos:position pos:line="91" pos:column="38"/></name><argument_list pos:line="91" pos:column="38">(<argument><expr><call><name pos:line="91" pos:column="39">submodule_strategy_to_string<pos:position pos:line="91" pos:column="67"/></name><argument_list pos:line="91" pos:column="67">(<argument><expr><operator pos:line="91" pos:column="68">&amp;<pos:position pos:line="91" pos:column="73"/></operator><name><name pos:line="91" pos:column="69">sub<pos:position pos:line="91" pos:column="72"/></name><operator pos:line="91" pos:column="72">-&gt;<pos:position pos:line="91" pos:column="77"/></operator><name pos:line="91" pos:column="74">update_strategy<pos:position pos:line="91" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="92"/></expr_stmt></block></else></if>

		<if pos:line="93" pos:column="17">if <condition pos:line="93" pos:column="20">(<expr><call><name pos:line="93" pos:column="21">git_config_set_gently<pos:position pos:line="93" pos:column="42"/></name><argument_list pos:line="93" pos:column="42">(<argument><expr><name><name pos:line="93" pos:column="43">sb<pos:position pos:line="93" pos:column="45"/></name><operator pos:line="93" pos:column="45">.<pos:position pos:line="93" pos:column="46"/></operator><name pos:line="93" pos:column="46">buf<pos:position pos:line="93" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="51">upd<pos:position pos:line="93" pos:column="54"/></name></expr></argument>)<pos:position pos:line="93" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="56"/></condition><then pos:line="93" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="25">die<pos:position pos:line="94" pos:column="28"/></name><argument_list pos:line="94" pos:column="28">(<argument><expr><call><name pos:line="94" pos:column="29">_<pos:position pos:line="94" pos:column="30"/></name><argument_list pos:line="94" pos:column="30">(<argument><expr><literal type="string" pos:line="94" pos:column="31">"Failed to register update mode for submodule path '%s'"<pos:position pos:line="94" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="88"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="94" pos:column="90">displaypath<pos:position pos:line="94" pos:column="101"/></name></expr></argument>)<pos:position pos:line="94" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="103"/></expr_stmt></block></then></if>
	}<pos:position pos:line="95" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="96" pos:column="9">strbuf_release<pos:position pos:line="96" pos:column="23"/></name><argument_list pos:line="96" pos:column="23">(<argument><expr><operator pos:line="96" pos:column="24">&amp;<pos:position pos:line="96" pos:column="29"/></operator><name pos:line="96" pos:column="25">sb<pos:position pos:line="96" pos:column="27"/></name></expr></argument>)<pos:position pos:line="96" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="97" pos:column="9">free<pos:position pos:line="97" pos:column="13"/></name><argument_list pos:line="97" pos:column="13">(<argument><expr><name pos:line="97" pos:column="14">displaypath<pos:position pos:line="97" pos:column="25"/></name></expr></argument>)<pos:position pos:line="97" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="98" pos:column="9">free<pos:position pos:line="98" pos:column="13"/></name><argument_list pos:line="98" pos:column="13">(<argument><expr><name pos:line="98" pos:column="14">url<pos:position pos:line="98" pos:column="17"/></name></expr></argument>)<pos:position pos:line="98" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="99" pos:column="9">free<pos:position pos:line="99" pos:column="13"/></name><argument_list pos:line="99" pos:column="13">(<argument><expr><name pos:line="99" pos:column="14">upd<pos:position pos:line="99" pos:column="17"/></name></expr></argument>)<pos:position pos:line="99" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="19"/></expr_stmt>
}<pos:position pos:line="100" pos:column="2"/></block></function></unit>

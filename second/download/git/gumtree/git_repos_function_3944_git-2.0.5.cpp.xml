<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3944_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_one<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">refname<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">unsigned<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">sha1<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">hex<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">find_unique_abbrev<pos:position pos:line="3" pos:column="45"/></name><argument_list pos:line="3" pos:column="45">(<argument><expr><name pos:line="3" pos:column="46">sha1<pos:position pos:line="3" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="52">abbrev<pos:position pos:line="3" pos:column="58"/></name></expr></argument>)<pos:position pos:line="3" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="60"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">hash_only<pos:position pos:line="4" pos:column="22"/></name></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="17">printf<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><literal type="string" pos:line="5" pos:column="24">"%s\n"<pos:position pos:line="5" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="32">hex<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt></block></then>
	<else pos:line="6" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">printf<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><literal type="string" pos:line="7" pos:column="24">"%s %s\n"<pos:position pos:line="7" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="35">hex<pos:position pos:line="7" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="40">refname<pos:position pos:line="7" pos:column="47"/></name></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="49"/></expr_stmt></block></else></if>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

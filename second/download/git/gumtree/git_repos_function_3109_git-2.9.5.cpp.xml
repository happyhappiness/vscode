<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3109_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_host_arg<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">hostinfo<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">hi<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">extra_args<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">int<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">buflen<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">val<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">vallen<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">end<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">extra_args<pos:position pos:line="5" pos:column="31"/></name> <operator pos:line="5" pos:column="32">+<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="34">buflen<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">extra_args<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&lt;<pos:position pos:line="7" pos:column="28"/></operator> <name pos:line="7" pos:column="26">end<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">&amp;&amp;<pos:position pos:line="7" pos:column="40"/></operator> <operator pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">extra_args<pos:position pos:line="7" pos:column="44"/></name></expr>)<pos:position pos:line="7" pos:column="45"/></condition><then pos:line="7" pos:column="45"> <block pos:line="7" pos:column="46">{
		<expr_stmt><expr><name><name pos:line="8" pos:column="17">hi<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">saw_extended_args<pos:position pos:line="8" pos:column="38"/></name></name> <operator pos:line="8" pos:column="39">=<pos:position pos:line="8" pos:column="40"/></operator> <literal type="number" pos:line="8" pos:column="41">1<pos:position pos:line="8" pos:column="42"/></literal></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">strncasecmp<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><literal type="string" pos:line="9" pos:column="33">"host="<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">extra_args<pos:position pos:line="9" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="54">5<pos:position pos:line="9" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call> <operator pos:line="9" pos:column="57">==<pos:position pos:line="9" pos:column="59"/></operator> <literal type="number" pos:line="9" pos:column="60">0<pos:position pos:line="9" pos:column="61"/></literal></expr>)<pos:position pos:line="9" pos:column="62"/></condition><then pos:line="9" pos:column="62"> <block pos:line="9" pos:column="63">{
			<expr_stmt><expr><name pos:line="10" pos:column="25">val<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <name pos:line="10" pos:column="31">extra_args<pos:position pos:line="10" pos:column="41"/></name> <operator pos:line="10" pos:column="42">+<pos:position pos:line="10" pos:column="43"/></operator> <literal type="number" pos:line="10" pos:column="44">5<pos:position pos:line="10" pos:column="45"/></literal></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name pos:line="11" pos:column="25">vallen<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">=<pos:position pos:line="11" pos:column="33"/></operator> <call><name pos:line="11" pos:column="34">strlen<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">(<argument><expr><name pos:line="11" pos:column="41">val<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call> <operator pos:line="11" pos:column="46">+<pos:position pos:line="11" pos:column="47"/></operator> <literal type="number" pos:line="11" pos:column="48">1<pos:position pos:line="11" pos:column="49"/></literal></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><operator pos:line="12" pos:column="29">*<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">val<pos:position pos:line="12" pos:column="33"/></name></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34"> <block pos:line="12" pos:column="35">{
				<comment type="block" pos:line="13" pos:column="33">/* Split &lt;host&gt;:&lt;port&gt; at colon. */</comment>
				<decl_stmt><decl><type><name pos:line="14" pos:column="33">char<pos:position pos:line="14" pos:column="37"/></name> <modifier pos:line="14" pos:column="38">*<pos:position pos:line="14" pos:column="39"/></modifier></type><name pos:line="14" pos:column="39">host<pos:position pos:line="14" pos:column="43"/></name></decl>;<pos:position pos:line="14" pos:column="44"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="15" pos:column="33">char<pos:position pos:line="15" pos:column="37"/></name> <modifier pos:line="15" pos:column="38">*<pos:position pos:line="15" pos:column="39"/></modifier></type><name pos:line="15" pos:column="39">port<pos:position pos:line="15" pos:column="43"/></name></decl>;<pos:position pos:line="15" pos:column="44"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="16" pos:column="33">parse_host_and_port<pos:position pos:line="16" pos:column="52"/></name><argument_list pos:line="16" pos:column="52">(<argument><expr><name pos:line="16" pos:column="53">val<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="58">&amp;<pos:position pos:line="16" pos:column="63"/></operator><name pos:line="16" pos:column="59">host<pos:position pos:line="16" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="65">&amp;<pos:position pos:line="16" pos:column="70"/></operator><name pos:line="16" pos:column="66">port<pos:position pos:line="16" pos:column="70"/></name></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="72"/></expr_stmt>
				<if pos:line="17" pos:column="33">if <condition pos:line="17" pos:column="36">(<expr><name pos:line="17" pos:column="37">port<pos:position pos:line="17" pos:column="41"/></name></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="41">sanitize_client<pos:position pos:line="18" pos:column="56"/></name><argument_list pos:line="18" pos:column="56">(<argument><expr><operator pos:line="18" pos:column="57">&amp;<pos:position pos:line="18" pos:column="62"/></operator><name><name pos:line="18" pos:column="58">hi<pos:position pos:line="18" pos:column="60"/></name><operator pos:line="18" pos:column="60">-&gt;<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="62">tcp_port<pos:position pos:line="18" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="72">port<pos:position pos:line="18" pos:column="76"/></name></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="78"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="19" pos:column="33">canonicalize_client<pos:position pos:line="19" pos:column="52"/></name><argument_list pos:line="19" pos:column="52">(<argument><expr><operator pos:line="19" pos:column="53">&amp;<pos:position pos:line="19" pos:column="58"/></operator><name><name pos:line="19" pos:column="54">hi<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">-&gt;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="58">hostname<pos:position pos:line="19" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="68">host<pos:position pos:line="19" pos:column="72"/></name></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="74"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="20" pos:column="33">hi<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">hostname_lookup_done<pos:position pos:line="20" pos:column="57"/></name></name> <operator pos:line="20" pos:column="58">=<pos:position pos:line="20" pos:column="59"/></operator> <literal type="number" pos:line="20" pos:column="60">0<pos:position pos:line="20" pos:column="61"/></literal></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>
			}<pos:position pos:line="21" pos:column="26"/></block></then></if>

			<comment type="block" pos:line="23" pos:column="25">/* On to the next one */</comment>
			<expr_stmt><expr><name pos:line="24" pos:column="25">extra_args<pos:position pos:line="24" pos:column="35"/></name> <operator pos:line="24" pos:column="36">=<pos:position pos:line="24" pos:column="37"/></operator> <name pos:line="24" pos:column="38">val<pos:position pos:line="24" pos:column="41"/></name> <operator pos:line="24" pos:column="42">+<pos:position pos:line="24" pos:column="43"/></operator> <name pos:line="24" pos:column="44">vallen<pos:position pos:line="24" pos:column="50"/></name></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">extra_args<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">&lt;<pos:position pos:line="26" pos:column="36"/></operator> <name pos:line="26" pos:column="34">end<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">&amp;&amp;<pos:position pos:line="26" pos:column="48"/></operator> <operator pos:line="26" pos:column="41">*<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">extra_args<pos:position pos:line="26" pos:column="52"/></name></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="25">die<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><literal type="string" pos:line="27" pos:column="29">"Invalid request"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

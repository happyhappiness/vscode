<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3086_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">process_trailers<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">file<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">in_place<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">trim_empty<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="71">struct<pos:position pos:line="1" pos:column="77"/></name> <name pos:line="1" pos:column="78">string_list<pos:position pos:line="1" pos:column="89"/></name></name> <modifier pos:line="1" pos:column="90">*<pos:position pos:line="1" pos:column="91"/></modifier></type><name pos:line="1" pos:column="91">trailers<pos:position pos:line="1" pos:column="99"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="100"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">LIST_HEAD<pos:position pos:line="3" pos:column="18"/></name><argument_list pos:line="3" pos:column="18">(<argument><expr><name pos:line="3" pos:column="19">head<pos:position pos:line="3" pos:column="23"/></name></expr></argument>)<pos:position pos:line="3" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">LIST_HEAD<pos:position pos:line="4" pos:column="18"/></name><argument_list pos:line="4" pos:column="18">(<argument><expr><name pos:line="4" pos:column="19">arg_head<pos:position pos:line="4" pos:column="27"/></name></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="29"/></expr_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">sb<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">STRBUF_INIT<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">trailer_end<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">FILE<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">outfile<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">stdout<pos:position pos:line="7" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">ensure_configured<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">()<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">read_input_file<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><operator pos:line="11" pos:column="25">&amp;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="26">sb<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="30">file<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">in_place<pos:position pos:line="13" pos:column="21"/></name></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">outfile<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <call><name pos:line="14" pos:column="27">create_in_place_tempfile<pos:position pos:line="14" pos:column="51"/></name><argument_list pos:line="14" pos:column="51">(<argument><expr><name pos:line="14" pos:column="52">file<pos:position pos:line="14" pos:column="56"/></name></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="58"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="16" pos:column="9">/* Print the lines before the trailers */</comment>
	<expr_stmt><expr><name pos:line="17" pos:column="9">trailer_end<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">process_input_file<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><name pos:line="17" pos:column="42">outfile<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="51">sb<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">.<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="54">buf<pos:position pos:line="17" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="59">&amp;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="60">head<pos:position pos:line="17" pos:column="64"/></name></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">process_command_line_args<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><operator pos:line="19" pos:column="35">&amp;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="36">arg_head<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">trailers<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="21" pos:column="9">process_trailers_lists<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><operator pos:line="21" pos:column="32">&amp;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="33">head<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="39">&amp;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="40">arg_head<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">print_all<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">outfile<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="28">&amp;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="29">head<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="35">trim_empty<pos:position pos:line="23" pos:column="45"/></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">free_all<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><operator pos:line="25" pos:column="18">&amp;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="19">head<pos:position pos:line="25" pos:column="23"/></name></expr></argument>)<pos:position pos:line="25" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>

	<comment type="block" pos:line="27" pos:column="9">/* Print the lines after the trailers as is */</comment>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">fwrite<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name><name pos:line="28" pos:column="16">sb<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">.<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">buf<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">+<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="25">trailer_end<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="38">1<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="41">sb<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">.<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="44">len<pos:position pos:line="28" pos:column="47"/></name></name> <operator pos:line="28" pos:column="48">-<pos:position pos:line="28" pos:column="49"/></operator> <name pos:line="28" pos:column="50">trailer_end<pos:position pos:line="28" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="63">outfile<pos:position pos:line="28" pos:column="70"/></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="72"/></expr_stmt>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">in_place<pos:position pos:line="30" pos:column="21"/></name></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22">
		<block type="pseudo"><if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">rename_tempfile<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><operator pos:line="31" pos:column="37">&amp;<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="38">trailers_tempfile<pos:position pos:line="31" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="57">file<pos:position pos:line="31" pos:column="61"/></name></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="63"/></condition><then pos:line="31" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="25">die_errno<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><call><name pos:line="32" pos:column="35">_<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><literal type="string" pos:line="32" pos:column="37">"could not rename temporary file to %s"<pos:position pos:line="32" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="79">file<pos:position pos:line="32" pos:column="83"/></name></expr></argument>)<pos:position pos:line="32" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="85"/></expr_stmt></block></then></if></block></then></if>

	<expr_stmt><expr><call><name pos:line="34" pos:column="9">strbuf_release<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><operator pos:line="34" pos:column="24">&amp;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="25">sb<pos:position pos:line="34" pos:column="27"/></name></expr></argument>)<pos:position pos:line="34" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

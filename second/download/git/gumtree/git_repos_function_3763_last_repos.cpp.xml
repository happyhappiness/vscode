<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3763_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">unsigned<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">is_submodule_modified<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">path<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">ignore_untracked<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">child_process<pos:position pos:line="3" pos:column="29"/></name></name></type> <name pos:line="3" pos:column="30">cp<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">CHILD_PROCESS_INIT<pos:position pos:line="3" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">FILE<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">fp<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">dirty_submodule<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><literal type="number" pos:line="6" pos:column="36">0<pos:position pos:line="6" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">git_dir<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">ignore_cp_exit_code<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><literal type="number" pos:line="8" pos:column="35">0<pos:position pos:line="8" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">strbuf_addf<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><operator pos:line="10" pos:column="21">&amp;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="22">buf<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="27">"%s/.git"<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">path<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">git_dir<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <call><name pos:line="11" pos:column="19">read_gitfile<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name><name pos:line="11" pos:column="32">buf<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">.<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="36">buf<pos:position pos:line="11" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">git_dir<pos:position pos:line="12" pos:column="21"/></name></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">git_dir<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <name><name pos:line="13" pos:column="27">buf<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">.<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">buf<pos:position pos:line="13" pos:column="34"/></name></name></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">is_git_directory<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">git_dir<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="40"/></condition><then pos:line="14" pos:column="40"> <block pos:line="14" pos:column="41">{
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><call><name pos:line="15" pos:column="21">is_directory<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">git_dir<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">die<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><call><name pos:line="16" pos:column="29">_<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><literal type="string" pos:line="16" pos:column="31">"'%s' not recognized as a git repository"<pos:position pos:line="16" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="75">git_dir<pos:position pos:line="16" pos:column="82"/></name></expr></argument>)<pos:position pos:line="16" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="84"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">strbuf_release<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><operator pos:line="17" pos:column="32">&amp;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="33">buf<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
		<comment type="block" pos:line="18" pos:column="17">/* The submodule is not checked out, so it is not modified */</comment>
		<return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">strbuf_reset<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><operator pos:line="21" pos:column="22">&amp;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="23">buf<pos:position pos:line="21" pos:column="26"/></name></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">argv_array_pushl<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><operator pos:line="23" pos:column="26">&amp;<pos:position pos:line="23" pos:column="31"/></operator><name><name pos:line="23" pos:column="27">cp<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">.<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">args<pos:position pos:line="23" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="36">"status"<pos:position pos:line="23" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="46">"--porcelain=2"<pos:position pos:line="23" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="63">NULL<pos:position pos:line="23" pos:column="67"/></name></expr></argument>)<pos:position pos:line="23" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="69"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">ignore_untracked<pos:position pos:line="24" pos:column="29"/></name></expr>)<pos:position pos:line="24" pos:column="30"/></condition><then pos:line="24" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">argv_array_push<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><operator pos:line="25" pos:column="33">&amp;<pos:position pos:line="25" pos:column="38"/></operator><name><name pos:line="25" pos:column="34">cp<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">.<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="37">args<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="43">"-uno"<pos:position pos:line="25" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="27" pos:column="9">prepare_submodule_repo_env<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><operator pos:line="27" pos:column="36">&amp;<pos:position pos:line="27" pos:column="41"/></operator><name><name pos:line="27" pos:column="37">cp<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">.<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="40">env_array<pos:position pos:line="27" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">cp<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">.<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">git_cmd<pos:position pos:line="28" pos:column="19"/></name></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <literal type="number" pos:line="28" pos:column="22">1<pos:position pos:line="28" pos:column="23"/></literal></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">cp<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">.<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="12">no_stdin<pos:position pos:line="29" pos:column="20"/></name></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <literal type="number" pos:line="29" pos:column="23">1<pos:position pos:line="29" pos:column="24"/></literal></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">cp<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">.<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">out<pos:position pos:line="30" pos:column="15"/></name></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <operator pos:line="30" pos:column="18">-<pos:position pos:line="30" pos:column="19"/></operator><literal type="number" pos:line="30" pos:column="19">1<pos:position pos:line="30" pos:column="20"/></literal></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">cp<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">dir<pos:position pos:line="31" pos:column="15"/></name></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">path<pos:position pos:line="31" pos:column="22"/></name></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name pos:line="32" pos:column="13">start_command<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><operator pos:line="32" pos:column="27">&amp;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="28">cp<pos:position pos:line="32" pos:column="30"/></name></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="32"/></condition><then pos:line="32" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">die<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><literal type="string" pos:line="33" pos:column="21">"Could not run 'git status --porcelain=2' in submodule %s"<pos:position pos:line="33" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="81">path<pos:position pos:line="33" pos:column="85"/></name></expr></argument>)<pos:position pos:line="33" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="87"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="35" pos:column="9">fp<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <call><name pos:line="35" pos:column="14">xfdopen<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name><name pos:line="35" pos:column="22">cp<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">.<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">out<pos:position pos:line="35" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="30">"r"<pos:position pos:line="35" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
	<while pos:line="36" pos:column="9">while <condition pos:line="36" pos:column="15">(<expr><call><name pos:line="36" pos:column="16">strbuf_getwholeline<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><operator pos:line="36" pos:column="36">&amp;<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="37">buf<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="42">fp<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="36" pos:column="46">'\n'<pos:position pos:line="36" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call> <operator pos:line="36" pos:column="52">!=<pos:position pos:line="36" pos:column="54"/></operator> <name pos:line="36" pos:column="55">EOF<pos:position pos:line="36" pos:column="58"/></name></expr>)<pos:position pos:line="36" pos:column="59"/></condition> <block pos:line="36" pos:column="60">{
		<comment type="block" pos:line="37" pos:column="17">/* regular untracked files */</comment>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name><name pos:line="38" pos:column="21">buf<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">.<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="25">buf<pos:position pos:line="38" pos:column="28"/></name><index pos:line="38" pos:column="28">[<expr><literal type="number" pos:line="38" pos:column="29">0<pos:position pos:line="38" pos:column="30"/></literal></expr>]<pos:position pos:line="38" pos:column="31"/></index></name> <operator pos:line="38" pos:column="32">==<pos:position pos:line="38" pos:column="34"/></operator> <literal type="char" pos:line="38" pos:column="35">'?'<pos:position pos:line="38" pos:column="38"/></literal></expr>)<pos:position pos:line="38" pos:column="39"/></condition><then pos:line="38" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="25">dirty_submodule<pos:position pos:line="39" pos:column="40"/></name> <operator pos:line="39" pos:column="41">|=<pos:position pos:line="39" pos:column="43"/></operator> <name pos:line="39" pos:column="44">DIRTY_SUBMODULE_UNTRACKED<pos:position pos:line="39" pos:column="69"/></name></expr>;<pos:position pos:line="39" pos:column="70"/></expr_stmt></block></then></if>

		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name><name pos:line="41" pos:column="21">buf<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">.<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">buf<pos:position pos:line="41" pos:column="28"/></name><index pos:line="41" pos:column="28">[<expr><literal type="number" pos:line="41" pos:column="29">0<pos:position pos:line="41" pos:column="30"/></literal></expr>]<pos:position pos:line="41" pos:column="31"/></index></name> <operator pos:line="41" pos:column="32">==<pos:position pos:line="41" pos:column="34"/></operator> <literal type="char" pos:line="41" pos:column="35">'u'<pos:position pos:line="41" pos:column="38"/></literal> <operator pos:line="41" pos:column="39">||<pos:position pos:line="41" pos:column="41"/></operator>
		    <name><name pos:line="42" pos:column="21">buf<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">.<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="25">buf<pos:position pos:line="42" pos:column="28"/></name><index pos:line="42" pos:column="28">[<expr><literal type="number" pos:line="42" pos:column="29">0<pos:position pos:line="42" pos:column="30"/></literal></expr>]<pos:position pos:line="42" pos:column="31"/></index></name> <operator pos:line="42" pos:column="32">==<pos:position pos:line="42" pos:column="34"/></operator> <literal type="char" pos:line="42" pos:column="35">'1'<pos:position pos:line="42" pos:column="38"/></literal> <operator pos:line="42" pos:column="39">||<pos:position pos:line="42" pos:column="41"/></operator>
		    <name><name pos:line="43" pos:column="21">buf<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">.<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="25">buf<pos:position pos:line="43" pos:column="28"/></name><index pos:line="43" pos:column="28">[<expr><literal type="number" pos:line="43" pos:column="29">0<pos:position pos:line="43" pos:column="30"/></literal></expr>]<pos:position pos:line="43" pos:column="31"/></index></name> <operator pos:line="43" pos:column="32">==<pos:position pos:line="43" pos:column="34"/></operator> <literal type="char" pos:line="43" pos:column="35">'2'<pos:position pos:line="43" pos:column="38"/></literal></expr>)<pos:position pos:line="43" pos:column="39"/></condition><then pos:line="43" pos:column="39"> <block pos:line="43" pos:column="40">{
			<comment type="block" pos:line="44" pos:column="25">/* T = line type, XY = status, SSSS = submodule state */</comment>
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><name><name pos:line="45" pos:column="29">buf<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">.<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="33">len<pos:position pos:line="45" pos:column="36"/></name></name> <operator pos:line="45" pos:column="37">&lt;<pos:position pos:line="45" pos:column="41"/></operator> <call><name pos:line="45" pos:column="39">strlen<pos:position pos:line="45" pos:column="45"/></name><argument_list pos:line="45" pos:column="45">(<argument><expr><literal type="string" pos:line="45" pos:column="46">"T XY SSSS"<pos:position pos:line="45" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="59"/></condition><then pos:line="45" pos:column="59">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="33">die<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><literal type="string" pos:line="46" pos:column="37">"BUG: invalid status --porcelain=2 line %s"<pos:position pos:line="46" pos:column="80"/></literal></expr></argument>,
				    <argument><expr><name><name pos:line="47" pos:column="37">buf<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">.<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="41">buf<pos:position pos:line="47" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="46"/></expr_stmt></block></then></if>

			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><name><name pos:line="49" pos:column="29">buf<pos:position pos:line="49" pos:column="32"/></name><operator pos:line="49" pos:column="32">.<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="33">buf<pos:position pos:line="49" pos:column="36"/></name><index pos:line="49" pos:column="36">[<expr><literal type="number" pos:line="49" pos:column="37">5<pos:position pos:line="49" pos:column="38"/></literal></expr>]<pos:position pos:line="49" pos:column="39"/></index></name> <operator pos:line="49" pos:column="40">==<pos:position pos:line="49" pos:column="42"/></operator> <literal type="char" pos:line="49" pos:column="43">'S'<pos:position pos:line="49" pos:column="46"/></literal> <operator pos:line="49" pos:column="47">&amp;&amp;<pos:position pos:line="49" pos:column="57"/></operator> <name><name pos:line="49" pos:column="50">buf<pos:position pos:line="49" pos:column="53"/></name><operator pos:line="49" pos:column="53">.<pos:position pos:line="49" pos:column="54"/></operator><name pos:line="49" pos:column="54">buf<pos:position pos:line="49" pos:column="57"/></name><index pos:line="49" pos:column="57">[<expr><literal type="number" pos:line="49" pos:column="58">8<pos:position pos:line="49" pos:column="59"/></literal></expr>]<pos:position pos:line="49" pos:column="60"/></index></name> <operator pos:line="49" pos:column="61">==<pos:position pos:line="49" pos:column="63"/></operator> <literal type="char" pos:line="49" pos:column="64">'U'<pos:position pos:line="49" pos:column="67"/></literal></expr>)<pos:position pos:line="49" pos:column="68"/></condition><then pos:line="49" pos:column="68">
				<comment type="block" pos:line="50" pos:column="33">/* nested untracked file */</comment>
				<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="33">dirty_submodule<pos:position pos:line="51" pos:column="48"/></name> <operator pos:line="51" pos:column="49">|=<pos:position pos:line="51" pos:column="51"/></operator> <name pos:line="51" pos:column="52">DIRTY_SUBMODULE_UNTRACKED<pos:position pos:line="51" pos:column="77"/></name></expr>;<pos:position pos:line="51" pos:column="78"/></expr_stmt></block></then></if>

			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><name><name pos:line="53" pos:column="29">buf<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">.<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="33">buf<pos:position pos:line="53" pos:column="36"/></name><index pos:line="53" pos:column="36">[<expr><literal type="number" pos:line="53" pos:column="37">0<pos:position pos:line="53" pos:column="38"/></literal></expr>]<pos:position pos:line="53" pos:column="39"/></index></name> <operator pos:line="53" pos:column="40">==<pos:position pos:line="53" pos:column="42"/></operator> <literal type="char" pos:line="53" pos:column="43">'u'<pos:position pos:line="53" pos:column="46"/></literal> <operator pos:line="53" pos:column="47">||<pos:position pos:line="53" pos:column="49"/></operator>
			    <name><name pos:line="54" pos:column="29">buf<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">.<pos:position pos:line="54" pos:column="33"/></operator><name pos:line="54" pos:column="33">buf<pos:position pos:line="54" pos:column="36"/></name><index pos:line="54" pos:column="36">[<expr><literal type="number" pos:line="54" pos:column="37">0<pos:position pos:line="54" pos:column="38"/></literal></expr>]<pos:position pos:line="54" pos:column="39"/></index></name> <operator pos:line="54" pos:column="40">==<pos:position pos:line="54" pos:column="42"/></operator> <literal type="char" pos:line="54" pos:column="43">'2'<pos:position pos:line="54" pos:column="46"/></literal> <operator pos:line="54" pos:column="47">||<pos:position pos:line="54" pos:column="49"/></operator>
			    <call><name pos:line="55" pos:column="29">memcmp<pos:position pos:line="55" pos:column="35"/></name><argument_list pos:line="55" pos:column="35">(<argument><expr><name><name pos:line="55" pos:column="36">buf<pos:position pos:line="55" pos:column="39"/></name><operator pos:line="55" pos:column="39">.<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="40">buf<pos:position pos:line="55" pos:column="43"/></name></name> <operator pos:line="55" pos:column="44">+<pos:position pos:line="55" pos:column="45"/></operator> <literal type="number" pos:line="55" pos:column="46">5<pos:position pos:line="55" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="49">"S..U"<pos:position pos:line="55" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="57">4<pos:position pos:line="55" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="60"/></condition><then pos:line="55" pos:column="60">
				<comment type="block" pos:line="56" pos:column="33">/* other change */</comment>
				<block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="33">dirty_submodule<pos:position pos:line="57" pos:column="48"/></name> <operator pos:line="57" pos:column="49">|=<pos:position pos:line="57" pos:column="51"/></operator> <name pos:line="57" pos:column="52">DIRTY_SUBMODULE_MODIFIED<pos:position pos:line="57" pos:column="76"/></name></expr>;<pos:position pos:line="57" pos:column="77"/></expr_stmt></block></then></if>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if>

		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><operator pos:line="60" pos:column="21">(<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="22">dirty_submodule<pos:position pos:line="60" pos:column="37"/></name> <operator pos:line="60" pos:column="38">&amp;<pos:position pos:line="60" pos:column="43"/></operator> <name pos:line="60" pos:column="40">DIRTY_SUBMODULE_MODIFIED<pos:position pos:line="60" pos:column="64"/></name><operator pos:line="60" pos:column="64">)<pos:position pos:line="60" pos:column="65"/></operator> <operator pos:line="60" pos:column="66">&amp;&amp;<pos:position pos:line="60" pos:column="76"/></operator>
		    <operator pos:line="61" pos:column="21">(<pos:position pos:line="61" pos:column="22"/></operator><operator pos:line="61" pos:column="22">(<pos:position pos:line="61" pos:column="23"/></operator><name pos:line="61" pos:column="23">dirty_submodule<pos:position pos:line="61" pos:column="38"/></name> <operator pos:line="61" pos:column="39">&amp;<pos:position pos:line="61" pos:column="44"/></operator> <name pos:line="61" pos:column="41">DIRTY_SUBMODULE_UNTRACKED<pos:position pos:line="61" pos:column="66"/></name><operator pos:line="61" pos:column="66">)<pos:position pos:line="61" pos:column="67"/></operator> <operator pos:line="61" pos:column="68">||<pos:position pos:line="61" pos:column="70"/></operator>
		     <name pos:line="62" pos:column="22">ignore_untracked<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">)<pos:position pos:line="62" pos:column="39"/></operator></expr>)<pos:position pos:line="62" pos:column="40"/></condition><then pos:line="62" pos:column="40"> <block pos:line="62" pos:column="41">{
			<comment type="block" pos:line="63" pos:column="25">/*
			 * We're not interested in any further information from
			 * the child any more, neither output nor its exit code.
			 */</comment>
			<expr_stmt><expr><name pos:line="67" pos:column="25">ignore_cp_exit_code<pos:position pos:line="67" pos:column="44"/></name> <operator pos:line="67" pos:column="45">=<pos:position pos:line="67" pos:column="46"/></operator> <literal type="number" pos:line="67" pos:column="47">1<pos:position pos:line="67" pos:column="48"/></literal></expr>;<pos:position pos:line="67" pos:column="49"/></expr_stmt>
			<break pos:line="68" pos:column="25">break;<pos:position pos:line="68" pos:column="31"/></break>
		}<pos:position pos:line="69" pos:column="18"/></block></then></if>
	}<pos:position pos:line="70" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">fclose<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><name pos:line="71" pos:column="16">fp<pos:position pos:line="71" pos:column="18"/></name></expr></argument>)<pos:position pos:line="71" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="20"/></expr_stmt>

	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><call><name pos:line="73" pos:column="13">finish_command<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><operator pos:line="73" pos:column="28">&amp;<pos:position pos:line="73" pos:column="33"/></operator><name pos:line="73" pos:column="29">cp<pos:position pos:line="73" pos:column="31"/></name></expr></argument>)<pos:position pos:line="73" pos:column="32"/></argument_list></call> <operator pos:line="73" pos:column="33">&amp;&amp;<pos:position pos:line="73" pos:column="43"/></operator> <operator pos:line="73" pos:column="36">!<pos:position pos:line="73" pos:column="37"/></operator><name pos:line="73" pos:column="37">ignore_cp_exit_code<pos:position pos:line="73" pos:column="56"/></name></expr>)<pos:position pos:line="73" pos:column="57"/></condition><then pos:line="73" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="17">die<pos:position pos:line="74" pos:column="20"/></name><argument_list pos:line="74" pos:column="20">(<argument><expr><literal type="string" pos:line="74" pos:column="21">"'git status --porcelain=2' failed in submodule %s"<pos:position pos:line="74" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="74">path<pos:position pos:line="74" pos:column="78"/></name></expr></argument>)<pos:position pos:line="74" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="80"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="76" pos:column="9">strbuf_release<pos:position pos:line="76" pos:column="23"/></name><argument_list pos:line="76" pos:column="23">(<argument><expr><operator pos:line="76" pos:column="24">&amp;<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="25">buf<pos:position pos:line="76" pos:column="28"/></name></expr></argument>)<pos:position pos:line="76" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="30"/></expr_stmt>
	<return pos:line="77" pos:column="9">return <expr><name pos:line="77" pos:column="16">dirty_submodule<pos:position pos:line="77" pos:column="31"/></name></expr>;<pos:position pos:line="77" pos:column="32"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

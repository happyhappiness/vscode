<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1470_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">curl_dump_data<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">text<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">unsigned<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">ptr<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">size_t<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">size<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">i<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">out<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">width<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><literal type="number" pos:line="5" pos:column="30">60<pos:position pos:line="5" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">strbuf_addf<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><operator pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="22">out<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="27">"%s, %10.10ld bytes (0x%8.8lx)\n"<pos:position pos:line="7" pos:column="60"/></literal></expr></argument>,
		<argument><expr><name pos:line="8" pos:column="17">text<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">long<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">)<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">size<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="35">(<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">long<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">)<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">size<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">trace_strbuf<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><operator pos:line="9" pos:column="22">&amp;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="23">trace_curl<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="35">&amp;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="36">out<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="25">size<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></condition> <incr><expr><name pos:line="11" pos:column="31">i<pos:position pos:line="11" pos:column="32"/></name> <operator pos:line="11" pos:column="33">+=<pos:position pos:line="11" pos:column="35"/></operator> <name pos:line="11" pos:column="36">width<pos:position pos:line="11" pos:column="41"/></name></expr></incr>)<pos:position pos:line="11" pos:column="42"/></control> <block pos:line="11" pos:column="43">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">size_t<pos:position pos:line="12" pos:column="23"/></name></type> <name pos:line="12" pos:column="24">w<pos:position pos:line="12" pos:column="25"/></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="14" pos:column="17">strbuf_reset<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><operator pos:line="14" pos:column="30">&amp;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="31">out<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">strbuf_addf<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><operator pos:line="15" pos:column="29">&amp;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="30">out<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="35">"%s: "<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="43">text<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
		<for pos:line="16" pos:column="17">for <control pos:line="16" pos:column="21">(<init><expr><name pos:line="16" pos:column="22">w<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="26">0<pos:position pos:line="16" pos:column="27"/></literal></expr>;<pos:position pos:line="16" pos:column="28"/></init> <condition><expr><operator pos:line="16" pos:column="29">(<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="30">w<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">&lt;<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="34">width<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">)<pos:position pos:line="16" pos:column="40"/></operator> <operator pos:line="16" pos:column="41">&amp;&amp;<pos:position pos:line="16" pos:column="51"/></operator> <operator pos:line="16" pos:column="44">(<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="45">i<pos:position pos:line="16" pos:column="46"/></name> <operator pos:line="16" pos:column="47">+<pos:position pos:line="16" pos:column="48"/></operator> <name pos:line="16" pos:column="49">w<pos:position pos:line="16" pos:column="50"/></name> <operator pos:line="16" pos:column="51">&lt;<pos:position pos:line="16" pos:column="55"/></operator> <name pos:line="16" pos:column="53">size<pos:position pos:line="16" pos:column="57"/></name><operator pos:line="16" pos:column="57">)<pos:position pos:line="16" pos:column="58"/></operator></expr>;<pos:position pos:line="16" pos:column="59"/></condition> <incr><expr><name pos:line="16" pos:column="60">w<pos:position pos:line="16" pos:column="61"/></name><operator pos:line="16" pos:column="61">++<pos:position pos:line="16" pos:column="63"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="64"/></control> <block pos:line="16" pos:column="65">{
			<decl_stmt><decl><type><name pos:line="17" pos:column="25">unsigned<pos:position pos:line="17" pos:column="33"/></name> <name pos:line="17" pos:column="34">char<pos:position pos:line="17" pos:column="38"/></name></type> <name pos:line="17" pos:column="39">ch<pos:position pos:line="17" pos:column="41"/></name> <init pos:line="17" pos:column="42">= <expr><name><name pos:line="17" pos:column="44">ptr<pos:position pos:line="17" pos:column="47"/></name><index pos:line="17" pos:column="47">[<expr><name pos:line="17" pos:column="48">i<pos:position pos:line="17" pos:column="49"/></name> <operator pos:line="17" pos:column="50">+<pos:position pos:line="17" pos:column="51"/></operator> <name pos:line="17" pos:column="52">w<pos:position pos:line="17" pos:column="53"/></name></expr>]<pos:position pos:line="17" pos:column="54"/></index></name></expr></init></decl>;<pos:position pos:line="17" pos:column="55"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="19" pos:column="25">strbuf_addch<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><operator pos:line="19" pos:column="38">&amp;<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="39">out<pos:position pos:line="19" pos:column="42"/></name></expr></argument>,
				       <argument><expr><ternary><condition><expr><operator pos:line="20" pos:column="40">(<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="41">ch<pos:position pos:line="20" pos:column="43"/></name> <operator pos:line="20" pos:column="44">&gt;=<pos:position pos:line="20" pos:column="49"/></operator> <literal type="number" pos:line="20" pos:column="47">0x20<pos:position pos:line="20" pos:column="51"/></literal><operator pos:line="20" pos:column="51">)<pos:position pos:line="20" pos:column="52"/></operator> <operator pos:line="20" pos:column="53">&amp;&amp;<pos:position pos:line="20" pos:column="63"/></operator> <operator pos:line="20" pos:column="56">(<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="57">ch<pos:position pos:line="20" pos:column="59"/></name> <operator pos:line="20" pos:column="60">&lt;<pos:position pos:line="20" pos:column="64"/></operator> <literal type="number" pos:line="20" pos:column="62">0x80<pos:position pos:line="20" pos:column="66"/></literal><operator pos:line="20" pos:column="66">)<pos:position pos:line="20" pos:column="67"/></operator></expr>
				       ?<pos:position pos:line="21" pos:column="41"/></condition><then pos:line="21" pos:column="41"> <expr><name pos:line="21" pos:column="42">ch<pos:position pos:line="21" pos:column="44"/></name></expr> <pos:position pos:line="21" pos:column="45"/></then><else pos:line="21" pos:column="45">: <expr><literal type="char" pos:line="21" pos:column="47">'.'<pos:position pos:line="21" pos:column="50"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">strbuf_addch<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><operator pos:line="23" pos:column="30">&amp;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="31">out<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="36">'\n'<pos:position pos:line="23" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">trace_strbuf<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><operator pos:line="24" pos:column="30">&amp;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="31">trace_curl<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="43">&amp;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="44">out<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">strbuf_release<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><operator pos:line="26" pos:column="24">&amp;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="25">out<pos:position pos:line="26" pos:column="28"/></name></expr></argument>)<pos:position pos:line="26" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

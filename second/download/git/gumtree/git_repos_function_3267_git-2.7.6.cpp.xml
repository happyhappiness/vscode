<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3267_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">xml_start_tag<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">void<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">userData<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">name<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier><modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">atts<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">xml_ctx<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">ctx<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><operator pos:line="4" pos:column="31">(<pos:position pos:line="4" pos:column="32"/></operator>struct <name pos:line="4" pos:column="39">xml_ctx<pos:position pos:line="4" pos:column="46"/></name> <operator pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></operator><operator pos:line="4" pos:column="48">)<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="49">userData<pos:position pos:line="4" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">c<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><call><name pos:line="5" pos:column="25">strchr<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">(<argument><expr><name pos:line="5" pos:column="32">name<pos:position pos:line="5" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="5" pos:column="38">':'<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">old_namelen<pos:position pos:line="6" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="26">new_len<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">c<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">==<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">c<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">name<pos:position pos:line="9" pos:column="25"/></name></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt></block></then>
	<else pos:line="10" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">c<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">++<pos:position pos:line="11" pos:column="20"/></operator></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="13" pos:column="9">old_namelen<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="23">strlen<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name><name pos:line="13" pos:column="30">ctx<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="35">name<pos:position pos:line="13" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">new_len<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">old_namelen<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">+<pos:position pos:line="14" pos:column="32"/></operator> <call><name pos:line="14" pos:column="33">strlen<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">c<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call> <operator pos:line="14" pos:column="43">+<pos:position pos:line="14" pos:column="44"/></operator> <literal type="number" pos:line="14" pos:column="45">2<pos:position pos:line="14" pos:column="46"/></literal></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">new_len<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">&gt;<pos:position pos:line="16" pos:column="25"/></operator> <name><name pos:line="16" pos:column="23">ctx<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">len<pos:position pos:line="16" pos:column="31"/></name></name></expr>)<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32"> <block pos:line="16" pos:column="33">{
		<expr_stmt><expr><name><name pos:line="17" pos:column="17">ctx<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">name<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <call><name pos:line="17" pos:column="29">xrealloc<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name><name pos:line="17" pos:column="38">ctx<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">name<pos:position pos:line="17" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">new_len<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">ctx<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">len<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="28">new_len<pos:position pos:line="18" pos:column="35"/></name></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">xsnprintf<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name><name pos:line="20" pos:column="19">ctx<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">name<pos:position pos:line="20" pos:column="28"/></name></name> <operator pos:line="20" pos:column="29">+<pos:position pos:line="20" pos:column="30"/></operator> <name pos:line="20" pos:column="31">old_namelen<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="44">ctx<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">-&gt;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="49">len<pos:position pos:line="20" pos:column="52"/></name></name> <operator pos:line="20" pos:column="53">-<pos:position pos:line="20" pos:column="54"/></operator> <name pos:line="20" pos:column="55">old_namelen<pos:position pos:line="20" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="68">".%s"<pos:position pos:line="20" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="75">c<pos:position pos:line="20" pos:column="76"/></name></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="78"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">free<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name><name pos:line="22" pos:column="14">ctx<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">cdata<pos:position pos:line="22" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">ctx<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">cdata<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">NULL<pos:position pos:line="23" pos:column="26"/></name></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="25" pos:column="9">ctx<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">userFunc<pos:position pos:line="25" pos:column="22"/></name></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">ctx<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

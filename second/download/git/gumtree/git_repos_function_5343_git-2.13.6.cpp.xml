<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5343_git-2.13.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">am_append_signoff<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">am_state<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">state<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">cp<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">mine<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">STRBUF_INIT<pos:position pos:line="4" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">sb<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">STRBUF_INIT<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">strbuf_attach<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><operator pos:line="7" pos:column="23">&amp;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="24">sb<pos:position pos:line="7" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="28">state<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">-&gt;<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="35">msg<pos:position pos:line="7" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="40">state<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">-&gt;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="47">msg_len<pos:position pos:line="7" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="56">state<pos:position pos:line="7" pos:column="61"/></name><operator pos:line="7" pos:column="61">-&gt;<pos:position pos:line="7" pos:column="66"/></operator><name pos:line="7" pos:column="63">msg_len<pos:position pos:line="7" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="72"/></expr_stmt>

	<comment type="block" pos:line="9" pos:column="9">/* our sign-off */</comment>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">strbuf_addf<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><operator pos:line="10" pos:column="21">&amp;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="22">mine<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="28">"\n%s%s\n"<pos:position pos:line="10" pos:column="38"/></literal></expr></argument>,
		    <argument><expr><name pos:line="11" pos:column="21">sign_off_header<pos:position pos:line="11" pos:column="36"/></name></expr></argument>,
		    <argument><expr><call><name pos:line="12" pos:column="21">fmt_name<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><call><name pos:line="12" pos:column="30">getenv<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><literal type="string" pos:line="12" pos:column="37">"GIT_COMMITTER_NAME"<pos:position pos:line="12" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr></argument>,
			     <argument><expr><call><name pos:line="13" pos:column="30">getenv<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><literal type="string" pos:line="13" pos:column="37">"GIT_COMMITTER_EMAIL"<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="62"/></expr_stmt>

	<comment type="block" pos:line="15" pos:column="9">/* Does sb end with it already? */</comment>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">mine<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">.<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">len<pos:position pos:line="16" pos:column="21"/></name></name> <operator pos:line="16" pos:column="22">&lt;<pos:position pos:line="16" pos:column="26"/></operator> <name><name pos:line="16" pos:column="24">sb<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">.<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">len<pos:position pos:line="16" pos:column="30"/></name></name> <operator pos:line="16" pos:column="31">&amp;&amp;<pos:position pos:line="16" pos:column="41"/></operator>
	    <operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><call><name pos:line="17" pos:column="14">strcmp<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name><name pos:line="17" pos:column="21">mine<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">.<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">buf<pos:position pos:line="17" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="31">sb<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">.<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="34">buf<pos:position pos:line="17" pos:column="37"/></name></name> <operator pos:line="17" pos:column="38">+<pos:position pos:line="17" pos:column="39"/></operator> <name><name pos:line="17" pos:column="40">sb<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">.<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">len<pos:position pos:line="17" pos:column="46"/></name></name> <operator pos:line="17" pos:column="47">-<pos:position pos:line="17" pos:column="48"/></operator> <name><name pos:line="17" pos:column="49">mine<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">.<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="54">len<pos:position pos:line="17" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="59"/></condition><then pos:line="17" pos:column="59">
		<block type="pseudo"><goto pos:line="18" pos:column="17">goto <name pos:line="18" pos:column="22">exit<pos:position pos:line="18" pos:column="26"/></name>;<pos:position pos:line="18" pos:column="27"/></goto></block></then></if> <comment type="block" pos:line="18" pos:column="28">/* no need to duplicate */</comment>

	<comment type="block" pos:line="20" pos:column="9">/* Does it have any Signed-off-by: in the text */</comment>
	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">cp<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name><name pos:line="21" pos:column="19">sb<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">.<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">buf<pos:position pos:line="21" pos:column="25"/></name></name></expr>;<pos:position pos:line="21" pos:column="26"/></init>
	     <condition><expr><name pos:line="22" pos:column="14">cp<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">&amp;&amp;<pos:position pos:line="22" pos:column="27"/></operator> <operator pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">cp<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">&amp;&amp;<pos:position pos:line="22" pos:column="34"/></operator> <operator pos:line="22" pos:column="27">(<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">cp<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">=<pos:position pos:line="22" pos:column="32"/></operator> <call><name pos:line="22" pos:column="33">strstr<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><name pos:line="22" pos:column="40">cp<pos:position pos:line="22" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="44">sign_off_header<pos:position pos:line="22" pos:column="59"/></name></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call><operator pos:line="22" pos:column="60">)<pos:position pos:line="22" pos:column="61"/></operator> <operator pos:line="22" pos:column="62">!=<pos:position pos:line="22" pos:column="64"/></operator> <name pos:line="22" pos:column="65">NULL<pos:position pos:line="22" pos:column="69"/></name></expr>;<pos:position pos:line="22" pos:column="70"/></condition>
	     <incr><expr><name pos:line="23" pos:column="14">cp<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <call><name pos:line="23" pos:column="19">strchr<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">cp<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="30">'\n'<pos:position pos:line="23" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr></incr>)<pos:position pos:line="23" pos:column="36"/></control> <block pos:line="23" pos:column="37">{
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name><name pos:line="24" pos:column="21">sb<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">.<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">buf<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">==<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">cp<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">||<pos:position pos:line="24" pos:column="36"/></operator> <name><name pos:line="24" pos:column="37">cp<pos:position pos:line="24" pos:column="39"/></name><index pos:line="24" pos:column="39">[<expr><operator pos:line="24" pos:column="40">-<pos:position pos:line="24" pos:column="41"/></operator><literal type="number" pos:line="24" pos:column="41">1<pos:position pos:line="24" pos:column="42"/></literal></expr>]<pos:position pos:line="24" pos:column="43"/></index></name> <operator pos:line="24" pos:column="44">==<pos:position pos:line="24" pos:column="46"/></operator> <literal type="char" pos:line="24" pos:column="47">'\n'<pos:position pos:line="24" pos:column="51"/></literal></expr>)<pos:position pos:line="24" pos:column="52"/></condition><then pos:line="24" pos:column="52">
			<block type="pseudo"><break pos:line="25" pos:column="25">break;<pos:position pos:line="25" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">strbuf_addstr<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><operator pos:line="28" pos:column="23">&amp;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="24">sb<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="28">mine<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">.<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="33">buf<pos:position pos:line="28" pos:column="36"/></name></name> <operator pos:line="28" pos:column="37">+<pos:position pos:line="28" pos:column="38"/></operator> <operator pos:line="28" pos:column="39">!<pos:position pos:line="28" pos:column="40"/></operator><operator pos:line="28" pos:column="40">!<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="41">cp<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
<label><name pos:line="29" pos:column="1">exit<pos:position pos:line="29" pos:column="5"/></name>:<pos:position pos:line="29" pos:column="6"/></label>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">strbuf_release<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><operator pos:line="30" pos:column="24">&amp;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="25">mine<pos:position pos:line="30" pos:column="29"/></name></expr></argument>)<pos:position pos:line="30" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">state<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">msg<pos:position pos:line="31" pos:column="19"/></name></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <call><name pos:line="31" pos:column="22">strbuf_detach<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><operator pos:line="31" pos:column="36">&amp;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="37">sb<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="41">&amp;<pos:position pos:line="31" pos:column="46"/></operator><name><name pos:line="31" pos:column="42">state<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">-&gt;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="49">msg_len<pos:position pos:line="31" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4532_git-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">edit_branch_description<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">branch_name<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">fp<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">buf<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">STRBUF_INIT<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">name<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><name pos:line="6" pos:column="30">STRBUF_INIT<pos:position pos:line="6" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">read_branch_desc<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><operator pos:line="8" pos:column="26">&amp;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="27">buf<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="32">branch_name<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name><name pos:line="9" pos:column="14">buf<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">.<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">len<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">||<pos:position pos:line="9" pos:column="24"/></operator> <name><name pos:line="9" pos:column="25">buf<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">.<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">buf<pos:position pos:line="9" pos:column="32"/></name><index pos:line="9" pos:column="32">[<expr><name><name pos:line="9" pos:column="33">buf<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">.<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">len<pos:position pos:line="9" pos:column="40"/></name></name><operator pos:line="9" pos:column="40">-<pos:position pos:line="9" pos:column="41"/></operator><literal type="number" pos:line="9" pos:column="41">1<pos:position pos:line="9" pos:column="42"/></literal></expr>]<pos:position pos:line="9" pos:column="43"/></index></name> <operator pos:line="9" pos:column="44">!=<pos:position pos:line="9" pos:column="46"/></operator> <literal type="char" pos:line="9" pos:column="47">'\n'<pos:position pos:line="9" pos:column="51"/></literal></expr>)<pos:position pos:line="9" pos:column="52"/></condition><then pos:line="9" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">strbuf_addch<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="31">buf<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="36">'\n'<pos:position pos:line="10" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">strbuf_commented_addf<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><operator pos:line="11" pos:column="31">&amp;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="32">buf<pos:position pos:line="11" pos:column="35"/></name></expr></argument>,
		    <argument><expr><literal type="string" pos:line="12" pos:column="21">"Please edit the description for the branch\n"<pos:position pos:line="12" pos:column="67"/></literal>
		    <literal type="string" pos:line="13" pos:column="21">"  %s\n"<pos:position pos:line="13" pos:column="29"/></literal>
		    <literal type="string" pos:line="14" pos:column="21">"Lines starting with '%c' will be stripped.\n"<pos:position pos:line="14" pos:column="67"/></literal></expr></argument>,
		    <argument><expr><name pos:line="15" pos:column="21">branch_name<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">comment_line_char<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">fp<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">fopen<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><call><name pos:line="16" pos:column="20">git_path<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">edit_description<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="48">"w"<pos:position pos:line="16" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><call><name pos:line="17" pos:column="14">fwrite<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name><name pos:line="17" pos:column="21">buf<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">.<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">buf<pos:position pos:line="17" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="30">1<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="33">buf<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">.<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">len<pos:position pos:line="17" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">fp<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call> <operator pos:line="17" pos:column="46">&lt;<pos:position pos:line="17" pos:column="50"/></operator> <name><name pos:line="17" pos:column="48">buf<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">.<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="52">len<pos:position pos:line="17" pos:column="55"/></name></name><operator pos:line="17" pos:column="55">)<pos:position pos:line="17" pos:column="56"/></operator> <operator pos:line="17" pos:column="57">||<pos:position pos:line="17" pos:column="59"/></operator> <call><name pos:line="17" pos:column="60">fclose<pos:position pos:line="17" pos:column="66"/></name><argument_list pos:line="17" pos:column="66">(<argument><expr><name pos:line="17" pos:column="67">fp<pos:position pos:line="17" pos:column="69"/></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="71"/></condition><then pos:line="17" pos:column="71"> <block pos:line="17" pos:column="72">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">strbuf_release<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><operator pos:line="18" pos:column="32">&amp;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="33">buf<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><call><name pos:line="19" pos:column="24">error<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><call><name pos:line="19" pos:column="30">_<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><literal type="string" pos:line="19" pos:column="32">"could not write branch description template: %s"<pos:position pos:line="19" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="82"/></argument_list></call></expr></argument>,
			     <argument><expr><call><name pos:line="20" pos:column="30">strerror<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">errno<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">strbuf_reset<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><operator pos:line="22" pos:column="22">&amp;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="23">buf<pos:position pos:line="22" pos:column="26"/></name></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">launch_editor<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><call><name pos:line="23" pos:column="27">git_path<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">edit_description<pos:position pos:line="23" pos:column="52"/></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="23" pos:column="55">&amp;<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="56">buf<pos:position pos:line="23" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="61">NULL<pos:position pos:line="23" pos:column="65"/></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="67"/></condition><then pos:line="23" pos:column="67"> <block pos:line="23" pos:column="68">{
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">strbuf_release<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><operator pos:line="24" pos:column="32">&amp;<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="33">buf<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
		<return pos:line="25" pos:column="17">return <expr><operator pos:line="25" pos:column="24">-<pos:position pos:line="25" pos:column="25"/></operator><literal type="number" pos:line="25" pos:column="25">1<pos:position pos:line="25" pos:column="26"/></literal></expr>;<pos:position pos:line="25" pos:column="27"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">stripspace<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><operator pos:line="27" pos:column="20">&amp;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="21">buf<pos:position pos:line="27" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="26">1<pos:position pos:line="27" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="29" pos:column="9">strbuf_addf<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><operator pos:line="29" pos:column="21">&amp;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="22">name<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="28">"branch.%s.description"<pos:position pos:line="29" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="53">branch_name<pos:position pos:line="29" pos:column="64"/></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">status<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">git_config_set<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name><name pos:line="30" pos:column="33">name<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">.<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="38">buf<pos:position pos:line="30" pos:column="41"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="30" pos:column="43">buf<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">.<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="47">len<pos:position pos:line="30" pos:column="50"/></name></name></expr> ?<pos:position pos:line="30" pos:column="52"/></condition><then pos:line="30" pos:column="52"> <expr><name><name pos:line="30" pos:column="53">buf<pos:position pos:line="30" pos:column="56"/></name><operator pos:line="30" pos:column="56">.<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="57">buf<pos:position pos:line="30" pos:column="60"/></name></name></expr> <pos:position pos:line="30" pos:column="61"/></then><else pos:line="30" pos:column="61">: <expr><name pos:line="30" pos:column="63">NULL<pos:position pos:line="30" pos:column="67"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">strbuf_release<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><operator pos:line="31" pos:column="24">&amp;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="25">name<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">strbuf_release<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><operator pos:line="32" pos:column="24">&amp;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="25">buf<pos:position pos:line="32" pos:column="28"/></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>

	<return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">status<pos:position pos:line="34" pos:column="22"/></name></expr>;<pos:position pos:line="34" pos:column="23"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

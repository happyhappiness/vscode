<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_813_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tar_filter_config<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">var<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">value<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">void<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">data<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">archiver<pos:position pos:line="3" pos:column="24"/></name></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">ar<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">name<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">type<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">namelen<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">parse_config_key<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">var<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="35">"tar"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="42">&amp;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="43">name<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="49">&amp;<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="50">namelen<pos:position pos:line="8" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="59">&amp;<pos:position pos:line="8" pos:column="64"/></operator><name pos:line="8" pos:column="60">type<pos:position pos:line="8" pos:column="64"/></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call> <operator pos:line="8" pos:column="66">&lt;<pos:position pos:line="8" pos:column="70"/></operator> <literal type="number" pos:line="8" pos:column="68">0<pos:position pos:line="8" pos:column="69"/></literal> <operator pos:line="8" pos:column="70">||<pos:position pos:line="8" pos:column="72"/></operator> <operator pos:line="8" pos:column="73">!<pos:position pos:line="8" pos:column="74"/></operator><name pos:line="8" pos:column="74">name<pos:position pos:line="8" pos:column="78"/></name></expr>)<pos:position pos:line="8" pos:column="79"/></condition><then pos:line="8" pos:column="79">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="11" pos:column="9">ar<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">find_tar_filter<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">name<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="36">namelen<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">ar<pos:position pos:line="12" pos:column="16"/></name></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17"> <block pos:line="12" pos:column="18">{
		<expr_stmt><expr><name pos:line="13" pos:column="17">ar<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <call><name pos:line="13" pos:column="22">xcalloc<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><literal type="number" pos:line="13" pos:column="30">1<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="33">sizeof<argument_list pos:line="13" pos:column="39">(<argument><expr><operator pos:line="13" pos:column="40">*<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="41">ar<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="14" pos:column="17">ar<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">name<pos:position pos:line="14" pos:column="25"/></name></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="28">xmemdupz<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">name<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">namelen<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">ar<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">-&gt;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="21">write_archive<pos:position pos:line="15" pos:column="34"/></name></name> <operator pos:line="15" pos:column="35">=<pos:position pos:line="15" pos:column="36"/></operator> <name pos:line="15" pos:column="37">write_tar_filter_archive<pos:position pos:line="15" pos:column="61"/></name></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">ar<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">flags<pos:position pos:line="16" pos:column="26"/></name></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">ARCHIVER_WANT_COMPRESSION_LEVELS<pos:position pos:line="16" pos:column="61"/></name></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">ALLOC_GROW<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">tar_filters<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">nr_tar_filters<pos:position pos:line="17" pos:column="55"/></name> <operator pos:line="17" pos:column="56">+<pos:position pos:line="17" pos:column="57"/></operator> <literal type="number" pos:line="17" pos:column="58">1<pos:position pos:line="17" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="61">alloc_tar_filters<pos:position pos:line="17" pos:column="78"/></name></expr></argument>)<pos:position pos:line="17" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">tar_filters<pos:position pos:line="18" pos:column="28"/></name><index pos:line="18" pos:column="28">[<expr><name pos:line="18" pos:column="29">nr_tar_filters<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">++<pos:position pos:line="18" pos:column="45"/></operator></expr>]<pos:position pos:line="18" pos:column="46"/></index></name> <operator pos:line="18" pos:column="47">=<pos:position pos:line="18" pos:column="48"/></operator> <name pos:line="18" pos:column="49">ar<pos:position pos:line="18" pos:column="51"/></name></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">strcmp<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">type<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="27">"command"<pos:position pos:line="21" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="38"/></condition><then pos:line="21" pos:column="38"> <block pos:line="21" pos:column="39">{
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">value<pos:position pos:line="22" pos:column="27"/></name></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28">
			<block type="pseudo"><return pos:line="23" pos:column="25">return <expr><call><name pos:line="23" pos:column="32">config_error_nonbool<pos:position pos:line="23" pos:column="52"/></name><argument_list pos:line="23" pos:column="52">(<argument><expr><name pos:line="23" pos:column="53">var<pos:position pos:line="23" pos:column="56"/></name></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="58"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">free<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name><name pos:line="24" pos:column="22">ar<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">data<pos:position pos:line="24" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">ar<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">data<pos:position pos:line="25" pos:column="25"/></name></name> <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <call><name pos:line="25" pos:column="28">xstrdup<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name pos:line="25" pos:column="36">value<pos:position pos:line="25" pos:column="41"/></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><literal type="number" pos:line="26" pos:column="24">0<pos:position pos:line="26" pos:column="25"/></literal></expr>;<pos:position pos:line="26" pos:column="26"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><call><name pos:line="28" pos:column="14">strcmp<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">type<pos:position pos:line="28" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="27">"remote"<pos:position pos:line="28" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="37"/></condition><then pos:line="28" pos:column="37"> <block pos:line="28" pos:column="38">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">git_config_bool<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">var<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">value<pos:position pos:line="29" pos:column="47"/></name></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="49"/></condition><then pos:line="29" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="25">ar<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">-&gt;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="29">flags<pos:position pos:line="30" pos:column="34"/></name></name> <operator pos:line="30" pos:column="35">|=<pos:position pos:line="30" pos:column="37"/></operator> <name pos:line="30" pos:column="38">ARCHIVER_REMOTE<pos:position pos:line="30" pos:column="53"/></name></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt></block></then>
		<else pos:line="31" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="25">ar<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">flags<pos:position pos:line="32" pos:column="34"/></name></name> <operator pos:line="32" pos:column="35">&amp;=<pos:position pos:line="32" pos:column="41"/></operator> <operator pos:line="32" pos:column="38">~<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="39">ARCHIVER_REMOTE<pos:position pos:line="32" pos:column="54"/></name></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt></block></else></if>
		<return pos:line="33" pos:column="17">return <expr><literal type="number" pos:line="33" pos:column="24">0<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<return pos:line="36" pos:column="9">return <expr><literal type="number" pos:line="36" pos:column="16">0<pos:position pos:line="36" pos:column="17"/></literal></expr>;<pos:position pos:line="36" pos:column="18"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

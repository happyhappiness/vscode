<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5505_git-2.10.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">prepare_to_clone_next_submodule<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">cache_entry<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">ce<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
					   <parameter><decl><type><name><name pos:line="2" pos:column="44">struct<pos:position pos:line="2" pos:column="50"/></name> <name pos:line="2" pos:column="51">child_process<pos:position pos:line="2" pos:column="64"/></name></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">child<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
					   <parameter><decl><type><name><name pos:line="3" pos:column="44">struct<pos:position pos:line="3" pos:column="50"/></name> <name pos:line="3" pos:column="51">submodule_update_clone<pos:position pos:line="3" pos:column="73"/></name></name> <modifier pos:line="3" pos:column="74">*<pos:position pos:line="3" pos:column="75"/></modifier></type><name pos:line="3" pos:column="75">suc<pos:position pos:line="3" pos:column="78"/></name></decl></parameter>,
					   <parameter><decl><type><name><name pos:line="4" pos:column="44">struct<pos:position pos:line="4" pos:column="50"/></name> <name pos:line="4" pos:column="51">strbuf<pos:position pos:line="4" pos:column="57"/></name></name> <modifier pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></modifier></type><name pos:line="4" pos:column="59">out<pos:position pos:line="4" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="63"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name><name pos:line="6" pos:column="15">struct<pos:position pos:line="6" pos:column="21"/></name> <name pos:line="6" pos:column="22">submodule<pos:position pos:line="6" pos:column="31"/></name></name> <modifier pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></modifier></type><name pos:line="6" pos:column="33">sub<pos:position pos:line="6" pos:column="36"/></name> <init pos:line="6" pos:column="37">= <expr><name pos:line="6" pos:column="39">NULL<pos:position pos:line="6" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">displaypath_sb<pos:position pos:line="7" pos:column="37"/></name> <init pos:line="7" pos:column="38">= <expr><name pos:line="7" pos:column="40">STRBUF_INIT<pos:position pos:line="7" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">sb<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name pos:line="8" pos:column="28">STRBUF_INIT<pos:position pos:line="8" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">displaypath<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><name pos:line="9" pos:column="35">NULL<pos:position pos:line="9" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">url<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><name pos:line="10" pos:column="21">NULL<pos:position pos:line="10" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">needs_cloning<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><literal type="number" pos:line="11" pos:column="29">0<pos:position pos:line="11" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">ce_stage<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">ce<pos:position pos:line="13" pos:column="24"/></name></expr></argument>)<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name><name pos:line="14" pos:column="21">suc<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">recursive_prefix<pos:position pos:line="14" pos:column="42"/></name></name></expr>)<pos:position pos:line="14" pos:column="43"/></condition><then pos:line="14" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">strbuf_addf<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><operator pos:line="15" pos:column="37">&amp;<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="38">sb<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="42">"%s/%s"<pos:position pos:line="15" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="51">suc<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">-&gt;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="56">recursive_prefix<pos:position pos:line="15" pos:column="72"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="74">ce<pos:position pos:line="15" pos:column="76"/></name><operator pos:line="15" pos:column="76">-&gt;<pos:position pos:line="15" pos:column="81"/></operator><name pos:line="15" pos:column="78">name<pos:position pos:line="15" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="84"/></expr_stmt></block></then>
		<else pos:line="16" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">strbuf_addstr<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><operator pos:line="17" pos:column="39">&amp;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="40">sb<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="44">ce<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">name<pos:position pos:line="17" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">strbuf_addf<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">out<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="34">_<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><literal type="string" pos:line="18" pos:column="36">"Skipping unmerged submodule %s"<pos:position pos:line="18" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="71">sb<pos:position pos:line="18" pos:column="73"/></name><operator pos:line="18" pos:column="73">.<pos:position pos:line="18" pos:column="74"/></operator><name pos:line="18" pos:column="74">buf<pos:position pos:line="18" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">strbuf_addch<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">out<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="35">'\n'<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
		<goto pos:line="20" pos:column="17">goto <name pos:line="20" pos:column="22">cleanup<pos:position pos:line="20" pos:column="29"/></name>;<pos:position pos:line="20" pos:column="30"/></goto>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">sub<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">submodule_from_path<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">null_sha1<pos:position pos:line="23" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="46">ce<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">-&gt;<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="50">name<pos:position pos:line="23" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">suc<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">recursive_prefix<pos:position pos:line="25" pos:column="34"/></name></name></expr>)<pos:position pos:line="25" pos:column="35"/></condition><then pos:line="25" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="17">displaypath<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <call><name pos:line="26" pos:column="31">relative_path<pos:position pos:line="26" pos:column="44"/></name><argument_list pos:line="26" pos:column="44">(<argument><expr><name><name pos:line="26" pos:column="45">suc<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">-&gt;<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="50">recursive_prefix<pos:position pos:line="26" pos:column="66"/></name></name></expr></argument>,
					    <argument><expr><name><name pos:line="27" pos:column="45">ce<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">name<pos:position pos:line="27" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="55">&amp;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="56">displaypath_sb<pos:position pos:line="27" pos:column="70"/></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="72"/></expr_stmt></block></then>
	<else pos:line="28" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="17">displaypath<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">=<pos:position pos:line="29" pos:column="30"/></operator> <name><name pos:line="29" pos:column="31">ce<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">-&gt;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="35">name<pos:position pos:line="29" pos:column="39"/></name></name></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt></block></else></if>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">sub<pos:position pos:line="31" pos:column="17"/></name></expr>)<pos:position pos:line="31" pos:column="18"/></condition><then pos:line="31" pos:column="18"> <block pos:line="31" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">next_submodule_warn_missing<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">(<argument><expr><name pos:line="32" pos:column="45">suc<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">out<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="55">displaypath<pos:position pos:line="32" pos:column="66"/></name></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="68"/></expr_stmt>
		<goto pos:line="33" pos:column="17">goto <name pos:line="33" pos:column="22">cleanup<pos:position pos:line="33" pos:column="29"/></name>;<pos:position pos:line="33" pos:column="30"/></goto>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">suc<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">-&gt;<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="18">update<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">.<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">type<pos:position pos:line="36" pos:column="29"/></name></name> <operator pos:line="36" pos:column="30">==<pos:position pos:line="36" pos:column="32"/></operator> <name pos:line="36" pos:column="33">SM_UPDATE_NONE<pos:position pos:line="36" pos:column="47"/></name>
	    <operator pos:line="37" pos:column="13">||<pos:position pos:line="37" pos:column="15"/></operator> <operator pos:line="37" pos:column="16">(<pos:position pos:line="37" pos:column="17"/></operator><name><name pos:line="37" pos:column="17">suc<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="22">update<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">.<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="29">type<pos:position pos:line="37" pos:column="33"/></name></name> <operator pos:line="37" pos:column="34">==<pos:position pos:line="37" pos:column="36"/></operator> <name pos:line="37" pos:column="37">SM_UPDATE_UNSPECIFIED<pos:position pos:line="37" pos:column="58"/></name>
		<operator pos:line="38" pos:column="17">&amp;&amp;<pos:position pos:line="38" pos:column="27"/></operator> <name><name pos:line="38" pos:column="20">sub<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">update_strategy<pos:position pos:line="38" pos:column="40"/></name><operator pos:line="38" pos:column="40">.<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="41">type<pos:position pos:line="38" pos:column="45"/></name></name> <operator pos:line="38" pos:column="46">==<pos:position pos:line="38" pos:column="48"/></operator> <name pos:line="38" pos:column="49">SM_UPDATE_NONE<pos:position pos:line="38" pos:column="63"/></name><operator pos:line="38" pos:column="63">)<pos:position pos:line="38" pos:column="64"/></operator></expr>)<pos:position pos:line="38" pos:column="65"/></condition><then pos:line="38" pos:column="65"> <block pos:line="38" pos:column="66">{
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">strbuf_addf<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><name pos:line="39" pos:column="29">out<pos:position pos:line="39" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="34">_<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument><expr><literal type="string" pos:line="39" pos:column="36">"Skipping submodule '%s'"<pos:position pos:line="39" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="39" pos:column="64">displaypath<pos:position pos:line="39" pos:column="75"/></name></expr></argument>)<pos:position pos:line="39" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">strbuf_addch<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">out<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="40" pos:column="35">'\n'<pos:position pos:line="40" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
		<goto pos:line="41" pos:column="17">goto <name pos:line="41" pos:column="22">cleanup<pos:position pos:line="41" pos:column="29"/></name>;<pos:position pos:line="41" pos:column="30"/></goto>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="44" pos:column="9">/*
	 * Looking up the url in .git/config.
	 * We must not fall back to .gitmodules as we only want
	 * to process configured submodules.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">strbuf_reset<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">(<argument><expr><operator pos:line="49" pos:column="22">&amp;<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="23">sb<pos:position pos:line="49" pos:column="25"/></name></expr></argument>)<pos:position pos:line="49" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">strbuf_addf<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><operator pos:line="50" pos:column="21">&amp;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="22">sb<pos:position pos:line="50" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="26">"submodule.%s.url"<pos:position pos:line="50" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="46">sub<pos:position pos:line="50" pos:column="49"/></name><operator pos:line="50" pos:column="49">-&gt;<pos:position pos:line="50" pos:column="54"/></operator><name pos:line="50" pos:column="51">name<pos:position pos:line="50" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">git_config_get_string<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">(<argument><expr><name><name pos:line="51" pos:column="31">sb<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">.<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="34">buf<pos:position pos:line="51" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="39">&amp;<pos:position pos:line="51" pos:column="44"/></operator><name pos:line="51" pos:column="40">url<pos:position pos:line="51" pos:column="43"/></name></expr></argument>)<pos:position pos:line="51" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="45"/></expr_stmt>
	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><operator pos:line="52" pos:column="13">!<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">url<pos:position pos:line="52" pos:column="17"/></name></expr>)<pos:position pos:line="52" pos:column="18"/></condition><then pos:line="52" pos:column="18"> <block pos:line="52" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">next_submodule_warn_missing<pos:position pos:line="53" pos:column="44"/></name><argument_list pos:line="53" pos:column="44">(<argument><expr><name pos:line="53" pos:column="45">suc<pos:position pos:line="53" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="50">out<pos:position pos:line="53" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="55">displaypath<pos:position pos:line="53" pos:column="66"/></name></expr></argument>)<pos:position pos:line="53" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="68"/></expr_stmt>
		<goto pos:line="54" pos:column="17">goto <name pos:line="54" pos:column="22">cleanup<pos:position pos:line="54" pos:column="29"/></name>;<pos:position pos:line="54" pos:column="30"/></goto>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="57" pos:column="9">strbuf_reset<pos:position pos:line="57" pos:column="21"/></name><argument_list pos:line="57" pos:column="21">(<argument><expr><operator pos:line="57" pos:column="22">&amp;<pos:position pos:line="57" pos:column="27"/></operator><name pos:line="57" pos:column="23">sb<pos:position pos:line="57" pos:column="25"/></name></expr></argument>)<pos:position pos:line="57" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">strbuf_addf<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><operator pos:line="58" pos:column="21">&amp;<pos:position pos:line="58" pos:column="26"/></operator><name pos:line="58" pos:column="22">sb<pos:position pos:line="58" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="26">"%s/.git"<pos:position pos:line="58" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="37">ce<pos:position pos:line="58" pos:column="39"/></name><operator pos:line="58" pos:column="39">-&gt;<pos:position pos:line="58" pos:column="44"/></operator><name pos:line="58" pos:column="41">name<pos:position pos:line="58" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name pos:line="59" pos:column="9">needs_cloning<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">=<pos:position pos:line="59" pos:column="24"/></operator> <operator pos:line="59" pos:column="25">!<pos:position pos:line="59" pos:column="26"/></operator><call><name pos:line="59" pos:column="26">file_exists<pos:position pos:line="59" pos:column="37"/></name><argument_list pos:line="59" pos:column="37">(<argument><expr><name><name pos:line="59" pos:column="38">sb<pos:position pos:line="59" pos:column="40"/></name><operator pos:line="59" pos:column="40">.<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="41">buf<pos:position pos:line="59" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="61" pos:column="9">strbuf_reset<pos:position pos:line="61" pos:column="21"/></name><argument_list pos:line="61" pos:column="21">(<argument><expr><operator pos:line="61" pos:column="22">&amp;<pos:position pos:line="61" pos:column="27"/></operator><name pos:line="61" pos:column="23">sb<pos:position pos:line="61" pos:column="25"/></name></expr></argument>)<pos:position pos:line="61" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">strbuf_addf<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><operator pos:line="62" pos:column="21">&amp;<pos:position pos:line="62" pos:column="26"/></operator><name pos:line="62" pos:column="22">sb<pos:position pos:line="62" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="26">"%06o %s %d %d\t%s\n"<pos:position pos:line="62" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="49">ce<pos:position pos:line="62" pos:column="51"/></name><operator pos:line="62" pos:column="51">-&gt;<pos:position pos:line="62" pos:column="56"/></operator><name pos:line="62" pos:column="53">ce_mode<pos:position pos:line="62" pos:column="60"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="63" pos:column="25">sha1_to_hex<pos:position pos:line="63" pos:column="36"/></name><argument_list pos:line="63" pos:column="36">(<argument><expr><name><name pos:line="63" pos:column="37">ce<pos:position pos:line="63" pos:column="39"/></name><operator pos:line="63" pos:column="39">-&gt;<pos:position pos:line="63" pos:column="44"/></operator><name pos:line="63" pos:column="41">sha1<pos:position pos:line="63" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="48">ce_stage<pos:position pos:line="63" pos:column="56"/></name><argument_list pos:line="63" pos:column="56">(<argument><expr><name pos:line="63" pos:column="57">ce<pos:position pos:line="63" pos:column="59"/></name></expr></argument>)<pos:position pos:line="63" pos:column="60"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="64" pos:column="25">needs_cloning<pos:position pos:line="64" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="40">ce<pos:position pos:line="64" pos:column="42"/></name><operator pos:line="64" pos:column="42">-&gt;<pos:position pos:line="64" pos:column="47"/></operator><name pos:line="64" pos:column="44">name<pos:position pos:line="64" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">string_list_append<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><operator pos:line="65" pos:column="28">&amp;<pos:position pos:line="65" pos:column="33"/></operator><name><name pos:line="65" pos:column="29">suc<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">-&gt;<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="34">projectlines<pos:position pos:line="65" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="48">sb<pos:position pos:line="65" pos:column="50"/></name><operator pos:line="65" pos:column="50">.<pos:position pos:line="65" pos:column="51"/></operator><name pos:line="65" pos:column="51">buf<pos:position pos:line="65" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="56"/></expr_stmt>

	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><operator pos:line="67" pos:column="13">!<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="14">needs_cloning<pos:position pos:line="67" pos:column="27"/></name></expr>)<pos:position pos:line="67" pos:column="28"/></condition><then pos:line="67" pos:column="28">
		<block type="pseudo"><goto pos:line="68" pos:column="17">goto <name pos:line="68" pos:column="22">cleanup<pos:position pos:line="68" pos:column="29"/></name>;<pos:position pos:line="68" pos:column="30"/></goto></block></then></if>

	<expr_stmt><expr><name><name pos:line="70" pos:column="9">child<pos:position pos:line="70" pos:column="14"/></name><operator pos:line="70" pos:column="14">-&gt;<pos:position pos:line="70" pos:column="19"/></operator><name pos:line="70" pos:column="16">git_cmd<pos:position pos:line="70" pos:column="23"/></name></name> <operator pos:line="70" pos:column="24">=<pos:position pos:line="70" pos:column="25"/></operator> <literal type="number" pos:line="70" pos:column="26">1<pos:position pos:line="70" pos:column="27"/></literal></expr>;<pos:position pos:line="70" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="71" pos:column="9">child<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">-&gt;<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="16">no_stdin<pos:position pos:line="71" pos:column="24"/></name></name> <operator pos:line="71" pos:column="25">=<pos:position pos:line="71" pos:column="26"/></operator> <literal type="number" pos:line="71" pos:column="27">1<pos:position pos:line="71" pos:column="28"/></literal></expr>;<pos:position pos:line="71" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="72" pos:column="9">child<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">-&gt;<pos:position pos:line="72" pos:column="19"/></operator><name pos:line="72" pos:column="16">stdout_to_stderr<pos:position pos:line="72" pos:column="32"/></name></name> <operator pos:line="72" pos:column="33">=<pos:position pos:line="72" pos:column="34"/></operator> <literal type="number" pos:line="72" pos:column="35">1<pos:position pos:line="72" pos:column="36"/></literal></expr>;<pos:position pos:line="72" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="73" pos:column="9">child<pos:position pos:line="73" pos:column="14"/></name><operator pos:line="73" pos:column="14">-&gt;<pos:position pos:line="73" pos:column="19"/></operator><name pos:line="73" pos:column="16">err<pos:position pos:line="73" pos:column="19"/></name></name> <operator pos:line="73" pos:column="20">=<pos:position pos:line="73" pos:column="21"/></operator> <operator pos:line="73" pos:column="22">-<pos:position pos:line="73" pos:column="23"/></operator><literal type="number" pos:line="73" pos:column="23">1<pos:position pos:line="73" pos:column="24"/></literal></expr>;<pos:position pos:line="73" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="74" pos:column="9">argv_array_push<pos:position pos:line="74" pos:column="24"/></name><argument_list pos:line="74" pos:column="24">(<argument><expr><operator pos:line="74" pos:column="25">&amp;<pos:position pos:line="74" pos:column="30"/></operator><name><name pos:line="74" pos:column="26">child<pos:position pos:line="74" pos:column="31"/></name><operator pos:line="74" pos:column="31">-&gt;<pos:position pos:line="74" pos:column="36"/></operator><name pos:line="74" pos:column="33">args<pos:position pos:line="74" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="39">"submodule--helper"<pos:position pos:line="74" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="75" pos:column="9">argv_array_push<pos:position pos:line="75" pos:column="24"/></name><argument_list pos:line="75" pos:column="24">(<argument><expr><operator pos:line="75" pos:column="25">&amp;<pos:position pos:line="75" pos:column="30"/></operator><name><name pos:line="75" pos:column="26">child<pos:position pos:line="75" pos:column="31"/></name><operator pos:line="75" pos:column="31">-&gt;<pos:position pos:line="75" pos:column="36"/></operator><name pos:line="75" pos:column="33">args<pos:position pos:line="75" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="39">"clone"<pos:position pos:line="75" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="48"/></expr_stmt>
	<if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name><name pos:line="76" pos:column="13">suc<pos:position pos:line="76" pos:column="16"/></name><operator pos:line="76" pos:column="16">-&gt;<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="18">quiet<pos:position pos:line="76" pos:column="23"/></name></name></expr>)<pos:position pos:line="76" pos:column="24"/></condition><then pos:line="76" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="17">argv_array_push<pos:position pos:line="77" pos:column="32"/></name><argument_list pos:line="77" pos:column="32">(<argument><expr><operator pos:line="77" pos:column="33">&amp;<pos:position pos:line="77" pos:column="38"/></operator><name><name pos:line="77" pos:column="34">child<pos:position pos:line="77" pos:column="39"/></name><operator pos:line="77" pos:column="39">-&gt;<pos:position pos:line="77" pos:column="44"/></operator><name pos:line="77" pos:column="41">args<pos:position pos:line="77" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="47">"--quiet"<pos:position pos:line="77" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="58"/></expr_stmt></block></then></if>
	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name><name pos:line="78" pos:column="13">suc<pos:position pos:line="78" pos:column="16"/></name><operator pos:line="78" pos:column="16">-&gt;<pos:position pos:line="78" pos:column="21"/></operator><name pos:line="78" pos:column="18">prefix<pos:position pos:line="78" pos:column="24"/></name></name></expr>)<pos:position pos:line="78" pos:column="25"/></condition><then pos:line="78" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="17">argv_array_pushl<pos:position pos:line="79" pos:column="33"/></name><argument_list pos:line="79" pos:column="33">(<argument><expr><operator pos:line="79" pos:column="34">&amp;<pos:position pos:line="79" pos:column="39"/></operator><name><name pos:line="79" pos:column="35">child<pos:position pos:line="79" pos:column="40"/></name><operator pos:line="79" pos:column="40">-&gt;<pos:position pos:line="79" pos:column="45"/></operator><name pos:line="79" pos:column="42">args<pos:position pos:line="79" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="48">"--prefix"<pos:position pos:line="79" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="60">suc<pos:position pos:line="79" pos:column="63"/></name><operator pos:line="79" pos:column="63">-&gt;<pos:position pos:line="79" pos:column="68"/></operator><name pos:line="79" pos:column="65">prefix<pos:position pos:line="79" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="73">NULL<pos:position pos:line="79" pos:column="77"/></name></expr></argument>)<pos:position pos:line="79" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="79"/></expr_stmt></block></then></if>
	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name><name pos:line="80" pos:column="13">suc<pos:position pos:line="80" pos:column="16"/></name><operator pos:line="80" pos:column="16">-&gt;<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="18">recommend_shallow<pos:position pos:line="80" pos:column="35"/></name></name> <operator pos:line="80" pos:column="36">&amp;&amp;<pos:position pos:line="80" pos:column="46"/></operator> <name><name pos:line="80" pos:column="39">sub<pos:position pos:line="80" pos:column="42"/></name><operator pos:line="80" pos:column="42">-&gt;<pos:position pos:line="80" pos:column="47"/></operator><name pos:line="80" pos:column="44">recommend_shallow<pos:position pos:line="80" pos:column="61"/></name></name> <operator pos:line="80" pos:column="62">==<pos:position pos:line="80" pos:column="64"/></operator> <literal type="number" pos:line="80" pos:column="65">1<pos:position pos:line="80" pos:column="66"/></literal></expr>)<pos:position pos:line="80" pos:column="67"/></condition><then pos:line="80" pos:column="67">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="17">argv_array_push<pos:position pos:line="81" pos:column="32"/></name><argument_list pos:line="81" pos:column="32">(<argument><expr><operator pos:line="81" pos:column="33">&amp;<pos:position pos:line="81" pos:column="38"/></operator><name><name pos:line="81" pos:column="34">child<pos:position pos:line="81" pos:column="39"/></name><operator pos:line="81" pos:column="39">-&gt;<pos:position pos:line="81" pos:column="44"/></operator><name pos:line="81" pos:column="41">args<pos:position pos:line="81" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="47">"--depth=1"<pos:position pos:line="81" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="60"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">argv_array_pushl<pos:position pos:line="82" pos:column="25"/></name><argument_list pos:line="82" pos:column="25">(<argument><expr><operator pos:line="82" pos:column="26">&amp;<pos:position pos:line="82" pos:column="31"/></operator><name><name pos:line="82" pos:column="27">child<pos:position pos:line="82" pos:column="32"/></name><operator pos:line="82" pos:column="32">-&gt;<pos:position pos:line="82" pos:column="37"/></operator><name pos:line="82" pos:column="34">args<pos:position pos:line="82" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="40">"--path"<pos:position pos:line="82" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="50">sub<pos:position pos:line="82" pos:column="53"/></name><operator pos:line="82" pos:column="53">-&gt;<pos:position pos:line="82" pos:column="58"/></operator><name pos:line="82" pos:column="55">path<pos:position pos:line="82" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="61">NULL<pos:position pos:line="82" pos:column="65"/></name></expr></argument>)<pos:position pos:line="82" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="83" pos:column="9">argv_array_pushl<pos:position pos:line="83" pos:column="25"/></name><argument_list pos:line="83" pos:column="25">(<argument><expr><operator pos:line="83" pos:column="26">&amp;<pos:position pos:line="83" pos:column="31"/></operator><name><name pos:line="83" pos:column="27">child<pos:position pos:line="83" pos:column="32"/></name><operator pos:line="83" pos:column="32">-&gt;<pos:position pos:line="83" pos:column="37"/></operator><name pos:line="83" pos:column="34">args<pos:position pos:line="83" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="40">"--name"<pos:position pos:line="83" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="50">sub<pos:position pos:line="83" pos:column="53"/></name><operator pos:line="83" pos:column="53">-&gt;<pos:position pos:line="83" pos:column="58"/></operator><name pos:line="83" pos:column="55">name<pos:position pos:line="83" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="61">NULL<pos:position pos:line="83" pos:column="65"/></name></expr></argument>)<pos:position pos:line="83" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="84" pos:column="9">argv_array_pushl<pos:position pos:line="84" pos:column="25"/></name><argument_list pos:line="84" pos:column="25">(<argument><expr><operator pos:line="84" pos:column="26">&amp;<pos:position pos:line="84" pos:column="31"/></operator><name><name pos:line="84" pos:column="27">child<pos:position pos:line="84" pos:column="32"/></name><operator pos:line="84" pos:column="32">-&gt;<pos:position pos:line="84" pos:column="37"/></operator><name pos:line="84" pos:column="34">args<pos:position pos:line="84" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="40">"--url"<pos:position pos:line="84" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="49">url<pos:position pos:line="84" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="54">NULL<pos:position pos:line="84" pos:column="58"/></name></expr></argument>)<pos:position pos:line="84" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="60"/></expr_stmt>
	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name><name pos:line="85" pos:column="13">suc<pos:position pos:line="85" pos:column="16"/></name><operator pos:line="85" pos:column="16">-&gt;<pos:position pos:line="85" pos:column="21"/></operator><name pos:line="85" pos:column="18">reference<pos:position pos:line="85" pos:column="27"/></name></name></expr>)<pos:position pos:line="85" pos:column="28"/></condition><then pos:line="85" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="17">argv_array_push<pos:position pos:line="86" pos:column="32"/></name><argument_list pos:line="86" pos:column="32">(<argument><expr><operator pos:line="86" pos:column="33">&amp;<pos:position pos:line="86" pos:column="38"/></operator><name><name pos:line="86" pos:column="34">child<pos:position pos:line="86" pos:column="39"/></name><operator pos:line="86" pos:column="39">-&gt;<pos:position pos:line="86" pos:column="44"/></operator><name pos:line="86" pos:column="41">args<pos:position pos:line="86" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="47">suc<pos:position pos:line="86" pos:column="50"/></name><operator pos:line="86" pos:column="50">-&gt;<pos:position pos:line="86" pos:column="55"/></operator><name pos:line="86" pos:column="52">reference<pos:position pos:line="86" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="63"/></expr_stmt></block></then></if>
	<if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name><name pos:line="87" pos:column="13">suc<pos:position pos:line="87" pos:column="16"/></name><operator pos:line="87" pos:column="16">-&gt;<pos:position pos:line="87" pos:column="21"/></operator><name pos:line="87" pos:column="18">depth<pos:position pos:line="87" pos:column="23"/></name></name></expr>)<pos:position pos:line="87" pos:column="24"/></condition><then pos:line="87" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="17">argv_array_push<pos:position pos:line="88" pos:column="32"/></name><argument_list pos:line="88" pos:column="32">(<argument><expr><operator pos:line="88" pos:column="33">&amp;<pos:position pos:line="88" pos:column="38"/></operator><name><name pos:line="88" pos:column="34">child<pos:position pos:line="88" pos:column="39"/></name><operator pos:line="88" pos:column="39">-&gt;<pos:position pos:line="88" pos:column="44"/></operator><name pos:line="88" pos:column="41">args<pos:position pos:line="88" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="47">suc<pos:position pos:line="88" pos:column="50"/></name><operator pos:line="88" pos:column="50">-&gt;<pos:position pos:line="88" pos:column="55"/></operator><name pos:line="88" pos:column="52">depth<pos:position pos:line="88" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="59"/></expr_stmt></block></then></if>

<label><name pos:line="90" pos:column="1">cleanup<pos:position pos:line="90" pos:column="8"/></name>:<pos:position pos:line="90" pos:column="9"/></label>
	<expr_stmt><expr><call><name pos:line="91" pos:column="9">free<pos:position pos:line="91" pos:column="13"/></name><argument_list pos:line="91" pos:column="13">(<argument><expr><name pos:line="91" pos:column="14">url<pos:position pos:line="91" pos:column="17"/></name></expr></argument>)<pos:position pos:line="91" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="92" pos:column="9">strbuf_reset<pos:position pos:line="92" pos:column="21"/></name><argument_list pos:line="92" pos:column="21">(<argument><expr><operator pos:line="92" pos:column="22">&amp;<pos:position pos:line="92" pos:column="27"/></operator><name pos:line="92" pos:column="23">displaypath_sb<pos:position pos:line="92" pos:column="37"/></name></expr></argument>)<pos:position pos:line="92" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="93" pos:column="9">strbuf_reset<pos:position pos:line="93" pos:column="21"/></name><argument_list pos:line="93" pos:column="21">(<argument><expr><operator pos:line="93" pos:column="22">&amp;<pos:position pos:line="93" pos:column="27"/></operator><name pos:line="93" pos:column="23">sb<pos:position pos:line="93" pos:column="25"/></name></expr></argument>)<pos:position pos:line="93" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="27"/></expr_stmt>

	<return pos:line="95" pos:column="9">return <expr><name pos:line="95" pos:column="16">needs_cloning<pos:position pos:line="95" pos:column="29"/></name></expr>;<pos:position pos:line="95" pos:column="30"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

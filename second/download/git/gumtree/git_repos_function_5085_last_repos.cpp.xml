<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5085_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">push_with_options<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">transport<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">transport<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">flags<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">err<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">reject_reasons<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">transport_set_verbosity<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">transport<pos:position pos:line="6" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="44">verbosity<pos:position pos:line="6" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="55">progress<pos:position pos:line="6" pos:column="63"/></name></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">transport<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">family<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">=<pos:position pos:line="7" pos:column="28"/></operator> <name pos:line="7" pos:column="29">family<pos:position pos:line="7" pos:column="35"/></name></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">receivepack<pos:position pos:line="9" pos:column="24"/></name></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">transport_set_option<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">transport<pos:position pos:line="10" pos:column="47"/></name></expr></argument>,
				     <argument><expr><name pos:line="11" pos:column="38">TRANS_OPT_RECEIVEPACK<pos:position pos:line="11" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="61">receivepack<pos:position pos:line="11" pos:column="72"/></name></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="74"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">transport_set_option<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">transport<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="41">TRANS_OPT_THIN<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="12" pos:column="57">thin<pos:position pos:line="12" pos:column="61"/></name></expr> ?<pos:position pos:line="12" pos:column="63"/></condition><then pos:line="12" pos:column="63"> <expr><literal type="string" pos:line="12" pos:column="64">"yes"<pos:position pos:line="12" pos:column="69"/></literal></expr> <pos:position pos:line="12" pos:column="70"/></then><else pos:line="12" pos:column="70">: <expr><name pos:line="12" pos:column="72">NULL<pos:position pos:line="12" pos:column="76"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="12" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="78"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">is_empty_cas<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><operator pos:line="14" pos:column="27">&amp;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="28">cas<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33"> <block pos:line="14" pos:column="34">{
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name><name pos:line="15" pos:column="22">transport<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">smart_options<pos:position pos:line="15" pos:column="46"/></name></name></expr>)<pos:position pos:line="15" pos:column="47"/></condition><then pos:line="15" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">die<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><literal type="string" pos:line="16" pos:column="29">"underlying transport does not support --%s option"<pos:position pos:line="16" pos:column="80"/></literal></expr></argument>,
			    <argument><expr><name pos:line="17" pos:column="29">CAS_OPT_NAME<pos:position pos:line="17" pos:column="41"/></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">transport<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">-&gt;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="28">smart_options<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">-&gt;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="43">cas<pos:position pos:line="18" pos:column="46"/></name></name> <operator pos:line="18" pos:column="47">=<pos:position pos:line="18" pos:column="48"/></operator> <operator pos:line="18" pos:column="49">&amp;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="50">cas<pos:position pos:line="18" pos:column="53"/></name></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">verbosity<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&gt;<pos:position pos:line="21" pos:column="27"/></operator> <literal type="number" pos:line="21" pos:column="25">0<pos:position pos:line="21" pos:column="26"/></literal></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">fprintf<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">stderr<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="33">_<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><literal type="string" pos:line="22" pos:column="35">"Pushing to %s\n"<pos:position pos:line="22" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="55">transport<pos:position pos:line="22" pos:column="64"/></name><operator pos:line="22" pos:column="64">-&gt;<pos:position pos:line="22" pos:column="69"/></operator><name pos:line="22" pos:column="66">url<pos:position pos:line="22" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="71"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="23" pos:column="9">err<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">transport_push<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">transport<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">refspec_nr<pos:position pos:line="23" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="53">refspec<pos:position pos:line="23" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="62">flags<pos:position pos:line="23" pos:column="67"/></name></expr></argument>,
			     <argument><expr><operator pos:line="24" pos:column="30">&amp;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="31">reject_reasons<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">err<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">!=<pos:position pos:line="25" pos:column="19"/></operator> <literal type="number" pos:line="25" pos:column="20">0<pos:position pos:line="25" pos:column="21"/></literal></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">error<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><call><name pos:line="26" pos:column="23">_<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><literal type="string" pos:line="26" pos:column="25">"failed to push some refs to '%s'"<pos:position pos:line="26" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="62">transport<pos:position pos:line="26" pos:column="71"/></name><operator pos:line="26" pos:column="71">-&gt;<pos:position pos:line="26" pos:column="76"/></operator><name pos:line="26" pos:column="73">url<pos:position pos:line="26" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="78"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="28" pos:column="9">err<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">|=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">transport_disconnect<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><name pos:line="28" pos:column="37">transport<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">err<pos:position pos:line="29" pos:column="17"/></name></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18">
		<block type="pseudo"><return pos:line="30" pos:column="17">return <expr><literal type="number" pos:line="30" pos:column="24">0<pos:position pos:line="30" pos:column="25"/></literal></expr>;<pos:position pos:line="30" pos:column="26"/></return></block></then></if>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">reject_reasons<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">&amp;<pos:position pos:line="32" pos:column="33"/></operator> <name pos:line="32" pos:column="30">REJECT_NON_FF_HEAD<pos:position pos:line="32" pos:column="48"/></name></expr>)<pos:position pos:line="32" pos:column="49"/></condition><then pos:line="32" pos:column="49"> <block pos:line="32" pos:column="50">{
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">advise_pull_before_push<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">()<pos:position pos:line="33" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then> <elseif pos:line="34" pos:column="11">else <if pos:line="34" pos:column="16">if <condition pos:line="34" pos:column="19">(<expr><name pos:line="34" pos:column="20">reject_reasons<pos:position pos:line="34" pos:column="34"/></name> <operator pos:line="34" pos:column="35">&amp;<pos:position pos:line="34" pos:column="40"/></operator> <name pos:line="34" pos:column="37">REJECT_NON_FF_OTHER<pos:position pos:line="34" pos:column="56"/></name></expr>)<pos:position pos:line="34" pos:column="57"/></condition><then pos:line="34" pos:column="57"> <block pos:line="34" pos:column="58">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">advise_checkout_pull_push<pos:position pos:line="35" pos:column="42"/></name><argument_list pos:line="35" pos:column="42">()<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if></elseif> <elseif pos:line="36" pos:column="11">else <if pos:line="36" pos:column="16">if <condition pos:line="36" pos:column="19">(<expr><name pos:line="36" pos:column="20">reject_reasons<pos:position pos:line="36" pos:column="34"/></name> <operator pos:line="36" pos:column="35">&amp;<pos:position pos:line="36" pos:column="40"/></operator> <name pos:line="36" pos:column="37">REJECT_ALREADY_EXISTS<pos:position pos:line="36" pos:column="58"/></name></expr>)<pos:position pos:line="36" pos:column="59"/></condition><then pos:line="36" pos:column="59"> <block pos:line="36" pos:column="60">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">advise_ref_already_exists<pos:position pos:line="37" pos:column="42"/></name><argument_list pos:line="37" pos:column="42">()<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if></elseif> <elseif pos:line="38" pos:column="11">else <if pos:line="38" pos:column="16">if <condition pos:line="38" pos:column="19">(<expr><name pos:line="38" pos:column="20">reject_reasons<pos:position pos:line="38" pos:column="34"/></name> <operator pos:line="38" pos:column="35">&amp;<pos:position pos:line="38" pos:column="40"/></operator> <name pos:line="38" pos:column="37">REJECT_FETCH_FIRST<pos:position pos:line="38" pos:column="55"/></name></expr>)<pos:position pos:line="38" pos:column="56"/></condition><then pos:line="38" pos:column="56"> <block pos:line="38" pos:column="57">{
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">advise_ref_fetch_first<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">()<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if></elseif> <elseif pos:line="40" pos:column="11">else <if pos:line="40" pos:column="16">if <condition pos:line="40" pos:column="19">(<expr><name pos:line="40" pos:column="20">reject_reasons<pos:position pos:line="40" pos:column="34"/></name> <operator pos:line="40" pos:column="35">&amp;<pos:position pos:line="40" pos:column="40"/></operator> <name pos:line="40" pos:column="37">REJECT_NEEDS_FORCE<pos:position pos:line="40" pos:column="55"/></name></expr>)<pos:position pos:line="40" pos:column="56"/></condition><then pos:line="40" pos:column="56"> <block pos:line="40" pos:column="57">{
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">advise_ref_needs_force<pos:position pos:line="41" pos:column="39"/></name><argument_list pos:line="41" pos:column="39">()<pos:position pos:line="41" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if></elseif></if>

	<return pos:line="44" pos:column="9">return <expr><literal type="number" pos:line="44" pos:column="16">1<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

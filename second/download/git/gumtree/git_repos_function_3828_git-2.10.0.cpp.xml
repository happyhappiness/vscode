<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3828_git-2.10.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">match_push_refs<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">ref<pos:position pos:line="1" pos:column="31"/></name></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">src<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">ref<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">dst<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="2" pos:column="21">int<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">nr_refspec<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier><modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">refspec<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">int<pos:position pos:line="2" pos:column="62"/></name></type> <name pos:line="2" pos:column="63">flags<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">refspec<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">rs<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">send_all<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">flags<pos:position pos:line="5" pos:column="29"/></name> <operator pos:line="5" pos:column="30">&amp;<pos:position pos:line="5" pos:column="35"/></operator> <name pos:line="5" pos:column="32">MATCH_REFS_ALL<pos:position pos:line="5" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">send_mirror<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">flags<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">&amp;<pos:position pos:line="6" pos:column="38"/></operator> <name pos:line="6" pos:column="35">MATCH_REFS_MIRROR<pos:position pos:line="6" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">send_prune<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name pos:line="7" pos:column="26">flags<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">&amp;<pos:position pos:line="7" pos:column="37"/></operator> <name pos:line="7" pos:column="34">MATCH_REFS_PRUNE<pos:position pos:line="7" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">errs<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="9" pos:column="9">static<pos:position pos:line="9" pos:column="15"/></specifier> <type><specifier pos:line="9" pos:column="16">const<pos:position pos:line="9" pos:column="21"/></specifier> <name pos:line="9" pos:column="22">char<pos:position pos:line="9" pos:column="26"/></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier></type><name><name pos:line="9" pos:column="28">default_refspec<pos:position pos:line="9" pos:column="43"/></name><index pos:line="9" pos:column="43">[]<pos:position pos:line="9" pos:column="45"/></index></name> <init pos:line="9" pos:column="46">= <expr><block pos:line="9" pos:column="48">{ <expr><literal type="string" pos:line="9" pos:column="50">":"<pos:position pos:line="9" pos:column="53"/></literal></expr>, <expr><name pos:line="9" pos:column="55">NULL<pos:position pos:line="9" pos:column="59"/></name></expr> }<pos:position pos:line="9" pos:column="61"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">ref<pos:position pos:line="10" pos:column="19"/></name></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">ref<pos:position pos:line="10" pos:column="24"/></name></decl>, <modifier pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></modifier><modifier pos:line="10" pos:column="27">*<pos:position pos:line="10" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="28">dst_tail<pos:position pos:line="10" pos:column="36"/></name> <init pos:line="10" pos:column="37">= <expr><call><name pos:line="10" pos:column="39">tail_ref<pos:position pos:line="10" pos:column="47"/></name><argument_list pos:line="10" pos:column="47">(<argument><expr><name pos:line="10" pos:column="48">dst<pos:position pos:line="10" pos:column="51"/></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">string_list<pos:position pos:line="11" pos:column="27"/></name></name></type> <name pos:line="11" pos:column="28">dst_ref_index<pos:position pos:line="11" pos:column="41"/></name> <init pos:line="11" pos:column="42">= <expr><name pos:line="11" pos:column="44">STRING_LIST_INIT_NODUP<pos:position pos:line="11" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="67"/></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">nr_refspec<pos:position pos:line="13" pos:column="24"/></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25"> <block pos:line="13" pos:column="26">{
		<expr_stmt><expr><name pos:line="14" pos:column="17">nr_refspec<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">=<pos:position pos:line="14" pos:column="29"/></operator> <literal type="number" pos:line="14" pos:column="30">1<pos:position pos:line="14" pos:column="31"/></literal></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">refspec<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <name pos:line="15" pos:column="27">default_refspec<pos:position pos:line="15" pos:column="42"/></name></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">rs<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">parse_push_refspec<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">nr_refspec<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="45">(<pos:position pos:line="17" pos:column="46"/></operator><specifier pos:line="17" pos:column="46">const<pos:position pos:line="17" pos:column="51"/></specifier> <name pos:line="17" pos:column="52">char<pos:position pos:line="17" pos:column="56"/></name> <operator pos:line="17" pos:column="57">*<pos:position pos:line="17" pos:column="58"/></operator><operator pos:line="17" pos:column="58">*<pos:position pos:line="17" pos:column="59"/></operator><operator pos:line="17" pos:column="59">)<pos:position pos:line="17" pos:column="60"/></operator> <name pos:line="17" pos:column="61">refspec<pos:position pos:line="17" pos:column="68"/></name></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">errs<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <call><name pos:line="18" pos:column="16">match_explicit_refs<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">src<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="41">*<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="42">dst<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="47">&amp;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="48">dst_tail<pos:position pos:line="18" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="58">rs<pos:position pos:line="18" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="62">nr_refspec<pos:position pos:line="18" pos:column="72"/></name></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="74"/></expr_stmt>

	<comment type="block" pos:line="20" pos:column="9">/* pick the remainder */</comment>
	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">ref<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">src<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></init> <condition><expr><name pos:line="21" pos:column="25">ref<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></condition> <incr><expr><name pos:line="21" pos:column="30">ref<pos:position pos:line="21" pos:column="33"/></name> <operator pos:line="21" pos:column="34">=<pos:position pos:line="21" pos:column="35"/></operator> <name><name pos:line="21" pos:column="36">ref<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">-&gt;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="41">next<pos:position pos:line="21" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="21" pos:column="46"/></control> <block pos:line="21" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="22" pos:column="17">struct<pos:position pos:line="22" pos:column="23"/></name> <name pos:line="22" pos:column="24">string_list_item<pos:position pos:line="22" pos:column="40"/></name></name> <modifier pos:line="22" pos:column="41">*<pos:position pos:line="22" pos:column="42"/></modifier></type><name pos:line="22" pos:column="42">dst_item<pos:position pos:line="22" pos:column="50"/></name></decl>;<pos:position pos:line="22" pos:column="51"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="23" pos:column="17">struct<pos:position pos:line="23" pos:column="23"/></name> <name pos:line="23" pos:column="24">ref<pos:position pos:line="23" pos:column="27"/></name></name> <modifier pos:line="23" pos:column="28">*<pos:position pos:line="23" pos:column="29"/></modifier></type><name pos:line="23" pos:column="29">dst_peer<pos:position pos:line="23" pos:column="37"/></name></decl>;<pos:position pos:line="23" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="24" pos:column="17">const<pos:position pos:line="24" pos:column="22"/></specifier> <name><name pos:line="24" pos:column="23">struct<pos:position pos:line="24" pos:column="29"/></name> <name pos:line="24" pos:column="30">refspec<pos:position pos:line="24" pos:column="37"/></name></name> <modifier pos:line="24" pos:column="38">*<pos:position pos:line="24" pos:column="39"/></modifier></type><name pos:line="24" pos:column="39">pat<pos:position pos:line="24" pos:column="42"/></name> <init pos:line="24" pos:column="43">= <expr><name pos:line="24" pos:column="45">NULL<pos:position pos:line="24" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="50"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">char<pos:position pos:line="25" pos:column="21"/></name> <modifier pos:line="25" pos:column="22">*<pos:position pos:line="25" pos:column="23"/></modifier></type><name pos:line="25" pos:column="23">dst_name<pos:position pos:line="25" pos:column="31"/></name></decl>;<pos:position pos:line="25" pos:column="32"/></decl_stmt>

		<expr_stmt><expr><name pos:line="27" pos:column="17">dst_name<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">=<pos:position pos:line="27" pos:column="27"/></operator> <call><name pos:line="27" pos:column="28">get_ref_match<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">rs<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="46">nr_refspec<pos:position pos:line="27" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="58">ref<pos:position pos:line="27" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="63">send_mirror<pos:position pos:line="27" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="76">FROM_SRC<pos:position pos:line="27" pos:column="84"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="86">&amp;<pos:position pos:line="27" pos:column="91"/></operator><name pos:line="27" pos:column="87">pat<pos:position pos:line="27" pos:column="90"/></name></expr></argument>)<pos:position pos:line="27" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="92"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">dst_name<pos:position pos:line="28" pos:column="30"/></name></expr>)<pos:position pos:line="28" pos:column="31"/></condition><then pos:line="28" pos:column="31">
			<block type="pseudo"><continue pos:line="29" pos:column="25">continue;<pos:position pos:line="29" pos:column="34"/></continue></block></then></if>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><operator pos:line="31" pos:column="21">!<pos:position pos:line="31" pos:column="22"/></operator><name><name pos:line="31" pos:column="22">dst_ref_index<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">.<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="36">nr<pos:position pos:line="31" pos:column="38"/></name></name></expr>)<pos:position pos:line="31" pos:column="39"/></condition><then pos:line="31" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="25">prepare_ref_index<pos:position pos:line="32" pos:column="42"/></name><argument_list pos:line="32" pos:column="42">(<argument><expr><operator pos:line="32" pos:column="43">&amp;<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="44">dst_ref_index<pos:position pos:line="32" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="59">*<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="60">dst<pos:position pos:line="32" pos:column="63"/></name></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="65"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="34" pos:column="17">dst_item<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <call><name pos:line="34" pos:column="28">string_list_lookup<pos:position pos:line="34" pos:column="46"/></name><argument_list pos:line="34" pos:column="46">(<argument><expr><operator pos:line="34" pos:column="47">&amp;<pos:position pos:line="34" pos:column="52"/></operator><name pos:line="34" pos:column="48">dst_ref_index<pos:position pos:line="34" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="63">dst_name<pos:position pos:line="34" pos:column="71"/></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">dst_peer<pos:position pos:line="35" pos:column="25"/></name> <operator pos:line="35" pos:column="26">=<pos:position pos:line="35" pos:column="27"/></operator> <ternary><condition><expr><name pos:line="35" pos:column="28">dst_item<pos:position pos:line="35" pos:column="36"/></name></expr> ?<pos:position pos:line="35" pos:column="38"/></condition><then pos:line="35" pos:column="38"> <expr><name><name pos:line="35" pos:column="39">dst_item<pos:position pos:line="35" pos:column="47"/></name><operator pos:line="35" pos:column="47">-&gt;<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="49">util<pos:position pos:line="35" pos:column="53"/></name></name></expr> <pos:position pos:line="35" pos:column="54"/></then><else pos:line="35" pos:column="54">: <expr><name pos:line="35" pos:column="56">NULL<pos:position pos:line="35" pos:column="60"/></name></expr></else></ternary></expr>;<pos:position pos:line="35" pos:column="61"/></expr_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">dst_peer<pos:position pos:line="36" pos:column="29"/></name></expr>)<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30"> <block pos:line="36" pos:column="31">{
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><name><name pos:line="37" pos:column="29">dst_peer<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">peer_ref<pos:position pos:line="37" pos:column="47"/></name></name></expr>)<pos:position pos:line="37" pos:column="48"/></condition><then pos:line="37" pos:column="48">
				<comment type="block" pos:line="38" pos:column="33">/* We're already sending something to this ref. */</comment>
				<block type="pseudo"><goto pos:line="39" pos:column="33">goto <name pos:line="39" pos:column="38">free_name<pos:position pos:line="39" pos:column="47"/></name>;<pos:position pos:line="39" pos:column="48"/></goto></block></then></if>
		}<pos:position pos:line="40" pos:column="18"/></block></then> <else pos:line="40" pos:column="19">else <block pos:line="40" pos:column="24">{
			<if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><name><name pos:line="41" pos:column="29">pat<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">-&gt;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="34">matching<pos:position pos:line="41" pos:column="42"/></name></name> <operator pos:line="41" pos:column="43">&amp;&amp;<pos:position pos:line="41" pos:column="53"/></operator> <operator pos:line="41" pos:column="46">!<pos:position pos:line="41" pos:column="47"/></operator><operator pos:line="41" pos:column="47">(<pos:position pos:line="41" pos:column="48"/></operator><name pos:line="41" pos:column="48">send_all<pos:position pos:line="41" pos:column="56"/></name> <operator pos:line="41" pos:column="57">||<pos:position pos:line="41" pos:column="59"/></operator> <name pos:line="41" pos:column="60">send_mirror<pos:position pos:line="41" pos:column="71"/></name><operator pos:line="41" pos:column="71">)<pos:position pos:line="41" pos:column="72"/></operator></expr>)<pos:position pos:line="41" pos:column="73"/></condition><then pos:line="41" pos:column="73">
				<comment type="block" pos:line="42" pos:column="33">/*
				 * Remote doesn't have it, and we have no
				 * explicit pattern, and we don't have
				 * --all or --mirror.
				 */</comment>
				<block type="pseudo"><goto pos:line="47" pos:column="33">goto <name pos:line="47" pos:column="38">free_name<pos:position pos:line="47" pos:column="47"/></name>;<pos:position pos:line="47" pos:column="48"/></goto></block></then></if>

			<comment type="block" pos:line="49" pos:column="25">/* Create a new one and link it */</comment>
			<expr_stmt><expr><name pos:line="50" pos:column="25">dst_peer<pos:position pos:line="50" pos:column="33"/></name> <operator pos:line="50" pos:column="34">=<pos:position pos:line="50" pos:column="35"/></operator> <call><name pos:line="50" pos:column="36">make_linked_ref<pos:position pos:line="50" pos:column="51"/></name><argument_list pos:line="50" pos:column="51">(<argument><expr><name pos:line="50" pos:column="52">dst_name<pos:position pos:line="50" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="62">&amp;<pos:position pos:line="50" pos:column="67"/></operator><name pos:line="50" pos:column="63">dst_tail<pos:position pos:line="50" pos:column="71"/></name></expr></argument>)<pos:position pos:line="50" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="51" pos:column="25">oidcpy<pos:position pos:line="51" pos:column="31"/></name><argument_list pos:line="51" pos:column="31">(<argument><expr><operator pos:line="51" pos:column="32">&amp;<pos:position pos:line="51" pos:column="37"/></operator><name><name pos:line="51" pos:column="33">dst_peer<pos:position pos:line="51" pos:column="41"/></name><operator pos:line="51" pos:column="41">-&gt;<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="43">new_oid<pos:position pos:line="51" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="52">&amp;<pos:position pos:line="51" pos:column="57"/></operator><name><name pos:line="51" pos:column="53">ref<pos:position pos:line="51" pos:column="56"/></name><operator pos:line="51" pos:column="56">-&gt;<pos:position pos:line="51" pos:column="61"/></operator><name pos:line="51" pos:column="58">new_oid<pos:position pos:line="51" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="52" pos:column="25">string_list_insert<pos:position pos:line="52" pos:column="43"/></name><argument_list pos:line="52" pos:column="43">(<argument><expr><operator pos:line="52" pos:column="44">&amp;<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="45">dst_ref_index<pos:position pos:line="52" pos:column="58"/></name></expr></argument>,
				<argument><expr><name><name pos:line="53" pos:column="33">dst_peer<pos:position pos:line="53" pos:column="41"/></name><operator pos:line="53" pos:column="41">-&gt;<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="43">name<pos:position pos:line="53" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="48"/></argument_list></call><operator pos:line="53" pos:column="48">-&gt;<pos:position pos:line="53" pos:column="53"/></operator><name pos:line="53" pos:column="50">util<pos:position pos:line="53" pos:column="54"/></name> <operator pos:line="53" pos:column="55">=<pos:position pos:line="53" pos:column="56"/></operator> <name pos:line="53" pos:column="57">dst_peer<pos:position pos:line="53" pos:column="65"/></name></expr>;<pos:position pos:line="53" pos:column="66"/></expr_stmt>
		}<pos:position pos:line="54" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name><name pos:line="55" pos:column="17">dst_peer<pos:position pos:line="55" pos:column="25"/></name><operator pos:line="55" pos:column="25">-&gt;<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="27">peer_ref<pos:position pos:line="55" pos:column="35"/></name></name> <operator pos:line="55" pos:column="36">=<pos:position pos:line="55" pos:column="37"/></operator> <call><name pos:line="55" pos:column="38">copy_ref<pos:position pos:line="55" pos:column="46"/></name><argument_list pos:line="55" pos:column="46">(<argument><expr><name pos:line="55" pos:column="47">ref<pos:position pos:line="55" pos:column="50"/></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="56" pos:column="17">dst_peer<pos:position pos:line="56" pos:column="25"/></name><operator pos:line="56" pos:column="25">-&gt;<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="27">force<pos:position pos:line="56" pos:column="32"/></name></name> <operator pos:line="56" pos:column="33">=<pos:position pos:line="56" pos:column="34"/></operator> <name><name pos:line="56" pos:column="35">pat<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">-&gt;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="40">force<pos:position pos:line="56" pos:column="45"/></name></name></expr>;<pos:position pos:line="56" pos:column="46"/></expr_stmt>
	<label><name pos:line="57" pos:column="9">free_name<pos:position pos:line="57" pos:column="18"/></name>:<pos:position pos:line="57" pos:column="19"/></label>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">free<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">dst_name<pos:position pos:line="58" pos:column="30"/></name></expr></argument>)<pos:position pos:line="58" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="61" pos:column="9">string_list_clear<pos:position pos:line="61" pos:column="26"/></name><argument_list pos:line="61" pos:column="26">(<argument><expr><operator pos:line="61" pos:column="27">&amp;<pos:position pos:line="61" pos:column="32"/></operator><name pos:line="61" pos:column="28">dst_ref_index<pos:position pos:line="61" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="43">0<pos:position pos:line="61" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="46"/></expr_stmt>

	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">flags<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">&amp;<pos:position pos:line="63" pos:column="24"/></operator> <name pos:line="63" pos:column="21">MATCH_REFS_FOLLOW_TAGS<pos:position pos:line="63" pos:column="43"/></name></expr>)<pos:position pos:line="63" pos:column="44"/></condition><then pos:line="63" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="17">add_missing_tags<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><name pos:line="64" pos:column="34">src<pos:position pos:line="64" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="39">dst<pos:position pos:line="64" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="44">&amp;<pos:position pos:line="64" pos:column="49"/></operator><name pos:line="64" pos:column="45">dst_tail<pos:position pos:line="64" pos:column="53"/></name></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt></block></then></if>

	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">send_prune<pos:position pos:line="66" pos:column="23"/></name></expr>)<pos:position pos:line="66" pos:column="24"/></condition><then pos:line="66" pos:column="24"> <block pos:line="66" pos:column="25">{
		<decl_stmt><decl><type><name><name pos:line="67" pos:column="17">struct<pos:position pos:line="67" pos:column="23"/></name> <name pos:line="67" pos:column="24">string_list<pos:position pos:line="67" pos:column="35"/></name></name></type> <name pos:line="67" pos:column="36">src_ref_index<pos:position pos:line="67" pos:column="49"/></name> <init pos:line="67" pos:column="50">= <expr><name pos:line="67" pos:column="52">STRING_LIST_INIT_NODUP<pos:position pos:line="67" pos:column="74"/></name></expr></init></decl>;<pos:position pos:line="67" pos:column="75"/></decl_stmt>
		<comment type="block" pos:line="68" pos:column="17">/* check for missing refs on the remote */</comment>
		<for pos:line="69" pos:column="17">for <control pos:line="69" pos:column="21">(<init><expr><name pos:line="69" pos:column="22">ref<pos:position pos:line="69" pos:column="25"/></name> <operator pos:line="69" pos:column="26">=<pos:position pos:line="69" pos:column="27"/></operator> <operator pos:line="69" pos:column="28">*<pos:position pos:line="69" pos:column="29"/></operator><name pos:line="69" pos:column="29">dst<pos:position pos:line="69" pos:column="32"/></name></expr>;<pos:position pos:line="69" pos:column="33"/></init> <condition><expr><name pos:line="69" pos:column="34">ref<pos:position pos:line="69" pos:column="37"/></name></expr>;<pos:position pos:line="69" pos:column="38"/></condition> <incr><expr><name pos:line="69" pos:column="39">ref<pos:position pos:line="69" pos:column="42"/></name> <operator pos:line="69" pos:column="43">=<pos:position pos:line="69" pos:column="44"/></operator> <name><name pos:line="69" pos:column="45">ref<pos:position pos:line="69" pos:column="48"/></name><operator pos:line="69" pos:column="48">-&gt;<pos:position pos:line="69" pos:column="53"/></operator><name pos:line="69" pos:column="50">next<pos:position pos:line="69" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="69" pos:column="55"/></control> <block pos:line="69" pos:column="56">{
			<decl_stmt><decl><type><name pos:line="70" pos:column="25">char<pos:position pos:line="70" pos:column="29"/></name> <modifier pos:line="70" pos:column="30">*<pos:position pos:line="70" pos:column="31"/></modifier></type><name pos:line="70" pos:column="31">src_name<pos:position pos:line="70" pos:column="39"/></name></decl>;<pos:position pos:line="70" pos:column="40"/></decl_stmt>

			<if pos:line="72" pos:column="25">if <condition pos:line="72" pos:column="28">(<expr><name><name pos:line="72" pos:column="29">ref<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">-&gt;<pos:position pos:line="72" pos:column="37"/></operator><name pos:line="72" pos:column="34">peer_ref<pos:position pos:line="72" pos:column="42"/></name></name></expr>)<pos:position pos:line="72" pos:column="43"/></condition><then pos:line="72" pos:column="43">
				<comment type="block" pos:line="73" pos:column="33">/* We're already sending something to this ref. */</comment>
				<block type="pseudo"><continue pos:line="74" pos:column="33">continue;<pos:position pos:line="74" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><name pos:line="76" pos:column="25">src_name<pos:position pos:line="76" pos:column="33"/></name> <operator pos:line="76" pos:column="34">=<pos:position pos:line="76" pos:column="35"/></operator> <call><name pos:line="76" pos:column="36">get_ref_match<pos:position pos:line="76" pos:column="49"/></name><argument_list pos:line="76" pos:column="49">(<argument><expr><name pos:line="76" pos:column="50">rs<pos:position pos:line="76" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="54">nr_refspec<pos:position pos:line="76" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="66">ref<pos:position pos:line="76" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="71">send_mirror<pos:position pos:line="76" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="84">FROM_DST<pos:position pos:line="76" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="94">NULL<pos:position pos:line="76" pos:column="98"/></name></expr></argument>)<pos:position pos:line="76" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="100"/></expr_stmt>
			<if pos:line="77" pos:column="25">if <condition pos:line="77" pos:column="28">(<expr><name pos:line="77" pos:column="29">src_name<pos:position pos:line="77" pos:column="37"/></name></expr>)<pos:position pos:line="77" pos:column="38"/></condition><then pos:line="77" pos:column="38"> <block pos:line="77" pos:column="39">{
				<if pos:line="78" pos:column="33">if <condition pos:line="78" pos:column="36">(<expr><operator pos:line="78" pos:column="37">!<pos:position pos:line="78" pos:column="38"/></operator><name><name pos:line="78" pos:column="38">src_ref_index<pos:position pos:line="78" pos:column="51"/></name><operator pos:line="78" pos:column="51">.<pos:position pos:line="78" pos:column="52"/></operator><name pos:line="78" pos:column="52">nr<pos:position pos:line="78" pos:column="54"/></name></name></expr>)<pos:position pos:line="78" pos:column="55"/></condition><then pos:line="78" pos:column="55">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="41">prepare_ref_index<pos:position pos:line="79" pos:column="58"/></name><argument_list pos:line="79" pos:column="58">(<argument><expr><operator pos:line="79" pos:column="59">&amp;<pos:position pos:line="79" pos:column="64"/></operator><name pos:line="79" pos:column="60">src_ref_index<pos:position pos:line="79" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="75">src<pos:position pos:line="79" pos:column="78"/></name></expr></argument>)<pos:position pos:line="79" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="80"/></expr_stmt></block></then></if>
				<if pos:line="80" pos:column="33">if <condition pos:line="80" pos:column="36">(<expr><operator pos:line="80" pos:column="37">!<pos:position pos:line="80" pos:column="38"/></operator><call><name pos:line="80" pos:column="38">string_list_has_string<pos:position pos:line="80" pos:column="60"/></name><argument_list pos:line="80" pos:column="60">(<argument><expr><operator pos:line="80" pos:column="61">&amp;<pos:position pos:line="80" pos:column="66"/></operator><name pos:line="80" pos:column="62">src_ref_index<pos:position pos:line="80" pos:column="75"/></name></expr></argument>,
					    <argument><expr><name pos:line="81" pos:column="45">src_name<pos:position pos:line="81" pos:column="53"/></name></expr></argument>)<pos:position pos:line="81" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="55"/></condition><then pos:line="81" pos:column="55">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="82" pos:column="41">ref<pos:position pos:line="82" pos:column="44"/></name><operator pos:line="82" pos:column="44">-&gt;<pos:position pos:line="82" pos:column="49"/></operator><name pos:line="82" pos:column="46">peer_ref<pos:position pos:line="82" pos:column="54"/></name></name> <operator pos:line="82" pos:column="55">=<pos:position pos:line="82" pos:column="56"/></operator> <call><name pos:line="82" pos:column="57">alloc_delete_ref<pos:position pos:line="82" pos:column="73"/></name><argument_list pos:line="82" pos:column="73">()<pos:position pos:line="82" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="76"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="83" pos:column="33">free<pos:position pos:line="83" pos:column="37"/></name><argument_list pos:line="83" pos:column="37">(<argument><expr><name pos:line="83" pos:column="38">src_name<pos:position pos:line="83" pos:column="46"/></name></expr></argument>)<pos:position pos:line="83" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="84" pos:column="26"/></block></then></if>
		}<pos:position pos:line="85" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="86" pos:column="17">string_list_clear<pos:position pos:line="86" pos:column="34"/></name><argument_list pos:line="86" pos:column="34">(<argument><expr><operator pos:line="86" pos:column="35">&amp;<pos:position pos:line="86" pos:column="40"/></operator><name pos:line="86" pos:column="36">src_ref_index<pos:position pos:line="86" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="51">0<pos:position pos:line="86" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="87" pos:column="10"/></block></then></if>
	<if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><name pos:line="88" pos:column="13">errs<pos:position pos:line="88" pos:column="17"/></name></expr>)<pos:position pos:line="88" pos:column="18"/></condition><then pos:line="88" pos:column="18">
		<block type="pseudo"><return pos:line="89" pos:column="17">return <expr><operator pos:line="89" pos:column="24">-<pos:position pos:line="89" pos:column="25"/></operator><literal type="number" pos:line="89" pos:column="25">1<pos:position pos:line="89" pos:column="26"/></literal></expr>;<pos:position pos:line="89" pos:column="27"/></return></block></then></if>
	<return pos:line="90" pos:column="9">return <expr><literal type="number" pos:line="90" pos:column="16">0<pos:position pos:line="90" pos:column="17"/></literal></expr>;<pos:position pos:line="90" pos:column="18"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3515_git-2.11.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">merge_recursive<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">merge_options<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">o<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
		    <parameter><decl><type><name><name pos:line="2" pos:column="21">struct<pos:position pos:line="2" pos:column="27"/></name> <name pos:line="2" pos:column="28">commit<pos:position pos:line="2" pos:column="34"/></name></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">h1<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>,
		    <parameter><decl><type><name><name pos:line="3" pos:column="21">struct<pos:position pos:line="3" pos:column="27"/></name> <name pos:line="3" pos:column="28">commit<pos:position pos:line="3" pos:column="34"/></name></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">h2<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>,
		    <parameter><decl><type><name><name pos:line="4" pos:column="21">struct<pos:position pos:line="4" pos:column="27"/></name> <name pos:line="4" pos:column="28">commit_list<pos:position pos:line="4" pos:column="39"/></name></name> <modifier pos:line="4" pos:column="40">*<pos:position pos:line="4" pos:column="41"/></modifier></type><name pos:line="4" pos:column="41">ca<pos:position pos:line="4" pos:column="43"/></name></decl></parameter>,
		    <parameter><decl><type><name><name pos:line="5" pos:column="21">struct<pos:position pos:line="5" pos:column="27"/></name> <name pos:line="5" pos:column="28">commit<pos:position pos:line="5" pos:column="34"/></name></name> <modifier pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></modifier><modifier pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></modifier></type><name pos:line="5" pos:column="37">result<pos:position pos:line="5" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="44"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">commit_list<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">iter<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">commit<pos:position pos:line="8" pos:column="22"/></name></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">merged_common_ancestors<pos:position pos:line="8" pos:column="47"/></name></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">tree<pos:position pos:line="9" pos:column="20"/></name></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">mrtree<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><name pos:line="9" pos:column="31">mrtree<pos:position pos:line="9" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">clean<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">show<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">o<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="21">4<pos:position pos:line="12" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24"> <block pos:line="12" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">output<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">o<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="27">4<pos:position pos:line="13" pos:column="28"/></literal></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="30">_<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><literal type="string" pos:line="13" pos:column="32">"Merging:"<pos:position pos:line="13" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">output_commit_title<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">o<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">h1<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">output_commit_title<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><name pos:line="15" pos:column="37">o<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="40">h2<pos:position pos:line="15" pos:column="42"/></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">ca<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17"> <block pos:line="18" pos:column="18">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">ca<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <call><name pos:line="19" pos:column="22">get_merge_bases<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">h1<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">h2<pos:position pos:line="19" pos:column="44"/></name></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">ca<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">reverse_commit_list<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">ca<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">show<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">o<pos:position pos:line="23" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="21">5<pos:position pos:line="23" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="24"/></condition><then pos:line="23" pos:column="24"> <block pos:line="23" pos:column="25">{
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">unsigned<pos:position pos:line="24" pos:column="25"/></name></type> <name pos:line="24" pos:column="26">cnt<pos:position pos:line="24" pos:column="29"/></name> <init pos:line="24" pos:column="30">= <expr><call><name pos:line="24" pos:column="32">commit_list_count<pos:position pos:line="24" pos:column="49"/></name><argument_list pos:line="24" pos:column="49">(<argument><expr><name pos:line="24" pos:column="50">ca<pos:position pos:line="24" pos:column="52"/></name></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="54"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="26" pos:column="17">output<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">o<pos:position pos:line="26" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="27">5<pos:position pos:line="26" pos:column="28"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="30">Q_<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><literal type="string" pos:line="26" pos:column="33">"found %u common ancestor:"<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>,
				<argument><expr><literal type="string" pos:line="27" pos:column="33">"found %u common ancestors:"<pos:position pos:line="27" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="63">cnt<pos:position pos:line="27" pos:column="66"/></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="69">cnt<pos:position pos:line="27" pos:column="72"/></name></expr></argument>)<pos:position pos:line="27" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="74"/></expr_stmt>
		<for pos:line="28" pos:column="17">for <control pos:line="28" pos:column="21">(<init><expr><name pos:line="28" pos:column="22">iter<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">ca<pos:position pos:line="28" pos:column="31"/></name></expr>;<pos:position pos:line="28" pos:column="32"/></init> <condition><expr><name pos:line="28" pos:column="33">iter<pos:position pos:line="28" pos:column="37"/></name></expr>;<pos:position pos:line="28" pos:column="38"/></condition> <incr><expr><name pos:line="28" pos:column="39">iter<pos:position pos:line="28" pos:column="43"/></name> <operator pos:line="28" pos:column="44">=<pos:position pos:line="28" pos:column="45"/></operator> <name><name pos:line="28" pos:column="46">iter<pos:position pos:line="28" pos:column="50"/></name><operator pos:line="28" pos:column="50">-&gt;<pos:position pos:line="28" pos:column="55"/></operator><name pos:line="28" pos:column="52">next<pos:position pos:line="28" pos:column="56"/></name></name></expr></incr>)<pos:position pos:line="28" pos:column="57"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="25">output_commit_title<pos:position pos:line="29" pos:column="44"/></name><argument_list pos:line="29" pos:column="44">(<argument><expr><name pos:line="29" pos:column="45">o<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="48">iter<pos:position pos:line="29" pos:column="52"/></name><operator pos:line="29" pos:column="52">-&gt;<pos:position pos:line="29" pos:column="57"/></operator><name pos:line="29" pos:column="54">item<pos:position pos:line="29" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt></block></for>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="32" pos:column="9">merged_common_ancestors<pos:position pos:line="32" pos:column="32"/></name> <operator pos:line="32" pos:column="33">=<pos:position pos:line="32" pos:column="34"/></operator> <call><name pos:line="32" pos:column="35">pop_commit<pos:position pos:line="32" pos:column="45"/></name><argument_list pos:line="32" pos:column="45">(<argument><expr><operator pos:line="32" pos:column="46">&amp;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="47">ca<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">merged_common_ancestors<pos:position pos:line="33" pos:column="36"/></name> <operator pos:line="33" pos:column="37">==<pos:position pos:line="33" pos:column="39"/></operator> <name pos:line="33" pos:column="40">NULL<pos:position pos:line="33" pos:column="44"/></name></expr>)<pos:position pos:line="33" pos:column="45"/></condition><then pos:line="33" pos:column="45"> <block pos:line="33" pos:column="46">{
		<comment type="block" pos:line="34" pos:column="17">/* if there is no common ancestor, use an empty tree */</comment>
		<decl_stmt><decl><type><name><name pos:line="35" pos:column="17">struct<pos:position pos:line="35" pos:column="23"/></name> <name pos:line="35" pos:column="24">tree<pos:position pos:line="35" pos:column="28"/></name></name> <modifier pos:line="35" pos:column="29">*<pos:position pos:line="35" pos:column="30"/></modifier></type><name pos:line="35" pos:column="30">tree<pos:position pos:line="35" pos:column="34"/></name></decl>;<pos:position pos:line="35" pos:column="35"/></decl_stmt>

		<expr_stmt><expr><name pos:line="37" pos:column="17">tree<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <call><name pos:line="37" pos:column="24">lookup_tree<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">EMPTY_TREE_SHA1_BIN<pos:position pos:line="37" pos:column="55"/></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">merged_common_ancestors<pos:position pos:line="38" pos:column="40"/></name> <operator pos:line="38" pos:column="41">=<pos:position pos:line="38" pos:column="42"/></operator> <call><name pos:line="38" pos:column="43">make_virtual_commit<pos:position pos:line="38" pos:column="62"/></name><argument_list pos:line="38" pos:column="62">(<argument><expr><name pos:line="38" pos:column="63">tree<pos:position pos:line="38" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="69">"ancestor"<pos:position pos:line="38" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="81"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init><expr><name pos:line="41" pos:column="14">iter<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">ca<pos:position pos:line="41" pos:column="23"/></name></expr>;<pos:position pos:line="41" pos:column="24"/></init> <condition><expr><name pos:line="41" pos:column="25">iter<pos:position pos:line="41" pos:column="29"/></name></expr>;<pos:position pos:line="41" pos:column="30"/></condition> <incr><expr><name pos:line="41" pos:column="31">iter<pos:position pos:line="41" pos:column="35"/></name> <operator pos:line="41" pos:column="36">=<pos:position pos:line="41" pos:column="37"/></operator> <name><name pos:line="41" pos:column="38">iter<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">next<pos:position pos:line="41" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="41" pos:column="49"/></control> <block pos:line="41" pos:column="50">{
		<decl_stmt><decl><type><specifier pos:line="42" pos:column="17">const<pos:position pos:line="42" pos:column="22"/></specifier> <name pos:line="42" pos:column="23">char<pos:position pos:line="42" pos:column="27"/></name> <modifier pos:line="42" pos:column="28">*<pos:position pos:line="42" pos:column="29"/></modifier></type><name pos:line="42" pos:column="29">saved_b1<pos:position pos:line="42" pos:column="37"/></name></decl>, <modifier pos:line="42" pos:column="39">*<pos:position pos:line="42" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="42" pos:column="40">saved_b2<pos:position pos:line="42" pos:column="48"/></name></decl>;<pos:position pos:line="42" pos:column="49"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="43" pos:column="17">o<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">call_depth<pos:position pos:line="43" pos:column="30"/></name></name><operator pos:line="43" pos:column="30">++<pos:position pos:line="43" pos:column="32"/></operator></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
		<comment type="block" pos:line="44" pos:column="17">/*
		 * When the merge fails, the result contains files
		 * with conflict markers. The cleanness flag is
		 * ignored (unless indicating an error), it was never
		 * actually used, as result of merge_trees has always
		 * overwritten it: the committed "conflicts" were
		 * already resolved.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">discard_cache<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">()<pos:position pos:line="52" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="53" pos:column="17">saved_b1<pos:position pos:line="53" pos:column="25"/></name> <operator pos:line="53" pos:column="26">=<pos:position pos:line="53" pos:column="27"/></operator> <name><name pos:line="53" pos:column="28">o<pos:position pos:line="53" pos:column="29"/></name><operator pos:line="53" pos:column="29">-&gt;<pos:position pos:line="53" pos:column="34"/></operator><name pos:line="53" pos:column="31">branch1<pos:position pos:line="53" pos:column="38"/></name></name></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="54" pos:column="17">saved_b2<pos:position pos:line="54" pos:column="25"/></name> <operator pos:line="54" pos:column="26">=<pos:position pos:line="54" pos:column="27"/></operator> <name><name pos:line="54" pos:column="28">o<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">-&gt;<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="31">branch2<pos:position pos:line="54" pos:column="38"/></name></name></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="55" pos:column="17">o<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">branch1<pos:position pos:line="55" pos:column="27"/></name></name> <operator pos:line="55" pos:column="28">=<pos:position pos:line="55" pos:column="29"/></operator> <literal type="string" pos:line="55" pos:column="30">"Temporary merge branch 1"<pos:position pos:line="55" pos:column="56"/></literal></expr>;<pos:position pos:line="55" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="56" pos:column="17">o<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">-&gt;<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="20">branch2<pos:position pos:line="56" pos:column="27"/></name></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <literal type="string" pos:line="56" pos:column="30">"Temporary merge branch 2"<pos:position pos:line="56" pos:column="56"/></literal></expr>;<pos:position pos:line="56" pos:column="57"/></expr_stmt>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><call><name pos:line="57" pos:column="21">merge_recursive<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><name pos:line="57" pos:column="37">o<pos:position pos:line="57" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="40">merged_common_ancestors<pos:position pos:line="57" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="65">iter<pos:position pos:line="57" pos:column="69"/></name><operator pos:line="57" pos:column="69">-&gt;<pos:position pos:line="57" pos:column="74"/></operator><name pos:line="57" pos:column="71">item<pos:position pos:line="57" pos:column="75"/></name></name></expr></argument>,
				    <argument><expr><name pos:line="58" pos:column="37">NULL<pos:position pos:line="58" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="43">&amp;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="44">merged_common_ancestors<pos:position pos:line="58" pos:column="67"/></name></expr></argument>)<pos:position pos:line="58" pos:column="68"/></argument_list></call> <operator pos:line="58" pos:column="69">&lt;<pos:position pos:line="58" pos:column="73"/></operator> <literal type="number" pos:line="58" pos:column="71">0<pos:position pos:line="58" pos:column="72"/></literal></expr>)<pos:position pos:line="58" pos:column="73"/></condition><then pos:line="58" pos:column="73">
			<block type="pseudo"><return pos:line="59" pos:column="25">return <expr><operator pos:line="59" pos:column="32">-<pos:position pos:line="59" pos:column="33"/></operator><literal type="number" pos:line="59" pos:column="33">1<pos:position pos:line="59" pos:column="34"/></literal></expr>;<pos:position pos:line="59" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="60" pos:column="17">o<pos:position pos:line="60" pos:column="18"/></name><operator pos:line="60" pos:column="18">-&gt;<pos:position pos:line="60" pos:column="23"/></operator><name pos:line="60" pos:column="20">branch1<pos:position pos:line="60" pos:column="27"/></name></name> <operator pos:line="60" pos:column="28">=<pos:position pos:line="60" pos:column="29"/></operator> <name pos:line="60" pos:column="30">saved_b1<pos:position pos:line="60" pos:column="38"/></name></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="61" pos:column="17">o<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">-&gt;<pos:position pos:line="61" pos:column="23"/></operator><name pos:line="61" pos:column="20">branch2<pos:position pos:line="61" pos:column="27"/></name></name> <operator pos:line="61" pos:column="28">=<pos:position pos:line="61" pos:column="29"/></operator> <name pos:line="61" pos:column="30">saved_b2<pos:position pos:line="61" pos:column="38"/></name></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="62" pos:column="17">o<pos:position pos:line="62" pos:column="18"/></name><operator pos:line="62" pos:column="18">-&gt;<pos:position pos:line="62" pos:column="23"/></operator><name pos:line="62" pos:column="20">call_depth<pos:position pos:line="62" pos:column="30"/></name></name><operator pos:line="62" pos:column="30">--<pos:position pos:line="62" pos:column="32"/></operator></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>

		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><operator pos:line="64" pos:column="21">!<pos:position pos:line="64" pos:column="22"/></operator><name pos:line="64" pos:column="22">merged_common_ancestors<pos:position pos:line="64" pos:column="45"/></name></expr>)<pos:position pos:line="64" pos:column="46"/></condition><then pos:line="64" pos:column="46">
			<block type="pseudo"><return pos:line="65" pos:column="25">return <expr><call><name pos:line="65" pos:column="32">err<pos:position pos:line="65" pos:column="35"/></name><argument_list pos:line="65" pos:column="35">(<argument><expr><name pos:line="65" pos:column="36">o<pos:position pos:line="65" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="39">_<pos:position pos:line="65" pos:column="40"/></name><argument_list pos:line="65" pos:column="40">(<argument><expr><literal type="string" pos:line="65" pos:column="41">"merge returned no commit"<pos:position pos:line="65" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="70"/></return></block></then></if>
	}<pos:position pos:line="66" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="68" pos:column="9">discard_cache<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">()<pos:position pos:line="68" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="25"/></expr_stmt>
	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><operator pos:line="69" pos:column="13">!<pos:position pos:line="69" pos:column="14"/></operator><name><name pos:line="69" pos:column="14">o<pos:position pos:line="69" pos:column="15"/></name><operator pos:line="69" pos:column="15">-&gt;<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="17">call_depth<pos:position pos:line="69" pos:column="27"/></name></name></expr>)<pos:position pos:line="69" pos:column="28"/></condition><then pos:line="69" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="17">read_cache<pos:position pos:line="70" pos:column="27"/></name><argument_list pos:line="70" pos:column="27">()<pos:position pos:line="70" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="30"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="72" pos:column="9">o<pos:position pos:line="72" pos:column="10"/></name><operator pos:line="72" pos:column="10">-&gt;<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="12">ancestor<pos:position pos:line="72" pos:column="20"/></name></name> <operator pos:line="72" pos:column="21">=<pos:position pos:line="72" pos:column="22"/></operator> <literal type="string" pos:line="72" pos:column="23">"merged common ancestors"<pos:position pos:line="72" pos:column="48"/></literal></expr>;<pos:position pos:line="72" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name pos:line="73" pos:column="9">clean<pos:position pos:line="73" pos:column="14"/></name> <operator pos:line="73" pos:column="15">=<pos:position pos:line="73" pos:column="16"/></operator> <call><name pos:line="73" pos:column="17">merge_trees<pos:position pos:line="73" pos:column="28"/></name><argument_list pos:line="73" pos:column="28">(<argument><expr><name pos:line="73" pos:column="29">o<pos:position pos:line="73" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="32">h1<pos:position pos:line="73" pos:column="34"/></name><operator pos:line="73" pos:column="34">-&gt;<pos:position pos:line="73" pos:column="39"/></operator><name pos:line="73" pos:column="36">tree<pos:position pos:line="73" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="42">h2<pos:position pos:line="73" pos:column="44"/></name><operator pos:line="73" pos:column="44">-&gt;<pos:position pos:line="73" pos:column="49"/></operator><name pos:line="73" pos:column="46">tree<pos:position pos:line="73" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="52">merged_common_ancestors<pos:position pos:line="73" pos:column="75"/></name><operator pos:line="73" pos:column="75">-&gt;<pos:position pos:line="73" pos:column="80"/></operator><name pos:line="73" pos:column="77">tree<pos:position pos:line="73" pos:column="81"/></name></name></expr></argument>,
			    <argument><expr><operator pos:line="74" pos:column="29">&amp;<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="30">mrtree<pos:position pos:line="74" pos:column="36"/></name></expr></argument>)<pos:position pos:line="74" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="38"/></expr_stmt>
	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">clean<pos:position pos:line="75" pos:column="18"/></name> <operator pos:line="75" pos:column="19">&lt;<pos:position pos:line="75" pos:column="23"/></operator> <literal type="number" pos:line="75" pos:column="21">0<pos:position pos:line="75" pos:column="22"/></literal></expr>)<pos:position pos:line="75" pos:column="23"/></condition><then pos:line="75" pos:column="23"> <block pos:line="75" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="76" pos:column="17">flush_output<pos:position pos:line="76" pos:column="29"/></name><argument_list pos:line="76" pos:column="29">(<argument><expr><name pos:line="76" pos:column="30">o<pos:position pos:line="76" pos:column="31"/></name></expr></argument>)<pos:position pos:line="76" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="33"/></expr_stmt>
		<return pos:line="77" pos:column="17">return <expr><name pos:line="77" pos:column="24">clean<pos:position pos:line="77" pos:column="29"/></name></expr>;<pos:position pos:line="77" pos:column="30"/></return>
	}<pos:position pos:line="78" pos:column="10"/></block></then></if>

	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name><name pos:line="80" pos:column="13">o<pos:position pos:line="80" pos:column="14"/></name><operator pos:line="80" pos:column="14">-&gt;<pos:position pos:line="80" pos:column="19"/></operator><name pos:line="80" pos:column="16">call_depth<pos:position pos:line="80" pos:column="26"/></name></name></expr>)<pos:position pos:line="80" pos:column="27"/></condition><then pos:line="80" pos:column="27"> <block pos:line="80" pos:column="28">{
		<expr_stmt><expr><operator pos:line="81" pos:column="17">*<pos:position pos:line="81" pos:column="18"/></operator><name pos:line="81" pos:column="18">result<pos:position pos:line="81" pos:column="24"/></name> <operator pos:line="81" pos:column="25">=<pos:position pos:line="81" pos:column="26"/></operator> <call><name pos:line="81" pos:column="27">make_virtual_commit<pos:position pos:line="81" pos:column="46"/></name><argument_list pos:line="81" pos:column="46">(<argument><expr><name pos:line="81" pos:column="47">mrtree<pos:position pos:line="81" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="55">"merged tree"<pos:position pos:line="81" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="82" pos:column="17">commit_list_insert<pos:position pos:line="82" pos:column="35"/></name><argument_list pos:line="82" pos:column="35">(<argument><expr><name pos:line="82" pos:column="36">h1<pos:position pos:line="82" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="40">&amp;<pos:position pos:line="82" pos:column="45"/></operator><name><operator pos:line="82" pos:column="41">(<pos:position pos:line="82" pos:column="42"/></operator><operator pos:line="82" pos:column="42">*<pos:position pos:line="82" pos:column="43"/></operator><name pos:line="82" pos:column="43">result<pos:position pos:line="82" pos:column="49"/></name><operator pos:line="82" pos:column="49">)<pos:position pos:line="82" pos:column="50"/></operator><operator pos:line="82" pos:column="50">-&gt;<pos:position pos:line="82" pos:column="55"/></operator><name pos:line="82" pos:column="52">parents<pos:position pos:line="82" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="83" pos:column="17">commit_list_insert<pos:position pos:line="83" pos:column="35"/></name><argument_list pos:line="83" pos:column="35">(<argument><expr><name pos:line="83" pos:column="36">h2<pos:position pos:line="83" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="40">&amp;<pos:position pos:line="83" pos:column="45"/></operator><name><operator pos:line="83" pos:column="41">(<pos:position pos:line="83" pos:column="42"/></operator><operator pos:line="83" pos:column="42">*<pos:position pos:line="83" pos:column="43"/></operator><name pos:line="83" pos:column="43">result<pos:position pos:line="83" pos:column="49"/></name><operator pos:line="83" pos:column="49">)<pos:position pos:line="83" pos:column="50"/></operator><operator pos:line="83" pos:column="50">-&gt;<pos:position pos:line="83" pos:column="55"/></operator><name><name pos:line="83" pos:column="52">parents<pos:position pos:line="83" pos:column="59"/></name><operator pos:line="83" pos:column="59">-&gt;<pos:position pos:line="83" pos:column="64"/></operator><name pos:line="83" pos:column="61">next<pos:position pos:line="83" pos:column="65"/></name></name></name></expr></argument>)<pos:position pos:line="83" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="84" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="85" pos:column="9">flush_output<pos:position pos:line="85" pos:column="21"/></name><argument_list pos:line="85" pos:column="21">(<argument><expr><name pos:line="85" pos:column="22">o<pos:position pos:line="85" pos:column="23"/></name></expr></argument>)<pos:position pos:line="85" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="25"/></expr_stmt>
	<if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><operator pos:line="86" pos:column="13">!<pos:position pos:line="86" pos:column="14"/></operator><name><name pos:line="86" pos:column="14">o<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">-&gt;<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="17">call_depth<pos:position pos:line="86" pos:column="27"/></name></name> <operator pos:line="86" pos:column="28">&amp;&amp;<pos:position pos:line="86" pos:column="38"/></operator> <name><name pos:line="86" pos:column="31">o<pos:position pos:line="86" pos:column="32"/></name><operator pos:line="86" pos:column="32">-&gt;<pos:position pos:line="86" pos:column="37"/></operator><name pos:line="86" pos:column="34">buffer_output<pos:position pos:line="86" pos:column="47"/></name></name> <operator pos:line="86" pos:column="48">&lt;<pos:position pos:line="86" pos:column="52"/></operator> <literal type="number" pos:line="86" pos:column="50">2<pos:position pos:line="86" pos:column="51"/></literal></expr>)<pos:position pos:line="86" pos:column="52"/></condition><then pos:line="86" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="17">strbuf_release<pos:position pos:line="87" pos:column="31"/></name><argument_list pos:line="87" pos:column="31">(<argument><expr><operator pos:line="87" pos:column="32">&amp;<pos:position pos:line="87" pos:column="37"/></operator><name><name pos:line="87" pos:column="33">o<pos:position pos:line="87" pos:column="34"/></name><operator pos:line="87" pos:column="34">-&gt;<pos:position pos:line="87" pos:column="39"/></operator><name pos:line="87" pos:column="36">obuf<pos:position pos:line="87" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="42"/></expr_stmt></block></then></if>
	<if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><call><name pos:line="88" pos:column="13">show<pos:position pos:line="88" pos:column="17"/></name><argument_list pos:line="88" pos:column="17">(<argument><expr><name pos:line="88" pos:column="18">o<pos:position pos:line="88" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="21">2<pos:position pos:line="88" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="24"/></condition><then pos:line="88" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="17">diff_warn_rename_limit<pos:position pos:line="89" pos:column="39"/></name><argument_list pos:line="89" pos:column="39">(<argument><expr><literal type="string" pos:line="89" pos:column="40">"merge.renamelimit"<pos:position pos:line="89" pos:column="59"/></literal></expr></argument>,
				       <argument><expr><name><name pos:line="90" pos:column="40">o<pos:position pos:line="90" pos:column="41"/></name><operator pos:line="90" pos:column="41">-&gt;<pos:position pos:line="90" pos:column="46"/></operator><name pos:line="90" pos:column="43">needed_rename_limit<pos:position pos:line="90" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="64">0<pos:position pos:line="90" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="67"/></expr_stmt></block></then></if>
	<return pos:line="91" pos:column="9">return <expr><name pos:line="91" pos:column="16">clean<pos:position pos:line="91" pos:column="21"/></name></expr>;<pos:position pos:line="91" pos:column="22"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

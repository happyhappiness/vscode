<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3441_git-2.10.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">init_tree_desc<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">tree_desc<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">desc<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">void<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">buffer<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">unsigned<pos:position pos:line="1" pos:column="73"/></name> <name pos:line="1" pos:column="74">long<pos:position pos:line="1" pos:column="78"/></name></type> <name pos:line="1" pos:column="79">size<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><name><name pos:line="3" pos:column="9">desc<pos:position pos:line="3" pos:column="13"/></name><operator pos:line="3" pos:column="13">-&gt;<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="15">buffer<pos:position pos:line="3" pos:column="21"/></name></name> <operator pos:line="3" pos:column="22">=<pos:position pos:line="3" pos:column="23"/></operator> <name pos:line="3" pos:column="24">buffer<pos:position pos:line="3" pos:column="30"/></name></expr>;<pos:position pos:line="3" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="4" pos:column="9">desc<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">-&gt;<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="15">size<pos:position pos:line="4" pos:column="19"/></name></name> <operator pos:line="4" pos:column="20">=<pos:position pos:line="4" pos:column="21"/></operator> <name pos:line="4" pos:column="22">size<pos:position pos:line="4" pos:column="26"/></name></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">size<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">decode_tree_entry<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">desc<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="41">buffer<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="49">size<pos:position pos:line="6" pos:column="53"/></name></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="55"/></expr_stmt></block></then></if>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2316_git-2.4.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rpc_service<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">rpc_state<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">rpc<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">discovery<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">heads<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">svc<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name><name pos:line="3" pos:column="27">rpc<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">-&gt;<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="32">service_name<pos:position pos:line="3" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">preamble<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name><name pos:line="5" pos:column="35">rpc<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">-&gt;<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="40">stdin_preamble<pos:position pos:line="5" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">child_process<pos:position pos:line="6" pos:column="29"/></name></name></type> <name pos:line="6" pos:column="30">client<pos:position pos:line="6" pos:column="36"/></name> <init pos:line="6" pos:column="37">= <expr><name pos:line="6" pos:column="39">CHILD_PROCESS_INIT<pos:position pos:line="6" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">err<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="9" pos:column="9">client<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">in<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <operator pos:line="9" pos:column="21">-<pos:position pos:line="9" pos:column="22"/></operator><literal type="number" pos:line="9" pos:column="22">1<pos:position pos:line="9" pos:column="23"/></literal></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">client<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">.<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">out<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <operator pos:line="10" pos:column="22">-<pos:position pos:line="10" pos:column="23"/></operator><literal type="number" pos:line="10" pos:column="23">1<pos:position pos:line="10" pos:column="24"/></literal></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">client<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">.<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">git_cmd<pos:position pos:line="11" pos:column="23"/></name></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">client<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">.<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">argv<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name><name pos:line="12" pos:column="23">rpc<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">argv<pos:position pos:line="12" pos:column="32"/></name></name></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">start_command<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><operator pos:line="13" pos:column="27">&amp;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="28">client<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">exit<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><literal type="number" pos:line="14" pos:column="22">1<pos:position pos:line="14" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">preamble<pos:position pos:line="15" pos:column="21"/></name></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">write_or_die<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name><name pos:line="16" pos:column="30">client<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">.<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="37">in<pos:position pos:line="16" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="41">preamble<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">-&gt;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="51">buf<pos:position pos:line="16" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="56">preamble<pos:position pos:line="16" pos:column="64"/></name><operator pos:line="16" pos:column="64">-&gt;<pos:position pos:line="16" pos:column="69"/></operator><name pos:line="16" pos:column="66">len<pos:position pos:line="16" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="71"/></expr_stmt></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">heads<pos:position pos:line="17" pos:column="18"/></name></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">write_or_die<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name><name pos:line="18" pos:column="30">client<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">.<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="37">in<pos:position pos:line="18" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="41">heads<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">-&gt;<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="48">buf<pos:position pos:line="18" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="53">heads<pos:position pos:line="18" pos:column="58"/></name><operator pos:line="18" pos:column="58">-&gt;<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="60">len<pos:position pos:line="18" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="65"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="20" pos:column="9">rpc<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">alloc<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">http_post_buffer<pos:position pos:line="20" pos:column="38"/></name></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">rpc<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">buf<pos:position pos:line="21" pos:column="17"/></name></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <call><name pos:line="21" pos:column="20">xmalloc<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name><name pos:line="21" pos:column="28">rpc<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">alloc<pos:position pos:line="21" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">rpc<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">in<pos:position pos:line="22" pos:column="16"/></name></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name><name pos:line="22" pos:column="19">client<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">.<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">in<pos:position pos:line="22" pos:column="28"/></name></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">rpc<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">out<pos:position pos:line="23" pos:column="17"/></name></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <name><name pos:line="23" pos:column="20">client<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">out<pos:position pos:line="23" pos:column="30"/></name></name></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">strbuf_init<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><operator pos:line="24" pos:column="21">&amp;<pos:position pos:line="24" pos:column="26"/></operator><name><name pos:line="24" pos:column="22">rpc<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">result<pos:position pos:line="24" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="35">0<pos:position pos:line="24" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">strbuf_addf<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><operator pos:line="26" pos:column="21">&amp;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="22">buf<pos:position pos:line="26" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="27">"%s%s"<pos:position pos:line="26" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="35">url<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">.<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="39">buf<pos:position pos:line="26" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="44">svc<pos:position pos:line="26" pos:column="47"/></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">rpc<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">service_url<pos:position pos:line="27" pos:column="25"/></name></name> <operator pos:line="27" pos:column="26">=<pos:position pos:line="27" pos:column="27"/></operator> <call><name pos:line="27" pos:column="28">strbuf_detach<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><operator pos:line="27" pos:column="42">&amp;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="43">buf<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">NULL<pos:position pos:line="27" pos:column="52"/></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="29" pos:column="9">strbuf_addf<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><operator pos:line="29" pos:column="21">&amp;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="22">buf<pos:position pos:line="29" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="27">"Content-Type: application/x-%s-request"<pos:position pos:line="29" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="69">svc<pos:position pos:line="29" pos:column="72"/></name></expr></argument>)<pos:position pos:line="29" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">rpc<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">hdr_content_type<pos:position pos:line="30" pos:column="30"/></name></name> <operator pos:line="30" pos:column="31">=<pos:position pos:line="30" pos:column="32"/></operator> <call><name pos:line="30" pos:column="33">strbuf_detach<pos:position pos:line="30" pos:column="46"/></name><argument_list pos:line="30" pos:column="46">(<argument><expr><operator pos:line="30" pos:column="47">&amp;<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="48">buf<pos:position pos:line="30" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="53">NULL<pos:position pos:line="30" pos:column="57"/></name></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="59"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">strbuf_addf<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><operator pos:line="32" pos:column="21">&amp;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="22">buf<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="27">"Accept: application/x-%s-result"<pos:position pos:line="32" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="62">svc<pos:position pos:line="32" pos:column="65"/></name></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="33" pos:column="9">rpc<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">hdr_accept<pos:position pos:line="33" pos:column="24"/></name></name> <operator pos:line="33" pos:column="25">=<pos:position pos:line="33" pos:column="26"/></operator> <call><name pos:line="33" pos:column="27">strbuf_detach<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><operator pos:line="33" pos:column="41">&amp;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="42">buf<pos:position pos:line="33" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="47">NULL<pos:position pos:line="33" pos:column="51"/></name></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>

	<while pos:line="35" pos:column="9">while <condition pos:line="35" pos:column="15">(<expr><operator pos:line="35" pos:column="16">!<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">err<pos:position pos:line="35" pos:column="20"/></name></expr>)<pos:position pos:line="35" pos:column="21"/></condition> <block pos:line="35" pos:column="22">{
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">int<pos:position pos:line="36" pos:column="20"/></name></type> <name pos:line="36" pos:column="21">n<pos:position pos:line="36" pos:column="22"/></name> <init pos:line="36" pos:column="23">= <expr><call><name pos:line="36" pos:column="25">packet_read<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><name><name pos:line="36" pos:column="37">rpc<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">-&gt;<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="42">out<pos:position pos:line="36" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">NULL<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">NULL<pos:position pos:line="36" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="59">rpc<pos:position pos:line="36" pos:column="62"/></name><operator pos:line="36" pos:column="62">-&gt;<pos:position pos:line="36" pos:column="67"/></operator><name pos:line="36" pos:column="64">buf<pos:position pos:line="36" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="69">rpc<pos:position pos:line="36" pos:column="72"/></name><operator pos:line="36" pos:column="72">-&gt;<pos:position pos:line="36" pos:column="77"/></operator><name pos:line="36" pos:column="74">alloc<pos:position pos:line="36" pos:column="79"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="81">0<pos:position pos:line="36" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="84"/></decl_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">n<pos:position pos:line="37" pos:column="23"/></name></expr>)<pos:position pos:line="37" pos:column="24"/></condition><then pos:line="37" pos:column="24">
			<block type="pseudo"><break pos:line="38" pos:column="25">break;<pos:position pos:line="38" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name><name pos:line="39" pos:column="17">rpc<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">pos<pos:position pos:line="39" pos:column="25"/></name></name> <operator pos:line="39" pos:column="26">=<pos:position pos:line="39" pos:column="27"/></operator> <literal type="number" pos:line="39" pos:column="28">0<pos:position pos:line="39" pos:column="29"/></literal></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="40" pos:column="17">rpc<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">-&gt;<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="22">len<pos:position pos:line="40" pos:column="25"/></name></name> <operator pos:line="40" pos:column="26">=<pos:position pos:line="40" pos:column="27"/></operator> <name pos:line="40" pos:column="28">n<pos:position pos:line="40" pos:column="29"/></name></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">err<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">|=<pos:position pos:line="41" pos:column="23"/></operator> <call><name pos:line="41" pos:column="24">post_rpc<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">rpc<pos:position pos:line="41" pos:column="36"/></name></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="44" pos:column="9">close<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><name><name pos:line="44" pos:column="15">client<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">.<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">in<pos:position pos:line="44" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">client<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">.<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="16">in<pos:position pos:line="45" pos:column="18"/></name></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <operator pos:line="45" pos:column="21">-<pos:position pos:line="45" pos:column="22"/></operator><literal type="number" pos:line="45" pos:column="22">1<pos:position pos:line="45" pos:column="23"/></literal></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">!<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">err<pos:position pos:line="46" pos:column="17"/></name></expr>)<pos:position pos:line="46" pos:column="18"/></condition><then pos:line="46" pos:column="18"> <block pos:line="46" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">strbuf_read<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><operator pos:line="47" pos:column="29">&amp;<pos:position pos:line="47" pos:column="34"/></operator><name><name pos:line="47" pos:column="30">rpc<pos:position pos:line="47" pos:column="33"/></name><operator pos:line="47" pos:column="33">-&gt;<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="35">result<pos:position pos:line="47" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="43">client<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">.<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="50">out<pos:position pos:line="47" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="55">0<pos:position pos:line="47" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></then> <else pos:line="48" pos:column="11">else <block pos:line="48" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="49" pos:column="17">char<pos:position pos:line="49" pos:column="21"/></name></type> <name><name pos:line="49" pos:column="22">buf<pos:position pos:line="49" pos:column="25"/></name><index pos:line="49" pos:column="25">[<expr><literal type="number" pos:line="49" pos:column="26">4096<pos:position pos:line="49" pos:column="30"/></literal></expr>]<pos:position pos:line="49" pos:column="31"/></index></name></decl>;<pos:position pos:line="49" pos:column="32"/></decl_stmt>
		<for pos:line="50" pos:column="17">for <control pos:line="50" pos:column="21">(<init pos:line="50" pos:column="22">;<pos:position pos:line="50" pos:column="23"/></init><condition pos:line="50" pos:column="23">;<pos:position pos:line="50" pos:column="24"/></condition><incr/>)<pos:position pos:line="50" pos:column="25"/></control>
			<block type="pseudo"><if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><call><name pos:line="51" pos:column="29">xread<pos:position pos:line="51" pos:column="34"/></name><argument_list pos:line="51" pos:column="34">(<argument><expr><name><name pos:line="51" pos:column="35">client<pos:position pos:line="51" pos:column="41"/></name><operator pos:line="51" pos:column="41">.<pos:position pos:line="51" pos:column="42"/></operator><name pos:line="51" pos:column="42">out<pos:position pos:line="51" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="47">buf<pos:position pos:line="51" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="52">sizeof<argument_list pos:line="51" pos:column="58">(<argument><expr><name pos:line="51" pos:column="59">buf<pos:position pos:line="51" pos:column="62"/></name></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call> <operator pos:line="51" pos:column="65">&lt;=<pos:position pos:line="51" pos:column="70"/></operator> <literal type="number" pos:line="51" pos:column="68">0<pos:position pos:line="51" pos:column="69"/></literal></expr>)<pos:position pos:line="51" pos:column="70"/></condition><then pos:line="51" pos:column="70">
				<block type="pseudo"><break pos:line="52" pos:column="33">break;<pos:position pos:line="52" pos:column="39"/></break></block></then></if></block></for>
	}<pos:position pos:line="53" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="55" pos:column="9">close<pos:position pos:line="55" pos:column="14"/></name><argument_list pos:line="55" pos:column="14">(<argument><expr><name><name pos:line="55" pos:column="15">client<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">.<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="22">out<pos:position pos:line="55" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="56" pos:column="9">client<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">.<pos:position pos:line="56" pos:column="16"/></operator><name pos:line="56" pos:column="16">out<pos:position pos:line="56" pos:column="19"/></name></name> <operator pos:line="56" pos:column="20">=<pos:position pos:line="56" pos:column="21"/></operator> <operator pos:line="56" pos:column="22">-<pos:position pos:line="56" pos:column="23"/></operator><literal type="number" pos:line="56" pos:column="23">1<pos:position pos:line="56" pos:column="24"/></literal></expr>;<pos:position pos:line="56" pos:column="25"/></expr_stmt>

	<expr_stmt><expr><name pos:line="58" pos:column="9">err<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">|=<pos:position pos:line="58" pos:column="15"/></operator> <call><name pos:line="58" pos:column="16">finish_command<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">(<argument><expr><operator pos:line="58" pos:column="31">&amp;<pos:position pos:line="58" pos:column="36"/></operator><name pos:line="58" pos:column="32">client<pos:position pos:line="58" pos:column="38"/></name></expr></argument>)<pos:position pos:line="58" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">free<pos:position pos:line="59" pos:column="13"/></name><argument_list pos:line="59" pos:column="13">(<argument><expr><name><name pos:line="59" pos:column="14">rpc<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">service_url<pos:position pos:line="59" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">free<pos:position pos:line="60" pos:column="13"/></name><argument_list pos:line="60" pos:column="13">(<argument><expr><name><name pos:line="60" pos:column="14">rpc<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">-&gt;<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="19">hdr_content_type<pos:position pos:line="60" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">free<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">(<argument><expr><name><name pos:line="61" pos:column="14">rpc<pos:position pos:line="61" pos:column="17"/></name><operator pos:line="61" pos:column="17">-&gt;<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="19">hdr_accept<pos:position pos:line="61" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">free<pos:position pos:line="62" pos:column="13"/></name><argument_list pos:line="62" pos:column="13">(<argument><expr><name><name pos:line="62" pos:column="14">rpc<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">-&gt;<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="19">buf<pos:position pos:line="62" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">strbuf_release<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><operator pos:line="63" pos:column="24">&amp;<pos:position pos:line="63" pos:column="29"/></operator><name pos:line="63" pos:column="25">buf<pos:position pos:line="63" pos:column="28"/></name></expr></argument>)<pos:position pos:line="63" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="30"/></expr_stmt>
	<return pos:line="64" pos:column="9">return <expr><name pos:line="64" pos:column="16">err<pos:position pos:line="64" pos:column="19"/></name></expr>;<pos:position pos:line="64" pos:column="20"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1020_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pp_buffer_stderr<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">parallel_processes<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">pp<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">output_timeout<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><operator pos:line="5" pos:column="16">(<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">i<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">=<pos:position pos:line="5" pos:column="20"/></operator> <call><name pos:line="5" pos:column="21">poll<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name><name pos:line="5" pos:column="26">pp<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">pfd<pos:position pos:line="5" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="35">pp<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">-&gt;<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="39">max_processes<pos:position pos:line="5" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="54">output_timeout<pos:position pos:line="5" pos:column="68"/></name></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call><operator pos:line="5" pos:column="69">)<pos:position pos:line="5" pos:column="70"/></operator> <operator pos:line="5" pos:column="71">&lt;<pos:position pos:line="5" pos:column="75"/></operator> <literal type="number" pos:line="5" pos:column="73">0<pos:position pos:line="5" pos:column="74"/></literal></expr>)<pos:position pos:line="5" pos:column="75"/></condition> <block pos:line="5" pos:column="76">{
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><name pos:line="6" pos:column="21">errno<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">==<pos:position pos:line="6" pos:column="29"/></operator> <name pos:line="6" pos:column="30">EINTR<pos:position pos:line="6" pos:column="35"/></name></expr>)<pos:position pos:line="6" pos:column="36"/></condition><then pos:line="6" pos:column="36">
			<block type="pseudo"><continue pos:line="7" pos:column="25">continue;<pos:position pos:line="7" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">pp_cleanup<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">pp<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">die_errno<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><literal type="string" pos:line="9" pos:column="27">"poll"<pos:position pos:line="9" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></while>

	<comment type="block" pos:line="12" pos:column="9">/* Buffer output from all pipes. */</comment>
	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">i<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <name><name pos:line="13" pos:column="25">pp<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">max_processes<pos:position pos:line="13" pos:column="42"/></name></name></expr>;<pos:position pos:line="13" pos:column="43"/></condition> <incr><expr><name pos:line="13" pos:column="44">i<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">++<pos:position pos:line="13" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="48"/></control> <block pos:line="13" pos:column="49">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name><name pos:line="14" pos:column="21">pp<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">children<pos:position pos:line="14" pos:column="33"/></name><index pos:line="14" pos:column="33">[<expr><name pos:line="14" pos:column="34">i<pos:position pos:line="14" pos:column="35"/></name></expr>]<pos:position pos:line="14" pos:column="36"/></index></name><operator pos:line="14" pos:column="36">.<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">state<pos:position pos:line="14" pos:column="42"/></name> <operator pos:line="14" pos:column="43">==<pos:position pos:line="14" pos:column="45"/></operator> <name pos:line="14" pos:column="46">GIT_CP_WORKING<pos:position pos:line="14" pos:column="60"/></name> <operator pos:line="14" pos:column="61">&amp;&amp;<pos:position pos:line="14" pos:column="71"/></operator>
		    <name><name pos:line="15" pos:column="21">pp<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">pfd<pos:position pos:line="15" pos:column="28"/></name><index pos:line="15" pos:column="28">[<expr><name pos:line="15" pos:column="29">i<pos:position pos:line="15" pos:column="30"/></name></expr>]<pos:position pos:line="15" pos:column="31"/></index></name><operator pos:line="15" pos:column="31">.<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">revents<pos:position pos:line="15" pos:column="39"/></name> <operator pos:line="15" pos:column="40">&amp;<pos:position pos:line="15" pos:column="45"/></operator> <operator pos:line="15" pos:column="42">(<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">POLLIN<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">|<pos:position pos:line="15" pos:column="51"/></operator> <name pos:line="15" pos:column="52">POLLHUP<pos:position pos:line="15" pos:column="59"/></name><operator pos:line="15" pos:column="59">)<pos:position pos:line="15" pos:column="60"/></operator></expr>)<pos:position pos:line="15" pos:column="61"/></condition><then pos:line="15" pos:column="61"> <block pos:line="15" pos:column="62">{
			<decl_stmt><decl><type><name pos:line="16" pos:column="25">int<pos:position pos:line="16" pos:column="28"/></name></type> <name pos:line="16" pos:column="29">n<pos:position pos:line="16" pos:column="30"/></name> <init pos:line="16" pos:column="31">= <expr><call><name pos:line="16" pos:column="33">strbuf_read_once<pos:position pos:line="16" pos:column="49"/></name><argument_list pos:line="16" pos:column="49">(<argument><expr><operator pos:line="16" pos:column="50">&amp;<pos:position pos:line="16" pos:column="55"/></operator><name><name pos:line="16" pos:column="51">pp<pos:position pos:line="16" pos:column="53"/></name><operator pos:line="16" pos:column="53">-&gt;<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="55">children<pos:position pos:line="16" pos:column="63"/></name><index pos:line="16" pos:column="63">[<expr><name pos:line="16" pos:column="64">i<pos:position pos:line="16" pos:column="65"/></name></expr>]<pos:position pos:line="16" pos:column="66"/></index></name><operator pos:line="16" pos:column="66">.<pos:position pos:line="16" pos:column="67"/></operator><name pos:line="16" pos:column="67">err<pos:position pos:line="16" pos:column="70"/></name></expr></argument>,
						 <argument><expr><name><name pos:line="17" pos:column="50">pp<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">-&gt;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="54">children<pos:position pos:line="17" pos:column="62"/></name><index pos:line="17" pos:column="62">[<expr><name pos:line="17" pos:column="63">i<pos:position pos:line="17" pos:column="64"/></name></expr>]<pos:position pos:line="17" pos:column="65"/></index></name><operator pos:line="17" pos:column="65">.<pos:position pos:line="17" pos:column="66"/></operator><name><name pos:line="17" pos:column="66">process<pos:position pos:line="17" pos:column="73"/></name><operator pos:line="17" pos:column="73">.<pos:position pos:line="17" pos:column="74"/></operator><name pos:line="17" pos:column="74">err<pos:position pos:line="17" pos:column="77"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="79">0<pos:position pos:line="17" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="82"/></decl_stmt>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><name pos:line="18" pos:column="29">n<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">==<pos:position pos:line="18" pos:column="33"/></operator> <literal type="number" pos:line="18" pos:column="34">0<pos:position pos:line="18" pos:column="35"/></literal></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36"> <block pos:line="18" pos:column="37">{
				<expr_stmt><expr><call><name pos:line="19" pos:column="33">close<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name><name pos:line="19" pos:column="39">pp<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="43">children<pos:position pos:line="19" pos:column="51"/></name><index pos:line="19" pos:column="51">[<expr><name pos:line="19" pos:column="52">i<pos:position pos:line="19" pos:column="53"/></name></expr>]<pos:position pos:line="19" pos:column="54"/></index></name><operator pos:line="19" pos:column="54">.<pos:position pos:line="19" pos:column="55"/></operator><name><name pos:line="19" pos:column="55">process<pos:position pos:line="19" pos:column="62"/></name><operator pos:line="19" pos:column="62">.<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="63">err<pos:position pos:line="19" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="20" pos:column="33">pp<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">children<pos:position pos:line="20" pos:column="45"/></name><index pos:line="20" pos:column="45">[<expr><name pos:line="20" pos:column="46">i<pos:position pos:line="20" pos:column="47"/></name></expr>]<pos:position pos:line="20" pos:column="48"/></index></name><operator pos:line="20" pos:column="48">.<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="49">state<pos:position pos:line="20" pos:column="54"/></name> <operator pos:line="20" pos:column="55">=<pos:position pos:line="20" pos:column="56"/></operator> <name pos:line="20" pos:column="57">GIT_CP_WAIT_CLEANUP<pos:position pos:line="20" pos:column="76"/></name></expr>;<pos:position pos:line="20" pos:column="77"/></expr_stmt>
			}<pos:position pos:line="21" pos:column="26"/></block></then> <elseif pos:line="21" pos:column="27">else <if pos:line="21" pos:column="32">if <condition pos:line="21" pos:column="35">(<expr><name pos:line="21" pos:column="36">n<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">&lt;<pos:position pos:line="21" pos:column="42"/></operator> <literal type="number" pos:line="21" pos:column="40">0<pos:position pos:line="21" pos:column="41"/></literal></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42">
				<block type="pseudo"><if pos:line="22" pos:column="33">if <condition pos:line="22" pos:column="36">(<expr><name pos:line="22" pos:column="37">errno<pos:position pos:line="22" pos:column="42"/></name> <operator pos:line="22" pos:column="43">!=<pos:position pos:line="22" pos:column="45"/></operator> <name pos:line="22" pos:column="46">EAGAIN<pos:position pos:line="22" pos:column="52"/></name></expr>)<pos:position pos:line="22" pos:column="53"/></condition><then pos:line="22" pos:column="53">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="41">die_errno<pos:position pos:line="23" pos:column="50"/></name><argument_list pos:line="23" pos:column="50">(<argument><expr><literal type="string" pos:line="23" pos:column="51">"read"<pos:position pos:line="23" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt></block></then></if></block></then></if></elseif></if>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
	}<pos:position pos:line="25" pos:column="10"/></block></for>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

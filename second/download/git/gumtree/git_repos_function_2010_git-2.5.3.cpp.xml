<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2010_git-2.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">refs_from_alternate_cb<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">alternate_object_database<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">e<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="2" pos:column="35">void<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">data<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">other<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">remote<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">remote<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">transport<pos:position pos:line="7" pos:column="25"/></name></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">transport<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name><name pos:line="8" pos:column="15">struct<pos:position pos:line="8" pos:column="21"/></name> <name pos:line="8" pos:column="22">ref<pos:position pos:line="8" pos:column="25"/></name></name> <modifier pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></modifier></type><name pos:line="8" pos:column="27">extra<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">alternate_refs_data<pos:position pos:line="9" pos:column="35"/></name></name> <modifier pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></modifier></type><name pos:line="9" pos:column="37">cb<pos:position pos:line="9" pos:column="39"/></name> <init pos:line="9" pos:column="40">= <expr><name pos:line="9" pos:column="42">data<pos:position pos:line="9" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="47"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="11" pos:column="9">e<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">name<pos:position pos:line="11" pos:column="16"/></name><index pos:line="11" pos:column="16">[<expr><operator pos:line="11" pos:column="17">-<pos:position pos:line="11" pos:column="18"/></operator><literal type="number" pos:line="11" pos:column="18">1<pos:position pos:line="11" pos:column="19"/></literal></expr>]<pos:position pos:line="11" pos:column="20"/></index></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <literal type="char" pos:line="11" pos:column="23">'\0'<pos:position pos:line="11" pos:column="27"/></literal></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">other<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">xstrdup<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><call><name pos:line="12" pos:column="25">real_path<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name><name pos:line="12" pos:column="35">e<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">base<pos:position pos:line="12" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">e<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">name<pos:position pos:line="13" pos:column="16"/></name><index pos:line="13" pos:column="16">[<expr><operator pos:line="13" pos:column="17">-<pos:position pos:line="13" pos:column="18"/></operator><literal type="number" pos:line="13" pos:column="18">1<pos:position pos:line="13" pos:column="19"/></literal></expr>]<pos:position pos:line="13" pos:column="20"/></index></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <literal type="char" pos:line="13" pos:column="23">'/'<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">len<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">strlen<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">other<pos:position pos:line="14" pos:column="27"/></name></expr></argument>)<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>

	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><name><name pos:line="16" pos:column="16">other<pos:position pos:line="16" pos:column="21"/></name><index pos:line="16" pos:column="21">[<expr><name pos:line="16" pos:column="22">len<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-<pos:position pos:line="16" pos:column="26"/></operator><literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal></expr>]<pos:position pos:line="16" pos:column="28"/></index></name> <operator pos:line="16" pos:column="29">==<pos:position pos:line="16" pos:column="31"/></operator> <literal type="char" pos:line="16" pos:column="32">'/'<pos:position pos:line="16" pos:column="35"/></literal></expr>)<pos:position pos:line="16" pos:column="36"/></condition>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="17">other<pos:position pos:line="17" pos:column="22"/></name><index pos:line="17" pos:column="22">[<expr><operator pos:line="17" pos:column="23">--<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">len<pos:position pos:line="17" pos:column="28"/></name></expr>]<pos:position pos:line="17" pos:column="29"/></index></name> <operator pos:line="17" pos:column="30">=<pos:position pos:line="17" pos:column="31"/></operator> <literal type="char" pos:line="17" pos:column="32">'\0'<pos:position pos:line="17" pos:column="36"/></literal></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt></block></while>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">len<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">&lt;<pos:position pos:line="18" pos:column="21"/></operator> <literal type="number" pos:line="18" pos:column="19">8<pos:position pos:line="18" pos:column="20"/></literal> <operator pos:line="18" pos:column="21">||<pos:position pos:line="18" pos:column="23"/></operator> <call><name pos:line="18" pos:column="24">memcmp<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">other<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">+<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="39">len<pos:position pos:line="18" pos:column="42"/></name> <operator pos:line="18" pos:column="43">-<pos:position pos:line="18" pos:column="44"/></operator> <literal type="number" pos:line="18" pos:column="45">8<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="48">"/objects"<pos:position pos:line="18" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="60">8<pos:position pos:line="18" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="63"/></condition><then pos:line="18" pos:column="63">
		<block type="pseudo"><goto pos:line="19" pos:column="17">goto <name pos:line="19" pos:column="22">out<pos:position pos:line="19" pos:column="25"/></name>;<pos:position pos:line="19" pos:column="26"/></goto></block></then></if>
	<comment type="block" pos:line="20" pos:column="9">/* Is this a git repository with refs? */</comment>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">memcpy<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">other<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">+<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="24">len<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">-<pos:position pos:line="21" pos:column="29"/></operator> <literal type="number" pos:line="21" pos:column="30">8<pos:position pos:line="21" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="33">"/refs"<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="42">6<pos:position pos:line="21" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><call><name pos:line="22" pos:column="14">is_directory<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">other<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34">
		<block type="pseudo"><goto pos:line="23" pos:column="17">goto <name pos:line="23" pos:column="22">out<pos:position pos:line="23" pos:column="25"/></name>;<pos:position pos:line="23" pos:column="26"/></goto></block></then></if>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">other<pos:position pos:line="24" pos:column="14"/></name><index pos:line="24" pos:column="14">[<expr><name pos:line="24" pos:column="15">len<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">-<pos:position pos:line="24" pos:column="20"/></operator> <literal type="number" pos:line="24" pos:column="21">8<pos:position pos:line="24" pos:column="22"/></literal></expr>]<pos:position pos:line="24" pos:column="23"/></index></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <literal type="char" pos:line="24" pos:column="26">'\0'<pos:position pos:line="24" pos:column="30"/></literal></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="25" pos:column="9">remote<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name pos:line="25" pos:column="18">remote_get<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">other<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">transport<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <call><name pos:line="26" pos:column="21">transport_get<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><name pos:line="26" pos:column="35">remote<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">other<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="50"/></expr_stmt>
	<for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init><expr><name pos:line="27" pos:column="14">extra<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <call><name pos:line="27" pos:column="22">transport_get_remote_refs<pos:position pos:line="27" pos:column="47"/></name><argument_list pos:line="27" pos:column="47">(<argument><expr><name pos:line="27" pos:column="48">transport<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></init>
	     <condition><expr><name pos:line="28" pos:column="14">extra<pos:position pos:line="28" pos:column="19"/></name></expr>;<pos:position pos:line="28" pos:column="20"/></condition>
	     <incr><expr><name pos:line="29" pos:column="14">extra<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <name><name pos:line="29" pos:column="22">extra<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">next<pos:position pos:line="29" pos:column="33"/></name></name></expr></incr>)<pos:position pos:line="29" pos:column="34"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name><name pos:line="30" pos:column="17">cb<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">fn<pos:position pos:line="30" pos:column="23"/></name></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">extra<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="31">cb<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">data<pos:position pos:line="30" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">transport_disconnect<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">transport<pos:position pos:line="31" pos:column="39"/></name></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
<label><name pos:line="32" pos:column="1">out<pos:position pos:line="32" pos:column="4"/></name>:<pos:position pos:line="32" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">free<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><name pos:line="33" pos:column="14">other<pos:position pos:line="33" pos:column="19"/></name></expr></argument>)<pos:position pos:line="33" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="21"/></expr_stmt>
	<return pos:line="34" pos:column="9">return <expr><literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

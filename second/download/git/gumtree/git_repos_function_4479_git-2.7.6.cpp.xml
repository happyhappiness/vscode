<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4479_git-2.7.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_merge_base<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">argc<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">argv<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">prefix<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier><modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">rev<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">rev_nr<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">show_all<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">cmdmode<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><literal type="number" pos:line="6" pos:column="23">0<pos:position pos:line="6" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">option<pos:position pos:line="8" pos:column="22"/></name></name></type> <name><name pos:line="8" pos:column="23">options<pos:position pos:line="8" pos:column="30"/></name><index pos:line="8" pos:column="30">[]<pos:position pos:line="8" pos:column="32"/></index></name> <init pos:line="8" pos:column="33">= <expr><block pos:line="8" pos:column="35">{
		<expr><call><name pos:line="9" pos:column="17">OPT_BOOL<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><literal type="char" pos:line="9" pos:column="26">'a'<pos:position pos:line="9" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="31">"all"<pos:position pos:line="9" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="38">&amp;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="39">show_all<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="49">N_<pos:position pos:line="9" pos:column="51"/></name><argument_list pos:line="9" pos:column="51">(<argument><expr><literal type="string" pos:line="9" pos:column="52">"output all common ancestors"<pos:position pos:line="9" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="83"/></argument_list></call></expr>,
		<expr><call><name pos:line="10" pos:column="17">OPT_CMDMODE<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="32">"octopus"<pos:position pos:line="10" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="43">&amp;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="44">cmdmode<pos:position pos:line="10" pos:column="51"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="11" pos:column="29">N_<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><literal type="string" pos:line="11" pos:column="32">"find ancestors for a single n-way merge"<pos:position pos:line="11" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="76">'o'<pos:position pos:line="11" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="80"/></argument_list></call></expr>,
		<expr><call><name pos:line="12" pos:column="17">OPT_CMDMODE<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><literal type="number" pos:line="12" pos:column="29">0<pos:position pos:line="12" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="32">"independent"<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="47">&amp;<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="48">cmdmode<pos:position pos:line="12" pos:column="55"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="13" pos:column="29">N_<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><literal type="string" pos:line="13" pos:column="32">"list revs not reachable from others"<pos:position pos:line="13" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="72">'r'<pos:position pos:line="13" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="76"/></argument_list></call></expr>,
		<expr><call><name pos:line="14" pos:column="17">OPT_CMDMODE<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><literal type="number" pos:line="14" pos:column="29">0<pos:position pos:line="14" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="32">"is-ancestor"<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="47">&amp;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="48">cmdmode<pos:position pos:line="14" pos:column="55"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="15" pos:column="29">N_<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><literal type="string" pos:line="15" pos:column="32">"is the first one ancestor of the other?"<pos:position pos:line="15" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="76">'a'<pos:position pos:line="15" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="80"/></argument_list></call></expr>,
		<expr><call><name pos:line="16" pos:column="17">OPT_CMDMODE<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><literal type="number" pos:line="16" pos:column="29">0<pos:position pos:line="16" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="32">"fork-point"<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="46">&amp;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="47">cmdmode<pos:position pos:line="16" pos:column="54"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="17" pos:column="29">N_<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><literal type="string" pos:line="17" pos:column="32">"find where &lt;commit&gt; forked from reflog of &lt;ref&gt;"<pos:position pos:line="17" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="84">'f'<pos:position pos:line="17" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="88"/></argument_list></call></expr>,
		<macro><name pos:line="18" pos:column="17">OPT_END<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">()<pos:position pos:line="18" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="19" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="19" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="21" pos:column="9">git_config<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">git_default_config<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">NULL<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">argc<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">parse_options<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">argc<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="36">argv<pos:position pos:line="22" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="42">prefix<pos:position pos:line="22" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="50">options<pos:position pos:line="22" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="59">merge_base_usage<pos:position pos:line="22" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="77">0<pos:position pos:line="22" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="80"/></expr_stmt>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">cmdmode<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">==<pos:position pos:line="24" pos:column="23"/></operator> <literal type="char" pos:line="24" pos:column="24">'a'<pos:position pos:line="24" pos:column="27"/></literal></expr>)<pos:position pos:line="24" pos:column="28"/></condition><then pos:line="24" pos:column="28"> <block pos:line="24" pos:column="29">{
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">argc<pos:position pos:line="25" pos:column="25"/></name> <operator pos:line="25" pos:column="26">&lt;<pos:position pos:line="25" pos:column="30"/></operator> <literal type="number" pos:line="25" pos:column="28">2<pos:position pos:line="25" pos:column="29"/></literal></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="25">usage_with_options<pos:position pos:line="26" pos:column="43"/></name><argument_list pos:line="26" pos:column="43">(<argument><expr><name pos:line="26" pos:column="44">merge_base_usage<pos:position pos:line="26" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="62">options<pos:position pos:line="26" pos:column="69"/></name></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt></block></then></if>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">show_all<pos:position pos:line="27" pos:column="29"/></name></expr>)<pos:position pos:line="27" pos:column="30"/></condition><then pos:line="27" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">die<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><literal type="string" pos:line="28" pos:column="29">"--is-ancestor cannot be used with --all"<pos:position pos:line="28" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="72"/></expr_stmt></block></then></if>
		<return pos:line="29" pos:column="17">return <expr><call><name pos:line="29" pos:column="24">handle_is_ancestor<pos:position pos:line="29" pos:column="42"/></name><argument_list pos:line="29" pos:column="42">(<argument><expr><name pos:line="29" pos:column="43">argc<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">argv<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">cmdmode<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">==<pos:position pos:line="32" pos:column="23"/></operator> <literal type="char" pos:line="32" pos:column="24">'r'<pos:position pos:line="32" pos:column="27"/></literal> <operator pos:line="32" pos:column="28">&amp;&amp;<pos:position pos:line="32" pos:column="38"/></operator> <name pos:line="32" pos:column="31">show_all<pos:position pos:line="32" pos:column="39"/></name></expr>)<pos:position pos:line="32" pos:column="40"/></condition><then pos:line="32" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">die<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><literal type="string" pos:line="33" pos:column="21">"--independent cannot be used with --all"<pos:position pos:line="33" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="64"/></expr_stmt></block></then></if>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">cmdmode<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">==<pos:position pos:line="35" pos:column="23"/></operator> <literal type="char" pos:line="35" pos:column="24">'o'<pos:position pos:line="35" pos:column="27"/></literal></expr>)<pos:position pos:line="35" pos:column="28"/></condition><then pos:line="35" pos:column="28">
		<block type="pseudo"><return pos:line="36" pos:column="17">return <expr><call><name pos:line="36" pos:column="24">handle_octopus<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">(<argument><expr><name pos:line="36" pos:column="39">argc<pos:position pos:line="36" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="45">argv<pos:position pos:line="36" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">show_all<pos:position pos:line="36" pos:column="59"/></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></return></block></then></if>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">cmdmode<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">==<pos:position pos:line="38" pos:column="23"/></operator> <literal type="char" pos:line="38" pos:column="24">'r'<pos:position pos:line="38" pos:column="27"/></literal></expr>)<pos:position pos:line="38" pos:column="28"/></condition><then pos:line="38" pos:column="28">
		<block type="pseudo"><return pos:line="39" pos:column="17">return <expr><call><name pos:line="39" pos:column="24">handle_independent<pos:position pos:line="39" pos:column="42"/></name><argument_list pos:line="39" pos:column="42">(<argument><expr><name pos:line="39" pos:column="43">argc<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="49">argv<pos:position pos:line="39" pos:column="53"/></name></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="55"/></return></block></then></if>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">cmdmode<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">==<pos:position pos:line="41" pos:column="23"/></operator> <literal type="char" pos:line="41" pos:column="24">'f'<pos:position pos:line="41" pos:column="27"/></literal></expr>)<pos:position pos:line="41" pos:column="28"/></condition><then pos:line="41" pos:column="28"> <block pos:line="41" pos:column="29">{
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">argc<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">&lt;<pos:position pos:line="42" pos:column="30"/></operator> <literal type="number" pos:line="42" pos:column="28">1<pos:position pos:line="42" pos:column="29"/></literal> <operator pos:line="42" pos:column="30">||<pos:position pos:line="42" pos:column="32"/></operator> <literal type="number" pos:line="42" pos:column="33">2<pos:position pos:line="42" pos:column="34"/></literal> <operator pos:line="42" pos:column="35">&lt;<pos:position pos:line="42" pos:column="39"/></operator> <name pos:line="42" pos:column="37">argc<pos:position pos:line="42" pos:column="41"/></name></expr>)<pos:position pos:line="42" pos:column="42"/></condition><then pos:line="42" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="25">usage_with_options<pos:position pos:line="43" pos:column="43"/></name><argument_list pos:line="43" pos:column="43">(<argument><expr><name pos:line="43" pos:column="44">merge_base_usage<pos:position pos:line="43" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="62">options<pos:position pos:line="43" pos:column="69"/></name></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="71"/></expr_stmt></block></then></if>
		<return pos:line="44" pos:column="17">return <expr><call><name pos:line="44" pos:column="24">handle_fork_point<pos:position pos:line="44" pos:column="41"/></name><argument_list pos:line="44" pos:column="41">(<argument><expr><name pos:line="44" pos:column="42">argc<pos:position pos:line="44" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="48">argv<pos:position pos:line="44" pos:column="52"/></name></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="54"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">argc<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">&lt;<pos:position pos:line="47" pos:column="22"/></operator> <literal type="number" pos:line="47" pos:column="20">2<pos:position pos:line="47" pos:column="21"/></literal></expr>)<pos:position pos:line="47" pos:column="22"/></condition><then pos:line="47" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="17">usage_with_options<pos:position pos:line="48" pos:column="35"/></name><argument_list pos:line="48" pos:column="35">(<argument><expr><name pos:line="48" pos:column="36">merge_base_usage<pos:position pos:line="48" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="54">options<pos:position pos:line="48" pos:column="61"/></name></expr></argument>)<pos:position pos:line="48" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="63"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="50" pos:column="9">ALLOC_ARRAY<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><name pos:line="50" pos:column="21">rev<pos:position pos:line="50" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="26">argc<pos:position pos:line="50" pos:column="30"/></name></expr></argument>)<pos:position pos:line="50" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
	<while pos:line="51" pos:column="9">while <condition pos:line="51" pos:column="15">(<expr><name pos:line="51" pos:column="16">argc<pos:position pos:line="51" pos:column="20"/></name><operator pos:line="51" pos:column="20">--<pos:position pos:line="51" pos:column="22"/></operator> <operator pos:line="51" pos:column="23">&gt;<pos:position pos:line="51" pos:column="27"/></operator> <literal type="number" pos:line="51" pos:column="25">0<pos:position pos:line="51" pos:column="26"/></literal></expr>)<pos:position pos:line="51" pos:column="27"/></condition>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="52" pos:column="17">rev<pos:position pos:line="52" pos:column="20"/></name><index pos:line="52" pos:column="20">[<expr><name pos:line="52" pos:column="21">rev_nr<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">++<pos:position pos:line="52" pos:column="29"/></operator></expr>]<pos:position pos:line="52" pos:column="30"/></index></name> <operator pos:line="52" pos:column="31">=<pos:position pos:line="52" pos:column="32"/></operator> <call><name pos:line="52" pos:column="33">get_commit_reference<pos:position pos:line="52" pos:column="53"/></name><argument_list pos:line="52" pos:column="53">(<argument><expr><operator pos:line="52" pos:column="54">*<pos:position pos:line="52" pos:column="55"/></operator><name pos:line="52" pos:column="55">argv<pos:position pos:line="52" pos:column="59"/></name><operator pos:line="52" pos:column="59">++<pos:position pos:line="52" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="63"/></expr_stmt></block></while>
	<return pos:line="53" pos:column="9">return <expr><call><name pos:line="53" pos:column="16">show_merge_base<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><name pos:line="53" pos:column="32">rev<pos:position pos:line="53" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="37">rev_nr<pos:position pos:line="53" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="45">show_all<pos:position pos:line="53" pos:column="53"/></name></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="55"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

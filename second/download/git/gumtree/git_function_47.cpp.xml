<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_47.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_replace<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">argc<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">argv<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">prefix<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">list<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><literal type="number" pos:line="3" pos:column="20">0<pos:position pos:line="3" pos:column="21"/></literal></expr></init></decl>, delete <init pos:line="3" pos:column="30">= <expr><literal type="number" pos:line="3" pos:column="32">0<pos:position pos:line="3" pos:column="33"/></literal></expr></init>, <decl><type ref="prev"/><name pos:line="3" pos:column="35">force<pos:position pos:line="3" pos:column="40"/></name> <init pos:line="3" pos:column="41">= <expr><literal type="number" pos:line="3" pos:column="43">0<pos:position pos:line="3" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">format<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">NULL<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">option<pos:position pos:line="5" pos:column="22"/></name></name></type> <name><name pos:line="5" pos:column="23">options<pos:position pos:line="5" pos:column="30"/></name><index pos:line="5" pos:column="30">[]<pos:position pos:line="5" pos:column="32"/></index></name> <init pos:line="5" pos:column="33">= <expr><block pos:line="5" pos:column="35">{
		<expr><call><name pos:line="6" pos:column="17">OPT_BOOL<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><literal type="char" pos:line="6" pos:column="26">'l'<pos:position pos:line="6" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="31">"list"<pos:position pos:line="6" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="39">&amp;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="40">list<pos:position pos:line="6" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="46">N_<pos:position pos:line="6" pos:column="48"/></name><argument_list pos:line="6" pos:column="48">(<argument><expr><literal type="string" pos:line="6" pos:column="49">"list replace refs"<pos:position pos:line="6" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="70"/></argument_list></call></expr>,
		<expr><call><name pos:line="7" pos:column="17">OPT_BOOL<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><literal type="char" pos:line="7" pos:column="26">'d'<pos:position pos:line="7" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="31">"delete"<pos:position pos:line="7" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="41">&amp;<pos:position pos:line="7" pos:column="46"/></operator><operator pos:line="7" pos:column="42">delete<pos:position pos:line="7" pos:column="48"/></operator></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="50">N_<pos:position pos:line="7" pos:column="52"/></name><argument_list pos:line="7" pos:column="52">(<argument><expr><literal type="string" pos:line="7" pos:column="53">"delete replace refs"<pos:position pos:line="7" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="76"/></argument_list></call></expr>,
		<expr><call><name pos:line="8" pos:column="17">OPT_BOOL<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="char" pos:line="8" pos:column="26">'f'<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="31">"force"<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="40">&amp;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="41">force<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="48">N_<pos:position pos:line="8" pos:column="50"/></name><argument_list pos:line="8" pos:column="50">(<argument><expr><literal type="string" pos:line="8" pos:column="51">"replace the ref if it exists"<pos:position pos:line="8" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="83"/></argument_list></call></expr>,
		<expr><call><name pos:line="9" pos:column="17">OPT_STRING<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><literal type="number" pos:line="9" pos:column="28">0<pos:position pos:line="9" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="31">"format"<pos:position pos:line="9" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="41">&amp;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="42">format<pos:position pos:line="9" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="50">N_<pos:position pos:line="9" pos:column="52"/></name><argument_list pos:line="9" pos:column="52">(<argument><expr><literal type="string" pos:line="9" pos:column="53">"format"<pos:position pos:line="9" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="64">N_<pos:position pos:line="9" pos:column="66"/></name><argument_list pos:line="9" pos:column="66">(<argument><expr><literal type="string" pos:line="9" pos:column="67">"use this format"<pos:position pos:line="9" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="86"/></argument_list></call></expr>,
		<macro><name pos:line="10" pos:column="17">OPT_END<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">()<pos:position pos:line="10" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="11" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">check_replace_refs<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <literal type="number" pos:line="13" pos:column="30">0<pos:position pos:line="13" pos:column="31"/></literal></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">argc<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">parse_options<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">argc<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">argv<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">prefix<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">options<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="59">git_replace_usage<pos:position pos:line="15" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="78">0<pos:position pos:line="15" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="81"/></expr_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">list<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">&amp;&amp;<pos:position pos:line="17" pos:column="28"/></operator> <operator pos:line="17" pos:column="21">delete<pos:position pos:line="17" pos:column="27"/></operator></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">usage_msg_opt<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><literal type="string" pos:line="18" pos:column="31">"-l and -d cannot be used together"<pos:position pos:line="18" pos:column="66"/></literal></expr></argument>,
			      <argument><expr><name pos:line="19" pos:column="31">git_replace_usage<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">options<pos:position pos:line="19" pos:column="57"/></name></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">format<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">&amp;&amp;<pos:position pos:line="21" pos:column="30"/></operator> <operator pos:line="21" pos:column="23">delete<pos:position pos:line="21" pos:column="29"/></operator></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">usage_msg_opt<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><literal type="string" pos:line="22" pos:column="31">"--format and -d cannot be used together"<pos:position pos:line="22" pos:column="72"/></literal></expr></argument>,
			      <argument><expr><name pos:line="23" pos:column="31">git_replace_usage<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">options<pos:position pos:line="23" pos:column="57"/></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt></block></then></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">force<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">&amp;&amp;<pos:position pos:line="25" pos:column="29"/></operator> <operator pos:line="25" pos:column="22">(<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">list<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">||<pos:position pos:line="25" pos:column="30"/></operator> <operator pos:line="25" pos:column="31">delete<pos:position pos:line="25" pos:column="37"/></operator><operator pos:line="25" pos:column="37">)<pos:position pos:line="25" pos:column="38"/></operator></expr>)<pos:position pos:line="25" pos:column="39"/></condition><then pos:line="25" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">usage_msg_opt<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><literal type="string" pos:line="26" pos:column="31">"-f cannot be used with -d or -l"<pos:position pos:line="26" pos:column="64"/></literal></expr></argument>,
			      <argument><expr><name pos:line="27" pos:column="31">git_replace_usage<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">options<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="29" pos:column="9">/* Delete refs */</comment>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">delete<pos:position pos:line="30" pos:column="19"/></operator></expr>)<pos:position pos:line="30" pos:column="20"/></condition><then pos:line="30" pos:column="20"> <block pos:line="30" pos:column="21">{
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">argc<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">&lt;<pos:position pos:line="31" pos:column="30"/></operator> <literal type="number" pos:line="31" pos:column="28">1<pos:position pos:line="31" pos:column="29"/></literal></expr>)<pos:position pos:line="31" pos:column="30"/></condition><then pos:line="31" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="25">usage_msg_opt<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><literal type="string" pos:line="32" pos:column="39">"-d needs at least one argument"<pos:position pos:line="32" pos:column="71"/></literal></expr></argument>,
				      <argument><expr><name pos:line="33" pos:column="39">git_replace_usage<pos:position pos:line="33" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="58">options<pos:position pos:line="33" pos:column="65"/></name></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt></block></then></if>
		<return pos:line="34" pos:column="17">return <expr><call><name pos:line="34" pos:column="24">for_each_replace_name<pos:position pos:line="34" pos:column="45"/></name><argument_list pos:line="34" pos:column="45">(<argument><expr><name pos:line="34" pos:column="46">argv<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="52">delete_replace_ref<pos:position pos:line="34" pos:column="70"/></name></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></return>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="37" pos:column="9">/* Replace object */</comment>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">list<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">&amp;&amp;<pos:position pos:line="38" pos:column="29"/></operator> <name pos:line="38" pos:column="22">argc<pos:position pos:line="38" pos:column="26"/></name></expr>)<pos:position pos:line="38" pos:column="27"/></condition><then pos:line="38" pos:column="27"> <block pos:line="38" pos:column="28">{
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">argc<pos:position pos:line="39" pos:column="25"/></name> <operator pos:line="39" pos:column="26">!=<pos:position pos:line="39" pos:column="28"/></operator> <literal type="number" pos:line="39" pos:column="29">2<pos:position pos:line="39" pos:column="30"/></literal></expr>)<pos:position pos:line="39" pos:column="31"/></condition><then pos:line="39" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="25">usage_msg_opt<pos:position pos:line="40" pos:column="38"/></name><argument_list pos:line="40" pos:column="38">(<argument><expr><literal type="string" pos:line="40" pos:column="39">"bad number of arguments"<pos:position pos:line="40" pos:column="64"/></literal></expr></argument>,
				      <argument><expr><name pos:line="41" pos:column="39">git_replace_usage<pos:position pos:line="41" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="58">options<pos:position pos:line="41" pos:column="65"/></name></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="67"/></expr_stmt></block></then></if>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">format<pos:position pos:line="42" pos:column="27"/></name></expr>)<pos:position pos:line="42" pos:column="28"/></condition><then pos:line="42" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="25">usage_msg_opt<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><literal type="string" pos:line="43" pos:column="39">"--format cannot be used when not listing"<pos:position pos:line="43" pos:column="81"/></literal></expr></argument>,
				      <argument><expr><name pos:line="44" pos:column="39">git_replace_usage<pos:position pos:line="44" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="58">options<pos:position pos:line="44" pos:column="65"/></name></expr></argument>)<pos:position pos:line="44" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="67"/></expr_stmt></block></then></if>
		<return pos:line="45" pos:column="17">return <expr><call><name pos:line="45" pos:column="24">replace_object<pos:position pos:line="45" pos:column="38"/></name><argument_list pos:line="45" pos:column="38">(<argument><expr><name><name pos:line="45" pos:column="39">argv<pos:position pos:line="45" pos:column="43"/></name><index pos:line="45" pos:column="43">[<expr><literal type="number" pos:line="45" pos:column="44">0<pos:position pos:line="45" pos:column="45"/></literal></expr>]<pos:position pos:line="45" pos:column="46"/></index></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="48">argv<pos:position pos:line="45" pos:column="52"/></name><index pos:line="45" pos:column="52">[<expr><literal type="number" pos:line="45" pos:column="53">1<pos:position pos:line="45" pos:column="54"/></literal></expr>]<pos:position pos:line="45" pos:column="55"/></index></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="57">force<pos:position pos:line="45" pos:column="62"/></name></expr></argument>)<pos:position pos:line="45" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="64"/></return>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="48" pos:column="9">/* List refs, even if "list" is not set */</comment>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">argc<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">&gt;<pos:position pos:line="49" pos:column="22"/></operator> <literal type="number" pos:line="49" pos:column="20">1<pos:position pos:line="49" pos:column="21"/></literal></expr>)<pos:position pos:line="49" pos:column="22"/></condition><then pos:line="49" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="17">usage_msg_opt<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><literal type="string" pos:line="50" pos:column="31">"only one pattern can be given with -l"<pos:position pos:line="50" pos:column="70"/></literal></expr></argument>,
			      <argument><expr><name pos:line="51" pos:column="31">git_replace_usage<pos:position pos:line="51" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="50">options<pos:position pos:line="51" pos:column="57"/></name></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">force<pos:position pos:line="52" pos:column="18"/></name></expr>)<pos:position pos:line="52" pos:column="19"/></condition><then pos:line="52" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="17">usage_msg_opt<pos:position pos:line="53" pos:column="30"/></name><argument_list pos:line="53" pos:column="30">(<argument><expr><literal type="string" pos:line="53" pos:column="31">"-f needs some arguments"<pos:position pos:line="53" pos:column="56"/></literal></expr></argument>,
			      <argument><expr><name pos:line="54" pos:column="31">git_replace_usage<pos:position pos:line="54" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="50">options<pos:position pos:line="54" pos:column="57"/></name></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="59"/></expr_stmt></block></then></if>

	<return pos:line="56" pos:column="9">return <expr><call><name pos:line="56" pos:column="16">list_replace_refs<pos:position pos:line="56" pos:column="33"/></name><argument_list pos:line="56" pos:column="33">(<argument><expr><name><name pos:line="56" pos:column="34">argv<pos:position pos:line="56" pos:column="38"/></name><index pos:line="56" pos:column="38">[<expr><literal type="number" pos:line="56" pos:column="39">0<pos:position pos:line="56" pos:column="40"/></literal></expr>]<pos:position pos:line="56" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="43">format<pos:position pos:line="56" pos:column="49"/></name></expr></argument>)<pos:position pos:line="56" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="51"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1625.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_options_check<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">option<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">opts<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">err<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">short_opts<pos:position pos:line="4" pos:column="24"/></name><index pos:line="4" pos:column="24">[<expr><literal type="number" pos:line="4" pos:column="25">128<pos:position pos:line="4" pos:column="28"/></literal></expr>]<pos:position pos:line="4" pos:column="29"/></index></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">memset<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">short_opts<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="6" pos:column="28">'\0'<pos:position pos:line="6" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="34">sizeof<argument_list pos:line="6" pos:column="40">(<argument><expr><name pos:line="6" pos:column="41">short_opts<pos:position pos:line="6" pos:column="51"/></name></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init pos:line="7" pos:column="14">;<pos:position pos:line="7" pos:column="15"/></init> <condition><expr><name><name pos:line="7" pos:column="16">opts<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">type<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">!=<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="30">OPTION_END<pos:position pos:line="7" pos:column="40"/></name></expr>;<pos:position pos:line="7" pos:column="41"/></condition> <incr><expr><name pos:line="7" pos:column="42">opts<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">++<pos:position pos:line="7" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="49"/></control> <block pos:line="7" pos:column="50">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">(<pos:position pos:line="8" pos:column="22"/></operator><name><name pos:line="8" pos:column="22">opts<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">flags<pos:position pos:line="8" pos:column="33"/></name></name> <operator pos:line="8" pos:column="34">&amp;<pos:position pos:line="8" pos:column="39"/></operator> <name pos:line="8" pos:column="36">PARSE_OPT_LASTARG_DEFAULT<pos:position pos:line="8" pos:column="61"/></name><operator pos:line="8" pos:column="61">)<pos:position pos:line="8" pos:column="62"/></operator> <operator pos:line="8" pos:column="63">&amp;&amp;<pos:position pos:line="8" pos:column="73"/></operator>
		    <operator pos:line="9" pos:column="21">(<pos:position pos:line="9" pos:column="22"/></operator><name><name pos:line="9" pos:column="22">opts<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">flags<pos:position pos:line="9" pos:column="33"/></name></name> <operator pos:line="9" pos:column="34">&amp;<pos:position pos:line="9" pos:column="39"/></operator> <name pos:line="9" pos:column="36">PARSE_OPT_OPTARG<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">)<pos:position pos:line="9" pos:column="53"/></operator></expr>)<pos:position pos:line="9" pos:column="54"/></condition><then pos:line="9" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="25">err<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">|=<pos:position pos:line="10" pos:column="31"/></operator> <call><name pos:line="10" pos:column="32">optbug<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">(<argument><expr><name pos:line="10" pos:column="39">opts<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="45">"uses incompatible flags "<pos:position pos:line="10" pos:column="71"/></literal>
					<literal type="string" pos:line="11" pos:column="41">"LASTARG_DEFAULT and OPTARG"<pos:position pos:line="11" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="71"/></expr_stmt></block></then></if>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name><name pos:line="12" pos:column="21">opts<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">short_name<pos:position pos:line="12" pos:column="37"/></name></name></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38"> <block pos:line="12" pos:column="39">{
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><literal type="number" pos:line="13" pos:column="29">0x7F<pos:position pos:line="13" pos:column="33"/></literal> <operator pos:line="13" pos:column="34">&lt;=<pos:position pos:line="13" pos:column="39"/></operator> <name><name pos:line="13" pos:column="37">opts<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">short_name<pos:position pos:line="13" pos:column="53"/></name></name></expr>)<pos:position pos:line="13" pos:column="54"/></condition><then pos:line="13" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="33">err<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">|=<pos:position pos:line="14" pos:column="39"/></operator> <call><name pos:line="14" pos:column="40">optbug<pos:position pos:line="14" pos:column="46"/></name><argument_list pos:line="14" pos:column="46">(<argument><expr><name pos:line="14" pos:column="47">opts<pos:position pos:line="14" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="53">"invalid short name"<pos:position pos:line="14" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="75"/></expr_stmt></block></then>
			<elseif pos:line="15" pos:column="25">else <if pos:line="15" pos:column="30">if <condition pos:line="15" pos:column="33">(<expr><name><name pos:line="15" pos:column="34">short_opts<pos:position pos:line="15" pos:column="44"/></name><index pos:line="15" pos:column="44">[<expr><name><name pos:line="15" pos:column="45">opts<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">-&gt;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="51">short_name<pos:position pos:line="15" pos:column="61"/></name></name></expr>]<pos:position pos:line="15" pos:column="62"/></index></name><operator pos:line="15" pos:column="62">++<pos:position pos:line="15" pos:column="64"/></operator></expr>)<pos:position pos:line="15" pos:column="65"/></condition><then pos:line="15" pos:column="65">
				<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="33">err<pos:position pos:line="16" pos:column="36"/></name> <operator pos:line="16" pos:column="37">|=<pos:position pos:line="16" pos:column="39"/></operator> <call><name pos:line="16" pos:column="40">optbug<pos:position pos:line="16" pos:column="46"/></name><argument_list pos:line="16" pos:column="46">(<argument><expr><name pos:line="16" pos:column="47">opts<pos:position pos:line="16" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="53">"short name already used"<pos:position pos:line="16" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="80"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">opts<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">flags<pos:position pos:line="18" pos:column="32"/></name></name> <operator pos:line="18" pos:column="33">&amp;<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="35">PARSE_OPT_NODASH<pos:position pos:line="18" pos:column="51"/></name> <operator pos:line="18" pos:column="52">&amp;&amp;<pos:position pos:line="18" pos:column="62"/></operator>
		    <operator pos:line="19" pos:column="21">(<pos:position pos:line="19" pos:column="22"/></operator><operator pos:line="19" pos:column="22">(<pos:position pos:line="19" pos:column="23"/></operator><name><name pos:line="19" pos:column="23">opts<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">flags<pos:position pos:line="19" pos:column="34"/></name></name> <operator pos:line="19" pos:column="35">&amp;<pos:position pos:line="19" pos:column="40"/></operator> <name pos:line="19" pos:column="37">PARSE_OPT_OPTARG<pos:position pos:line="19" pos:column="53"/></name><operator pos:line="19" pos:column="53">)<pos:position pos:line="19" pos:column="54"/></operator> <operator pos:line="19" pos:column="55">||<pos:position pos:line="19" pos:column="57"/></operator>
		     <operator pos:line="20" pos:column="22">!<pos:position pos:line="20" pos:column="23"/></operator><operator pos:line="20" pos:column="23">(<pos:position pos:line="20" pos:column="24"/></operator><name><name pos:line="20" pos:column="24">opts<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">flags<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">&amp;<pos:position pos:line="20" pos:column="41"/></operator> <name pos:line="20" pos:column="38">PARSE_OPT_NOARG<pos:position pos:line="20" pos:column="53"/></name><operator pos:line="20" pos:column="53">)<pos:position pos:line="20" pos:column="54"/></operator> <operator pos:line="20" pos:column="55">||<pos:position pos:line="20" pos:column="57"/></operator>
		     <operator pos:line="21" pos:column="22">!<pos:position pos:line="21" pos:column="23"/></operator><operator pos:line="21" pos:column="23">(<pos:position pos:line="21" pos:column="24"/></operator><name><name pos:line="21" pos:column="24">opts<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">flags<pos:position pos:line="21" pos:column="35"/></name></name> <operator pos:line="21" pos:column="36">&amp;<pos:position pos:line="21" pos:column="41"/></operator> <name pos:line="21" pos:column="38">PARSE_OPT_NONEG<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">)<pos:position pos:line="21" pos:column="54"/></operator> <operator pos:line="21" pos:column="55">||<pos:position pos:line="21" pos:column="57"/></operator>
		     <name><name pos:line="22" pos:column="22">opts<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">-&gt;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="28">long_name<pos:position pos:line="22" pos:column="37"/></name></name><operator pos:line="22" pos:column="37">)<pos:position pos:line="22" pos:column="38"/></operator></expr>)<pos:position pos:line="22" pos:column="39"/></condition><then pos:line="22" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="25">err<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">|=<pos:position pos:line="23" pos:column="31"/></operator> <call><name pos:line="23" pos:column="32">optbug<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><name pos:line="23" pos:column="39">opts<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="45">"uses feature "<pos:position pos:line="23" pos:column="60"/></literal>
					<literal type="string" pos:line="24" pos:column="41">"not supported for dashless options"<pos:position pos:line="24" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="79"/></expr_stmt></block></then></if>
		<switch pos:line="25" pos:column="17">switch <condition pos:line="25" pos:column="24">(<expr><name><name pos:line="25" pos:column="25">opts<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">type<pos:position pos:line="25" pos:column="35"/></name></name></expr>)<pos:position pos:line="25" pos:column="36"/></condition> <block pos:line="25" pos:column="37">{
		<case pos:line="26" pos:column="17">case <expr><name pos:line="26" pos:column="22">OPTION_COUNTUP<pos:position pos:line="26" pos:column="36"/></name></expr>:<pos:position pos:line="26" pos:column="37"/></case>
		<case pos:line="27" pos:column="17">case <expr><name pos:line="27" pos:column="22">OPTION_BIT<pos:position pos:line="27" pos:column="32"/></name></expr>:<pos:position pos:line="27" pos:column="33"/></case>
		<case pos:line="28" pos:column="17">case <expr><name pos:line="28" pos:column="22">OPTION_NEGBIT<pos:position pos:line="28" pos:column="35"/></name></expr>:<pos:position pos:line="28" pos:column="36"/></case>
		<case pos:line="29" pos:column="17">case <expr><name pos:line="29" pos:column="22">OPTION_SET_INT<pos:position pos:line="29" pos:column="36"/></name></expr>:<pos:position pos:line="29" pos:column="37"/></case>
		<case pos:line="30" pos:column="17">case <expr><name pos:line="30" pos:column="22">OPTION_NUMBER<pos:position pos:line="30" pos:column="35"/></name></expr>:<pos:position pos:line="30" pos:column="36"/></case>
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><operator pos:line="31" pos:column="29">(<pos:position pos:line="31" pos:column="30"/></operator><name><name pos:line="31" pos:column="30">opts<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">flags<pos:position pos:line="31" pos:column="41"/></name></name> <operator pos:line="31" pos:column="42">&amp;<pos:position pos:line="31" pos:column="47"/></operator> <name pos:line="31" pos:column="44">PARSE_OPT_OPTARG<pos:position pos:line="31" pos:column="60"/></name><operator pos:line="31" pos:column="60">)<pos:position pos:line="31" pos:column="61"/></operator> <operator pos:line="31" pos:column="62">||<pos:position pos:line="31" pos:column="64"/></operator>
			    <operator pos:line="32" pos:column="29">!<pos:position pos:line="32" pos:column="30"/></operator><operator pos:line="32" pos:column="30">(<pos:position pos:line="32" pos:column="31"/></operator><name><name pos:line="32" pos:column="31">opts<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">flags<pos:position pos:line="32" pos:column="42"/></name></name> <operator pos:line="32" pos:column="43">&amp;<pos:position pos:line="32" pos:column="48"/></operator> <name pos:line="32" pos:column="45">PARSE_OPT_NOARG<pos:position pos:line="32" pos:column="60"/></name><operator pos:line="32" pos:column="60">)<pos:position pos:line="32" pos:column="61"/></operator></expr>)<pos:position pos:line="32" pos:column="62"/></condition><then pos:line="32" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="33">err<pos:position pos:line="33" pos:column="36"/></name> <operator pos:line="33" pos:column="37">|=<pos:position pos:line="33" pos:column="39"/></operator> <call><name pos:line="33" pos:column="40">optbug<pos:position pos:line="33" pos:column="46"/></name><argument_list pos:line="33" pos:column="46">(<argument><expr><name pos:line="33" pos:column="47">opts<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="53">"should not accept an argument"<pos:position pos:line="33" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="86"/></expr_stmt></block></then></if>
		<default pos:line="34" pos:column="17">default:<pos:position pos:line="34" pos:column="25"/></default>
			<empty_stmt pos:line="35" pos:column="25">;<pos:position pos:line="35" pos:column="26"/></empty_stmt> <comment type="block" pos:line="35" pos:column="27">/* ok. (usually accepts an argument) */</comment>
		}<pos:position pos:line="36" pos:column="18"/></block></switch>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name><name pos:line="37" pos:column="21">opts<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">-&gt;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="27">argh<pos:position pos:line="37" pos:column="31"/></name></name> <operator pos:line="37" pos:column="32">&amp;&amp;<pos:position pos:line="37" pos:column="42"/></operator>
		    <call><name pos:line="38" pos:column="21">strcspn<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name><name pos:line="38" pos:column="29">opts<pos:position pos:line="38" pos:column="33"/></name><operator pos:line="38" pos:column="33">-&gt;<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="35">argh<pos:position pos:line="38" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="41">" _"<pos:position pos:line="38" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call> <operator pos:line="38" pos:column="47">!=<pos:position pos:line="38" pos:column="49"/></operator> <call><name pos:line="38" pos:column="50">strlen<pos:position pos:line="38" pos:column="56"/></name><argument_list pos:line="38" pos:column="56">(<argument><expr><name><name pos:line="38" pos:column="57">opts<pos:position pos:line="38" pos:column="61"/></name><operator pos:line="38" pos:column="61">-&gt;<pos:position pos:line="38" pos:column="66"/></operator><name pos:line="38" pos:column="63">argh<pos:position pos:line="38" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="69"/></condition><then pos:line="38" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="25">err<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">|=<pos:position pos:line="39" pos:column="31"/></operator> <call><name pos:line="39" pos:column="32">optbug<pos:position pos:line="39" pos:column="38"/></name><argument_list pos:line="39" pos:column="38">(<argument><expr><name pos:line="39" pos:column="39">opts<pos:position pos:line="39" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="45">"multi-word argh should use dash to separate words"<pos:position pos:line="39" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="98"/></expr_stmt></block></then></if>
	}<pos:position pos:line="40" pos:column="10"/></block></for>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">err<pos:position pos:line="41" pos:column="16"/></name></expr>)<pos:position pos:line="41" pos:column="17"/></condition><then pos:line="41" pos:column="17">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="17">exit<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><literal type="number" pos:line="42" pos:column="22">128<pos:position pos:line="42" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt></block></then></if>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

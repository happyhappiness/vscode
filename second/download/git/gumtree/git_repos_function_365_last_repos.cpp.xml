<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_365_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">cache_entry<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">create_from_disk<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name><name pos:line="1" pos:column="45">struct<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">ondisk_cache_entry<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">ondisk<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
					    <parameter><decl><type><name pos:line="2" pos:column="45">unsigned<pos:position pos:line="2" pos:column="53"/></name> <name pos:line="2" pos:column="54">long<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">ent_size<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
					    <parameter><decl><type><name><name pos:line="3" pos:column="45">struct<pos:position pos:line="3" pos:column="51"/></name> <name pos:line="3" pos:column="52">strbuf<pos:position pos:line="3" pos:column="58"/></name></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">previous_name<pos:position pos:line="3" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="74"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">cache_entry<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">ce<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">len<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">name<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">int<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">flags<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* On-disk flags are just 16 bits */</comment>
	<expr_stmt><expr><name pos:line="11" pos:column="9">flags<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <call><name pos:line="11" pos:column="17">get_be16<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><operator pos:line="11" pos:column="26">&amp;<pos:position pos:line="11" pos:column="31"/></operator><name><name pos:line="11" pos:column="27">ondisk<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">flags<pos:position pos:line="11" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">len<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">flags<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">&amp;<pos:position pos:line="12" pos:column="26"/></operator> <name pos:line="12" pos:column="23">CE_NAMEMASK<pos:position pos:line="12" pos:column="34"/></name></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">flags<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">&amp;<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="21">CE_EXTENDED<pos:position pos:line="14" pos:column="32"/></name></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33"> <block pos:line="14" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="15" pos:column="17">struct<pos:position pos:line="15" pos:column="23"/></name> <name pos:line="15" pos:column="24">ondisk_cache_entry_extended<pos:position pos:line="15" pos:column="51"/></name></name> <modifier pos:line="15" pos:column="52">*<pos:position pos:line="15" pos:column="53"/></modifier></type><name pos:line="15" pos:column="53">ondisk2<pos:position pos:line="15" pos:column="60"/></name></decl>;<pos:position pos:line="15" pos:column="61"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">int<pos:position pos:line="16" pos:column="20"/></name></type> <name pos:line="16" pos:column="21">extended_flags<pos:position pos:line="16" pos:column="35"/></name></decl>;<pos:position pos:line="16" pos:column="36"/></decl_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">ondisk2<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <operator pos:line="17" pos:column="27">(<pos:position pos:line="17" pos:column="28"/></operator>struct <name pos:line="17" pos:column="35">ondisk_cache_entry_extended<pos:position pos:line="17" pos:column="62"/></name> <operator pos:line="17" pos:column="63">*<pos:position pos:line="17" pos:column="64"/></operator><operator pos:line="17" pos:column="64">)<pos:position pos:line="17" pos:column="65"/></operator><name pos:line="17" pos:column="65">ondisk<pos:position pos:line="17" pos:column="71"/></name></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">extended_flags<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">=<pos:position pos:line="18" pos:column="33"/></operator> <call><name pos:line="18" pos:column="34">get_be16<pos:position pos:line="18" pos:column="42"/></name><argument_list pos:line="18" pos:column="42">(<argument><expr><operator pos:line="18" pos:column="43">&amp;<pos:position pos:line="18" pos:column="48"/></operator><name><name pos:line="18" pos:column="44">ondisk2<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">-&gt;<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="53">flags2<pos:position pos:line="18" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call> <operator pos:line="18" pos:column="61">&lt;&lt;<pos:position pos:line="18" pos:column="69"/></operator> <literal type="number" pos:line="18" pos:column="64">16<pos:position pos:line="18" pos:column="66"/></literal></expr>;<pos:position pos:line="18" pos:column="67"/></expr_stmt>
		<comment type="block" pos:line="19" pos:column="17">/* We do not yet understand any bit out of CE_EXTENDED_FLAGS */</comment>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">extended_flags<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">&amp;<pos:position pos:line="20" pos:column="41"/></operator> <operator pos:line="20" pos:column="38">~<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">CE_EXTENDED_FLAGS<pos:position pos:line="20" pos:column="56"/></name></expr>)<pos:position pos:line="20" pos:column="57"/></condition><then pos:line="20" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">die<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><literal type="string" pos:line="21" pos:column="29">"Unknown index entry format %08x"<pos:position pos:line="21" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="64">extended_flags<pos:position pos:line="21" pos:column="78"/></name></expr></argument>)<pos:position pos:line="21" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="80"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="22" pos:column="17">flags<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">|=<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">extended_flags<pos:position pos:line="22" pos:column="40"/></name></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">name<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <name><name pos:line="23" pos:column="24">ondisk2<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">name<pos:position pos:line="23" pos:column="37"/></name></name></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then>
	<else pos:line="25" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="17">name<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name><name pos:line="26" pos:column="24">ondisk<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">name<pos:position pos:line="26" pos:column="36"/></name></name></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt></block></else></if>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">previous_name<pos:position pos:line="28" pos:column="27"/></name></expr>)<pos:position pos:line="28" pos:column="28"/></condition><then pos:line="28" pos:column="28"> <block pos:line="28" pos:column="29">{
		<comment type="block" pos:line="29" pos:column="17">/* v3 and earlier */</comment>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">len<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">==<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">CE_NAMEMASK<pos:position pos:line="30" pos:column="39"/></name></expr>)<pos:position pos:line="30" pos:column="40"/></condition><then pos:line="30" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="25">len<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <call><name pos:line="31" pos:column="31">strlen<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">name<pos:position pos:line="31" pos:column="42"/></name></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="32" pos:column="17">ce<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <call><name pos:line="32" pos:column="22">cache_entry_from_ondisk<pos:position pos:line="32" pos:column="45"/></name><argument_list pos:line="32" pos:column="45">(<argument><expr><name pos:line="32" pos:column="46">ondisk<pos:position pos:line="32" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="54">flags<pos:position pos:line="32" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="61">name<pos:position pos:line="32" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="67">len<pos:position pos:line="32" pos:column="70"/></name></expr></argument>)<pos:position pos:line="32" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="72"/></expr_stmt>

		<expr_stmt><expr><operator pos:line="34" pos:column="17">*<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">ent_size<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <call><name pos:line="34" pos:column="29">ondisk_ce_size<pos:position pos:line="34" pos:column="43"/></name><argument_list pos:line="34" pos:column="43">(<argument><expr><name pos:line="34" pos:column="44">ce<pos:position pos:line="34" pos:column="46"/></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then> <else pos:line="35" pos:column="11">else <block pos:line="35" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">unsigned<pos:position pos:line="36" pos:column="25"/></name> <name pos:line="36" pos:column="26">long<pos:position pos:line="36" pos:column="30"/></name></type> <name pos:line="36" pos:column="31">consumed<pos:position pos:line="36" pos:column="39"/></name></decl>;<pos:position pos:line="36" pos:column="40"/></decl_stmt>
		<expr_stmt><expr><name pos:line="37" pos:column="17">consumed<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <call><name pos:line="37" pos:column="28">expand_name_field<pos:position pos:line="37" pos:column="45"/></name><argument_list pos:line="37" pos:column="45">(<argument><expr><name pos:line="37" pos:column="46">previous_name<pos:position pos:line="37" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="61">name<pos:position pos:line="37" pos:column="65"/></name></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">ce<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <call><name pos:line="38" pos:column="22">cache_entry_from_ondisk<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">(<argument><expr><name pos:line="38" pos:column="46">ondisk<pos:position pos:line="38" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="54">flags<pos:position pos:line="38" pos:column="59"/></name></expr></argument>,
					     <argument><expr><name><name pos:line="39" pos:column="46">previous_name<pos:position pos:line="39" pos:column="59"/></name><operator pos:line="39" pos:column="59">-&gt;<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="61">buf<pos:position pos:line="39" pos:column="64"/></name></name></expr></argument>,
					     <argument><expr><name><name pos:line="40" pos:column="46">previous_name<pos:position pos:line="40" pos:column="59"/></name><operator pos:line="40" pos:column="59">-&gt;<pos:position pos:line="40" pos:column="64"/></operator><name pos:line="40" pos:column="61">len<pos:position pos:line="40" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="66"/></expr_stmt>

		<expr_stmt><expr><operator pos:line="42" pos:column="17">*<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">ent_size<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <operator pos:line="42" pos:column="29">(<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="30">name<pos:position pos:line="42" pos:column="34"/></name> <operator pos:line="42" pos:column="35">-<pos:position pos:line="42" pos:column="36"/></operator> <operator pos:line="42" pos:column="37">(<pos:position pos:line="42" pos:column="38"/></operator><operator pos:line="42" pos:column="38">(<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="39">char<pos:position pos:line="42" pos:column="43"/></name> <operator pos:line="42" pos:column="44">*<pos:position pos:line="42" pos:column="45"/></operator><operator pos:line="42" pos:column="45">)<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="46">ondisk<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">)<pos:position pos:line="42" pos:column="53"/></operator><operator pos:line="42" pos:column="53">)<pos:position pos:line="42" pos:column="54"/></operator> <operator pos:line="42" pos:column="55">+<pos:position pos:line="42" pos:column="56"/></operator> <name pos:line="42" pos:column="57">consumed<pos:position pos:line="42" pos:column="65"/></name></expr>;<pos:position pos:line="42" pos:column="66"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></else></if>
	<return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">ce<pos:position pos:line="44" pos:column="18"/></name></expr>;<pos:position pos:line="44" pos:column="19"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

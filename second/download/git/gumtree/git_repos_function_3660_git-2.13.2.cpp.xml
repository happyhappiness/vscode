<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3660_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">save_files_dirs<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">unsigned<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">sha1<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">strbuf<pos:position pos:line="2" pos:column="30"/></name></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">base<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">path<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">unsigned<pos:position pos:line="3" pos:column="25"/></name> <name pos:line="3" pos:column="26">int<pos:position pos:line="3" pos:column="29"/></name></type> <name pos:line="3" pos:column="30">mode<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="36">int<pos:position pos:line="3" pos:column="39"/></name></type> <name pos:line="3" pos:column="40">stage<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="47">void<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">context<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="61"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">baselen<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name><name pos:line="5" pos:column="23">base<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">len<pos:position pos:line="5" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">merge_options<pos:position pos:line="6" pos:column="29"/></name></name> <modifier pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></modifier></type><name pos:line="6" pos:column="31">o<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><name pos:line="6" pos:column="35">context<pos:position pos:line="6" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">strbuf_addstr<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">base<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="29">path<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">S_ISDIR<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">mode<pos:position pos:line="10" pos:column="25"/></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">string_list_insert<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><operator pos:line="11" pos:column="36">&amp;<pos:position pos:line="11" pos:column="41"/></operator><name><name pos:line="11" pos:column="37">o<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">current_directory_set<pos:position pos:line="11" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="63">base<pos:position pos:line="11" pos:column="67"/></name><operator pos:line="11" pos:column="67">-&gt;<pos:position pos:line="11" pos:column="72"/></operator><name pos:line="11" pos:column="69">buf<pos:position pos:line="11" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="74"/></expr_stmt></block></then>
	<else pos:line="12" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">string_list_insert<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><operator pos:line="13" pos:column="36">&amp;<pos:position pos:line="13" pos:column="41"/></operator><name><name pos:line="13" pos:column="37">o<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">-&gt;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="40">current_file_set<pos:position pos:line="13" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="58">base<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">-&gt;<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="64">buf<pos:position pos:line="13" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="69"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">strbuf_setlen<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">base<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="29">baselen<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
	<return pos:line="16" pos:column="9">return <expr><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><ternary><condition><expr><call><name pos:line="16" pos:column="17">S_ISDIR<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">mode<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr> ?<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32"> <expr><name pos:line="16" pos:column="33">READ_TREE_RECURSIVE<pos:position pos:line="16" pos:column="52"/></name></expr> <pos:position pos:line="16" pos:column="53"/></then><else pos:line="16" pos:column="53">: <expr><literal type="number" pos:line="16" pos:column="55">0<pos:position pos:line="16" pos:column="56"/></literal></expr></else></ternary><operator pos:line="16" pos:column="56">)<pos:position pos:line="16" pos:column="57"/></operator></expr>;<pos:position pos:line="16" pos:column="58"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

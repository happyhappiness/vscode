<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_36.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">determine_author_info<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">strbuf<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">author_ident<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">name<pos:position pos:line="3" pos:column="19"/></name></decl>, <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="22">email<pos:position pos:line="3" pos:column="27"/></name></decl>, <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="30">date<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ident_split<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">author<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">date_buf<pos:position pos:line="5" pos:column="22"/></name><index pos:line="5" pos:column="22">[<expr><literal type="number" pos:line="5" pos:column="23">64<pos:position pos:line="5" pos:column="25"/></literal></expr>]<pos:position pos:line="5" pos:column="26"/></index></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">name<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <call><name pos:line="7" pos:column="16">getenv<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><literal type="string" pos:line="7" pos:column="23">"GIT_AUTHOR_NAME"<pos:position pos:line="7" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">email<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <call><name pos:line="8" pos:column="17">getenv<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><literal type="string" pos:line="8" pos:column="24">"GIT_AUTHOR_EMAIL"<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">date<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <call><name pos:line="9" pos:column="16">getenv<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><literal type="string" pos:line="9" pos:column="23">"GIT_AUTHOR_DATE"<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">author_message<pos:position pos:line="11" pos:column="27"/></name></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28"> <block pos:line="11" pos:column="29">{
		<decl_stmt><decl><type><specifier pos:line="12" pos:column="17">const<pos:position pos:line="12" pos:column="22"/></specifier> <name pos:line="12" pos:column="23">char<pos:position pos:line="12" pos:column="27"/></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">a<pos:position pos:line="12" pos:column="30"/></name></decl>, <modifier pos:line="12" pos:column="32">*<pos:position pos:line="12" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="33">lb<pos:position pos:line="12" pos:column="35"/></name></decl>, <modifier pos:line="12" pos:column="37">*<pos:position pos:line="12" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="38">rb<pos:position pos:line="12" pos:column="40"/></name></decl>, <modifier pos:line="12" pos:column="42">*<pos:position pos:line="12" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="43">eol<pos:position pos:line="12" pos:column="46"/></name></decl>;<pos:position pos:line="12" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">size_t<pos:position pos:line="13" pos:column="23"/></name></type> <name pos:line="13" pos:column="24">len<pos:position pos:line="13" pos:column="27"/></name></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="15" pos:column="17">a<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">strstr<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">author_message_buffer<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="51">"\nauthor "<pos:position pos:line="15" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">a<pos:position pos:line="16" pos:column="23"/></name></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">die<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><call><name pos:line="17" pos:column="29">_<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><literal type="string" pos:line="17" pos:column="31">"invalid commit: %s"<pos:position pos:line="17" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">author_message<pos:position pos:line="17" pos:column="68"/></name></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="70"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="19" pos:column="17">lb<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <call><name pos:line="19" pos:column="22">strchrnul<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">a<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">+<pos:position pos:line="19" pos:column="35"/></operator> <call><name pos:line="19" pos:column="36">strlen<pos:position pos:line="19" pos:column="42"/></name><argument_list pos:line="19" pos:column="42">(<argument><expr><literal type="string" pos:line="19" pos:column="43">"\nauthor "<pos:position pos:line="19" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="57">'&lt;'<pos:position pos:line="19" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">rb<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">strchrnul<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">lb<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="36">'&gt;'<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">eol<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">strchrnul<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">rb<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="37">'\n'<pos:position pos:line="21" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><operator pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="23">lb<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">||<pos:position pos:line="22" pos:column="28"/></operator> <operator pos:line="22" pos:column="29">!<pos:position pos:line="22" pos:column="30"/></operator><operator pos:line="22" pos:column="30">*<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">rb<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">||<pos:position pos:line="22" pos:column="36"/></operator> <operator pos:line="22" pos:column="37">!<pos:position pos:line="22" pos:column="38"/></operator><operator pos:line="22" pos:column="38">*<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">eol<pos:position pos:line="22" pos:column="42"/></name></expr>)<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">die<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><call><name pos:line="23" pos:column="29">_<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><literal type="string" pos:line="23" pos:column="31">"invalid commit: %s"<pos:position pos:line="23" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">author_message<pos:position pos:line="23" pos:column="68"/></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="70"/></expr_stmt></block></then></if>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">lb<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">==<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">a<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">+<pos:position pos:line="25" pos:column="30"/></operator> <call><name pos:line="25" pos:column="31">strlen<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><literal type="string" pos:line="25" pos:column="38">"\nauthor "<pos:position pos:line="25" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="51"/></condition><then pos:line="25" pos:column="51">
			<comment type="block" pos:line="26" pos:column="25">/* \nauthor &lt;foo@example.com&gt; */</comment>
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">name<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">=<pos:position pos:line="27" pos:column="31"/></operator> <call><name pos:line="27" pos:column="32">xcalloc<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><literal type="number" pos:line="27" pos:column="40">1<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="43">1<pos:position pos:line="27" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt></block></then>
		<else pos:line="28" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="25">name<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <call><name pos:line="29" pos:column="32">xmemdupz<pos:position pos:line="29" pos:column="40"/></name><argument_list pos:line="29" pos:column="40">(<argument><expr><name pos:line="29" pos:column="41">a<pos:position pos:line="29" pos:column="42"/></name> <operator pos:line="29" pos:column="43">+<pos:position pos:line="29" pos:column="44"/></operator> <call><name pos:line="29" pos:column="45">strlen<pos:position pos:line="29" pos:column="51"/></name><argument_list pos:line="29" pos:column="51">(<argument><expr><literal type="string" pos:line="29" pos:column="52">"\nauthor "<pos:position pos:line="29" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr></argument>,
					<argument><expr><operator pos:line="30" pos:column="41">(<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="42">lb<pos:position pos:line="30" pos:column="44"/></name> <operator pos:line="30" pos:column="45">-<pos:position pos:line="30" pos:column="46"/></operator> <call><name pos:line="30" pos:column="47">strlen<pos:position pos:line="30" pos:column="53"/></name><argument_list pos:line="30" pos:column="53">(<argument><expr><literal type="string" pos:line="30" pos:column="54">" "<pos:position pos:line="30" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call> <operator pos:line="30" pos:column="59">-<pos:position pos:line="30" pos:column="60"/></operator>
					 <operator pos:line="31" pos:column="42">(<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="43">a<pos:position pos:line="31" pos:column="44"/></name> <operator pos:line="31" pos:column="45">+<pos:position pos:line="31" pos:column="46"/></operator> <call><name pos:line="31" pos:column="47">strlen<pos:position pos:line="31" pos:column="53"/></name><argument_list pos:line="31" pos:column="53">(<argument><expr><literal type="string" pos:line="31" pos:column="54">"\nauthor "<pos:position pos:line="31" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call><operator pos:line="31" pos:column="66">)<pos:position pos:line="31" pos:column="67"/></operator><operator pos:line="31" pos:column="67">)<pos:position pos:line="31" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="70"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="32" pos:column="17">email<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <call><name pos:line="32" pos:column="25">xmemdupz<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">lb<pos:position pos:line="32" pos:column="36"/></name> <operator pos:line="32" pos:column="37">+<pos:position pos:line="32" pos:column="38"/></operator> <call><name pos:line="32" pos:column="39">strlen<pos:position pos:line="32" pos:column="45"/></name><argument_list pos:line="32" pos:column="45">(<argument><expr><literal type="string" pos:line="32" pos:column="46">"&lt;"<pos:position pos:line="32" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="52">rb<pos:position pos:line="32" pos:column="54"/></name> <operator pos:line="32" pos:column="55">-<pos:position pos:line="32" pos:column="56"/></operator> <operator pos:line="32" pos:column="57">(<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="58">lb<pos:position pos:line="32" pos:column="60"/></name> <operator pos:line="32" pos:column="61">+<pos:position pos:line="32" pos:column="62"/></operator> <call><name pos:line="32" pos:column="63">strlen<pos:position pos:line="32" pos:column="69"/></name><argument_list pos:line="32" pos:column="69">(<argument><expr><literal type="string" pos:line="32" pos:column="70">"&lt;"<pos:position pos:line="32" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call><operator pos:line="32" pos:column="74">)<pos:position pos:line="32" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">len<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">eol<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">-<pos:position pos:line="33" pos:column="28"/></operator> <operator pos:line="33" pos:column="29">(<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">rb<pos:position pos:line="33" pos:column="32"/></name> <operator pos:line="33" pos:column="33">+<pos:position pos:line="33" pos:column="34"/></operator> <call><name pos:line="33" pos:column="35">strlen<pos:position pos:line="33" pos:column="41"/></name><argument_list pos:line="33" pos:column="41">(<argument><expr><literal type="string" pos:line="33" pos:column="42">"&gt; "<pos:position pos:line="33" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call><operator pos:line="33" pos:column="47">)<pos:position pos:line="33" pos:column="48"/></operator></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">date<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <call><name pos:line="34" pos:column="24">xmalloc<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">len<pos:position pos:line="34" pos:column="35"/></name> <operator pos:line="34" pos:column="36">+<pos:position pos:line="34" pos:column="37"/></operator> <literal type="number" pos:line="34" pos:column="38">2<pos:position pos:line="34" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="35" pos:column="17">*<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">date<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <literal type="char" pos:line="35" pos:column="25">'@'<pos:position pos:line="35" pos:column="28"/></literal></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">memcpy<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">date<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">+<pos:position pos:line="36" pos:column="30"/></operator> <literal type="number" pos:line="36" pos:column="31">1<pos:position pos:line="36" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">rb<pos:position pos:line="36" pos:column="36"/></name> <operator pos:line="36" pos:column="37">+<pos:position pos:line="36" pos:column="38"/></operator> <call><name pos:line="36" pos:column="39">strlen<pos:position pos:line="36" pos:column="45"/></name><argument_list pos:line="36" pos:column="45">(<argument><expr><literal type="string" pos:line="36" pos:column="46">"&gt; "<pos:position pos:line="36" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">len<pos:position pos:line="36" pos:column="56"/></name></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="37" pos:column="17">date<pos:position pos:line="37" pos:column="21"/></name><index pos:line="37" pos:column="21">[<expr><name pos:line="37" pos:column="22">len<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">+<pos:position pos:line="37" pos:column="27"/></operator> <literal type="number" pos:line="37" pos:column="28">1<pos:position pos:line="37" pos:column="29"/></literal></expr>]<pos:position pos:line="37" pos:column="30"/></index></name> <operator pos:line="37" pos:column="31">=<pos:position pos:line="37" pos:column="32"/></operator> <literal type="char" pos:line="37" pos:column="33">'\0'<pos:position pos:line="37" pos:column="37"/></literal></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">force_author<pos:position pos:line="40" pos:column="25"/></name></expr>)<pos:position pos:line="40" pos:column="26"/></condition><then pos:line="40" pos:column="26"> <block pos:line="40" pos:column="27">{
		<decl_stmt><decl><type><specifier pos:line="41" pos:column="17">const<pos:position pos:line="41" pos:column="22"/></specifier> <name pos:line="41" pos:column="23">char<pos:position pos:line="41" pos:column="27"/></name> <modifier pos:line="41" pos:column="28">*<pos:position pos:line="41" pos:column="29"/></modifier></type><name pos:line="41" pos:column="29">lb<pos:position pos:line="41" pos:column="31"/></name> <init pos:line="41" pos:column="32">= <expr><call><name pos:line="41" pos:column="34">strstr<pos:position pos:line="41" pos:column="40"/></name><argument_list pos:line="41" pos:column="40">(<argument><expr><name pos:line="41" pos:column="41">force_author<pos:position pos:line="41" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="55">" &lt;"<pos:position pos:line="41" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="61"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="42" pos:column="17">const<pos:position pos:line="42" pos:column="22"/></specifier> <name pos:line="42" pos:column="23">char<pos:position pos:line="42" pos:column="27"/></name> <modifier pos:line="42" pos:column="28">*<pos:position pos:line="42" pos:column="29"/></modifier></type><name pos:line="42" pos:column="29">rb<pos:position pos:line="42" pos:column="31"/></name> <init pos:line="42" pos:column="32">= <expr><call><name pos:line="42" pos:column="34">strchr<pos:position pos:line="42" pos:column="40"/></name><argument_list pos:line="42" pos:column="40">(<argument><expr><name pos:line="42" pos:column="41">force_author<pos:position pos:line="42" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="42" pos:column="55">'&gt;'<pos:position pos:line="42" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="60"/></decl_stmt>

		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><operator pos:line="44" pos:column="21">!<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">lb<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">||<pos:position pos:line="44" pos:column="27"/></operator> <operator pos:line="44" pos:column="28">!<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="29">rb<pos:position pos:line="44" pos:column="31"/></name></expr>)<pos:position pos:line="44" pos:column="32"/></condition><then pos:line="44" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="25">die<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><call><name pos:line="45" pos:column="29">_<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><literal type="string" pos:line="45" pos:column="31">"malformed --author parameter"<pos:position pos:line="45" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="64"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="46" pos:column="17">name<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <call><name pos:line="46" pos:column="24">xstrndup<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name pos:line="46" pos:column="33">force_author<pos:position pos:line="46" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="47">lb<pos:position pos:line="46" pos:column="49"/></name> <operator pos:line="46" pos:column="50">-<pos:position pos:line="46" pos:column="51"/></operator> <name pos:line="46" pos:column="52">force_author<pos:position pos:line="46" pos:column="64"/></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name pos:line="47" pos:column="17">email<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">=<pos:position pos:line="47" pos:column="24"/></operator> <call><name pos:line="47" pos:column="25">xstrndup<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">lb<pos:position pos:line="47" pos:column="36"/></name> <operator pos:line="47" pos:column="37">+<pos:position pos:line="47" pos:column="38"/></operator> <literal type="number" pos:line="47" pos:column="39">2<pos:position pos:line="47" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="42">rb<pos:position pos:line="47" pos:column="44"/></name> <operator pos:line="47" pos:column="45">-<pos:position pos:line="47" pos:column="46"/></operator> <operator pos:line="47" pos:column="47">(<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="48">lb<pos:position pos:line="47" pos:column="50"/></name> <operator pos:line="47" pos:column="51">+<pos:position pos:line="47" pos:column="52"/></operator> <literal type="number" pos:line="47" pos:column="53">2<pos:position pos:line="47" pos:column="54"/></literal><operator pos:line="47" pos:column="54">)<pos:position pos:line="47" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="47" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>

	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">force_date<pos:position pos:line="50" pos:column="23"/></name></expr>)<pos:position pos:line="50" pos:column="24"/></condition><then pos:line="50" pos:column="24"> <block pos:line="50" pos:column="25">{
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><call><name pos:line="51" pos:column="21">parse_force_date<pos:position pos:line="51" pos:column="37"/></name><argument_list pos:line="51" pos:column="37">(<argument><expr><name pos:line="51" pos:column="38">force_date<pos:position pos:line="51" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="50">date_buf<pos:position pos:line="51" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="60">sizeof<argument_list pos:line="51" pos:column="66">(<argument><expr><name pos:line="51" pos:column="67">date_buf<pos:position pos:line="51" pos:column="75"/></name></expr></argument>)<pos:position pos:line="51" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="78"/></condition><then pos:line="51" pos:column="78">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="25">die<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">(<argument><expr><call><name pos:line="52" pos:column="29">_<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><literal type="string" pos:line="52" pos:column="31">"invalid date format: %s"<pos:position pos:line="52" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="52" pos:column="59">force_date<pos:position pos:line="52" pos:column="69"/></name></expr></argument>)<pos:position pos:line="52" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="71"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="53" pos:column="17">date<pos:position pos:line="53" pos:column="21"/></name> <operator pos:line="53" pos:column="22">=<pos:position pos:line="53" pos:column="23"/></operator> <name pos:line="53" pos:column="24">date_buf<pos:position pos:line="53" pos:column="32"/></name></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="56" pos:column="9">strbuf_addstr<pos:position pos:line="56" pos:column="22"/></name><argument_list pos:line="56" pos:column="22">(<argument><expr><name pos:line="56" pos:column="23">author_ident<pos:position pos:line="56" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="37">fmt_ident<pos:position pos:line="56" pos:column="46"/></name><argument_list pos:line="56" pos:column="46">(<argument><expr><name pos:line="56" pos:column="47">name<pos:position pos:line="56" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="53">email<pos:position pos:line="56" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="60">date<pos:position pos:line="56" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="66">IDENT_STRICT<pos:position pos:line="56" pos:column="78"/></name></expr></argument>)<pos:position pos:line="56" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="81"/></expr_stmt>
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><operator pos:line="57" pos:column="13">!<pos:position pos:line="57" pos:column="14"/></operator><call><name pos:line="57" pos:column="14">split_ident_line<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><operator pos:line="57" pos:column="31">&amp;<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="32">author<pos:position pos:line="57" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="40">author_ident<pos:position pos:line="57" pos:column="52"/></name><operator pos:line="57" pos:column="52">-&gt;<pos:position pos:line="57" pos:column="57"/></operator><name pos:line="57" pos:column="54">buf<pos:position pos:line="57" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="59">author_ident<pos:position pos:line="57" pos:column="71"/></name><operator pos:line="57" pos:column="71">-&gt;<pos:position pos:line="57" pos:column="76"/></operator><name pos:line="57" pos:column="73">len<pos:position pos:line="57" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="77"/></argument_list></call> <operator pos:line="57" pos:column="78">&amp;&amp;<pos:position pos:line="57" pos:column="88"/></operator>
	    <call><name pos:line="58" pos:column="13">sane_ident_split<pos:position pos:line="58" pos:column="29"/></name><argument_list pos:line="58" pos:column="29">(<argument><expr><operator pos:line="58" pos:column="30">&amp;<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="31">author<pos:position pos:line="58" pos:column="37"/></name></expr></argument>)<pos:position pos:line="58" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="39"/></condition><then pos:line="58" pos:column="39"> <block pos:line="58" pos:column="40">{
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">export_one<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><literal type="string" pos:line="59" pos:column="28">"GIT_AUTHOR_NAME"<pos:position pos:line="59" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="47">author<pos:position pos:line="59" pos:column="53"/></name><operator pos:line="59" pos:column="53">.<pos:position pos:line="59" pos:column="54"/></operator><name pos:line="59" pos:column="54">name_begin<pos:position pos:line="59" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="66">author<pos:position pos:line="59" pos:column="72"/></name><operator pos:line="59" pos:column="72">.<pos:position pos:line="59" pos:column="73"/></operator><name pos:line="59" pos:column="73">name_end<pos:position pos:line="59" pos:column="81"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="83">0<pos:position pos:line="59" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="86"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">export_one<pos:position pos:line="60" pos:column="27"/></name><argument_list pos:line="60" pos:column="27">(<argument><expr><literal type="string" pos:line="60" pos:column="28">"GIT_AUTHOR_EMAIL"<pos:position pos:line="60" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="48">author<pos:position pos:line="60" pos:column="54"/></name><operator pos:line="60" pos:column="54">.<pos:position pos:line="60" pos:column="55"/></operator><name pos:line="60" pos:column="55">mail_begin<pos:position pos:line="60" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="67">author<pos:position pos:line="60" pos:column="73"/></name><operator pos:line="60" pos:column="73">.<pos:position pos:line="60" pos:column="74"/></operator><name pos:line="60" pos:column="74">mail_end<pos:position pos:line="60" pos:column="82"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="84">0<pos:position pos:line="60" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="87"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="61" pos:column="17">export_one<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><literal type="string" pos:line="61" pos:column="28">"GIT_AUTHOR_DATE"<pos:position pos:line="61" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="47">author<pos:position pos:line="61" pos:column="53"/></name><operator pos:line="61" pos:column="53">.<pos:position pos:line="61" pos:column="54"/></operator><name pos:line="61" pos:column="54">date_begin<pos:position pos:line="61" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="66">author<pos:position pos:line="61" pos:column="72"/></name><operator pos:line="61" pos:column="72">.<pos:position pos:line="61" pos:column="73"/></operator><name pos:line="61" pos:column="73">tz_end<pos:position pos:line="61" pos:column="79"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="61" pos:column="81">'@'<pos:position pos:line="61" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="86"/></expr_stmt>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

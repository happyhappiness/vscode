<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4246_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">match_extension<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">filename<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">ext<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">prefixlen<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><call><name pos:line="3" pos:column="25">strlen<pos:position pos:line="3" pos:column="31"/></name><argument_list pos:line="3" pos:column="31">(<argument><expr><name pos:line="3" pos:column="32">filename<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call> <operator pos:line="3" pos:column="42">-<pos:position pos:line="3" pos:column="43"/></operator> <call><name pos:line="3" pos:column="44">strlen<pos:position pos:line="3" pos:column="50"/></name><argument_list pos:line="3" pos:column="50">(<argument><expr><name pos:line="3" pos:column="51">ext<pos:position pos:line="3" pos:column="54"/></name></expr></argument>)<pos:position pos:line="3" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="56"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/*
	 * We need 1 character for the '.', and 1 character to ensure that the
	 * prefix is non-empty (k.e., we don't match .tar.gz with no actual
	 * filename).
	 */</comment>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">prefixlen<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">&lt;<pos:position pos:line="10" pos:column="27"/></operator> <literal type="number" pos:line="10" pos:column="25">2<pos:position pos:line="10" pos:column="26"/></literal> <operator pos:line="10" pos:column="27">||<pos:position pos:line="10" pos:column="29"/></operator> <name><name pos:line="10" pos:column="30">filename<pos:position pos:line="10" pos:column="38"/></name><index pos:line="10" pos:column="38">[<expr><name pos:line="10" pos:column="39">prefixlen<pos:position pos:line="10" pos:column="48"/></name> <operator pos:line="10" pos:column="49">-<pos:position pos:line="10" pos:column="50"/></operator> <literal type="number" pos:line="10" pos:column="51">1<pos:position pos:line="10" pos:column="52"/></literal></expr>]<pos:position pos:line="10" pos:column="53"/></index></name> <operator pos:line="10" pos:column="54">!=<pos:position pos:line="10" pos:column="56"/></operator> <literal type="char" pos:line="10" pos:column="57">'.'<pos:position pos:line="10" pos:column="60"/></literal></expr>)<pos:position pos:line="10" pos:column="61"/></condition><then pos:line="10" pos:column="61">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if>
	<return pos:line="12" pos:column="9">return <expr><operator pos:line="12" pos:column="16">!<pos:position pos:line="12" pos:column="17"/></operator><call><name pos:line="12" pos:column="17">strcmp<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">filename<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">+<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="35">prefixlen<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">ext<pos:position pos:line="12" pos:column="49"/></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

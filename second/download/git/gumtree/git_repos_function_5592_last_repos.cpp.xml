<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5592_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">find_unresolved_deltas<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">base_data<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">base<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">base_data<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">new_base<pos:position pos:line="3" pos:column="35"/></name></decl>, <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="38">prev_base<pos:position pos:line="3" pos:column="47"/></name> <init pos:line="3" pos:column="48">= <expr><name pos:line="3" pos:column="50">NULL<pos:position pos:line="3" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="55"/></decl_stmt>
	<for pos:line="4" pos:column="9">for <control pos:line="4" pos:column="13">(<init pos:line="4" pos:column="14">;<pos:position pos:line="4" pos:column="15"/></init><condition pos:line="4" pos:column="15">;<pos:position pos:line="4" pos:column="16"/></condition><incr/>)<pos:position pos:line="4" pos:column="17"/></control> <block pos:line="4" pos:column="18">{
		<expr_stmt><expr><name pos:line="5" pos:column="17">new_base<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">=<pos:position pos:line="5" pos:column="27"/></operator> <call><name pos:line="5" pos:column="28">find_unresolved_deltas_1<pos:position pos:line="5" pos:column="52"/></name><argument_list pos:line="5" pos:column="52">(<argument><expr><name pos:line="5" pos:column="53">base<pos:position pos:line="5" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="59">prev_base<pos:position pos:line="5" pos:column="68"/></name></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="70"/></expr_stmt>

		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">new_base<pos:position pos:line="7" pos:column="29"/></name></expr>)<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30"> <block pos:line="7" pos:column="31">{
			<expr_stmt><expr><name pos:line="8" pos:column="25">prev_base<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">=<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="37">base<pos:position pos:line="8" pos:column="41"/></name></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="9" pos:column="25">base<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">=<pos:position pos:line="9" pos:column="31"/></operator> <name pos:line="9" pos:column="32">new_base<pos:position pos:line="9" pos:column="40"/></name></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="10" pos:column="18"/></block></then> <else pos:line="10" pos:column="19">else <block pos:line="10" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">free<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">base<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="12" pos:column="25">base<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">=<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="32">prev_base<pos:position pos:line="12" pos:column="41"/></name></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><operator pos:line="13" pos:column="29">!<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">base<pos:position pos:line="13" pos:column="34"/></name></expr>)<pos:position pos:line="13" pos:column="35"/></condition><then pos:line="13" pos:column="35">
				<block type="pseudo"><return pos:line="14" pos:column="33">return;<pos:position pos:line="14" pos:column="40"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="15" pos:column="25">prev_base<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">=<pos:position pos:line="15" pos:column="36"/></operator> <name><name pos:line="15" pos:column="37">base<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">base<pos:position pos:line="15" pos:column="47"/></name></name></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></else></if>
	}<pos:position pos:line="17" pos:column="10"/></block></for>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

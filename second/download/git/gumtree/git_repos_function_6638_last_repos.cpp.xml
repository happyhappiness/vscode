<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6638_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">disable_echo<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">termios<pos:position pos:line="3" pos:column="23"/></name></name></type> <name pos:line="3" pos:column="24">t<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><name pos:line="5" pos:column="9">term_fd<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">=<pos:position pos:line="5" pos:column="18"/></operator> <call><name pos:line="5" pos:column="19">open<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><literal type="string" pos:line="5" pos:column="24">"/dev/tty"<pos:position pos:line="5" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="36">O_RDWR<pos:position pos:line="5" pos:column="42"/></name></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="44"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">tcgetattr<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">term_fd<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="32">&amp;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="33">t<pos:position pos:line="6" pos:column="34"/></name></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call> <operator pos:line="6" pos:column="36">&lt;<pos:position pos:line="6" pos:column="40"/></operator> <literal type="number" pos:line="6" pos:column="38">0<pos:position pos:line="6" pos:column="39"/></literal></expr>)<pos:position pos:line="6" pos:column="40"/></condition><then pos:line="6" pos:column="40">
		<block type="pseudo"><goto pos:line="7" pos:column="17">goto <name pos:line="7" pos:column="22">error<pos:position pos:line="7" pos:column="27"/></name>;<pos:position pos:line="7" pos:column="28"/></goto></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">old_term<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">t<pos:position pos:line="9" pos:column="21"/></name></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">sigchain_push_common<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">restore_term_on_signal<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="12" pos:column="9">t<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">.<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">c_lflag<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">&amp;=<pos:position pos:line="12" pos:column="25"/></operator> <operator pos:line="12" pos:column="22">~<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">ECHO<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">tcsetattr<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">term_fd<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">TCSAFLUSH<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="44">&amp;<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="45">t<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return></block></then></if>

<label><name pos:line="16" pos:column="1">error<pos:position pos:line="16" pos:column="6"/></name>:<pos:position pos:line="16" pos:column="7"/></label>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">close<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><name pos:line="17" pos:column="15">term_fd<pos:position pos:line="17" pos:column="22"/></name></expr></argument>)<pos:position pos:line="17" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">term_fd<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <operator pos:line="18" pos:column="19">-<pos:position pos:line="18" pos:column="20"/></operator><literal type="number" pos:line="18" pos:column="20">1<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
	<return pos:line="19" pos:column="9">return <expr><operator pos:line="19" pos:column="16">-<pos:position pos:line="19" pos:column="17"/></operator><literal type="number" pos:line="19" pos:column="17">1<pos:position pos:line="19" pos:column="18"/></literal></expr>;<pos:position pos:line="19" pos:column="19"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

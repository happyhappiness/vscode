<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6951_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">update_regs<pos:position pos:line="3" pos:column="12"/></name> <parameter_list pos:line="3" pos:column="13">(<parameter><decl><type><specifier pos:line="3" pos:column="14">const<pos:position pos:line="3" pos:column="19"/></specifier> <name pos:line="3" pos:column="20">re_dfa_t<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">dfa<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="35">regmatch_t<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">pmatch<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>,
	     <parameter><decl><type><name pos:line="4" pos:column="14">regmatch_t<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">prev_idx_match<pos:position pos:line="4" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="42">int<pos:position pos:line="4" pos:column="45"/></name></type> <name pos:line="4" pos:column="46">cur_node<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="56">int<pos:position pos:line="4" pos:column="59"/></name></type> <name pos:line="4" pos:column="60">cur_idx<pos:position pos:line="4" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="69">int<pos:position pos:line="4" pos:column="72"/></name></type> <name pos:line="4" pos:column="73">nmatch<pos:position pos:line="4" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="80"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">type<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><name><name pos:line="6" pos:column="14">dfa<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">nodes<pos:position pos:line="6" pos:column="24"/></name><index pos:line="6" pos:column="24">[<expr><name pos:line="6" pos:column="25">cur_node<pos:position pos:line="6" pos:column="33"/></name></expr>]<pos:position pos:line="6" pos:column="34"/></index></name><operator pos:line="6" pos:column="34">.<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="35">type<pos:position pos:line="6" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">type<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">OP_OPEN_SUBEXP<pos:position pos:line="7" pos:column="29"/></name></expr>)<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30">
    <block pos:line="8" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="9" pos:column="7">int<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">reg_num<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name><name pos:line="9" pos:column="21">dfa<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">nodes<pos:position pos:line="9" pos:column="31"/></name><index pos:line="9" pos:column="31">[<expr><name pos:line="9" pos:column="32">cur_node<pos:position pos:line="9" pos:column="40"/></name></expr>]<pos:position pos:line="9" pos:column="41"/></index></name><operator pos:line="9" pos:column="41">.<pos:position pos:line="9" pos:column="42"/></operator><name><name pos:line="9" pos:column="42">opr<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">.<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="46">idx<pos:position pos:line="9" pos:column="49"/></name></name> <operator pos:line="9" pos:column="50">+<pos:position pos:line="9" pos:column="51"/></operator> <literal type="number" pos:line="9" pos:column="52">1<pos:position pos:line="9" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="54"/></decl_stmt>

      <comment type="block" pos:line="11" pos:column="7">/* We are at the first node of this sub expression.  */</comment>
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><name pos:line="12" pos:column="11">reg_num<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">&lt;<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="21">nmatch<pos:position pos:line="12" pos:column="27"/></name></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28">
	<block pos:line="13" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="14" pos:column="11">pmatch<pos:position pos:line="14" pos:column="17"/></name><index pos:line="14" pos:column="17">[<expr><name pos:line="14" pos:column="18">reg_num<pos:position pos:line="14" pos:column="25"/></name></expr>]<pos:position pos:line="14" pos:column="26"/></index></name><operator pos:line="14" pos:column="26">.<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">rm_so<pos:position pos:line="14" pos:column="32"/></name> <operator pos:line="14" pos:column="33">=<pos:position pos:line="14" pos:column="34"/></operator> <name pos:line="14" pos:column="35">cur_idx<pos:position pos:line="14" pos:column="42"/></name></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="15" pos:column="11">pmatch<pos:position pos:line="15" pos:column="17"/></name><index pos:line="15" pos:column="17">[<expr><name pos:line="15" pos:column="18">reg_num<pos:position pos:line="15" pos:column="25"/></name></expr>]<pos:position pos:line="15" pos:column="26"/></index></name><operator pos:line="15" pos:column="26">.<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">rm_eo<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">=<pos:position pos:line="15" pos:column="34"/></operator> <operator pos:line="15" pos:column="35">-<pos:position pos:line="15" pos:column="36"/></operator><literal type="number" pos:line="15" pos:column="36">1<pos:position pos:line="15" pos:column="37"/></literal></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></then>
  <elseif pos:line="18" pos:column="3">else <if pos:line="18" pos:column="8">if <condition pos:line="18" pos:column="11">(<expr><name pos:line="18" pos:column="12">type<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">==<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="20">OP_CLOSE_SUBEXP<pos:position pos:line="18" pos:column="35"/></name></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36">
    <block pos:line="19" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">int<pos:position pos:line="20" pos:column="10"/></name></type> <name pos:line="20" pos:column="11">reg_num<pos:position pos:line="20" pos:column="18"/></name> <init pos:line="20" pos:column="19">= <expr><name><name pos:line="20" pos:column="21">dfa<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">-&gt;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="26">nodes<pos:position pos:line="20" pos:column="31"/></name><index pos:line="20" pos:column="31">[<expr><name pos:line="20" pos:column="32">cur_node<pos:position pos:line="20" pos:column="40"/></name></expr>]<pos:position pos:line="20" pos:column="41"/></index></name><operator pos:line="20" pos:column="41">.<pos:position pos:line="20" pos:column="42"/></operator><name><name pos:line="20" pos:column="42">opr<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">.<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="46">idx<pos:position pos:line="20" pos:column="49"/></name></name> <operator pos:line="20" pos:column="50">+<pos:position pos:line="20" pos:column="51"/></operator> <literal type="number" pos:line="20" pos:column="52">1<pos:position pos:line="20" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="54"/></decl_stmt>
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><name pos:line="21" pos:column="11">reg_num<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">&lt;<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="21">nmatch<pos:position pos:line="21" pos:column="27"/></name></expr>)<pos:position pos:line="21" pos:column="28"/></condition><then pos:line="21" pos:column="28">
	<block pos:line="22" pos:column="9">{
	  <comment type="block" pos:line="23" pos:column="11">/* We are at the last node of this sub expression.  */</comment>
	  <if pos:line="24" pos:column="11">if <condition pos:line="24" pos:column="14">(<expr><name><name pos:line="24" pos:column="15">pmatch<pos:position pos:line="24" pos:column="21"/></name><index pos:line="24" pos:column="21">[<expr><name pos:line="24" pos:column="22">reg_num<pos:position pos:line="24" pos:column="29"/></name></expr>]<pos:position pos:line="24" pos:column="30"/></index></name><operator pos:line="24" pos:column="30">.<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="31">rm_so<pos:position pos:line="24" pos:column="36"/></name> <operator pos:line="24" pos:column="37">&lt;<pos:position pos:line="24" pos:column="41"/></operator> <name pos:line="24" pos:column="39">cur_idx<pos:position pos:line="24" pos:column="46"/></name></expr>)<pos:position pos:line="24" pos:column="47"/></condition><then pos:line="24" pos:column="47">
	    <block pos:line="25" pos:column="13">{
	      <expr_stmt><expr><name><name pos:line="26" pos:column="15">pmatch<pos:position pos:line="26" pos:column="21"/></name><index pos:line="26" pos:column="21">[<expr><name pos:line="26" pos:column="22">reg_num<pos:position pos:line="26" pos:column="29"/></name></expr>]<pos:position pos:line="26" pos:column="30"/></index></name><operator pos:line="26" pos:column="30">.<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="31">rm_eo<pos:position pos:line="26" pos:column="36"/></name> <operator pos:line="26" pos:column="37">=<pos:position pos:line="26" pos:column="38"/></operator> <name pos:line="26" pos:column="39">cur_idx<pos:position pos:line="26" pos:column="46"/></name></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt>
	      <comment type="block" pos:line="27" pos:column="15">/* This is a non-empty match or we are not inside an optional
		 subexpression.  Accept this right away.  */</comment>
	      <expr_stmt><expr><call><name pos:line="29" pos:column="15">memcpy<pos:position pos:line="29" pos:column="21"/></name> <argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">prev_idx_match<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="39">pmatch<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="47">sizeof <argument_list pos:line="29" pos:column="54">(<argument><expr><name pos:line="29" pos:column="55">regmatch_t<pos:position pos:line="29" pos:column="65"/></name></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></sizeof> <operator pos:line="29" pos:column="67">*<pos:position pos:line="29" pos:column="68"/></operator> <name pos:line="29" pos:column="69">nmatch<pos:position pos:line="29" pos:column="75"/></name></expr></argument>)<pos:position pos:line="29" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="77"/></expr_stmt>
	    }<pos:position pos:line="30" pos:column="14"/></block></then>
	  <else pos:line="31" pos:column="11">else
	    <block pos:line="32" pos:column="13">{
	      <if pos:line="33" pos:column="15">if <condition pos:line="33" pos:column="18">(<expr><name><name pos:line="33" pos:column="19">dfa<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">nodes<pos:position pos:line="33" pos:column="29"/></name><index pos:line="33" pos:column="29">[<expr><name pos:line="33" pos:column="30">cur_node<pos:position pos:line="33" pos:column="38"/></name></expr>]<pos:position pos:line="33" pos:column="39"/></index></name><operator pos:line="33" pos:column="39">.<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="40">opt_subexp<pos:position pos:line="33" pos:column="50"/></name>
		  <operator pos:line="34" pos:column="19">&amp;&amp;<pos:position pos:line="34" pos:column="29"/></operator> <name><name pos:line="34" pos:column="22">prev_idx_match<pos:position pos:line="34" pos:column="36"/></name><index pos:line="34" pos:column="36">[<expr><name pos:line="34" pos:column="37">reg_num<pos:position pos:line="34" pos:column="44"/></name></expr>]<pos:position pos:line="34" pos:column="45"/></index></name><operator pos:line="34" pos:column="45">.<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="46">rm_so<pos:position pos:line="34" pos:column="51"/></name> <operator pos:line="34" pos:column="52">!=<pos:position pos:line="34" pos:column="54"/></operator> <operator pos:line="34" pos:column="55">-<pos:position pos:line="34" pos:column="56"/></operator><literal type="number" pos:line="34" pos:column="56">1<pos:position pos:line="34" pos:column="57"/></literal></expr>)<pos:position pos:line="34" pos:column="58"/></condition><then pos:line="34" pos:column="58">
		<comment type="block" pos:line="35" pos:column="17">/* We transited through an empty match for an optional
		   subexpression, like (a?)*, and this is not the subexp's
		   first match.  Copy back the old content of the registers
		   so that matches of an inner subexpression are undone as
		   well, like in ((a?))*.  */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">memcpy<pos:position pos:line="40" pos:column="23"/></name> <argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">pmatch<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="33">prev_idx_match<pos:position pos:line="40" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="49">sizeof <argument_list pos:line="40" pos:column="56">(<argument><expr><name pos:line="40" pos:column="57">regmatch_t<pos:position pos:line="40" pos:column="67"/></name></expr></argument>)<pos:position pos:line="40" pos:column="68"/></argument_list></sizeof> <operator pos:line="40" pos:column="69">*<pos:position pos:line="40" pos:column="70"/></operator> <name pos:line="40" pos:column="71">nmatch<pos:position pos:line="40" pos:column="77"/></name></expr></argument>)<pos:position pos:line="40" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="79"/></expr_stmt></block></then>
	      <else pos:line="41" pos:column="15">else
		<comment type="block" pos:line="42" pos:column="17">/* We completed a subexpression, but it may be part of
		   an optional one, so do not update PREV_IDX_MATCH.  */</comment>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="17">pmatch<pos:position pos:line="44" pos:column="23"/></name><index pos:line="44" pos:column="23">[<expr><name pos:line="44" pos:column="24">reg_num<pos:position pos:line="44" pos:column="31"/></name></expr>]<pos:position pos:line="44" pos:column="32"/></index></name><operator pos:line="44" pos:column="32">.<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="33">rm_eo<pos:position pos:line="44" pos:column="38"/></name> <operator pos:line="44" pos:column="39">=<pos:position pos:line="44" pos:column="40"/></operator> <name pos:line="44" pos:column="41">cur_idx<pos:position pos:line="44" pos:column="48"/></name></expr>;<pos:position pos:line="44" pos:column="49"/></expr_stmt></block></else></if>
	    }<pos:position pos:line="45" pos:column="14"/></block></else></if>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if></elseif></if>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

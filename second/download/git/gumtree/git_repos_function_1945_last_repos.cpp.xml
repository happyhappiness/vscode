<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1945_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">consume_one<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">priv_<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">s<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">unsigned<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">long<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">size<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">xdiff_emit_state<pos:position pos:line="3" pos:column="32"/></name></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">priv<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">= <expr><name pos:line="3" pos:column="41">priv_<pos:position pos:line="3" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">ep<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">size<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition> <block pos:line="5" pos:column="22">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">unsigned<pos:position pos:line="6" pos:column="25"/></name> <name pos:line="6" pos:column="26">long<pos:position pos:line="6" pos:column="30"/></name></type> <name pos:line="6" pos:column="31">this_size<pos:position pos:line="6" pos:column="40"/></name></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
		<expr_stmt><expr><name pos:line="7" pos:column="17">ep<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <call><name pos:line="7" pos:column="22">memchr<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">s<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="32">'\n'<pos:position pos:line="7" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="38">size<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="8" pos:column="17">this_size<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">=<pos:position pos:line="8" pos:column="28"/></operator> <ternary><condition><expr><operator pos:line="8" pos:column="29">(<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">ep<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">==<pos:position pos:line="8" pos:column="35"/></operator> <name pos:line="8" pos:column="36">NULL<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">)<pos:position pos:line="8" pos:column="41"/></operator></expr> ?<pos:position pos:line="8" pos:column="43"/></condition><then pos:line="8" pos:column="43"> <expr><name pos:line="8" pos:column="44">size<pos:position pos:line="8" pos:column="48"/></name></expr> <pos:position pos:line="8" pos:column="49"/></then><else pos:line="8" pos:column="49">: <expr><operator pos:line="8" pos:column="51">(<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="52">ep<pos:position pos:line="8" pos:column="54"/></name> <operator pos:line="8" pos:column="55">-<pos:position pos:line="8" pos:column="56"/></operator> <name pos:line="8" pos:column="57">s<pos:position pos:line="8" pos:column="58"/></name> <operator pos:line="8" pos:column="59">+<pos:position pos:line="8" pos:column="60"/></operator> <literal type="number" pos:line="8" pos:column="61">1<pos:position pos:line="8" pos:column="62"/></literal><operator pos:line="8" pos:column="62">)<pos:position pos:line="8" pos:column="63"/></operator></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="9" pos:column="17">priv<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">consume<pos:position pos:line="9" pos:column="30"/></name></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name><name pos:line="9" pos:column="31">priv<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">consume_callback_data<pos:position pos:line="9" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="60">s<pos:position pos:line="9" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="63">this_size<pos:position pos:line="9" pos:column="72"/></name></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">size<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">-=<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">this_size<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="11" pos:column="17">s<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">+=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">this_size<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></while>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

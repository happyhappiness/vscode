<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5964_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">sizeof_union<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">packed_git<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">p1<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">packed_git<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">p2<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">ret<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">long<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">p1_off<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><literal type="number" pos:line="4" pos:column="32">0<pos:position pos:line="4" pos:column="33"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="35">p2_off<pos:position pos:line="4" pos:column="41"/></name> <init pos:line="4" pos:column="42">= <expr><literal type="number" pos:line="4" pos:column="44">0<pos:position pos:line="4" pos:column="45"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="47">p1_step<pos:position pos:line="4" pos:column="54"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="56">p2_step<pos:position pos:line="4" pos:column="63"/></name></decl>;<pos:position pos:line="4" pos:column="64"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">unsigned<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">char<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">p1_base<pos:position pos:line="5" pos:column="37"/></name></decl>, <modifier pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="40">p2_base<pos:position pos:line="5" pos:column="47"/></name></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">p1_base<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <name><name pos:line="7" pos:column="19">p1<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">index_data<pos:position pos:line="7" pos:column="33"/></name></name></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">p2_base<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <name><name pos:line="8" pos:column="19">p2<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">index_data<pos:position pos:line="8" pos:column="33"/></name></name></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">p1_base<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">+=<pos:position pos:line="9" pos:column="19"/></operator> <literal type="number" pos:line="9" pos:column="20">256<pos:position pos:line="9" pos:column="23"/></literal> <operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator> <literal type="number" pos:line="9" pos:column="26">4<pos:position pos:line="9" pos:column="27"/></literal> <operator pos:line="9" pos:column="28">+<pos:position pos:line="9" pos:column="29"/></operator> <operator pos:line="9" pos:column="30">(<pos:position pos:line="9" pos:column="31"/></operator><ternary><condition><expr><operator pos:line="9" pos:column="31">(<pos:position pos:line="9" pos:column="32"/></operator><name><name pos:line="9" pos:column="32">p1<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">index_version<pos:position pos:line="9" pos:column="49"/></name></name> <operator pos:line="9" pos:column="50">&lt;<pos:position pos:line="9" pos:column="54"/></operator> <literal type="number" pos:line="9" pos:column="52">2<pos:position pos:line="9" pos:column="53"/></literal><operator pos:line="9" pos:column="53">)<pos:position pos:line="9" pos:column="54"/></operator></expr> ?<pos:position pos:line="9" pos:column="56"/></condition><then pos:line="9" pos:column="56"> <expr><literal type="number" pos:line="9" pos:column="57">4<pos:position pos:line="9" pos:column="58"/></literal></expr> <pos:position pos:line="9" pos:column="59"/></then><else pos:line="9" pos:column="59">: <expr><literal type="number" pos:line="9" pos:column="61">8<pos:position pos:line="9" pos:column="62"/></literal></expr></else></ternary><operator pos:line="9" pos:column="62">)<pos:position pos:line="9" pos:column="63"/></operator></expr>;<pos:position pos:line="9" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">p2_base<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">+=<pos:position pos:line="10" pos:column="19"/></operator> <literal type="number" pos:line="10" pos:column="20">256<pos:position pos:line="10" pos:column="23"/></literal> <operator pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></operator> <literal type="number" pos:line="10" pos:column="26">4<pos:position pos:line="10" pos:column="27"/></literal> <operator pos:line="10" pos:column="28">+<pos:position pos:line="10" pos:column="29"/></operator> <operator pos:line="10" pos:column="30">(<pos:position pos:line="10" pos:column="31"/></operator><ternary><condition><expr><operator pos:line="10" pos:column="31">(<pos:position pos:line="10" pos:column="32"/></operator><name><name pos:line="10" pos:column="32">p2<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">index_version<pos:position pos:line="10" pos:column="49"/></name></name> <operator pos:line="10" pos:column="50">&lt;<pos:position pos:line="10" pos:column="54"/></operator> <literal type="number" pos:line="10" pos:column="52">2<pos:position pos:line="10" pos:column="53"/></literal><operator pos:line="10" pos:column="53">)<pos:position pos:line="10" pos:column="54"/></operator></expr> ?<pos:position pos:line="10" pos:column="56"/></condition><then pos:line="10" pos:column="56"> <expr><literal type="number" pos:line="10" pos:column="57">4<pos:position pos:line="10" pos:column="58"/></literal></expr> <pos:position pos:line="10" pos:column="59"/></then><else pos:line="10" pos:column="59">: <expr><literal type="number" pos:line="10" pos:column="61">8<pos:position pos:line="10" pos:column="62"/></literal></expr></else></ternary><operator pos:line="10" pos:column="62">)<pos:position pos:line="10" pos:column="63"/></operator></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">p1_step<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <ternary><condition><expr><operator pos:line="11" pos:column="19">(<pos:position pos:line="11" pos:column="20"/></operator><name><name pos:line="11" pos:column="20">p1<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">-&gt;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="24">index_version<pos:position pos:line="11" pos:column="37"/></name></name> <operator pos:line="11" pos:column="38">&lt;<pos:position pos:line="11" pos:column="42"/></operator> <literal type="number" pos:line="11" pos:column="40">2<pos:position pos:line="11" pos:column="41"/></literal><operator pos:line="11" pos:column="41">)<pos:position pos:line="11" pos:column="42"/></operator></expr> ?<pos:position pos:line="11" pos:column="44"/></condition><then pos:line="11" pos:column="44"> <expr><literal type="number" pos:line="11" pos:column="45">24<pos:position pos:line="11" pos:column="47"/></literal></expr> <pos:position pos:line="11" pos:column="48"/></then><else pos:line="11" pos:column="48">: <expr><literal type="number" pos:line="11" pos:column="50">20<pos:position pos:line="11" pos:column="52"/></literal></expr></else></ternary></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">p2_step<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <ternary><condition><expr><operator pos:line="12" pos:column="19">(<pos:position pos:line="12" pos:column="20"/></operator><name><name pos:line="12" pos:column="20">p2<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">index_version<pos:position pos:line="12" pos:column="37"/></name></name> <operator pos:line="12" pos:column="38">&lt;<pos:position pos:line="12" pos:column="42"/></operator> <literal type="number" pos:line="12" pos:column="40">2<pos:position pos:line="12" pos:column="41"/></literal><operator pos:line="12" pos:column="41">)<pos:position pos:line="12" pos:column="42"/></operator></expr> ?<pos:position pos:line="12" pos:column="44"/></condition><then pos:line="12" pos:column="44"> <expr><literal type="number" pos:line="12" pos:column="45">24<pos:position pos:line="12" pos:column="47"/></literal></expr> <pos:position pos:line="12" pos:column="48"/></then><else pos:line="12" pos:column="48">: <expr><literal type="number" pos:line="12" pos:column="50">20<pos:position pos:line="12" pos:column="52"/></literal></expr></else></ternary></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>

	<while pos:line="14" pos:column="9">while <condition pos:line="14" pos:column="15">(<expr><name pos:line="14" pos:column="16">p1_off<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <name><name pos:line="14" pos:column="25">p1<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">num_objects<pos:position pos:line="14" pos:column="40"/></name></name> <operator pos:line="14" pos:column="41">*<pos:position pos:line="14" pos:column="42"/></operator> <name pos:line="14" pos:column="43">p1_step<pos:position pos:line="14" pos:column="50"/></name> <operator pos:line="14" pos:column="51">&amp;&amp;<pos:position pos:line="14" pos:column="61"/></operator>
	       <name pos:line="15" pos:column="16">p2_off<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <name><name pos:line="15" pos:column="25">p2<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">num_objects<pos:position pos:line="15" pos:column="40"/></name></name> <operator pos:line="15" pos:column="41">*<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="43">p2_step<pos:position pos:line="15" pos:column="50"/></name></expr>)<pos:position pos:line="15" pos:column="51"/></condition>
	<block pos:line="16" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">int<pos:position pos:line="17" pos:column="20"/></name></type> <name pos:line="17" pos:column="21">cmp<pos:position pos:line="17" pos:column="24"/></name> <init pos:line="17" pos:column="25">= <expr><call><name pos:line="17" pos:column="27">hashcmp<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">p1_base<pos:position pos:line="17" pos:column="42"/></name> <operator pos:line="17" pos:column="43">+<pos:position pos:line="17" pos:column="44"/></operator> <name pos:line="17" pos:column="45">p1_off<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="53">p2_base<pos:position pos:line="17" pos:column="60"/></name> <operator pos:line="17" pos:column="61">+<pos:position pos:line="17" pos:column="62"/></operator> <name pos:line="17" pos:column="63">p2_off<pos:position pos:line="17" pos:column="69"/></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="71"/></decl_stmt>
		<comment type="block" pos:line="18" pos:column="17">/* cmp ~ p1 - p2 */</comment>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">cmp<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">==<pos:position pos:line="19" pos:column="27"/></operator> <literal type="number" pos:line="19" pos:column="28">0<pos:position pos:line="19" pos:column="29"/></literal></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30"> <block pos:line="19" pos:column="31">{
			<expr_stmt><expr><name pos:line="20" pos:column="25">ret<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">++<pos:position pos:line="20" pos:column="30"/></operator></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
			<expr_stmt><expr><name pos:line="21" pos:column="25">p1_off<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">+=<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="35">p1_step<pos:position pos:line="21" pos:column="42"/></name></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">p2_off<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">+=<pos:position pos:line="22" pos:column="34"/></operator> <name pos:line="22" pos:column="35">p2_step<pos:position pos:line="22" pos:column="42"/></name></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
			<continue pos:line="23" pos:column="25">continue;<pos:position pos:line="23" pos:column="34"/></continue>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">cmp<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">&lt;<pos:position pos:line="25" pos:column="29"/></operator> <literal type="number" pos:line="25" pos:column="27">0<pos:position pos:line="25" pos:column="28"/></literal></expr>)<pos:position pos:line="25" pos:column="29"/></condition><then pos:line="25" pos:column="29"> <block pos:line="25" pos:column="30">{ <comment type="block" pos:line="25" pos:column="32">/* p1 has the object, p2 doesn't */</comment>
			<expr_stmt><expr><name pos:line="26" pos:column="25">p1_off<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">+=<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="35">p1_step<pos:position pos:line="26" pos:column="42"/></name></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></then> <else pos:line="27" pos:column="19">else <block pos:line="27" pos:column="24">{ <comment type="block" pos:line="27" pos:column="26">/* p2 has the object, p1 doesn't */</comment>
			<expr_stmt><expr><name pos:line="28" pos:column="25">p2_off<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">+=<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="35">p2_step<pos:position pos:line="28" pos:column="42"/></name></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></else></if>
	}<pos:position pos:line="30" pos:column="10"/></block></while>
	<return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">ret<pos:position pos:line="31" pos:column="19"/></name></expr>;<pos:position pos:line="31" pos:column="20"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3925_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">find_alignment<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">scoreboard<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">sb<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">option<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">longest_src_lines<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><literal type="number" pos:line="3" pos:column="33">0<pos:position pos:line="3" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">longest_dst_lines<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><literal type="number" pos:line="4" pos:column="33">0<pos:position pos:line="4" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">largest_score<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><literal type="number" pos:line="5" pos:column="34">0<pos:position pos:line="5" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">blame_entry<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">e<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">compute_auto_abbrev<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><operator pos:line="7" pos:column="35">(<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="36">abbrev<pos:position pos:line="7" pos:column="42"/></name> <operator pos:line="7" pos:column="43">&lt;<pos:position pos:line="7" pos:column="47"/></operator> <literal type="number" pos:line="7" pos:column="45">0<pos:position pos:line="7" pos:column="46"/></literal><operator pos:line="7" pos:column="46">)<pos:position pos:line="7" pos:column="47"/></operator></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">auto_abbrev<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name pos:line="8" pos:column="27">default_abbrev<pos:position pos:line="8" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">e<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name><name pos:line="10" pos:column="18">sb<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">ent<pos:position pos:line="10" pos:column="25"/></name></name></expr>;<pos:position pos:line="10" pos:column="26"/></init> <condition><expr><name pos:line="10" pos:column="27">e<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></condition> <incr><expr><name pos:line="10" pos:column="30">e<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">=<pos:position pos:line="10" pos:column="33"/></operator> <name><name pos:line="10" pos:column="34">e<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">next<pos:position pos:line="10" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="10" pos:column="42"/></control> <block pos:line="10" pos:column="43">{
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">origin<pos:position pos:line="11" pos:column="30"/></name></name> <modifier pos:line="11" pos:column="31">*<pos:position pos:line="11" pos:column="32"/></modifier></type><name pos:line="11" pos:column="32">suspect<pos:position pos:line="11" pos:column="39"/></name> <init pos:line="11" pos:column="40">= <expr><name><name pos:line="11" pos:column="42">e<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">suspect<pos:position pos:line="11" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">commit_info<pos:position pos:line="12" pos:column="35"/></name></name></type> <name pos:line="12" pos:column="36">ci<pos:position pos:line="12" pos:column="38"/></name></decl>;<pos:position pos:line="12" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">num<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">compute_auto_abbrev<pos:position pos:line="15" pos:column="40"/></name></expr>)<pos:position pos:line="15" pos:column="41"/></condition><then pos:line="15" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="25">auto_abbrev<pos:position pos:line="16" pos:column="36"/></name> <operator pos:line="16" pos:column="37">=<pos:position pos:line="16" pos:column="38"/></operator> <call><name pos:line="16" pos:column="39">update_auto_abbrev<pos:position pos:line="16" pos:column="57"/></name><argument_list pos:line="16" pos:column="57">(<argument><expr><name pos:line="16" pos:column="58">auto_abbrev<pos:position pos:line="16" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="71">suspect<pos:position pos:line="16" pos:column="78"/></name></expr></argument>)<pos:position pos:line="16" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="80"/></expr_stmt></block></then></if>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">strcmp<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name><name pos:line="17" pos:column="28">suspect<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">path<pos:position pos:line="17" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="43">sb<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">path<pos:position pos:line="17" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="53"/></condition><then pos:line="17" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="25">*<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">option<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">|=<pos:position pos:line="18" pos:column="35"/></operator> <name pos:line="18" pos:column="36">OUTPUT_SHOW_NAME<pos:position pos:line="18" pos:column="52"/></name></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="19" pos:column="17">num<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <call><name pos:line="19" pos:column="23">strlen<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name><name pos:line="19" pos:column="30">suspect<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">path<pos:position pos:line="19" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">longest_file<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">&lt;<pos:position pos:line="20" pos:column="38"/></operator> <name pos:line="20" pos:column="36">num<pos:position pos:line="20" pos:column="39"/></name></expr>)<pos:position pos:line="20" pos:column="40"/></condition><then pos:line="20" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="25">longest_file<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">=<pos:position pos:line="21" pos:column="39"/></operator> <name pos:line="21" pos:column="40">num<pos:position pos:line="21" pos:column="43"/></name></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt></block></then></if>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><operator pos:line="22" pos:column="22">(<pos:position pos:line="22" pos:column="23"/></operator><name><name pos:line="22" pos:column="23">suspect<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">commit<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">object<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">.<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="47">flags<pos:position pos:line="22" pos:column="52"/></name></name> <operator pos:line="22" pos:column="53">&amp;<pos:position pos:line="22" pos:column="58"/></operator> <name pos:line="22" pos:column="55">METAINFO_SHOWN<pos:position pos:line="22" pos:column="69"/></name><operator pos:line="22" pos:column="69">)<pos:position pos:line="22" pos:column="70"/></operator></expr>)<pos:position pos:line="22" pos:column="71"/></condition><then pos:line="22" pos:column="71"> <block pos:line="22" pos:column="72">{
			<expr_stmt><expr><name><name pos:line="23" pos:column="25">suspect<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">commit<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">-&gt;<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="42">object<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">.<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="49">flags<pos:position pos:line="23" pos:column="54"/></name></name> <operator pos:line="23" pos:column="55">|=<pos:position pos:line="23" pos:column="57"/></operator> <name pos:line="23" pos:column="58">METAINFO_SHOWN<pos:position pos:line="23" pos:column="72"/></name></expr>;<pos:position pos:line="23" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">get_commit_info<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><name><name pos:line="24" pos:column="41">suspect<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">-&gt;<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="50">commit<pos:position pos:line="24" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="58">&amp;<pos:position pos:line="24" pos:column="63"/></operator><name pos:line="24" pos:column="59">ci<pos:position pos:line="24" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="63">1<pos:position pos:line="24" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="66"/></expr_stmt>
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><operator pos:line="25" pos:column="29">*<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">option<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">&amp;<pos:position pos:line="25" pos:column="42"/></operator> <name pos:line="25" pos:column="39">OUTPUT_SHOW_EMAIL<pos:position pos:line="25" pos:column="56"/></name></expr>)<pos:position pos:line="25" pos:column="57"/></condition><then pos:line="25" pos:column="57">
				<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="33">num<pos:position pos:line="26" pos:column="36"/></name> <operator pos:line="26" pos:column="37">=<pos:position pos:line="26" pos:column="38"/></operator> <call><name pos:line="26" pos:column="39">utf8_strwidth<pos:position pos:line="26" pos:column="52"/></name><argument_list pos:line="26" pos:column="52">(<argument><expr><name><name pos:line="26" pos:column="53">ci<pos:position pos:line="26" pos:column="55"/></name><operator pos:line="26" pos:column="55">.<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="56">author_mail<pos:position pos:line="26" pos:column="67"/></name><operator pos:line="26" pos:column="67">.<pos:position pos:line="26" pos:column="68"/></operator><name pos:line="26" pos:column="68">buf<pos:position pos:line="26" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="73"/></expr_stmt></block></then>
			<else pos:line="27" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="33">num<pos:position pos:line="28" pos:column="36"/></name> <operator pos:line="28" pos:column="37">=<pos:position pos:line="28" pos:column="38"/></operator> <call><name pos:line="28" pos:column="39">utf8_strwidth<pos:position pos:line="28" pos:column="52"/></name><argument_list pos:line="28" pos:column="52">(<argument><expr><name><name pos:line="28" pos:column="53">ci<pos:position pos:line="28" pos:column="55"/></name><operator pos:line="28" pos:column="55">.<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="56">author<pos:position pos:line="28" pos:column="62"/></name><operator pos:line="28" pos:column="62">.<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="63">buf<pos:position pos:line="28" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt></block></else></if>
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><name pos:line="29" pos:column="29">longest_author<pos:position pos:line="29" pos:column="43"/></name> <operator pos:line="29" pos:column="44">&lt;<pos:position pos:line="29" pos:column="48"/></operator> <name pos:line="29" pos:column="46">num<pos:position pos:line="29" pos:column="49"/></name></expr>)<pos:position pos:line="29" pos:column="50"/></condition><then pos:line="29" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="33">longest_author<pos:position pos:line="30" pos:column="47"/></name> <operator pos:line="30" pos:column="48">=<pos:position pos:line="30" pos:column="49"/></operator> <name pos:line="30" pos:column="50">num<pos:position pos:line="30" pos:column="53"/></name></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt></block></then></if>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="32" pos:column="17">num<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <name><name pos:line="32" pos:column="23">e<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">s_lno<pos:position pos:line="32" pos:column="31"/></name></name> <operator pos:line="32" pos:column="32">+<pos:position pos:line="32" pos:column="33"/></operator> <name><name pos:line="32" pos:column="34">e<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">num_lines<pos:position pos:line="32" pos:column="46"/></name></name></expr>;<pos:position pos:line="32" pos:column="47"/></expr_stmt>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">longest_src_lines<pos:position pos:line="33" pos:column="38"/></name> <operator pos:line="33" pos:column="39">&lt;<pos:position pos:line="33" pos:column="43"/></operator> <name pos:line="33" pos:column="41">num<pos:position pos:line="33" pos:column="44"/></name></expr>)<pos:position pos:line="33" pos:column="45"/></condition><then pos:line="33" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="25">longest_src_lines<pos:position pos:line="34" pos:column="42"/></name> <operator pos:line="34" pos:column="43">=<pos:position pos:line="34" pos:column="44"/></operator> <name pos:line="34" pos:column="45">num<pos:position pos:line="34" pos:column="48"/></name></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="35" pos:column="17">num<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <name><name pos:line="35" pos:column="23">e<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">-&gt;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="26">lno<pos:position pos:line="35" pos:column="29"/></name></name> <operator pos:line="35" pos:column="30">+<pos:position pos:line="35" pos:column="31"/></operator> <name><name pos:line="35" pos:column="32">e<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">-&gt;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="35">num_lines<pos:position pos:line="35" pos:column="44"/></name></name></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">longest_dst_lines<pos:position pos:line="36" pos:column="38"/></name> <operator pos:line="36" pos:column="39">&lt;<pos:position pos:line="36" pos:column="43"/></operator> <name pos:line="36" pos:column="41">num<pos:position pos:line="36" pos:column="44"/></name></expr>)<pos:position pos:line="36" pos:column="45"/></condition><then pos:line="36" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">longest_dst_lines<pos:position pos:line="37" pos:column="42"/></name> <operator pos:line="37" pos:column="43">=<pos:position pos:line="37" pos:column="44"/></operator> <name pos:line="37" pos:column="45">num<pos:position pos:line="37" pos:column="48"/></name></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt></block></then></if>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">largest_score<pos:position pos:line="38" pos:column="34"/></name> <operator pos:line="38" pos:column="35">&lt;<pos:position pos:line="38" pos:column="39"/></operator> <call><name pos:line="38" pos:column="37">ent_score<pos:position pos:line="38" pos:column="46"/></name><argument_list pos:line="38" pos:column="46">(<argument><expr><name pos:line="38" pos:column="47">sb<pos:position pos:line="38" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="51">e<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="54"/></condition><then pos:line="38" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="25">largest_score<pos:position pos:line="39" pos:column="38"/></name> <operator pos:line="39" pos:column="39">=<pos:position pos:line="39" pos:column="40"/></operator> <call><name pos:line="39" pos:column="41">ent_score<pos:position pos:line="39" pos:column="50"/></name><argument_list pos:line="39" pos:column="50">(<argument><expr><name pos:line="39" pos:column="51">sb<pos:position pos:line="39" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="55">e<pos:position pos:line="39" pos:column="56"/></name></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="58"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="41" pos:column="17">commit_info_destroy<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><operator pos:line="41" pos:column="37">&amp;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="38">ci<pos:position pos:line="41" pos:column="40"/></name></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="43" pos:column="9">max_orig_digits<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <call><name pos:line="43" pos:column="27">decimal_width<pos:position pos:line="43" pos:column="40"/></name><argument_list pos:line="43" pos:column="40">(<argument><expr><name pos:line="43" pos:column="41">longest_src_lines<pos:position pos:line="43" pos:column="58"/></name></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name pos:line="44" pos:column="9">max_digits<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <call><name pos:line="44" pos:column="22">decimal_width<pos:position pos:line="44" pos:column="35"/></name><argument_list pos:line="44" pos:column="35">(<argument><expr><name pos:line="44" pos:column="36">longest_dst_lines<pos:position pos:line="44" pos:column="53"/></name></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name pos:line="45" pos:column="9">max_score_digits<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">=<pos:position pos:line="45" pos:column="27"/></operator> <call><name pos:line="45" pos:column="28">decimal_width<pos:position pos:line="45" pos:column="41"/></name><argument_list pos:line="45" pos:column="41">(<argument><expr><name pos:line="45" pos:column="42">largest_score<pos:position pos:line="45" pos:column="55"/></name></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">compute_auto_abbrev<pos:position pos:line="47" pos:column="32"/></name></expr>)<pos:position pos:line="47" pos:column="33"/></condition><then pos:line="47" pos:column="33">
		<comment type="block" pos:line="48" pos:column="17">/* one more abbrev length is needed for the boundary commit */</comment>
		<block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="17">abbrev<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">=<pos:position pos:line="49" pos:column="25"/></operator> <name pos:line="49" pos:column="26">auto_abbrev<pos:position pos:line="49" pos:column="37"/></name> <operator pos:line="49" pos:column="38">+<pos:position pos:line="49" pos:column="39"/></operator> <literal type="number" pos:line="49" pos:column="40">1<pos:position pos:line="49" pos:column="41"/></literal></expr>;<pos:position pos:line="49" pos:column="42"/></expr_stmt></block></then></if>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

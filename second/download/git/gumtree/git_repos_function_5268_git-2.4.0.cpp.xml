<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5268_git-2.4.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_descendants_to_write_order<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">object_entry<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier><modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">wo<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
					   <parameter><decl><type><name pos:line="2" pos:column="44">unsigned<pos:position pos:line="2" pos:column="52"/></name> <name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">endp<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
					   <parameter><decl><type><name><name pos:line="3" pos:column="44">struct<pos:position pos:line="3" pos:column="50"/></name> <name pos:line="3" pos:column="51">object_entry<pos:position pos:line="3" pos:column="63"/></name></name> <modifier pos:line="3" pos:column="64">*<pos:position pos:line="3" pos:column="65"/></modifier></type><name pos:line="3" pos:column="65">e<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="67"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">add_to_order<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><literal type="number" pos:line="5" pos:column="28">1<pos:position pos:line="5" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><name pos:line="6" pos:column="16">e<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition> <block pos:line="6" pos:column="19">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">add_to_order<pos:position pos:line="7" pos:column="33"/></name></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34"> <block pos:line="7" pos:column="35">{
			<decl_stmt><decl><type><name><name pos:line="8" pos:column="25">struct<pos:position pos:line="8" pos:column="31"/></name> <name pos:line="8" pos:column="32">object_entry<pos:position pos:line="8" pos:column="44"/></name></name> <modifier pos:line="8" pos:column="45">*<pos:position pos:line="8" pos:column="46"/></modifier></type><name pos:line="8" pos:column="46">s<pos:position pos:line="8" pos:column="47"/></name></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>
			<comment type="block" pos:line="9" pos:column="25">/* add this node... */</comment>
			<expr_stmt><expr><call><name pos:line="10" pos:column="25">add_to_write_order<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">wo<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">endp<pos:position pos:line="10" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="54">e<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="57"/></expr_stmt>
			<comment type="block" pos:line="11" pos:column="25">/* all its siblings... */</comment>
			<for pos:line="12" pos:column="25">for <control pos:line="12" pos:column="29">(<init><expr><name pos:line="12" pos:column="30">s<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">=<pos:position pos:line="12" pos:column="33"/></operator> <name><name pos:line="12" pos:column="34">e<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">delta_sibling<pos:position pos:line="12" pos:column="50"/></name></name></expr>;<pos:position pos:line="12" pos:column="51"/></init> <condition><expr><name pos:line="12" pos:column="52">s<pos:position pos:line="12" pos:column="53"/></name></expr>;<pos:position pos:line="12" pos:column="54"/></condition> <incr><expr><name pos:line="12" pos:column="55">s<pos:position pos:line="12" pos:column="56"/></name> <operator pos:line="12" pos:column="57">=<pos:position pos:line="12" pos:column="58"/></operator> <name><name pos:line="12" pos:column="59">s<pos:position pos:line="12" pos:column="60"/></name><operator pos:line="12" pos:column="60">-&gt;<pos:position pos:line="12" pos:column="65"/></operator><name pos:line="12" pos:column="62">delta_sibling<pos:position pos:line="12" pos:column="75"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="76"/></control> <block pos:line="12" pos:column="77">{
				<expr_stmt><expr><call><name pos:line="13" pos:column="33">add_to_write_order<pos:position pos:line="13" pos:column="51"/></name><argument_list pos:line="13" pos:column="51">(<argument><expr><name pos:line="13" pos:column="52">wo<pos:position pos:line="13" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="56">endp<pos:position pos:line="13" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="62">s<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
			}<pos:position pos:line="14" pos:column="26"/></block></for>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="16" pos:column="17">/* drop down a level to add left subtree nodes if possible */</comment>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name><name pos:line="17" pos:column="21">e<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">delta_child<pos:position pos:line="17" pos:column="35"/></name></name></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36"> <block pos:line="17" pos:column="37">{
			<expr_stmt><expr><name pos:line="18" pos:column="25">add_to_order<pos:position pos:line="18" pos:column="37"/></name> <operator pos:line="18" pos:column="38">=<pos:position pos:line="18" pos:column="39"/></operator> <literal type="number" pos:line="18" pos:column="40">1<pos:position pos:line="18" pos:column="41"/></literal></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="19" pos:column="25">e<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <name><name pos:line="19" pos:column="29">e<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">-&gt;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="32">delta_child<pos:position pos:line="19" pos:column="43"/></name></name></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></then> <else pos:line="20" pos:column="19">else <block pos:line="20" pos:column="24">{
			<expr_stmt><expr><name pos:line="21" pos:column="25">add_to_order<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">=<pos:position pos:line="21" pos:column="39"/></operator> <literal type="number" pos:line="21" pos:column="40">0<pos:position pos:line="21" pos:column="41"/></literal></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt>
			<comment type="block" pos:line="22" pos:column="25">/* our sibling might have some children, it is next */</comment>
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><name><name pos:line="23" pos:column="29">e<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">-&gt;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="32">delta_sibling<pos:position pos:line="23" pos:column="45"/></name></name></expr>)<pos:position pos:line="23" pos:column="46"/></condition><then pos:line="23" pos:column="46"> <block pos:line="23" pos:column="47">{
				<expr_stmt><expr><name pos:line="24" pos:column="33">e<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">=<pos:position pos:line="24" pos:column="36"/></operator> <name><name pos:line="24" pos:column="37">e<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">-&gt;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="40">delta_sibling<pos:position pos:line="24" pos:column="53"/></name></name></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt>
				<continue pos:line="25" pos:column="33">continue;<pos:position pos:line="25" pos:column="42"/></continue>
			}<pos:position pos:line="26" pos:column="26"/></block></then></if>
			<comment type="block" pos:line="27" pos:column="25">/* go back to our parent node */</comment>
			<expr_stmt><expr><name pos:line="28" pos:column="25">e<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <name><name pos:line="28" pos:column="29">e<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">delta<pos:position pos:line="28" pos:column="37"/></name></name></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
			<while pos:line="29" pos:column="25">while <condition pos:line="29" pos:column="31">(<expr><name pos:line="29" pos:column="32">e<pos:position pos:line="29" pos:column="33"/></name> <operator pos:line="29" pos:column="34">&amp;&amp;<pos:position pos:line="29" pos:column="44"/></operator> <operator pos:line="29" pos:column="37">!<pos:position pos:line="29" pos:column="38"/></operator><name><name pos:line="29" pos:column="38">e<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">delta_sibling<pos:position pos:line="29" pos:column="54"/></name></name></expr>)<pos:position pos:line="29" pos:column="55"/></condition> <block pos:line="29" pos:column="56">{
				<comment type="block" pos:line="30" pos:column="33">/* we're on the right side of a subtree, keep
				 * going up until we can go right again */</comment>
				<expr_stmt><expr><name pos:line="32" pos:column="33">e<pos:position pos:line="32" pos:column="34"/></name> <operator pos:line="32" pos:column="35">=<pos:position pos:line="32" pos:column="36"/></operator> <name><name pos:line="32" pos:column="37">e<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">-&gt;<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="40">delta<pos:position pos:line="32" pos:column="45"/></name></name></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="33" pos:column="26"/></block></while>
			<if pos:line="34" pos:column="25">if <condition pos:line="34" pos:column="28">(<expr><operator pos:line="34" pos:column="29">!<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">e<pos:position pos:line="34" pos:column="31"/></name></expr>)<pos:position pos:line="34" pos:column="32"/></condition><then pos:line="34" pos:column="32"> <block pos:line="34" pos:column="33">{
				<comment type="block" pos:line="35" pos:column="33">/* done- we hit our original root node */</comment>
				<return pos:line="36" pos:column="33">return;<pos:position pos:line="36" pos:column="40"/></return>
			}<pos:position pos:line="37" pos:column="26"/></block></then></if>
			<comment type="block" pos:line="38" pos:column="25">/* pass it off to sibling at this level */</comment>
			<expr_stmt><expr><name pos:line="39" pos:column="25">e<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <name><name pos:line="39" pos:column="29">e<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">delta_sibling<pos:position pos:line="39" pos:column="45"/></name></name></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="40" pos:column="18"/></block></else></if>
	}<pos:position pos:line="41" pos:column="10"/></block></while><empty_stmt pos:line="41" pos:column="10">;<pos:position pos:line="41" pos:column="11"/></empty_stmt>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

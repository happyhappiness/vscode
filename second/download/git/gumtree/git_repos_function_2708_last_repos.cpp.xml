<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2708_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ssize_t<pos:position pos:line="1" pos:column="8"/></name></type> <name pos:line="1" pos:column="9">strbuf_write<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">strbuf<pos:position pos:line="1" pos:column="35"/></name></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">sb<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">FILE<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">f<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<return pos:line="3" pos:column="9">return <expr><ternary><condition><expr><name><name pos:line="3" pos:column="16">sb<pos:position pos:line="3" pos:column="18"/></name><operator pos:line="3" pos:column="18">-&gt;<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="20">len<pos:position pos:line="3" pos:column="23"/></name></name></expr> ?<pos:position pos:line="3" pos:column="25"/></condition><then pos:line="3" pos:column="25"> <expr><call><name pos:line="3" pos:column="26">fwrite<pos:position pos:line="3" pos:column="32"/></name><argument_list pos:line="3" pos:column="32">(<argument><expr><name><name pos:line="3" pos:column="33">sb<pos:position pos:line="3" pos:column="35"/></name><operator pos:line="3" pos:column="35">-&gt;<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="37">buf<pos:position pos:line="3" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="42">1<pos:position pos:line="3" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="45">sb<pos:position pos:line="3" pos:column="47"/></name><operator pos:line="3" pos:column="47">-&gt;<pos:position pos:line="3" pos:column="52"/></operator><name pos:line="3" pos:column="49">len<pos:position pos:line="3" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="54">f<pos:position pos:line="3" pos:column="55"/></name></expr></argument>)<pos:position pos:line="3" pos:column="56"/></argument_list></call></expr> <pos:position pos:line="3" pos:column="57"/></then><else pos:line="3" pos:column="57">: <expr><literal type="number" pos:line="3" pos:column="59">0<pos:position pos:line="3" pos:column="60"/></literal></expr></else></ternary></expr>;<pos:position pos:line="3" pos:column="61"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

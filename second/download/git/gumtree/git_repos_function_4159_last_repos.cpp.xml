<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4159_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">check_pack_crc<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">packed_git<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">p<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">pack_window<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier><modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">w_curs<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="2" pos:column="20">off_t<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">offset<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">off_t<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">len<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">unsigned<pos:position pos:line="2" pos:column="53"/></name> <name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">nr<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">uint32_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">index_crc<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">uint32_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">data_crc<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><call><name pos:line="5" pos:column="29">crc32<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><literal type="number" pos:line="5" pos:column="35">0<pos:position pos:line="5" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="38">NULL<pos:position pos:line="5" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="44">0<pos:position pos:line="5" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>

	<do pos:line="7" pos:column="9">do <block pos:line="7" pos:column="12">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">unsigned<pos:position pos:line="8" pos:column="25"/></name> <name pos:line="8" pos:column="26">long<pos:position pos:line="8" pos:column="30"/></name></type> <name pos:line="8" pos:column="31">avail<pos:position pos:line="8" pos:column="36"/></name></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">void<pos:position pos:line="9" pos:column="21"/></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">data<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><call><name pos:line="9" pos:column="30">use_pack<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">(<argument><expr><name pos:line="9" pos:column="39">p<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">w_curs<pos:position pos:line="9" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="50">offset<pos:position pos:line="9" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="58">&amp;<pos:position pos:line="9" pos:column="63"/></operator><name pos:line="9" pos:column="59">avail<pos:position pos:line="9" pos:column="64"/></name></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="66"/></decl_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">avail<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">&gt;<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="29">len<pos:position pos:line="10" pos:column="32"/></name></expr>)<pos:position pos:line="10" pos:column="33"/></condition><then pos:line="10" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">avail<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">=<pos:position pos:line="11" pos:column="32"/></operator> <name pos:line="11" pos:column="33">len<pos:position pos:line="11" pos:column="36"/></name></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="12" pos:column="17">data_crc<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <call><name pos:line="12" pos:column="28">crc32<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">data_crc<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">data<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">avail<pos:position pos:line="12" pos:column="55"/></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="13" pos:column="17">offset<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">+=<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">avail<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">len<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">-=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">avail<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block> while <condition pos:line="15" pos:column="17">(<expr><name pos:line="15" pos:column="18">len<pos:position pos:line="15" pos:column="21"/></name></expr>)<pos:position pos:line="15" pos:column="22"/></condition>;<pos:position pos:line="15" pos:column="23"/></do>

	<expr_stmt><expr><name pos:line="17" pos:column="9">index_crc<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <name><name pos:line="17" pos:column="21">p<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">index_data<pos:position pos:line="17" pos:column="34"/></name></name></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">index_crc<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">+=<pos:position pos:line="18" pos:column="21"/></operator> <literal type="number" pos:line="18" pos:column="22">2<pos:position pos:line="18" pos:column="23"/></literal> <operator pos:line="18" pos:column="24">+<pos:position pos:line="18" pos:column="25"/></operator> <literal type="number" pos:line="18" pos:column="26">256<pos:position pos:line="18" pos:column="29"/></literal> <operator pos:line="18" pos:column="30">+<pos:position pos:line="18" pos:column="31"/></operator> <name><name pos:line="18" pos:column="32">p<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">-&gt;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="35">num_objects<pos:position pos:line="18" pos:column="46"/></name></name> <operator pos:line="18" pos:column="47">*<pos:position pos:line="18" pos:column="48"/></operator> <operator pos:line="18" pos:column="49">(<pos:position pos:line="18" pos:column="50"/></operator><literal type="number" pos:line="18" pos:column="50">20<pos:position pos:line="18" pos:column="52"/></literal><operator pos:line="18" pos:column="52">/<pos:position pos:line="18" pos:column="53"/></operator><literal type="number" pos:line="18" pos:column="53">4<pos:position pos:line="18" pos:column="54"/></literal><operator pos:line="18" pos:column="54">)<pos:position pos:line="18" pos:column="55"/></operator> <operator pos:line="18" pos:column="56">+<pos:position pos:line="18" pos:column="57"/></operator> <name pos:line="18" pos:column="58">nr<pos:position pos:line="18" pos:column="60"/></name></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>

	<return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">data_crc<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">!=<pos:position pos:line="20" pos:column="27"/></operator> <call><name pos:line="20" pos:column="28">ntohl<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><operator pos:line="20" pos:column="34">*<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">index_crc<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

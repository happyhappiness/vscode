<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_354_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">cache_entry<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">refresh_cache_ent<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">index_state<pos:position pos:line="1" pos:column="64"/></name></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">istate<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
					     <parameter><decl><type><name><name pos:line="2" pos:column="46">struct<pos:position pos:line="2" pos:column="52"/></name> <name pos:line="2" pos:column="53">cache_entry<pos:position pos:line="2" pos:column="64"/></name></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">ce<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
					     <parameter><decl><type><name pos:line="3" pos:column="46">unsigned<pos:position pos:line="3" pos:column="54"/></name> <name pos:line="3" pos:column="55">int<pos:position pos:line="3" pos:column="58"/></name></type> <name pos:line="3" pos:column="59">options<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="68">int<pos:position pos:line="3" pos:column="71"/></name> <modifier pos:line="3" pos:column="72">*<pos:position pos:line="3" pos:column="73"/></modifier></type><name pos:line="3" pos:column="73">err<pos:position pos:line="3" pos:column="76"/></name></decl></parameter>,
					     <parameter><decl><type><name pos:line="4" pos:column="46">int<pos:position pos:line="4" pos:column="49"/></name> <modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier></type><name pos:line="4" pos:column="51">changed_ret<pos:position pos:line="4" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="63"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">stat<pos:position pos:line="6" pos:column="20"/></name></name></type> <name pos:line="6" pos:column="21">st<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">cache_entry<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">updated<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">changed<pos:position pos:line="8" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="22">size<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">refresh<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><name pos:line="9" pos:column="23">options<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">&amp;<pos:position pos:line="9" pos:column="36"/></operator> <name pos:line="9" pos:column="33">CE_MATCH_REFRESH<pos:position pos:line="9" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">ignore_valid<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><name pos:line="10" pos:column="28">options<pos:position pos:line="10" pos:column="35"/></name> <operator pos:line="10" pos:column="36">&amp;<pos:position pos:line="10" pos:column="41"/></operator> <name pos:line="10" pos:column="38">CE_MATCH_IGNORE_VALID<pos:position pos:line="10" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">ignore_skip_worktree<pos:position pos:line="11" pos:column="33"/></name> <init pos:line="11" pos:column="34">= <expr><name pos:line="11" pos:column="36">options<pos:position pos:line="11" pos:column="43"/></name> <operator pos:line="11" pos:column="44">&amp;<pos:position pos:line="11" pos:column="49"/></operator> <name pos:line="11" pos:column="46">CE_MATCH_IGNORE_SKIP_WORKTREE<pos:position pos:line="11" pos:column="75"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="76"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">ignore_missing<pos:position pos:line="12" pos:column="27"/></name> <init pos:line="12" pos:column="28">= <expr><name pos:line="12" pos:column="30">options<pos:position pos:line="12" pos:column="37"/></name> <operator pos:line="12" pos:column="38">&amp;<pos:position pos:line="12" pos:column="43"/></operator> <name pos:line="12" pos:column="40">CE_MATCH_IGNORE_MISSING<pos:position pos:line="12" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="64"/></decl_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">refresh<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">||<pos:position pos:line="14" pos:column="24"/></operator> <call><name pos:line="14" pos:column="25">ce_uptodate<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">ce<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><name pos:line="15" pos:column="24">ce<pos:position pos:line="15" pos:column="26"/></name></expr>;<pos:position pos:line="15" pos:column="27"/></return></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/*
	 * CE_VALID or CE_SKIP_WORKTREE means the user promised us
	 * that the change to the work tree does not matter and told
	 * us not to worry.
	 */</comment>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">ignore_skip_worktree<pos:position pos:line="22" pos:column="34"/></name> <operator pos:line="22" pos:column="35">&amp;&amp;<pos:position pos:line="22" pos:column="45"/></operator> <call><name pos:line="22" pos:column="38">ce_skip_worktree<pos:position pos:line="22" pos:column="54"/></name><argument_list pos:line="22" pos:column="54">(<argument><expr><name pos:line="22" pos:column="55">ce<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="59"/></condition><then pos:line="22" pos:column="59"> <block pos:line="22" pos:column="60">{
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">ce_mark_uptodate<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">ce<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
		<return pos:line="24" pos:column="17">return <expr><name pos:line="24" pos:column="24">ce<pos:position pos:line="24" pos:column="26"/></name></expr>;<pos:position pos:line="24" pos:column="27"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">ignore_valid<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">&amp;&amp;<pos:position pos:line="26" pos:column="37"/></operator> <operator pos:line="26" pos:column="30">(<pos:position pos:line="26" pos:column="31"/></operator><name><name pos:line="26" pos:column="31">ce<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">ce_flags<pos:position pos:line="26" pos:column="43"/></name></name> <operator pos:line="26" pos:column="44">&amp;<pos:position pos:line="26" pos:column="49"/></operator> <name pos:line="26" pos:column="46">CE_VALID<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">)<pos:position pos:line="26" pos:column="55"/></operator></expr>)<pos:position pos:line="26" pos:column="56"/></condition><then pos:line="26" pos:column="56"> <block pos:line="26" pos:column="57">{
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">ce_mark_uptodate<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">ce<pos:position pos:line="27" pos:column="36"/></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
		<return pos:line="28" pos:column="17">return <expr><name pos:line="28" pos:column="24">ce<pos:position pos:line="28" pos:column="26"/></name></expr>;<pos:position pos:line="28" pos:column="27"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">has_symlink_leading_path<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name><name pos:line="31" pos:column="38">ce<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">-&gt;<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="42">name<pos:position pos:line="31" pos:column="46"/></name></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="48">ce_namelen<pos:position pos:line="31" pos:column="58"/></name><argument_list pos:line="31" pos:column="58">(<argument><expr><name pos:line="31" pos:column="59">ce<pos:position pos:line="31" pos:column="61"/></name></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="64"/></condition><then pos:line="31" pos:column="64"> <block pos:line="31" pos:column="65">{
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">ignore_missing<pos:position pos:line="32" pos:column="35"/></name></expr>)<pos:position pos:line="32" pos:column="36"/></condition><then pos:line="32" pos:column="36">
			<block type="pseudo"><return pos:line="33" pos:column="25">return <expr><name pos:line="33" pos:column="32">ce<pos:position pos:line="33" pos:column="34"/></name></expr>;<pos:position pos:line="33" pos:column="35"/></return></block></then></if>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">err<pos:position pos:line="34" pos:column="24"/></name></expr>)<pos:position pos:line="34" pos:column="25"/></condition><then pos:line="34" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="35" pos:column="25">*<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="26">err<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <name pos:line="35" pos:column="32">ENOENT<pos:position pos:line="35" pos:column="38"/></name></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt></block></then></if>
		<return pos:line="36" pos:column="17">return <expr><name pos:line="36" pos:column="24">NULL<pos:position pos:line="36" pos:column="28"/></name></expr>;<pos:position pos:line="36" pos:column="29"/></return>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">lstat<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><name><name pos:line="39" pos:column="19">ce<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">-&gt;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="23">name<pos:position pos:line="39" pos:column="27"/></name></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="29">&amp;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="30">st<pos:position pos:line="39" pos:column="32"/></name></expr></argument>)<pos:position pos:line="39" pos:column="33"/></argument_list></call> <operator pos:line="39" pos:column="34">&lt;<pos:position pos:line="39" pos:column="38"/></operator> <literal type="number" pos:line="39" pos:column="36">0<pos:position pos:line="39" pos:column="37"/></literal></expr>)<pos:position pos:line="39" pos:column="38"/></condition><then pos:line="39" pos:column="38"> <block pos:line="39" pos:column="39">{
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">ignore_missing<pos:position pos:line="40" pos:column="35"/></name> <operator pos:line="40" pos:column="36">&amp;&amp;<pos:position pos:line="40" pos:column="46"/></operator> <name pos:line="40" pos:column="39">errno<pos:position pos:line="40" pos:column="44"/></name> <operator pos:line="40" pos:column="45">==<pos:position pos:line="40" pos:column="47"/></operator> <name pos:line="40" pos:column="48">ENOENT<pos:position pos:line="40" pos:column="54"/></name></expr>)<pos:position pos:line="40" pos:column="55"/></condition><then pos:line="40" pos:column="55">
			<block type="pseudo"><return pos:line="41" pos:column="25">return <expr><name pos:line="41" pos:column="32">ce<pos:position pos:line="41" pos:column="34"/></name></expr>;<pos:position pos:line="41" pos:column="35"/></return></block></then></if>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">err<pos:position pos:line="42" pos:column="24"/></name></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="43" pos:column="25">*<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="26">err<pos:position pos:line="43" pos:column="29"/></name> <operator pos:line="43" pos:column="30">=<pos:position pos:line="43" pos:column="31"/></operator> <name pos:line="43" pos:column="32">errno<pos:position pos:line="43" pos:column="37"/></name></expr>;<pos:position pos:line="43" pos:column="38"/></expr_stmt></block></then></if>
		<return pos:line="44" pos:column="17">return <expr><name pos:line="44" pos:column="24">NULL<pos:position pos:line="44" pos:column="28"/></name></expr>;<pos:position pos:line="44" pos:column="29"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="47" pos:column="9">changed<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <call><name pos:line="47" pos:column="19">ie_match_stat<pos:position pos:line="47" pos:column="32"/></name><argument_list pos:line="47" pos:column="32">(<argument><expr><name pos:line="47" pos:column="33">istate<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="41">ce<pos:position pos:line="47" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="45">&amp;<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="46">st<pos:position pos:line="47" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="50">options<pos:position pos:line="47" pos:column="57"/></name></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="59"/></expr_stmt>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">changed_ret<pos:position pos:line="48" pos:column="24"/></name></expr>)<pos:position pos:line="48" pos:column="25"/></condition><then pos:line="48" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="49" pos:column="17">*<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">changed_ret<pos:position pos:line="49" pos:column="29"/></name> <operator pos:line="49" pos:column="30">=<pos:position pos:line="49" pos:column="31"/></operator> <name pos:line="49" pos:column="32">changed<pos:position pos:line="49" pos:column="39"/></name></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt></block></then></if>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">!<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">changed<pos:position pos:line="50" pos:column="21"/></name></expr>)<pos:position pos:line="50" pos:column="22"/></condition><then pos:line="50" pos:column="22"> <block pos:line="50" pos:column="23">{
		<comment type="block" pos:line="51" pos:column="17">/*
		 * The path is unchanged.  If we were told to ignore
		 * valid bit, then we did the actual stat check and
		 * found that the entry is unmodified.  If the entry
		 * is not marked VALID, this is the place to mark it
		 * valid again, under "assume unchanged" mode.
		 */</comment>
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><name pos:line="58" pos:column="21">ignore_valid<pos:position pos:line="58" pos:column="33"/></name> <operator pos:line="58" pos:column="34">&amp;&amp;<pos:position pos:line="58" pos:column="44"/></operator> <name pos:line="58" pos:column="37">assume_unchanged<pos:position pos:line="58" pos:column="53"/></name> <operator pos:line="58" pos:column="54">&amp;&amp;<pos:position pos:line="58" pos:column="64"/></operator>
		    <operator pos:line="59" pos:column="21">!<pos:position pos:line="59" pos:column="22"/></operator><operator pos:line="59" pos:column="22">(<pos:position pos:line="59" pos:column="23"/></operator><name><name pos:line="59" pos:column="23">ce<pos:position pos:line="59" pos:column="25"/></name><operator pos:line="59" pos:column="25">-&gt;<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="27">ce_flags<pos:position pos:line="59" pos:column="35"/></name></name> <operator pos:line="59" pos:column="36">&amp;<pos:position pos:line="59" pos:column="41"/></operator> <name pos:line="59" pos:column="38">CE_VALID<pos:position pos:line="59" pos:column="46"/></name><operator pos:line="59" pos:column="46">)<pos:position pos:line="59" pos:column="47"/></operator></expr>)<pos:position pos:line="59" pos:column="48"/></condition><then pos:line="59" pos:column="48">
			<block type="pseudo"><empty_stmt pos:line="60" pos:column="25">;<pos:position pos:line="60" pos:column="26"/></empty_stmt></block></then> <comment type="block" pos:line="60" pos:column="27">/* mark this one VALID again */</comment>
		<else pos:line="61" pos:column="17">else <block pos:line="61" pos:column="22">{
			<comment type="block" pos:line="62" pos:column="25">/*
			 * We do not mark the index itself "modified"
			 * because CE_UPTODATE flag is in-core only;
			 * we are not going to write this change out.
			 */</comment>
			<if pos:line="67" pos:column="25">if <condition pos:line="67" pos:column="28">(<expr><operator pos:line="67" pos:column="29">!<pos:position pos:line="67" pos:column="30"/></operator><call><name pos:line="67" pos:column="30">S_ISGITLINK<pos:position pos:line="67" pos:column="41"/></name><argument_list pos:line="67" pos:column="41">(<argument><expr><name><name pos:line="67" pos:column="42">ce<pos:position pos:line="67" pos:column="44"/></name><operator pos:line="67" pos:column="44">-&gt;<pos:position pos:line="67" pos:column="49"/></operator><name pos:line="67" pos:column="46">ce_mode<pos:position pos:line="67" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="55"/></condition><then pos:line="67" pos:column="55">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="33">ce_mark_uptodate<pos:position pos:line="68" pos:column="49"/></name><argument_list pos:line="68" pos:column="49">(<argument><expr><name pos:line="68" pos:column="50">ce<pos:position pos:line="68" pos:column="52"/></name></expr></argument>)<pos:position pos:line="68" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="54"/></expr_stmt></block></then></if>
			<return pos:line="69" pos:column="25">return <expr><name pos:line="69" pos:column="32">ce<pos:position pos:line="69" pos:column="34"/></name></expr>;<pos:position pos:line="69" pos:column="35"/></return>
		}<pos:position pos:line="70" pos:column="18"/></block></else></if>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if>

	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><call><name pos:line="73" pos:column="13">ie_modified<pos:position pos:line="73" pos:column="24"/></name><argument_list pos:line="73" pos:column="24">(<argument><expr><name pos:line="73" pos:column="25">istate<pos:position pos:line="73" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="33">ce<pos:position pos:line="73" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="37">&amp;<pos:position pos:line="73" pos:column="42"/></operator><name pos:line="73" pos:column="38">st<pos:position pos:line="73" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="42">options<pos:position pos:line="73" pos:column="49"/></name></expr></argument>)<pos:position pos:line="73" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="51"/></condition><then pos:line="73" pos:column="51"> <block pos:line="73" pos:column="52">{
		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><name pos:line="74" pos:column="21">err<pos:position pos:line="74" pos:column="24"/></name></expr>)<pos:position pos:line="74" pos:column="25"/></condition><then pos:line="74" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="75" pos:column="25">*<pos:position pos:line="75" pos:column="26"/></operator><name pos:line="75" pos:column="26">err<pos:position pos:line="75" pos:column="29"/></name> <operator pos:line="75" pos:column="30">=<pos:position pos:line="75" pos:column="31"/></operator> <name pos:line="75" pos:column="32">EINVAL<pos:position pos:line="75" pos:column="38"/></name></expr>;<pos:position pos:line="75" pos:column="39"/></expr_stmt></block></then></if>
		<return pos:line="76" pos:column="17">return <expr><name pos:line="76" pos:column="24">NULL<pos:position pos:line="76" pos:column="28"/></name></expr>;<pos:position pos:line="76" pos:column="29"/></return>
	}<pos:position pos:line="77" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="79" pos:column="9">size<pos:position pos:line="79" pos:column="13"/></name> <operator pos:line="79" pos:column="14">=<pos:position pos:line="79" pos:column="15"/></operator> <call><name pos:line="79" pos:column="16">ce_size<pos:position pos:line="79" pos:column="23"/></name><argument_list pos:line="79" pos:column="23">(<argument><expr><name pos:line="79" pos:column="24">ce<pos:position pos:line="79" pos:column="26"/></name></expr></argument>)<pos:position pos:line="79" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="80" pos:column="9">updated<pos:position pos:line="80" pos:column="16"/></name> <operator pos:line="80" pos:column="17">=<pos:position pos:line="80" pos:column="18"/></operator> <call><name pos:line="80" pos:column="19">xmalloc<pos:position pos:line="80" pos:column="26"/></name><argument_list pos:line="80" pos:column="26">(<argument><expr><name pos:line="80" pos:column="27">size<pos:position pos:line="80" pos:column="31"/></name></expr></argument>)<pos:position pos:line="80" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="81" pos:column="9">memcpy<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument><expr><name pos:line="81" pos:column="16">updated<pos:position pos:line="81" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="25">ce<pos:position pos:line="81" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="29">size<pos:position pos:line="81" pos:column="33"/></name></expr></argument>)<pos:position pos:line="81" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">fill_stat_cache_info<pos:position pos:line="82" pos:column="29"/></name><argument_list pos:line="82" pos:column="29">(<argument><expr><name pos:line="82" pos:column="30">updated<pos:position pos:line="82" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="39">&amp;<pos:position pos:line="82" pos:column="44"/></operator><name pos:line="82" pos:column="40">st<pos:position pos:line="82" pos:column="42"/></name></expr></argument>)<pos:position pos:line="82" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="44"/></expr_stmt>
	<comment type="block" pos:line="83" pos:column="9">/*
	 * If ignore_valid is not set, we should leave CE_VALID bit
	 * alone.  Otherwise, paths marked with --no-assume-unchanged
	 * (i.e. things to be edited) will reacquire CE_VALID bit
	 * automatically, which is not really what we want.
	 */</comment>
	<if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><operator pos:line="89" pos:column="13">!<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="14">ignore_valid<pos:position pos:line="89" pos:column="26"/></name> <operator pos:line="89" pos:column="27">&amp;&amp;<pos:position pos:line="89" pos:column="37"/></operator> <name pos:line="89" pos:column="30">assume_unchanged<pos:position pos:line="89" pos:column="46"/></name> <operator pos:line="89" pos:column="47">&amp;&amp;<pos:position pos:line="89" pos:column="57"/></operator>
	    <operator pos:line="90" pos:column="13">!<pos:position pos:line="90" pos:column="14"/></operator><operator pos:line="90" pos:column="14">(<pos:position pos:line="90" pos:column="15"/></operator><name><name pos:line="90" pos:column="15">ce<pos:position pos:line="90" pos:column="17"/></name><operator pos:line="90" pos:column="17">-&gt;<pos:position pos:line="90" pos:column="22"/></operator><name pos:line="90" pos:column="19">ce_flags<pos:position pos:line="90" pos:column="27"/></name></name> <operator pos:line="90" pos:column="28">&amp;<pos:position pos:line="90" pos:column="33"/></operator> <name pos:line="90" pos:column="30">CE_VALID<pos:position pos:line="90" pos:column="38"/></name><operator pos:line="90" pos:column="38">)<pos:position pos:line="90" pos:column="39"/></operator></expr>)<pos:position pos:line="90" pos:column="40"/></condition><then pos:line="90" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="91" pos:column="17">updated<pos:position pos:line="91" pos:column="24"/></name><operator pos:line="91" pos:column="24">-&gt;<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="26">ce_flags<pos:position pos:line="91" pos:column="34"/></name></name> <operator pos:line="91" pos:column="35">&amp;=<pos:position pos:line="91" pos:column="41"/></operator> <operator pos:line="91" pos:column="38">~<pos:position pos:line="91" pos:column="39"/></operator><name pos:line="91" pos:column="39">CE_VALID<pos:position pos:line="91" pos:column="47"/></name></expr>;<pos:position pos:line="91" pos:column="48"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="93" pos:column="9">/* istate-&gt;cache_changed is updated in the caller */</comment>
	<return pos:line="94" pos:column="9">return <expr><name pos:line="94" pos:column="16">updated<pos:position pos:line="94" pos:column="23"/></name></expr>;<pos:position pos:line="94" pos:column="24"/></return>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

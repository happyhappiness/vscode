<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2814.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_repository_format_gently<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">gitdir<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">nongit_ok<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">sb<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name pos:line="3" pos:column="28">STRBUF_INIT<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">err<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">repository_format<pos:position pos:line="5" pos:column="33"/></name></name></type> <name pos:line="5" pos:column="34">candidate<pos:position pos:line="5" pos:column="43"/></name></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">has_common<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">has_common<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <call><name pos:line="8" pos:column="22">get_common_dir<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><operator pos:line="8" pos:column="37">&amp;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="38">sb<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">gitdir<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">strbuf_addstr<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><operator pos:line="9" pos:column="23">&amp;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="24">sb<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="28">"/config"<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">read_repository_format<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><operator pos:line="10" pos:column="32">&amp;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="33">candidate<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="44">sb<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">.<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="47">buf<pos:position pos:line="10" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">strbuf_release<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><operator pos:line="11" pos:column="24">&amp;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="25">sb<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>

	<comment type="block" pos:line="13" pos:column="9">/*
	 * For historical use of check_repository_format() in git-init,
	 * we treat a missing config as a silent "ok", even when nongit_ok
	 * is unset.
	 */</comment>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">candidate<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">.<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="23">version<pos:position pos:line="18" pos:column="30"/></name></name> <operator pos:line="18" pos:column="31">&lt;<pos:position pos:line="18" pos:column="35"/></operator> <literal type="number" pos:line="18" pos:column="33">0<pos:position pos:line="18" pos:column="34"/></literal></expr>)<pos:position pos:line="18" pos:column="35"/></condition><then pos:line="18" pos:column="35">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">verify_repository_format<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><operator pos:line="21" pos:column="38">&amp;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="39">candidate<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="50">&amp;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="51">err<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call> <operator pos:line="21" pos:column="56">&lt;<pos:position pos:line="21" pos:column="60"/></operator> <literal type="number" pos:line="21" pos:column="58">0<pos:position pos:line="21" pos:column="59"/></literal></expr>)<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60"> <block pos:line="21" pos:column="61">{
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">nongit_ok<pos:position pos:line="22" pos:column="30"/></name></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31"> <block pos:line="22" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">warning<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><literal type="string" pos:line="23" pos:column="33">"%s"<pos:position pos:line="23" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="39">err<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">.<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="43">buf<pos:position pos:line="23" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">strbuf_release<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><operator pos:line="24" pos:column="40">&amp;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="41">err<pos:position pos:line="24" pos:column="44"/></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="25" pos:column="25">*<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">nongit_ok<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">=<pos:position pos:line="25" pos:column="37"/></operator> <operator pos:line="25" pos:column="38">-<pos:position pos:line="25" pos:column="39"/></operator><literal type="number" pos:line="25" pos:column="39">1<pos:position pos:line="25" pos:column="40"/></literal></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
			<return pos:line="26" pos:column="25">return <expr><operator pos:line="26" pos:column="32">-<pos:position pos:line="26" pos:column="33"/></operator><literal type="number" pos:line="26" pos:column="33">1<pos:position pos:line="26" pos:column="34"/></literal></expr>;<pos:position pos:line="26" pos:column="35"/></return>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">die<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><literal type="string" pos:line="28" pos:column="21">"%s"<pos:position pos:line="28" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="27">err<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">.<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="31">buf<pos:position pos:line="28" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="31" pos:column="9">repository_format_precious_objects<pos:position pos:line="31" pos:column="43"/></name> <operator pos:line="31" pos:column="44">=<pos:position pos:line="31" pos:column="45"/></operator> <name><name pos:line="31" pos:column="46">candidate<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">.<pos:position pos:line="31" pos:column="56"/></operator><name pos:line="31" pos:column="56">precious_objects<pos:position pos:line="31" pos:column="72"/></name></name></expr>;<pos:position pos:line="31" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">string_list_clear<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><operator pos:line="32" pos:column="27">&amp;<pos:position pos:line="32" pos:column="32"/></operator><name><name pos:line="32" pos:column="28">candidate<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">.<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="38">unknown_extensions<pos:position pos:line="32" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="58">0<pos:position pos:line="32" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="61"/></expr_stmt>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">has_common<pos:position pos:line="33" pos:column="24"/></name></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25"> <block pos:line="33" pos:column="26">{
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name><name pos:line="34" pos:column="21">candidate<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">.<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="31">is_bare<pos:position pos:line="34" pos:column="38"/></name></name> <operator pos:line="34" pos:column="39">!=<pos:position pos:line="34" pos:column="41"/></operator> <operator pos:line="34" pos:column="42">-<pos:position pos:line="34" pos:column="43"/></operator><literal type="number" pos:line="34" pos:column="43">1<pos:position pos:line="34" pos:column="44"/></literal></expr>)<pos:position pos:line="34" pos:column="45"/></condition><then pos:line="34" pos:column="45"> <block pos:line="34" pos:column="46">{
			<expr_stmt><expr><name pos:line="35" pos:column="25">is_bare_repository_cfg<pos:position pos:line="35" pos:column="47"/></name> <operator pos:line="35" pos:column="48">=<pos:position pos:line="35" pos:column="49"/></operator> <name><name pos:line="35" pos:column="50">candidate<pos:position pos:line="35" pos:column="59"/></name><operator pos:line="35" pos:column="59">.<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="60">is_bare<pos:position pos:line="35" pos:column="67"/></name></name></expr>;<pos:position pos:line="35" pos:column="68"/></expr_stmt>
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><name pos:line="36" pos:column="29">is_bare_repository_cfg<pos:position pos:line="36" pos:column="51"/></name> <operator pos:line="36" pos:column="52">==<pos:position pos:line="36" pos:column="54"/></operator> <literal type="number" pos:line="36" pos:column="55">1<pos:position pos:line="36" pos:column="56"/></literal></expr>)<pos:position pos:line="36" pos:column="57"/></condition><then pos:line="36" pos:column="57">
				<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="33">inside_work_tree<pos:position pos:line="37" pos:column="49"/></name> <operator pos:line="37" pos:column="50">=<pos:position pos:line="37" pos:column="51"/></operator> <operator pos:line="37" pos:column="52">-<pos:position pos:line="37" pos:column="53"/></operator><literal type="number" pos:line="37" pos:column="53">1<pos:position pos:line="37" pos:column="54"/></literal></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt></block></then></if>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name><name pos:line="39" pos:column="21">candidate<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">.<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="31">work_tree<pos:position pos:line="39" pos:column="40"/></name></name></expr>)<pos:position pos:line="39" pos:column="41"/></condition><then pos:line="39" pos:column="41"> <block pos:line="39" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">free<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">git_work_tree_cfg<pos:position pos:line="40" pos:column="47"/></name></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="41" pos:column="25">git_work_tree_cfg<pos:position pos:line="41" pos:column="42"/></name> <operator pos:line="41" pos:column="43">=<pos:position pos:line="41" pos:column="44"/></operator> <name><name pos:line="41" pos:column="45">candidate<pos:position pos:line="41" pos:column="54"/></name><operator pos:line="41" pos:column="54">.<pos:position pos:line="41" pos:column="55"/></operator><name pos:line="41" pos:column="55">work_tree<pos:position pos:line="41" pos:column="64"/></name></name></expr>;<pos:position pos:line="41" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><name pos:line="42" pos:column="25">inside_work_tree<pos:position pos:line="42" pos:column="41"/></name> <operator pos:line="42" pos:column="42">=<pos:position pos:line="42" pos:column="43"/></operator> <operator pos:line="42" pos:column="44">-<pos:position pos:line="42" pos:column="45"/></operator><literal type="number" pos:line="42" pos:column="45">1<pos:position pos:line="42" pos:column="46"/></literal></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>
	}<pos:position pos:line="44" pos:column="10"/></block></then> <else pos:line="44" pos:column="11">else <block pos:line="44" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">free<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name><name pos:line="45" pos:column="22">candidate<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">.<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="32">work_tree<pos:position pos:line="45" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></else></if>

	<return pos:line="48" pos:column="9">return <expr><literal type="number" pos:line="48" pos:column="16">0<pos:position pos:line="48" pos:column="17"/></literal></expr>;<pos:position pos:line="48" pos:column="18"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

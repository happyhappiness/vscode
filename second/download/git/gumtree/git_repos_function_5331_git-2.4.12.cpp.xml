<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5331_git-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_objects_in_unpacked_packs<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">rev_info<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">revs<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">packed_git<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">p<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">in_pack<pos:position pos:line="4" pos:column="23"/></name></name></type> <name pos:line="4" pos:column="24">in_pack<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">uint32_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">i<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">memset<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><operator pos:line="7" pos:column="16">&amp;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="17">in_pack<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="29">sizeof<argument_list pos:line="7" pos:column="35">(<argument><expr><name pos:line="7" pos:column="36">in_pack<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">p<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">packed_git<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></init> <condition><expr><name pos:line="9" pos:column="30">p<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></condition> <incr><expr><name pos:line="9" pos:column="33">p<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">=<pos:position pos:line="9" pos:column="36"/></operator> <name><name pos:line="9" pos:column="37">p<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">next<pos:position pos:line="9" pos:column="44"/></name></name></expr></incr>)<pos:position pos:line="9" pos:column="45"/></control> <block pos:line="9" pos:column="46">{
		<decl_stmt><decl><type><specifier pos:line="10" pos:column="17">const<pos:position pos:line="10" pos:column="22"/></specifier> <name pos:line="10" pos:column="23">unsigned<pos:position pos:line="10" pos:column="31"/></name> <name pos:line="10" pos:column="32">char<pos:position pos:line="10" pos:column="36"/></name> <modifier pos:line="10" pos:column="37">*<pos:position pos:line="10" pos:column="38"/></modifier></type><name pos:line="10" pos:column="38">sha1<pos:position pos:line="10" pos:column="42"/></name></decl>;<pos:position pos:line="10" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">object<pos:position pos:line="11" pos:column="30"/></name></name> <modifier pos:line="11" pos:column="31">*<pos:position pos:line="11" pos:column="32"/></modifier></type><name pos:line="11" pos:column="32">o<pos:position pos:line="11" pos:column="33"/></name></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>

		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><name><name pos:line="13" pos:column="22">p<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">pack_local<pos:position pos:line="13" pos:column="35"/></name></name> <operator pos:line="13" pos:column="36">||<pos:position pos:line="13" pos:column="38"/></operator> <name><name pos:line="13" pos:column="39">p<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">-&gt;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="42">pack_keep<pos:position pos:line="13" pos:column="51"/></name></name></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52">
			<block type="pseudo"><continue pos:line="14" pos:column="25">continue;<pos:position pos:line="14" pos:column="34"/></continue></block></then></if>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><call><name pos:line="15" pos:column="21">open_pack_index<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><name pos:line="15" pos:column="37">p<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">die<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><literal type="string" pos:line="16" pos:column="29">"cannot open pack index"<pos:position pos:line="16" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="18" pos:column="17">ALLOC_GROW<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name><name pos:line="18" pos:column="28">in_pack<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">.<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="36">array<pos:position pos:line="18" pos:column="41"/></name></name></expr></argument>,
			   <argument><expr><name><name pos:line="19" pos:column="28">in_pack<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">.<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">nr<pos:position pos:line="19" pos:column="38"/></name></name> <operator pos:line="19" pos:column="39">+<pos:position pos:line="19" pos:column="40"/></operator> <name><name pos:line="19" pos:column="41">p<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">num_objects<pos:position pos:line="19" pos:column="55"/></name></name></expr></argument>,
			   <argument><expr><name><name pos:line="20" pos:column="28">in_pack<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">.<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">alloc<pos:position pos:line="20" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>

		<for pos:line="22" pos:column="17">for <control pos:line="22" pos:column="21">(<init><expr><name pos:line="22" pos:column="22">i<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr>;<pos:position pos:line="22" pos:column="28"/></init> <condition><expr><name pos:line="22" pos:column="29">i<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">&lt;<pos:position pos:line="22" pos:column="35"/></operator> <name><name pos:line="22" pos:column="33">p<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">num_objects<pos:position pos:line="22" pos:column="47"/></name></name></expr>;<pos:position pos:line="22" pos:column="48"/></condition> <incr><expr><name pos:line="22" pos:column="49">i<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">++<pos:position pos:line="22" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="53"/></control> <block pos:line="22" pos:column="54">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">sha1<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <call><name pos:line="23" pos:column="32">nth_packed_object_sha1<pos:position pos:line="23" pos:column="54"/></name><argument_list pos:line="23" pos:column="54">(<argument><expr><name pos:line="23" pos:column="55">p<pos:position pos:line="23" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="58">i<pos:position pos:line="23" pos:column="59"/></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">o<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">=<pos:position pos:line="24" pos:column="28"/></operator> <call><name pos:line="24" pos:column="29">lookup_unknown_object<pos:position pos:line="24" pos:column="50"/></name><argument_list pos:line="24" pos:column="50">(<argument><expr><name pos:line="24" pos:column="51">sha1<pos:position pos:line="24" pos:column="55"/></name></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt>
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><operator pos:line="25" pos:column="29">!<pos:position pos:line="25" pos:column="30"/></operator><operator pos:line="25" pos:column="30">(<pos:position pos:line="25" pos:column="31"/></operator><name><name pos:line="25" pos:column="31">o<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">flags<pos:position pos:line="25" pos:column="39"/></name></name> <operator pos:line="25" pos:column="40">&amp;<pos:position pos:line="25" pos:column="45"/></operator> <name pos:line="25" pos:column="42">OBJECT_ADDED<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">)<pos:position pos:line="25" pos:column="55"/></operator></expr>)<pos:position pos:line="25" pos:column="56"/></condition><then pos:line="25" pos:column="56">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="33">mark_in_pack_object<pos:position pos:line="26" pos:column="52"/></name><argument_list pos:line="26" pos:column="52">(<argument><expr><name pos:line="26" pos:column="53">o<pos:position pos:line="26" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="56">p<pos:position pos:line="26" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="59">&amp;<pos:position pos:line="26" pos:column="64"/></operator><name pos:line="26" pos:column="60">in_pack<pos:position pos:line="26" pos:column="67"/></name></expr></argument>)<pos:position pos:line="26" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="69"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="27" pos:column="25">o<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">-&gt;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="28">flags<pos:position pos:line="27" pos:column="33"/></name></name> <operator pos:line="27" pos:column="34">|=<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">OBJECT_ADDED<pos:position pos:line="27" pos:column="49"/></name></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></for>
	}<pos:position pos:line="29" pos:column="10"/></block></for>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">in_pack<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">.<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">nr<pos:position pos:line="31" pos:column="23"/></name></name></expr>)<pos:position pos:line="31" pos:column="24"/></condition><then pos:line="31" pos:column="24"> <block pos:line="31" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">qsort<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name><name pos:line="32" pos:column="23">in_pack<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">.<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="31">array<pos:position pos:line="32" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="38">in_pack<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">.<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="46">nr<pos:position pos:line="32" pos:column="48"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="50">sizeof<argument_list pos:line="32" pos:column="56">(<argument><expr><name><name pos:line="32" pos:column="57">in_pack<pos:position pos:line="32" pos:column="64"/></name><operator pos:line="32" pos:column="64">.<pos:position pos:line="32" pos:column="65"/></operator><name pos:line="32" pos:column="65">array<pos:position pos:line="32" pos:column="70"/></name><index pos:line="32" pos:column="70">[<expr><literal type="number" pos:line="32" pos:column="71">0<pos:position pos:line="32" pos:column="72"/></literal></expr>]<pos:position pos:line="32" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></sizeof></expr></argument>,
		      <argument><expr><name pos:line="33" pos:column="23">ofscmp<pos:position pos:line="33" pos:column="29"/></name></expr></argument>)<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
		<for pos:line="34" pos:column="17">for <control pos:line="34" pos:column="21">(<init><expr><name pos:line="34" pos:column="22">i<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <literal type="number" pos:line="34" pos:column="26">0<pos:position pos:line="34" pos:column="27"/></literal></expr>;<pos:position pos:line="34" pos:column="28"/></init> <condition><expr><name pos:line="34" pos:column="29">i<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">&lt;<pos:position pos:line="34" pos:column="35"/></operator> <name><name pos:line="34" pos:column="33">in_pack<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">.<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="41">nr<pos:position pos:line="34" pos:column="43"/></name></name></expr>;<pos:position pos:line="34" pos:column="44"/></condition> <incr><expr><name pos:line="34" pos:column="45">i<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">++<pos:position pos:line="34" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="49"/></control> <block pos:line="34" pos:column="50">{
			<decl_stmt><decl><type><name><name pos:line="35" pos:column="25">struct<pos:position pos:line="35" pos:column="31"/></name> <name pos:line="35" pos:column="32">object<pos:position pos:line="35" pos:column="38"/></name></name> <modifier pos:line="35" pos:column="39">*<pos:position pos:line="35" pos:column="40"/></modifier></type><name pos:line="35" pos:column="40">o<pos:position pos:line="35" pos:column="41"/></name> <init pos:line="35" pos:column="42">= <expr><name><name pos:line="35" pos:column="44">in_pack<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">.<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="52">array<pos:position pos:line="35" pos:column="57"/></name><index pos:line="35" pos:column="57">[<expr><name pos:line="35" pos:column="58">i<pos:position pos:line="35" pos:column="59"/></name></expr>]<pos:position pos:line="35" pos:column="60"/></index></name><operator pos:line="35" pos:column="60">.<pos:position pos:line="35" pos:column="61"/></operator><name pos:line="35" pos:column="61">object<pos:position pos:line="35" pos:column="67"/></name></expr></init></decl>;<pos:position pos:line="35" pos:column="68"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">add_object_entry<pos:position pos:line="36" pos:column="41"/></name><argument_list pos:line="36" pos:column="41">(<argument><expr><name><name pos:line="36" pos:column="42">o<pos:position pos:line="36" pos:column="43"/></name><operator pos:line="36" pos:column="43">-&gt;<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="45">sha1<pos:position pos:line="36" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="51">o<pos:position pos:line="36" pos:column="52"/></name><operator pos:line="36" pos:column="52">-&gt;<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="54">type<pos:position pos:line="36" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="60">""<pos:position pos:line="36" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="64">0<pos:position pos:line="36" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></for>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">free<pos:position pos:line="39" pos:column="13"/></name><argument_list pos:line="39" pos:column="13">(<argument><expr><name><name pos:line="39" pos:column="14">in_pack<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">.<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">array<pos:position pos:line="39" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

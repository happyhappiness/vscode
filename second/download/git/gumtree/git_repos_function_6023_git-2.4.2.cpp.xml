<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6023_git-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">find_local_name<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">remote_name<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">refs<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">force_p<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">not_for_merge_p<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">ref<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">refs<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><call><name pos:line="5" pos:column="19">strlen<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">remote_name<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>

	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">ref<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition> <block pos:line="7" pos:column="21">{
		<decl_stmt><decl><type><specifier pos:line="8" pos:column="17">const<pos:position pos:line="8" pos:column="22"/></specifier> <name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">next<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">single_force<pos:position pos:line="9" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="35">not_for_merge<pos:position pos:line="9" pos:column="48"/></name></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>

		<while pos:line="11" pos:column="17">while <condition pos:line="11" pos:column="23">(<expr><operator pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">ref<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">==<pos:position pos:line="11" pos:column="31"/></operator> <literal type="char" pos:line="11" pos:column="32">'\n'<pos:position pos:line="11" pos:column="36"/></literal></expr>)<pos:position pos:line="11" pos:column="37"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">ref<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">++<pos:position pos:line="12" pos:column="30"/></operator></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt></block></while>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><operator pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">ref<pos:position pos:line="13" pos:column="26"/></name></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27">
			<block type="pseudo"><break pos:line="14" pos:column="25">break;<pos:position pos:line="14" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="15" pos:column="17">next<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <call><name pos:line="15" pos:column="24">strchr<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">ref<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="36">'\n'<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>

		<expr_stmt><expr><name pos:line="17" pos:column="17">single_force<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">=<pos:position pos:line="17" pos:column="31"/></operator> <name pos:line="17" pos:column="32">not_for_merge<pos:position pos:line="17" pos:column="45"/></name> <operator pos:line="17" pos:column="46">=<pos:position pos:line="17" pos:column="47"/></operator> <literal type="number" pos:line="17" pos:column="48">0<pos:position pos:line="17" pos:column="49"/></literal></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">*<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">ref<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">==<pos:position pos:line="18" pos:column="28"/></operator> <literal type="char" pos:line="18" pos:column="29">'+'<pos:position pos:line="18" pos:column="32"/></literal></expr>)<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33"> <block pos:line="18" pos:column="34">{
			<expr_stmt><expr><name pos:line="19" pos:column="25">single_force<pos:position pos:line="19" pos:column="37"/></name> <operator pos:line="19" pos:column="38">=<pos:position pos:line="19" pos:column="39"/></operator> <literal type="number" pos:line="19" pos:column="40">1<pos:position pos:line="19" pos:column="41"/></literal></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="20" pos:column="25">ref<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">++<pos:position pos:line="20" pos:column="30"/></operator></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">*<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">ref<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">==<pos:position pos:line="22" pos:column="28"/></operator> <literal type="char" pos:line="22" pos:column="29">'.'<pos:position pos:line="22" pos:column="32"/></literal></expr>)<pos:position pos:line="22" pos:column="33"/></condition><then pos:line="22" pos:column="33"> <block pos:line="22" pos:column="34">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">not_for_merge<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">=<pos:position pos:line="23" pos:column="40"/></operator> <literal type="number" pos:line="23" pos:column="41">1<pos:position pos:line="23" pos:column="42"/></literal></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">ref<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">++<pos:position pos:line="24" pos:column="30"/></operator></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><operator pos:line="25" pos:column="29">*<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">ref<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">==<pos:position pos:line="25" pos:column="36"/></operator> <literal type="char" pos:line="25" pos:column="37">'+'<pos:position pos:line="25" pos:column="40"/></literal></expr>)<pos:position pos:line="25" pos:column="41"/></condition><then pos:line="25" pos:column="41"> <block pos:line="25" pos:column="42">{
				<expr_stmt><expr><name pos:line="26" pos:column="33">single_force<pos:position pos:line="26" pos:column="45"/></name> <operator pos:line="26" pos:column="46">=<pos:position pos:line="26" pos:column="47"/></operator> <literal type="number" pos:line="26" pos:column="48">1<pos:position pos:line="26" pos:column="49"/></literal></expr>;<pos:position pos:line="26" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name pos:line="27" pos:column="33">ref<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">++<pos:position pos:line="27" pos:column="38"/></operator></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
			}<pos:position pos:line="28" pos:column="26"/></block></then></if>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><call><name pos:line="30" pos:column="22">strncmp<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">remote_name<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="43">ref<pos:position pos:line="30" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="48">len<pos:position pos:line="30" pos:column="51"/></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call> <operator pos:line="30" pos:column="53">&amp;&amp;<pos:position pos:line="30" pos:column="63"/></operator> <name><name pos:line="30" pos:column="56">ref<pos:position pos:line="30" pos:column="59"/></name><index pos:line="30" pos:column="59">[<expr><name pos:line="30" pos:column="60">len<pos:position pos:line="30" pos:column="63"/></name></expr>]<pos:position pos:line="30" pos:column="64"/></index></name> <operator pos:line="30" pos:column="65">==<pos:position pos:line="30" pos:column="67"/></operator> <literal type="char" pos:line="30" pos:column="68">':'<pos:position pos:line="30" pos:column="71"/></literal></expr>)<pos:position pos:line="30" pos:column="72"/></condition><then pos:line="30" pos:column="72"> <block pos:line="30" pos:column="73">{
			<decl_stmt><decl><type><specifier pos:line="31" pos:column="25">const<pos:position pos:line="31" pos:column="30"/></specifier> <name pos:line="31" pos:column="31">char<pos:position pos:line="31" pos:column="35"/></name> <modifier pos:line="31" pos:column="36">*<pos:position pos:line="31" pos:column="37"/></modifier></type><name pos:line="31" pos:column="37">local_part<pos:position pos:line="31" pos:column="47"/></name> <init pos:line="31" pos:column="48">= <expr><name pos:line="31" pos:column="50">ref<pos:position pos:line="31" pos:column="53"/></name> <operator pos:line="31" pos:column="54">+<pos:position pos:line="31" pos:column="55"/></operator> <name pos:line="31" pos:column="56">len<pos:position pos:line="31" pos:column="59"/></name> <operator pos:line="31" pos:column="60">+<pos:position pos:line="31" pos:column="61"/></operator> <literal type="number" pos:line="31" pos:column="62">1<pos:position pos:line="31" pos:column="63"/></literal></expr></init></decl>;<pos:position pos:line="31" pos:column="64"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="32" pos:column="25">int<pos:position pos:line="32" pos:column="28"/></name></type> <name pos:line="32" pos:column="29">retlen<pos:position pos:line="32" pos:column="35"/></name></decl>;<pos:position pos:line="32" pos:column="36"/></decl_stmt>

			<if pos:line="34" pos:column="25">if <condition pos:line="34" pos:column="28">(<expr><operator pos:line="34" pos:column="29">!<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">next<pos:position pos:line="34" pos:column="34"/></name></expr>)<pos:position pos:line="34" pos:column="35"/></condition><then pos:line="34" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="33">retlen<pos:position pos:line="35" pos:column="39"/></name> <operator pos:line="35" pos:column="40">=<pos:position pos:line="35" pos:column="41"/></operator> <call><name pos:line="35" pos:column="42">strlen<pos:position pos:line="35" pos:column="48"/></name><argument_list pos:line="35" pos:column="48">(<argument><expr><name pos:line="35" pos:column="49">local_part<pos:position pos:line="35" pos:column="59"/></name></expr></argument>)<pos:position pos:line="35" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="61"/></expr_stmt></block></then>
			<else pos:line="36" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="33">retlen<pos:position pos:line="37" pos:column="39"/></name> <operator pos:line="37" pos:column="40">=<pos:position pos:line="37" pos:column="41"/></operator> <name pos:line="37" pos:column="42">next<pos:position pos:line="37" pos:column="46"/></name> <operator pos:line="37" pos:column="47">-<pos:position pos:line="37" pos:column="48"/></operator> <name pos:line="37" pos:column="49">local_part<pos:position pos:line="37" pos:column="59"/></name></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt></block></else></if>
			<expr_stmt><expr><operator pos:line="38" pos:column="25">*<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">force_p<pos:position pos:line="38" pos:column="33"/></name> <operator pos:line="38" pos:column="34">=<pos:position pos:line="38" pos:column="35"/></operator> <name pos:line="38" pos:column="36">single_force<pos:position pos:line="38" pos:column="48"/></name></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="39" pos:column="25">*<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="26">not_for_merge_p<pos:position pos:line="39" pos:column="41"/></name> <operator pos:line="39" pos:column="42">=<pos:position pos:line="39" pos:column="43"/></operator> <name pos:line="39" pos:column="44">not_for_merge<pos:position pos:line="39" pos:column="57"/></name></expr>;<pos:position pos:line="39" pos:column="58"/></expr_stmt>
			<return pos:line="40" pos:column="25">return <expr><call><name pos:line="40" pos:column="32">xmemdupz<pos:position pos:line="40" pos:column="40"/></name><argument_list pos:line="40" pos:column="40">(<argument><expr><name pos:line="40" pos:column="41">local_part<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="53">retlen<pos:position pos:line="40" pos:column="59"/></name></expr></argument>)<pos:position pos:line="40" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="61"/></return>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="42" pos:column="17">ref<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <name pos:line="42" pos:column="23">next<pos:position pos:line="42" pos:column="27"/></name></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></while>
	<return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">NULL<pos:position pos:line="44" pos:column="20"/></name></expr>;<pos:position pos:line="44" pos:column="21"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

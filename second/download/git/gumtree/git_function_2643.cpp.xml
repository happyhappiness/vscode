<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2643.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">make_room_for_path<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">merge_options<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">o<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">path<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">status<pos:position pos:line="3" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="21">i<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">msg<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><call><name pos:line="4" pos:column="27">_<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><literal type="string" pos:line="4" pos:column="29">"failed to create path '%s'%s"<pos:position pos:line="4" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="61"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* Unlink any D/F conflict files that are in the way */</comment>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name><name pos:line="7" pos:column="25">o<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">df_conflict_file_set<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">.<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="49">nr<pos:position pos:line="7" pos:column="51"/></name></name></expr>;<pos:position pos:line="7" pos:column="52"/></condition> <incr><expr><name pos:line="7" pos:column="53">i<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">++<pos:position pos:line="7" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="57"/></control> <block pos:line="7" pos:column="58">{
		<decl_stmt><decl><type><specifier pos:line="8" pos:column="17">const<pos:position pos:line="8" pos:column="22"/></specifier> <name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">df_path<pos:position pos:line="8" pos:column="36"/></name> <init pos:line="8" pos:column="37">= <expr><name><name pos:line="8" pos:column="39">o<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">df_conflict_file_set<pos:position pos:line="8" pos:column="62"/></name><operator pos:line="8" pos:column="62">.<pos:position pos:line="8" pos:column="63"/></operator><name pos:line="8" pos:column="63">items<pos:position pos:line="8" pos:column="68"/></name><index pos:line="8" pos:column="68">[<expr><name pos:line="8" pos:column="69">i<pos:position pos:line="8" pos:column="70"/></name></expr>]<pos:position pos:line="8" pos:column="71"/></index></name><operator pos:line="8" pos:column="71">.<pos:position pos:line="8" pos:column="72"/></operator><name pos:line="8" pos:column="72">string<pos:position pos:line="8" pos:column="78"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="79"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">size_t<pos:position pos:line="9" pos:column="23"/></name></type> <name pos:line="9" pos:column="24">pathlen<pos:position pos:line="9" pos:column="31"/></name> <init pos:line="9" pos:column="32">= <expr><call><name pos:line="9" pos:column="34">strlen<pos:position pos:line="9" pos:column="40"/></name><argument_list pos:line="9" pos:column="40">(<argument><expr><name pos:line="9" pos:column="41">path<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">size_t<pos:position pos:line="10" pos:column="23"/></name></type> <name pos:line="10" pos:column="24">df_pathlen<pos:position pos:line="10" pos:column="34"/></name> <init pos:line="10" pos:column="35">= <expr><call><name pos:line="10" pos:column="37">strlen<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">df_path<pos:position pos:line="10" pos:column="51"/></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="53"/></decl_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">df_pathlen<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">&lt;<pos:position pos:line="11" pos:column="36"/></operator> <name pos:line="11" pos:column="34">pathlen<pos:position pos:line="11" pos:column="41"/></name> <operator pos:line="11" pos:column="42">&amp;&amp;<pos:position pos:line="11" pos:column="52"/></operator>
		    <name><name pos:line="12" pos:column="21">path<pos:position pos:line="12" pos:column="25"/></name><index pos:line="12" pos:column="25">[<expr><name pos:line="12" pos:column="26">df_pathlen<pos:position pos:line="12" pos:column="36"/></name></expr>]<pos:position pos:line="12" pos:column="37"/></index></name> <operator pos:line="12" pos:column="38">==<pos:position pos:line="12" pos:column="40"/></operator> <literal type="char" pos:line="12" pos:column="41">'/'<pos:position pos:line="12" pos:column="44"/></literal> <operator pos:line="12" pos:column="45">&amp;&amp;<pos:position pos:line="12" pos:column="55"/></operator>
		    <call><name pos:line="13" pos:column="21">strncmp<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">path<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">df_path<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">df_pathlen<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call> <operator pos:line="13" pos:column="56">==<pos:position pos:line="13" pos:column="58"/></operator> <literal type="number" pos:line="13" pos:column="59">0<pos:position pos:line="13" pos:column="60"/></literal></expr>)<pos:position pos:line="13" pos:column="61"/></condition><then pos:line="13" pos:column="61"> <block pos:line="13" pos:column="62">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">output<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">o<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="35">3<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>,
			       <argument><expr><call><name pos:line="15" pos:column="32">_<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><literal type="string" pos:line="15" pos:column="34">"Removing %s to make room for subdirectory\n"<pos:position pos:line="15" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="80"/></argument_list></call></expr></argument>,
			       <argument><expr><name pos:line="16" pos:column="32">df_path<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">unlink<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">df_path<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">unsorted_string_list_delete_item<pos:position pos:line="18" pos:column="57"/></name><argument_list pos:line="18" pos:column="57">(<argument><expr><operator pos:line="18" pos:column="58">&amp;<pos:position pos:line="18" pos:column="63"/></operator><name><name pos:line="18" pos:column="59">o<pos:position pos:line="18" pos:column="60"/></name><operator pos:line="18" pos:column="60">-&gt;<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="62">df_conflict_file_set<pos:position pos:line="18" pos:column="82"/></name></name></expr></argument>,
							 <argument><expr><name pos:line="19" pos:column="58">i<pos:position pos:line="19" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="61">0<pos:position pos:line="19" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>
			<break pos:line="20" pos:column="25">break;<pos:position pos:line="20" pos:column="31"/></break>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block></for>

	<comment type="block" pos:line="24" pos:column="9">/* Make sure leading directories are created */</comment>
	<expr_stmt><expr><name pos:line="25" pos:column="9">status<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name pos:line="25" pos:column="18">safe_create_leading_directories_const<pos:position pos:line="25" pos:column="55"/></name><argument_list pos:line="25" pos:column="55">(<argument><expr><name pos:line="25" pos:column="56">path<pos:position pos:line="25" pos:column="60"/></name></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">status<pos:position pos:line="26" pos:column="19"/></name></expr>)<pos:position pos:line="26" pos:column="20"/></condition><then pos:line="26" pos:column="20"> <block pos:line="26" pos:column="21">{
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">status<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">==<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">SCLD_EXISTS<pos:position pos:line="27" pos:column="42"/></name></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43"> <block pos:line="27" pos:column="44">{
			<comment type="block" pos:line="28" pos:column="25">/* something else exists */</comment>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">error<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">msg<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="36">path<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="42">_<pos:position pos:line="29" pos:column="43"/></name><argument_list pos:line="29" pos:column="43">(<argument><expr><literal type="string" pos:line="29" pos:column="44">": perhaps a D/F conflict?"<pos:position pos:line="29" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="74"/></expr_stmt>
			<return pos:line="30" pos:column="25">return <expr><operator pos:line="30" pos:column="32">-<pos:position pos:line="30" pos:column="33"/></operator><literal type="number" pos:line="30" pos:column="33">1<pos:position pos:line="30" pos:column="34"/></literal></expr>;<pos:position pos:line="30" pos:column="35"/></return>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">die<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">msg<pos:position pos:line="32" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="26">path<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="32">""<pos:position pos:line="32" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="35" pos:column="9">/*
	 * Do not unlink a file in the work tree if we are not
	 * tracking it.
	 */</comment>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">would_lose_untracked<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><name pos:line="39" pos:column="34">path<pos:position pos:line="39" pos:column="38"/></name></expr></argument>)<pos:position pos:line="39" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="40"/></condition><then pos:line="39" pos:column="40">
		<block type="pseudo"><return pos:line="40" pos:column="17">return <expr><call><name pos:line="40" pos:column="24">error<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><call><name pos:line="40" pos:column="30">_<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><literal type="string" pos:line="40" pos:column="32">"refusing to lose untracked file at '%s'"<pos:position pos:line="40" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr></argument>,
			     <argument><expr><name pos:line="41" pos:column="30">path<pos:position pos:line="41" pos:column="34"/></name></expr></argument>)<pos:position pos:line="41" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="36"/></return></block></then></if>

	<comment type="block" pos:line="43" pos:column="9">/* Successful unlink is good.. */</comment>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><call><name pos:line="44" pos:column="14">unlink<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">path<pos:position pos:line="44" pos:column="25"/></name></expr></argument>)<pos:position pos:line="44" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="27"/></condition><then pos:line="44" pos:column="27">
		<block type="pseudo"><return pos:line="45" pos:column="17">return <expr><literal type="number" pos:line="45" pos:column="24">0<pos:position pos:line="45" pos:column="25"/></literal></expr>;<pos:position pos:line="45" pos:column="26"/></return></block></then></if>
	<comment type="block" pos:line="46" pos:column="9">/* .. and so is no existing file */</comment>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">errno<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">==<pos:position pos:line="47" pos:column="21"/></operator> <name pos:line="47" pos:column="22">ENOENT<pos:position pos:line="47" pos:column="28"/></name></expr>)<pos:position pos:line="47" pos:column="29"/></condition><then pos:line="47" pos:column="29">
		<block type="pseudo"><return pos:line="48" pos:column="17">return <expr><literal type="number" pos:line="48" pos:column="24">0<pos:position pos:line="48" pos:column="25"/></literal></expr>;<pos:position pos:line="48" pos:column="26"/></return></block></then></if>
	<comment type="block" pos:line="49" pos:column="9">/* .. but not some other error (who really cares what?) */</comment>
	<return pos:line="50" pos:column="9">return <expr><call><name pos:line="50" pos:column="16">error<pos:position pos:line="50" pos:column="21"/></name><argument_list pos:line="50" pos:column="21">(<argument><expr><name pos:line="50" pos:column="22">msg<pos:position pos:line="50" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="27">path<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="33">_<pos:position pos:line="50" pos:column="34"/></name><argument_list pos:line="50" pos:column="34">(<argument><expr><literal type="string" pos:line="50" pos:column="35">": perhaps a D/F conflict?"<pos:position pos:line="50" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="65"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

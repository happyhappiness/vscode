<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_380_git-2.3.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pickaxe_match<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">diff_filepair<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">p<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">diff_options<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">o<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="2" pos:column="26">regex_t<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">regexp<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">kwset_t<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">kws<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">pickaxe_fn<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">fn<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">userdiff_driver<pos:position pos:line="4" pos:column="31"/></name></name> <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier></type><name pos:line="4" pos:column="33">textconv_one<pos:position pos:line="4" pos:column="45"/></name> <init pos:line="4" pos:column="46">= <expr><name pos:line="4" pos:column="48">NULL<pos:position pos:line="4" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">userdiff_driver<pos:position pos:line="5" pos:column="31"/></name></name> <modifier pos:line="5" pos:column="32">*<pos:position pos:line="5" pos:column="33"/></modifier></type><name pos:line="5" pos:column="33">textconv_two<pos:position pos:line="5" pos:column="45"/></name> <init pos:line="5" pos:column="46">= <expr><name pos:line="5" pos:column="48">NULL<pos:position pos:line="5" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">mmfile_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">mf1<pos:position pos:line="6" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="23">mf2<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">ret<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name><name pos:line="9" pos:column="14">o<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">pickaxe<pos:position pos:line="9" pos:column="24"/></name><index pos:line="9" pos:column="24">[<expr><literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal></expr>]<pos:position pos:line="9" pos:column="27"/></index></name></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="12" pos:column="9">/* ignore unmerged */</comment>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">DIFF_FILE_VALID<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name><name pos:line="13" pos:column="30">p<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">one<pos:position pos:line="13" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call> <operator pos:line="13" pos:column="38">&amp;&amp;<pos:position pos:line="13" pos:column="48"/></operator> <operator pos:line="13" pos:column="41">!<pos:position pos:line="13" pos:column="42"/></operator><call><name pos:line="13" pos:column="42">DIFF_FILE_VALID<pos:position pos:line="13" pos:column="57"/></name><argument_list pos:line="13" pos:column="57">(<argument><expr><name><name pos:line="13" pos:column="58">p<pos:position pos:line="13" pos:column="59"/></name><operator pos:line="13" pos:column="59">-&gt;<pos:position pos:line="13" pos:column="64"/></operator><name pos:line="13" pos:column="61">two<pos:position pos:line="13" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="66"/></condition><then pos:line="13" pos:column="66">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">DIFF_OPT_TST<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">o<pos:position pos:line="16" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="29">ALLOW_TEXTCONV<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45"> <block pos:line="16" pos:column="46">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">textconv_one<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">=<pos:position pos:line="17" pos:column="31"/></operator> <call><name pos:line="17" pos:column="32">get_textconv<pos:position pos:line="17" pos:column="44"/></name><argument_list pos:line="17" pos:column="44">(<argument><expr><name><name pos:line="17" pos:column="45">p<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">one<pos:position pos:line="17" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">textconv_two<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">=<pos:position pos:line="18" pos:column="31"/></operator> <call><name pos:line="18" pos:column="32">get_textconv<pos:position pos:line="18" pos:column="44"/></name><argument_list pos:line="18" pos:column="44">(<argument><expr><name><name pos:line="18" pos:column="45">p<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">-&gt;<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="48">two<pos:position pos:line="18" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="21" pos:column="9">/*
	 * If we have an unmodified pair, we know that the count will be the
	 * same and don't even have to load the blobs. Unless textconv is in
	 * play, _and_ we are using two different textconv filters (e.g.,
	 * because a pair is an exact rename with different textconv attributes
	 * for each side, which might generate different content).
	 */</comment>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">textconv_one<pos:position pos:line="28" pos:column="25"/></name> <operator pos:line="28" pos:column="26">==<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">textconv_two<pos:position pos:line="28" pos:column="41"/></name> <operator pos:line="28" pos:column="42">&amp;&amp;<pos:position pos:line="28" pos:column="52"/></operator> <call><name pos:line="28" pos:column="45">diff_unmodified_pair<pos:position pos:line="28" pos:column="65"/></name><argument_list pos:line="28" pos:column="65">(<argument><expr><name pos:line="28" pos:column="66">p<pos:position pos:line="28" pos:column="67"/></name></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="69"/></condition><then pos:line="28" pos:column="69">
		<block type="pseudo"><return pos:line="29" pos:column="17">return <expr><literal type="number" pos:line="29" pos:column="24">0<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name><name pos:line="31" pos:column="9">mf1<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">.<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">size<pos:position pos:line="31" pos:column="17"/></name></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <call><name pos:line="31" pos:column="20">fill_textconv<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><name pos:line="31" pos:column="34">textconv_one<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="48">p<pos:position pos:line="31" pos:column="49"/></name><operator pos:line="31" pos:column="49">-&gt;<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="51">one<pos:position pos:line="31" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="56">&amp;<pos:position pos:line="31" pos:column="61"/></operator><name><name pos:line="31" pos:column="57">mf1<pos:position pos:line="31" pos:column="60"/></name><operator pos:line="31" pos:column="60">.<pos:position pos:line="31" pos:column="61"/></operator><name pos:line="31" pos:column="61">ptr<pos:position pos:line="31" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="32" pos:column="9">mf2<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">.<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">size<pos:position pos:line="32" pos:column="17"/></name></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <call><name pos:line="32" pos:column="20">fill_textconv<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">textconv_two<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="48">p<pos:position pos:line="32" pos:column="49"/></name><operator pos:line="32" pos:column="49">-&gt;<pos:position pos:line="32" pos:column="54"/></operator><name pos:line="32" pos:column="51">two<pos:position pos:line="32" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="56">&amp;<pos:position pos:line="32" pos:column="61"/></operator><name><name pos:line="32" pos:column="57">mf2<pos:position pos:line="32" pos:column="60"/></name><operator pos:line="32" pos:column="60">.<pos:position pos:line="32" pos:column="61"/></operator><name pos:line="32" pos:column="61">ptr<pos:position pos:line="32" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>

	<expr_stmt><expr><name pos:line="34" pos:column="9">ret<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <call><name pos:line="34" pos:column="15">fn<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><ternary><condition><expr><call><name pos:line="34" pos:column="18">DIFF_FILE_VALID<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><name><name pos:line="34" pos:column="34">p<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">-&gt;<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="37">one<pos:position pos:line="34" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr> ?<pos:position pos:line="34" pos:column="43"/></condition><then pos:line="34" pos:column="43"> <expr><operator pos:line="34" pos:column="44">&amp;<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="45">mf1<pos:position pos:line="34" pos:column="48"/></name></expr> <pos:position pos:line="34" pos:column="49"/></then><else pos:line="34" pos:column="49">: <expr><name pos:line="34" pos:column="51">NULL<pos:position pos:line="34" pos:column="55"/></name></expr></else></ternary></expr></argument>,
		 <argument><expr><ternary><condition><expr><call><name pos:line="35" pos:column="18">DIFF_FILE_VALID<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name><name pos:line="35" pos:column="34">p<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">-&gt;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="37">two<pos:position pos:line="35" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr> ?<pos:position pos:line="35" pos:column="43"/></condition><then pos:line="35" pos:column="43"> <expr><operator pos:line="35" pos:column="44">&amp;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="45">mf2<pos:position pos:line="35" pos:column="48"/></name></expr> <pos:position pos:line="35" pos:column="49"/></then><else pos:line="35" pos:column="49">: <expr><name pos:line="35" pos:column="51">NULL<pos:position pos:line="35" pos:column="55"/></name></expr></else></ternary></expr></argument>,
		 <argument><expr><name pos:line="36" pos:column="18">o<pos:position pos:line="36" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="21">regexp<pos:position pos:line="36" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="29">kws<pos:position pos:line="36" pos:column="32"/></name></expr></argument>)<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">textconv_one<pos:position pos:line="38" pos:column="25"/></name></expr>)<pos:position pos:line="38" pos:column="26"/></condition><then pos:line="38" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="17">free<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name><name pos:line="39" pos:column="22">mf1<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">.<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="26">ptr<pos:position pos:line="39" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt></block></then></if>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">textconv_two<pos:position pos:line="40" pos:column="25"/></name></expr>)<pos:position pos:line="40" pos:column="26"/></condition><then pos:line="40" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">free<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name><name pos:line="41" pos:column="22">mf2<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">.<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="26">ptr<pos:position pos:line="41" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">diff_free_filespec_data<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name><name pos:line="42" pos:column="33">p<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">-&gt;<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="36">one<pos:position pos:line="42" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">diff_free_filespec_data<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name><name pos:line="43" pos:column="33">p<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">-&gt;<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="36">two<pos:position pos:line="43" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt>

	<return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">ret<pos:position pos:line="45" pos:column="19"/></name></expr>;<pos:position pos:line="45" pos:column="20"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

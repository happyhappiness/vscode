<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2315.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">opt_parse_merge_filter<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">option<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">opt<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="61">const<pos:position pos:line="1" pos:column="66"/></specifier> <name pos:line="1" pos:column="67">char<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">arg<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="78">int<pos:position pos:line="1" pos:column="81"/></name></type> <name pos:line="1" pos:column="82">unset<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><name pos:line="3" pos:column="9">merge_filter<pos:position pos:line="3" pos:column="21"/></name> <operator pos:line="3" pos:column="22">=<pos:position pos:line="3" pos:column="23"/></operator> <operator pos:line="3" pos:column="24">(<pos:position pos:line="3" pos:column="25"/></operator><ternary><condition><expr><operator pos:line="3" pos:column="25">(<pos:position pos:line="3" pos:column="26"/></operator><name><name pos:line="3" pos:column="26">opt<pos:position pos:line="3" pos:column="29"/></name><operator pos:line="3" pos:column="29">-&gt;<pos:position pos:line="3" pos:column="34"/></operator><name pos:line="3" pos:column="31">long_name<pos:position pos:line="3" pos:column="40"/></name><index pos:line="3" pos:column="40">[<expr><literal type="number" pos:line="3" pos:column="41">0<pos:position pos:line="3" pos:column="42"/></literal></expr>]<pos:position pos:line="3" pos:column="43"/></index></name> <operator pos:line="3" pos:column="44">==<pos:position pos:line="3" pos:column="46"/></operator> <literal type="char" pos:line="3" pos:column="47">'n'<pos:position pos:line="3" pos:column="50"/></literal><operator pos:line="3" pos:column="50">)<pos:position pos:line="3" pos:column="51"/></operator></expr>
			?<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26"> <expr><name pos:line="4" pos:column="27">SHOW_NOT_MERGED<pos:position pos:line="4" pos:column="42"/></name></expr>
			<pos:position pos:line="5" pos:column="4"/></then><else pos:line="5" pos:column="25">: <expr><name pos:line="5" pos:column="27">SHOW_MERGED<pos:position pos:line="5" pos:column="38"/></name></expr></else></ternary><operator pos:line="5" pos:column="38">)<pos:position pos:line="5" pos:column="39"/></operator></expr>;<pos:position pos:line="5" pos:column="40"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">unset<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">merge_filter<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">=<pos:position pos:line="7" pos:column="31"/></operator> <name pos:line="7" pos:column="32">SHOW_NOT_MERGED<pos:position pos:line="7" pos:column="47"/></name></expr>;<pos:position pos:line="7" pos:column="48"/></expr_stmt></block></then></if> <comment type="block" pos:line="7" pos:column="49">/* b/c for --no-merged */</comment>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">arg<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">arg<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <literal type="string" pos:line="9" pos:column="23">"HEAD"<pos:position pos:line="9" pos:column="29"/></literal></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">get_sha1<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">arg<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="27">merge_filter_ref<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="45"/></condition><then pos:line="10" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">die<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><call><name pos:line="11" pos:column="21">_<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><literal type="string" pos:line="11" pos:column="23">"malformed object name %s"<pos:position pos:line="11" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">arg<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt></block></then></if>
	<return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

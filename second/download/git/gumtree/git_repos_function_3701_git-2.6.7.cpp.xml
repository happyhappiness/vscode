<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3701_git-2.6.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_missing_tags<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">ref<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">src<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">ref<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier><modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">dst<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="65">struct<pos:position pos:line="1" pos:column="71"/></name> <name pos:line="1" pos:column="72">ref<pos:position pos:line="1" pos:column="75"/></name></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier><modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier><modifier pos:line="1" pos:column="78">*<pos:position pos:line="1" pos:column="79"/></modifier></type><name pos:line="1" pos:column="79">dst_tail<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list<pos:position pos:line="3" pos:column="27"/></name></name></type> <name pos:line="3" pos:column="28">dst_tag<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><name pos:line="3" pos:column="38">STRING_LIST_INIT_NODUP<pos:position pos:line="3" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">string_list<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">src_tag<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><name pos:line="4" pos:column="38">STRING_LIST_INIT_NODUP<pos:position pos:line="4" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">string_list_item<pos:position pos:line="5" pos:column="32"/></name></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">item<pos:position pos:line="5" pos:column="38"/></name></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">ref<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">ref<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">tips<pos:position pos:line="7" pos:column="20"/></name></name></type> <name pos:line="7" pos:column="21">sent_tips<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>

	<comment type="block" pos:line="9" pos:column="9">/*
	 * Collect everything we know they would have at the end of
	 * this push, and collect all tags they have.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">memset<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><operator pos:line="13" pos:column="16">&amp;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="17">sent_tips<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="28">0<pos:position pos:line="13" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="31">sizeof<argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">sent_tips<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">ref<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <operator pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">dst<pos:position pos:line="14" pos:column="24"/></name></expr>;<pos:position pos:line="14" pos:column="25"/></init> <condition><expr><name pos:line="14" pos:column="26">ref<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></condition> <incr><expr><name pos:line="14" pos:column="31">ref<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">=<pos:position pos:line="14" pos:column="36"/></operator> <name><name pos:line="14" pos:column="37">ref<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">next<pos:position pos:line="14" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="47"/></control> <block pos:line="14" pos:column="48">{
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">ref<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">peer_ref<pos:position pos:line="15" pos:column="34"/></name></name> <operator pos:line="15" pos:column="35">&amp;&amp;<pos:position pos:line="15" pos:column="45"/></operator>
		    <operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><call><name pos:line="16" pos:column="22">is_null_sha1<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name><name pos:line="16" pos:column="35">ref<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">peer_ref<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">new_sha1<pos:position pos:line="16" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="60"/></condition><then pos:line="16" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">add_to_tips<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><operator pos:line="17" pos:column="37">&amp;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="38">sent_tips<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="49">ref<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">-&gt;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="54">peer_ref<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">new_sha1<pos:position pos:line="17" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="74"/></expr_stmt></block></then>
		<else pos:line="18" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">add_to_tips<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><operator pos:line="19" pos:column="37">&amp;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="38">sent_tips<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="49">ref<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">-&gt;<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="54">old_sha1<pos:position pos:line="19" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt></block></else></if>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">starts_with<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name><name pos:line="20" pos:column="33">ref<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">-&gt;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="38">name<pos:position pos:line="20" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="44">"refs/tags/"<pos:position pos:line="20" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="58"/></condition><then pos:line="20" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">string_list_append<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><operator pos:line="21" pos:column="44">&amp;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="45">dst_tag<pos:position pos:line="21" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="54">ref<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">-&gt;<pos:position pos:line="21" pos:column="62"/></operator><name pos:line="21" pos:column="59">name<pos:position pos:line="21" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">clear_commit_marks_many<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name><name pos:line="23" pos:column="33">sent_tips<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">.<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="43">nr<pos:position pos:line="23" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="47">sent_tips<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">.<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="57">tip<pos:position pos:line="23" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="62">TMP_MARK<pos:position pos:line="23" pos:column="70"/></name></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="72"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">string_list_sort<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><operator pos:line="25" pos:column="26">&amp;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="27">dst_tag<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>

	<comment type="block" pos:line="27" pos:column="9">/* Collect tags they do not have. */</comment>
	<for pos:line="28" pos:column="9">for <control pos:line="28" pos:column="13">(<init><expr><name pos:line="28" pos:column="14">ref<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">src<pos:position pos:line="28" pos:column="23"/></name></expr>;<pos:position pos:line="28" pos:column="24"/></init> <condition><expr><name pos:line="28" pos:column="25">ref<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></condition> <incr><expr><name pos:line="28" pos:column="30">ref<pos:position pos:line="28" pos:column="33"/></name> <operator pos:line="28" pos:column="34">=<pos:position pos:line="28" pos:column="35"/></operator> <name><name pos:line="28" pos:column="36">ref<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">next<pos:position pos:line="28" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="28" pos:column="46"/></control> <block pos:line="28" pos:column="47">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><call><name pos:line="29" pos:column="22">starts_with<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name><name pos:line="29" pos:column="34">ref<pos:position pos:line="29" pos:column="37"/></name><operator pos:line="29" pos:column="37">-&gt;<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="39">name<pos:position pos:line="29" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="45">"refs/tags/"<pos:position pos:line="29" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="59"/></condition><then pos:line="29" pos:column="59">
			<block type="pseudo"><continue pos:line="30" pos:column="25">continue;<pos:position pos:line="30" pos:column="34"/></continue></block></then></if> <comment type="block" pos:line="30" pos:column="35">/* not a tag */</comment>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">string_list_has_string<pos:position pos:line="31" pos:column="43"/></name><argument_list pos:line="31" pos:column="43">(<argument><expr><operator pos:line="31" pos:column="44">&amp;<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="45">dst_tag<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="54">ref<pos:position pos:line="31" pos:column="57"/></name><operator pos:line="31" pos:column="57">-&gt;<pos:position pos:line="31" pos:column="62"/></operator><name pos:line="31" pos:column="59">name<pos:position pos:line="31" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="65"/></condition><then pos:line="31" pos:column="65">
			<block type="pseudo"><continue pos:line="32" pos:column="25">continue;<pos:position pos:line="32" pos:column="34"/></continue></block></then></if> <comment type="block" pos:line="32" pos:column="35">/* they already have it */</comment>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><call><name pos:line="33" pos:column="21">sha1_object_info<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">(<argument><expr><name><name pos:line="33" pos:column="38">ref<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">-&gt;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="43">new_sha1<pos:position pos:line="33" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="53">NULL<pos:position pos:line="33" pos:column="57"/></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call> <operator pos:line="33" pos:column="59">!=<pos:position pos:line="33" pos:column="61"/></operator> <name pos:line="33" pos:column="62">OBJ_TAG<pos:position pos:line="33" pos:column="69"/></name></expr>)<pos:position pos:line="33" pos:column="70"/></condition><then pos:line="33" pos:column="70">
			<block type="pseudo"><continue pos:line="34" pos:column="25">continue;<pos:position pos:line="34" pos:column="34"/></continue></block></then></if> <comment type="block" pos:line="34" pos:column="35">/* be conservative */</comment>
		<expr_stmt><expr><name pos:line="35" pos:column="17">item<pos:position pos:line="35" pos:column="21"/></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <call><name pos:line="35" pos:column="24">string_list_append<pos:position pos:line="35" pos:column="42"/></name><argument_list pos:line="35" pos:column="42">(<argument><expr><operator pos:line="35" pos:column="43">&amp;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="44">src_tag<pos:position pos:line="35" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="53">ref<pos:position pos:line="35" pos:column="56"/></name><operator pos:line="35" pos:column="56">-&gt;<pos:position pos:line="35" pos:column="61"/></operator><name pos:line="35" pos:column="58">name<pos:position pos:line="35" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="36" pos:column="17">item<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">-&gt;<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="23">util<pos:position pos:line="36" pos:column="27"/></name></name> <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <name pos:line="36" pos:column="30">ref<pos:position pos:line="36" pos:column="33"/></name></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">string_list_clear<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><operator pos:line="38" pos:column="27">&amp;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="28">dst_tag<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="37">0<pos:position pos:line="38" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>

	<comment type="block" pos:line="40" pos:column="9">/*
	 * At this point, src_tag lists tags that are missing from
	 * dst, and sent_tips lists the tips we are pushing or those
	 * that we know they already have. An element in the src_tag
	 * that is an ancestor of any of the sent_tips needs to be
	 * sent to the other side.
	 */</comment>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name><name pos:line="47" pos:column="13">sent_tips<pos:position pos:line="47" pos:column="22"/></name><operator pos:line="47" pos:column="22">.<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="23">nr<pos:position pos:line="47" pos:column="25"/></name></name></expr>)<pos:position pos:line="47" pos:column="26"/></condition><then pos:line="47" pos:column="26"> <block pos:line="47" pos:column="27">{
		<macro><name pos:line="48" pos:column="17">for_each_string_list_item<pos:position pos:line="48" pos:column="42"/></name><argument_list pos:line="48" pos:column="42">(<argument pos:line="48" pos:column="43">item<pos:position pos:line="48" pos:column="47"/></argument>, <argument pos:line="48" pos:column="49">&amp;src_tag<pos:position pos:line="48" pos:column="57"/></argument>)<pos:position pos:line="48" pos:column="58"/></argument_list></macro> <block pos:line="48" pos:column="59">{
			<decl_stmt><decl><type><name><name pos:line="49" pos:column="25">struct<pos:position pos:line="49" pos:column="31"/></name> <name pos:line="49" pos:column="32">ref<pos:position pos:line="49" pos:column="35"/></name></name> <modifier pos:line="49" pos:column="36">*<pos:position pos:line="49" pos:column="37"/></modifier></type><name pos:line="49" pos:column="37">ref<pos:position pos:line="49" pos:column="40"/></name> <init pos:line="49" pos:column="41">= <expr><name><name pos:line="49" pos:column="43">item<pos:position pos:line="49" pos:column="47"/></name><operator pos:line="49" pos:column="47">-&gt;<pos:position pos:line="49" pos:column="52"/></operator><name pos:line="49" pos:column="49">util<pos:position pos:line="49" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="49" pos:column="54"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="50" pos:column="25">struct<pos:position pos:line="50" pos:column="31"/></name> <name pos:line="50" pos:column="32">ref<pos:position pos:line="50" pos:column="35"/></name></name> <modifier pos:line="50" pos:column="36">*<pos:position pos:line="50" pos:column="37"/></modifier></type><name pos:line="50" pos:column="37">dst_ref<pos:position pos:line="50" pos:column="44"/></name></decl>;<pos:position pos:line="50" pos:column="45"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="51" pos:column="25">struct<pos:position pos:line="51" pos:column="31"/></name> <name pos:line="51" pos:column="32">commit<pos:position pos:line="51" pos:column="38"/></name></name> <modifier pos:line="51" pos:column="39">*<pos:position pos:line="51" pos:column="40"/></modifier></type><name pos:line="51" pos:column="40">commit<pos:position pos:line="51" pos:column="46"/></name></decl>;<pos:position pos:line="51" pos:column="47"/></decl_stmt>

			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><call><name pos:line="53" pos:column="29">is_null_sha1<pos:position pos:line="53" pos:column="41"/></name><argument_list pos:line="53" pos:column="41">(<argument><expr><name><name pos:line="53" pos:column="42">ref<pos:position pos:line="53" pos:column="45"/></name><operator pos:line="53" pos:column="45">-&gt;<pos:position pos:line="53" pos:column="50"/></operator><name pos:line="53" pos:column="47">new_sha1<pos:position pos:line="53" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="57"/></condition><then pos:line="53" pos:column="57">
				<block type="pseudo"><continue pos:line="54" pos:column="33">continue;<pos:position pos:line="54" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="55" pos:column="25">commit<pos:position pos:line="55" pos:column="31"/></name> <operator pos:line="55" pos:column="32">=<pos:position pos:line="55" pos:column="33"/></operator> <call><name pos:line="55" pos:column="34">lookup_commit_reference_gently<pos:position pos:line="55" pos:column="64"/></name><argument_list pos:line="55" pos:column="64">(<argument><expr><name><name pos:line="55" pos:column="65">ref<pos:position pos:line="55" pos:column="68"/></name><operator pos:line="55" pos:column="68">-&gt;<pos:position pos:line="55" pos:column="73"/></operator><name pos:line="55" pos:column="70">new_sha1<pos:position pos:line="55" pos:column="78"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="80">1<pos:position pos:line="55" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="83"/></expr_stmt>
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><operator pos:line="56" pos:column="29">!<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="30">commit<pos:position pos:line="56" pos:column="36"/></name></expr>)<pos:position pos:line="56" pos:column="37"/></condition><then pos:line="56" pos:column="37">
				<comment type="block" pos:line="57" pos:column="33">/* not pushing a commit, which is not an error */</comment>
				<block type="pseudo"><continue pos:line="58" pos:column="33">continue;<pos:position pos:line="58" pos:column="42"/></continue></block></then></if>

			<comment type="block" pos:line="60" pos:column="25">/*
			 * Is this tag, which they do not have, reachable from
			 * any of the commits we are sending?
			 */</comment>
			<if pos:line="64" pos:column="25">if <condition pos:line="64" pos:column="28">(<expr><operator pos:line="64" pos:column="29">!<pos:position pos:line="64" pos:column="30"/></operator><call><name pos:line="64" pos:column="30">in_merge_bases_many<pos:position pos:line="64" pos:column="49"/></name><argument_list pos:line="64" pos:column="49">(<argument><expr><name pos:line="64" pos:column="50">commit<pos:position pos:line="64" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="58">sent_tips<pos:position pos:line="64" pos:column="67"/></name><operator pos:line="64" pos:column="67">.<pos:position pos:line="64" pos:column="68"/></operator><name pos:line="64" pos:column="68">nr<pos:position pos:line="64" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="72">sent_tips<pos:position pos:line="64" pos:column="81"/></name><operator pos:line="64" pos:column="81">.<pos:position pos:line="64" pos:column="82"/></operator><name pos:line="64" pos:column="82">tip<pos:position pos:line="64" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="87"/></condition><then pos:line="64" pos:column="87">
				<block type="pseudo"><continue pos:line="65" pos:column="33">continue;<pos:position pos:line="65" pos:column="42"/></continue></block></then></if>

			<comment type="block" pos:line="67" pos:column="25">/* Add it in */</comment>
			<expr_stmt><expr><name pos:line="68" pos:column="25">dst_ref<pos:position pos:line="68" pos:column="32"/></name> <operator pos:line="68" pos:column="33">=<pos:position pos:line="68" pos:column="34"/></operator> <call><name pos:line="68" pos:column="35">make_linked_ref<pos:position pos:line="68" pos:column="50"/></name><argument_list pos:line="68" pos:column="50">(<argument><expr><name><name pos:line="68" pos:column="51">ref<pos:position pos:line="68" pos:column="54"/></name><operator pos:line="68" pos:column="54">-&gt;<pos:position pos:line="68" pos:column="59"/></operator><name pos:line="68" pos:column="56">name<pos:position pos:line="68" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="62">dst_tail<pos:position pos:line="68" pos:column="70"/></name></expr></argument>)<pos:position pos:line="68" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="69" pos:column="25">hashcpy<pos:position pos:line="69" pos:column="32"/></name><argument_list pos:line="69" pos:column="32">(<argument><expr><name><name pos:line="69" pos:column="33">dst_ref<pos:position pos:line="69" pos:column="40"/></name><operator pos:line="69" pos:column="40">-&gt;<pos:position pos:line="69" pos:column="45"/></operator><name pos:line="69" pos:column="42">new_sha1<pos:position pos:line="69" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="52">ref<pos:position pos:line="69" pos:column="55"/></name><operator pos:line="69" pos:column="55">-&gt;<pos:position pos:line="69" pos:column="60"/></operator><name pos:line="69" pos:column="57">new_sha1<pos:position pos:line="69" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="70" pos:column="25">dst_ref<pos:position pos:line="70" pos:column="32"/></name><operator pos:line="70" pos:column="32">-&gt;<pos:position pos:line="70" pos:column="37"/></operator><name pos:line="70" pos:column="34">peer_ref<pos:position pos:line="70" pos:column="42"/></name></name> <operator pos:line="70" pos:column="43">=<pos:position pos:line="70" pos:column="44"/></operator> <call><name pos:line="70" pos:column="45">copy_ref<pos:position pos:line="70" pos:column="53"/></name><argument_list pos:line="70" pos:column="53">(<argument><expr><name pos:line="70" pos:column="54">ref<pos:position pos:line="70" pos:column="57"/></name></expr></argument>)<pos:position pos:line="70" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="71" pos:column="18"/></block>
	}<pos:position pos:line="72" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="73" pos:column="9">string_list_clear<pos:position pos:line="73" pos:column="26"/></name><argument_list pos:line="73" pos:column="26">(<argument><expr><operator pos:line="73" pos:column="27">&amp;<pos:position pos:line="73" pos:column="32"/></operator><name pos:line="73" pos:column="28">src_tag<pos:position pos:line="73" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="37">0<pos:position pos:line="73" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="74" pos:column="9">free<pos:position pos:line="74" pos:column="13"/></name><argument_list pos:line="74" pos:column="13">(<argument><expr><name><name pos:line="74" pos:column="14">sent_tips<pos:position pos:line="74" pos:column="23"/></name><operator pos:line="74" pos:column="23">.<pos:position pos:line="74" pos:column="24"/></operator><name pos:line="74" pos:column="24">tip<pos:position pos:line="74" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

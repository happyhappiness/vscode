<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3786_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">output_commit_title<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">merge_options<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">o<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="58">struct<pos:position pos:line="1" pos:column="64"/></name> <name pos:line="1" pos:column="65">commit<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">commit<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">strbuf_addchars<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">(<argument><expr><operator pos:line="3" pos:column="25">&amp;<pos:position pos:line="3" pos:column="30"/></operator><name><name pos:line="3" pos:column="26">o<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">-&gt;<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="29">obuf<pos:position pos:line="3" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="3" pos:column="35">' '<pos:position pos:line="3" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="40">o<pos:position pos:line="3" pos:column="41"/></name><operator pos:line="3" pos:column="41">-&gt;<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="43">call_depth<pos:position pos:line="3" pos:column="53"/></name></name> <operator pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></operator> <literal type="number" pos:line="3" pos:column="56">2<pos:position pos:line="3" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="59"/></expr_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name><name pos:line="4" pos:column="13">commit<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">util<pos:position pos:line="4" pos:column="25"/></name></name></expr>)<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="17">strbuf_addf<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><operator pos:line="5" pos:column="29">&amp;<pos:position pos:line="5" pos:column="34"/></operator><name><name pos:line="5" pos:column="30">o<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">obuf<pos:position pos:line="5" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="39">"virtual %s\n"<pos:position pos:line="5" pos:column="53"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="6" pos:column="25">merge_remote_util<pos:position pos:line="6" pos:column="42"/></name><argument_list pos:line="6" pos:column="42">(<argument><expr><name pos:line="6" pos:column="43">commit<pos:position pos:line="6" pos:column="49"/></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call><operator pos:line="6" pos:column="50">-&gt;<pos:position pos:line="6" pos:column="55"/></operator><name pos:line="6" pos:column="52">name<pos:position pos:line="6" pos:column="56"/></name></expr></argument>)<pos:position pos:line="6" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="58"/></expr_stmt></block></then>
	<else pos:line="7" pos:column="9">else <block pos:line="7" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">strbuf_add_unique_abbrev<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><operator pos:line="8" pos:column="42">&amp;<pos:position pos:line="8" pos:column="47"/></operator><name><name pos:line="8" pos:column="43">o<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">obuf<pos:position pos:line="8" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="52">commit<pos:position pos:line="8" pos:column="58"/></name><operator pos:line="8" pos:column="58">-&gt;<pos:position pos:line="8" pos:column="63"/></operator><name pos:line="8" pos:column="60">object<pos:position pos:line="8" pos:column="66"/></name><operator pos:line="8" pos:column="66">.<pos:position pos:line="8" pos:column="67"/></operator><name pos:line="8" pos:column="67">oid<pos:position pos:line="8" pos:column="70"/></name><operator pos:line="8" pos:column="70">.<pos:position pos:line="8" pos:column="71"/></operator><name pos:line="8" pos:column="71">hash<pos:position pos:line="8" pos:column="75"/></name></name></expr></argument>,
					 <argument><expr><name pos:line="9" pos:column="42">DEFAULT_ABBREV<pos:position pos:line="9" pos:column="56"/></name></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">strbuf_addch<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator><name><name pos:line="10" pos:column="31">o<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">obuf<pos:position pos:line="10" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="40">' '<pos:position pos:line="10" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">parse_commit<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">commit<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call> <operator pos:line="11" pos:column="42">!=<pos:position pos:line="11" pos:column="44"/></operator> <literal type="number" pos:line="11" pos:column="45">0<pos:position pos:line="11" pos:column="46"/></literal></expr>)<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">strbuf_addstr<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><operator pos:line="12" pos:column="39">&amp;<pos:position pos:line="12" pos:column="44"/></operator><name><name pos:line="12" pos:column="40">o<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">-&gt;<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="43">obuf<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="49">_<pos:position pos:line="12" pos:column="50"/></name><argument_list pos:line="12" pos:column="50">(<argument><expr><literal type="string" pos:line="12" pos:column="51">"(bad commit)\n"<pos:position pos:line="12" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="70"/></expr_stmt></block></then>
		<else pos:line="13" pos:column="17">else <block pos:line="13" pos:column="22">{
			<decl_stmt><decl><type><specifier pos:line="14" pos:column="25">const<pos:position pos:line="14" pos:column="30"/></specifier> <name pos:line="14" pos:column="31">char<pos:position pos:line="14" pos:column="35"/></name> <modifier pos:line="14" pos:column="36">*<pos:position pos:line="14" pos:column="37"/></modifier></type><name pos:line="14" pos:column="37">title<pos:position pos:line="14" pos:column="42"/></name></decl>;<pos:position pos:line="14" pos:column="43"/></decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="15" pos:column="25">const<pos:position pos:line="15" pos:column="30"/></specifier> <name pos:line="15" pos:column="31">char<pos:position pos:line="15" pos:column="35"/></name> <modifier pos:line="15" pos:column="36">*<pos:position pos:line="15" pos:column="37"/></modifier></type><name pos:line="15" pos:column="37">msg<pos:position pos:line="15" pos:column="40"/></name> <init pos:line="15" pos:column="41">= <expr><call><name pos:line="15" pos:column="43">get_commit_buffer<pos:position pos:line="15" pos:column="60"/></name><argument_list pos:line="15" pos:column="60">(<argument><expr><name pos:line="15" pos:column="61">commit<pos:position pos:line="15" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="69">NULL<pos:position pos:line="15" pos:column="73"/></name></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="75"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="16" pos:column="25">int<pos:position pos:line="16" pos:column="28"/></name></type> <name pos:line="16" pos:column="29">len<pos:position pos:line="16" pos:column="32"/></name> <init pos:line="16" pos:column="33">= <expr><call><name pos:line="16" pos:column="35">find_commit_subject<pos:position pos:line="16" pos:column="54"/></name><argument_list pos:line="16" pos:column="54">(<argument><expr><name pos:line="16" pos:column="55">msg<pos:position pos:line="16" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="60">&amp;<pos:position pos:line="16" pos:column="65"/></operator><name pos:line="16" pos:column="61">title<pos:position pos:line="16" pos:column="66"/></name></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="68"/></decl_stmt>
			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><name pos:line="17" pos:column="29">len<pos:position pos:line="17" pos:column="32"/></name></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="33">strbuf_addf<pos:position pos:line="18" pos:column="44"/></name><argument_list pos:line="18" pos:column="44">(<argument><expr><operator pos:line="18" pos:column="45">&amp;<pos:position pos:line="18" pos:column="50"/></operator><name><name pos:line="18" pos:column="46">o<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">obuf<pos:position pos:line="18" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="55">"%.*s\n"<pos:position pos:line="18" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="65">len<pos:position pos:line="18" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="70">title<pos:position pos:line="18" pos:column="75"/></name></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="77"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">unuse_commit_buffer<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">(<argument><expr><name pos:line="19" pos:column="45">commit<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">msg<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></else></if>
	}<pos:position pos:line="21" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">flush_output<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">o<pos:position pos:line="22" pos:column="23"/></name></expr></argument>)<pos:position pos:line="22" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

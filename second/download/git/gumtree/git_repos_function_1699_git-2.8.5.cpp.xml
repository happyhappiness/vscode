<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1699_git-2.8.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_hash_cache<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">sha1file<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">f<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
			     <parameter><decl><type><name><name pos:line="2" pos:column="30">struct<pos:position pos:line="2" pos:column="36"/></name> <name pos:line="2" pos:column="37">pack_idx_entry<pos:position pos:line="2" pos:column="51"/></name></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier><modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">index<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="3" pos:column="30">uint32_t<pos:position pos:line="3" pos:column="38"/></name></type> <name pos:line="3" pos:column="39">index_nr<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">uint32_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">i<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="25">index_nr<pos:position pos:line="7" pos:column="33"/></name></expr>;<pos:position pos:line="7" pos:column="34"/></condition> <incr><expr><operator pos:line="7" pos:column="35">++<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="37">i<pos:position pos:line="7" pos:column="38"/></name></expr></incr>)<pos:position pos:line="7" pos:column="39"/></control> <block pos:line="7" pos:column="40">{
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">object_entry<pos:position pos:line="8" pos:column="36"/></name></name> <modifier pos:line="8" pos:column="37">*<pos:position pos:line="8" pos:column="38"/></modifier></type><name pos:line="8" pos:column="38">entry<pos:position pos:line="8" pos:column="43"/></name> <init pos:line="8" pos:column="44">= <expr><operator pos:line="8" pos:column="46">(<pos:position pos:line="8" pos:column="47"/></operator>struct <name pos:line="8" pos:column="54">object_entry<pos:position pos:line="8" pos:column="66"/></name> <operator pos:line="8" pos:column="67">*<pos:position pos:line="8" pos:column="68"/></operator><operator pos:line="8" pos:column="68">)<pos:position pos:line="8" pos:column="69"/></operator><name><name pos:line="8" pos:column="69">index<pos:position pos:line="8" pos:column="74"/></name><index pos:line="8" pos:column="74">[<expr><name pos:line="8" pos:column="75">i<pos:position pos:line="8" pos:column="76"/></name></expr>]<pos:position pos:line="8" pos:column="77"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="78"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">uint32_t<pos:position pos:line="9" pos:column="25"/></name></type> <name pos:line="9" pos:column="26">hash_value<pos:position pos:line="9" pos:column="36"/></name> <init pos:line="9" pos:column="37">= <expr><call><name pos:line="9" pos:column="39">htonl<pos:position pos:line="9" pos:column="44"/></name><argument_list pos:line="9" pos:column="44">(<argument><expr><name><name pos:line="9" pos:column="45">entry<pos:position pos:line="9" pos:column="50"/></name><operator pos:line="9" pos:column="50">-&gt;<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="52">hash<pos:position pos:line="9" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="58"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">sha1write<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">f<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="31">hash_value<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="43">sizeof<argument_list pos:line="10" pos:column="49">(<argument><expr><name pos:line="10" pos:column="50">hash_value<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></for>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

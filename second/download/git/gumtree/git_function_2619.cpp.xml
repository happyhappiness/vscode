<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2619.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_non_tip<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> <name pos:line="3" pos:column="22">char<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name><name pos:line="3" pos:column="28">argv<pos:position pos:line="3" pos:column="32"/></name><index pos:line="3" pos:column="32">[]<pos:position pos:line="3" pos:column="34"/></index></name> <init pos:line="3" pos:column="35">= <expr><block pos:line="3" pos:column="37">{
		<expr><literal type="string" pos:line="4" pos:column="17">"rev-list"<pos:position pos:line="4" pos:column="27"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="29">"--stdin"<pos:position pos:line="4" pos:column="38"/></literal></expr>, <expr><name pos:line="4" pos:column="40">NULL<pos:position pos:line="4" pos:column="44"/></name></expr>,
	}<pos:position pos:line="5" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name><name pos:line="6" pos:column="16">struct<pos:position pos:line="6" pos:column="22"/></name> <name pos:line="6" pos:column="23">child_process<pos:position pos:line="6" pos:column="36"/></name></name></type> <name pos:line="6" pos:column="37">cmd<pos:position pos:line="6" pos:column="40"/></name> <init pos:line="6" pos:column="41">= <expr><name pos:line="6" pos:column="43">CHILD_PROCESS_INIT<pos:position pos:line="6" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">object<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">o<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">namebuf<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><literal type="number" pos:line="8" pos:column="22">42<pos:position pos:line="8" pos:column="24"/></literal></expr>]<pos:position pos:line="8" pos:column="25"/></index></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt> <comment type="block" pos:line="8" pos:column="27">/* ^ + SHA-1 + LF */</comment>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="11" pos:column="9">/*
	 * In the normal in-process case without
	 * uploadpack.allowReachableSHA1InWant,
	 * non-tip requests can never happen.
	 */</comment>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">stateless_rpc<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">&amp;&amp;<pos:position pos:line="16" pos:column="38"/></operator> <operator pos:line="16" pos:column="31">!<pos:position pos:line="16" pos:column="32"/></operator><operator pos:line="16" pos:column="32">(<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">allow_unadvertised_object_request<pos:position pos:line="16" pos:column="66"/></name> <operator pos:line="16" pos:column="67">&amp;<pos:position pos:line="16" pos:column="72"/></operator> <name pos:line="16" pos:column="69">ALLOW_REACHABLE_SHA1<pos:position pos:line="16" pos:column="89"/></name><operator pos:line="16" pos:column="89">)<pos:position pos:line="16" pos:column="90"/></operator></expr>)<pos:position pos:line="16" pos:column="91"/></condition><then pos:line="16" pos:column="91">
		<block type="pseudo"><goto pos:line="17" pos:column="17">goto <name pos:line="17" pos:column="22">error<pos:position pos:line="17" pos:column="27"/></name>;<pos:position pos:line="17" pos:column="28"/></goto></block></then></if>

	<expr_stmt><expr><name><name pos:line="19" pos:column="9">cmd<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">.<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">argv<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">argv<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">cmd<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">.<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">git_cmd<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <literal type="number" pos:line="20" pos:column="23">1<pos:position pos:line="20" pos:column="24"/></literal></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">cmd<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">.<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">no_stderr<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <literal type="number" pos:line="21" pos:column="25">1<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">cmd<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">.<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">in<pos:position pos:line="22" pos:column="15"/></name></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <operator pos:line="22" pos:column="18">-<pos:position pos:line="22" pos:column="19"/></operator><literal type="number" pos:line="22" pos:column="19">1<pos:position pos:line="22" pos:column="20"/></literal></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">cmd<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">.<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">out<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <operator pos:line="23" pos:column="19">-<pos:position pos:line="23" pos:column="20"/></operator><literal type="number" pos:line="23" pos:column="20">1<pos:position pos:line="23" pos:column="21"/></literal></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">start_command<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><operator pos:line="25" pos:column="27">&amp;<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="28">cmd<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33">
		<block type="pseudo"><goto pos:line="26" pos:column="17">goto <name pos:line="26" pos:column="22">error<pos:position pos:line="26" pos:column="27"/></name>;<pos:position pos:line="26" pos:column="28"/></goto></block></then></if>

	<comment type="block" pos:line="28" pos:column="9">/*
	 * If rev-list --stdin encounters an unknown commit, it
	 * terminates, which will cause SIGPIPE in the write loop
	 * below.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">sigchain_push<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">SIGPIPE<pos:position pos:line="33" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="32">SIG_IGN<pos:position pos:line="33" pos:column="39"/></name></expr></argument>)<pos:position pos:line="33" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="35" pos:column="9">namebuf<pos:position pos:line="35" pos:column="16"/></name><index pos:line="35" pos:column="16">[<expr><literal type="number" pos:line="35" pos:column="17">0<pos:position pos:line="35" pos:column="18"/></literal></expr>]<pos:position pos:line="35" pos:column="19"/></index></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <literal type="char" pos:line="35" pos:column="22">'^'<pos:position pos:line="35" pos:column="25"/></literal></expr>;<pos:position pos:line="35" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">namebuf<pos:position pos:line="36" pos:column="16"/></name><index pos:line="36" pos:column="16">[<expr><literal type="number" pos:line="36" pos:column="17">41<pos:position pos:line="36" pos:column="19"/></literal></expr>]<pos:position pos:line="36" pos:column="20"/></index></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <literal type="char" pos:line="36" pos:column="23">'\n'<pos:position pos:line="36" pos:column="27"/></literal></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
	<for pos:line="37" pos:column="9">for <control pos:line="37" pos:column="13">(<init><expr><name pos:line="37" pos:column="14">i<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">get_max_object_index<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">()<pos:position pos:line="37" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="41"/></init> <condition><expr><literal type="number" pos:line="37" pos:column="42">0<pos:position pos:line="37" pos:column="43"/></literal> <operator pos:line="37" pos:column="44">&lt;<pos:position pos:line="37" pos:column="48"/></operator> <name pos:line="37" pos:column="46">i<pos:position pos:line="37" pos:column="47"/></name></expr>;<pos:position pos:line="37" pos:column="48"/></condition> <incr/>)<pos:position pos:line="37" pos:column="50"/></control> <block pos:line="37" pos:column="51">{
		<expr_stmt><expr><name pos:line="38" pos:column="17">o<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <call><name pos:line="38" pos:column="21">get_indexed_object<pos:position pos:line="38" pos:column="39"/></name><argument_list pos:line="38" pos:column="39">(<argument><expr><operator pos:line="38" pos:column="40">--<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="42">i<pos:position pos:line="38" pos:column="43"/></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">!<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">o<pos:position pos:line="39" pos:column="23"/></name></expr>)<pos:position pos:line="39" pos:column="24"/></condition><then pos:line="39" pos:column="24">
			<block type="pseudo"><continue pos:line="40" pos:column="25">continue;<pos:position pos:line="40" pos:column="34"/></continue></block></then></if>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">!<pos:position pos:line="41" pos:column="22"/></operator><call><name pos:line="41" pos:column="22">is_our_ref<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">o<pos:position pos:line="41" pos:column="34"/></name></expr></argument>)<pos:position pos:line="41" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="36"/></condition><then pos:line="41" pos:column="36">
			<block type="pseudo"><continue pos:line="42" pos:column="25">continue;<pos:position pos:line="42" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">memcpy<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">namebuf<pos:position pos:line="43" pos:column="31"/></name> <operator pos:line="43" pos:column="32">+<pos:position pos:line="43" pos:column="33"/></operator> <literal type="number" pos:line="43" pos:column="34">1<pos:position pos:line="43" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="37">sha1_to_hex<pos:position pos:line="43" pos:column="48"/></name><argument_list pos:line="43" pos:column="48">(<argument><expr><name><name pos:line="43" pos:column="49">o<pos:position pos:line="43" pos:column="50"/></name><operator pos:line="43" pos:column="50">-&gt;<pos:position pos:line="43" pos:column="55"/></operator><name pos:line="43" pos:column="52">sha1<pos:position pos:line="43" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="59">40<pos:position pos:line="43" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="63"/></expr_stmt>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><call><name pos:line="44" pos:column="21">write_in_full<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name><name pos:line="44" pos:column="35">cmd<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">.<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="39">in<pos:position pos:line="44" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="43">namebuf<pos:position pos:line="44" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="52">42<pos:position pos:line="44" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call> <operator pos:line="44" pos:column="56">&lt;<pos:position pos:line="44" pos:column="60"/></operator> <literal type="number" pos:line="44" pos:column="58">0<pos:position pos:line="44" pos:column="59"/></literal></expr>)<pos:position pos:line="44" pos:column="60"/></condition><then pos:line="44" pos:column="60">
			<block type="pseudo"><goto pos:line="45" pos:column="25">goto <name pos:line="45" pos:column="30">error<pos:position pos:line="45" pos:column="35"/></name>;<pos:position pos:line="45" pos:column="36"/></goto></block></then></if>
	}<pos:position pos:line="46" pos:column="10"/></block></for>
	<expr_stmt><expr><name><name pos:line="47" pos:column="9">namebuf<pos:position pos:line="47" pos:column="16"/></name><index pos:line="47" pos:column="16">[<expr><literal type="number" pos:line="47" pos:column="17">40<pos:position pos:line="47" pos:column="19"/></literal></expr>]<pos:position pos:line="47" pos:column="20"/></index></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <literal type="char" pos:line="47" pos:column="23">'\n'<pos:position pos:line="47" pos:column="27"/></literal></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>
	<for pos:line="48" pos:column="9">for <control pos:line="48" pos:column="13">(<init><expr><name pos:line="48" pos:column="14">i<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <literal type="number" pos:line="48" pos:column="18">0<pos:position pos:line="48" pos:column="19"/></literal></expr>;<pos:position pos:line="48" pos:column="20"/></init> <condition><expr><name pos:line="48" pos:column="21">i<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">&lt;<pos:position pos:line="48" pos:column="27"/></operator> <name><name pos:line="48" pos:column="25">want_obj<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">.<pos:position pos:line="48" pos:column="34"/></operator><name pos:line="48" pos:column="34">nr<pos:position pos:line="48" pos:column="36"/></name></name></expr>;<pos:position pos:line="48" pos:column="37"/></condition> <incr><expr><name pos:line="48" pos:column="38">i<pos:position pos:line="48" pos:column="39"/></name><operator pos:line="48" pos:column="39">++<pos:position pos:line="48" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="48" pos:column="42"/></control> <block pos:line="48" pos:column="43">{
		<expr_stmt><expr><name pos:line="49" pos:column="17">o<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <name><name pos:line="49" pos:column="21">want_obj<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">.<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="30">objects<pos:position pos:line="49" pos:column="37"/></name><index pos:line="49" pos:column="37">[<expr><name pos:line="49" pos:column="38">i<pos:position pos:line="49" pos:column="39"/></name></expr>]<pos:position pos:line="49" pos:column="40"/></index></name><operator pos:line="49" pos:column="40">.<pos:position pos:line="49" pos:column="41"/></operator><name pos:line="49" pos:column="41">item<pos:position pos:line="49" pos:column="45"/></name></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><call><name pos:line="50" pos:column="21">is_our_ref<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><name pos:line="50" pos:column="32">o<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="35"/></condition><then pos:line="50" pos:column="35">
			<block type="pseudo"><continue pos:line="51" pos:column="25">continue;<pos:position pos:line="51" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">memcpy<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><name pos:line="52" pos:column="24">namebuf<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="33">sha1_to_hex<pos:position pos:line="52" pos:column="44"/></name><argument_list pos:line="52" pos:column="44">(<argument><expr><name><name pos:line="52" pos:column="45">o<pos:position pos:line="52" pos:column="46"/></name><operator pos:line="52" pos:column="46">-&gt;<pos:position pos:line="52" pos:column="51"/></operator><name pos:line="52" pos:column="48">sha1<pos:position pos:line="52" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="55">40<pos:position pos:line="52" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="59"/></expr_stmt>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><call><name pos:line="53" pos:column="21">write_in_full<pos:position pos:line="53" pos:column="34"/></name><argument_list pos:line="53" pos:column="34">(<argument><expr><name><name pos:line="53" pos:column="35">cmd<pos:position pos:line="53" pos:column="38"/></name><operator pos:line="53" pos:column="38">.<pos:position pos:line="53" pos:column="39"/></operator><name pos:line="53" pos:column="39">in<pos:position pos:line="53" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="43">namebuf<pos:position pos:line="53" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="52">41<pos:position pos:line="53" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call> <operator pos:line="53" pos:column="56">&lt;<pos:position pos:line="53" pos:column="60"/></operator> <literal type="number" pos:line="53" pos:column="58">0<pos:position pos:line="53" pos:column="59"/></literal></expr>)<pos:position pos:line="53" pos:column="60"/></condition><then pos:line="53" pos:column="60">
			<block type="pseudo"><goto pos:line="54" pos:column="25">goto <name pos:line="54" pos:column="30">error<pos:position pos:line="54" pos:column="35"/></name>;<pos:position pos:line="54" pos:column="36"/></goto></block></then></if>
	}<pos:position pos:line="55" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">close<pos:position pos:line="56" pos:column="14"/></name><argument_list pos:line="56" pos:column="14">(<argument><expr><name><name pos:line="56" pos:column="15">cmd<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">.<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="19">in<pos:position pos:line="56" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="58" pos:column="9">sigchain_pop<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">SIGPIPE<pos:position pos:line="58" pos:column="29"/></name></expr></argument>)<pos:position pos:line="58" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt>

	<comment type="block" pos:line="60" pos:column="9">/*
	 * The commits out of the rev-list are not ancestors of
	 * our ref.
	 */</comment>
	<expr_stmt><expr><name pos:line="64" pos:column="9">i<pos:position pos:line="64" pos:column="10"/></name> <operator pos:line="64" pos:column="11">=<pos:position pos:line="64" pos:column="12"/></operator> <call><name pos:line="64" pos:column="13">read_in_full<pos:position pos:line="64" pos:column="25"/></name><argument_list pos:line="64" pos:column="25">(<argument><expr><name><name pos:line="64" pos:column="26">cmd<pos:position pos:line="64" pos:column="29"/></name><operator pos:line="64" pos:column="29">.<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="30">out<pos:position pos:line="64" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="35">namebuf<pos:position pos:line="64" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="44">1<pos:position pos:line="64" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="47"/></expr_stmt>
	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">i<pos:position pos:line="65" pos:column="14"/></name></expr>)<pos:position pos:line="65" pos:column="15"/></condition><then pos:line="65" pos:column="15">
		<block type="pseudo"><goto pos:line="66" pos:column="17">goto <name pos:line="66" pos:column="22">error<pos:position pos:line="66" pos:column="27"/></name>;<pos:position pos:line="66" pos:column="28"/></goto></block></then></if>
	<expr_stmt><expr><call><name pos:line="67" pos:column="9">close<pos:position pos:line="67" pos:column="14"/></name><argument_list pos:line="67" pos:column="14">(<argument><expr><name><name pos:line="67" pos:column="15">cmd<pos:position pos:line="67" pos:column="18"/></name><operator pos:line="67" pos:column="18">.<pos:position pos:line="67" pos:column="19"/></operator><name pos:line="67" pos:column="19">out<pos:position pos:line="67" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="24"/></expr_stmt>

	<comment type="block" pos:line="69" pos:column="9">/*
	 * rev-list may have died by encountering a bad commit
	 * in the history, in which case we do want to bail out
	 * even when it showed no commit.
	 */</comment>
	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><call><name pos:line="74" pos:column="13">finish_command<pos:position pos:line="74" pos:column="27"/></name><argument_list pos:line="74" pos:column="27">(<argument><expr><operator pos:line="74" pos:column="28">&amp;<pos:position pos:line="74" pos:column="33"/></operator><name pos:line="74" pos:column="29">cmd<pos:position pos:line="74" pos:column="32"/></name></expr></argument>)<pos:position pos:line="74" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="34"/></condition><then pos:line="74" pos:column="34">
		<block type="pseudo"><goto pos:line="75" pos:column="17">goto <name pos:line="75" pos:column="22">error<pos:position pos:line="75" pos:column="27"/></name>;<pos:position pos:line="75" pos:column="28"/></goto></block></then></if>

	<comment type="block" pos:line="77" pos:column="9">/* All the non-tip ones are ancestors of what we advertised */</comment>
	<return pos:line="78" pos:column="9">return;<pos:position pos:line="78" pos:column="16"/></return>

<label><name pos:line="80" pos:column="1">error<pos:position pos:line="80" pos:column="6"/></name>:<pos:position pos:line="80" pos:column="7"/></label>
	<comment type="block" pos:line="81" pos:column="9">/* Pick one of them (we know there at least is one) */</comment>
	<for pos:line="82" pos:column="9">for <control pos:line="82" pos:column="13">(<init><expr><name pos:line="82" pos:column="14">i<pos:position pos:line="82" pos:column="15"/></name> <operator pos:line="82" pos:column="16">=<pos:position pos:line="82" pos:column="17"/></operator> <literal type="number" pos:line="82" pos:column="18">0<pos:position pos:line="82" pos:column="19"/></literal></expr>;<pos:position pos:line="82" pos:column="20"/></init> <condition><expr><name pos:line="82" pos:column="21">i<pos:position pos:line="82" pos:column="22"/></name> <operator pos:line="82" pos:column="23">&lt;<pos:position pos:line="82" pos:column="27"/></operator> <name><name pos:line="82" pos:column="25">want_obj<pos:position pos:line="82" pos:column="33"/></name><operator pos:line="82" pos:column="33">.<pos:position pos:line="82" pos:column="34"/></operator><name pos:line="82" pos:column="34">nr<pos:position pos:line="82" pos:column="36"/></name></name></expr>;<pos:position pos:line="82" pos:column="37"/></condition> <incr><expr><name pos:line="82" pos:column="38">i<pos:position pos:line="82" pos:column="39"/></name><operator pos:line="82" pos:column="39">++<pos:position pos:line="82" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="82" pos:column="42"/></control> <block pos:line="82" pos:column="43">{
		<expr_stmt><expr><name pos:line="83" pos:column="17">o<pos:position pos:line="83" pos:column="18"/></name> <operator pos:line="83" pos:column="19">=<pos:position pos:line="83" pos:column="20"/></operator> <name><name pos:line="83" pos:column="21">want_obj<pos:position pos:line="83" pos:column="29"/></name><operator pos:line="83" pos:column="29">.<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="30">objects<pos:position pos:line="83" pos:column="37"/></name><index pos:line="83" pos:column="37">[<expr><name pos:line="83" pos:column="38">i<pos:position pos:line="83" pos:column="39"/></name></expr>]<pos:position pos:line="83" pos:column="40"/></index></name><operator pos:line="83" pos:column="40">.<pos:position pos:line="83" pos:column="41"/></operator><name pos:line="83" pos:column="41">item<pos:position pos:line="83" pos:column="45"/></name></expr>;<pos:position pos:line="83" pos:column="46"/></expr_stmt>
		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><operator pos:line="84" pos:column="21">!<pos:position pos:line="84" pos:column="22"/></operator><call><name pos:line="84" pos:column="22">is_our_ref<pos:position pos:line="84" pos:column="32"/></name><argument_list pos:line="84" pos:column="32">(<argument><expr><name pos:line="84" pos:column="33">o<pos:position pos:line="84" pos:column="34"/></name></expr></argument>)<pos:position pos:line="84" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="36"/></condition><then pos:line="84" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="25">die<pos:position pos:line="85" pos:column="28"/></name><argument_list pos:line="85" pos:column="28">(<argument><expr><literal type="string" pos:line="85" pos:column="29">"git upload-pack: not our ref %s"<pos:position pos:line="85" pos:column="62"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="86" pos:column="29">sha1_to_hex<pos:position pos:line="86" pos:column="40"/></name><argument_list pos:line="86" pos:column="40">(<argument><expr><name><name pos:line="86" pos:column="41">o<pos:position pos:line="86" pos:column="42"/></name><operator pos:line="86" pos:column="42">-&gt;<pos:position pos:line="86" pos:column="47"/></operator><name pos:line="86" pos:column="44">sha1<pos:position pos:line="86" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="51"/></expr_stmt></block></then></if>
	}<pos:position pos:line="87" pos:column="10"/></block></for>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

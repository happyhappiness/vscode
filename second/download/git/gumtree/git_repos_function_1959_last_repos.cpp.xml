<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1959_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_color<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">color<pos:position pos:line="1" pos:column="36"/></name></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">out<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">name<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">len<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* Positions in array must match ANSI color codes */</comment>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><specifier pos:line="4" pos:column="16">const<pos:position pos:line="4" pos:column="21"/></specifier> <name pos:line="4" pos:column="22">char<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier> <specifier pos:line="4" pos:column="29">const<pos:position pos:line="4" pos:column="34"/></specifier></type> <name><name pos:line="4" pos:column="35">color_names<pos:position pos:line="4" pos:column="46"/></name><index pos:line="4" pos:column="46">[]<pos:position pos:line="4" pos:column="48"/></index></name> <init pos:line="4" pos:column="49">= <expr><block pos:line="4" pos:column="51">{
		<expr><literal type="string" pos:line="5" pos:column="17">"black"<pos:position pos:line="5" pos:column="24"/></literal></expr>, <expr><literal type="string" pos:line="5" pos:column="26">"red"<pos:position pos:line="5" pos:column="31"/></literal></expr>, <expr><literal type="string" pos:line="5" pos:column="33">"green"<pos:position pos:line="5" pos:column="40"/></literal></expr>, <expr><literal type="string" pos:line="5" pos:column="42">"yellow"<pos:position pos:line="5" pos:column="50"/></literal></expr>,
		<expr><literal type="string" pos:line="6" pos:column="17">"blue"<pos:position pos:line="6" pos:column="23"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="25">"magenta"<pos:position pos:line="6" pos:column="34"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="36">"cyan"<pos:position pos:line="6" pos:column="42"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="44">"white"<pos:position pos:line="6" pos:column="51"/></literal></expr>
	}<pos:position pos:line="7" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">end<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">long<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">val<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>

	<comment type="block" pos:line="12" pos:column="9">/* First try the special word "normal"... */</comment>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">match_word<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">name<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="30">len<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="35">"normal"<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45"> <block pos:line="13" pos:column="46">{
		<expr_stmt><expr><name><name pos:line="14" pos:column="17">out<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">type<pos:position pos:line="14" pos:column="26"/></name></name> <operator pos:line="14" pos:column="27">=<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="29">COLOR_NORMAL<pos:position pos:line="14" pos:column="41"/></name></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="18" pos:column="9">/* Try a 24-bit RGB value */</comment>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">len<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">==<pos:position pos:line="19" pos:column="19"/></operator> <literal type="number" pos:line="19" pos:column="20">7<pos:position pos:line="19" pos:column="21"/></literal> <operator pos:line="19" pos:column="22">&amp;&amp;<pos:position pos:line="19" pos:column="32"/></operator> <name><name pos:line="19" pos:column="25">name<pos:position pos:line="19" pos:column="29"/></name><index pos:line="19" pos:column="29">[<expr><literal type="number" pos:line="19" pos:column="30">0<pos:position pos:line="19" pos:column="31"/></literal></expr>]<pos:position pos:line="19" pos:column="32"/></index></name> <operator pos:line="19" pos:column="33">==<pos:position pos:line="19" pos:column="35"/></operator> <literal type="char" pos:line="19" pos:column="36">'#'<pos:position pos:line="19" pos:column="39"/></literal></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40"> <block pos:line="19" pos:column="41">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><call><name pos:line="20" pos:column="22">get_hex_color<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">name<pos:position pos:line="20" pos:column="40"/></name> <operator pos:line="20" pos:column="41">+<pos:position pos:line="20" pos:column="42"/></operator> <literal type="number" pos:line="20" pos:column="43">1<pos:position pos:line="20" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="46">&amp;<pos:position pos:line="20" pos:column="51"/></operator><name><name pos:line="20" pos:column="47">out<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">-&gt;<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="52">red<pos:position pos:line="20" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call> <operator pos:line="20" pos:column="57">&amp;&amp;<pos:position pos:line="20" pos:column="67"/></operator>
		    <operator pos:line="21" pos:column="21">!<pos:position pos:line="21" pos:column="22"/></operator><call><name pos:line="21" pos:column="22">get_hex_color<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">name<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">+<pos:position pos:line="21" pos:column="42"/></operator> <literal type="number" pos:line="21" pos:column="43">3<pos:position pos:line="21" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="46">&amp;<pos:position pos:line="21" pos:column="51"/></operator><name><name pos:line="21" pos:column="47">out<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">green<pos:position pos:line="21" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call> <operator pos:line="21" pos:column="59">&amp;&amp;<pos:position pos:line="21" pos:column="69"/></operator>
		    <operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><call><name pos:line="22" pos:column="22">get_hex_color<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name pos:line="22" pos:column="36">name<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">+<pos:position pos:line="22" pos:column="42"/></operator> <literal type="number" pos:line="22" pos:column="43">5<pos:position pos:line="22" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="46">&amp;<pos:position pos:line="22" pos:column="51"/></operator><name><name pos:line="22" pos:column="47">out<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">-&gt;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="52">blue<pos:position pos:line="22" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="58"/></condition><then pos:line="22" pos:column="58"> <block pos:line="22" pos:column="59">{
			<expr_stmt><expr><name><name pos:line="23" pos:column="25">out<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">type<pos:position pos:line="23" pos:column="34"/></name></name> <operator pos:line="23" pos:column="35">=<pos:position pos:line="23" pos:column="36"/></operator> <name pos:line="23" pos:column="37">COLOR_RGB<pos:position pos:line="23" pos:column="46"/></name></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>
			<return pos:line="24" pos:column="25">return <expr><literal type="number" pos:line="24" pos:column="32">0<pos:position pos:line="24" pos:column="33"/></literal></expr>;<pos:position pos:line="24" pos:column="34"/></return>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="28" pos:column="9">/* Then pick from our human-readable color names... */</comment>
	<for pos:line="29" pos:column="9">for <control pos:line="29" pos:column="13">(<init><expr><name pos:line="29" pos:column="14">i<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <literal type="number" pos:line="29" pos:column="18">0<pos:position pos:line="29" pos:column="19"/></literal></expr>;<pos:position pos:line="29" pos:column="20"/></init> <condition><expr><name pos:line="29" pos:column="21">i<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">&lt;<pos:position pos:line="29" pos:column="27"/></operator> <call><name pos:line="29" pos:column="25">ARRAY_SIZE<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">color_names<pos:position pos:line="29" pos:column="47"/></name></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="49"/></condition> <incr><expr><name pos:line="29" pos:column="50">i<pos:position pos:line="29" pos:column="51"/></name><operator pos:line="29" pos:column="51">++<pos:position pos:line="29" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="54"/></control> <block pos:line="29" pos:column="55">{
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><call><name pos:line="30" pos:column="21">match_word<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">name<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">len<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="43">color_names<pos:position pos:line="30" pos:column="54"/></name><index pos:line="30" pos:column="54">[<expr><name pos:line="30" pos:column="55">i<pos:position pos:line="30" pos:column="56"/></name></expr>]<pos:position pos:line="30" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="59"/></condition><then pos:line="30" pos:column="59"> <block pos:line="30" pos:column="60">{
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">out<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-&gt;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="30">type<pos:position pos:line="31" pos:column="34"/></name></name> <operator pos:line="31" pos:column="35">=<pos:position pos:line="31" pos:column="36"/></operator> <name pos:line="31" pos:column="37">COLOR_ANSI<pos:position pos:line="31" pos:column="47"/></name></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="32" pos:column="25">out<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">-&gt;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="30">value<pos:position pos:line="32" pos:column="35"/></name></name> <operator pos:line="32" pos:column="36">=<pos:position pos:line="32" pos:column="37"/></operator> <name pos:line="32" pos:column="38">i<pos:position pos:line="32" pos:column="39"/></name></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
			<return pos:line="33" pos:column="25">return <expr><literal type="number" pos:line="33" pos:column="32">0<pos:position pos:line="33" pos:column="33"/></literal></expr>;<pos:position pos:line="33" pos:column="34"/></return>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
	}<pos:position pos:line="35" pos:column="10"/></block></for>

	<comment type="block" pos:line="37" pos:column="9">/* And finally try a literal 256-color-mode number */</comment>
	<expr_stmt><expr><name pos:line="38" pos:column="9">val<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <call><name pos:line="38" pos:column="15">strtol<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">name<pos:position pos:line="38" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="28">&amp;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="29">end<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="34">10<pos:position pos:line="38" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">end<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">-<pos:position pos:line="39" pos:column="18"/></operator> <name pos:line="39" pos:column="19">name<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">==<pos:position pos:line="39" pos:column="26"/></operator> <name pos:line="39" pos:column="27">len<pos:position pos:line="39" pos:column="30"/></name></expr>)<pos:position pos:line="39" pos:column="31"/></condition><then pos:line="39" pos:column="31"> <block pos:line="39" pos:column="32">{
		<comment type="block" pos:line="40" pos:column="17">/*
		 * Allow "-1" as an alias for "normal", but other negative
		 * numbers are bogus.
		 */</comment>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">val<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">&lt;<pos:position pos:line="44" pos:column="29"/></operator> <operator pos:line="44" pos:column="27">-<pos:position pos:line="44" pos:column="28"/></operator><literal type="number" pos:line="44" pos:column="28">1<pos:position pos:line="44" pos:column="29"/></literal></expr>)<pos:position pos:line="44" pos:column="30"/></condition><then pos:line="44" pos:column="30">
			<block type="pseudo"><empty_stmt pos:line="45" pos:column="25">;<pos:position pos:line="45" pos:column="26"/></empty_stmt></block></then> <comment type="block" pos:line="45" pos:column="27">/* fall through to error */</comment>
		<elseif pos:line="46" pos:column="17">else <if pos:line="46" pos:column="22">if <condition pos:line="46" pos:column="25">(<expr><name pos:line="46" pos:column="26">val<pos:position pos:line="46" pos:column="29"/></name> <operator pos:line="46" pos:column="30">&lt;<pos:position pos:line="46" pos:column="34"/></operator> <literal type="number" pos:line="46" pos:column="32">0<pos:position pos:line="46" pos:column="33"/></literal></expr>)<pos:position pos:line="46" pos:column="34"/></condition><then pos:line="46" pos:column="34"> <block pos:line="46" pos:column="35">{
			<expr_stmt><expr><name><name pos:line="47" pos:column="25">out<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">-&gt;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="30">type<pos:position pos:line="47" pos:column="34"/></name></name> <operator pos:line="47" pos:column="35">=<pos:position pos:line="47" pos:column="36"/></operator> <name pos:line="47" pos:column="37">COLOR_NORMAL<pos:position pos:line="47" pos:column="49"/></name></expr>;<pos:position pos:line="47" pos:column="50"/></expr_stmt>
			<return pos:line="48" pos:column="25">return <expr><literal type="number" pos:line="48" pos:column="32">0<pos:position pos:line="48" pos:column="33"/></literal></expr>;<pos:position pos:line="48" pos:column="34"/></return>
		<comment type="block" pos:line="49" pos:column="17">/* Rewrite low numbers as more-portable standard colors. */</comment>
		}<pos:position pos:line="50" pos:column="18"/></block></then></if></elseif> <elseif pos:line="50" pos:column="19">else <if pos:line="50" pos:column="24">if <condition pos:line="50" pos:column="27">(<expr><name pos:line="50" pos:column="28">val<pos:position pos:line="50" pos:column="31"/></name> <operator pos:line="50" pos:column="32">&lt;<pos:position pos:line="50" pos:column="36"/></operator> <literal type="number" pos:line="50" pos:column="34">8<pos:position pos:line="50" pos:column="35"/></literal></expr>)<pos:position pos:line="50" pos:column="36"/></condition><then pos:line="50" pos:column="36"> <block pos:line="50" pos:column="37">{
			<expr_stmt><expr><name><name pos:line="51" pos:column="25">out<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">-&gt;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="30">type<pos:position pos:line="51" pos:column="34"/></name></name> <operator pos:line="51" pos:column="35">=<pos:position pos:line="51" pos:column="36"/></operator> <name pos:line="51" pos:column="37">COLOR_ANSI<pos:position pos:line="51" pos:column="47"/></name></expr>;<pos:position pos:line="51" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="52" pos:column="25">out<pos:position pos:line="52" pos:column="28"/></name><operator pos:line="52" pos:column="28">-&gt;<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="30">value<pos:position pos:line="52" pos:column="35"/></name></name> <operator pos:line="52" pos:column="36">=<pos:position pos:line="52" pos:column="37"/></operator> <name pos:line="52" pos:column="38">val<pos:position pos:line="52" pos:column="41"/></name></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt>
			<return pos:line="53" pos:column="25">return <expr><literal type="number" pos:line="53" pos:column="32">0<pos:position pos:line="53" pos:column="33"/></literal></expr>;<pos:position pos:line="53" pos:column="34"/></return>
		}<pos:position pos:line="54" pos:column="18"/></block></then></if></elseif> <elseif pos:line="54" pos:column="19">else <if pos:line="54" pos:column="24">if <condition pos:line="54" pos:column="27">(<expr><name pos:line="54" pos:column="28">val<pos:position pos:line="54" pos:column="31"/></name> <operator pos:line="54" pos:column="32">&lt;<pos:position pos:line="54" pos:column="36"/></operator> <literal type="number" pos:line="54" pos:column="34">256<pos:position pos:line="54" pos:column="37"/></literal></expr>)<pos:position pos:line="54" pos:column="38"/></condition><then pos:line="54" pos:column="38"> <block pos:line="54" pos:column="39">{
			<expr_stmt><expr><name><name pos:line="55" pos:column="25">out<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">-&gt;<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="30">type<pos:position pos:line="55" pos:column="34"/></name></name> <operator pos:line="55" pos:column="35">=<pos:position pos:line="55" pos:column="36"/></operator> <name pos:line="55" pos:column="37">COLOR_256<pos:position pos:line="55" pos:column="46"/></name></expr>;<pos:position pos:line="55" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="56" pos:column="25">out<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">-&gt;<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="30">value<pos:position pos:line="56" pos:column="35"/></name></name> <operator pos:line="56" pos:column="36">=<pos:position pos:line="56" pos:column="37"/></operator> <name pos:line="56" pos:column="38">val<pos:position pos:line="56" pos:column="41"/></name></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>
			<return pos:line="57" pos:column="25">return <expr><literal type="number" pos:line="57" pos:column="32">0<pos:position pos:line="57" pos:column="33"/></literal></expr>;<pos:position pos:line="57" pos:column="34"/></return>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="59" pos:column="10"/></block></then></if>

	<return pos:line="61" pos:column="9">return <expr><operator pos:line="61" pos:column="16">-<pos:position pos:line="61" pos:column="17"/></operator><literal type="number" pos:line="61" pos:column="17">1<pos:position pos:line="61" pos:column="18"/></literal></expr>;<pos:position pos:line="61" pos:column="19"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

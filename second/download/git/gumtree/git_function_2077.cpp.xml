<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2077.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">guess_dir_name<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">repo<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">is_bundle<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">is_bare<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">end<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">repo<pos:position pos:line="3" pos:column="31"/></name> <operator pos:line="3" pos:column="32">+<pos:position pos:line="3" pos:column="33"/></operator> <call><name pos:line="3" pos:column="34">strlen<pos:position pos:line="3" pos:column="40"/></name><argument_list pos:line="3" pos:column="40">(<argument><expr><name pos:line="3" pos:column="41">repo<pos:position pos:line="3" pos:column="45"/></name></expr></argument>)<pos:position pos:line="3" pos:column="46"/></argument_list></call></expr></init></decl>, <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="49">start<pos:position pos:line="3" pos:column="54"/></name></decl>, <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="57">ptr<pos:position pos:line="3" pos:column="60"/></name></decl>;<pos:position pos:line="3" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">len<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">dir<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/*
	 * Skip scheme.
	 */</comment>
	<expr_stmt><expr><name pos:line="10" pos:column="9">start<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">strstr<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">repo<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="30">"://"<pos:position pos:line="10" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">start<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">==<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">NULL<pos:position pos:line="11" pos:column="26"/></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">start<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="25">repo<pos:position pos:line="12" pos:column="29"/></name></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt></block></then>
	<else pos:line="13" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">start<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">+=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="26">3<pos:position pos:line="14" pos:column="27"/></literal></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt></block></else></if>

	<comment type="block" pos:line="16" pos:column="9">/*
	 * Skip authentication data. The stripping does happen
	 * greedily, such that we strip up to the last '@' inside
	 * the host part.
	 */</comment>
	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">ptr<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">start<pos:position pos:line="21" pos:column="25"/></name></expr>;<pos:position pos:line="21" pos:column="26"/></init> <condition><expr><name pos:line="21" pos:column="27">ptr<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">&lt;<pos:position pos:line="21" pos:column="35"/></operator> <name pos:line="21" pos:column="33">end<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">&amp;&amp;<pos:position pos:line="21" pos:column="47"/></operator> <operator pos:line="21" pos:column="40">!<pos:position pos:line="21" pos:column="41"/></operator><call><name pos:line="21" pos:column="41">is_dir_sep<pos:position pos:line="21" pos:column="51"/></name><argument_list pos:line="21" pos:column="51">(<argument><expr><operator pos:line="21" pos:column="52">*<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="53">ptr<pos:position pos:line="21" pos:column="56"/></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></condition> <incr><expr><name pos:line="21" pos:column="59">ptr<pos:position pos:line="21" pos:column="62"/></name><operator pos:line="21" pos:column="62">++<pos:position pos:line="21" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="65"/></control> <block pos:line="21" pos:column="66">{
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">*<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">ptr<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">==<pos:position pos:line="22" pos:column="28"/></operator> <literal type="char" pos:line="22" pos:column="29">'@'<pos:position pos:line="22" pos:column="32"/></literal></expr>)<pos:position pos:line="22" pos:column="33"/></condition><then pos:line="22" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="25">start<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="33">ptr<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">+<pos:position pos:line="23" pos:column="38"/></operator> <literal type="number" pos:line="23" pos:column="39">1<pos:position pos:line="23" pos:column="40"/></literal></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt></block></then></if>
	}<pos:position pos:line="24" pos:column="10"/></block></for>

	<comment type="block" pos:line="26" pos:column="9">/*
	 * Strip trailing spaces, slashes and /.git
	 */</comment>
	<while pos:line="29" pos:column="9">while <condition pos:line="29" pos:column="15">(<expr><name pos:line="29" pos:column="16">start<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">&lt;<pos:position pos:line="29" pos:column="26"/></operator> <name pos:line="29" pos:column="24">end<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">&amp;&amp;<pos:position pos:line="29" pos:column="38"/></operator> <operator pos:line="29" pos:column="31">(<pos:position pos:line="29" pos:column="32"/></operator><call><name pos:line="29" pos:column="32">is_dir_sep<pos:position pos:line="29" pos:column="42"/></name><argument_list pos:line="29" pos:column="42">(<argument><expr><name><name pos:line="29" pos:column="43">end<pos:position pos:line="29" pos:column="46"/></name><index pos:line="29" pos:column="46">[<expr><operator pos:line="29" pos:column="47">-<pos:position pos:line="29" pos:column="48"/></operator><literal type="number" pos:line="29" pos:column="48">1<pos:position pos:line="29" pos:column="49"/></literal></expr>]<pos:position pos:line="29" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call> <operator pos:line="29" pos:column="52">||<pos:position pos:line="29" pos:column="54"/></operator> <call><name pos:line="29" pos:column="55">isspace<pos:position pos:line="29" pos:column="62"/></name><argument_list pos:line="29" pos:column="62">(<argument><expr><name><name pos:line="29" pos:column="63">end<pos:position pos:line="29" pos:column="66"/></name><index pos:line="29" pos:column="66">[<expr><operator pos:line="29" pos:column="67">-<pos:position pos:line="29" pos:column="68"/></operator><literal type="number" pos:line="29" pos:column="68">1<pos:position pos:line="29" pos:column="69"/></literal></expr>]<pos:position pos:line="29" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call><operator pos:line="29" pos:column="71">)<pos:position pos:line="29" pos:column="72"/></operator></expr>)<pos:position pos:line="29" pos:column="73"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="17">end<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">--<pos:position pos:line="30" pos:column="22"/></operator></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt></block></while>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">end<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">-<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">start<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">&gt;<pos:position pos:line="31" pos:column="29"/></operator> <literal type="number" pos:line="31" pos:column="27">5<pos:position pos:line="31" pos:column="28"/></literal> <operator pos:line="31" pos:column="29">&amp;&amp;<pos:position pos:line="31" pos:column="39"/></operator> <call><name pos:line="31" pos:column="32">is_dir_sep<pos:position pos:line="31" pos:column="42"/></name><argument_list pos:line="31" pos:column="42">(<argument><expr><name><name pos:line="31" pos:column="43">end<pos:position pos:line="31" pos:column="46"/></name><index pos:line="31" pos:column="46">[<expr><operator pos:line="31" pos:column="47">-<pos:position pos:line="31" pos:column="48"/></operator><literal type="number" pos:line="31" pos:column="48">5<pos:position pos:line="31" pos:column="49"/></literal></expr>]<pos:position pos:line="31" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call> <operator pos:line="31" pos:column="52">&amp;&amp;<pos:position pos:line="31" pos:column="62"/></operator>
	    <operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">strncmp<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">end<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">-<pos:position pos:line="32" pos:column="27"/></operator> <literal type="number" pos:line="32" pos:column="28">4<pos:position pos:line="32" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="31">".git"<pos:position pos:line="32" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="39">4<pos:position pos:line="32" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="42"/></condition><then pos:line="32" pos:column="42"> <block pos:line="32" pos:column="43">{
		<expr_stmt><expr><name pos:line="33" pos:column="17">end<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">-=<pos:position pos:line="33" pos:column="23"/></operator> <literal type="number" pos:line="33" pos:column="24">5<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
		<while pos:line="34" pos:column="17">while <condition pos:line="34" pos:column="23">(<expr><name pos:line="34" pos:column="24">start<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">&lt;<pos:position pos:line="34" pos:column="34"/></operator> <name pos:line="34" pos:column="32">end<pos:position pos:line="34" pos:column="35"/></name> <operator pos:line="34" pos:column="36">&amp;&amp;<pos:position pos:line="34" pos:column="46"/></operator> <call><name pos:line="34" pos:column="39">is_dir_sep<pos:position pos:line="34" pos:column="49"/></name><argument_list pos:line="34" pos:column="49">(<argument><expr><name><name pos:line="34" pos:column="50">end<pos:position pos:line="34" pos:column="53"/></name><index pos:line="34" pos:column="53">[<expr><operator pos:line="34" pos:column="54">-<pos:position pos:line="34" pos:column="55"/></operator><literal type="number" pos:line="34" pos:column="55">1<pos:position pos:line="34" pos:column="56"/></literal></expr>]<pos:position pos:line="34" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="59"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="25">end<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">--<pos:position pos:line="35" pos:column="30"/></operator></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt></block></while>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="38" pos:column="9">/*
	 * Strip trailing port number if we've got only a
	 * hostname (that is, there is no dir separator but a
	 * colon). This check is required such that we do not
	 * strip URI's like '/foo/bar:2222.git', which should
	 * result in a dir '2222' being guessed due to backwards
	 * compatibility.
	 */</comment>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><call><name pos:line="46" pos:column="13">memchr<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><name pos:line="46" pos:column="20">start<pos:position pos:line="46" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="46" pos:column="27">'/'<pos:position pos:line="46" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="32">end<pos:position pos:line="46" pos:column="35"/></name> <operator pos:line="46" pos:column="36">-<pos:position pos:line="46" pos:column="37"/></operator> <name pos:line="46" pos:column="38">start<pos:position pos:line="46" pos:column="43"/></name></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call> <operator pos:line="46" pos:column="45">==<pos:position pos:line="46" pos:column="47"/></operator> <name pos:line="46" pos:column="48">NULL<pos:position pos:line="46" pos:column="52"/></name>
	    <operator pos:line="47" pos:column="13">&amp;&amp;<pos:position pos:line="47" pos:column="23"/></operator> <call><name pos:line="47" pos:column="16">memchr<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><name pos:line="47" pos:column="23">start<pos:position pos:line="47" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="47" pos:column="30">':'<pos:position pos:line="47" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="35">end<pos:position pos:line="47" pos:column="38"/></name> <operator pos:line="47" pos:column="39">-<pos:position pos:line="47" pos:column="40"/></operator> <name pos:line="47" pos:column="41">start<pos:position pos:line="47" pos:column="46"/></name></expr></argument>)<pos:position pos:line="47" pos:column="47"/></argument_list></call> <operator pos:line="47" pos:column="48">!=<pos:position pos:line="47" pos:column="50"/></operator> <name pos:line="47" pos:column="51">NULL<pos:position pos:line="47" pos:column="55"/></name></expr>)<pos:position pos:line="47" pos:column="56"/></condition><then pos:line="47" pos:column="56"> <block pos:line="47" pos:column="57">{
		<expr_stmt><expr><name pos:line="48" pos:column="17">ptr<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <name pos:line="48" pos:column="23">end<pos:position pos:line="48" pos:column="26"/></name></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>
		<while pos:line="49" pos:column="17">while <condition pos:line="49" pos:column="23">(<expr><name pos:line="49" pos:column="24">start<pos:position pos:line="49" pos:column="29"/></name> <operator pos:line="49" pos:column="30">&lt;<pos:position pos:line="49" pos:column="34"/></operator> <name pos:line="49" pos:column="32">ptr<pos:position pos:line="49" pos:column="35"/></name> <operator pos:line="49" pos:column="36">&amp;&amp;<pos:position pos:line="49" pos:column="46"/></operator> <call><name pos:line="49" pos:column="39">isdigit<pos:position pos:line="49" pos:column="46"/></name><argument_list pos:line="49" pos:column="46">(<argument><expr><name><name pos:line="49" pos:column="47">ptr<pos:position pos:line="49" pos:column="50"/></name><index pos:line="49" pos:column="50">[<expr><operator pos:line="49" pos:column="51">-<pos:position pos:line="49" pos:column="52"/></operator><literal type="number" pos:line="49" pos:column="52">1<pos:position pos:line="49" pos:column="53"/></literal></expr>]<pos:position pos:line="49" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call> <operator pos:line="49" pos:column="56">&amp;&amp;<pos:position pos:line="49" pos:column="66"/></operator> <name><name pos:line="49" pos:column="59">ptr<pos:position pos:line="49" pos:column="62"/></name><index pos:line="49" pos:column="62">[<expr><operator pos:line="49" pos:column="63">-<pos:position pos:line="49" pos:column="64"/></operator><literal type="number" pos:line="49" pos:column="64">1<pos:position pos:line="49" pos:column="65"/></literal></expr>]<pos:position pos:line="49" pos:column="66"/></index></name> <operator pos:line="49" pos:column="67">!=<pos:position pos:line="49" pos:column="69"/></operator> <literal type="char" pos:line="49" pos:column="70">':'<pos:position pos:line="49" pos:column="73"/></literal></expr>)<pos:position pos:line="49" pos:column="74"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="25">ptr<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">--<pos:position pos:line="50" pos:column="30"/></operator></expr>;<pos:position pos:line="50" pos:column="31"/></expr_stmt></block></while>
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name pos:line="51" pos:column="21">start<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">&lt;<pos:position pos:line="51" pos:column="31"/></operator> <name pos:line="51" pos:column="29">ptr<pos:position pos:line="51" pos:column="32"/></name> <operator pos:line="51" pos:column="33">&amp;&amp;<pos:position pos:line="51" pos:column="43"/></operator> <name><name pos:line="51" pos:column="36">ptr<pos:position pos:line="51" pos:column="39"/></name><index pos:line="51" pos:column="39">[<expr><operator pos:line="51" pos:column="40">-<pos:position pos:line="51" pos:column="41"/></operator><literal type="number" pos:line="51" pos:column="41">1<pos:position pos:line="51" pos:column="42"/></literal></expr>]<pos:position pos:line="51" pos:column="43"/></index></name> <operator pos:line="51" pos:column="44">==<pos:position pos:line="51" pos:column="46"/></operator> <literal type="char" pos:line="51" pos:column="47">':'<pos:position pos:line="51" pos:column="50"/></literal></expr>)<pos:position pos:line="51" pos:column="51"/></condition><then pos:line="51" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="25">end<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">=<pos:position pos:line="52" pos:column="30"/></operator> <name pos:line="52" pos:column="31">ptr<pos:position pos:line="52" pos:column="34"/></name> <operator pos:line="52" pos:column="35">-<pos:position pos:line="52" pos:column="36"/></operator> <literal type="number" pos:line="52" pos:column="37">1<pos:position pos:line="52" pos:column="38"/></literal></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt></block></then></if>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="55" pos:column="9">/*
	 * Find last component. To remain backwards compatible we
	 * also regard colons as path separators, such that
	 * cloning a repository 'foo:bar.git' would result in a
	 * directory 'bar' being guessed.
	 */</comment>
	<expr_stmt><expr><name pos:line="61" pos:column="9">ptr<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">=<pos:position pos:line="61" pos:column="14"/></operator> <name pos:line="61" pos:column="15">end<pos:position pos:line="61" pos:column="18"/></name></expr>;<pos:position pos:line="61" pos:column="19"/></expr_stmt>
	<while pos:line="62" pos:column="9">while <condition pos:line="62" pos:column="15">(<expr><name pos:line="62" pos:column="16">start<pos:position pos:line="62" pos:column="21"/></name> <operator pos:line="62" pos:column="22">&lt;<pos:position pos:line="62" pos:column="26"/></operator> <name pos:line="62" pos:column="24">ptr<pos:position pos:line="62" pos:column="27"/></name> <operator pos:line="62" pos:column="28">&amp;&amp;<pos:position pos:line="62" pos:column="38"/></operator> <operator pos:line="62" pos:column="31">!<pos:position pos:line="62" pos:column="32"/></operator><call><name pos:line="62" pos:column="32">is_dir_sep<pos:position pos:line="62" pos:column="42"/></name><argument_list pos:line="62" pos:column="42">(<argument><expr><name><name pos:line="62" pos:column="43">ptr<pos:position pos:line="62" pos:column="46"/></name><index pos:line="62" pos:column="46">[<expr><operator pos:line="62" pos:column="47">-<pos:position pos:line="62" pos:column="48"/></operator><literal type="number" pos:line="62" pos:column="48">1<pos:position pos:line="62" pos:column="49"/></literal></expr>]<pos:position pos:line="62" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="62" pos:column="51"/></argument_list></call> <operator pos:line="62" pos:column="52">&amp;&amp;<pos:position pos:line="62" pos:column="62"/></operator> <name><name pos:line="62" pos:column="55">ptr<pos:position pos:line="62" pos:column="58"/></name><index pos:line="62" pos:column="58">[<expr><operator pos:line="62" pos:column="59">-<pos:position pos:line="62" pos:column="60"/></operator><literal type="number" pos:line="62" pos:column="60">1<pos:position pos:line="62" pos:column="61"/></literal></expr>]<pos:position pos:line="62" pos:column="62"/></index></name> <operator pos:line="62" pos:column="63">!=<pos:position pos:line="62" pos:column="65"/></operator> <literal type="char" pos:line="62" pos:column="66">':'<pos:position pos:line="62" pos:column="69"/></literal></expr>)<pos:position pos:line="62" pos:column="70"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="17">ptr<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">--<pos:position pos:line="63" pos:column="22"/></operator></expr>;<pos:position pos:line="63" pos:column="23"/></expr_stmt></block></while>
	<expr_stmt><expr><name pos:line="64" pos:column="9">start<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <name pos:line="64" pos:column="17">ptr<pos:position pos:line="64" pos:column="20"/></name></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt>

	<comment type="block" pos:line="66" pos:column="9">/*
	 * Strip .{bundle,git}.
	 */</comment>
	<expr_stmt><expr><name pos:line="69" pos:column="9">len<pos:position pos:line="69" pos:column="12"/></name> <operator pos:line="69" pos:column="13">=<pos:position pos:line="69" pos:column="14"/></operator> <name pos:line="69" pos:column="15">end<pos:position pos:line="69" pos:column="18"/></name> <operator pos:line="69" pos:column="19">-<pos:position pos:line="69" pos:column="20"/></operator> <name pos:line="69" pos:column="21">start<pos:position pos:line="69" pos:column="26"/></name></expr>;<pos:position pos:line="69" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">strip_suffix_mem<pos:position pos:line="70" pos:column="25"/></name><argument_list pos:line="70" pos:column="25">(<argument><expr><name pos:line="70" pos:column="26">start<pos:position pos:line="70" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="33">&amp;<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="34">len<pos:position pos:line="70" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="70" pos:column="39">is_bundle<pos:position pos:line="70" pos:column="48"/></name></expr> ?<pos:position pos:line="70" pos:column="50"/></condition><then pos:line="70" pos:column="50"> <expr><literal type="string" pos:line="70" pos:column="51">".bundle"<pos:position pos:line="70" pos:column="60"/></literal></expr> <pos:position pos:line="70" pos:column="61"/></then><else pos:line="70" pos:column="61">: <expr><literal type="string" pos:line="70" pos:column="63">".git"<pos:position pos:line="70" pos:column="69"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="70" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="71"/></expr_stmt>

	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><operator pos:line="72" pos:column="13">!<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="14">len<pos:position pos:line="72" pos:column="17"/></name> <operator pos:line="72" pos:column="18">||<pos:position pos:line="72" pos:column="20"/></operator> <operator pos:line="72" pos:column="21">(<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="22">len<pos:position pos:line="72" pos:column="25"/></name> <operator pos:line="72" pos:column="26">==<pos:position pos:line="72" pos:column="28"/></operator> <literal type="number" pos:line="72" pos:column="29">1<pos:position pos:line="72" pos:column="30"/></literal> <operator pos:line="72" pos:column="31">&amp;&amp;<pos:position pos:line="72" pos:column="41"/></operator> <operator pos:line="72" pos:column="34">*<pos:position pos:line="72" pos:column="35"/></operator><name pos:line="72" pos:column="35">start<pos:position pos:line="72" pos:column="40"/></name> <operator pos:line="72" pos:column="41">==<pos:position pos:line="72" pos:column="43"/></operator> <literal type="char" pos:line="72" pos:column="44">'/'<pos:position pos:line="72" pos:column="47"/></literal><operator pos:line="72" pos:column="47">)<pos:position pos:line="72" pos:column="48"/></operator></expr>)<pos:position pos:line="72" pos:column="49"/></condition><then pos:line="72" pos:column="49">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="13">die<pos:position pos:line="73" pos:column="16"/></name><argument_list pos:line="73" pos:column="16">(<argument><expr><literal type="string" pos:line="73" pos:column="17">"No directory name could be guessed.\n"<pos:position pos:line="73" pos:column="56"/></literal>
		<literal type="string" pos:line="74" pos:column="17">"Please specify a directory on the command line"<pos:position pos:line="74" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="67"/></expr_stmt></block></then></if>

	<if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">is_bare<pos:position pos:line="76" pos:column="20"/></name></expr>)<pos:position pos:line="76" pos:column="21"/></condition><then pos:line="76" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="17">dir<pos:position pos:line="77" pos:column="20"/></name> <operator pos:line="77" pos:column="21">=<pos:position pos:line="77" pos:column="22"/></operator> <call><name pos:line="77" pos:column="23">xstrfmt<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><literal type="string" pos:line="77" pos:column="31">"%.*s.git"<pos:position pos:line="77" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="77" pos:column="43">(<pos:position pos:line="77" pos:column="44"/></operator><name pos:line="77" pos:column="44">int<pos:position pos:line="77" pos:column="47"/></name><operator pos:line="77" pos:column="47">)<pos:position pos:line="77" pos:column="48"/></operator><name pos:line="77" pos:column="48">len<pos:position pos:line="77" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="53">start<pos:position pos:line="77" pos:column="58"/></name></expr></argument>)<pos:position pos:line="77" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="60"/></expr_stmt></block></then>
	<else pos:line="78" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="79" pos:column="17">dir<pos:position pos:line="79" pos:column="20"/></name> <operator pos:line="79" pos:column="21">=<pos:position pos:line="79" pos:column="22"/></operator> <call><name pos:line="79" pos:column="23">xstrndup<pos:position pos:line="79" pos:column="31"/></name><argument_list pos:line="79" pos:column="31">(<argument><expr><name pos:line="79" pos:column="32">start<pos:position pos:line="79" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="39">len<pos:position pos:line="79" pos:column="42"/></name></expr></argument>)<pos:position pos:line="79" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="44"/></expr_stmt></block></else></if>
	<comment type="block" pos:line="80" pos:column="9">/*
	 * Replace sequences of 'control' characters and whitespace
	 * with one ascii space, remove leading and trailing spaces.
	 */</comment>
	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><operator pos:line="84" pos:column="13">*<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="14">dir<pos:position pos:line="84" pos:column="17"/></name></expr>)<pos:position pos:line="84" pos:column="18"/></condition><then pos:line="84" pos:column="18"> <block pos:line="84" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="85" pos:column="17">char<pos:position pos:line="85" pos:column="21"/></name> <modifier pos:line="85" pos:column="22">*<pos:position pos:line="85" pos:column="23"/></modifier></type><name pos:line="85" pos:column="23">out<pos:position pos:line="85" pos:column="26"/></name> <init pos:line="85" pos:column="27">= <expr><name pos:line="85" pos:column="29">dir<pos:position pos:line="85" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="85" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="86" pos:column="17">int<pos:position pos:line="86" pos:column="20"/></name></type> <name pos:line="86" pos:column="21">prev_space<pos:position pos:line="86" pos:column="31"/></name> <init pos:line="86" pos:column="32">= <expr><literal type="number" pos:line="86" pos:column="34">1<pos:position pos:line="86" pos:column="35"/></literal></expr></init></decl> <comment type="block" pos:line="86" pos:column="36">/* strip leading whitespace */</comment>;<pos:position pos:line="86" pos:column="67"/></decl_stmt>
		<for pos:line="87" pos:column="17">for <control pos:line="87" pos:column="21">(<init><expr><name pos:line="87" pos:column="22">end<pos:position pos:line="87" pos:column="25"/></name> <operator pos:line="87" pos:column="26">=<pos:position pos:line="87" pos:column="27"/></operator> <name pos:line="87" pos:column="28">dir<pos:position pos:line="87" pos:column="31"/></name></expr>;<pos:position pos:line="87" pos:column="32"/></init> <condition><expr><operator pos:line="87" pos:column="33">*<pos:position pos:line="87" pos:column="34"/></operator><name pos:line="87" pos:column="34">end<pos:position pos:line="87" pos:column="37"/></name></expr>;<pos:position pos:line="87" pos:column="38"/></condition> <incr><expr><operator pos:line="87" pos:column="39">++<pos:position pos:line="87" pos:column="41"/></operator><name pos:line="87" pos:column="41">end<pos:position pos:line="87" pos:column="44"/></name></expr></incr>)<pos:position pos:line="87" pos:column="45"/></control> <block pos:line="87" pos:column="46">{
			<decl_stmt><decl><type><name pos:line="88" pos:column="25">char<pos:position pos:line="88" pos:column="29"/></name></type> <name pos:line="88" pos:column="30">ch<pos:position pos:line="88" pos:column="32"/></name> <init pos:line="88" pos:column="33">= <expr><operator pos:line="88" pos:column="35">*<pos:position pos:line="88" pos:column="36"/></operator><name pos:line="88" pos:column="36">end<pos:position pos:line="88" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="88" pos:column="40"/></decl_stmt>
			<if pos:line="89" pos:column="25">if <condition pos:line="89" pos:column="28">(<expr><operator pos:line="89" pos:column="29">(<pos:position pos:line="89" pos:column="30"/></operator><name pos:line="89" pos:column="30">unsigned<pos:position pos:line="89" pos:column="38"/></name> <name pos:line="89" pos:column="39">char<pos:position pos:line="89" pos:column="43"/></name><operator pos:line="89" pos:column="43">)<pos:position pos:line="89" pos:column="44"/></operator><name pos:line="89" pos:column="44">ch<pos:position pos:line="89" pos:column="46"/></name> <operator pos:line="89" pos:column="47">&lt;<pos:position pos:line="89" pos:column="51"/></operator> <literal type="char" pos:line="89" pos:column="49">'\x20'<pos:position pos:line="89" pos:column="55"/></literal></expr>)<pos:position pos:line="89" pos:column="56"/></condition><then pos:line="89" pos:column="56">
				<block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="33">ch<pos:position pos:line="90" pos:column="35"/></name> <operator pos:line="90" pos:column="36">=<pos:position pos:line="90" pos:column="37"/></operator> <literal type="char" pos:line="90" pos:column="38">'\x20'<pos:position pos:line="90" pos:column="44"/></literal></expr>;<pos:position pos:line="90" pos:column="45"/></expr_stmt></block></then></if>
			<if pos:line="91" pos:column="25">if <condition pos:line="91" pos:column="28">(<expr><call><name pos:line="91" pos:column="29">isspace<pos:position pos:line="91" pos:column="36"/></name><argument_list pos:line="91" pos:column="36">(<argument><expr><name pos:line="91" pos:column="37">ch<pos:position pos:line="91" pos:column="39"/></name></expr></argument>)<pos:position pos:line="91" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="41"/></condition><then pos:line="91" pos:column="41"> <block pos:line="91" pos:column="42">{
				<if pos:line="92" pos:column="33">if <condition pos:line="92" pos:column="36">(<expr><name pos:line="92" pos:column="37">prev_space<pos:position pos:line="92" pos:column="47"/></name></expr>)<pos:position pos:line="92" pos:column="48"/></condition><then pos:line="92" pos:column="48">
					<block type="pseudo"><continue pos:line="93" pos:column="41">continue;<pos:position pos:line="93" pos:column="50"/></continue></block></then></if>
				<expr_stmt><expr><name pos:line="94" pos:column="33">prev_space<pos:position pos:line="94" pos:column="43"/></name> <operator pos:line="94" pos:column="44">=<pos:position pos:line="94" pos:column="45"/></operator> <literal type="number" pos:line="94" pos:column="46">1<pos:position pos:line="94" pos:column="47"/></literal></expr>;<pos:position pos:line="94" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="95" pos:column="26"/></block></then> <else pos:line="95" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="33">prev_space<pos:position pos:line="96" pos:column="43"/></name> <operator pos:line="96" pos:column="44">=<pos:position pos:line="96" pos:column="45"/></operator> <literal type="number" pos:line="96" pos:column="46">0<pos:position pos:line="96" pos:column="47"/></literal></expr>;<pos:position pos:line="96" pos:column="48"/></expr_stmt></block></else></if>
			<expr_stmt><expr><operator pos:line="97" pos:column="25">*<pos:position pos:line="97" pos:column="26"/></operator><name pos:line="97" pos:column="26">out<pos:position pos:line="97" pos:column="29"/></name><operator pos:line="97" pos:column="29">++<pos:position pos:line="97" pos:column="31"/></operator> <operator pos:line="97" pos:column="32">=<pos:position pos:line="97" pos:column="33"/></operator> <name pos:line="97" pos:column="34">ch<pos:position pos:line="97" pos:column="36"/></name></expr>;<pos:position pos:line="97" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="98" pos:column="18"/></block></for>
		<expr_stmt><expr><operator pos:line="99" pos:column="17">*<pos:position pos:line="99" pos:column="18"/></operator><name pos:line="99" pos:column="18">out<pos:position pos:line="99" pos:column="21"/></name> <operator pos:line="99" pos:column="22">=<pos:position pos:line="99" pos:column="23"/></operator> <literal type="char" pos:line="99" pos:column="24">'\0'<pos:position pos:line="99" pos:column="28"/></literal></expr>;<pos:position pos:line="99" pos:column="29"/></expr_stmt>
		<if pos:line="100" pos:column="17">if <condition pos:line="100" pos:column="20">(<expr><name pos:line="100" pos:column="21">out<pos:position pos:line="100" pos:column="24"/></name> <operator pos:line="100" pos:column="25">&gt;<pos:position pos:line="100" pos:column="29"/></operator> <name pos:line="100" pos:column="27">dir<pos:position pos:line="100" pos:column="30"/></name> <operator pos:line="100" pos:column="31">&amp;&amp;<pos:position pos:line="100" pos:column="41"/></operator> <name pos:line="100" pos:column="34">prev_space<pos:position pos:line="100" pos:column="44"/></name></expr>)<pos:position pos:line="100" pos:column="45"/></condition><then pos:line="100" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="101" pos:column="25">out<pos:position pos:line="101" pos:column="28"/></name><index pos:line="101" pos:column="28">[<expr><operator pos:line="101" pos:column="29">-<pos:position pos:line="101" pos:column="30"/></operator><literal type="number" pos:line="101" pos:column="30">1<pos:position pos:line="101" pos:column="31"/></literal></expr>]<pos:position pos:line="101" pos:column="32"/></index></name> <operator pos:line="101" pos:column="33">=<pos:position pos:line="101" pos:column="34"/></operator> <literal type="char" pos:line="101" pos:column="35">'\0'<pos:position pos:line="101" pos:column="39"/></literal></expr>;<pos:position pos:line="101" pos:column="40"/></expr_stmt></block></then></if>
	}<pos:position pos:line="102" pos:column="10"/></block></then></if>
	<return pos:line="103" pos:column="9">return <expr><name pos:line="103" pos:column="16">dir<pos:position pos:line="103" pos:column="19"/></name></expr>;<pos:position pos:line="103" pos:column="20"/></return>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

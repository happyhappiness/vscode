<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6013_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">push_check<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">argc<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier><modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">argv<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">prefix<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">remote<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">remote<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">superproject_head<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">head<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">detached_head<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><literal type="number" pos:line="6" pos:column="29">0<pos:position pos:line="6" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">object_id<pos:position pos:line="7" pos:column="25"/></name></name></type> <name pos:line="7" pos:column="26">head_oid<pos:position pos:line="7" pos:column="34"/></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">argc<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">&lt;<pos:position pos:line="9" pos:column="22"/></operator> <literal type="number" pos:line="9" pos:column="20">3<pos:position pos:line="9" pos:column="21"/></literal></expr>)<pos:position pos:line="9" pos:column="22"/></condition><then pos:line="9" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">die<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><literal type="string" pos:line="10" pos:column="21">"submodule--helper push-check requires at least 2 arguments"<pos:position pos:line="10" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="83"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="12" pos:column="9">/*
	 * superproject's resolved head ref.
	 * if HEAD then the superproject is in a detached head state, otherwise
	 * it will be the resolved head ref.
	 */</comment>
	<expr_stmt><expr><name pos:line="17" pos:column="9">superproject_head<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <name><name pos:line="17" pos:column="29">argv<pos:position pos:line="17" pos:column="33"/></name><index pos:line="17" pos:column="33">[<expr><literal type="number" pos:line="17" pos:column="34">1<pos:position pos:line="17" pos:column="35"/></literal></expr>]<pos:position pos:line="17" pos:column="36"/></index></name></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">argv<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">++<pos:position pos:line="18" pos:column="15"/></operator></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">argc<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">--<pos:position pos:line="19" pos:column="15"/></operator></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt>
	<comment type="block" pos:line="20" pos:column="9">/* Get the submodule's head ref and determine if it is detached */</comment>
	<expr_stmt><expr><name pos:line="21" pos:column="9">head<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">resolve_refdup<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><literal type="string" pos:line="21" pos:column="31">"HEAD"<pos:position pos:line="21" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="39">0<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="42">head_oid<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">.<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="51">hash<pos:position pos:line="21" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="57">NULL<pos:position pos:line="21" pos:column="61"/></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="63"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">head<pos:position pos:line="22" pos:column="18"/></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">die<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><call><name pos:line="23" pos:column="21">_<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><literal type="string" pos:line="23" pos:column="23">"Failed to resolve HEAD as a valid ref."<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt></block></then></if>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><call><name pos:line="24" pos:column="14">strcmp<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">head<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="27">"HEAD"<pos:position pos:line="24" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="17">detached_head<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">=<pos:position pos:line="25" pos:column="32"/></operator> <literal type="number" pos:line="25" pos:column="33">1<pos:position pos:line="25" pos:column="34"/></literal></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="27" pos:column="9">/*
	 * The remote must be configured.
	 * This is to avoid pushing to the exact same URL as the parent.
	 */</comment>
	<expr_stmt><expr><name pos:line="31" pos:column="9">remote<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <call><name pos:line="31" pos:column="18">pushremote_get<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name><name pos:line="31" pos:column="33">argv<pos:position pos:line="31" pos:column="37"/></name><index pos:line="31" pos:column="37">[<expr><literal type="number" pos:line="31" pos:column="38">1<pos:position pos:line="31" pos:column="39"/></literal></expr>]<pos:position pos:line="31" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">remote<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">||<pos:position pos:line="32" pos:column="23"/></operator> <name><name pos:line="32" pos:column="24">remote<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">-&gt;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="32">origin<pos:position pos:line="32" pos:column="38"/></name></name> <operator pos:line="32" pos:column="39">==<pos:position pos:line="32" pos:column="41"/></operator> <name pos:line="32" pos:column="42">REMOTE_UNCONFIGURED<pos:position pos:line="32" pos:column="61"/></name></expr>)<pos:position pos:line="32" pos:column="62"/></condition><then pos:line="32" pos:column="62">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">die<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><literal type="string" pos:line="33" pos:column="21">"remote '%s' not configured"<pos:position pos:line="33" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="51">argv<pos:position pos:line="33" pos:column="55"/></name><index pos:line="33" pos:column="55">[<expr><literal type="number" pos:line="33" pos:column="56">1<pos:position pos:line="33" pos:column="57"/></literal></expr>]<pos:position pos:line="33" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="35" pos:column="9">/* Check the refspec */</comment>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">argc<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">&gt;<pos:position pos:line="36" pos:column="22"/></operator> <literal type="number" pos:line="36" pos:column="20">2<pos:position pos:line="36" pos:column="21"/></literal></expr>)<pos:position pos:line="36" pos:column="22"/></condition><then pos:line="36" pos:column="22"> <block pos:line="36" pos:column="23">{
		<decl_stmt><decl><type><name pos:line="37" pos:column="17">int<pos:position pos:line="37" pos:column="20"/></name></type> <name pos:line="37" pos:column="21">i<pos:position pos:line="37" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="37" pos:column="24">refspec_nr<pos:position pos:line="37" pos:column="34"/></name> <init pos:line="37" pos:column="35">= <expr><name pos:line="37" pos:column="37">argc<pos:position pos:line="37" pos:column="41"/></name> <operator pos:line="37" pos:column="42">-<pos:position pos:line="37" pos:column="43"/></operator> <literal type="number" pos:line="37" pos:column="44">2<pos:position pos:line="37" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="37" pos:column="46"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="38" pos:column="17">struct<pos:position pos:line="38" pos:column="23"/></name> <name pos:line="38" pos:column="24">ref<pos:position pos:line="38" pos:column="27"/></name></name> <modifier pos:line="38" pos:column="28">*<pos:position pos:line="38" pos:column="29"/></modifier></type><name pos:line="38" pos:column="29">local_refs<pos:position pos:line="38" pos:column="39"/></name> <init pos:line="38" pos:column="40">= <expr><call><name pos:line="38" pos:column="42">get_local_heads<pos:position pos:line="38" pos:column="57"/></name><argument_list pos:line="38" pos:column="57">()<pos:position pos:line="38" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="60"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="39" pos:column="17">struct<pos:position pos:line="39" pos:column="23"/></name> <name pos:line="39" pos:column="24">refspec<pos:position pos:line="39" pos:column="31"/></name></name> <modifier pos:line="39" pos:column="32">*<pos:position pos:line="39" pos:column="33"/></modifier></type><name pos:line="39" pos:column="33">refspec<pos:position pos:line="39" pos:column="40"/></name> <init pos:line="39" pos:column="41">= <expr><call><name pos:line="39" pos:column="43">parse_push_refspec<pos:position pos:line="39" pos:column="61"/></name><argument_list pos:line="39" pos:column="61">(<argument><expr><name pos:line="39" pos:column="62">refspec_nr<pos:position pos:line="39" pos:column="72"/></name></expr></argument>,
							     <argument><expr><name pos:line="40" pos:column="62">argv<pos:position pos:line="40" pos:column="66"/></name> <operator pos:line="40" pos:column="67">+<pos:position pos:line="40" pos:column="68"/></operator> <literal type="number" pos:line="40" pos:column="69">2<pos:position pos:line="40" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="72"/></decl_stmt>

		<for pos:line="42" pos:column="17">for <control pos:line="42" pos:column="21">(<init><expr><name pos:line="42" pos:column="22">i<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <literal type="number" pos:line="42" pos:column="26">0<pos:position pos:line="42" pos:column="27"/></literal></expr>;<pos:position pos:line="42" pos:column="28"/></init> <condition><expr><name pos:line="42" pos:column="29">i<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">&lt;<pos:position pos:line="42" pos:column="35"/></operator> <name pos:line="42" pos:column="33">refspec_nr<pos:position pos:line="42" pos:column="43"/></name></expr>;<pos:position pos:line="42" pos:column="44"/></condition> <incr><expr><name pos:line="42" pos:column="45">i<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">++<pos:position pos:line="42" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="49"/></control> <block pos:line="42" pos:column="50">{
			<decl_stmt><decl><type><name><name pos:line="43" pos:column="25">struct<pos:position pos:line="43" pos:column="31"/></name> <name pos:line="43" pos:column="32">refspec<pos:position pos:line="43" pos:column="39"/></name></name> <modifier pos:line="43" pos:column="40">*<pos:position pos:line="43" pos:column="41"/></modifier></type><name pos:line="43" pos:column="41">rs<pos:position pos:line="43" pos:column="43"/></name> <init pos:line="43" pos:column="44">= <expr><name pos:line="43" pos:column="46">refspec<pos:position pos:line="43" pos:column="53"/></name> <operator pos:line="43" pos:column="54">+<pos:position pos:line="43" pos:column="55"/></operator> <name pos:line="43" pos:column="56">i<pos:position pos:line="43" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="43" pos:column="58"/></decl_stmt>

			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><name><name pos:line="45" pos:column="29">rs<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">-&gt;<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="33">pattern<pos:position pos:line="45" pos:column="40"/></name></name> <operator pos:line="45" pos:column="41">||<pos:position pos:line="45" pos:column="43"/></operator> <name><name pos:line="45" pos:column="44">rs<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">-&gt;<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="48">matching<pos:position pos:line="45" pos:column="56"/></name></name></expr>)<pos:position pos:line="45" pos:column="57"/></condition><then pos:line="45" pos:column="57">
				<block type="pseudo"><continue pos:line="46" pos:column="33">continue;<pos:position pos:line="46" pos:column="42"/></continue></block></then></if>

			<comment type="block" pos:line="48" pos:column="25">/* LHS must match a single ref */</comment>
			<switch pos:line="49" pos:column="25">switch <condition pos:line="49" pos:column="32">(<expr><call><name pos:line="49" pos:column="33">count_refspec_match<pos:position pos:line="49" pos:column="52"/></name><argument_list pos:line="49" pos:column="52">(<argument><expr><name><name pos:line="49" pos:column="53">rs<pos:position pos:line="49" pos:column="55"/></name><operator pos:line="49" pos:column="55">-&gt;<pos:position pos:line="49" pos:column="60"/></operator><name pos:line="49" pos:column="57">src<pos:position pos:line="49" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="62">local_refs<pos:position pos:line="49" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="74">NULL<pos:position pos:line="49" pos:column="78"/></name></expr></argument>)<pos:position pos:line="49" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="80"/></condition> <block pos:line="49" pos:column="81">{
			<case pos:line="50" pos:column="25">case <expr><literal type="number" pos:line="50" pos:column="30">1<pos:position pos:line="50" pos:column="31"/></literal></expr>:<pos:position pos:line="50" pos:column="32"/></case>
				<break pos:line="51" pos:column="33">break;<pos:position pos:line="51" pos:column="39"/></break>
			<case pos:line="52" pos:column="25">case <expr><literal type="number" pos:line="52" pos:column="30">0<pos:position pos:line="52" pos:column="31"/></literal></expr>:<pos:position pos:line="52" pos:column="32"/></case>
				<comment type="block" pos:line="53" pos:column="33">/*
				 * If LHS matches 'HEAD' then we need to ensure
				 * that it matches the same named branch
				 * checked out in the superproject.
				 */</comment>
				<if pos:line="58" pos:column="33">if <condition pos:line="58" pos:column="36">(<expr><operator pos:line="58" pos:column="37">!<pos:position pos:line="58" pos:column="38"/></operator><call><name pos:line="58" pos:column="38">strcmp<pos:position pos:line="58" pos:column="44"/></name><argument_list pos:line="58" pos:column="44">(<argument><expr><name><name pos:line="58" pos:column="45">rs<pos:position pos:line="58" pos:column="47"/></name><operator pos:line="58" pos:column="47">-&gt;<pos:position pos:line="58" pos:column="52"/></operator><name pos:line="58" pos:column="49">src<pos:position pos:line="58" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="54">"HEAD"<pos:position pos:line="58" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="62"/></condition><then pos:line="58" pos:column="62"> <block pos:line="58" pos:column="63">{
					<if pos:line="59" pos:column="41">if <condition pos:line="59" pos:column="44">(<expr><operator pos:line="59" pos:column="45">!<pos:position pos:line="59" pos:column="46"/></operator><name pos:line="59" pos:column="46">detached_head<pos:position pos:line="59" pos:column="59"/></name> <operator pos:line="59" pos:column="60">&amp;&amp;<pos:position pos:line="59" pos:column="70"/></operator>
					    <operator pos:line="60" pos:column="45">!<pos:position pos:line="60" pos:column="46"/></operator><call><name pos:line="60" pos:column="46">strcmp<pos:position pos:line="60" pos:column="52"/></name><argument_list pos:line="60" pos:column="52">(<argument><expr><name pos:line="60" pos:column="53">head<pos:position pos:line="60" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="59">superproject_head<pos:position pos:line="60" pos:column="76"/></name></expr></argument>)<pos:position pos:line="60" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="78"/></condition><then pos:line="60" pos:column="78">
						<block type="pseudo"><break pos:line="61" pos:column="49">break;<pos:position pos:line="61" pos:column="55"/></break></block></then></if>
					<expr_stmt><expr><call><name pos:line="62" pos:column="41">die<pos:position pos:line="62" pos:column="44"/></name><argument_list pos:line="62" pos:column="44">(<argument><expr><literal type="string" pos:line="62" pos:column="45">"HEAD does not match the named branch in the superproject"<pos:position pos:line="62" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="105"/></expr_stmt>
				}<pos:position pos:line="63" pos:column="34"/></block></then></if>
			<default pos:line="64" pos:column="25">default:<pos:position pos:line="64" pos:column="33"/></default>
				<expr_stmt><expr><call><name pos:line="65" pos:column="33">die<pos:position pos:line="65" pos:column="36"/></name><argument_list pos:line="65" pos:column="36">(<argument><expr><literal type="string" pos:line="65" pos:column="37">"src refspec '%s' must name a ref"<pos:position pos:line="65" pos:column="71"/></literal></expr></argument>,
				    <argument><expr><name><name pos:line="66" pos:column="37">rs<pos:position pos:line="66" pos:column="39"/></name><operator pos:line="66" pos:column="39">-&gt;<pos:position pos:line="66" pos:column="44"/></operator><name pos:line="66" pos:column="41">src<pos:position pos:line="66" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="67" pos:column="26"/></block></switch>
		}<pos:position pos:line="68" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">free_refspec<pos:position pos:line="69" pos:column="29"/></name><argument_list pos:line="69" pos:column="29">(<argument><expr><name pos:line="69" pos:column="30">refspec_nr<pos:position pos:line="69" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="42">refspec<pos:position pos:line="69" pos:column="49"/></name></expr></argument>)<pos:position pos:line="69" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">free<pos:position pos:line="71" pos:column="13"/></name><argument_list pos:line="71" pos:column="13">(<argument><expr><name pos:line="71" pos:column="14">head<pos:position pos:line="71" pos:column="18"/></name></expr></argument>)<pos:position pos:line="71" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="20"/></expr_stmt>

	<return pos:line="73" pos:column="9">return <expr><literal type="number" pos:line="73" pos:column="16">0<pos:position pos:line="73" pos:column="17"/></literal></expr>;<pos:position pos:line="73" pos:column="18"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

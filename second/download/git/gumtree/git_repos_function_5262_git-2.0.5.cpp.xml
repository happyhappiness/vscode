<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5262_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mingw_getcwd<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">pointer<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">int<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">len<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">ret<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><call><name pos:line="4" pos:column="21">getcwd<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument><expr><name pos:line="4" pos:column="28">pointer<pos:position pos:line="4" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="37">len<pos:position pos:line="4" pos:column="40"/></name></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">ret<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><name pos:line="6" pos:column="24">ret<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></return></block></then></if>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name><name pos:line="7" pos:column="21">pointer<pos:position pos:line="7" pos:column="28"/></name><index pos:line="7" pos:column="28">[<expr><name pos:line="7" pos:column="29">i<pos:position pos:line="7" pos:column="30"/></name></expr>]<pos:position pos:line="7" pos:column="31"/></index></name></expr>;<pos:position pos:line="7" pos:column="32"/></condition> <incr><expr><name pos:line="7" pos:column="33">i<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">++<pos:position pos:line="7" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="37"/></control>
		<block type="pseudo"><if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name><name pos:line="8" pos:column="21">pointer<pos:position pos:line="8" pos:column="28"/></name><index pos:line="8" pos:column="28">[<expr><name pos:line="8" pos:column="29">i<pos:position pos:line="8" pos:column="30"/></name></expr>]<pos:position pos:line="8" pos:column="31"/></index></name> <operator pos:line="8" pos:column="32">==<pos:position pos:line="8" pos:column="34"/></operator> <literal type="char" pos:line="8" pos:column="35">'\\'<pos:position pos:line="8" pos:column="39"/></literal></expr>)<pos:position pos:line="8" pos:column="40"/></condition><then pos:line="8" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="25">pointer<pos:position pos:line="9" pos:column="32"/></name><index pos:line="9" pos:column="32">[<expr><name pos:line="9" pos:column="33">i<pos:position pos:line="9" pos:column="34"/></name></expr>]<pos:position pos:line="9" pos:column="35"/></index></name> <operator pos:line="9" pos:column="36">=<pos:position pos:line="9" pos:column="37"/></operator> <literal type="char" pos:line="9" pos:column="38">'/'<pos:position pos:line="9" pos:column="41"/></literal></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt></block></then></if></block></for>
	<return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">ret<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

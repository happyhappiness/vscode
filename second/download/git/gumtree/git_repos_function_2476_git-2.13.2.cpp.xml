<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2476_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_boundary<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">mailinfo<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">mi<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="49">struct<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">strbuf<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">line<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">newline<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><name pos:line="3" pos:column="33">STRBUF_INIT<pos:position pos:line="3" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">strbuf_addch<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><operator pos:line="5" pos:column="22">&amp;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="23">newline<pos:position pos:line="5" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="5" pos:column="32">'\n'<pos:position pos:line="5" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt>
<label><name pos:line="6" pos:column="1">again<pos:position pos:line="6" pos:column="6"/></name>:<pos:position pos:line="6" pos:column="7"/></label>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">line<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">len<pos:position pos:line="7" pos:column="22"/></name></name> <operator pos:line="7" pos:column="23">&gt;=<pos:position pos:line="7" pos:column="28"/></operator> <operator pos:line="7" pos:column="26">(<pos:position pos:line="7" pos:column="27"/></operator><operator pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></operator><operator pos:line="7" pos:column="28">(<pos:position pos:line="7" pos:column="29"/></operator><name><name pos:line="7" pos:column="29">mi<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">content_top<pos:position pos:line="7" pos:column="44"/></name></name><operator pos:line="7" pos:column="44">)<pos:position pos:line="7" pos:column="45"/></operator><operator pos:line="7" pos:column="45">)<pos:position pos:line="7" pos:column="46"/></operator><operator pos:line="7" pos:column="46">-&gt;<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="48">len<pos:position pos:line="7" pos:column="51"/></name> <operator pos:line="7" pos:column="52">+<pos:position pos:line="7" pos:column="53"/></operator> <literal type="number" pos:line="7" pos:column="54">2<pos:position pos:line="7" pos:column="55"/></literal> <operator pos:line="7" pos:column="56">&amp;&amp;<pos:position pos:line="7" pos:column="66"/></operator>
	    <operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">memcmp<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name><name pos:line="8" pos:column="21">line<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">buf<pos:position pos:line="8" pos:column="30"/></name></name> <operator pos:line="8" pos:column="31">+<pos:position pos:line="8" pos:column="32"/></operator> <operator pos:line="8" pos:column="33">(<pos:position pos:line="8" pos:column="34"/></operator><operator pos:line="8" pos:column="34">*<pos:position pos:line="8" pos:column="35"/></operator><operator pos:line="8" pos:column="35">(<pos:position pos:line="8" pos:column="36"/></operator><name><name pos:line="8" pos:column="36">mi<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">content_top<pos:position pos:line="8" pos:column="51"/></name></name><operator pos:line="8" pos:column="51">)<pos:position pos:line="8" pos:column="52"/></operator><operator pos:line="8" pos:column="52">)<pos:position pos:line="8" pos:column="53"/></operator><operator pos:line="8" pos:column="53">-&gt;<pos:position pos:line="8" pos:column="58"/></operator><name pos:line="8" pos:column="55">len<pos:position pos:line="8" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="60">"--"<pos:position pos:line="8" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="66">2<pos:position pos:line="8" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="69"/></condition><then pos:line="8" pos:column="69"> <block pos:line="8" pos:column="70">{
		<comment type="block" pos:line="9" pos:column="17">/* we hit an end boundary */</comment>
		<comment type="block" pos:line="10" pos:column="17">/* pop the current boundary off the stack */</comment>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">strbuf_release<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><operator pos:line="11" pos:column="32">*<pos:position pos:line="11" pos:column="33"/></operator><operator pos:line="11" pos:column="33">(<pos:position pos:line="11" pos:column="34"/></operator><name><name pos:line="11" pos:column="34">mi<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">content_top<pos:position pos:line="11" pos:column="49"/></name></name><operator pos:line="11" pos:column="49">)<pos:position pos:line="11" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">free<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><operator pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></operator><operator pos:line="12" pos:column="23">(<pos:position pos:line="12" pos:column="24"/></operator><name><name pos:line="12" pos:column="24">mi<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">content_top<pos:position pos:line="12" pos:column="39"/></name></name><operator pos:line="12" pos:column="39">)<pos:position pos:line="12" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><operator pos:line="13" pos:column="18">(<pos:position pos:line="13" pos:column="19"/></operator><name><name pos:line="13" pos:column="19">mi<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">content_top<pos:position pos:line="13" pos:column="34"/></name></name><operator pos:line="13" pos:column="34">)<pos:position pos:line="13" pos:column="35"/></operator> <operator pos:line="13" pos:column="36">=<pos:position pos:line="13" pos:column="37"/></operator> <name pos:line="13" pos:column="38">NULL<pos:position pos:line="13" pos:column="42"/></name></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>

		<comment type="block" pos:line="15" pos:column="17">/* technically won't happen as is_multipart_boundary()
		   will fail first.  But just in case..
		 */</comment>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">--<pos:position pos:line="18" pos:column="23"/></operator><name><name pos:line="18" pos:column="23">mi<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">content_top<pos:position pos:line="18" pos:column="38"/></name></name> <operator pos:line="18" pos:column="39">&lt;<pos:position pos:line="18" pos:column="43"/></operator> <name><name pos:line="18" pos:column="41">mi<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">-&gt;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="45">content<pos:position pos:line="18" pos:column="52"/></name></name></expr>)<pos:position pos:line="18" pos:column="53"/></condition><then pos:line="18" pos:column="53"> <block pos:line="18" pos:column="54">{
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">error<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">"Detected mismatched boundaries, can't recover"<pos:position pos:line="19" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="80"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="20" pos:column="25">mi<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">-&gt;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="29">input_error<pos:position pos:line="20" pos:column="40"/></name></name> <operator pos:line="20" pos:column="41">=<pos:position pos:line="20" pos:column="42"/></operator> <operator pos:line="20" pos:column="43">-<pos:position pos:line="20" pos:column="44"/></operator><literal type="number" pos:line="20" pos:column="44">1<pos:position pos:line="20" pos:column="45"/></literal></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="21" pos:column="25">mi<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">-&gt;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="29">content_top<pos:position pos:line="21" pos:column="40"/></name></name> <operator pos:line="21" pos:column="41">=<pos:position pos:line="21" pos:column="42"/></operator> <name><name pos:line="21" pos:column="43">mi<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">content<pos:position pos:line="21" pos:column="54"/></name></name></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt>
			<return pos:line="22" pos:column="25">return <expr><literal type="number" pos:line="22" pos:column="32">0<pos:position pos:line="22" pos:column="33"/></literal></expr>;<pos:position pos:line="22" pos:column="34"/></return>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">handle_filter<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">mi<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="35">&amp;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="36">newline<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">strbuf_release<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><operator pos:line="25" pos:column="32">&amp;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="33">newline<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name><name pos:line="26" pos:column="21">mi<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">-&gt;<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="25">input_error<pos:position pos:line="26" pos:column="36"/></name></name></expr>)<pos:position pos:line="26" pos:column="37"/></condition><then pos:line="26" pos:column="37">
			<block type="pseudo"><return pos:line="27" pos:column="25">return <expr><literal type="number" pos:line="27" pos:column="32">0<pos:position pos:line="27" pos:column="33"/></literal></expr>;<pos:position pos:line="27" pos:column="34"/></return></block></then></if>

		<comment type="block" pos:line="29" pos:column="17">/* skip to the next boundary */</comment>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><call><name pos:line="30" pos:column="22">find_boundary<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name pos:line="30" pos:column="36">mi<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">line<pos:position pos:line="30" pos:column="44"/></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="46"/></condition><then pos:line="30" pos:column="46">
			<block type="pseudo"><return pos:line="31" pos:column="25">return <expr><literal type="number" pos:line="31" pos:column="32">0<pos:position pos:line="31" pos:column="33"/></literal></expr>;<pos:position pos:line="31" pos:column="34"/></return></block></then></if>
		<goto pos:line="32" pos:column="17">goto <name pos:line="32" pos:column="22">again<pos:position pos:line="32" pos:column="27"/></name>;<pos:position pos:line="32" pos:column="28"/></goto>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="35" pos:column="9">/* set some defaults */</comment>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">mi<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">-&gt;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="13">transfer_encoding<pos:position pos:line="36" pos:column="30"/></name></name> <operator pos:line="36" pos:column="31">=<pos:position pos:line="36" pos:column="32"/></operator> <name pos:line="36" pos:column="33">TE_DONTCARE<pos:position pos:line="36" pos:column="44"/></name></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">strbuf_reset<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><operator pos:line="37" pos:column="22">&amp;<pos:position pos:line="37" pos:column="27"/></operator><name><name pos:line="37" pos:column="23">mi<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">-&gt;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="27">charset<pos:position pos:line="37" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>

	<comment type="block" pos:line="39" pos:column="9">/* slurp in this section's info */</comment>
	<while pos:line="40" pos:column="9">while <condition pos:line="40" pos:column="15">(<expr><call><name pos:line="40" pos:column="16">read_one_header_line<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><name pos:line="40" pos:column="37">line<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="43">mi<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">input<pos:position pos:line="40" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="54"/></condition>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">check_header<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name pos:line="41" pos:column="30">mi<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="34">line<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="40">mi<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">p_hdr_data<pos:position pos:line="41" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="56">0<pos:position pos:line="41" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt></block></while>

	<expr_stmt><expr><call><name pos:line="43" pos:column="9">strbuf_release<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><operator pos:line="43" pos:column="24">&amp;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="25">newline<pos:position pos:line="43" pos:column="32"/></name></expr></argument>)<pos:position pos:line="43" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
	<comment type="block" pos:line="44" pos:column="9">/* replenish line */</comment>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">strbuf_getline_lf<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">line<pos:position pos:line="45" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="37">mi<pos:position pos:line="45" pos:column="39"/></name><operator pos:line="45" pos:column="39">-&gt;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="41">input<pos:position pos:line="45" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="48"/></condition><then pos:line="45" pos:column="48">
		<block type="pseudo"><return pos:line="46" pos:column="17">return <expr><literal type="number" pos:line="46" pos:column="24">0<pos:position pos:line="46" pos:column="25"/></literal></expr>;<pos:position pos:line="46" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">strbuf_addch<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">line<pos:position pos:line="47" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="47" pos:column="28">'\n'<pos:position pos:line="47" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="34"/></expr_stmt>
	<return pos:line="48" pos:column="9">return <expr><literal type="number" pos:line="48" pos:column="16">1<pos:position pos:line="48" pos:column="17"/></literal></expr>;<pos:position pos:line="48" pos:column="18"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

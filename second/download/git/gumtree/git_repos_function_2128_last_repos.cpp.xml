<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2128_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">fsck_object<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name><name pos:line="1" pos:column="17">struct<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">object<pos:position pos:line="1" pos:column="30"/></name></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">obj<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">void<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">data<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">unsigned<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">long<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">size<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">fsck_options<pos:position pos:line="2" pos:column="28"/></name></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">options<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">obj<pos:position pos:line="4" pos:column="17"/></name></expr>)<pos:position pos:line="4" pos:column="18"/></condition><then pos:line="4" pos:column="18">
		<block type="pseudo"><return pos:line="5" pos:column="17">return <expr><call><name pos:line="5" pos:column="24">report<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><name pos:line="5" pos:column="31">options<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">obj<pos:position pos:line="5" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="45">FSCK_MSG_BAD_OBJECT_SHA1<pos:position pos:line="5" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="71">"no valid object to fsck"<pos:position pos:line="5" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="98"/></return></block></then></if>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">obj<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">type<pos:position pos:line="7" pos:column="22"/></name></name> <operator pos:line="7" pos:column="23">==<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">OBJ_BLOB<pos:position pos:line="7" pos:column="34"/></name></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">obj<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">type<pos:position pos:line="9" pos:column="22"/></name></name> <operator pos:line="9" pos:column="23">==<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">OBJ_TREE<pos:position pos:line="9" pos:column="34"/></name></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><call><name pos:line="10" pos:column="24">fsck_tree<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><operator pos:line="10" pos:column="34">(<pos:position pos:line="10" pos:column="35"/></operator>struct <name pos:line="10" pos:column="42">tree<pos:position pos:line="10" pos:column="46"/></name> <operator pos:line="10" pos:column="47">*<pos:position pos:line="10" pos:column="48"/></operator><operator pos:line="10" pos:column="48">)<pos:position pos:line="10" pos:column="49"/></operator> <name pos:line="10" pos:column="50">obj<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="55">options<pos:position pos:line="10" pos:column="62"/></name></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></return></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">obj<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">type<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">==<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">OBJ_COMMIT<pos:position pos:line="11" pos:column="36"/></name></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><call><name pos:line="12" pos:column="24">fsck_commit<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><operator pos:line="12" pos:column="36">(<pos:position pos:line="12" pos:column="37"/></operator>struct <name pos:line="12" pos:column="44">commit<pos:position pos:line="12" pos:column="50"/></name> <operator pos:line="12" pos:column="51">*<pos:position pos:line="12" pos:column="52"/></operator><operator pos:line="12" pos:column="52">)<pos:position pos:line="12" pos:column="53"/></operator> <name pos:line="12" pos:column="54">obj<pos:position pos:line="12" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="59">(<pos:position pos:line="12" pos:column="60"/></operator><specifier pos:line="12" pos:column="60">const<pos:position pos:line="12" pos:column="65"/></specifier> <name pos:line="12" pos:column="66">char<pos:position pos:line="12" pos:column="70"/></name> <operator pos:line="12" pos:column="71">*<pos:position pos:line="12" pos:column="72"/></operator><operator pos:line="12" pos:column="72">)<pos:position pos:line="12" pos:column="73"/></operator> <name pos:line="12" pos:column="74">data<pos:position pos:line="12" pos:column="78"/></name></expr></argument>,
			<argument><expr><name pos:line="13" pos:column="25">size<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="31">options<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></return></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">obj<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">type<pos:position pos:line="14" pos:column="22"/></name></name> <operator pos:line="14" pos:column="23">==<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">OBJ_TAG<pos:position pos:line="14" pos:column="33"/></name></expr>)<pos:position pos:line="14" pos:column="34"/></condition><then pos:line="14" pos:column="34">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><call><name pos:line="15" pos:column="24">fsck_tag<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><operator pos:line="15" pos:column="33">(<pos:position pos:line="15" pos:column="34"/></operator>struct <name pos:line="15" pos:column="41">tag<pos:position pos:line="15" pos:column="44"/></name> <operator pos:line="15" pos:column="45">*<pos:position pos:line="15" pos:column="46"/></operator><operator pos:line="15" pos:column="46">)<pos:position pos:line="15" pos:column="47"/></operator> <name pos:line="15" pos:column="48">obj<pos:position pos:line="15" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="53">(<pos:position pos:line="15" pos:column="54"/></operator><specifier pos:line="15" pos:column="54">const<pos:position pos:line="15" pos:column="59"/></specifier> <name pos:line="15" pos:column="60">char<pos:position pos:line="15" pos:column="64"/></name> <operator pos:line="15" pos:column="65">*<pos:position pos:line="15" pos:column="66"/></operator><operator pos:line="15" pos:column="66">)<pos:position pos:line="15" pos:column="67"/></operator> <name pos:line="15" pos:column="68">data<pos:position pos:line="15" pos:column="72"/></name></expr></argument>,
			<argument><expr><name pos:line="16" pos:column="25">size<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="31">options<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></return></block></then></if>

	<return pos:line="18" pos:column="9">return <expr><call><name pos:line="18" pos:column="16">report<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">options<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="32">obj<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="37">FSCK_MSG_UNKNOWN_TYPE<pos:position pos:line="18" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="60">"unknown type '%d' (internal fsck error)"<pos:position pos:line="18" pos:column="101"/></literal></expr></argument>,
			  <argument><expr><name><name pos:line="19" pos:column="27">obj<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">-&gt;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="32">type<pos:position pos:line="19" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

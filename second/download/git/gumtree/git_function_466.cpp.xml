<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_466.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_show_branch<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">ac<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">av<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">prefix<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name><name pos:line="3" pos:column="24">rev<pos:position pos:line="3" pos:column="27"/></name><index pos:line="3" pos:column="27">[<expr><name pos:line="3" pos:column="28">MAX_REVS<pos:position pos:line="3" pos:column="36"/></name></expr>]<pos:position pos:line="3" pos:column="37"/></index></name></decl>, <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="40">commit<pos:position pos:line="3" pos:column="46"/></name></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name><name pos:line="4" pos:column="15">reflog_msg<pos:position pos:line="4" pos:column="25"/></name><index pos:line="4" pos:column="25">[<expr><name pos:line="4" pos:column="26">MAX_REVS<pos:position pos:line="4" pos:column="34"/></name></expr>]<pos:position pos:line="4" pos:column="35"/></index></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit_list<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">list<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><name pos:line="5" pos:column="36">NULL<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="43">seen<pos:position pos:line="5" pos:column="47"/></name> <init pos:line="5" pos:column="48">= <expr><name pos:line="5" pos:column="50">NULL<pos:position pos:line="5" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">int<pos:position pos:line="6" pos:column="21"/></name></type> <name><name pos:line="6" pos:column="22">rev_mask<pos:position pos:line="6" pos:column="30"/></name><index pos:line="6" pos:column="30">[<expr><name pos:line="6" pos:column="31">MAX_REVS<pos:position pos:line="6" pos:column="39"/></name></expr>]<pos:position pos:line="6" pos:column="40"/></index></name></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">num_rev<pos:position pos:line="7" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="22">i<pos:position pos:line="7" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="25">extra<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><literal type="number" pos:line="7" pos:column="33">0<pos:position pos:line="7" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">all_heads<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="28">all_remotes<pos:position pos:line="8" pos:column="39"/></name> <init pos:line="8" pos:column="40">= <expr><literal type="number" pos:line="8" pos:column="42">0<pos:position pos:line="8" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">all_mask<pos:position pos:line="9" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="23">all_revs<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">enum<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">rev_sort_order<pos:position pos:line="10" pos:column="28"/></name></name></type> <name pos:line="10" pos:column="29">sort_order<pos:position pos:line="10" pos:column="39"/></name> <init pos:line="10" pos:column="40">= <expr><name pos:line="10" pos:column="42">REV_SORT_IN_GRAPH_ORDER<pos:position pos:line="10" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name></type> <name><name pos:line="11" pos:column="14">head<pos:position pos:line="11" pos:column="18"/></name><index pos:line="11" pos:column="18">[<expr><literal type="number" pos:line="11" pos:column="19">128<pos:position pos:line="11" pos:column="22"/></literal></expr>]<pos:position pos:line="11" pos:column="23"/></index></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">char<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">head_p<pos:position pos:line="12" pos:column="27"/></name></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">head_len<pos:position pos:line="13" pos:column="21"/></name></decl>;<pos:position pos:line="13" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">struct<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">object_id<pos:position pos:line="14" pos:column="25"/></name></name></type> <name pos:line="14" pos:column="26">head_oid<pos:position pos:line="14" pos:column="34"/></name></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">merge_base<pos:position pos:line="15" pos:column="23"/></name> <init pos:line="15" pos:column="24">= <expr><literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">independent<pos:position pos:line="16" pos:column="24"/></name> <init pos:line="16" pos:column="25">= <expr><literal type="number" pos:line="16" pos:column="27">0<pos:position pos:line="16" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">no_name<pos:position pos:line="17" pos:column="20"/></name> <init pos:line="17" pos:column="21">= <expr><literal type="number" pos:line="17" pos:column="23">0<pos:position pos:line="17" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">int<pos:position pos:line="18" pos:column="12"/></name></type> <name pos:line="18" pos:column="13">sha1_name<pos:position pos:line="18" pos:column="22"/></name> <init pos:line="18" pos:column="23">= <expr><literal type="number" pos:line="18" pos:column="25">0<pos:position pos:line="18" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">int<pos:position pos:line="19" pos:column="12"/></name></type> <name pos:line="19" pos:column="13">shown_merge_point<pos:position pos:line="19" pos:column="30"/></name> <init pos:line="19" pos:column="31">= <expr><literal type="number" pos:line="19" pos:column="33">0<pos:position pos:line="19" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type> <name pos:line="20" pos:column="13">with_current_branch<pos:position pos:line="20" pos:column="32"/></name> <init pos:line="20" pos:column="33">= <expr><literal type="number" pos:line="20" pos:column="35">0<pos:position pos:line="20" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">int<pos:position pos:line="21" pos:column="12"/></name></type> <name pos:line="21" pos:column="13">head_at<pos:position pos:line="21" pos:column="20"/></name> <init pos:line="21" pos:column="21">= <expr><operator pos:line="21" pos:column="23">-<pos:position pos:line="21" pos:column="24"/></operator><literal type="number" pos:line="21" pos:column="24">1<pos:position pos:line="21" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">int<pos:position pos:line="22" pos:column="12"/></name></type> <name pos:line="22" pos:column="13">topics<pos:position pos:line="22" pos:column="19"/></name> <init pos:line="22" pos:column="20">= <expr><literal type="number" pos:line="22" pos:column="22">0<pos:position pos:line="22" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="23" pos:column="9">int<pos:position pos:line="23" pos:column="12"/></name></type> <name pos:line="23" pos:column="13">dense<pos:position pos:line="23" pos:column="18"/></name> <init pos:line="23" pos:column="19">= <expr><literal type="number" pos:line="23" pos:column="21">1<pos:position pos:line="23" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="24" pos:column="9">const<pos:position pos:line="24" pos:column="14"/></specifier> <name pos:line="24" pos:column="15">char<pos:position pos:line="24" pos:column="19"/></name> <modifier pos:line="24" pos:column="20">*<pos:position pos:line="24" pos:column="21"/></modifier></type><name pos:line="24" pos:column="21">reflog_base<pos:position pos:line="24" pos:column="32"/></name> <init pos:line="24" pos:column="33">= <expr><name pos:line="24" pos:column="35">NULL<pos:position pos:line="24" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="25" pos:column="9">struct<pos:position pos:line="25" pos:column="15"/></name> <name pos:line="25" pos:column="16">option<pos:position pos:line="25" pos:column="22"/></name></name></type> <name><name pos:line="25" pos:column="23">builtin_show_branch_options<pos:position pos:line="25" pos:column="50"/></name><index pos:line="25" pos:column="50">[]<pos:position pos:line="25" pos:column="52"/></index></name> <init pos:line="25" pos:column="53">= <expr><block pos:line="25" pos:column="55">{
		<expr><call><name pos:line="26" pos:column="17">OPT_BOOL<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><literal type="char" pos:line="26" pos:column="26">'a'<pos:position pos:line="26" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="31">"all"<pos:position pos:line="26" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="38">&amp;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="39">all_heads<pos:position pos:line="26" pos:column="48"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="27" pos:column="26">N_<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><literal type="string" pos:line="27" pos:column="29">"show remote-tracking and local branches"<pos:position pos:line="27" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr>,
		<expr><call><name pos:line="28" pos:column="17">OPT_BOOL<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><literal type="char" pos:line="28" pos:column="26">'r'<pos:position pos:line="28" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="31">"remotes"<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="42">&amp;<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="43">all_remotes<pos:position pos:line="28" pos:column="54"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="29" pos:column="26">N_<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">"show remote-tracking branches"<pos:position pos:line="29" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr>,
		<expr><call><name pos:line="30" pos:column="17">OPT__COLOR<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><operator pos:line="30" pos:column="28">&amp;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="29">showbranch_use_color<pos:position pos:line="30" pos:column="49"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="31" pos:column="29">N_<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><literal type="string" pos:line="31" pos:column="32">"color '*!+-' corresponding to the branch"<pos:position pos:line="31" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="76"/></argument_list></call></expr>,
		<expr><block pos:line="32" pos:column="17">{ <expr><name pos:line="32" pos:column="19">OPTION_INTEGER<pos:position pos:line="32" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="32" pos:column="35">0<pos:position pos:line="32" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="32" pos:column="38">"more"<pos:position pos:line="32" pos:column="44"/></literal></expr>, <expr><operator pos:line="32" pos:column="46">&amp;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="47">extra<pos:position pos:line="32" pos:column="52"/></name></expr>, <expr><call><name pos:line="32" pos:column="54">N_<pos:position pos:line="32" pos:column="56"/></name><argument_list pos:line="32" pos:column="56">(<argument><expr><literal type="string" pos:line="32" pos:column="57">"n"<pos:position pos:line="32" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="61"/></argument_list></call></expr>,
			    <expr><call><name pos:line="33" pos:column="29">N_<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><literal type="string" pos:line="33" pos:column="32">"show &lt;n&gt; more commits after the common ancestor"<pos:position pos:line="33" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="82"/></argument_list></call></expr>,
			    <expr><name pos:line="34" pos:column="29">PARSE_OPT_OPTARG<pos:position pos:line="34" pos:column="45"/></name></expr>, <expr><name pos:line="34" pos:column="47">NULL<pos:position pos:line="34" pos:column="51"/></name></expr>, <expr><operator pos:line="34" pos:column="53">(<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="54">intptr_t<pos:position pos:line="34" pos:column="62"/></name><operator pos:line="34" pos:column="62">)<pos:position pos:line="34" pos:column="63"/></operator><literal type="number" pos:line="34" pos:column="63">1<pos:position pos:line="34" pos:column="64"/></literal></expr> }<pos:position pos:line="34" pos:column="66"/></block></expr>,
		<expr><call><name pos:line="35" pos:column="17">OPT_SET_INT<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><literal type="number" pos:line="35" pos:column="29">0<pos:position pos:line="35" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="32">"list"<pos:position pos:line="35" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="40">&amp;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="41">extra<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="48">N_<pos:position pos:line="35" pos:column="50"/></name><argument_list pos:line="35" pos:column="50">(<argument><expr><literal type="string" pos:line="35" pos:column="51">"synonym to more=-1"<pos:position pos:line="35" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="35" pos:column="74">-<pos:position pos:line="35" pos:column="75"/></operator><literal type="number" pos:line="35" pos:column="75">1<pos:position pos:line="35" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="77"/></argument_list></call></expr>,
		<expr><call><name pos:line="36" pos:column="17">OPT_BOOL<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><literal type="number" pos:line="36" pos:column="26">0<pos:position pos:line="36" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="29">"no-name"<pos:position pos:line="36" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="36" pos:column="40">&amp;<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="41">no_name<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="50">N_<pos:position pos:line="36" pos:column="52"/></name><argument_list pos:line="36" pos:column="52">(<argument><expr><literal type="string" pos:line="36" pos:column="53">"suppress naming strings"<pos:position pos:line="36" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="80"/></argument_list></call></expr>,
		<expr><call><name pos:line="37" pos:column="17">OPT_BOOL<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><literal type="number" pos:line="37" pos:column="26">0<pos:position pos:line="37" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="29">"current"<pos:position pos:line="37" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="37" pos:column="40">&amp;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="41">with_current_branch<pos:position pos:line="37" pos:column="60"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="38" pos:column="26">N_<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><literal type="string" pos:line="38" pos:column="29">"include the current branch"<pos:position pos:line="38" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="59"/></argument_list></call></expr>,
		<expr><call><name pos:line="39" pos:column="17">OPT_BOOL<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><literal type="number" pos:line="39" pos:column="26">0<pos:position pos:line="39" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="29">"sha1-name"<pos:position pos:line="39" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="39" pos:column="42">&amp;<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="43">sha1_name<pos:position pos:line="39" pos:column="52"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="40" pos:column="26">N_<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><literal type="string" pos:line="40" pos:column="29">"name commits with their object names"<pos:position pos:line="40" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="69"/></argument_list></call></expr>,
		<expr><call><name pos:line="41" pos:column="17">OPT_BOOL<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><literal type="number" pos:line="41" pos:column="26">0<pos:position pos:line="41" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="29">"merge-base"<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="43">&amp;<pos:position pos:line="41" pos:column="48"/></operator><name pos:line="41" pos:column="44">merge_base<pos:position pos:line="41" pos:column="54"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="42" pos:column="26">N_<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><literal type="string" pos:line="42" pos:column="29">"show possible merge bases"<pos:position pos:line="42" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></call></expr>,
		<expr><call><name pos:line="43" pos:column="17">OPT_BOOL<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><literal type="number" pos:line="43" pos:column="26">0<pos:position pos:line="43" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="29">"independent"<pos:position pos:line="43" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="44">&amp;<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="45">independent<pos:position pos:line="43" pos:column="56"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="44" pos:column="29">N_<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><literal type="string" pos:line="44" pos:column="32">"show refs unreachable from any other ref"<pos:position pos:line="44" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="76"/></argument_list></call></expr>,
		<expr><call><name pos:line="45" pos:column="17">OPT_SET_INT<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><literal type="number" pos:line="45" pos:column="29">0<pos:position pos:line="45" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="32">"topo-order"<pos:position pos:line="45" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="46">&amp;<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="47">sort_order<pos:position pos:line="45" pos:column="57"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="46" pos:column="29">N_<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><literal type="string" pos:line="46" pos:column="32">"show commits in topological order"<pos:position pos:line="46" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="68"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="47" pos:column="29">REV_SORT_IN_GRAPH_ORDER<pos:position pos:line="47" pos:column="52"/></name></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>,
		<expr><call><name pos:line="48" pos:column="17">OPT_BOOL<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><literal type="number" pos:line="48" pos:column="26">0<pos:position pos:line="48" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="29">"topics"<pos:position pos:line="48" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="48" pos:column="39">&amp;<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="40">topics<pos:position pos:line="48" pos:column="46"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="49" pos:column="26">N_<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><literal type="string" pos:line="49" pos:column="29">"show only commits not on the first branch"<pos:position pos:line="49" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="74"/></argument_list></call></expr>,
		<expr><call><name pos:line="50" pos:column="17">OPT_SET_INT<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><literal type="number" pos:line="50" pos:column="29">0<pos:position pos:line="50" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="32">"sparse"<pos:position pos:line="50" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="50" pos:column="42">&amp;<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="43">dense<pos:position pos:line="50" pos:column="48"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="51" pos:column="29">N_<pos:position pos:line="51" pos:column="31"/></name><argument_list pos:line="51" pos:column="31">(<argument><expr><literal type="string" pos:line="51" pos:column="32">"show merges reachable from only one tip"<pos:position pos:line="51" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="76">0<pos:position pos:line="51" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="78"/></argument_list></call></expr>,
		<expr><call><name pos:line="52" pos:column="17">OPT_SET_INT<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">(<argument><expr><literal type="number" pos:line="52" pos:column="29">0<pos:position pos:line="52" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="32">"date-order"<pos:position pos:line="52" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="46">&amp;<pos:position pos:line="52" pos:column="51"/></operator><name pos:line="52" pos:column="47">sort_order<pos:position pos:line="52" pos:column="57"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="53" pos:column="29">N_<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><literal type="string" pos:line="53" pos:column="32">"topologically sort, maintaining date order "<pos:position pos:line="53" pos:column="77"/></literal>
			       <literal type="string" pos:line="54" pos:column="32">"where possible"<pos:position pos:line="54" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="55" pos:column="29">REV_SORT_BY_COMMIT_DATE<pos:position pos:line="55" pos:column="52"/></name></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></call></expr>,
		<expr><block pos:line="56" pos:column="17">{ <expr><name pos:line="56" pos:column="19">OPTION_CALLBACK<pos:position pos:line="56" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="56" pos:column="36">'g'<pos:position pos:line="56" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="56" pos:column="41">"reflog"<pos:position pos:line="56" pos:column="49"/></literal></expr>, <expr><operator pos:line="56" pos:column="51">&amp;<pos:position pos:line="56" pos:column="56"/></operator><name pos:line="56" pos:column="52">reflog_base<pos:position pos:line="56" pos:column="63"/></name></expr>, <expr><call><name pos:line="56" pos:column="65">N_<pos:position pos:line="56" pos:column="67"/></name><argument_list pos:line="56" pos:column="67">(<argument><expr><literal type="string" pos:line="56" pos:column="68">"&lt;n&gt;[,&lt;base&gt;]"<pos:position pos:line="56" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="83"/></argument_list></call></expr>,
			    <expr><call><name pos:line="57" pos:column="29">N_<pos:position pos:line="57" pos:column="31"/></name><argument_list pos:line="57" pos:column="31">(<argument><expr><literal type="string" pos:line="57" pos:column="32">"show &lt;n&gt; most recent ref-log entries starting at "<pos:position pos:line="57" pos:column="89"/></literal>
			       <literal type="string" pos:line="58" pos:column="32">"base"<pos:position pos:line="58" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="39"/></argument_list></call></expr>,
			    <expr><name pos:line="59" pos:column="29">PARSE_OPT_OPTARG<pos:position pos:line="59" pos:column="45"/></name> <operator pos:line="59" pos:column="46">|<pos:position pos:line="59" pos:column="47"/></operator> <name pos:line="59" pos:column="48">PARSE_OPT_LITERAL_ARGHELP<pos:position pos:line="59" pos:column="73"/></name></expr>,
			    <expr><name pos:line="60" pos:column="29">parse_reflog_param<pos:position pos:line="60" pos:column="47"/></name></expr> }<pos:position pos:line="60" pos:column="49"/></block></expr>,
		<macro><name pos:line="61" pos:column="17">OPT_END<pos:position pos:line="61" pos:column="24"/></name><argument_list pos:line="61" pos:column="24">()<pos:position pos:line="61" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="62" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="62" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="64" pos:column="9">git_config<pos:position pos:line="64" pos:column="19"/></name><argument_list pos:line="64" pos:column="19">(<argument><expr><name pos:line="64" pos:column="20">git_show_branch_config<pos:position pos:line="64" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="44">NULL<pos:position pos:line="64" pos:column="48"/></name></expr></argument>)<pos:position pos:line="64" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="50"/></expr_stmt>

	<comment type="block" pos:line="66" pos:column="9">/* If nothing is specified, try the default first */</comment>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">ac<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">==<pos:position pos:line="67" pos:column="18"/></operator> <literal type="number" pos:line="67" pos:column="19">1<pos:position pos:line="67" pos:column="20"/></literal> <operator pos:line="67" pos:column="21">&amp;&amp;<pos:position pos:line="67" pos:column="31"/></operator> <name><name pos:line="67" pos:column="24">default_args<pos:position pos:line="67" pos:column="36"/></name><operator pos:line="67" pos:column="36">.<pos:position pos:line="67" pos:column="37"/></operator><name pos:line="67" pos:column="37">argc<pos:position pos:line="67" pos:column="41"/></name></name></expr>)<pos:position pos:line="67" pos:column="42"/></condition><then pos:line="67" pos:column="42"> <block pos:line="67" pos:column="43">{
		<expr_stmt><expr><name pos:line="68" pos:column="17">ac<pos:position pos:line="68" pos:column="19"/></name> <operator pos:line="68" pos:column="20">=<pos:position pos:line="68" pos:column="21"/></operator> <name><name pos:line="68" pos:column="22">default_args<pos:position pos:line="68" pos:column="34"/></name><operator pos:line="68" pos:column="34">.<pos:position pos:line="68" pos:column="35"/></operator><name pos:line="68" pos:column="35">argc<pos:position pos:line="68" pos:column="39"/></name></name></expr>;<pos:position pos:line="68" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="69" pos:column="17">av<pos:position pos:line="69" pos:column="19"/></name> <operator pos:line="69" pos:column="20">=<pos:position pos:line="69" pos:column="21"/></operator> <name><name pos:line="69" pos:column="22">default_args<pos:position pos:line="69" pos:column="34"/></name><operator pos:line="69" pos:column="34">.<pos:position pos:line="69" pos:column="35"/></operator><name pos:line="69" pos:column="35">argv<pos:position pos:line="69" pos:column="39"/></name></name></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="72" pos:column="9">ac<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">=<pos:position pos:line="72" pos:column="13"/></operator> <call><name pos:line="72" pos:column="14">parse_options<pos:position pos:line="72" pos:column="27"/></name><argument_list pos:line="72" pos:column="27">(<argument><expr><name pos:line="72" pos:column="28">ac<pos:position pos:line="72" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="32">av<pos:position pos:line="72" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="36">prefix<pos:position pos:line="72" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="44">builtin_show_branch_options<pos:position pos:line="72" pos:column="71"/></name></expr></argument>,
			   <argument><expr><name pos:line="73" pos:column="28">show_branch_usage<pos:position pos:line="73" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="47">PARSE_OPT_STOP_AT_NON_OPTION<pos:position pos:line="73" pos:column="75"/></name></expr></argument>)<pos:position pos:line="73" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="77"/></expr_stmt>
	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">all_heads<pos:position pos:line="74" pos:column="22"/></name></expr>)<pos:position pos:line="74" pos:column="23"/></condition><then pos:line="74" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="17">all_remotes<pos:position pos:line="75" pos:column="28"/></name> <operator pos:line="75" pos:column="29">=<pos:position pos:line="75" pos:column="30"/></operator> <literal type="number" pos:line="75" pos:column="31">1<pos:position pos:line="75" pos:column="32"/></literal></expr>;<pos:position pos:line="75" pos:column="33"/></expr_stmt></block></then></if>

	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><name pos:line="77" pos:column="13">extra<pos:position pos:line="77" pos:column="18"/></name> <operator pos:line="77" pos:column="19">||<pos:position pos:line="77" pos:column="21"/></operator> <name pos:line="77" pos:column="22">reflog<pos:position pos:line="77" pos:column="28"/></name></expr>)<pos:position pos:line="77" pos:column="29"/></condition><then pos:line="77" pos:column="29"> <block pos:line="77" pos:column="30">{
		<comment type="block" pos:line="78" pos:column="17">/* "listing" mode is incompatible with
		 * independent nor merge-base modes.
		 */</comment>
		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><name pos:line="81" pos:column="21">independent<pos:position pos:line="81" pos:column="32"/></name> <operator pos:line="81" pos:column="33">||<pos:position pos:line="81" pos:column="35"/></operator> <name pos:line="81" pos:column="36">merge_base<pos:position pos:line="81" pos:column="46"/></name></expr>)<pos:position pos:line="81" pos:column="47"/></condition><then pos:line="81" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="25">usage_with_options<pos:position pos:line="82" pos:column="43"/></name><argument_list pos:line="82" pos:column="43">(<argument><expr><name pos:line="82" pos:column="44">show_branch_usage<pos:position pos:line="82" pos:column="61"/></name></expr></argument>,
					   <argument><expr><name pos:line="83" pos:column="44">builtin_show_branch_options<pos:position pos:line="83" pos:column="71"/></name></expr></argument>)<pos:position pos:line="83" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="73"/></expr_stmt></block></then></if>
		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><name pos:line="84" pos:column="21">reflog<pos:position pos:line="84" pos:column="27"/></name> <operator pos:line="84" pos:column="28">&amp;&amp;<pos:position pos:line="84" pos:column="38"/></operator> <operator pos:line="84" pos:column="31">(<pos:position pos:line="84" pos:column="32"/></operator><operator pos:line="84" pos:column="32">(<pos:position pos:line="84" pos:column="33"/></operator><literal type="number" pos:line="84" pos:column="33">0<pos:position pos:line="84" pos:column="34"/></literal> <operator pos:line="84" pos:column="35">&lt;<pos:position pos:line="84" pos:column="39"/></operator> <name pos:line="84" pos:column="37">extra<pos:position pos:line="84" pos:column="42"/></name><operator pos:line="84" pos:column="42">)<pos:position pos:line="84" pos:column="43"/></operator> <operator pos:line="84" pos:column="44">||<pos:position pos:line="84" pos:column="46"/></operator> <name pos:line="84" pos:column="47">all_heads<pos:position pos:line="84" pos:column="56"/></name> <operator pos:line="84" pos:column="57">||<pos:position pos:line="84" pos:column="59"/></operator> <name pos:line="84" pos:column="60">all_remotes<pos:position pos:line="84" pos:column="71"/></name><operator pos:line="84" pos:column="71">)<pos:position pos:line="84" pos:column="72"/></operator></expr>)<pos:position pos:line="84" pos:column="73"/></condition><then pos:line="84" pos:column="73">
			<comment type="block" pos:line="85" pos:column="25">/*
			 * Asking for --more in reflog mode does not
			 * make sense.  --list is Ok.
			 *
			 * Also --all and --remotes do not make sense either.
			 */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="91" pos:column="25">die<pos:position pos:line="91" pos:column="28"/></name><argument_list pos:line="91" pos:column="28">(<argument><expr><literal type="string" pos:line="91" pos:column="29">"--reflog is incompatible with --all, --remotes, "<pos:position pos:line="91" pos:column="79"/></literal>
			    <literal type="string" pos:line="92" pos:column="29">"--independent or --merge-base"<pos:position pos:line="92" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="62"/></expr_stmt></block></then></if>
	}<pos:position pos:line="93" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="95" pos:column="9">/* If nothing is specified, show all branches by default */</comment>
	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">ac<pos:position pos:line="96" pos:column="15"/></name> <operator pos:line="96" pos:column="16">&lt;=<pos:position pos:line="96" pos:column="21"/></operator> <name pos:line="96" pos:column="19">topics<pos:position pos:line="96" pos:column="25"/></name> <operator pos:line="96" pos:column="26">&amp;&amp;<pos:position pos:line="96" pos:column="36"/></operator> <name pos:line="96" pos:column="29">all_heads<pos:position pos:line="96" pos:column="38"/></name> <operator pos:line="96" pos:column="39">+<pos:position pos:line="96" pos:column="40"/></operator> <name pos:line="96" pos:column="41">all_remotes<pos:position pos:line="96" pos:column="52"/></name> <operator pos:line="96" pos:column="53">==<pos:position pos:line="96" pos:column="55"/></operator> <literal type="number" pos:line="96" pos:column="56">0<pos:position pos:line="96" pos:column="57"/></literal></expr>)<pos:position pos:line="96" pos:column="58"/></condition><then pos:line="96" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="17">all_heads<pos:position pos:line="97" pos:column="26"/></name> <operator pos:line="97" pos:column="27">=<pos:position pos:line="97" pos:column="28"/></operator> <literal type="number" pos:line="97" pos:column="29">1<pos:position pos:line="97" pos:column="30"/></literal></expr>;<pos:position pos:line="97" pos:column="31"/></expr_stmt></block></then></if>

	<if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><name pos:line="99" pos:column="13">reflog<pos:position pos:line="99" pos:column="19"/></name></expr>)<pos:position pos:line="99" pos:column="20"/></condition><then pos:line="99" pos:column="20"> <block pos:line="99" pos:column="21">{
		<decl_stmt><decl><type><name><name pos:line="100" pos:column="17">struct<pos:position pos:line="100" pos:column="23"/></name> <name pos:line="100" pos:column="24">object_id<pos:position pos:line="100" pos:column="33"/></name></name></type> <name pos:line="100" pos:column="34">oid<pos:position pos:line="100" pos:column="37"/></name></decl>;<pos:position pos:line="100" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="101" pos:column="17">char<pos:position pos:line="101" pos:column="21"/></name> <modifier pos:line="101" pos:column="22">*<pos:position pos:line="101" pos:column="23"/></modifier></type><name pos:line="101" pos:column="23">ref<pos:position pos:line="101" pos:column="26"/></name></decl>;<pos:position pos:line="101" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="102" pos:column="17">int<pos:position pos:line="102" pos:column="20"/></name></type> <name pos:line="102" pos:column="21">base<pos:position pos:line="102" pos:column="25"/></name> <init pos:line="102" pos:column="26">= <expr><literal type="number" pos:line="102" pos:column="28">0<pos:position pos:line="102" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="102" pos:column="30"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="103" pos:column="17">unsigned<pos:position pos:line="103" pos:column="25"/></name> <name pos:line="103" pos:column="26">int<pos:position pos:line="103" pos:column="29"/></name></type> <name pos:line="103" pos:column="30">flags<pos:position pos:line="103" pos:column="35"/></name> <init pos:line="103" pos:column="36">= <expr><literal type="number" pos:line="103" pos:column="38">0<pos:position pos:line="103" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="103" pos:column="40"/></decl_stmt>

		<if pos:line="105" pos:column="17">if <condition pos:line="105" pos:column="20">(<expr><name pos:line="105" pos:column="21">ac<pos:position pos:line="105" pos:column="23"/></name> <operator pos:line="105" pos:column="24">==<pos:position pos:line="105" pos:column="26"/></operator> <literal type="number" pos:line="105" pos:column="27">0<pos:position pos:line="105" pos:column="28"/></literal></expr>)<pos:position pos:line="105" pos:column="29"/></condition><then pos:line="105" pos:column="29"> <block pos:line="105" pos:column="30">{
			<decl_stmt><decl><specifier pos:line="106" pos:column="25">static<pos:position pos:line="106" pos:column="31"/></specifier> <type><specifier pos:line="106" pos:column="32">const<pos:position pos:line="106" pos:column="37"/></specifier> <name pos:line="106" pos:column="38">char<pos:position pos:line="106" pos:column="42"/></name> <modifier pos:line="106" pos:column="43">*<pos:position pos:line="106" pos:column="44"/></modifier></type><name><name pos:line="106" pos:column="44">fake_av<pos:position pos:line="106" pos:column="51"/></name><index pos:line="106" pos:column="51">[<expr><literal type="number" pos:line="106" pos:column="52">2<pos:position pos:line="106" pos:column="53"/></literal></expr>]<pos:position pos:line="106" pos:column="54"/></index></name></decl>;<pos:position pos:line="106" pos:column="55"/></decl_stmt>

			<expr_stmt><expr><name><name pos:line="108" pos:column="25">fake_av<pos:position pos:line="108" pos:column="32"/></name><index pos:line="108" pos:column="32">[<expr><literal type="number" pos:line="108" pos:column="33">0<pos:position pos:line="108" pos:column="34"/></literal></expr>]<pos:position pos:line="108" pos:column="35"/></index></name> <operator pos:line="108" pos:column="36">=<pos:position pos:line="108" pos:column="37"/></operator> <call><name pos:line="108" pos:column="38">resolve_refdup<pos:position pos:line="108" pos:column="52"/></name><argument_list pos:line="108" pos:column="52">(<argument><expr><literal type="string" pos:line="108" pos:column="53">"HEAD"<pos:position pos:line="108" pos:column="59"/></literal></expr></argument>,
						    <argument><expr><name pos:line="109" pos:column="53">RESOLVE_REF_READING<pos:position pos:line="109" pos:column="72"/></name></expr></argument>,
						    <argument><expr><name><name pos:line="110" pos:column="53">oid<pos:position pos:line="110" pos:column="56"/></name><operator pos:line="110" pos:column="56">.<pos:position pos:line="110" pos:column="57"/></operator><name pos:line="110" pos:column="57">hash<pos:position pos:line="110" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="63">NULL<pos:position pos:line="110" pos:column="67"/></name></expr></argument>)<pos:position pos:line="110" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="111" pos:column="25">fake_av<pos:position pos:line="111" pos:column="32"/></name><index pos:line="111" pos:column="32">[<expr><literal type="number" pos:line="111" pos:column="33">1<pos:position pos:line="111" pos:column="34"/></literal></expr>]<pos:position pos:line="111" pos:column="35"/></index></name> <operator pos:line="111" pos:column="36">=<pos:position pos:line="111" pos:column="37"/></operator> <name pos:line="111" pos:column="38">NULL<pos:position pos:line="111" pos:column="42"/></name></expr>;<pos:position pos:line="111" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="112" pos:column="25">av<pos:position pos:line="112" pos:column="27"/></name> <operator pos:line="112" pos:column="28">=<pos:position pos:line="112" pos:column="29"/></operator> <name pos:line="112" pos:column="30">fake_av<pos:position pos:line="112" pos:column="37"/></name></expr>;<pos:position pos:line="112" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><name pos:line="113" pos:column="25">ac<pos:position pos:line="113" pos:column="27"/></name> <operator pos:line="113" pos:column="28">=<pos:position pos:line="113" pos:column="29"/></operator> <literal type="number" pos:line="113" pos:column="30">1<pos:position pos:line="113" pos:column="31"/></literal></expr>;<pos:position pos:line="113" pos:column="32"/></expr_stmt>
			<if pos:line="114" pos:column="25">if <condition pos:line="114" pos:column="28">(<expr><operator pos:line="114" pos:column="29">!<pos:position pos:line="114" pos:column="30"/></operator><operator pos:line="114" pos:column="30">*<pos:position pos:line="114" pos:column="31"/></operator><name pos:line="114" pos:column="31">av<pos:position pos:line="114" pos:column="33"/></name></expr>)<pos:position pos:line="114" pos:column="34"/></condition><then pos:line="114" pos:column="34">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="33">die<pos:position pos:line="115" pos:column="36"/></name><argument_list pos:line="115" pos:column="36">(<argument><expr><literal type="string" pos:line="115" pos:column="37">"no branches given, and HEAD is not valid"<pos:position pos:line="115" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="81"/></expr_stmt></block></then></if>
		}<pos:position pos:line="116" pos:column="18"/></block></then></if>
		<if pos:line="117" pos:column="17">if <condition pos:line="117" pos:column="20">(<expr><name pos:line="117" pos:column="21">ac<pos:position pos:line="117" pos:column="23"/></name> <operator pos:line="117" pos:column="24">!=<pos:position pos:line="117" pos:column="26"/></operator> <literal type="number" pos:line="117" pos:column="27">1<pos:position pos:line="117" pos:column="28"/></literal></expr>)<pos:position pos:line="117" pos:column="29"/></condition><then pos:line="117" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="118" pos:column="25">die<pos:position pos:line="118" pos:column="28"/></name><argument_list pos:line="118" pos:column="28">(<argument><expr><literal type="string" pos:line="118" pos:column="29">"--reflog option needs one branch name"<pos:position pos:line="118" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="70"/></expr_stmt></block></then></if>

		<if pos:line="120" pos:column="17">if <condition pos:line="120" pos:column="20">(<expr><name pos:line="120" pos:column="21">MAX_REVS<pos:position pos:line="120" pos:column="29"/></name> <operator pos:line="120" pos:column="30">&lt;<pos:position pos:line="120" pos:column="34"/></operator> <name pos:line="120" pos:column="32">reflog<pos:position pos:line="120" pos:column="38"/></name></expr>)<pos:position pos:line="120" pos:column="39"/></condition><then pos:line="120" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="121" pos:column="25">die<pos:position pos:line="121" pos:column="28"/></name><argument_list pos:line="121" pos:column="28">(<argument><expr><literal type="string" pos:line="121" pos:column="29">"Only %d entries can be shown at one time."<pos:position pos:line="121" pos:column="72"/></literal></expr></argument>,
			    <argument><expr><name pos:line="122" pos:column="29">MAX_REVS<pos:position pos:line="122" pos:column="37"/></name></expr></argument>)<pos:position pos:line="122" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="39"/></expr_stmt></block></then></if>
		<if pos:line="123" pos:column="17">if <condition pos:line="123" pos:column="20">(<expr><operator pos:line="123" pos:column="21">!<pos:position pos:line="123" pos:column="22"/></operator><call><name pos:line="123" pos:column="22">dwim_ref<pos:position pos:line="123" pos:column="30"/></name><argument_list pos:line="123" pos:column="30">(<argument><expr><operator pos:line="123" pos:column="31">*<pos:position pos:line="123" pos:column="32"/></operator><name pos:line="123" pos:column="32">av<pos:position pos:line="123" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="123" pos:column="36">strlen<pos:position pos:line="123" pos:column="42"/></name><argument_list pos:line="123" pos:column="42">(<argument><expr><operator pos:line="123" pos:column="43">*<pos:position pos:line="123" pos:column="44"/></operator><name pos:line="123" pos:column="44">av<pos:position pos:line="123" pos:column="46"/></name></expr></argument>)<pos:position pos:line="123" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="49">oid<pos:position pos:line="123" pos:column="52"/></name><operator pos:line="123" pos:column="52">.<pos:position pos:line="123" pos:column="53"/></operator><name pos:line="123" pos:column="53">hash<pos:position pos:line="123" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="123" pos:column="59">&amp;<pos:position pos:line="123" pos:column="64"/></operator><name pos:line="123" pos:column="60">ref<pos:position pos:line="123" pos:column="63"/></name></expr></argument>)<pos:position pos:line="123" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="123" pos:column="65"/></condition><then pos:line="123" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="124" pos:column="25">die<pos:position pos:line="124" pos:column="28"/></name><argument_list pos:line="124" pos:column="28">(<argument><expr><literal type="string" pos:line="124" pos:column="29">"No such ref %s"<pos:position pos:line="124" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="124" pos:column="47">*<pos:position pos:line="124" pos:column="48"/></operator><name pos:line="124" pos:column="48">av<pos:position pos:line="124" pos:column="50"/></name></expr></argument>)<pos:position pos:line="124" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="52"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="126" pos:column="17">/* Has the base been specified? */</comment>
		<if pos:line="127" pos:column="17">if <condition pos:line="127" pos:column="20">(<expr><name pos:line="127" pos:column="21">reflog_base<pos:position pos:line="127" pos:column="32"/></name></expr>)<pos:position pos:line="127" pos:column="33"/></condition><then pos:line="127" pos:column="33"> <block pos:line="127" pos:column="34">{
			<decl_stmt><decl><type><name pos:line="128" pos:column="25">char<pos:position pos:line="128" pos:column="29"/></name> <modifier pos:line="128" pos:column="30">*<pos:position pos:line="128" pos:column="31"/></modifier></type><name pos:line="128" pos:column="31">ep<pos:position pos:line="128" pos:column="33"/></name></decl>;<pos:position pos:line="128" pos:column="34"/></decl_stmt>
			<expr_stmt><expr><name pos:line="129" pos:column="25">base<pos:position pos:line="129" pos:column="29"/></name> <operator pos:line="129" pos:column="30">=<pos:position pos:line="129" pos:column="31"/></operator> <call><name pos:line="129" pos:column="32">strtoul<pos:position pos:line="129" pos:column="39"/></name><argument_list pos:line="129" pos:column="39">(<argument><expr><name pos:line="129" pos:column="40">reflog_base<pos:position pos:line="129" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="129" pos:column="53">&amp;<pos:position pos:line="129" pos:column="58"/></operator><name pos:line="129" pos:column="54">ep<pos:position pos:line="129" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="58">10<pos:position pos:line="129" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="62"/></expr_stmt>
			<if pos:line="130" pos:column="25">if <condition pos:line="130" pos:column="28">(<expr><operator pos:line="130" pos:column="29">*<pos:position pos:line="130" pos:column="30"/></operator><name pos:line="130" pos:column="30">ep<pos:position pos:line="130" pos:column="32"/></name></expr>)<pos:position pos:line="130" pos:column="33"/></condition><then pos:line="130" pos:column="33"> <block pos:line="130" pos:column="34">{
				<comment type="block" pos:line="131" pos:column="33">/* Ah, that is a date spec... */</comment>
				<decl_stmt><decl><type><name pos:line="132" pos:column="33">unsigned<pos:position pos:line="132" pos:column="41"/></name> <name pos:line="132" pos:column="42">long<pos:position pos:line="132" pos:column="46"/></name></type> <name pos:line="132" pos:column="47">at<pos:position pos:line="132" pos:column="49"/></name></decl>;<pos:position pos:line="132" pos:column="50"/></decl_stmt>
				<expr_stmt><expr><name pos:line="133" pos:column="33">at<pos:position pos:line="133" pos:column="35"/></name> <operator pos:line="133" pos:column="36">=<pos:position pos:line="133" pos:column="37"/></operator> <call><name pos:line="133" pos:column="38">approxidate<pos:position pos:line="133" pos:column="49"/></name><argument_list pos:line="133" pos:column="49">(<argument><expr><name pos:line="133" pos:column="50">reflog_base<pos:position pos:line="133" pos:column="61"/></name></expr></argument>)<pos:position pos:line="133" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="134" pos:column="33">read_ref_at<pos:position pos:line="134" pos:column="44"/></name><argument_list pos:line="134" pos:column="44">(<argument><expr><name pos:line="134" pos:column="45">ref<pos:position pos:line="134" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="50">flags<pos:position pos:line="134" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="57">at<pos:position pos:line="134" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="134" pos:column="61">-<pos:position pos:line="134" pos:column="62"/></operator><literal type="number" pos:line="134" pos:column="62">1<pos:position pos:line="134" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="65">oid<pos:position pos:line="134" pos:column="68"/></name><operator pos:line="134" pos:column="68">.<pos:position pos:line="134" pos:column="69"/></operator><name pos:line="134" pos:column="69">hash<pos:position pos:line="134" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="75">NULL<pos:position pos:line="134" pos:column="79"/></name></expr></argument>,
					    <argument><expr><name pos:line="135" pos:column="45">NULL<pos:position pos:line="135" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="51">NULL<pos:position pos:line="135" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="135" pos:column="57">&amp;<pos:position pos:line="135" pos:column="62"/></operator><name pos:line="135" pos:column="58">base<pos:position pos:line="135" pos:column="62"/></name></expr></argument>)<pos:position pos:line="135" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="64"/></expr_stmt>
			}<pos:position pos:line="136" pos:column="26"/></block></then></if>
		}<pos:position pos:line="137" pos:column="18"/></block></then></if>

		<for pos:line="139" pos:column="17">for <control pos:line="139" pos:column="21">(<init><expr><name pos:line="139" pos:column="22">i<pos:position pos:line="139" pos:column="23"/></name> <operator pos:line="139" pos:column="24">=<pos:position pos:line="139" pos:column="25"/></operator> <literal type="number" pos:line="139" pos:column="26">0<pos:position pos:line="139" pos:column="27"/></literal></expr>;<pos:position pos:line="139" pos:column="28"/></init> <condition><expr><name pos:line="139" pos:column="29">i<pos:position pos:line="139" pos:column="30"/></name> <operator pos:line="139" pos:column="31">&lt;<pos:position pos:line="139" pos:column="35"/></operator> <name pos:line="139" pos:column="33">reflog<pos:position pos:line="139" pos:column="39"/></name></expr>;<pos:position pos:line="139" pos:column="40"/></condition> <incr><expr><name pos:line="139" pos:column="41">i<pos:position pos:line="139" pos:column="42"/></name><operator pos:line="139" pos:column="42">++<pos:position pos:line="139" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="139" pos:column="45"/></control> <block pos:line="139" pos:column="46">{
			<decl_stmt><decl><type><name pos:line="140" pos:column="25">char<pos:position pos:line="140" pos:column="29"/></name> <modifier pos:line="140" pos:column="30">*<pos:position pos:line="140" pos:column="31"/></modifier></type><name pos:line="140" pos:column="31">logmsg<pos:position pos:line="140" pos:column="37"/></name></decl>;<pos:position pos:line="140" pos:column="38"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="141" pos:column="25">char<pos:position pos:line="141" pos:column="29"/></name> <modifier pos:line="141" pos:column="30">*<pos:position pos:line="141" pos:column="31"/></modifier></type><name pos:line="141" pos:column="31">nth_desc<pos:position pos:line="141" pos:column="39"/></name></decl>;<pos:position pos:line="141" pos:column="40"/></decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="142" pos:column="25">const<pos:position pos:line="142" pos:column="30"/></specifier> <name pos:line="142" pos:column="31">char<pos:position pos:line="142" pos:column="35"/></name> <modifier pos:line="142" pos:column="36">*<pos:position pos:line="142" pos:column="37"/></modifier></type><name pos:line="142" pos:column="37">msg<pos:position pos:line="142" pos:column="40"/></name></decl>;<pos:position pos:line="142" pos:column="41"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="143" pos:column="25">unsigned<pos:position pos:line="143" pos:column="33"/></name> <name pos:line="143" pos:column="34">long<pos:position pos:line="143" pos:column="38"/></name></type> <name pos:line="143" pos:column="39">timestamp<pos:position pos:line="143" pos:column="48"/></name></decl>;<pos:position pos:line="143" pos:column="49"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="144" pos:column="25">int<pos:position pos:line="144" pos:column="28"/></name></type> <name pos:line="144" pos:column="29">tz<pos:position pos:line="144" pos:column="31"/></name></decl>;<pos:position pos:line="144" pos:column="32"/></decl_stmt>

			<if pos:line="146" pos:column="25">if <condition pos:line="146" pos:column="28">(<expr><call><name pos:line="146" pos:column="29">read_ref_at<pos:position pos:line="146" pos:column="40"/></name><argument_list pos:line="146" pos:column="40">(<argument><expr><name pos:line="146" pos:column="41">ref<pos:position pos:line="146" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="46">flags<pos:position pos:line="146" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="146" pos:column="53">0<pos:position pos:line="146" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="146" pos:column="56">base<pos:position pos:line="146" pos:column="60"/></name><operator pos:line="146" pos:column="60">+<pos:position pos:line="146" pos:column="61"/></operator><name pos:line="146" pos:column="61">i<pos:position pos:line="146" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="146" pos:column="64">oid<pos:position pos:line="146" pos:column="67"/></name><operator pos:line="146" pos:column="67">.<pos:position pos:line="146" pos:column="68"/></operator><name pos:line="146" pos:column="68">hash<pos:position pos:line="146" pos:column="72"/></name></name></expr></argument>, <argument><expr><operator pos:line="146" pos:column="74">&amp;<pos:position pos:line="146" pos:column="79"/></operator><name pos:line="146" pos:column="75">logmsg<pos:position pos:line="146" pos:column="81"/></name></expr></argument>,
					<argument><expr><operator pos:line="147" pos:column="41">&amp;<pos:position pos:line="147" pos:column="46"/></operator><name pos:line="147" pos:column="42">timestamp<pos:position pos:line="147" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="147" pos:column="53">&amp;<pos:position pos:line="147" pos:column="58"/></operator><name pos:line="147" pos:column="54">tz<pos:position pos:line="147" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="58">NULL<pos:position pos:line="147" pos:column="62"/></name></expr></argument>)<pos:position pos:line="147" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="147" pos:column="64"/></condition><then pos:line="147" pos:column="64"> <block pos:line="147" pos:column="65">{
				<expr_stmt><expr><name pos:line="148" pos:column="33">reflog<pos:position pos:line="148" pos:column="39"/></name> <operator pos:line="148" pos:column="40">=<pos:position pos:line="148" pos:column="41"/></operator> <name pos:line="148" pos:column="42">i<pos:position pos:line="148" pos:column="43"/></name></expr>;<pos:position pos:line="148" pos:column="44"/></expr_stmt>
				<break pos:line="149" pos:column="33">break;<pos:position pos:line="149" pos:column="39"/></break>
			}<pos:position pos:line="150" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="151" pos:column="25">msg<pos:position pos:line="151" pos:column="28"/></name> <operator pos:line="151" pos:column="29">=<pos:position pos:line="151" pos:column="30"/></operator> <call><name pos:line="151" pos:column="31">strchr<pos:position pos:line="151" pos:column="37"/></name><argument_list pos:line="151" pos:column="37">(<argument><expr><name pos:line="151" pos:column="38">logmsg<pos:position pos:line="151" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="151" pos:column="46">'\t'<pos:position pos:line="151" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="52"/></expr_stmt>
			<if pos:line="152" pos:column="25">if <condition pos:line="152" pos:column="28">(<expr><operator pos:line="152" pos:column="29">!<pos:position pos:line="152" pos:column="30"/></operator><name pos:line="152" pos:column="30">msg<pos:position pos:line="152" pos:column="33"/></name></expr>)<pos:position pos:line="152" pos:column="34"/></condition><then pos:line="152" pos:column="34">
				<block type="pseudo"><expr_stmt><expr><name pos:line="153" pos:column="33">msg<pos:position pos:line="153" pos:column="36"/></name> <operator pos:line="153" pos:column="37">=<pos:position pos:line="153" pos:column="38"/></operator> <literal type="string" pos:line="153" pos:column="39">"(none)"<pos:position pos:line="153" pos:column="47"/></literal></expr>;<pos:position pos:line="153" pos:column="48"/></expr_stmt></block></then>
			<else pos:line="154" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="155" pos:column="33">msg<pos:position pos:line="155" pos:column="36"/></name><operator pos:line="155" pos:column="36">++<pos:position pos:line="155" pos:column="38"/></operator></expr>;<pos:position pos:line="155" pos:column="39"/></expr_stmt></block></else></if>
			<expr_stmt><expr><name><name pos:line="156" pos:column="25">reflog_msg<pos:position pos:line="156" pos:column="35"/></name><index pos:line="156" pos:column="35">[<expr><name pos:line="156" pos:column="36">i<pos:position pos:line="156" pos:column="37"/></name></expr>]<pos:position pos:line="156" pos:column="38"/></index></name> <operator pos:line="156" pos:column="39">=<pos:position pos:line="156" pos:column="40"/></operator> <call><name pos:line="156" pos:column="41">xstrfmt<pos:position pos:line="156" pos:column="48"/></name><argument_list pos:line="156" pos:column="48">(<argument><expr><literal type="string" pos:line="156" pos:column="49">"(%s) %s"<pos:position pos:line="156" pos:column="58"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="157" pos:column="49">show_date<pos:position pos:line="157" pos:column="58"/></name><argument_list pos:line="157" pos:column="58">(<argument><expr><name pos:line="157" pos:column="59">timestamp<pos:position pos:line="157" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="70">tz<pos:position pos:line="157" pos:column="72"/></name></expr></argument>,
							  <argument><expr><call><name pos:line="158" pos:column="59">DATE_MODE<pos:position pos:line="158" pos:column="68"/></name><argument_list pos:line="158" pos:column="68">(<argument><expr><name pos:line="158" pos:column="69">RELATIVE<pos:position pos:line="158" pos:column="77"/></name></expr></argument>)<pos:position pos:line="158" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="158" pos:column="79"/></argument_list></call></expr></argument>,
						<argument><expr><name pos:line="159" pos:column="49">msg<pos:position pos:line="159" pos:column="52"/></name></expr></argument>)<pos:position pos:line="159" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="160" pos:column="25">free<pos:position pos:line="160" pos:column="29"/></name><argument_list pos:line="160" pos:column="29">(<argument><expr><name pos:line="160" pos:column="30">logmsg<pos:position pos:line="160" pos:column="36"/></name></expr></argument>)<pos:position pos:line="160" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="38"/></expr_stmt>

			<expr_stmt><expr><name pos:line="162" pos:column="25">nth_desc<pos:position pos:line="162" pos:column="33"/></name> <operator pos:line="162" pos:column="34">=<pos:position pos:line="162" pos:column="35"/></operator> <call><name pos:line="162" pos:column="36">xstrfmt<pos:position pos:line="162" pos:column="43"/></name><argument_list pos:line="162" pos:column="43">(<argument><expr><literal type="string" pos:line="162" pos:column="44">"%s@{%d}"<pos:position pos:line="162" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="162" pos:column="55">*<pos:position pos:line="162" pos:column="56"/></operator><name pos:line="162" pos:column="56">av<pos:position pos:line="162" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="60">base<pos:position pos:line="162" pos:column="64"/></name><operator pos:line="162" pos:column="64">+<pos:position pos:line="162" pos:column="65"/></operator><name pos:line="162" pos:column="65">i<pos:position pos:line="162" pos:column="66"/></name></expr></argument>)<pos:position pos:line="162" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="163" pos:column="25">append_ref<pos:position pos:line="163" pos:column="35"/></name><argument_list pos:line="163" pos:column="35">(<argument><expr><name pos:line="163" pos:column="36">nth_desc<pos:position pos:line="163" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="163" pos:column="46">&amp;<pos:position pos:line="163" pos:column="51"/></operator><name pos:line="163" pos:column="47">oid<pos:position pos:line="163" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="52">1<pos:position pos:line="163" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="164" pos:column="25">free<pos:position pos:line="164" pos:column="29"/></name><argument_list pos:line="164" pos:column="29">(<argument><expr><name pos:line="164" pos:column="30">nth_desc<pos:position pos:line="164" pos:column="38"/></name></expr></argument>)<pos:position pos:line="164" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="165" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="166" pos:column="17">free<pos:position pos:line="166" pos:column="21"/></name><argument_list pos:line="166" pos:column="21">(<argument><expr><name pos:line="166" pos:column="22">ref<pos:position pos:line="166" pos:column="25"/></name></expr></argument>)<pos:position pos:line="166" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="167" pos:column="10"/></block></then>
	<else pos:line="168" pos:column="9">else <block pos:line="168" pos:column="14">{
		<while pos:line="169" pos:column="17">while <condition pos:line="169" pos:column="23">(<expr><literal type="number" pos:line="169" pos:column="24">0<pos:position pos:line="169" pos:column="25"/></literal> <operator pos:line="169" pos:column="26">&lt;<pos:position pos:line="169" pos:column="30"/></operator> <name pos:line="169" pos:column="28">ac<pos:position pos:line="169" pos:column="30"/></name></expr>)<pos:position pos:line="169" pos:column="31"/></condition> <block pos:line="169" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="170" pos:column="25">append_one_rev<pos:position pos:line="170" pos:column="39"/></name><argument_list pos:line="170" pos:column="39">(<argument><expr><operator pos:line="170" pos:column="40">*<pos:position pos:line="170" pos:column="41"/></operator><name pos:line="170" pos:column="41">av<pos:position pos:line="170" pos:column="43"/></name></expr></argument>)<pos:position pos:line="170" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="171" pos:column="25">ac<pos:position pos:line="171" pos:column="27"/></name><operator pos:line="171" pos:column="27">--<pos:position pos:line="171" pos:column="29"/></operator></expr>;<pos:position pos:line="171" pos:column="30"/></expr_stmt> <expr_stmt><expr><name pos:line="171" pos:column="31">av<pos:position pos:line="171" pos:column="33"/></name><operator pos:line="171" pos:column="33">++<pos:position pos:line="171" pos:column="35"/></operator></expr>;<pos:position pos:line="171" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="172" pos:column="18"/></block></while>
		<if pos:line="173" pos:column="17">if <condition pos:line="173" pos:column="20">(<expr><name pos:line="173" pos:column="21">all_heads<pos:position pos:line="173" pos:column="30"/></name> <operator pos:line="173" pos:column="31">+<pos:position pos:line="173" pos:column="32"/></operator> <name pos:line="173" pos:column="33">all_remotes<pos:position pos:line="173" pos:column="44"/></name></expr>)<pos:position pos:line="173" pos:column="45"/></condition><then pos:line="173" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="174" pos:column="25">snarf_refs<pos:position pos:line="174" pos:column="35"/></name><argument_list pos:line="174" pos:column="35">(<argument><expr><name pos:line="174" pos:column="36">all_heads<pos:position pos:line="174" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="47">all_remotes<pos:position pos:line="174" pos:column="58"/></name></expr></argument>)<pos:position pos:line="174" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="60"/></expr_stmt></block></then></if>
	}<pos:position pos:line="175" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="177" pos:column="9">head_p<pos:position pos:line="177" pos:column="15"/></name> <operator pos:line="177" pos:column="16">=<pos:position pos:line="177" pos:column="17"/></operator> <call><name pos:line="177" pos:column="18">resolve_ref_unsafe<pos:position pos:line="177" pos:column="36"/></name><argument_list pos:line="177" pos:column="36">(<argument><expr><literal type="string" pos:line="177" pos:column="37">"HEAD"<pos:position pos:line="177" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="177" pos:column="45">RESOLVE_REF_READING<pos:position pos:line="177" pos:column="64"/></name></expr></argument>,
				    <argument><expr><name><name pos:line="178" pos:column="37">head_oid<pos:position pos:line="178" pos:column="45"/></name><operator pos:line="178" pos:column="45">.<pos:position pos:line="178" pos:column="46"/></operator><name pos:line="178" pos:column="46">hash<pos:position pos:line="178" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="52">NULL<pos:position pos:line="178" pos:column="56"/></name></expr></argument>)<pos:position pos:line="178" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="58"/></expr_stmt>
	<if pos:line="179" pos:column="9">if <condition pos:line="179" pos:column="12">(<expr><name pos:line="179" pos:column="13">head_p<pos:position pos:line="179" pos:column="19"/></name></expr>)<pos:position pos:line="179" pos:column="20"/></condition><then pos:line="179" pos:column="20"> <block pos:line="179" pos:column="21">{
		<expr_stmt><expr><name pos:line="180" pos:column="17">head_len<pos:position pos:line="180" pos:column="25"/></name> <operator pos:line="180" pos:column="26">=<pos:position pos:line="180" pos:column="27"/></operator> <call><name pos:line="180" pos:column="28">strlen<pos:position pos:line="180" pos:column="34"/></name><argument_list pos:line="180" pos:column="34">(<argument><expr><name pos:line="180" pos:column="35">head_p<pos:position pos:line="180" pos:column="41"/></name></expr></argument>)<pos:position pos:line="180" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="181" pos:column="17">memcpy<pos:position pos:line="181" pos:column="23"/></name><argument_list pos:line="181" pos:column="23">(<argument><expr><name pos:line="181" pos:column="24">head<pos:position pos:line="181" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="30">head_p<pos:position pos:line="181" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="38">head_len<pos:position pos:line="181" pos:column="46"/></name> <operator pos:line="181" pos:column="47">+<pos:position pos:line="181" pos:column="48"/></operator> <literal type="number" pos:line="181" pos:column="49">1<pos:position pos:line="181" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="182" pos:column="10"/></block></then>
	<else pos:line="183" pos:column="9">else <block pos:line="183" pos:column="14">{
		<expr_stmt><expr><name pos:line="184" pos:column="17">head_len<pos:position pos:line="184" pos:column="25"/></name> <operator pos:line="184" pos:column="26">=<pos:position pos:line="184" pos:column="27"/></operator> <literal type="number" pos:line="184" pos:column="28">0<pos:position pos:line="184" pos:column="29"/></literal></expr>;<pos:position pos:line="184" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="185" pos:column="17">head<pos:position pos:line="185" pos:column="21"/></name><index pos:line="185" pos:column="21">[<expr><literal type="number" pos:line="185" pos:column="22">0<pos:position pos:line="185" pos:column="23"/></literal></expr>]<pos:position pos:line="185" pos:column="24"/></index></name> <operator pos:line="185" pos:column="25">=<pos:position pos:line="185" pos:column="26"/></operator> <literal type="number" pos:line="185" pos:column="27">0<pos:position pos:line="185" pos:column="28"/></literal></expr>;<pos:position pos:line="185" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="186" pos:column="10"/></block></else></if>

	<if pos:line="188" pos:column="9">if <condition pos:line="188" pos:column="12">(<expr><name pos:line="188" pos:column="13">with_current_branch<pos:position pos:line="188" pos:column="32"/></name> <operator pos:line="188" pos:column="33">&amp;&amp;<pos:position pos:line="188" pos:column="43"/></operator> <name pos:line="188" pos:column="36">head_p<pos:position pos:line="188" pos:column="42"/></name></expr>)<pos:position pos:line="188" pos:column="43"/></condition><then pos:line="188" pos:column="43"> <block pos:line="188" pos:column="44">{
		<decl_stmt><decl><type><name pos:line="189" pos:column="17">int<pos:position pos:line="189" pos:column="20"/></name></type> <name pos:line="189" pos:column="21">has_head<pos:position pos:line="189" pos:column="29"/></name> <init pos:line="189" pos:column="30">= <expr><literal type="number" pos:line="189" pos:column="32">0<pos:position pos:line="189" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="189" pos:column="34"/></decl_stmt>
		<for pos:line="190" pos:column="17">for <control pos:line="190" pos:column="21">(<init><expr><name pos:line="190" pos:column="22">i<pos:position pos:line="190" pos:column="23"/></name> <operator pos:line="190" pos:column="24">=<pos:position pos:line="190" pos:column="25"/></operator> <literal type="number" pos:line="190" pos:column="26">0<pos:position pos:line="190" pos:column="27"/></literal></expr>;<pos:position pos:line="190" pos:column="28"/></init> <condition><expr><operator pos:line="190" pos:column="29">!<pos:position pos:line="190" pos:column="30"/></operator><name pos:line="190" pos:column="30">has_head<pos:position pos:line="190" pos:column="38"/></name> <operator pos:line="190" pos:column="39">&amp;&amp;<pos:position pos:line="190" pos:column="49"/></operator> <name pos:line="190" pos:column="42">i<pos:position pos:line="190" pos:column="43"/></name> <operator pos:line="190" pos:column="44">&lt;<pos:position pos:line="190" pos:column="48"/></operator> <name pos:line="190" pos:column="46">ref_name_cnt<pos:position pos:line="190" pos:column="58"/></name></expr>;<pos:position pos:line="190" pos:column="59"/></condition> <incr><expr><name pos:line="190" pos:column="60">i<pos:position pos:line="190" pos:column="61"/></name><operator pos:line="190" pos:column="61">++<pos:position pos:line="190" pos:column="63"/></operator></expr></incr>)<pos:position pos:line="190" pos:column="64"/></control> <block pos:line="190" pos:column="65">{
			<comment type="block" pos:line="191" pos:column="25">/* We are only interested in adding the branch
			 * HEAD points at.
			 */</comment>
			<if pos:line="194" pos:column="25">if <condition pos:line="194" pos:column="28">(<expr><call><name pos:line="194" pos:column="29">rev_is_head<pos:position pos:line="194" pos:column="40"/></name><argument_list pos:line="194" pos:column="40">(<argument><expr><name pos:line="194" pos:column="41">head<pos:position pos:line="194" pos:column="45"/></name></expr></argument>,
					<argument><expr><name pos:line="195" pos:column="41">head_len<pos:position pos:line="195" pos:column="49"/></name></expr></argument>,
					<argument><expr><name><name pos:line="196" pos:column="41">ref_name<pos:position pos:line="196" pos:column="49"/></name><index pos:line="196" pos:column="49">[<expr><name pos:line="196" pos:column="50">i<pos:position pos:line="196" pos:column="51"/></name></expr>]<pos:position pos:line="196" pos:column="52"/></index></name></expr></argument>,
					<argument><expr><name><name pos:line="197" pos:column="41">head_oid<pos:position pos:line="197" pos:column="49"/></name><operator pos:line="197" pos:column="49">.<pos:position pos:line="197" pos:column="50"/></operator><name pos:line="197" pos:column="50">hash<pos:position pos:line="197" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="56">NULL<pos:position pos:line="197" pos:column="60"/></name></expr></argument>)<pos:position pos:line="197" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="197" pos:column="62"/></condition><then pos:line="197" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><name pos:line="198" pos:column="33">has_head<pos:position pos:line="198" pos:column="41"/></name><operator pos:line="198" pos:column="41">++<pos:position pos:line="198" pos:column="43"/></operator></expr>;<pos:position pos:line="198" pos:column="44"/></expr_stmt></block></then></if>
		}<pos:position pos:line="199" pos:column="18"/></block></for>
		<if pos:line="200" pos:column="17">if <condition pos:line="200" pos:column="20">(<expr><operator pos:line="200" pos:column="21">!<pos:position pos:line="200" pos:column="22"/></operator><name pos:line="200" pos:column="22">has_head<pos:position pos:line="200" pos:column="30"/></name></expr>)<pos:position pos:line="200" pos:column="31"/></condition><then pos:line="200" pos:column="31"> <block pos:line="200" pos:column="32">{
			<decl_stmt><decl><type><name pos:line="201" pos:column="25">int<pos:position pos:line="201" pos:column="28"/></name></type> <name pos:line="201" pos:column="29">offset<pos:position pos:line="201" pos:column="35"/></name> <init pos:line="201" pos:column="36">= <expr><ternary><condition><expr><call><name pos:line="201" pos:column="38">starts_with<pos:position pos:line="201" pos:column="49"/></name><argument_list pos:line="201" pos:column="49">(<argument><expr><name pos:line="201" pos:column="50">head<pos:position pos:line="201" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="56">"refs/heads/"<pos:position pos:line="201" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="70"/></argument_list></call></expr> ?<pos:position pos:line="201" pos:column="72"/></condition><then pos:line="201" pos:column="72"> <expr><literal type="number" pos:line="201" pos:column="73">11<pos:position pos:line="201" pos:column="75"/></literal></expr> <pos:position pos:line="201" pos:column="76"/></then><else pos:line="201" pos:column="76">: <expr><literal type="number" pos:line="201" pos:column="78">0<pos:position pos:line="201" pos:column="79"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="201" pos:column="80"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="202" pos:column="25">append_one_rev<pos:position pos:line="202" pos:column="39"/></name><argument_list pos:line="202" pos:column="39">(<argument><expr><name pos:line="202" pos:column="40">head<pos:position pos:line="202" pos:column="44"/></name> <operator pos:line="202" pos:column="45">+<pos:position pos:line="202" pos:column="46"/></operator> <name pos:line="202" pos:column="47">offset<pos:position pos:line="202" pos:column="53"/></name></expr></argument>)<pos:position pos:line="202" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="203" pos:column="18"/></block></then></if>
	}<pos:position pos:line="204" pos:column="10"/></block></then></if>

	<if pos:line="206" pos:column="9">if <condition pos:line="206" pos:column="12">(<expr><operator pos:line="206" pos:column="13">!<pos:position pos:line="206" pos:column="14"/></operator><name pos:line="206" pos:column="14">ref_name_cnt<pos:position pos:line="206" pos:column="26"/></name></expr>)<pos:position pos:line="206" pos:column="27"/></condition><then pos:line="206" pos:column="27"> <block pos:line="206" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="207" pos:column="17">fprintf<pos:position pos:line="207" pos:column="24"/></name><argument_list pos:line="207" pos:column="24">(<argument><expr><name pos:line="207" pos:column="25">stderr<pos:position pos:line="207" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="207" pos:column="33">"No revs to be shown.\n"<pos:position pos:line="207" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="208" pos:column="17">exit<pos:position pos:line="208" pos:column="21"/></name><argument_list pos:line="208" pos:column="21">(<argument><expr><literal type="number" pos:line="208" pos:column="22">0<pos:position pos:line="208" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="209" pos:column="10"/></block></then></if>

	<for pos:line="211" pos:column="9">for <control pos:line="211" pos:column="13">(<init><expr><name pos:line="211" pos:column="14">num_rev<pos:position pos:line="211" pos:column="21"/></name> <operator pos:line="211" pos:column="22">=<pos:position pos:line="211" pos:column="23"/></operator> <literal type="number" pos:line="211" pos:column="24">0<pos:position pos:line="211" pos:column="25"/></literal></expr>;<pos:position pos:line="211" pos:column="26"/></init> <condition><expr><name><name pos:line="211" pos:column="27">ref_name<pos:position pos:line="211" pos:column="35"/></name><index pos:line="211" pos:column="35">[<expr><name pos:line="211" pos:column="36">num_rev<pos:position pos:line="211" pos:column="43"/></name></expr>]<pos:position pos:line="211" pos:column="44"/></index></name></expr>;<pos:position pos:line="211" pos:column="45"/></condition> <incr><expr><name pos:line="211" pos:column="46">num_rev<pos:position pos:line="211" pos:column="53"/></name><operator pos:line="211" pos:column="53">++<pos:position pos:line="211" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="211" pos:column="56"/></control> <block pos:line="211" pos:column="57">{
		<decl_stmt><decl><type><name><name pos:line="212" pos:column="17">struct<pos:position pos:line="212" pos:column="23"/></name> <name pos:line="212" pos:column="24">object_id<pos:position pos:line="212" pos:column="33"/></name></name></type> <name pos:line="212" pos:column="34">revkey<pos:position pos:line="212" pos:column="40"/></name></decl>;<pos:position pos:line="212" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="213" pos:column="17">unsigned<pos:position pos:line="213" pos:column="25"/></name> <name pos:line="213" pos:column="26">int<pos:position pos:line="213" pos:column="29"/></name></type> <name pos:line="213" pos:column="30">flag<pos:position pos:line="213" pos:column="34"/></name> <init pos:line="213" pos:column="35">= <expr><literal type="number" pos:line="213" pos:column="37">1u<pos:position pos:line="213" pos:column="39"/></literal> <operator pos:line="213" pos:column="40">&lt;&lt;<pos:position pos:line="213" pos:column="48"/></operator> <operator pos:line="213" pos:column="43">(<pos:position pos:line="213" pos:column="44"/></operator><name pos:line="213" pos:column="44">num_rev<pos:position pos:line="213" pos:column="51"/></name> <operator pos:line="213" pos:column="52">+<pos:position pos:line="213" pos:column="53"/></operator> <name pos:line="213" pos:column="54">REV_SHIFT<pos:position pos:line="213" pos:column="63"/></name><operator pos:line="213" pos:column="63">)<pos:position pos:line="213" pos:column="64"/></operator></expr></init></decl>;<pos:position pos:line="213" pos:column="65"/></decl_stmt>

		<if pos:line="215" pos:column="17">if <condition pos:line="215" pos:column="20">(<expr><name pos:line="215" pos:column="21">MAX_REVS<pos:position pos:line="215" pos:column="29"/></name> <operator pos:line="215" pos:column="30">&lt;=<pos:position pos:line="215" pos:column="35"/></operator> <name pos:line="215" pos:column="33">num_rev<pos:position pos:line="215" pos:column="40"/></name></expr>)<pos:position pos:line="215" pos:column="41"/></condition><then pos:line="215" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="216" pos:column="25">die<pos:position pos:line="216" pos:column="28"/></name><argument_list pos:line="216" pos:column="28">(<argument><expr><literal type="string" pos:line="216" pos:column="29">"cannot handle more than %d revs."<pos:position pos:line="216" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="216" pos:column="65">MAX_REVS<pos:position pos:line="216" pos:column="73"/></name></expr></argument>)<pos:position pos:line="216" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="75"/></expr_stmt></block></then></if>
		<if pos:line="217" pos:column="17">if <condition pos:line="217" pos:column="20">(<expr><call><name pos:line="217" pos:column="21">get_sha1<pos:position pos:line="217" pos:column="29"/></name><argument_list pos:line="217" pos:column="29">(<argument><expr><name><name pos:line="217" pos:column="30">ref_name<pos:position pos:line="217" pos:column="38"/></name><index pos:line="217" pos:column="38">[<expr><name pos:line="217" pos:column="39">num_rev<pos:position pos:line="217" pos:column="46"/></name></expr>]<pos:position pos:line="217" pos:column="47"/></index></name></expr></argument>, <argument><expr><name><name pos:line="217" pos:column="49">revkey<pos:position pos:line="217" pos:column="55"/></name><operator pos:line="217" pos:column="55">.<pos:position pos:line="217" pos:column="56"/></operator><name pos:line="217" pos:column="56">hash<pos:position pos:line="217" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="217" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="217" pos:column="62"/></condition><then pos:line="217" pos:column="62">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="218" pos:column="25">die<pos:position pos:line="218" pos:column="28"/></name><argument_list pos:line="218" pos:column="28">(<argument><expr><literal type="string" pos:line="218" pos:column="29">"'%s' is not a valid ref."<pos:position pos:line="218" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="218" pos:column="57">ref_name<pos:position pos:line="218" pos:column="65"/></name><index pos:line="218" pos:column="65">[<expr><name pos:line="218" pos:column="66">num_rev<pos:position pos:line="218" pos:column="73"/></name></expr>]<pos:position pos:line="218" pos:column="74"/></index></name></expr></argument>)<pos:position pos:line="218" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="76"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="219" pos:column="17">commit<pos:position pos:line="219" pos:column="23"/></name> <operator pos:line="219" pos:column="24">=<pos:position pos:line="219" pos:column="25"/></operator> <call><name pos:line="219" pos:column="26">lookup_commit_reference<pos:position pos:line="219" pos:column="49"/></name><argument_list pos:line="219" pos:column="49">(<argument><expr><name><name pos:line="219" pos:column="50">revkey<pos:position pos:line="219" pos:column="56"/></name><operator pos:line="219" pos:column="56">.<pos:position pos:line="219" pos:column="57"/></operator><name pos:line="219" pos:column="57">hash<pos:position pos:line="219" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="219" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="63"/></expr_stmt>
		<if pos:line="220" pos:column="17">if <condition pos:line="220" pos:column="20">(<expr><operator pos:line="220" pos:column="21">!<pos:position pos:line="220" pos:column="22"/></operator><name pos:line="220" pos:column="22">commit<pos:position pos:line="220" pos:column="28"/></name></expr>)<pos:position pos:line="220" pos:column="29"/></condition><then pos:line="220" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="221" pos:column="25">die<pos:position pos:line="221" pos:column="28"/></name><argument_list pos:line="221" pos:column="28">(<argument><expr><literal type="string" pos:line="221" pos:column="29">"cannot find commit %s (%s)"<pos:position pos:line="221" pos:column="57"/></literal></expr></argument>,
			    <argument><expr><name><name pos:line="222" pos:column="29">ref_name<pos:position pos:line="222" pos:column="37"/></name><index pos:line="222" pos:column="37">[<expr><name pos:line="222" pos:column="38">num_rev<pos:position pos:line="222" pos:column="45"/></name></expr>]<pos:position pos:line="222" pos:column="46"/></index></name></expr></argument>, <argument><expr><call><name pos:line="222" pos:column="48">oid_to_hex<pos:position pos:line="222" pos:column="58"/></name><argument_list pos:line="222" pos:column="58">(<argument><expr><operator pos:line="222" pos:column="59">&amp;<pos:position pos:line="222" pos:column="64"/></operator><name pos:line="222" pos:column="60">revkey<pos:position pos:line="222" pos:column="66"/></name></expr></argument>)<pos:position pos:line="222" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="222" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="69"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="223" pos:column="17">parse_commit<pos:position pos:line="223" pos:column="29"/></name><argument_list pos:line="223" pos:column="29">(<argument><expr><name pos:line="223" pos:column="30">commit<pos:position pos:line="223" pos:column="36"/></name></expr></argument>)<pos:position pos:line="223" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="224" pos:column="17">mark_seen<pos:position pos:line="224" pos:column="26"/></name><argument_list pos:line="224" pos:column="26">(<argument><expr><name pos:line="224" pos:column="27">commit<pos:position pos:line="224" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="224" pos:column="35">&amp;<pos:position pos:line="224" pos:column="40"/></operator><name pos:line="224" pos:column="36">seen<pos:position pos:line="224" pos:column="40"/></name></expr></argument>)<pos:position pos:line="224" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="42"/></expr_stmt>

		<comment type="block" pos:line="226" pos:column="17">/* rev#0 uses bit REV_SHIFT, rev#1 uses bit REV_SHIFT+1,
		 * and so on.  REV_SHIFT bits from bit 0 are used for
		 * internal bookkeeping.
		 */</comment>
		<expr_stmt><expr><name><name pos:line="230" pos:column="17">commit<pos:position pos:line="230" pos:column="23"/></name><operator pos:line="230" pos:column="23">-&gt;<pos:position pos:line="230" pos:column="28"/></operator><name pos:line="230" pos:column="25">object<pos:position pos:line="230" pos:column="31"/></name><operator pos:line="230" pos:column="31">.<pos:position pos:line="230" pos:column="32"/></operator><name pos:line="230" pos:column="32">flags<pos:position pos:line="230" pos:column="37"/></name></name> <operator pos:line="230" pos:column="38">|=<pos:position pos:line="230" pos:column="40"/></operator> <name pos:line="230" pos:column="41">flag<pos:position pos:line="230" pos:column="45"/></name></expr>;<pos:position pos:line="230" pos:column="46"/></expr_stmt>
		<if pos:line="231" pos:column="17">if <condition pos:line="231" pos:column="20">(<expr><name><name pos:line="231" pos:column="21">commit<pos:position pos:line="231" pos:column="27"/></name><operator pos:line="231" pos:column="27">-&gt;<pos:position pos:line="231" pos:column="32"/></operator><name pos:line="231" pos:column="29">object<pos:position pos:line="231" pos:column="35"/></name><operator pos:line="231" pos:column="35">.<pos:position pos:line="231" pos:column="36"/></operator><name pos:line="231" pos:column="36">flags<pos:position pos:line="231" pos:column="41"/></name></name> <operator pos:line="231" pos:column="42">==<pos:position pos:line="231" pos:column="44"/></operator> <name pos:line="231" pos:column="45">flag<pos:position pos:line="231" pos:column="49"/></name></expr>)<pos:position pos:line="231" pos:column="50"/></condition><then pos:line="231" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="232" pos:column="25">commit_list_insert_by_date<pos:position pos:line="232" pos:column="51"/></name><argument_list pos:line="232" pos:column="51">(<argument><expr><name pos:line="232" pos:column="52">commit<pos:position pos:line="232" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="232" pos:column="60">&amp;<pos:position pos:line="232" pos:column="65"/></operator><name pos:line="232" pos:column="61">list<pos:position pos:line="232" pos:column="65"/></name></expr></argument>)<pos:position pos:line="232" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="67"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="233" pos:column="17">rev<pos:position pos:line="233" pos:column="20"/></name><index pos:line="233" pos:column="20">[<expr><name pos:line="233" pos:column="21">num_rev<pos:position pos:line="233" pos:column="28"/></name></expr>]<pos:position pos:line="233" pos:column="29"/></index></name> <operator pos:line="233" pos:column="30">=<pos:position pos:line="233" pos:column="31"/></operator> <name pos:line="233" pos:column="32">commit<pos:position pos:line="233" pos:column="38"/></name></expr>;<pos:position pos:line="233" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="234" pos:column="10"/></block></for>
	<for pos:line="235" pos:column="9">for <control pos:line="235" pos:column="13">(<init><expr><name pos:line="235" pos:column="14">i<pos:position pos:line="235" pos:column="15"/></name> <operator pos:line="235" pos:column="16">=<pos:position pos:line="235" pos:column="17"/></operator> <literal type="number" pos:line="235" pos:column="18">0<pos:position pos:line="235" pos:column="19"/></literal></expr>;<pos:position pos:line="235" pos:column="20"/></init> <condition><expr><name pos:line="235" pos:column="21">i<pos:position pos:line="235" pos:column="22"/></name> <operator pos:line="235" pos:column="23">&lt;<pos:position pos:line="235" pos:column="27"/></operator> <name pos:line="235" pos:column="25">num_rev<pos:position pos:line="235" pos:column="32"/></name></expr>;<pos:position pos:line="235" pos:column="33"/></condition> <incr><expr><name pos:line="235" pos:column="34">i<pos:position pos:line="235" pos:column="35"/></name><operator pos:line="235" pos:column="35">++<pos:position pos:line="235" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="235" pos:column="38"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="236" pos:column="17">rev_mask<pos:position pos:line="236" pos:column="25"/></name><index pos:line="236" pos:column="25">[<expr><name pos:line="236" pos:column="26">i<pos:position pos:line="236" pos:column="27"/></name></expr>]<pos:position pos:line="236" pos:column="28"/></index></name> <operator pos:line="236" pos:column="29">=<pos:position pos:line="236" pos:column="30"/></operator> <name><name pos:line="236" pos:column="31">rev<pos:position pos:line="236" pos:column="34"/></name><index pos:line="236" pos:column="34">[<expr><name pos:line="236" pos:column="35">i<pos:position pos:line="236" pos:column="36"/></name></expr>]<pos:position pos:line="236" pos:column="37"/></index></name><operator pos:line="236" pos:column="37">-&gt;<pos:position pos:line="236" pos:column="42"/></operator><name><name pos:line="236" pos:column="39">object<pos:position pos:line="236" pos:column="45"/></name><operator pos:line="236" pos:column="45">.<pos:position pos:line="236" pos:column="46"/></operator><name pos:line="236" pos:column="46">flags<pos:position pos:line="236" pos:column="51"/></name></name></expr>;<pos:position pos:line="236" pos:column="52"/></expr_stmt></block></for>

	<if pos:line="238" pos:column="9">if <condition pos:line="238" pos:column="12">(<expr><literal type="number" pos:line="238" pos:column="13">0<pos:position pos:line="238" pos:column="14"/></literal> <operator pos:line="238" pos:column="15">&lt;=<pos:position pos:line="238" pos:column="20"/></operator> <name pos:line="238" pos:column="18">extra<pos:position pos:line="238" pos:column="23"/></name></expr>)<pos:position pos:line="238" pos:column="24"/></condition><then pos:line="238" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="239" pos:column="17">join_revs<pos:position pos:line="239" pos:column="26"/></name><argument_list pos:line="239" pos:column="26">(<argument><expr><operator pos:line="239" pos:column="27">&amp;<pos:position pos:line="239" pos:column="32"/></operator><name pos:line="239" pos:column="28">list<pos:position pos:line="239" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="239" pos:column="34">&amp;<pos:position pos:line="239" pos:column="39"/></operator><name pos:line="239" pos:column="35">seen<pos:position pos:line="239" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="41">num_rev<pos:position pos:line="239" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="50">extra<pos:position pos:line="239" pos:column="55"/></name></expr></argument>)<pos:position pos:line="239" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="57"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="241" pos:column="9">commit_list_sort_by_date<pos:position pos:line="241" pos:column="33"/></name><argument_list pos:line="241" pos:column="33">(<argument><expr><operator pos:line="241" pos:column="34">&amp;<pos:position pos:line="241" pos:column="39"/></operator><name pos:line="241" pos:column="35">seen<pos:position pos:line="241" pos:column="39"/></name></expr></argument>)<pos:position pos:line="241" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="41"/></expr_stmt>

	<if pos:line="243" pos:column="9">if <condition pos:line="243" pos:column="12">(<expr><name pos:line="243" pos:column="13">merge_base<pos:position pos:line="243" pos:column="23"/></name></expr>)<pos:position pos:line="243" pos:column="24"/></condition><then pos:line="243" pos:column="24">
		<block type="pseudo"><return pos:line="244" pos:column="17">return <expr><call><name pos:line="244" pos:column="24">show_merge_base<pos:position pos:line="244" pos:column="39"/></name><argument_list pos:line="244" pos:column="39">(<argument><expr><name pos:line="244" pos:column="40">seen<pos:position pos:line="244" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="244" pos:column="46">num_rev<pos:position pos:line="244" pos:column="53"/></name></expr></argument>)<pos:position pos:line="244" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="55"/></return></block></then></if>

	<if pos:line="246" pos:column="9">if <condition pos:line="246" pos:column="12">(<expr><name pos:line="246" pos:column="13">independent<pos:position pos:line="246" pos:column="24"/></name></expr>)<pos:position pos:line="246" pos:column="25"/></condition><then pos:line="246" pos:column="25">
		<block type="pseudo"><return pos:line="247" pos:column="17">return <expr><call><name pos:line="247" pos:column="24">show_independent<pos:position pos:line="247" pos:column="40"/></name><argument_list pos:line="247" pos:column="40">(<argument><expr><name pos:line="247" pos:column="41">rev<pos:position pos:line="247" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="46">num_rev<pos:position pos:line="247" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="55">ref_name<pos:position pos:line="247" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="65">rev_mask<pos:position pos:line="247" pos:column="73"/></name></expr></argument>)<pos:position pos:line="247" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="75"/></return></block></then></if>

	<comment type="block" pos:line="249" pos:column="9">/* Show list; --more=-1 means list-only */</comment>
	<if pos:line="250" pos:column="9">if <condition pos:line="250" pos:column="12">(<expr><literal type="number" pos:line="250" pos:column="13">1<pos:position pos:line="250" pos:column="14"/></literal> <operator pos:line="250" pos:column="15">&lt;<pos:position pos:line="250" pos:column="19"/></operator> <name pos:line="250" pos:column="17">num_rev<pos:position pos:line="250" pos:column="24"/></name> <operator pos:line="250" pos:column="25">||<pos:position pos:line="250" pos:column="27"/></operator> <name pos:line="250" pos:column="28">extra<pos:position pos:line="250" pos:column="33"/></name> <operator pos:line="250" pos:column="34">&lt;<pos:position pos:line="250" pos:column="38"/></operator> <literal type="number" pos:line="250" pos:column="36">0<pos:position pos:line="250" pos:column="37"/></literal></expr>)<pos:position pos:line="250" pos:column="38"/></condition><then pos:line="250" pos:column="38"> <block pos:line="250" pos:column="39">{
		<for pos:line="251" pos:column="17">for <control pos:line="251" pos:column="21">(<init><expr><name pos:line="251" pos:column="22">i<pos:position pos:line="251" pos:column="23"/></name> <operator pos:line="251" pos:column="24">=<pos:position pos:line="251" pos:column="25"/></operator> <literal type="number" pos:line="251" pos:column="26">0<pos:position pos:line="251" pos:column="27"/></literal></expr>;<pos:position pos:line="251" pos:column="28"/></init> <condition><expr><name pos:line="251" pos:column="29">i<pos:position pos:line="251" pos:column="30"/></name> <operator pos:line="251" pos:column="31">&lt;<pos:position pos:line="251" pos:column="35"/></operator> <name pos:line="251" pos:column="33">num_rev<pos:position pos:line="251" pos:column="40"/></name></expr>;<pos:position pos:line="251" pos:column="41"/></condition> <incr><expr><name pos:line="251" pos:column="42">i<pos:position pos:line="251" pos:column="43"/></name><operator pos:line="251" pos:column="43">++<pos:position pos:line="251" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="251" pos:column="46"/></control> <block pos:line="251" pos:column="47">{
			<decl_stmt><decl><type><name pos:line="252" pos:column="25">int<pos:position pos:line="252" pos:column="28"/></name></type> <name pos:line="252" pos:column="29">j<pos:position pos:line="252" pos:column="30"/></name></decl>;<pos:position pos:line="252" pos:column="31"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="253" pos:column="25">int<pos:position pos:line="253" pos:column="28"/></name></type> <name pos:line="253" pos:column="29">is_head<pos:position pos:line="253" pos:column="36"/></name> <init pos:line="253" pos:column="37">= <expr><call><name pos:line="253" pos:column="39">rev_is_head<pos:position pos:line="253" pos:column="50"/></name><argument_list pos:line="253" pos:column="50">(<argument><expr><name pos:line="253" pos:column="51">head<pos:position pos:line="253" pos:column="55"/></name></expr></argument>,
						  <argument><expr><name pos:line="254" pos:column="51">head_len<pos:position pos:line="254" pos:column="59"/></name></expr></argument>,
						  <argument><expr><name><name pos:line="255" pos:column="51">ref_name<pos:position pos:line="255" pos:column="59"/></name><index pos:line="255" pos:column="59">[<expr><name pos:line="255" pos:column="60">i<pos:position pos:line="255" pos:column="61"/></name></expr>]<pos:position pos:line="255" pos:column="62"/></index></name></expr></argument>,
						  <argument><expr><name><name pos:line="256" pos:column="51">head_oid<pos:position pos:line="256" pos:column="59"/></name><operator pos:line="256" pos:column="59">.<pos:position pos:line="256" pos:column="60"/></operator><name pos:line="256" pos:column="60">hash<pos:position pos:line="256" pos:column="64"/></name></name></expr></argument>,
						  <argument><expr><name><name pos:line="257" pos:column="51">rev<pos:position pos:line="257" pos:column="54"/></name><index pos:line="257" pos:column="54">[<expr><name pos:line="257" pos:column="55">i<pos:position pos:line="257" pos:column="56"/></name></expr>]<pos:position pos:line="257" pos:column="57"/></index></name><operator pos:line="257" pos:column="57">-&gt;<pos:position pos:line="257" pos:column="62"/></operator><name><name pos:line="257" pos:column="59">object<pos:position pos:line="257" pos:column="65"/></name><operator pos:line="257" pos:column="65">.<pos:position pos:line="257" pos:column="66"/></operator><name pos:line="257" pos:column="66">oid<pos:position pos:line="257" pos:column="69"/></name><operator pos:line="257" pos:column="69">.<pos:position pos:line="257" pos:column="70"/></operator><name pos:line="257" pos:column="70">hash<pos:position pos:line="257" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="257" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="257" pos:column="76"/></decl_stmt>
			<if pos:line="258" pos:column="25">if <condition pos:line="258" pos:column="28">(<expr><name pos:line="258" pos:column="29">extra<pos:position pos:line="258" pos:column="34"/></name> <operator pos:line="258" pos:column="35">&lt;<pos:position pos:line="258" pos:column="39"/></operator> <literal type="number" pos:line="258" pos:column="37">0<pos:position pos:line="258" pos:column="38"/></literal></expr>)<pos:position pos:line="258" pos:column="39"/></condition><then pos:line="258" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="259" pos:column="33">printf<pos:position pos:line="259" pos:column="39"/></name><argument_list pos:line="259" pos:column="39">(<argument><expr><literal type="string" pos:line="259" pos:column="40">"%c [%s] "<pos:position pos:line="259" pos:column="50"/></literal></expr></argument>,
				       <argument><expr><ternary><condition><expr><name pos:line="260" pos:column="40">is_head<pos:position pos:line="260" pos:column="47"/></name></expr> ?<pos:position pos:line="260" pos:column="49"/></condition><then pos:line="260" pos:column="49"> <expr><literal type="char" pos:line="260" pos:column="50">'*'<pos:position pos:line="260" pos:column="53"/></literal></expr> <pos:position pos:line="260" pos:column="54"/></then><else pos:line="260" pos:column="54">: <expr><literal type="char" pos:line="260" pos:column="56">' '<pos:position pos:line="260" pos:column="59"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="260" pos:column="61">ref_name<pos:position pos:line="260" pos:column="69"/></name><index pos:line="260" pos:column="69">[<expr><name pos:line="260" pos:column="70">i<pos:position pos:line="260" pos:column="71"/></name></expr>]<pos:position pos:line="260" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="260" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="74"/></expr_stmt></block></then>
			<else pos:line="261" pos:column="25">else <block pos:line="261" pos:column="30">{
				<for pos:line="262" pos:column="33">for <control pos:line="262" pos:column="37">(<init><expr><name pos:line="262" pos:column="38">j<pos:position pos:line="262" pos:column="39"/></name> <operator pos:line="262" pos:column="40">=<pos:position pos:line="262" pos:column="41"/></operator> <literal type="number" pos:line="262" pos:column="42">0<pos:position pos:line="262" pos:column="43"/></literal></expr>;<pos:position pos:line="262" pos:column="44"/></init> <condition><expr><name pos:line="262" pos:column="45">j<pos:position pos:line="262" pos:column="46"/></name> <operator pos:line="262" pos:column="47">&lt;<pos:position pos:line="262" pos:column="51"/></operator> <name pos:line="262" pos:column="49">i<pos:position pos:line="262" pos:column="50"/></name></expr>;<pos:position pos:line="262" pos:column="51"/></condition> <incr><expr><name pos:line="262" pos:column="52">j<pos:position pos:line="262" pos:column="53"/></name><operator pos:line="262" pos:column="53">++<pos:position pos:line="262" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="262" pos:column="56"/></control>
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="263" pos:column="41">putchar<pos:position pos:line="263" pos:column="48"/></name><argument_list pos:line="263" pos:column="48">(<argument><expr><literal type="char" pos:line="263" pos:column="49">' '<pos:position pos:line="263" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="263" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="54"/></expr_stmt></block></for>
				<expr_stmt><expr><call><name pos:line="264" pos:column="33">printf<pos:position pos:line="264" pos:column="39"/></name><argument_list pos:line="264" pos:column="39">(<argument><expr><literal type="string" pos:line="264" pos:column="40">"%s%c%s [%s] "<pos:position pos:line="264" pos:column="54"/></literal></expr></argument>,
				       <argument><expr><call><name pos:line="265" pos:column="40">get_color_code<pos:position pos:line="265" pos:column="54"/></name><argument_list pos:line="265" pos:column="54">(<argument><expr><name pos:line="265" pos:column="55">i<pos:position pos:line="265" pos:column="56"/></name></expr></argument>)<pos:position pos:line="265" pos:column="57"/></argument_list></call></expr></argument>,
				       <argument><expr><ternary><condition><expr><name pos:line="266" pos:column="40">is_head<pos:position pos:line="266" pos:column="47"/></name></expr> ?<pos:position pos:line="266" pos:column="49"/></condition><then pos:line="266" pos:column="49"> <expr><literal type="char" pos:line="266" pos:column="50">'*'<pos:position pos:line="266" pos:column="53"/></literal></expr> <pos:position pos:line="266" pos:column="54"/></then><else pos:line="266" pos:column="54">: <expr><literal type="char" pos:line="266" pos:column="56">'!'<pos:position pos:line="266" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
				       <argument><expr><call><name pos:line="267" pos:column="40">get_color_reset_code<pos:position pos:line="267" pos:column="60"/></name><argument_list pos:line="267" pos:column="60">()<pos:position pos:line="267" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="267" pos:column="64">ref_name<pos:position pos:line="267" pos:column="72"/></name><index pos:line="267" pos:column="72">[<expr><name pos:line="267" pos:column="73">i<pos:position pos:line="267" pos:column="74"/></name></expr>]<pos:position pos:line="267" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="267" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="77"/></expr_stmt>
			}<pos:position pos:line="268" pos:column="26"/></block></else></if>

			<if pos:line="270" pos:column="25">if <condition pos:line="270" pos:column="28">(<expr><operator pos:line="270" pos:column="29">!<pos:position pos:line="270" pos:column="30"/></operator><name pos:line="270" pos:column="30">reflog<pos:position pos:line="270" pos:column="36"/></name></expr>)<pos:position pos:line="270" pos:column="37"/></condition><then pos:line="270" pos:column="37"> <block pos:line="270" pos:column="38">{
				<comment type="block" pos:line="271" pos:column="33">/* header lines never need name */</comment>
				<expr_stmt><expr><call><name pos:line="272" pos:column="33">show_one_commit<pos:position pos:line="272" pos:column="48"/></name><argument_list pos:line="272" pos:column="48">(<argument><expr><name><name pos:line="272" pos:column="49">rev<pos:position pos:line="272" pos:column="52"/></name><index pos:line="272" pos:column="52">[<expr><name pos:line="272" pos:column="53">i<pos:position pos:line="272" pos:column="54"/></name></expr>]<pos:position pos:line="272" pos:column="55"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="272" pos:column="57">1<pos:position pos:line="272" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="272" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="273" pos:column="26"/></block></then>
			<else pos:line="274" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="275" pos:column="33">puts<pos:position pos:line="275" pos:column="37"/></name><argument_list pos:line="275" pos:column="37">(<argument><expr><name><name pos:line="275" pos:column="38">reflog_msg<pos:position pos:line="275" pos:column="48"/></name><index pos:line="275" pos:column="48">[<expr><name pos:line="275" pos:column="49">i<pos:position pos:line="275" pos:column="50"/></name></expr>]<pos:position pos:line="275" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="275" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="53"/></expr_stmt></block></else></if>

			<if pos:line="277" pos:column="25">if <condition pos:line="277" pos:column="28">(<expr><name pos:line="277" pos:column="29">is_head<pos:position pos:line="277" pos:column="36"/></name></expr>)<pos:position pos:line="277" pos:column="37"/></condition><then pos:line="277" pos:column="37">
				<block type="pseudo"><expr_stmt><expr><name pos:line="278" pos:column="33">head_at<pos:position pos:line="278" pos:column="40"/></name> <operator pos:line="278" pos:column="41">=<pos:position pos:line="278" pos:column="42"/></operator> <name pos:line="278" pos:column="43">i<pos:position pos:line="278" pos:column="44"/></name></expr>;<pos:position pos:line="278" pos:column="45"/></expr_stmt></block></then></if>
		}<pos:position pos:line="279" pos:column="18"/></block></for>
		<if pos:line="280" pos:column="17">if <condition pos:line="280" pos:column="20">(<expr><literal type="number" pos:line="280" pos:column="21">0<pos:position pos:line="280" pos:column="22"/></literal> <operator pos:line="280" pos:column="23">&lt;=<pos:position pos:line="280" pos:column="28"/></operator> <name pos:line="280" pos:column="26">extra<pos:position pos:line="280" pos:column="31"/></name></expr>)<pos:position pos:line="280" pos:column="32"/></condition><then pos:line="280" pos:column="32"> <block pos:line="280" pos:column="33">{
			<for pos:line="281" pos:column="25">for <control pos:line="281" pos:column="29">(<init><expr><name pos:line="281" pos:column="30">i<pos:position pos:line="281" pos:column="31"/></name> <operator pos:line="281" pos:column="32">=<pos:position pos:line="281" pos:column="33"/></operator> <literal type="number" pos:line="281" pos:column="34">0<pos:position pos:line="281" pos:column="35"/></literal></expr>;<pos:position pos:line="281" pos:column="36"/></init> <condition><expr><name pos:line="281" pos:column="37">i<pos:position pos:line="281" pos:column="38"/></name> <operator pos:line="281" pos:column="39">&lt;<pos:position pos:line="281" pos:column="43"/></operator> <name pos:line="281" pos:column="41">num_rev<pos:position pos:line="281" pos:column="48"/></name></expr>;<pos:position pos:line="281" pos:column="49"/></condition> <incr><expr><name pos:line="281" pos:column="50">i<pos:position pos:line="281" pos:column="51"/></name><operator pos:line="281" pos:column="51">++<pos:position pos:line="281" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="281" pos:column="54"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="282" pos:column="33">putchar<pos:position pos:line="282" pos:column="40"/></name><argument_list pos:line="282" pos:column="40">(<argument><expr><literal type="char" pos:line="282" pos:column="41">'-'<pos:position pos:line="282" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="282" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="46"/></expr_stmt></block></for>
			<expr_stmt><expr><call><name pos:line="283" pos:column="25">putchar<pos:position pos:line="283" pos:column="32"/></name><argument_list pos:line="283" pos:column="32">(<argument><expr><literal type="char" pos:line="283" pos:column="33">'\n'<pos:position pos:line="283" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="283" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="284" pos:column="18"/></block></then></if>
	}<pos:position pos:line="285" pos:column="10"/></block></then></if>
	<if pos:line="286" pos:column="9">if <condition pos:line="286" pos:column="12">(<expr><name pos:line="286" pos:column="13">extra<pos:position pos:line="286" pos:column="18"/></name> <operator pos:line="286" pos:column="19">&lt;<pos:position pos:line="286" pos:column="23"/></operator> <literal type="number" pos:line="286" pos:column="21">0<pos:position pos:line="286" pos:column="22"/></literal></expr>)<pos:position pos:line="286" pos:column="23"/></condition><then pos:line="286" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="287" pos:column="17">exit<pos:position pos:line="287" pos:column="21"/></name><argument_list pos:line="287" pos:column="21">(<argument><expr><literal type="number" pos:line="287" pos:column="22">0<pos:position pos:line="287" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="287" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="25"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="289" pos:column="9">/* Sort topologically */</comment>
	<expr_stmt><expr><call><name pos:line="290" pos:column="9">sort_in_topological_order<pos:position pos:line="290" pos:column="34"/></name><argument_list pos:line="290" pos:column="34">(<argument><expr><operator pos:line="290" pos:column="35">&amp;<pos:position pos:line="290" pos:column="40"/></operator><name pos:line="290" pos:column="36">seen<pos:position pos:line="290" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="290" pos:column="42">sort_order<pos:position pos:line="290" pos:column="52"/></name></expr></argument>)<pos:position pos:line="290" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="54"/></expr_stmt>

	<comment type="block" pos:line="292" pos:column="9">/* Give names to commits */</comment>
	<if pos:line="293" pos:column="9">if <condition pos:line="293" pos:column="12">(<expr><operator pos:line="293" pos:column="13">!<pos:position pos:line="293" pos:column="14"/></operator><name pos:line="293" pos:column="14">sha1_name<pos:position pos:line="293" pos:column="23"/></name> <operator pos:line="293" pos:column="24">&amp;&amp;<pos:position pos:line="293" pos:column="34"/></operator> <operator pos:line="293" pos:column="27">!<pos:position pos:line="293" pos:column="28"/></operator><name pos:line="293" pos:column="28">no_name<pos:position pos:line="293" pos:column="35"/></name></expr>)<pos:position pos:line="293" pos:column="36"/></condition><then pos:line="293" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="294" pos:column="17">name_commits<pos:position pos:line="294" pos:column="29"/></name><argument_list pos:line="294" pos:column="29">(<argument><expr><name pos:line="294" pos:column="30">seen<pos:position pos:line="294" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="36">rev<pos:position pos:line="294" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="41">ref_name<pos:position pos:line="294" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="51">num_rev<pos:position pos:line="294" pos:column="58"/></name></expr></argument>)<pos:position pos:line="294" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="60"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="296" pos:column="9">all_mask<pos:position pos:line="296" pos:column="17"/></name> <operator pos:line="296" pos:column="18">=<pos:position pos:line="296" pos:column="19"/></operator> <operator pos:line="296" pos:column="20">(<pos:position pos:line="296" pos:column="21"/></operator><operator pos:line="296" pos:column="21">(<pos:position pos:line="296" pos:column="22"/></operator><literal type="number" pos:line="296" pos:column="22">1u<pos:position pos:line="296" pos:column="24"/></literal> <operator pos:line="296" pos:column="25">&lt;&lt;<pos:position pos:line="296" pos:column="33"/></operator> <operator pos:line="296" pos:column="28">(<pos:position pos:line="296" pos:column="29"/></operator><name pos:line="296" pos:column="29">REV_SHIFT<pos:position pos:line="296" pos:column="38"/></name> <operator pos:line="296" pos:column="39">+<pos:position pos:line="296" pos:column="40"/></operator> <name pos:line="296" pos:column="41">num_rev<pos:position pos:line="296" pos:column="48"/></name><operator pos:line="296" pos:column="48">)<pos:position pos:line="296" pos:column="49"/></operator><operator pos:line="296" pos:column="49">)<pos:position pos:line="296" pos:column="50"/></operator> <operator pos:line="296" pos:column="51">-<pos:position pos:line="296" pos:column="52"/></operator> <literal type="number" pos:line="296" pos:column="53">1<pos:position pos:line="296" pos:column="54"/></literal><operator pos:line="296" pos:column="54">)<pos:position pos:line="296" pos:column="55"/></operator></expr>;<pos:position pos:line="296" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name pos:line="297" pos:column="9">all_revs<pos:position pos:line="297" pos:column="17"/></name> <operator pos:line="297" pos:column="18">=<pos:position pos:line="297" pos:column="19"/></operator> <name pos:line="297" pos:column="20">all_mask<pos:position pos:line="297" pos:column="28"/></name> <operator pos:line="297" pos:column="29">&amp;<pos:position pos:line="297" pos:column="34"/></operator> <operator pos:line="297" pos:column="31">~<pos:position pos:line="297" pos:column="32"/></operator><operator pos:line="297" pos:column="32">(<pos:position pos:line="297" pos:column="33"/></operator><operator pos:line="297" pos:column="33">(<pos:position pos:line="297" pos:column="34"/></operator><literal type="number" pos:line="297" pos:column="34">1u<pos:position pos:line="297" pos:column="36"/></literal> <operator pos:line="297" pos:column="37">&lt;&lt;<pos:position pos:line="297" pos:column="45"/></operator> <name pos:line="297" pos:column="40">REV_SHIFT<pos:position pos:line="297" pos:column="49"/></name><operator pos:line="297" pos:column="49">)<pos:position pos:line="297" pos:column="50"/></operator> <operator pos:line="297" pos:column="51">-<pos:position pos:line="297" pos:column="52"/></operator> <literal type="number" pos:line="297" pos:column="53">1<pos:position pos:line="297" pos:column="54"/></literal><operator pos:line="297" pos:column="54">)<pos:position pos:line="297" pos:column="55"/></operator></expr>;<pos:position pos:line="297" pos:column="56"/></expr_stmt>

	<while pos:line="299" pos:column="9">while <condition pos:line="299" pos:column="15">(<expr><name pos:line="299" pos:column="16">seen<pos:position pos:line="299" pos:column="20"/></name></expr>)<pos:position pos:line="299" pos:column="21"/></condition> <block pos:line="299" pos:column="22">{
		<decl_stmt><decl><type><name><name pos:line="300" pos:column="17">struct<pos:position pos:line="300" pos:column="23"/></name> <name pos:line="300" pos:column="24">commit<pos:position pos:line="300" pos:column="30"/></name></name> <modifier pos:line="300" pos:column="31">*<pos:position pos:line="300" pos:column="32"/></modifier></type><name pos:line="300" pos:column="32">commit<pos:position pos:line="300" pos:column="38"/></name> <init pos:line="300" pos:column="39">= <expr><call><name pos:line="300" pos:column="41">pop_commit<pos:position pos:line="300" pos:column="51"/></name><argument_list pos:line="300" pos:column="51">(<argument><expr><operator pos:line="300" pos:column="52">&amp;<pos:position pos:line="300" pos:column="57"/></operator><name pos:line="300" pos:column="53">seen<pos:position pos:line="300" pos:column="57"/></name></expr></argument>)<pos:position pos:line="300" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="300" pos:column="59"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="301" pos:column="17">int<pos:position pos:line="301" pos:column="20"/></name></type> <name pos:line="301" pos:column="21">this_flag<pos:position pos:line="301" pos:column="30"/></name> <init pos:line="301" pos:column="31">= <expr><name><name pos:line="301" pos:column="33">commit<pos:position pos:line="301" pos:column="39"/></name><operator pos:line="301" pos:column="39">-&gt;<pos:position pos:line="301" pos:column="44"/></operator><name pos:line="301" pos:column="41">object<pos:position pos:line="301" pos:column="47"/></name><operator pos:line="301" pos:column="47">.<pos:position pos:line="301" pos:column="48"/></operator><name pos:line="301" pos:column="48">flags<pos:position pos:line="301" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="301" pos:column="54"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="302" pos:column="17">int<pos:position pos:line="302" pos:column="20"/></name></type> <name pos:line="302" pos:column="21">is_merge_point<pos:position pos:line="302" pos:column="35"/></name> <init pos:line="302" pos:column="36">= <expr><operator pos:line="302" pos:column="38">(<pos:position pos:line="302" pos:column="39"/></operator><operator pos:line="302" pos:column="39">(<pos:position pos:line="302" pos:column="40"/></operator><name pos:line="302" pos:column="40">this_flag<pos:position pos:line="302" pos:column="49"/></name> <operator pos:line="302" pos:column="50">&amp;<pos:position pos:line="302" pos:column="55"/></operator> <name pos:line="302" pos:column="52">all_revs<pos:position pos:line="302" pos:column="60"/></name><operator pos:line="302" pos:column="60">)<pos:position pos:line="302" pos:column="61"/></operator> <operator pos:line="302" pos:column="62">==<pos:position pos:line="302" pos:column="64"/></operator> <name pos:line="302" pos:column="65">all_revs<pos:position pos:line="302" pos:column="73"/></name><operator pos:line="302" pos:column="73">)<pos:position pos:line="302" pos:column="74"/></operator></expr></init></decl>;<pos:position pos:line="302" pos:column="75"/></decl_stmt>

		<expr_stmt><expr><name pos:line="304" pos:column="17">shown_merge_point<pos:position pos:line="304" pos:column="34"/></name> <operator pos:line="304" pos:column="35">|=<pos:position pos:line="304" pos:column="37"/></operator> <name pos:line="304" pos:column="38">is_merge_point<pos:position pos:line="304" pos:column="52"/></name></expr>;<pos:position pos:line="304" pos:column="53"/></expr_stmt>

		<if pos:line="306" pos:column="17">if <condition pos:line="306" pos:column="20">(<expr><literal type="number" pos:line="306" pos:column="21">1<pos:position pos:line="306" pos:column="22"/></literal> <operator pos:line="306" pos:column="23">&lt;<pos:position pos:line="306" pos:column="27"/></operator> <name pos:line="306" pos:column="25">num_rev<pos:position pos:line="306" pos:column="32"/></name></expr>)<pos:position pos:line="306" pos:column="33"/></condition><then pos:line="306" pos:column="33"> <block pos:line="306" pos:column="34">{
			<decl_stmt><decl><type><name pos:line="307" pos:column="25">int<pos:position pos:line="307" pos:column="28"/></name></type> <name pos:line="307" pos:column="29">is_merge<pos:position pos:line="307" pos:column="37"/></name> <init pos:line="307" pos:column="38">= <expr><operator pos:line="307" pos:column="40">!<pos:position pos:line="307" pos:column="41"/></operator><operator pos:line="307" pos:column="41">!<pos:position pos:line="307" pos:column="42"/></operator><operator pos:line="307" pos:column="42">(<pos:position pos:line="307" pos:column="43"/></operator><name><name pos:line="307" pos:column="43">commit<pos:position pos:line="307" pos:column="49"/></name><operator pos:line="307" pos:column="49">-&gt;<pos:position pos:line="307" pos:column="54"/></operator><name pos:line="307" pos:column="51">parents<pos:position pos:line="307" pos:column="58"/></name></name> <operator pos:line="307" pos:column="59">&amp;&amp;<pos:position pos:line="307" pos:column="69"/></operator>
					  <name><name pos:line="308" pos:column="43">commit<pos:position pos:line="308" pos:column="49"/></name><operator pos:line="308" pos:column="49">-&gt;<pos:position pos:line="308" pos:column="54"/></operator><name pos:line="308" pos:column="51">parents<pos:position pos:line="308" pos:column="58"/></name><operator pos:line="308" pos:column="58">-&gt;<pos:position pos:line="308" pos:column="63"/></operator><name pos:line="308" pos:column="60">next<pos:position pos:line="308" pos:column="64"/></name></name><operator pos:line="308" pos:column="64">)<pos:position pos:line="308" pos:column="65"/></operator></expr></init></decl>;<pos:position pos:line="308" pos:column="66"/></decl_stmt>
			<if pos:line="309" pos:column="25">if <condition pos:line="309" pos:column="28">(<expr><name pos:line="309" pos:column="29">topics<pos:position pos:line="309" pos:column="35"/></name> <operator pos:line="309" pos:column="36">&amp;&amp;<pos:position pos:line="309" pos:column="46"/></operator>
			    <operator pos:line="310" pos:column="29">!<pos:position pos:line="310" pos:column="30"/></operator><name pos:line="310" pos:column="30">is_merge_point<pos:position pos:line="310" pos:column="44"/></name> <operator pos:line="310" pos:column="45">&amp;&amp;<pos:position pos:line="310" pos:column="55"/></operator>
			    <operator pos:line="311" pos:column="29">(<pos:position pos:line="311" pos:column="30"/></operator><name pos:line="311" pos:column="30">this_flag<pos:position pos:line="311" pos:column="39"/></name> <operator pos:line="311" pos:column="40">&amp;<pos:position pos:line="311" pos:column="45"/></operator> <operator pos:line="311" pos:column="42">(<pos:position pos:line="311" pos:column="43"/></operator><literal type="number" pos:line="311" pos:column="43">1u<pos:position pos:line="311" pos:column="45"/></literal> <operator pos:line="311" pos:column="46">&lt;&lt;<pos:position pos:line="311" pos:column="54"/></operator> <name pos:line="311" pos:column="49">REV_SHIFT<pos:position pos:line="311" pos:column="58"/></name><operator pos:line="311" pos:column="58">)<pos:position pos:line="311" pos:column="59"/></operator><operator pos:line="311" pos:column="59">)<pos:position pos:line="311" pos:column="60"/></operator></expr>)<pos:position pos:line="311" pos:column="61"/></condition><then pos:line="311" pos:column="61">
				<block type="pseudo"><continue pos:line="312" pos:column="33">continue;<pos:position pos:line="312" pos:column="42"/></continue></block></then></if>
			<if pos:line="313" pos:column="25">if <condition pos:line="313" pos:column="28">(<expr><name pos:line="313" pos:column="29">dense<pos:position pos:line="313" pos:column="34"/></name> <operator pos:line="313" pos:column="35">&amp;&amp;<pos:position pos:line="313" pos:column="45"/></operator> <name pos:line="313" pos:column="38">is_merge<pos:position pos:line="313" pos:column="46"/></name> <operator pos:line="313" pos:column="47">&amp;&amp;<pos:position pos:line="313" pos:column="57"/></operator>
			    <call><name pos:line="314" pos:column="29">omit_in_dense<pos:position pos:line="314" pos:column="42"/></name><argument_list pos:line="314" pos:column="42">(<argument><expr><name pos:line="314" pos:column="43">commit<pos:position pos:line="314" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="314" pos:column="51">rev<pos:position pos:line="314" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="314" pos:column="56">num_rev<pos:position pos:line="314" pos:column="63"/></name></expr></argument>)<pos:position pos:line="314" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="314" pos:column="65"/></condition><then pos:line="314" pos:column="65">
				<block type="pseudo"><continue pos:line="315" pos:column="33">continue;<pos:position pos:line="315" pos:column="42"/></continue></block></then></if>
			<for pos:line="316" pos:column="25">for <control pos:line="316" pos:column="29">(<init><expr><name pos:line="316" pos:column="30">i<pos:position pos:line="316" pos:column="31"/></name> <operator pos:line="316" pos:column="32">=<pos:position pos:line="316" pos:column="33"/></operator> <literal type="number" pos:line="316" pos:column="34">0<pos:position pos:line="316" pos:column="35"/></literal></expr>;<pos:position pos:line="316" pos:column="36"/></init> <condition><expr><name pos:line="316" pos:column="37">i<pos:position pos:line="316" pos:column="38"/></name> <operator pos:line="316" pos:column="39">&lt;<pos:position pos:line="316" pos:column="43"/></operator> <name pos:line="316" pos:column="41">num_rev<pos:position pos:line="316" pos:column="48"/></name></expr>;<pos:position pos:line="316" pos:column="49"/></condition> <incr><expr><name pos:line="316" pos:column="50">i<pos:position pos:line="316" pos:column="51"/></name><operator pos:line="316" pos:column="51">++<pos:position pos:line="316" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="316" pos:column="54"/></control> <block pos:line="316" pos:column="55">{
				<decl_stmt><decl><type><name pos:line="317" pos:column="33">int<pos:position pos:line="317" pos:column="36"/></name></type> <name pos:line="317" pos:column="37">mark<pos:position pos:line="317" pos:column="41"/></name></decl>;<pos:position pos:line="317" pos:column="42"/></decl_stmt>
				<if pos:line="318" pos:column="33">if <condition pos:line="318" pos:column="36">(<expr><operator pos:line="318" pos:column="37">!<pos:position pos:line="318" pos:column="38"/></operator><operator pos:line="318" pos:column="38">(<pos:position pos:line="318" pos:column="39"/></operator><name pos:line="318" pos:column="39">this_flag<pos:position pos:line="318" pos:column="48"/></name> <operator pos:line="318" pos:column="49">&amp;<pos:position pos:line="318" pos:column="54"/></operator> <operator pos:line="318" pos:column="51">(<pos:position pos:line="318" pos:column="52"/></operator><literal type="number" pos:line="318" pos:column="52">1u<pos:position pos:line="318" pos:column="54"/></literal> <operator pos:line="318" pos:column="55">&lt;&lt;<pos:position pos:line="318" pos:column="63"/></operator> <operator pos:line="318" pos:column="58">(<pos:position pos:line="318" pos:column="59"/></operator><name pos:line="318" pos:column="59">i<pos:position pos:line="318" pos:column="60"/></name> <operator pos:line="318" pos:column="61">+<pos:position pos:line="318" pos:column="62"/></operator> <name pos:line="318" pos:column="63">REV_SHIFT<pos:position pos:line="318" pos:column="72"/></name><operator pos:line="318" pos:column="72">)<pos:position pos:line="318" pos:column="73"/></operator><operator pos:line="318" pos:column="73">)<pos:position pos:line="318" pos:column="74"/></operator><operator pos:line="318" pos:column="74">)<pos:position pos:line="318" pos:column="75"/></operator></expr>)<pos:position pos:line="318" pos:column="76"/></condition><then pos:line="318" pos:column="76">
					<block type="pseudo"><expr_stmt><expr><name pos:line="319" pos:column="41">mark<pos:position pos:line="319" pos:column="45"/></name> <operator pos:line="319" pos:column="46">=<pos:position pos:line="319" pos:column="47"/></operator> <literal type="char" pos:line="319" pos:column="48">' '<pos:position pos:line="319" pos:column="51"/></literal></expr>;<pos:position pos:line="319" pos:column="52"/></expr_stmt></block></then>
				<elseif pos:line="320" pos:column="33">else <if pos:line="320" pos:column="38">if <condition pos:line="320" pos:column="41">(<expr><name pos:line="320" pos:column="42">is_merge<pos:position pos:line="320" pos:column="50"/></name></expr>)<pos:position pos:line="320" pos:column="51"/></condition><then pos:line="320" pos:column="51">
					<block type="pseudo"><expr_stmt><expr><name pos:line="321" pos:column="41">mark<pos:position pos:line="321" pos:column="45"/></name> <operator pos:line="321" pos:column="46">=<pos:position pos:line="321" pos:column="47"/></operator> <literal type="char" pos:line="321" pos:column="48">'-'<pos:position pos:line="321" pos:column="51"/></literal></expr>;<pos:position pos:line="321" pos:column="52"/></expr_stmt></block></then></if></elseif>
				<elseif pos:line="322" pos:column="33">else <if pos:line="322" pos:column="38">if <condition pos:line="322" pos:column="41">(<expr><name pos:line="322" pos:column="42">i<pos:position pos:line="322" pos:column="43"/></name> <operator pos:line="322" pos:column="44">==<pos:position pos:line="322" pos:column="46"/></operator> <name pos:line="322" pos:column="47">head_at<pos:position pos:line="322" pos:column="54"/></name></expr>)<pos:position pos:line="322" pos:column="55"/></condition><then pos:line="322" pos:column="55">
					<block type="pseudo"><expr_stmt><expr><name pos:line="323" pos:column="41">mark<pos:position pos:line="323" pos:column="45"/></name> <operator pos:line="323" pos:column="46">=<pos:position pos:line="323" pos:column="47"/></operator> <literal type="char" pos:line="323" pos:column="48">'*'<pos:position pos:line="323" pos:column="51"/></literal></expr>;<pos:position pos:line="323" pos:column="52"/></expr_stmt></block></then></if></elseif>
				<else pos:line="324" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="325" pos:column="41">mark<pos:position pos:line="325" pos:column="45"/></name> <operator pos:line="325" pos:column="46">=<pos:position pos:line="325" pos:column="47"/></operator> <literal type="char" pos:line="325" pos:column="48">'+'<pos:position pos:line="325" pos:column="51"/></literal></expr>;<pos:position pos:line="325" pos:column="52"/></expr_stmt></block></else></if>
				<expr_stmt><expr><call><name pos:line="326" pos:column="33">printf<pos:position pos:line="326" pos:column="39"/></name><argument_list pos:line="326" pos:column="39">(<argument><expr><literal type="string" pos:line="326" pos:column="40">"%s%c%s"<pos:position pos:line="326" pos:column="48"/></literal></expr></argument>,
				       <argument><expr><call><name pos:line="327" pos:column="40">get_color_code<pos:position pos:line="327" pos:column="54"/></name><argument_list pos:line="327" pos:column="54">(<argument><expr><name pos:line="327" pos:column="55">i<pos:position pos:line="327" pos:column="56"/></name></expr></argument>)<pos:position pos:line="327" pos:column="57"/></argument_list></call></expr></argument>,
				       <argument><expr><name pos:line="328" pos:column="40">mark<pos:position pos:line="328" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="328" pos:column="46">get_color_reset_code<pos:position pos:line="328" pos:column="66"/></name><argument_list pos:line="328" pos:column="66">()<pos:position pos:line="328" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="328" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="329" pos:column="26"/></block></for>
			<expr_stmt><expr><call><name pos:line="330" pos:column="25">putchar<pos:position pos:line="330" pos:column="32"/></name><argument_list pos:line="330" pos:column="32">(<argument><expr><literal type="char" pos:line="330" pos:column="33">' '<pos:position pos:line="330" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="330" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="331" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="332" pos:column="17">show_one_commit<pos:position pos:line="332" pos:column="32"/></name><argument_list pos:line="332" pos:column="32">(<argument><expr><name pos:line="332" pos:column="33">commit<pos:position pos:line="332" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="332" pos:column="41">no_name<pos:position pos:line="332" pos:column="48"/></name></expr></argument>)<pos:position pos:line="332" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="50"/></expr_stmt>

		<if pos:line="334" pos:column="17">if <condition pos:line="334" pos:column="20">(<expr><name pos:line="334" pos:column="21">shown_merge_point<pos:position pos:line="334" pos:column="38"/></name> <operator pos:line="334" pos:column="39">&amp;&amp;<pos:position pos:line="334" pos:column="49"/></operator> <operator pos:line="334" pos:column="42">--<pos:position pos:line="334" pos:column="44"/></operator><name pos:line="334" pos:column="44">extra<pos:position pos:line="334" pos:column="49"/></name> <operator pos:line="334" pos:column="50">&lt;<pos:position pos:line="334" pos:column="54"/></operator> <literal type="number" pos:line="334" pos:column="52">0<pos:position pos:line="334" pos:column="53"/></literal></expr>)<pos:position pos:line="334" pos:column="54"/></condition><then pos:line="334" pos:column="54">
			<block type="pseudo"><break pos:line="335" pos:column="25">break;<pos:position pos:line="335" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="336" pos:column="10"/></block></while>
	<return pos:line="337" pos:column="9">return <expr><literal type="number" pos:line="337" pos:column="16">0<pos:position pos:line="337" pos:column="17"/></literal></expr>;<pos:position pos:line="337" pos:column="18"/></return>
}<pos:position pos:line="338" pos:column="2"/></block></function></unit>

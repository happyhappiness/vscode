<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_449_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">print_line<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">strbuf<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">buf<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">strbuf_addch<pos:position pos:line="3" pos:column="21"/></name><argument_list pos:line="3" pos:column="21">(<argument><expr><name pos:line="3" pos:column="22">buf<pos:position pos:line="3" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="3" pos:column="27">'\n'<pos:position pos:line="3" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">write_or_die<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><call><name pos:line="4" pos:column="22">get_lock_file_fd<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><operator pos:line="4" pos:column="39">&amp;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="40">credential_lock<pos:position pos:line="4" pos:column="55"/></name></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="58">buf<pos:position pos:line="4" pos:column="61"/></name><operator pos:line="4" pos:column="61">-&gt;<pos:position pos:line="4" pos:column="66"/></operator><name pos:line="4" pos:column="63">buf<pos:position pos:line="4" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="68">buf<pos:position pos:line="4" pos:column="71"/></name><operator pos:line="4" pos:column="71">-&gt;<pos:position pos:line="4" pos:column="76"/></operator><name pos:line="4" pos:column="73">len<pos:position pos:line="4" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="78"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

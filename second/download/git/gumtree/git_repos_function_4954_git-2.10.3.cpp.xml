<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4954_git-2.10.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">build_fake_ancestor<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">am_state<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">state<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="62">const<pos:position pos:line="1" pos:column="67"/></specifier> <name pos:line="1" pos:column="68">char<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">index_file<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">child_process<pos:position pos:line="3" pos:column="29"/></name></name></type> <name pos:line="3" pos:column="30">cp<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">CHILD_PROCESS_INIT<pos:position pos:line="3" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="54"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="5" pos:column="9">cp<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">.<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">git_cmd<pos:position pos:line="5" pos:column="19"/></name></name> <operator pos:line="5" pos:column="20">=<pos:position pos:line="5" pos:column="21"/></operator> <literal type="number" pos:line="5" pos:column="22">1<pos:position pos:line="5" pos:column="23"/></literal></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">argv_array_push<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><operator pos:line="6" pos:column="25">&amp;<pos:position pos:line="6" pos:column="30"/></operator><name><name pos:line="6" pos:column="26">cp<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">.<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">args<pos:position pos:line="6" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="35">"apply"<pos:position pos:line="6" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">argv_array_pushv<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><operator pos:line="7" pos:column="26">&amp;<pos:position pos:line="7" pos:column="31"/></operator><name><name pos:line="7" pos:column="27">cp<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">.<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="30">args<pos:position pos:line="7" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="36">state<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">-&gt;<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="43">git_apply_opts<pos:position pos:line="7" pos:column="57"/></name><operator pos:line="7" pos:column="57">.<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="58">argv<pos:position pos:line="7" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">argv_array_pushf<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><operator pos:line="8" pos:column="26">&amp;<pos:position pos:line="8" pos:column="31"/></operator><name><name pos:line="8" pos:column="27">cp<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">.<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">args<pos:position pos:line="8" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="36">"--build-fake-ancestor=%s"<pos:position pos:line="8" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="64">index_file<pos:position pos:line="8" pos:column="74"/></name></expr></argument>)<pos:position pos:line="8" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="76"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">argv_array_push<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><operator pos:line="9" pos:column="25">&amp;<pos:position pos:line="9" pos:column="30"/></operator><name><name pos:line="9" pos:column="26">cp<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">.<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">args<pos:position pos:line="9" pos:column="33"/></name></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="35">am_path<pos:position pos:line="9" pos:column="42"/></name><argument_list pos:line="9" pos:column="42">(<argument><expr><name pos:line="9" pos:column="43">state<pos:position pos:line="9" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="50">"patch"<pos:position pos:line="9" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">run_command<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><operator pos:line="11" pos:column="25">&amp;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="26">cp<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">-<pos:position pos:line="12" pos:column="25"/></operator><literal type="number" pos:line="12" pos:column="25">1<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></return></block></then></if>

	<return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

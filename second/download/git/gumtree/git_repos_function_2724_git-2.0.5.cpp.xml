<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2724_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_merge_trees<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">index_only<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">tree<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">common<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="3" pos:column="28">struct<pos:position pos:line="3" pos:column="34"/></name> <name pos:line="3" pos:column="35">tree<pos:position pos:line="3" pos:column="39"/></name></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">head<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="4" pos:column="28">struct<pos:position pos:line="4" pos:column="34"/></name> <name pos:line="4" pos:column="35">tree<pos:position pos:line="4" pos:column="39"/></name></name> <modifier pos:line="4" pos:column="40">*<pos:position pos:line="4" pos:column="41"/></modifier></type><name pos:line="4" pos:column="41">merge<pos:position pos:line="4" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="47"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">rc<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">tree_desc<pos:position pos:line="7" pos:column="25"/></name></name></type> <name><name pos:line="7" pos:column="26">t<pos:position pos:line="7" pos:column="27"/></name><index pos:line="7" pos:column="27">[<expr><literal type="number" pos:line="7" pos:column="28">3<pos:position pos:line="7" pos:column="29"/></literal></expr>]<pos:position pos:line="7" pos:column="30"/></index></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">unpack_trees_options<pos:position pos:line="8" pos:column="36"/></name></name></type> <name pos:line="8" pos:column="37">opts<pos:position pos:line="8" pos:column="41"/></name></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">memset<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><operator pos:line="10" pos:column="16">&amp;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="17">opts<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="23">0<pos:position pos:line="10" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="26">sizeof<argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">opts<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">index_only<pos:position pos:line="11" pos:column="23"/></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="17">opts<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">.<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">index_only<pos:position pos:line="12" pos:column="32"/></name></name> <operator pos:line="12" pos:column="33">=<pos:position pos:line="12" pos:column="34"/></operator> <literal type="number" pos:line="12" pos:column="35">1<pos:position pos:line="12" pos:column="36"/></literal></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt></block></then>
	<else pos:line="13" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="17">opts<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">.<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">update<pos:position pos:line="14" pos:column="28"/></name></name> <operator pos:line="14" pos:column="29">=<pos:position pos:line="14" pos:column="30"/></operator> <literal type="number" pos:line="14" pos:column="31">1<pos:position pos:line="14" pos:column="32"/></literal></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">opts<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">.<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">merge<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="22">1<pos:position pos:line="15" pos:column="23"/></literal></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">opts<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">.<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">head_idx<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <literal type="number" pos:line="16" pos:column="25">2<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">opts<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">.<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">fn<pos:position pos:line="17" pos:column="16"/></name></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">threeway_merge<pos:position pos:line="17" pos:column="33"/></name></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">opts<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">.<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">src_index<pos:position pos:line="18" pos:column="23"/></name></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <operator pos:line="18" pos:column="26">&amp;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="27">the_index<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">opts<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">.<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">dst_index<pos:position pos:line="19" pos:column="23"/></name></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <operator pos:line="19" pos:column="26">&amp;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="27">the_index<pos:position pos:line="19" pos:column="36"/></name></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">setup_unpack_trees_porcelain<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><operator pos:line="20" pos:column="38">&amp;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="39">opts<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="45">"merge"<pos:position pos:line="20" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">init_tree_desc_from_tree<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">t<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">+<pos:position pos:line="22" pos:column="36"/></operator><literal type="number" pos:line="22" pos:column="36">0<pos:position pos:line="22" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="39">common<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">init_tree_desc_from_tree<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">t<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">+<pos:position pos:line="23" pos:column="36"/></operator><literal type="number" pos:line="23" pos:column="36">1<pos:position pos:line="23" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="39">head<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">init_tree_desc_from_tree<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">t<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">+<pos:position pos:line="24" pos:column="36"/></operator><literal type="number" pos:line="24" pos:column="36">2<pos:position pos:line="24" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="39">merge<pos:position pos:line="24" pos:column="44"/></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><name pos:line="26" pos:column="9">rc<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">unpack_trees<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><literal type="number" pos:line="26" pos:column="27">3<pos:position pos:line="26" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="30">t<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="33">&amp;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="34">opts<pos:position pos:line="26" pos:column="38"/></name></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">cache_tree_free<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><operator pos:line="27" pos:column="25">&amp;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="26">active_cache_tree<pos:position pos:line="27" pos:column="43"/></name></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
	<return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">rc<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

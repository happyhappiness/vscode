<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4409_git-2.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">apply_patch<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">fd<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">filename<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">options<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">offset<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt> <comment type="block" pos:line="4" pos:column="42">/* owns the patch text */</comment>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">patch<pos:position pos:line="5" pos:column="21"/></name></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">list<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">NULL<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></modifier><modifier pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="38">listp<pos:position pos:line="5" pos:column="43"/></name> <init pos:line="5" pos:column="44">= <expr><operator pos:line="5" pos:column="46">&amp;<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="47">list<pos:position pos:line="5" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">skipped_patch<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><literal type="number" pos:line="6" pos:column="29">0<pos:position pos:line="6" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">patch_input_file<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">filename<pos:position pos:line="8" pos:column="36"/></name></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">read_patch_file<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><operator pos:line="9" pos:column="25">&amp;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="26">buf<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="31">fd<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">offset<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
	<while pos:line="11" pos:column="9">while <condition pos:line="11" pos:column="15">(<expr><name pos:line="11" pos:column="16">offset<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="25">buf<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">.<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">len<pos:position pos:line="11" pos:column="32"/></name></name></expr>)<pos:position pos:line="11" pos:column="33"/></condition> <block pos:line="11" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">patch<pos:position pos:line="12" pos:column="29"/></name></name> <modifier pos:line="12" pos:column="30">*<pos:position pos:line="12" pos:column="31"/></modifier></type><name pos:line="12" pos:column="31">patch<pos:position pos:line="12" pos:column="36"/></name></decl>;<pos:position pos:line="12" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">nr<pos:position pos:line="13" pos:column="23"/></name></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>

		<expr_stmt><expr><name pos:line="15" pos:column="17">patch<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <call><name pos:line="15" pos:column="25">xcalloc<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><literal type="number" pos:line="15" pos:column="33">1<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="36">sizeof<argument_list pos:line="15" pos:column="42">(<argument><expr><operator pos:line="15" pos:column="43">*<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="44">patch<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">patch<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">inaccurate_eof<pos:position pos:line="16" pos:column="38"/></name></name> <operator pos:line="16" pos:column="39">=<pos:position pos:line="16" pos:column="40"/></operator> <operator pos:line="16" pos:column="41">!<pos:position pos:line="16" pos:column="42"/></operator><operator pos:line="16" pos:column="42">!<pos:position pos:line="16" pos:column="43"/></operator><operator pos:line="16" pos:column="43">(<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">options<pos:position pos:line="16" pos:column="51"/></name> <operator pos:line="16" pos:column="52">&amp;<pos:position pos:line="16" pos:column="57"/></operator> <name pos:line="16" pos:column="54">INACCURATE_EOF<pos:position pos:line="16" pos:column="68"/></name><operator pos:line="16" pos:column="68">)<pos:position pos:line="16" pos:column="69"/></operator></expr>;<pos:position pos:line="16" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="17" pos:column="17">patch<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">recount<pos:position pos:line="17" pos:column="31"/></name></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator>  <operator pos:line="17" pos:column="35">!<pos:position pos:line="17" pos:column="36"/></operator><operator pos:line="17" pos:column="36">!<pos:position pos:line="17" pos:column="37"/></operator><operator pos:line="17" pos:column="37">(<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="38">options<pos:position pos:line="17" pos:column="45"/></name> <operator pos:line="17" pos:column="46">&amp;<pos:position pos:line="17" pos:column="51"/></operator> <name pos:line="17" pos:column="48">RECOUNT<pos:position pos:line="17" pos:column="55"/></name><operator pos:line="17" pos:column="55">)<pos:position pos:line="17" pos:column="56"/></operator></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">nr<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <call><name pos:line="18" pos:column="22">parse_chunk<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name><name pos:line="18" pos:column="34">buf<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">.<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="38">buf<pos:position pos:line="18" pos:column="41"/></name></name> <operator pos:line="18" pos:column="42">+<pos:position pos:line="18" pos:column="43"/></operator> <name pos:line="18" pos:column="44">offset<pos:position pos:line="18" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="52">buf<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">.<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="56">len<pos:position pos:line="18" pos:column="59"/></name></name> <operator pos:line="18" pos:column="60">-<pos:position pos:line="18" pos:column="61"/></operator> <name pos:line="18" pos:column="62">offset<pos:position pos:line="18" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="70">patch<pos:position pos:line="18" pos:column="75"/></name></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="77"/></expr_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">nr<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">&lt;<pos:position pos:line="19" pos:column="28"/></operator> <literal type="number" pos:line="19" pos:column="26">0<pos:position pos:line="19" pos:column="27"/></literal></expr>)<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28">
			<block type="pseudo"><break pos:line="20" pos:column="25">break;<pos:position pos:line="20" pos:column="31"/></break></block></then></if>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">apply_in_reverse<pos:position pos:line="21" pos:column="37"/></name></expr>)<pos:position pos:line="21" pos:column="38"/></condition><then pos:line="21" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="25">reverse_patches<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><name pos:line="22" pos:column="41">patch<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt></block></then></if>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">use_patch<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">patch<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="38"/></condition><then pos:line="23" pos:column="38"> <block pos:line="23" pos:column="39">{
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">patch_stats<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><name pos:line="24" pos:column="37">patch<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="25" pos:column="25">*<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">listp<pos:position pos:line="25" pos:column="31"/></name> <operator pos:line="25" pos:column="32">=<pos:position pos:line="25" pos:column="33"/></operator> <name pos:line="25" pos:column="34">patch<pos:position pos:line="25" pos:column="39"/></name></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="26" pos:column="25">listp<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">=<pos:position pos:line="26" pos:column="32"/></operator> <operator pos:line="26" pos:column="33">&amp;<pos:position pos:line="26" pos:column="38"/></operator><name><name pos:line="26" pos:column="34">patch<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">-&gt;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="41">next<pos:position pos:line="26" pos:column="45"/></name></name></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></then>
		<else pos:line="28" pos:column="17">else <block pos:line="28" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">free_patch<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">patch<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">skipped_patch<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">++<pos:position pos:line="30" pos:column="40"/></operator></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="32" pos:column="17">offset<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">+=<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">nr<pos:position pos:line="32" pos:column="29"/></name></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></while>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">list<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">&amp;&amp;<pos:position pos:line="35" pos:column="29"/></operator> <operator pos:line="35" pos:column="22">!<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="23">skipped_patch<pos:position pos:line="35" pos:column="36"/></name></expr>)<pos:position pos:line="35" pos:column="37"/></condition><then pos:line="35" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">die<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><call><name pos:line="36" pos:column="21">_<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><literal type="string" pos:line="36" pos:column="23">"unrecognized input"<pos:position pos:line="36" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt></block></then></if>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">whitespace_error<pos:position pos:line="38" pos:column="29"/></name> <operator pos:line="38" pos:column="30">&amp;&amp;<pos:position pos:line="38" pos:column="40"/></operator> <operator pos:line="38" pos:column="33">(<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="34">ws_error_action<pos:position pos:line="38" pos:column="49"/></name> <operator pos:line="38" pos:column="50">==<pos:position pos:line="38" pos:column="52"/></operator> <name pos:line="38" pos:column="53">die_on_ws_error<pos:position pos:line="38" pos:column="68"/></name><operator pos:line="38" pos:column="68">)<pos:position pos:line="38" pos:column="69"/></operator></expr>)<pos:position pos:line="38" pos:column="70"/></condition><then pos:line="38" pos:column="70">
		<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="17">apply<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <literal type="number" pos:line="39" pos:column="25">0<pos:position pos:line="39" pos:column="26"/></literal></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="41" pos:column="9">update_index<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="24">check_index<pos:position pos:line="41" pos:column="35"/></name> <operator pos:line="41" pos:column="36">&amp;&amp;<pos:position pos:line="41" pos:column="46"/></operator> <name pos:line="41" pos:column="39">apply<pos:position pos:line="41" pos:column="44"/></name></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">update_index<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">&amp;&amp;<pos:position pos:line="42" pos:column="36"/></operator> <name pos:line="42" pos:column="29">newfd<pos:position pos:line="42" pos:column="34"/></name> <operator pos:line="42" pos:column="35">&lt;<pos:position pos:line="42" pos:column="39"/></operator> <literal type="number" pos:line="42" pos:column="37">0<pos:position pos:line="42" pos:column="38"/></literal></expr>)<pos:position pos:line="42" pos:column="39"/></condition><then pos:line="42" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="17">newfd<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">=<pos:position pos:line="43" pos:column="24"/></operator> <call><name pos:line="43" pos:column="25">hold_locked_index<pos:position pos:line="43" pos:column="42"/></name><argument_list pos:line="43" pos:column="42">(<argument><expr><operator pos:line="43" pos:column="43">&amp;<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="44">lock_file<pos:position pos:line="43" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="55">1<pos:position pos:line="43" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="58"/></expr_stmt></block></then></if>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">check_index<pos:position pos:line="45" pos:column="24"/></name></expr>)<pos:position pos:line="45" pos:column="25"/></condition><then pos:line="45" pos:column="25"> <block pos:line="45" pos:column="26">{
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><call><name pos:line="46" pos:column="21">read_cache<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">()<pos:position pos:line="46" pos:column="33"/></argument_list></call> <operator pos:line="46" pos:column="34">&lt;<pos:position pos:line="46" pos:column="38"/></operator> <literal type="number" pos:line="46" pos:column="36">0<pos:position pos:line="46" pos:column="37"/></literal></expr>)<pos:position pos:line="46" pos:column="38"/></condition><then pos:line="46" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="25">die<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><call><name pos:line="47" pos:column="29">_<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><literal type="string" pos:line="47" pos:column="31">"unable to read index file"<pos:position pos:line="47" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="61"/></expr_stmt></block></then></if>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>

	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">(<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">check<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">||<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">apply<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">)<pos:position pos:line="50" pos:column="29"/></operator> <operator pos:line="50" pos:column="30">&amp;&amp;<pos:position pos:line="50" pos:column="40"/></operator>
	    <call><name pos:line="51" pos:column="13">check_patch_list<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">(<argument><expr><name pos:line="51" pos:column="30">list<pos:position pos:line="51" pos:column="34"/></name></expr></argument>)<pos:position pos:line="51" pos:column="35"/></argument_list></call> <operator pos:line="51" pos:column="36">&lt;<pos:position pos:line="51" pos:column="40"/></operator> <literal type="number" pos:line="51" pos:column="38">0<pos:position pos:line="51" pos:column="39"/></literal> <operator pos:line="51" pos:column="40">&amp;&amp;<pos:position pos:line="51" pos:column="50"/></operator>
	    <operator pos:line="52" pos:column="13">!<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">apply_with_reject<pos:position pos:line="52" pos:column="31"/></name></expr>)<pos:position pos:line="52" pos:column="32"/></condition><then pos:line="52" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="17">exit<pos:position pos:line="53" pos:column="21"/></name><argument_list pos:line="53" pos:column="21">(<argument><expr><literal type="number" pos:line="53" pos:column="22">1<pos:position pos:line="53" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt></block></then></if>

	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">apply<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">&amp;&amp;<pos:position pos:line="55" pos:column="29"/></operator> <call><name pos:line="55" pos:column="22">write_out_results<pos:position pos:line="55" pos:column="39"/></name><argument_list pos:line="55" pos:column="39">(<argument><expr><name pos:line="55" pos:column="40">list<pos:position pos:line="55" pos:column="44"/></name></expr></argument>)<pos:position pos:line="55" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="46"/></condition><then pos:line="55" pos:column="46"> <block pos:line="55" pos:column="47">{
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name pos:line="56" pos:column="21">apply_with_reject<pos:position pos:line="56" pos:column="38"/></name></expr>)<pos:position pos:line="56" pos:column="39"/></condition><then pos:line="56" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="25">exit<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><literal type="number" pos:line="57" pos:column="30">1<pos:position pos:line="57" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="58" pos:column="17">/* with --3way, we still need to write the index out */</comment>
		<return pos:line="59" pos:column="17">return <expr><literal type="number" pos:line="59" pos:column="24">1<pos:position pos:line="59" pos:column="25"/></literal></expr>;<pos:position pos:line="59" pos:column="26"/></return>
	}<pos:position pos:line="60" pos:column="10"/></block></then></if>

	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">fake_ancestor<pos:position pos:line="62" pos:column="26"/></name></expr>)<pos:position pos:line="62" pos:column="27"/></condition><then pos:line="62" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="17">build_fake_ancestor<pos:position pos:line="63" pos:column="36"/></name><argument_list pos:line="63" pos:column="36">(<argument><expr><name pos:line="63" pos:column="37">list<pos:position pos:line="63" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="43">fake_ancestor<pos:position pos:line="63" pos:column="56"/></name></expr></argument>)<pos:position pos:line="63" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="58"/></expr_stmt></block></then></if>

	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">diffstat<pos:position pos:line="65" pos:column="21"/></name></expr>)<pos:position pos:line="65" pos:column="22"/></condition><then pos:line="65" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="17">stat_patch_list<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">(<argument><expr><name pos:line="66" pos:column="33">list<pos:position pos:line="66" pos:column="37"/></name></expr></argument>)<pos:position pos:line="66" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="39"/></expr_stmt></block></then></if>

	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">numstat<pos:position pos:line="68" pos:column="20"/></name></expr>)<pos:position pos:line="68" pos:column="21"/></condition><then pos:line="68" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="17">numstat_patch_list<pos:position pos:line="69" pos:column="35"/></name><argument_list pos:line="69" pos:column="35">(<argument><expr><name pos:line="69" pos:column="36">list<pos:position pos:line="69" pos:column="40"/></name></expr></argument>)<pos:position pos:line="69" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt></block></then></if>

	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">summary<pos:position pos:line="71" pos:column="20"/></name></expr>)<pos:position pos:line="71" pos:column="21"/></condition><then pos:line="71" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="17">summary_patch_list<pos:position pos:line="72" pos:column="35"/></name><argument_list pos:line="72" pos:column="35">(<argument><expr><name pos:line="72" pos:column="36">list<pos:position pos:line="72" pos:column="40"/></name></expr></argument>)<pos:position pos:line="72" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="42"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="74" pos:column="9">free_patch_list<pos:position pos:line="74" pos:column="24"/></name><argument_list pos:line="74" pos:column="24">(<argument><expr><name pos:line="74" pos:column="25">list<pos:position pos:line="74" pos:column="29"/></name></expr></argument>)<pos:position pos:line="74" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="75" pos:column="9">strbuf_release<pos:position pos:line="75" pos:column="23"/></name><argument_list pos:line="75" pos:column="23">(<argument><expr><operator pos:line="75" pos:column="24">&amp;<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="25">buf<pos:position pos:line="75" pos:column="28"/></name></expr></argument>)<pos:position pos:line="75" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="76" pos:column="9">string_list_clear<pos:position pos:line="76" pos:column="26"/></name><argument_list pos:line="76" pos:column="26">(<argument><expr><operator pos:line="76" pos:column="27">&amp;<pos:position pos:line="76" pos:column="32"/></operator><name pos:line="76" pos:column="28">fn_table<pos:position pos:line="76" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="38">0<pos:position pos:line="76" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="41"/></expr_stmt>
	<return pos:line="77" pos:column="9">return <expr><literal type="number" pos:line="77" pos:column="16">0<pos:position pos:line="77" pos:column="17"/></literal></expr>;<pos:position pos:line="77" pos:column="18"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2245_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">unsigned<pos:position pos:line="1" pos:column="22"/></name> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">get_delta_base_sha1<pos:position pos:line="1" pos:column="48"/></name><parameter_list pos:line="1" pos:column="48">(<parameter><decl><type><name><name pos:line="1" pos:column="49">struct<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">packed_git<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">p<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
						<parameter><decl><type><name><name pos:line="2" pos:column="49">struct<pos:position pos:line="2" pos:column="55"/></name> <name pos:line="2" pos:column="56">pack_window<pos:position pos:line="2" pos:column="67"/></name></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier><modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">w_curs<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>,
						<parameter><decl><type><name pos:line="3" pos:column="49">off_t<pos:position pos:line="3" pos:column="54"/></name></type> <name pos:line="3" pos:column="55">curpos<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>,
						<parameter><decl><type><name><name pos:line="4" pos:column="49">enum<pos:position pos:line="4" pos:column="53"/></name> <name pos:line="4" pos:column="54">object_type<pos:position pos:line="4" pos:column="65"/></name></name></type> <name pos:line="4" pos:column="66">type<pos:position pos:line="4" pos:column="70"/></name></decl></parameter>,
						<parameter><decl><type><name pos:line="5" pos:column="49">off_t<pos:position pos:line="5" pos:column="54"/></name></type> <name pos:line="5" pos:column="55">delta_obj_offset<pos:position pos:line="5" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="72"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">type<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">==<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">OBJ_REF_DELTA<pos:position pos:line="7" pos:column="34"/></name></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35"> <block pos:line="7" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">unsigned<pos:position pos:line="8" pos:column="25"/></name> <name pos:line="8" pos:column="26">char<pos:position pos:line="8" pos:column="30"/></name> <modifier pos:line="8" pos:column="31">*<pos:position pos:line="8" pos:column="32"/></modifier></type><name pos:line="8" pos:column="32">base<pos:position pos:line="8" pos:column="36"/></name> <init pos:line="8" pos:column="37">= <expr><call><name pos:line="8" pos:column="39">use_pack<pos:position pos:line="8" pos:column="47"/></name><argument_list pos:line="8" pos:column="47">(<argument><expr><name pos:line="8" pos:column="48">p<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">w_curs<pos:position pos:line="8" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="59">curpos<pos:position pos:line="8" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="67">NULL<pos:position pos:line="8" pos:column="71"/></name></expr></argument>)<pos:position pos:line="8" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="73"/></decl_stmt>
		<return pos:line="9" pos:column="17">return <expr><name pos:line="9" pos:column="24">base<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then> <elseif pos:line="10" pos:column="11">else <if pos:line="10" pos:column="16">if <condition pos:line="10" pos:column="19">(<expr><name pos:line="10" pos:column="20">type<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">==<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="28">OBJ_OFS_DELTA<pos:position pos:line="10" pos:column="41"/></name></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42"> <block pos:line="10" pos:column="43">{
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">revindex_entry<pos:position pos:line="11" pos:column="38"/></name></name> <modifier pos:line="11" pos:column="39">*<pos:position pos:line="11" pos:column="40"/></modifier></type><name pos:line="11" pos:column="40">revidx<pos:position pos:line="11" pos:column="46"/></name></decl>;<pos:position pos:line="11" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">off_t<pos:position pos:line="12" pos:column="22"/></name></type> <name pos:line="12" pos:column="23">base_offset<pos:position pos:line="12" pos:column="34"/></name> <init pos:line="12" pos:column="35">= <expr><call><name pos:line="12" pos:column="37">get_delta_base<pos:position pos:line="12" pos:column="51"/></name><argument_list pos:line="12" pos:column="51">(<argument><expr><name pos:line="12" pos:column="52">p<pos:position pos:line="12" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="55">w_curs<pos:position pos:line="12" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="63">&amp;<pos:position pos:line="12" pos:column="68"/></operator><name pos:line="12" pos:column="64">curpos<pos:position pos:line="12" pos:column="70"/></name></expr></argument>,
						   <argument><expr><name pos:line="13" pos:column="52">type<pos:position pos:line="13" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="58">delta_obj_offset<pos:position pos:line="13" pos:column="74"/></name></expr></argument>)<pos:position pos:line="13" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="76"/></decl_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">base_offset<pos:position pos:line="15" pos:column="33"/></name></expr>)<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34">
			<block type="pseudo"><return pos:line="16" pos:column="25">return <expr><name pos:line="16" pos:column="32">NULL<pos:position pos:line="16" pos:column="36"/></name></expr>;<pos:position pos:line="16" pos:column="37"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="18" pos:column="17">revidx<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <call><name pos:line="18" pos:column="26">find_pack_revindex<pos:position pos:line="18" pos:column="44"/></name><argument_list pos:line="18" pos:column="44">(<argument><expr><name pos:line="18" pos:column="45">p<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="48">base_offset<pos:position pos:line="18" pos:column="59"/></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">revidx<pos:position pos:line="19" pos:column="28"/></name></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29">
			<block type="pseudo"><return pos:line="20" pos:column="25">return <expr><name pos:line="20" pos:column="32">NULL<pos:position pos:line="20" pos:column="36"/></name></expr>;<pos:position pos:line="20" pos:column="37"/></return></block></then></if>

		<return pos:line="22" pos:column="17">return <expr><call><name pos:line="22" pos:column="24">nth_packed_object_sha1<pos:position pos:line="22" pos:column="46"/></name><argument_list pos:line="22" pos:column="46">(<argument><expr><name pos:line="22" pos:column="47">p<pos:position pos:line="22" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="50">revidx<pos:position pos:line="22" pos:column="56"/></name><operator pos:line="22" pos:column="56">-&gt;<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="58">nr<pos:position pos:line="22" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="62"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif> <else pos:line="23" pos:column="11">else
		<block type="pseudo"><return pos:line="24" pos:column="17">return <expr><name pos:line="24" pos:column="24">NULL<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></return></block></else></if>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1437_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tree_content_set<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(
	<parameter><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">tree_entry<pos:position pos:line="2" pos:column="26"/></name></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">root<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>,
	<parameter><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">p<pos:position pos:line="3" pos:column="22"/></name></decl></parameter>,
	<parameter><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">unsigned<pos:position pos:line="4" pos:column="23"/></name> <name pos:line="4" pos:column="24">char<pos:position pos:line="4" pos:column="28"/></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">sha1<pos:position pos:line="4" pos:column="34"/></name></decl></parameter>,
	<parameter><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">uint16_t<pos:position pos:line="5" pos:column="23"/></name></type> <name pos:line="5" pos:column="24">mode<pos:position pos:line="5" pos:column="28"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">tree_content<pos:position pos:line="6" pos:column="28"/></name></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">subtree<pos:position pos:line="6" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="38"/></parameter_list>
<block pos:line="7" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">tree_content<pos:position pos:line="8" pos:column="28"/></name></name> <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier></type><name pos:line="8" pos:column="30">t<pos:position pos:line="8" pos:column="31"/></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">slash1<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">int<pos:position pos:line="10" pos:column="21"/></name></type> <name pos:line="10" pos:column="22">i<pos:position pos:line="10" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="25">n<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">tree_entry<pos:position pos:line="11" pos:column="26"/></name></name> <modifier pos:line="11" pos:column="27">*<pos:position pos:line="11" pos:column="28"/></modifier></type><name pos:line="11" pos:column="28">e<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">slash1<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">strchrnul<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">p<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="31">'/'<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">n<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">slash1<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">-<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">p<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">n<pos:position pos:line="15" pos:column="15"/></name></expr>)<pos:position pos:line="15" pos:column="16"/></condition><then pos:line="15" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">die<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><literal type="string" pos:line="16" pos:column="21">"Empty path component found in input"<pos:position pos:line="16" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="60"/></expr_stmt></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><operator pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">slash1<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">&amp;&amp;<pos:position pos:line="17" pos:column="32"/></operator> <operator pos:line="17" pos:column="25">!<pos:position pos:line="17" pos:column="26"/></operator><call><name pos:line="17" pos:column="26">S_ISDIR<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">mode<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call> <operator pos:line="17" pos:column="40">&amp;&amp;<pos:position pos:line="17" pos:column="50"/></operator> <name pos:line="17" pos:column="43">subtree<pos:position pos:line="17" pos:column="50"/></name></expr>)<pos:position pos:line="17" pos:column="51"/></condition><then pos:line="17" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">die<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><literal type="string" pos:line="18" pos:column="21">"Non-directories cannot have subtrees"<pos:position pos:line="18" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt></block></then></if>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name><name pos:line="20" pos:column="14">root<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">tree<pos:position pos:line="20" pos:column="24"/></name></name></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">load_tree<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">root<pos:position pos:line="21" pos:column="31"/></name></expr></argument>)<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="22" pos:column="9">t<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <name><name pos:line="22" pos:column="13">root<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">tree<pos:position pos:line="22" pos:column="23"/></name></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">i<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></init> <condition><expr><name pos:line="23" pos:column="21">i<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&lt;<pos:position pos:line="23" pos:column="27"/></operator> <name><name pos:line="23" pos:column="25">t<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">entry_count<pos:position pos:line="23" pos:column="39"/></name></name></expr>;<pos:position pos:line="23" pos:column="40"/></condition> <incr><expr><name pos:line="23" pos:column="41">i<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">++<pos:position pos:line="23" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="45"/></control> <block pos:line="23" pos:column="46">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">e<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name><name pos:line="24" pos:column="21">t<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">entries<pos:position pos:line="24" pos:column="31"/></name><index pos:line="24" pos:column="31">[<expr><name pos:line="24" pos:column="32">i<pos:position pos:line="24" pos:column="33"/></name></expr>]<pos:position pos:line="24" pos:column="34"/></index></name></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">e<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">name<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">str_len<pos:position pos:line="25" pos:column="37"/></name></name> <operator pos:line="25" pos:column="38">==<pos:position pos:line="25" pos:column="40"/></operator> <name pos:line="25" pos:column="41">n<pos:position pos:line="25" pos:column="42"/></name> <operator pos:line="25" pos:column="43">&amp;&amp;<pos:position pos:line="25" pos:column="53"/></operator> <operator pos:line="25" pos:column="46">!<pos:position pos:line="25" pos:column="47"/></operator><call><name pos:line="25" pos:column="47">fspathncmp<pos:position pos:line="25" pos:column="57"/></name><argument_list pos:line="25" pos:column="57">(<argument><expr><name pos:line="25" pos:column="58">p<pos:position pos:line="25" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="61">e<pos:position pos:line="25" pos:column="62"/></name><operator pos:line="25" pos:column="62">-&gt;<pos:position pos:line="25" pos:column="67"/></operator><name pos:line="25" pos:column="64">name<pos:position pos:line="25" pos:column="68"/></name><operator pos:line="25" pos:column="68">-&gt;<pos:position pos:line="25" pos:column="73"/></operator><name pos:line="25" pos:column="70">str_dat<pos:position pos:line="25" pos:column="77"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="79">n<pos:position pos:line="25" pos:column="80"/></name></expr></argument>)<pos:position pos:line="25" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="82"/></condition><then pos:line="25" pos:column="82"> <block pos:line="25" pos:column="83">{
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><operator pos:line="26" pos:column="29">!<pos:position pos:line="26" pos:column="30"/></operator><operator pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="31">slash1<pos:position pos:line="26" pos:column="37"/></name></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38"> <block pos:line="26" pos:column="39">{
				<if pos:line="27" pos:column="33">if <condition pos:line="27" pos:column="36">(<expr><operator pos:line="27" pos:column="37">!<pos:position pos:line="27" pos:column="38"/></operator><call><name pos:line="27" pos:column="38">S_ISDIR<pos:position pos:line="27" pos:column="45"/></name><argument_list pos:line="27" pos:column="45">(<argument><expr><name pos:line="27" pos:column="46">mode<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call>
						<operator pos:line="28" pos:column="49">&amp;&amp;<pos:position pos:line="28" pos:column="59"/></operator> <name><name pos:line="28" pos:column="52">e<pos:position pos:line="28" pos:column="53"/></name><operator pos:line="28" pos:column="53">-&gt;<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="55">versions<pos:position pos:line="28" pos:column="63"/></name><index pos:line="28" pos:column="63">[<expr><literal type="number" pos:line="28" pos:column="64">1<pos:position pos:line="28" pos:column="65"/></literal></expr>]<pos:position pos:line="28" pos:column="66"/></index></name><operator pos:line="28" pos:column="66">.<pos:position pos:line="28" pos:column="67"/></operator><name pos:line="28" pos:column="67">mode<pos:position pos:line="28" pos:column="71"/></name> <operator pos:line="28" pos:column="72">==<pos:position pos:line="28" pos:column="74"/></operator> <name pos:line="28" pos:column="75">mode<pos:position pos:line="28" pos:column="79"/></name>
						<operator pos:line="29" pos:column="49">&amp;&amp;<pos:position pos:line="29" pos:column="59"/></operator> <operator pos:line="29" pos:column="52">!<pos:position pos:line="29" pos:column="53"/></operator><call><name pos:line="29" pos:column="53">hashcmp<pos:position pos:line="29" pos:column="60"/></name><argument_list pos:line="29" pos:column="60">(<argument><expr><name><name pos:line="29" pos:column="61">e<pos:position pos:line="29" pos:column="62"/></name><operator pos:line="29" pos:column="62">-&gt;<pos:position pos:line="29" pos:column="67"/></operator><name pos:line="29" pos:column="64">versions<pos:position pos:line="29" pos:column="72"/></name><index pos:line="29" pos:column="72">[<expr><literal type="number" pos:line="29" pos:column="73">1<pos:position pos:line="29" pos:column="74"/></literal></expr>]<pos:position pos:line="29" pos:column="75"/></index></name><operator pos:line="29" pos:column="75">.<pos:position pos:line="29" pos:column="76"/></operator><name pos:line="29" pos:column="76">sha1<pos:position pos:line="29" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="82">sha1<pos:position pos:line="29" pos:column="86"/></name></expr></argument>)<pos:position pos:line="29" pos:column="87"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="88"/></condition><then pos:line="29" pos:column="88">
					<block type="pseudo"><return pos:line="30" pos:column="41">return <expr><literal type="number" pos:line="30" pos:column="48">0<pos:position pos:line="30" pos:column="49"/></literal></expr>;<pos:position pos:line="30" pos:column="50"/></return></block></then></if>
				<expr_stmt><expr><name><name pos:line="31" pos:column="33">e<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">versions<pos:position pos:line="31" pos:column="44"/></name><index pos:line="31" pos:column="44">[<expr><literal type="number" pos:line="31" pos:column="45">1<pos:position pos:line="31" pos:column="46"/></literal></expr>]<pos:position pos:line="31" pos:column="47"/></index></name><operator pos:line="31" pos:column="47">.<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="48">mode<pos:position pos:line="31" pos:column="52"/></name> <operator pos:line="31" pos:column="53">=<pos:position pos:line="31" pos:column="54"/></operator> <name pos:line="31" pos:column="55">mode<pos:position pos:line="31" pos:column="59"/></name></expr>;<pos:position pos:line="31" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="32" pos:column="33">hashcpy<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name><name pos:line="32" pos:column="41">e<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">versions<pos:position pos:line="32" pos:column="52"/></name><index pos:line="32" pos:column="52">[<expr><literal type="number" pos:line="32" pos:column="53">1<pos:position pos:line="32" pos:column="54"/></literal></expr>]<pos:position pos:line="32" pos:column="55"/></index></name><operator pos:line="32" pos:column="55">.<pos:position pos:line="32" pos:column="56"/></operator><name pos:line="32" pos:column="56">sha1<pos:position pos:line="32" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="62">sha1<pos:position pos:line="32" pos:column="66"/></name></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="68"/></expr_stmt>
				<if pos:line="33" pos:column="33">if <condition pos:line="33" pos:column="36">(<expr><name><name pos:line="33" pos:column="37">e<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">-&gt;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="40">tree<pos:position pos:line="33" pos:column="44"/></name></name></expr>)<pos:position pos:line="33" pos:column="45"/></condition><then pos:line="33" pos:column="45">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="41">release_tree_content_recursive<pos:position pos:line="34" pos:column="71"/></name><argument_list pos:line="34" pos:column="71">(<argument><expr><name><name pos:line="34" pos:column="72">e<pos:position pos:line="34" pos:column="73"/></name><operator pos:line="34" pos:column="73">-&gt;<pos:position pos:line="34" pos:column="78"/></operator><name pos:line="34" pos:column="75">tree<pos:position pos:line="34" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="81"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name><name pos:line="35" pos:column="33">e<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">-&gt;<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="36">tree<pos:position pos:line="35" pos:column="40"/></name></name> <operator pos:line="35" pos:column="41">=<pos:position pos:line="35" pos:column="42"/></operator> <name pos:line="35" pos:column="43">subtree<pos:position pos:line="35" pos:column="50"/></name></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>

				<comment type="block" pos:line="37" pos:column="33">/*
				 * We need to leave e-&gt;versions[0].sha1 alone
				 * to avoid modifying the preimage tree used
				 * when writing out the parent directory.
				 * But after replacing the subdir with a
				 * completely different one, it's not a good
				 * delta base any more, and besides, we've
				 * thrown away the tree entries needed to
				 * make a delta against it.
				 *
				 * So let's just explicitly disable deltas
				 * for the subtree.
				 */</comment>
				<if pos:line="50" pos:column="33">if <condition pos:line="50" pos:column="36">(<expr><call><name pos:line="50" pos:column="37">S_ISDIR<pos:position pos:line="50" pos:column="44"/></name><argument_list pos:line="50" pos:column="44">(<argument><expr><name><name pos:line="50" pos:column="45">e<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">-&gt;<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="48">versions<pos:position pos:line="50" pos:column="56"/></name><index pos:line="50" pos:column="56">[<expr><literal type="number" pos:line="50" pos:column="57">0<pos:position pos:line="50" pos:column="58"/></literal></expr>]<pos:position pos:line="50" pos:column="59"/></index></name><operator pos:line="50" pos:column="59">.<pos:position pos:line="50" pos:column="60"/></operator><name pos:line="50" pos:column="60">mode<pos:position pos:line="50" pos:column="64"/></name></expr></argument>)<pos:position pos:line="50" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="66"/></condition><then pos:line="50" pos:column="66">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="51" pos:column="41">e<pos:position pos:line="51" pos:column="42"/></name><operator pos:line="51" pos:column="42">-&gt;<pos:position pos:line="51" pos:column="47"/></operator><name pos:line="51" pos:column="44">versions<pos:position pos:line="51" pos:column="52"/></name><index pos:line="51" pos:column="52">[<expr><literal type="number" pos:line="51" pos:column="53">0<pos:position pos:line="51" pos:column="54"/></literal></expr>]<pos:position pos:line="51" pos:column="55"/></index></name><operator pos:line="51" pos:column="55">.<pos:position pos:line="51" pos:column="56"/></operator><name pos:line="51" pos:column="56">mode<pos:position pos:line="51" pos:column="60"/></name> <operator pos:line="51" pos:column="61">|=<pos:position pos:line="51" pos:column="63"/></operator> <name pos:line="51" pos:column="64">NO_DELTA<pos:position pos:line="51" pos:column="72"/></name></expr>;<pos:position pos:line="51" pos:column="73"/></expr_stmt></block></then></if>

				<expr_stmt><expr><call><name pos:line="53" pos:column="33">hashclr<pos:position pos:line="53" pos:column="40"/></name><argument_list pos:line="53" pos:column="40">(<argument><expr><name><name pos:line="53" pos:column="41">root<pos:position pos:line="53" pos:column="45"/></name><operator pos:line="53" pos:column="45">-&gt;<pos:position pos:line="53" pos:column="50"/></operator><name pos:line="53" pos:column="47">versions<pos:position pos:line="53" pos:column="55"/></name><index pos:line="53" pos:column="55">[<expr><literal type="number" pos:line="53" pos:column="56">1<pos:position pos:line="53" pos:column="57"/></literal></expr>]<pos:position pos:line="53" pos:column="58"/></index></name><operator pos:line="53" pos:column="58">.<pos:position pos:line="53" pos:column="59"/></operator><name pos:line="53" pos:column="59">sha1<pos:position pos:line="53" pos:column="63"/></name></expr></argument>)<pos:position pos:line="53" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="65"/></expr_stmt>
				<return pos:line="54" pos:column="33">return <expr><literal type="number" pos:line="54" pos:column="40">1<pos:position pos:line="54" pos:column="41"/></literal></expr>;<pos:position pos:line="54" pos:column="42"/></return>
			}<pos:position pos:line="55" pos:column="26"/></block></then></if>
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><operator pos:line="56" pos:column="29">!<pos:position pos:line="56" pos:column="30"/></operator><call><name pos:line="56" pos:column="30">S_ISDIR<pos:position pos:line="56" pos:column="37"/></name><argument_list pos:line="56" pos:column="37">(<argument><expr><name><name pos:line="56" pos:column="38">e<pos:position pos:line="56" pos:column="39"/></name><operator pos:line="56" pos:column="39">-&gt;<pos:position pos:line="56" pos:column="44"/></operator><name pos:line="56" pos:column="41">versions<pos:position pos:line="56" pos:column="49"/></name><index pos:line="56" pos:column="49">[<expr><literal type="number" pos:line="56" pos:column="50">1<pos:position pos:line="56" pos:column="51"/></literal></expr>]<pos:position pos:line="56" pos:column="52"/></index></name><operator pos:line="56" pos:column="52">.<pos:position pos:line="56" pos:column="53"/></operator><name pos:line="56" pos:column="53">mode<pos:position pos:line="56" pos:column="57"/></name></expr></argument>)<pos:position pos:line="56" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="59"/></condition><then pos:line="56" pos:column="59"> <block pos:line="56" pos:column="60">{
				<expr_stmt><expr><name><name pos:line="57" pos:column="33">e<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">-&gt;<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="36">tree<pos:position pos:line="57" pos:column="40"/></name></name> <operator pos:line="57" pos:column="41">=<pos:position pos:line="57" pos:column="42"/></operator> <call><name pos:line="57" pos:column="43">new_tree_content<pos:position pos:line="57" pos:column="59"/></name><argument_list pos:line="57" pos:column="59">(<argument><expr><literal type="number" pos:line="57" pos:column="60">8<pos:position pos:line="57" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="58" pos:column="33">e<pos:position pos:line="58" pos:column="34"/></name><operator pos:line="58" pos:column="34">-&gt;<pos:position pos:line="58" pos:column="39"/></operator><name pos:line="58" pos:column="36">versions<pos:position pos:line="58" pos:column="44"/></name><index pos:line="58" pos:column="44">[<expr><literal type="number" pos:line="58" pos:column="45">1<pos:position pos:line="58" pos:column="46"/></literal></expr>]<pos:position pos:line="58" pos:column="47"/></index></name><operator pos:line="58" pos:column="47">.<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="48">mode<pos:position pos:line="58" pos:column="52"/></name> <operator pos:line="58" pos:column="53">=<pos:position pos:line="58" pos:column="54"/></operator> <name pos:line="58" pos:column="55">S_IFDIR<pos:position pos:line="58" pos:column="62"/></name></expr>;<pos:position pos:line="58" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="59" pos:column="26"/></block></then></if>
			<if pos:line="60" pos:column="25">if <condition pos:line="60" pos:column="28">(<expr><operator pos:line="60" pos:column="29">!<pos:position pos:line="60" pos:column="30"/></operator><name><name pos:line="60" pos:column="30">e<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">-&gt;<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="33">tree<pos:position pos:line="60" pos:column="37"/></name></name></expr>)<pos:position pos:line="60" pos:column="38"/></condition><then pos:line="60" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="33">load_tree<pos:position pos:line="61" pos:column="42"/></name><argument_list pos:line="61" pos:column="42">(<argument><expr><name pos:line="61" pos:column="43">e<pos:position pos:line="61" pos:column="44"/></name></expr></argument>)<pos:position pos:line="61" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="46"/></expr_stmt></block></then></if>
			<if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><call><name pos:line="62" pos:column="29">tree_content_set<pos:position pos:line="62" pos:column="45"/></name><argument_list pos:line="62" pos:column="45">(<argument><expr><name pos:line="62" pos:column="46">e<pos:position pos:line="62" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="49">slash1<pos:position pos:line="62" pos:column="55"/></name> <operator pos:line="62" pos:column="56">+<pos:position pos:line="62" pos:column="57"/></operator> <literal type="number" pos:line="62" pos:column="58">1<pos:position pos:line="62" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="61">sha1<pos:position pos:line="62" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="67">mode<pos:position pos:line="62" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="73">subtree<pos:position pos:line="62" pos:column="80"/></name></expr></argument>)<pos:position pos:line="62" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="82"/></condition><then pos:line="62" pos:column="82"> <block pos:line="62" pos:column="83">{
				<expr_stmt><expr><call><name pos:line="63" pos:column="33">hashclr<pos:position pos:line="63" pos:column="40"/></name><argument_list pos:line="63" pos:column="40">(<argument><expr><name><name pos:line="63" pos:column="41">root<pos:position pos:line="63" pos:column="45"/></name><operator pos:line="63" pos:column="45">-&gt;<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="47">versions<pos:position pos:line="63" pos:column="55"/></name><index pos:line="63" pos:column="55">[<expr><literal type="number" pos:line="63" pos:column="56">1<pos:position pos:line="63" pos:column="57"/></literal></expr>]<pos:position pos:line="63" pos:column="58"/></index></name><operator pos:line="63" pos:column="58">.<pos:position pos:line="63" pos:column="59"/></operator><name pos:line="63" pos:column="59">sha1<pos:position pos:line="63" pos:column="63"/></name></expr></argument>)<pos:position pos:line="63" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="65"/></expr_stmt>
				<return pos:line="64" pos:column="33">return <expr><literal type="number" pos:line="64" pos:column="40">1<pos:position pos:line="64" pos:column="41"/></literal></expr>;<pos:position pos:line="64" pos:column="42"/></return>
			}<pos:position pos:line="65" pos:column="26"/></block></then></if>
			<return pos:line="66" pos:column="25">return <expr><literal type="number" pos:line="66" pos:column="32">0<pos:position pos:line="66" pos:column="33"/></literal></expr>;<pos:position pos:line="66" pos:column="34"/></return>
		}<pos:position pos:line="67" pos:column="18"/></block></then></if>
	}<pos:position pos:line="68" pos:column="10"/></block></for>

	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name><name pos:line="70" pos:column="13">t<pos:position pos:line="70" pos:column="14"/></name><operator pos:line="70" pos:column="14">-&gt;<pos:position pos:line="70" pos:column="19"/></operator><name pos:line="70" pos:column="16">entry_count<pos:position pos:line="70" pos:column="27"/></name></name> <operator pos:line="70" pos:column="28">==<pos:position pos:line="70" pos:column="30"/></operator> <name><name pos:line="70" pos:column="31">t<pos:position pos:line="70" pos:column="32"/></name><operator pos:line="70" pos:column="32">-&gt;<pos:position pos:line="70" pos:column="37"/></operator><name pos:line="70" pos:column="34">entry_capacity<pos:position pos:line="70" pos:column="48"/></name></name></expr>)<pos:position pos:line="70" pos:column="49"/></condition><then pos:line="70" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="71" pos:column="17">root<pos:position pos:line="71" pos:column="21"/></name><operator pos:line="71" pos:column="21">-&gt;<pos:position pos:line="71" pos:column="26"/></operator><name pos:line="71" pos:column="23">tree<pos:position pos:line="71" pos:column="27"/></name></name> <operator pos:line="71" pos:column="28">=<pos:position pos:line="71" pos:column="29"/></operator> <name pos:line="71" pos:column="30">t<pos:position pos:line="71" pos:column="31"/></name> <operator pos:line="71" pos:column="32">=<pos:position pos:line="71" pos:column="33"/></operator> <call><name pos:line="71" pos:column="34">grow_tree_content<pos:position pos:line="71" pos:column="51"/></name><argument_list pos:line="71" pos:column="51">(<argument><expr><name pos:line="71" pos:column="52">t<pos:position pos:line="71" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="55">t<pos:position pos:line="71" pos:column="56"/></name><operator pos:line="71" pos:column="56">-&gt;<pos:position pos:line="71" pos:column="61"/></operator><name pos:line="71" pos:column="58">entry_count<pos:position pos:line="71" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="71"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="72" pos:column="9">e<pos:position pos:line="72" pos:column="10"/></name> <operator pos:line="72" pos:column="11">=<pos:position pos:line="72" pos:column="12"/></operator> <call><name pos:line="72" pos:column="13">new_tree_entry<pos:position pos:line="72" pos:column="27"/></name><argument_list pos:line="72" pos:column="27">()<pos:position pos:line="72" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="73" pos:column="9">e<pos:position pos:line="73" pos:column="10"/></name><operator pos:line="73" pos:column="10">-&gt;<pos:position pos:line="73" pos:column="15"/></operator><name pos:line="73" pos:column="12">name<pos:position pos:line="73" pos:column="16"/></name></name> <operator pos:line="73" pos:column="17">=<pos:position pos:line="73" pos:column="18"/></operator> <call><name pos:line="73" pos:column="19">to_atom<pos:position pos:line="73" pos:column="26"/></name><argument_list pos:line="73" pos:column="26">(<argument><expr><name pos:line="73" pos:column="27">p<pos:position pos:line="73" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="30">n<pos:position pos:line="73" pos:column="31"/></name></expr></argument>)<pos:position pos:line="73" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="74" pos:column="9">e<pos:position pos:line="74" pos:column="10"/></name><operator pos:line="74" pos:column="10">-&gt;<pos:position pos:line="74" pos:column="15"/></operator><name pos:line="74" pos:column="12">versions<pos:position pos:line="74" pos:column="20"/></name><index pos:line="74" pos:column="20">[<expr><literal type="number" pos:line="74" pos:column="21">0<pos:position pos:line="74" pos:column="22"/></literal></expr>]<pos:position pos:line="74" pos:column="23"/></index></name><operator pos:line="74" pos:column="23">.<pos:position pos:line="74" pos:column="24"/></operator><name pos:line="74" pos:column="24">mode<pos:position pos:line="74" pos:column="28"/></name> <operator pos:line="74" pos:column="29">=<pos:position pos:line="74" pos:column="30"/></operator> <literal type="number" pos:line="74" pos:column="31">0<pos:position pos:line="74" pos:column="32"/></literal></expr>;<pos:position pos:line="74" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="75" pos:column="9">hashclr<pos:position pos:line="75" pos:column="16"/></name><argument_list pos:line="75" pos:column="16">(<argument><expr><name><name pos:line="75" pos:column="17">e<pos:position pos:line="75" pos:column="18"/></name><operator pos:line="75" pos:column="18">-&gt;<pos:position pos:line="75" pos:column="23"/></operator><name pos:line="75" pos:column="20">versions<pos:position pos:line="75" pos:column="28"/></name><index pos:line="75" pos:column="28">[<expr><literal type="number" pos:line="75" pos:column="29">0<pos:position pos:line="75" pos:column="30"/></literal></expr>]<pos:position pos:line="75" pos:column="31"/></index></name><operator pos:line="75" pos:column="31">.<pos:position pos:line="75" pos:column="32"/></operator><name pos:line="75" pos:column="32">sha1<pos:position pos:line="75" pos:column="36"/></name></expr></argument>)<pos:position pos:line="75" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="76" pos:column="9">t<pos:position pos:line="76" pos:column="10"/></name><operator pos:line="76" pos:column="10">-&gt;<pos:position pos:line="76" pos:column="15"/></operator><name pos:line="76" pos:column="12">entries<pos:position pos:line="76" pos:column="19"/></name><index pos:line="76" pos:column="19">[<expr><name><name pos:line="76" pos:column="20">t<pos:position pos:line="76" pos:column="21"/></name><operator pos:line="76" pos:column="21">-&gt;<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="23">entry_count<pos:position pos:line="76" pos:column="34"/></name></name><operator pos:line="76" pos:column="34">++<pos:position pos:line="76" pos:column="36"/></operator></expr>]<pos:position pos:line="76" pos:column="37"/></index></name> <operator pos:line="76" pos:column="38">=<pos:position pos:line="76" pos:column="39"/></operator> <name pos:line="76" pos:column="40">e<pos:position pos:line="76" pos:column="41"/></name></expr>;<pos:position pos:line="76" pos:column="42"/></expr_stmt>
	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><operator pos:line="77" pos:column="13">*<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="14">slash1<pos:position pos:line="77" pos:column="20"/></name></expr>)<pos:position pos:line="77" pos:column="21"/></condition><then pos:line="77" pos:column="21"> <block pos:line="77" pos:column="22">{
		<expr_stmt><expr><name><name pos:line="78" pos:column="17">e<pos:position pos:line="78" pos:column="18"/></name><operator pos:line="78" pos:column="18">-&gt;<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="20">tree<pos:position pos:line="78" pos:column="24"/></name></name> <operator pos:line="78" pos:column="25">=<pos:position pos:line="78" pos:column="26"/></operator> <call><name pos:line="78" pos:column="27">new_tree_content<pos:position pos:line="78" pos:column="43"/></name><argument_list pos:line="78" pos:column="43">(<argument><expr><literal type="number" pos:line="78" pos:column="44">8<pos:position pos:line="78" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="79" pos:column="17">e<pos:position pos:line="79" pos:column="18"/></name><operator pos:line="79" pos:column="18">-&gt;<pos:position pos:line="79" pos:column="23"/></operator><name pos:line="79" pos:column="20">versions<pos:position pos:line="79" pos:column="28"/></name><index pos:line="79" pos:column="28">[<expr><literal type="number" pos:line="79" pos:column="29">1<pos:position pos:line="79" pos:column="30"/></literal></expr>]<pos:position pos:line="79" pos:column="31"/></index></name><operator pos:line="79" pos:column="31">.<pos:position pos:line="79" pos:column="32"/></operator><name pos:line="79" pos:column="32">mode<pos:position pos:line="79" pos:column="36"/></name> <operator pos:line="79" pos:column="37">=<pos:position pos:line="79" pos:column="38"/></operator> <name pos:line="79" pos:column="39">S_IFDIR<pos:position pos:line="79" pos:column="46"/></name></expr>;<pos:position pos:line="79" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="80" pos:column="17">tree_content_set<pos:position pos:line="80" pos:column="33"/></name><argument_list pos:line="80" pos:column="33">(<argument><expr><name pos:line="80" pos:column="34">e<pos:position pos:line="80" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="37">slash1<pos:position pos:line="80" pos:column="43"/></name> <operator pos:line="80" pos:column="44">+<pos:position pos:line="80" pos:column="45"/></operator> <literal type="number" pos:line="80" pos:column="46">1<pos:position pos:line="80" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="49">sha1<pos:position pos:line="80" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="55">mode<pos:position pos:line="80" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="61">subtree<pos:position pos:line="80" pos:column="68"/></name></expr></argument>)<pos:position pos:line="80" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="81" pos:column="10"/></block></then> <else pos:line="81" pos:column="11">else <block pos:line="81" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="82" pos:column="17">e<pos:position pos:line="82" pos:column="18"/></name><operator pos:line="82" pos:column="18">-&gt;<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="20">tree<pos:position pos:line="82" pos:column="24"/></name></name> <operator pos:line="82" pos:column="25">=<pos:position pos:line="82" pos:column="26"/></operator> <name pos:line="82" pos:column="27">subtree<pos:position pos:line="82" pos:column="34"/></name></expr>;<pos:position pos:line="82" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="83" pos:column="17">e<pos:position pos:line="83" pos:column="18"/></name><operator pos:line="83" pos:column="18">-&gt;<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="20">versions<pos:position pos:line="83" pos:column="28"/></name><index pos:line="83" pos:column="28">[<expr><literal type="number" pos:line="83" pos:column="29">1<pos:position pos:line="83" pos:column="30"/></literal></expr>]<pos:position pos:line="83" pos:column="31"/></index></name><operator pos:line="83" pos:column="31">.<pos:position pos:line="83" pos:column="32"/></operator><name pos:line="83" pos:column="32">mode<pos:position pos:line="83" pos:column="36"/></name> <operator pos:line="83" pos:column="37">=<pos:position pos:line="83" pos:column="38"/></operator> <name pos:line="83" pos:column="39">mode<pos:position pos:line="83" pos:column="43"/></name></expr>;<pos:position pos:line="83" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="84" pos:column="17">hashcpy<pos:position pos:line="84" pos:column="24"/></name><argument_list pos:line="84" pos:column="24">(<argument><expr><name><name pos:line="84" pos:column="25">e<pos:position pos:line="84" pos:column="26"/></name><operator pos:line="84" pos:column="26">-&gt;<pos:position pos:line="84" pos:column="31"/></operator><name pos:line="84" pos:column="28">versions<pos:position pos:line="84" pos:column="36"/></name><index pos:line="84" pos:column="36">[<expr><literal type="number" pos:line="84" pos:column="37">1<pos:position pos:line="84" pos:column="38"/></literal></expr>]<pos:position pos:line="84" pos:column="39"/></index></name><operator pos:line="84" pos:column="39">.<pos:position pos:line="84" pos:column="40"/></operator><name pos:line="84" pos:column="40">sha1<pos:position pos:line="84" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="46">sha1<pos:position pos:line="84" pos:column="50"/></name></expr></argument>)<pos:position pos:line="84" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="85" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="86" pos:column="9">hashclr<pos:position pos:line="86" pos:column="16"/></name><argument_list pos:line="86" pos:column="16">(<argument><expr><name><name pos:line="86" pos:column="17">root<pos:position pos:line="86" pos:column="21"/></name><operator pos:line="86" pos:column="21">-&gt;<pos:position pos:line="86" pos:column="26"/></operator><name pos:line="86" pos:column="23">versions<pos:position pos:line="86" pos:column="31"/></name><index pos:line="86" pos:column="31">[<expr><literal type="number" pos:line="86" pos:column="32">1<pos:position pos:line="86" pos:column="33"/></literal></expr>]<pos:position pos:line="86" pos:column="34"/></index></name><operator pos:line="86" pos:column="34">.<pos:position pos:line="86" pos:column="35"/></operator><name pos:line="86" pos:column="35">sha1<pos:position pos:line="86" pos:column="39"/></name></expr></argument>)<pos:position pos:line="86" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="41"/></expr_stmt>
	<return pos:line="87" pos:column="9">return <expr><literal type="number" pos:line="87" pos:column="16">1<pos:position pos:line="87" pos:column="17"/></literal></expr>;<pos:position pos:line="87" pos:column="18"/></return>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

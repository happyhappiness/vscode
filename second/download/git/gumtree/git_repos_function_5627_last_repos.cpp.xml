<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5627_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">prepare_push_cert_sha1<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">child_process<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">proc<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">already_done<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name><name pos:line="5" pos:column="14">push_cert<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">.<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">len<pos:position pos:line="5" pos:column="27"/></name></name></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28">
		<block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">already_done<pos:position pos:line="8" pos:column="26"/></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27"> <block pos:line="8" pos:column="28">{
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">strbuf<pos:position pos:line="9" pos:column="30"/></name></name></type> <name pos:line="9" pos:column="31">gpg_output<pos:position pos:line="9" pos:column="41"/></name> <init pos:line="9" pos:column="42">= <expr><name pos:line="9" pos:column="44">STRBUF_INIT<pos:position pos:line="9" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="56"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="10" pos:column="17">struct<pos:position pos:line="10" pos:column="23"/></name> <name pos:line="10" pos:column="24">strbuf<pos:position pos:line="10" pos:column="30"/></name></name></type> <name pos:line="10" pos:column="31">gpg_status<pos:position pos:line="10" pos:column="41"/></name> <init pos:line="10" pos:column="42">= <expr><name pos:line="10" pos:column="44">STRBUF_INIT<pos:position pos:line="10" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="56"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">bogs<pos:position pos:line="11" pos:column="25"/></name></decl> <comment type="block" pos:line="11" pos:column="26">/* beginning_of_gpg_sig */</comment>;<pos:position pos:line="11" pos:column="53"/></decl_stmt>

		<expr_stmt><expr><name pos:line="13" pos:column="17">already_done<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">=<pos:position pos:line="13" pos:column="31"/></operator> <literal type="number" pos:line="13" pos:column="32">1<pos:position pos:line="13" pos:column="33"/></literal></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">write_sha1_file<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name><name pos:line="14" pos:column="37">push_cert<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">.<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="47">buf<pos:position pos:line="14" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="52">push_cert<pos:position pos:line="14" pos:column="61"/></name><operator pos:line="14" pos:column="61">.<pos:position pos:line="14" pos:column="62"/></operator><name pos:line="14" pos:column="62">len<pos:position pos:line="14" pos:column="65"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="67">"blob"<pos:position pos:line="14" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="75">push_cert_sha1<pos:position pos:line="14" pos:column="89"/></name></expr></argument>)<pos:position pos:line="14" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="91"/></condition><then pos:line="14" pos:column="91">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">hashclr<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">push_cert_sha1<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="17" pos:column="17">memset<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><operator pos:line="17" pos:column="24">&amp;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="25">sigcheck<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="35">'\0'<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="41">sizeof<argument_list pos:line="17" pos:column="47">(<argument><expr><name pos:line="17" pos:column="48">sigcheck<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">sigcheck<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">.<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">result<pos:position pos:line="18" pos:column="32"/></name></name> <operator pos:line="18" pos:column="33">=<pos:position pos:line="18" pos:column="34"/></operator> <literal type="char" pos:line="18" pos:column="35">'N'<pos:position pos:line="18" pos:column="38"/></literal></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>

		<expr_stmt><expr><name pos:line="20" pos:column="17">bogs<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <call><name pos:line="20" pos:column="24">parse_signature<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">(<argument><expr><name><name pos:line="20" pos:column="40">push_cert<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">.<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">buf<pos:position pos:line="20" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="55">push_cert<pos:position pos:line="20" pos:column="64"/></name><operator pos:line="20" pos:column="64">.<pos:position pos:line="20" pos:column="65"/></operator><name pos:line="20" pos:column="65">len<pos:position pos:line="20" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="70"/></expr_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><call><name pos:line="21" pos:column="21">verify_signed_buffer<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><expr><name><name pos:line="21" pos:column="42">push_cert<pos:position pos:line="21" pos:column="51"/></name><operator pos:line="21" pos:column="51">.<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="52">buf<pos:position pos:line="21" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="57">bogs<pos:position pos:line="21" pos:column="61"/></name></expr></argument>,
					 <argument><expr><name><name pos:line="22" pos:column="42">push_cert<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">.<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="52">buf<pos:position pos:line="22" pos:column="55"/></name></name> <operator pos:line="22" pos:column="56">+<pos:position pos:line="22" pos:column="57"/></operator> <name pos:line="22" pos:column="58">bogs<pos:position pos:line="22" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="64">push_cert<pos:position pos:line="22" pos:column="73"/></name><operator pos:line="22" pos:column="73">.<pos:position pos:line="22" pos:column="74"/></operator><name pos:line="22" pos:column="74">len<pos:position pos:line="22" pos:column="77"/></name></name> <operator pos:line="22" pos:column="78">-<pos:position pos:line="22" pos:column="79"/></operator> <name pos:line="22" pos:column="80">bogs<pos:position pos:line="22" pos:column="84"/></name></expr></argument>,
					 <argument><expr><operator pos:line="23" pos:column="42">&amp;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="43">gpg_output<pos:position pos:line="23" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="55">&amp;<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="56">gpg_status<pos:position pos:line="23" pos:column="66"/></name></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call> <operator pos:line="23" pos:column="68">&lt;<pos:position pos:line="23" pos:column="72"/></operator> <literal type="number" pos:line="23" pos:column="70">0<pos:position pos:line="23" pos:column="71"/></literal></expr>)<pos:position pos:line="23" pos:column="72"/></condition><then pos:line="23" pos:column="72"> <block pos:line="23" pos:column="73">{
			<empty_stmt pos:line="24" pos:column="25">;<pos:position pos:line="24" pos:column="26"/></empty_stmt> <comment type="block" pos:line="24" pos:column="27">/* error running gpg */</comment>
		}<pos:position pos:line="25" pos:column="18"/></block></then> <else pos:line="25" pos:column="19">else <block pos:line="25" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="26" pos:column="25">sigcheck<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">.<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="34">payload<pos:position pos:line="26" pos:column="41"/></name></name> <operator pos:line="26" pos:column="42">=<pos:position pos:line="26" pos:column="43"/></operator> <name><name pos:line="26" pos:column="44">push_cert<pos:position pos:line="26" pos:column="53"/></name><operator pos:line="26" pos:column="53">.<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="54">buf<pos:position pos:line="26" pos:column="57"/></name></name></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="27" pos:column="25">sigcheck<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">.<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="34">gpg_output<pos:position pos:line="27" pos:column="44"/></name></name> <operator pos:line="27" pos:column="45">=<pos:position pos:line="27" pos:column="46"/></operator> <name><name pos:line="27" pos:column="47">gpg_output<pos:position pos:line="27" pos:column="57"/></name><operator pos:line="27" pos:column="57">.<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="58">buf<pos:position pos:line="27" pos:column="61"/></name></name></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="28" pos:column="25">sigcheck<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">.<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">gpg_status<pos:position pos:line="28" pos:column="44"/></name></name> <operator pos:line="28" pos:column="45">=<pos:position pos:line="28" pos:column="46"/></operator> <name><name pos:line="28" pos:column="47">gpg_status<pos:position pos:line="28" pos:column="57"/></name><operator pos:line="28" pos:column="57">.<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="58">buf<pos:position pos:line="28" pos:column="61"/></name></name></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">parse_gpg_output<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><operator pos:line="29" pos:column="42">&amp;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="43">sigcheck<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></else></if>

		<expr_stmt><expr><call><name pos:line="32" pos:column="17">strbuf_release<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><operator pos:line="32" pos:column="32">&amp;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="33">gpg_output<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">strbuf_release<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><operator pos:line="33" pos:column="32">&amp;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="33">gpg_status<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">nonce_status<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">=<pos:position pos:line="34" pos:column="31"/></operator> <call><name pos:line="34" pos:column="32">check_nonce<pos:position pos:line="34" pos:column="43"/></name><argument_list pos:line="34" pos:column="43">(<argument><expr><name><name pos:line="34" pos:column="44">push_cert<pos:position pos:line="34" pos:column="53"/></name><operator pos:line="34" pos:column="53">.<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="54">buf<pos:position pos:line="34" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="59">bogs<pos:position pos:line="34" pos:column="63"/></name></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><call><name pos:line="36" pos:column="14">is_null_sha1<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><name pos:line="36" pos:column="27">push_cert_sha1<pos:position pos:line="36" pos:column="41"/></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="43"/></condition><then pos:line="36" pos:column="43"> <block pos:line="36" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">argv_array_pushf<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><operator pos:line="37" pos:column="34">&amp;<pos:position pos:line="37" pos:column="39"/></operator><name><name pos:line="37" pos:column="35">proc<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">-&gt;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="41">env_array<pos:position pos:line="37" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="52">"GIT_PUSH_CERT=%s"<pos:position pos:line="37" pos:column="70"/></literal></expr></argument>,
				 <argument><expr><call><name pos:line="38" pos:column="34">sha1_to_hex<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">(<argument><expr><name pos:line="38" pos:column="46">push_cert_sha1<pos:position pos:line="38" pos:column="60"/></name></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">argv_array_pushf<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><operator pos:line="39" pos:column="34">&amp;<pos:position pos:line="39" pos:column="39"/></operator><name><name pos:line="39" pos:column="35">proc<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">-&gt;<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="41">env_array<pos:position pos:line="39" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="52">"GIT_PUSH_CERT_SIGNER=%s"<pos:position pos:line="39" pos:column="77"/></literal></expr></argument>,
				 <argument><expr><ternary><condition><expr><name><name pos:line="40" pos:column="34">sigcheck<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">.<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="43">signer<pos:position pos:line="40" pos:column="49"/></name></name></expr> ?<pos:position pos:line="40" pos:column="51"/></condition><then pos:line="40" pos:column="51"> <expr><name><name pos:line="40" pos:column="52">sigcheck<pos:position pos:line="40" pos:column="60"/></name><operator pos:line="40" pos:column="60">.<pos:position pos:line="40" pos:column="61"/></operator><name pos:line="40" pos:column="61">signer<pos:position pos:line="40" pos:column="67"/></name></name></expr> <pos:position pos:line="40" pos:column="68"/></then><else pos:line="40" pos:column="68">: <expr><literal type="string" pos:line="40" pos:column="70">""<pos:position pos:line="40" pos:column="72"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="40" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">argv_array_pushf<pos:position pos:line="41" pos:column="33"/></name><argument_list pos:line="41" pos:column="33">(<argument><expr><operator pos:line="41" pos:column="34">&amp;<pos:position pos:line="41" pos:column="39"/></operator><name><name pos:line="41" pos:column="35">proc<pos:position pos:line="41" pos:column="39"/></name><operator pos:line="41" pos:column="39">-&gt;<pos:position pos:line="41" pos:column="44"/></operator><name pos:line="41" pos:column="41">env_array<pos:position pos:line="41" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="52">"GIT_PUSH_CERT_KEY=%s"<pos:position pos:line="41" pos:column="74"/></literal></expr></argument>,
				 <argument><expr><ternary><condition><expr><name><name pos:line="42" pos:column="34">sigcheck<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">.<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="43">key<pos:position pos:line="42" pos:column="46"/></name></name></expr> ?<pos:position pos:line="42" pos:column="48"/></condition><then pos:line="42" pos:column="48"> <expr><name><name pos:line="42" pos:column="49">sigcheck<pos:position pos:line="42" pos:column="57"/></name><operator pos:line="42" pos:column="57">.<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="58">key<pos:position pos:line="42" pos:column="61"/></name></name></expr> <pos:position pos:line="42" pos:column="62"/></then><else pos:line="42" pos:column="62">: <expr><literal type="string" pos:line="42" pos:column="64">""<pos:position pos:line="42" pos:column="66"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="42" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">argv_array_pushf<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">(<argument><expr><operator pos:line="43" pos:column="34">&amp;<pos:position pos:line="43" pos:column="39"/></operator><name><name pos:line="43" pos:column="35">proc<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">-&gt;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="41">env_array<pos:position pos:line="43" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="52">"GIT_PUSH_CERT_STATUS=%c"<pos:position pos:line="43" pos:column="77"/></literal></expr></argument>,
				 <argument><expr><name><name pos:line="44" pos:column="34">sigcheck<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">.<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="43">result<pos:position pos:line="44" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">push_cert_nonce<pos:position pos:line="45" pos:column="36"/></name></expr>)<pos:position pos:line="45" pos:column="37"/></condition><then pos:line="45" pos:column="37"> <block pos:line="45" pos:column="38">{
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">argv_array_pushf<pos:position pos:line="46" pos:column="41"/></name><argument_list pos:line="46" pos:column="41">(<argument><expr><operator pos:line="46" pos:column="42">&amp;<pos:position pos:line="46" pos:column="47"/></operator><name><name pos:line="46" pos:column="43">proc<pos:position pos:line="46" pos:column="47"/></name><operator pos:line="46" pos:column="47">-&gt;<pos:position pos:line="46" pos:column="52"/></operator><name pos:line="46" pos:column="49">env_array<pos:position pos:line="46" pos:column="58"/></name></name></expr></argument>,
					 <argument><expr><literal type="string" pos:line="47" pos:column="42">"GIT_PUSH_CERT_NONCE=%s"<pos:position pos:line="47" pos:column="66"/></literal></expr></argument>,
					 <argument><expr><name pos:line="48" pos:column="42">push_cert_nonce<pos:position pos:line="48" pos:column="57"/></name></expr></argument>)<pos:position pos:line="48" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="49" pos:column="25">argv_array_pushf<pos:position pos:line="49" pos:column="41"/></name><argument_list pos:line="49" pos:column="41">(<argument><expr><operator pos:line="49" pos:column="42">&amp;<pos:position pos:line="49" pos:column="47"/></operator><name><name pos:line="49" pos:column="43">proc<pos:position pos:line="49" pos:column="47"/></name><operator pos:line="49" pos:column="47">-&gt;<pos:position pos:line="49" pos:column="52"/></operator><name pos:line="49" pos:column="49">env_array<pos:position pos:line="49" pos:column="58"/></name></name></expr></argument>,
					 <argument><expr><literal type="string" pos:line="50" pos:column="42">"GIT_PUSH_CERT_NONCE_STATUS=%s"<pos:position pos:line="50" pos:column="73"/></literal></expr></argument>,
					 <argument><expr><name pos:line="51" pos:column="42">nonce_status<pos:position pos:line="51" pos:column="54"/></name></expr></argument>)<pos:position pos:line="51" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="56"/></expr_stmt>
			<if pos:line="52" pos:column="25">if <condition pos:line="52" pos:column="28">(<expr><name pos:line="52" pos:column="29">nonce_status<pos:position pos:line="52" pos:column="41"/></name> <operator pos:line="52" pos:column="42">==<pos:position pos:line="52" pos:column="44"/></operator> <name pos:line="52" pos:column="45">NONCE_SLOP<pos:position pos:line="52" pos:column="55"/></name></expr>)<pos:position pos:line="52" pos:column="56"/></condition><then pos:line="52" pos:column="56">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="33">argv_array_pushf<pos:position pos:line="53" pos:column="49"/></name><argument_list pos:line="53" pos:column="49">(<argument><expr><operator pos:line="53" pos:column="50">&amp;<pos:position pos:line="53" pos:column="55"/></operator><name><name pos:line="53" pos:column="51">proc<pos:position pos:line="53" pos:column="55"/></name><operator pos:line="53" pos:column="55">-&gt;<pos:position pos:line="53" pos:column="60"/></operator><name pos:line="53" pos:column="57">env_array<pos:position pos:line="53" pos:column="66"/></name></name></expr></argument>,
						 <argument><expr><literal type="string" pos:line="54" pos:column="50">"GIT_PUSH_CERT_NONCE_SLOP=%ld"<pos:position pos:line="54" pos:column="80"/></literal></expr></argument>,
						 <argument><expr><name pos:line="55" pos:column="50">nonce_stamp_slop<pos:position pos:line="55" pos:column="66"/></name></expr></argument>)<pos:position pos:line="55" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="68"/></expr_stmt></block></then></if>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if>
	}<pos:position pos:line="57" pos:column="10"/></block></then></if>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

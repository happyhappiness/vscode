<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6038_git-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">convert_date<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">buffer<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">unsigned<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">long<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">size<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">unsigned<pos:position pos:line="1" pos:column="68"/></name> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">result_sha1<pos:position pos:line="1" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="87"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <operator pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></operator><operator pos:line="3" pos:column="15">new<pos:position pos:line="3" pos:column="18"/></operator> <operator pos:line="3" pos:column="19">=<pos:position pos:line="3" pos:column="20"/></operator> <call><name pos:line="3" pos:column="21">xmalloc<pos:position pos:line="3" pos:column="28"/></name><argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">size<pos:position pos:line="3" pos:column="33"/></name> <operator pos:line="3" pos:column="34">+<pos:position pos:line="3" pos:column="35"/></operator> <literal type="number" pos:line="3" pos:column="36">100<pos:position pos:line="3" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="41"/></expr_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">long<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">newlen<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><literal type="number" pos:line="4" pos:column="32">0<pos:position pos:line="4" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* "tree &lt;sha1&gt;\n" */</comment>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">memcpy<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><operator pos:line="7" pos:column="16">new<pos:position pos:line="7" pos:column="19"/></operator> <operator pos:line="7" pos:column="20">+<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">newlen<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">buffer<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="38">46<pos:position pos:line="7" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">newlen<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">+=<pos:position pos:line="8" pos:column="18"/></operator> <literal type="number" pos:line="8" pos:column="19">46<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">buffer<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <operator pos:line="9" pos:column="18">(<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">char<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator><operator pos:line="9" pos:column="25">)<pos:position pos:line="9" pos:column="26"/></operator> <name pos:line="9" pos:column="27">buffer<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">+<pos:position pos:line="9" pos:column="35"/></operator> <literal type="number" pos:line="9" pos:column="36">46<pos:position pos:line="9" pos:column="38"/></literal></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">size<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">-=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">46<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>

	<comment type="block" pos:line="12" pos:column="9">/* "parent &lt;sha1&gt;\n" */</comment>
	<while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><operator pos:line="13" pos:column="16">!<pos:position pos:line="13" pos:column="17"/></operator><call><name pos:line="13" pos:column="17">memcmp<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">buffer<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="32">"parent "<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="43">7<pos:position pos:line="13" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="46"/></condition> <block pos:line="13" pos:column="47">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">memcpy<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><operator pos:line="14" pos:column="24">new<pos:position pos:line="14" pos:column="27"/></operator> <operator pos:line="14" pos:column="28">+<pos:position pos:line="14" pos:column="29"/></operator> <name pos:line="14" pos:column="30">newlen<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="38">buffer<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="46">48<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">newlen<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">+=<pos:position pos:line="15" pos:column="26"/></operator> <literal type="number" pos:line="15" pos:column="27">48<pos:position pos:line="15" pos:column="29"/></literal></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">buffer<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <operator pos:line="16" pos:column="26">(<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">char<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">*<pos:position pos:line="16" pos:column="33"/></operator><operator pos:line="16" pos:column="33">)<pos:position pos:line="16" pos:column="34"/></operator> <name pos:line="16" pos:column="35">buffer<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">+<pos:position pos:line="16" pos:column="43"/></operator> <literal type="number" pos:line="16" pos:column="44">48<pos:position pos:line="16" pos:column="46"/></literal></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">size<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">-=<pos:position pos:line="17" pos:column="24"/></operator> <literal type="number" pos:line="17" pos:column="25">48<pos:position pos:line="17" pos:column="27"/></literal></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></while>

	<comment type="block" pos:line="20" pos:column="9">/* "author xyz &lt;xyz&gt; date" */</comment>
	<expr_stmt><expr><name pos:line="21" pos:column="9">newlen<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">+=<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">convert_date_line<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><operator pos:line="21" pos:column="37">new<pos:position pos:line="21" pos:column="40"/></operator> <operator pos:line="21" pos:column="41">+<pos:position pos:line="21" pos:column="42"/></operator> <name pos:line="21" pos:column="43">newlen<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="51">&amp;<pos:position pos:line="21" pos:column="56"/></operator><name pos:line="21" pos:column="52">buffer<pos:position pos:line="21" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="60">&amp;<pos:position pos:line="21" pos:column="65"/></operator><name pos:line="21" pos:column="61">size<pos:position pos:line="21" pos:column="65"/></name></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="67"/></expr_stmt>
	<comment type="block" pos:line="22" pos:column="9">/* "committer xyz &lt;xyz&gt; date" */</comment>
	<expr_stmt><expr><name pos:line="23" pos:column="9">newlen<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">+=<pos:position pos:line="23" pos:column="18"/></operator> <call><name pos:line="23" pos:column="19">convert_date_line<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><operator pos:line="23" pos:column="37">new<pos:position pos:line="23" pos:column="40"/></operator> <operator pos:line="23" pos:column="41">+<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="43">newlen<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="51">&amp;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="52">buffer<pos:position pos:line="23" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="60">&amp;<pos:position pos:line="23" pos:column="65"/></operator><name pos:line="23" pos:column="61">size<pos:position pos:line="23" pos:column="65"/></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt>

	<comment type="block" pos:line="25" pos:column="9">/* Rest */</comment>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">memcpy<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><operator pos:line="26" pos:column="16">new<pos:position pos:line="26" pos:column="19"/></operator> <operator pos:line="26" pos:column="20">+<pos:position pos:line="26" pos:column="21"/></operator> <name pos:line="26" pos:column="22">newlen<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="30">buffer<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="38">size<pos:position pos:line="26" pos:column="42"/></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="27" pos:column="9">newlen<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">+=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">size<pos:position pos:line="27" pos:column="23"/></name></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="29" pos:column="9">write_sha1_file<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><operator pos:line="29" pos:column="25">new<pos:position pos:line="29" pos:column="28"/></operator></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">newlen<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">commit_type<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">result_sha1<pos:position pos:line="29" pos:column="62"/></name></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">free<pos:position pos:line="30" pos:column="13"/></name><argument_list pos:line="30" pos:column="13">(<argument><expr><operator pos:line="30" pos:column="14">new<pos:position pos:line="30" pos:column="17"/></operator></expr></argument>)<pos:position pos:line="30" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

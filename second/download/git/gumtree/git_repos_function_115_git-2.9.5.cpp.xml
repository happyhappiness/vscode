<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_115_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">format_and_pad_commit<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">strbuf<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">sb<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="56">/* in UTF-8 */</comment>
				    <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">placeholder<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="3" pos:column="37">struct<pos:position pos:line="3" pos:column="43"/></name> <name pos:line="3" pos:column="44">format_commit_context<pos:position pos:line="3" pos:column="65"/></name></name> <modifier pos:line="3" pos:column="66">*<pos:position pos:line="3" pos:column="67"/></modifier></type><name pos:line="3" pos:column="67">c<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="69"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">local_sb<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">STRBUF_INIT<pos:position pos:line="5" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">total_consumed<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><literal type="number" pos:line="6" pos:column="30">0<pos:position pos:line="6" pos:column="31"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="33">len<pos:position pos:line="6" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="38">padding<pos:position pos:line="6" pos:column="45"/></name> <init pos:line="6" pos:column="46">= <expr><name><name pos:line="6" pos:column="48">c<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">-&gt;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="51">padding<pos:position pos:line="6" pos:column="58"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="59"/></decl_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">padding<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">&lt;<pos:position pos:line="7" pos:column="25"/></operator> <literal type="number" pos:line="7" pos:column="23">0<pos:position pos:line="7" pos:column="24"/></literal></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25"> <block pos:line="7" pos:column="26">{
		<decl_stmt><decl><type><specifier pos:line="8" pos:column="17">const<pos:position pos:line="8" pos:column="22"/></specifier> <name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">start<pos:position pos:line="8" pos:column="34"/></name> <init pos:line="8" pos:column="35">= <expr><call><name pos:line="8" pos:column="37">strrchr<pos:position pos:line="8" pos:column="44"/></name><argument_list pos:line="8" pos:column="44">(<argument><expr><name><name pos:line="8" pos:column="45">sb<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">-&gt;<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="49">buf<pos:position pos:line="8" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="54">'\n'<pos:position pos:line="8" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="60"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">occupied<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">start<pos:position pos:line="10" pos:column="27"/></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">start<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">=<pos:position pos:line="11" pos:column="32"/></operator> <name><name pos:line="11" pos:column="33">sb<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">buf<pos:position pos:line="11" pos:column="40"/></name></name></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="12" pos:column="17">occupied<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <call><name pos:line="12" pos:column="28">utf8_strnwidth<pos:position pos:line="12" pos:column="42"/></name><argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">start<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="50">-<pos:position pos:line="12" pos:column="51"/></operator><literal type="number" pos:line="12" pos:column="51">1<pos:position pos:line="12" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="54">1<pos:position pos:line="12" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="13" pos:column="17">occupied<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">+=<pos:position pos:line="13" pos:column="28"/></operator> <name><name pos:line="13" pos:column="29">c<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">pretty_ctx<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">graph_width<pos:position pos:line="13" pos:column="55"/></name></name></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">padding<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <operator pos:line="14" pos:column="27">(<pos:position pos:line="14" pos:column="28"/></operator><operator pos:line="14" pos:column="28">-<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="29">padding<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">)<pos:position pos:line="14" pos:column="37"/></operator> <operator pos:line="14" pos:column="38">-<pos:position pos:line="14" pos:column="39"/></operator> <name pos:line="14" pos:column="40">occupied<pos:position pos:line="14" pos:column="48"/></name></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>
	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><literal type="number" pos:line="16" pos:column="16">1<pos:position pos:line="16" pos:column="17"/></literal></expr>)<pos:position pos:line="16" pos:column="18"/></condition> <block pos:line="16" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">int<pos:position pos:line="17" pos:column="20"/></name></type> <name pos:line="17" pos:column="21">modifier<pos:position pos:line="17" pos:column="29"/></name> <init pos:line="17" pos:column="30">= <expr><operator pos:line="17" pos:column="32">*<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">placeholder<pos:position pos:line="17" pos:column="44"/></name> <operator pos:line="17" pos:column="45">==<pos:position pos:line="17" pos:column="47"/></operator> <literal type="char" pos:line="17" pos:column="48">'C'<pos:position pos:line="17" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="52"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">int<pos:position pos:line="18" pos:column="20"/></name></type> <name pos:line="18" pos:column="21">consumed<pos:position pos:line="18" pos:column="29"/></name> <init pos:line="18" pos:column="30">= <expr><call><name pos:line="18" pos:column="32">format_commit_one<pos:position pos:line="18" pos:column="49"/></name><argument_list pos:line="18" pos:column="49">(<argument><expr><operator pos:line="18" pos:column="50">&amp;<pos:position pos:line="18" pos:column="55"/></operator><name pos:line="18" pos:column="51">local_sb<pos:position pos:line="18" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="61">placeholder<pos:position pos:line="18" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="74">c<pos:position pos:line="18" pos:column="75"/></name></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="77"/></decl_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">total_consumed<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">+=<pos:position pos:line="19" pos:column="34"/></operator> <name pos:line="19" pos:column="35">consumed<pos:position pos:line="19" pos:column="43"/></name></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt>

		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">!<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">modifier<pos:position pos:line="21" pos:column="30"/></name></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31">
			<block type="pseudo"><break pos:line="22" pos:column="25">break;<pos:position pos:line="22" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name pos:line="24" pos:column="17">placeholder<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">+=<pos:position pos:line="24" pos:column="31"/></operator> <name pos:line="24" pos:column="32">consumed<pos:position pos:line="24" pos:column="40"/></name></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">*<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">placeholder<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">!=<pos:position pos:line="25" pos:column="36"/></operator> <literal type="char" pos:line="25" pos:column="37">'%'<pos:position pos:line="25" pos:column="40"/></literal></expr>)<pos:position pos:line="25" pos:column="41"/></condition><then pos:line="25" pos:column="41">
			<block type="pseudo"><break pos:line="26" pos:column="25">break;<pos:position pos:line="26" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="27" pos:column="17">placeholder<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">++<pos:position pos:line="27" pos:column="30"/></operator></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">total_consumed<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">++<pos:position pos:line="28" pos:column="33"/></operator></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></while>
	<expr_stmt><expr><name pos:line="30" pos:column="9">len<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">utf8_strnwidth<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name><name pos:line="30" pos:column="30">local_sb<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">.<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="39">buf<pos:position pos:line="30" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="44">-<pos:position pos:line="30" pos:column="45"/></operator><literal type="number" pos:line="30" pos:column="45">1<pos:position pos:line="30" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="48">1<pos:position pos:line="30" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="51"/></expr_stmt>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">c<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">flush_type<pos:position pos:line="32" pos:column="26"/></name></name> <operator pos:line="32" pos:column="27">==<pos:position pos:line="32" pos:column="29"/></operator> <name pos:line="32" pos:column="30">flush_left_and_steal<pos:position pos:line="32" pos:column="50"/></name></expr>)<pos:position pos:line="32" pos:column="51"/></condition><then pos:line="32" pos:column="51"> <block pos:line="32" pos:column="52">{
		<decl_stmt><decl><type><specifier pos:line="33" pos:column="17">const<pos:position pos:line="33" pos:column="22"/></specifier> <name pos:line="33" pos:column="23">char<pos:position pos:line="33" pos:column="27"/></name> <modifier pos:line="33" pos:column="28">*<pos:position pos:line="33" pos:column="29"/></modifier></type><name pos:line="33" pos:column="29">ch<pos:position pos:line="33" pos:column="31"/></name> <init pos:line="33" pos:column="32">= <expr><name><name pos:line="33" pos:column="34">sb<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">-&gt;<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="38">buf<pos:position pos:line="33" pos:column="41"/></name></name> <operator pos:line="33" pos:column="42">+<pos:position pos:line="33" pos:column="43"/></operator> <name><name pos:line="33" pos:column="44">sb<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">len<pos:position pos:line="33" pos:column="51"/></name></name> <operator pos:line="33" pos:column="52">-<pos:position pos:line="33" pos:column="53"/></operator> <literal type="number" pos:line="33" pos:column="54">1<pos:position pos:line="33" pos:column="55"/></literal></expr></init></decl>;<pos:position pos:line="33" pos:column="56"/></decl_stmt>
		<while pos:line="34" pos:column="17">while <condition pos:line="34" pos:column="23">(<expr><name pos:line="34" pos:column="24">len<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">&gt;<pos:position pos:line="34" pos:column="32"/></operator> <name pos:line="34" pos:column="30">padding<pos:position pos:line="34" pos:column="37"/></name> <operator pos:line="34" pos:column="38">&amp;&amp;<pos:position pos:line="34" pos:column="48"/></operator> <name pos:line="34" pos:column="41">ch<pos:position pos:line="34" pos:column="43"/></name> <operator pos:line="34" pos:column="44">&gt;<pos:position pos:line="34" pos:column="48"/></operator> <name><name pos:line="34" pos:column="46">sb<pos:position pos:line="34" pos:column="48"/></name><operator pos:line="34" pos:column="48">-&gt;<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="50">buf<pos:position pos:line="34" pos:column="53"/></name></name></expr>)<pos:position pos:line="34" pos:column="54"/></condition> <block pos:line="34" pos:column="55">{
			<decl_stmt><decl><type><specifier pos:line="35" pos:column="25">const<pos:position pos:line="35" pos:column="30"/></specifier> <name pos:line="35" pos:column="31">char<pos:position pos:line="35" pos:column="35"/></name> <modifier pos:line="35" pos:column="36">*<pos:position pos:line="35" pos:column="37"/></modifier></type><name pos:line="35" pos:column="37">p<pos:position pos:line="35" pos:column="38"/></name></decl>;<pos:position pos:line="35" pos:column="39"/></decl_stmt>
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><operator pos:line="36" pos:column="29">*<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="30">ch<pos:position pos:line="36" pos:column="32"/></name> <operator pos:line="36" pos:column="33">==<pos:position pos:line="36" pos:column="35"/></operator> <literal type="char" pos:line="36" pos:column="36">' '<pos:position pos:line="36" pos:column="39"/></literal></expr>)<pos:position pos:line="36" pos:column="40"/></condition><then pos:line="36" pos:column="40"> <block pos:line="36" pos:column="41">{
				<expr_stmt><expr><name pos:line="37" pos:column="33">ch<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">--<pos:position pos:line="37" pos:column="37"/></operator></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>
				<expr_stmt><expr><name pos:line="38" pos:column="33">padding<pos:position pos:line="38" pos:column="40"/></name><operator pos:line="38" pos:column="40">++<pos:position pos:line="38" pos:column="42"/></operator></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
				<continue pos:line="39" pos:column="33">continue;<pos:position pos:line="39" pos:column="42"/></continue>
			}<pos:position pos:line="40" pos:column="26"/></block></then></if>
			<comment type="block" pos:line="41" pos:column="25">/* check for trailing ansi sequences */</comment>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><operator pos:line="42" pos:column="29">*<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="30">ch<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">!=<pos:position pos:line="42" pos:column="35"/></operator> <literal type="char" pos:line="42" pos:column="36">'m'<pos:position pos:line="42" pos:column="39"/></literal></expr>)<pos:position pos:line="42" pos:column="40"/></condition><then pos:line="42" pos:column="40">
				<block type="pseudo"><break pos:line="43" pos:column="33">break;<pos:position pos:line="43" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="44" pos:column="25">p<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <name pos:line="44" pos:column="29">ch<pos:position pos:line="44" pos:column="31"/></name> <operator pos:line="44" pos:column="32">-<pos:position pos:line="44" pos:column="33"/></operator> <literal type="number" pos:line="44" pos:column="34">1<pos:position pos:line="44" pos:column="35"/></literal></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
			<while pos:line="45" pos:column="25">while <condition pos:line="45" pos:column="31">(<expr><name pos:line="45" pos:column="32">ch<pos:position pos:line="45" pos:column="34"/></name> <operator pos:line="45" pos:column="35">-<pos:position pos:line="45" pos:column="36"/></operator> <name pos:line="45" pos:column="37">p<pos:position pos:line="45" pos:column="38"/></name> <operator pos:line="45" pos:column="39">&lt;<pos:position pos:line="45" pos:column="43"/></operator> <literal type="number" pos:line="45" pos:column="41">10<pos:position pos:line="45" pos:column="43"/></literal> <operator pos:line="45" pos:column="44">&amp;&amp;<pos:position pos:line="45" pos:column="54"/></operator> <operator pos:line="45" pos:column="47">*<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="48">p<pos:position pos:line="45" pos:column="49"/></name> <operator pos:line="45" pos:column="50">!=<pos:position pos:line="45" pos:column="52"/></operator> <literal type="char" pos:line="45" pos:column="53">'\033'<pos:position pos:line="45" pos:column="59"/></literal></expr>)<pos:position pos:line="45" pos:column="60"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="33">p<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">--<pos:position pos:line="46" pos:column="36"/></operator></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt></block></while>
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><operator pos:line="47" pos:column="29">*<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">p<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">!=<pos:position pos:line="47" pos:column="34"/></operator> <literal type="char" pos:line="47" pos:column="35">'\033'<pos:position pos:line="47" pos:column="41"/></literal> <operator pos:line="47" pos:column="42">||<pos:position pos:line="47" pos:column="44"/></operator>
			    <name pos:line="48" pos:column="29">ch<pos:position pos:line="48" pos:column="31"/></name> <operator pos:line="48" pos:column="32">+<pos:position pos:line="48" pos:column="33"/></operator> <literal type="number" pos:line="48" pos:column="34">1<pos:position pos:line="48" pos:column="35"/></literal> <operator pos:line="48" pos:column="36">-<pos:position pos:line="48" pos:column="37"/></operator> <name pos:line="48" pos:column="38">p<pos:position pos:line="48" pos:column="39"/></name> <operator pos:line="48" pos:column="40">!=<pos:position pos:line="48" pos:column="42"/></operator> <call><name pos:line="48" pos:column="43">display_mode_esc_sequence_len<pos:position pos:line="48" pos:column="72"/></name><argument_list pos:line="48" pos:column="72">(<argument><expr><name pos:line="48" pos:column="73">p<pos:position pos:line="48" pos:column="74"/></name></expr></argument>)<pos:position pos:line="48" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="76"/></condition><then pos:line="48" pos:column="76">
				<block type="pseudo"><break pos:line="49" pos:column="33">break;<pos:position pos:line="49" pos:column="39"/></break></block></then></if>
			<comment type="block" pos:line="50" pos:column="25">/*
			 * got a good ansi sequence, put it back to
			 * local_sb as we're cutting sb
			 */</comment>
			<expr_stmt><expr><call><name pos:line="54" pos:column="25">strbuf_insert<pos:position pos:line="54" pos:column="38"/></name><argument_list pos:line="54" pos:column="38">(<argument><expr><operator pos:line="54" pos:column="39">&amp;<pos:position pos:line="54" pos:column="44"/></operator><name pos:line="54" pos:column="40">local_sb<pos:position pos:line="54" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="50">0<pos:position pos:line="54" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="53">p<pos:position pos:line="54" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="56">ch<pos:position pos:line="54" pos:column="58"/></name> <operator pos:line="54" pos:column="59">+<pos:position pos:line="54" pos:column="60"/></operator> <literal type="number" pos:line="54" pos:column="61">1<pos:position pos:line="54" pos:column="62"/></literal> <operator pos:line="54" pos:column="63">-<pos:position pos:line="54" pos:column="64"/></operator> <name pos:line="54" pos:column="65">p<pos:position pos:line="54" pos:column="66"/></name></expr></argument>)<pos:position pos:line="54" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><name pos:line="55" pos:column="25">ch<pos:position pos:line="55" pos:column="27"/></name> <operator pos:line="55" pos:column="28">=<pos:position pos:line="55" pos:column="29"/></operator> <name pos:line="55" pos:column="30">p<pos:position pos:line="55" pos:column="31"/></name> <operator pos:line="55" pos:column="32">-<pos:position pos:line="55" pos:column="33"/></operator> <literal type="number" pos:line="55" pos:column="34">1<pos:position pos:line="55" pos:column="35"/></literal></expr>;<pos:position pos:line="55" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="56" pos:column="18"/></block></while>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">strbuf_setlen<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">sb<pos:position pos:line="57" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="35">ch<pos:position pos:line="57" pos:column="37"/></name> <operator pos:line="57" pos:column="38">+<pos:position pos:line="57" pos:column="39"/></operator> <literal type="number" pos:line="57" pos:column="40">1<pos:position pos:line="57" pos:column="41"/></literal> <operator pos:line="57" pos:column="42">-<pos:position pos:line="57" pos:column="43"/></operator> <name><name pos:line="57" pos:column="44">sb<pos:position pos:line="57" pos:column="46"/></name><operator pos:line="57" pos:column="46">-&gt;<pos:position pos:line="57" pos:column="51"/></operator><name pos:line="57" pos:column="48">buf<pos:position pos:line="57" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="58" pos:column="17">c<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">-&gt;<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="20">flush_type<pos:position pos:line="58" pos:column="30"/></name></name> <operator pos:line="58" pos:column="31">=<pos:position pos:line="58" pos:column="32"/></operator> <name pos:line="58" pos:column="33">flush_left<pos:position pos:line="58" pos:column="43"/></name></expr>;<pos:position pos:line="58" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></then></if>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">len<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">&gt;<pos:position pos:line="61" pos:column="21"/></operator> <name pos:line="61" pos:column="19">padding<pos:position pos:line="61" pos:column="26"/></name></expr>)<pos:position pos:line="61" pos:column="27"/></condition><then pos:line="61" pos:column="27"> <block pos:line="61" pos:column="28">{
		<switch pos:line="62" pos:column="17">switch <condition pos:line="62" pos:column="24">(<expr><name><name pos:line="62" pos:column="25">c<pos:position pos:line="62" pos:column="26"/></name><operator pos:line="62" pos:column="26">-&gt;<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="28">truncate<pos:position pos:line="62" pos:column="36"/></name></name></expr>)<pos:position pos:line="62" pos:column="37"/></condition> <block pos:line="62" pos:column="38">{
		<case pos:line="63" pos:column="17">case <expr><name pos:line="63" pos:column="22">trunc_left<pos:position pos:line="63" pos:column="32"/></name></expr>:<pos:position pos:line="63" pos:column="33"/></case>
			<expr_stmt><expr><call><name pos:line="64" pos:column="25">strbuf_utf8_replace<pos:position pos:line="64" pos:column="44"/></name><argument_list pos:line="64" pos:column="44">(<argument><expr><operator pos:line="64" pos:column="45">&amp;<pos:position pos:line="64" pos:column="50"/></operator><name pos:line="64" pos:column="46">local_sb<pos:position pos:line="64" pos:column="54"/></name></expr></argument>,
					    <argument><expr><literal type="number" pos:line="65" pos:column="45">0<pos:position pos:line="65" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="48">len<pos:position pos:line="65" pos:column="51"/></name> <operator pos:line="65" pos:column="52">-<pos:position pos:line="65" pos:column="53"/></operator> <operator pos:line="65" pos:column="54">(<pos:position pos:line="65" pos:column="55"/></operator><name pos:line="65" pos:column="55">padding<pos:position pos:line="65" pos:column="62"/></name> <operator pos:line="65" pos:column="63">-<pos:position pos:line="65" pos:column="64"/></operator> <literal type="number" pos:line="65" pos:column="65">2<pos:position pos:line="65" pos:column="66"/></literal><operator pos:line="65" pos:column="66">)<pos:position pos:line="65" pos:column="67"/></operator></expr></argument>,
					    <argument><expr><literal type="string" pos:line="66" pos:column="45">".."<pos:position pos:line="66" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="51"/></expr_stmt>
			<break pos:line="67" pos:column="25">break;<pos:position pos:line="67" pos:column="31"/></break>
		<case pos:line="68" pos:column="17">case <expr><name pos:line="68" pos:column="22">trunc_middle<pos:position pos:line="68" pos:column="34"/></name></expr>:<pos:position pos:line="68" pos:column="35"/></case>
			<expr_stmt><expr><call><name pos:line="69" pos:column="25">strbuf_utf8_replace<pos:position pos:line="69" pos:column="44"/></name><argument_list pos:line="69" pos:column="44">(<argument><expr><operator pos:line="69" pos:column="45">&amp;<pos:position pos:line="69" pos:column="50"/></operator><name pos:line="69" pos:column="46">local_sb<pos:position pos:line="69" pos:column="54"/></name></expr></argument>,
					    <argument><expr><name pos:line="70" pos:column="45">padding<pos:position pos:line="70" pos:column="52"/></name> <operator pos:line="70" pos:column="53">/<pos:position pos:line="70" pos:column="54"/></operator> <literal type="number" pos:line="70" pos:column="55">2<pos:position pos:line="70" pos:column="56"/></literal> <operator pos:line="70" pos:column="57">-<pos:position pos:line="70" pos:column="58"/></operator> <literal type="number" pos:line="70" pos:column="59">1<pos:position pos:line="70" pos:column="60"/></literal></expr></argument>,
					    <argument><expr><name pos:line="71" pos:column="45">len<pos:position pos:line="71" pos:column="48"/></name> <operator pos:line="71" pos:column="49">-<pos:position pos:line="71" pos:column="50"/></operator> <operator pos:line="71" pos:column="51">(<pos:position pos:line="71" pos:column="52"/></operator><name pos:line="71" pos:column="52">padding<pos:position pos:line="71" pos:column="59"/></name> <operator pos:line="71" pos:column="60">-<pos:position pos:line="71" pos:column="61"/></operator> <literal type="number" pos:line="71" pos:column="62">2<pos:position pos:line="71" pos:column="63"/></literal><operator pos:line="71" pos:column="63">)<pos:position pos:line="71" pos:column="64"/></operator></expr></argument>,
					    <argument><expr><literal type="string" pos:line="72" pos:column="45">".."<pos:position pos:line="72" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="51"/></expr_stmt>
			<break pos:line="73" pos:column="25">break;<pos:position pos:line="73" pos:column="31"/></break>
		<case pos:line="74" pos:column="17">case <expr><name pos:line="74" pos:column="22">trunc_right<pos:position pos:line="74" pos:column="33"/></name></expr>:<pos:position pos:line="74" pos:column="34"/></case>
			<expr_stmt><expr><call><name pos:line="75" pos:column="25">strbuf_utf8_replace<pos:position pos:line="75" pos:column="44"/></name><argument_list pos:line="75" pos:column="44">(<argument><expr><operator pos:line="75" pos:column="45">&amp;<pos:position pos:line="75" pos:column="50"/></operator><name pos:line="75" pos:column="46">local_sb<pos:position pos:line="75" pos:column="54"/></name></expr></argument>,
					    <argument><expr><name pos:line="76" pos:column="45">padding<pos:position pos:line="76" pos:column="52"/></name> <operator pos:line="76" pos:column="53">-<pos:position pos:line="76" pos:column="54"/></operator> <literal type="number" pos:line="76" pos:column="55">2<pos:position pos:line="76" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="58">len<pos:position pos:line="76" pos:column="61"/></name> <operator pos:line="76" pos:column="62">-<pos:position pos:line="76" pos:column="63"/></operator> <operator pos:line="76" pos:column="64">(<pos:position pos:line="76" pos:column="65"/></operator><name pos:line="76" pos:column="65">padding<pos:position pos:line="76" pos:column="72"/></name> <operator pos:line="76" pos:column="73">-<pos:position pos:line="76" pos:column="74"/></operator> <literal type="number" pos:line="76" pos:column="75">2<pos:position pos:line="76" pos:column="76"/></literal><operator pos:line="76" pos:column="76">)<pos:position pos:line="76" pos:column="77"/></operator></expr></argument>,
					    <argument><expr><literal type="string" pos:line="77" pos:column="45">".."<pos:position pos:line="77" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="51"/></expr_stmt>
			<break pos:line="78" pos:column="25">break;<pos:position pos:line="78" pos:column="31"/></break>
		<case pos:line="79" pos:column="17">case <expr><name pos:line="79" pos:column="22">trunc_none<pos:position pos:line="79" pos:column="32"/></name></expr>:<pos:position pos:line="79" pos:column="33"/></case>
			<break pos:line="80" pos:column="25">break;<pos:position pos:line="80" pos:column="31"/></break>
		}<pos:position pos:line="81" pos:column="18"/></block></switch>
		<expr_stmt><expr><call><name pos:line="82" pos:column="17">strbuf_addbuf<pos:position pos:line="82" pos:column="30"/></name><argument_list pos:line="82" pos:column="30">(<argument><expr><name pos:line="82" pos:column="31">sb<pos:position pos:line="82" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="35">&amp;<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="36">local_sb<pos:position pos:line="82" pos:column="44"/></name></expr></argument>)<pos:position pos:line="82" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="83" pos:column="10"/></block></then> <else pos:line="83" pos:column="11">else <block pos:line="83" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="84" pos:column="17">int<pos:position pos:line="84" pos:column="20"/></name></type> <name pos:line="84" pos:column="21">sb_len<pos:position pos:line="84" pos:column="27"/></name> <init pos:line="84" pos:column="28">= <expr><name><name pos:line="84" pos:column="30">sb<pos:position pos:line="84" pos:column="32"/></name><operator pos:line="84" pos:column="32">-&gt;<pos:position pos:line="84" pos:column="37"/></operator><name pos:line="84" pos:column="34">len<pos:position pos:line="84" pos:column="37"/></name></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="84" pos:column="39">offset<pos:position pos:line="84" pos:column="45"/></name> <init pos:line="84" pos:column="46">= <expr><literal type="number" pos:line="84" pos:column="48">0<pos:position pos:line="84" pos:column="49"/></literal></expr></init></decl>;<pos:position pos:line="84" pos:column="50"/></decl_stmt>
		<if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><name><name pos:line="85" pos:column="21">c<pos:position pos:line="85" pos:column="22"/></name><operator pos:line="85" pos:column="22">-&gt;<pos:position pos:line="85" pos:column="27"/></operator><name pos:line="85" pos:column="24">flush_type<pos:position pos:line="85" pos:column="34"/></name></name> <operator pos:line="85" pos:column="35">==<pos:position pos:line="85" pos:column="37"/></operator> <name pos:line="85" pos:column="38">flush_left<pos:position pos:line="85" pos:column="48"/></name></expr>)<pos:position pos:line="85" pos:column="49"/></condition><then pos:line="85" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="25">offset<pos:position pos:line="86" pos:column="31"/></name> <operator pos:line="86" pos:column="32">=<pos:position pos:line="86" pos:column="33"/></operator> <name pos:line="86" pos:column="34">padding<pos:position pos:line="86" pos:column="41"/></name> <operator pos:line="86" pos:column="42">-<pos:position pos:line="86" pos:column="43"/></operator> <name pos:line="86" pos:column="44">len<pos:position pos:line="86" pos:column="47"/></name></expr>;<pos:position pos:line="86" pos:column="48"/></expr_stmt></block></then>
		<elseif pos:line="87" pos:column="17">else <if pos:line="87" pos:column="22">if <condition pos:line="87" pos:column="25">(<expr><name><name pos:line="87" pos:column="26">c<pos:position pos:line="87" pos:column="27"/></name><operator pos:line="87" pos:column="27">-&gt;<pos:position pos:line="87" pos:column="32"/></operator><name pos:line="87" pos:column="29">flush_type<pos:position pos:line="87" pos:column="39"/></name></name> <operator pos:line="87" pos:column="40">==<pos:position pos:line="87" pos:column="42"/></operator> <name pos:line="87" pos:column="43">flush_both<pos:position pos:line="87" pos:column="53"/></name></expr>)<pos:position pos:line="87" pos:column="54"/></condition><then pos:line="87" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="25">offset<pos:position pos:line="88" pos:column="31"/></name> <operator pos:line="88" pos:column="32">=<pos:position pos:line="88" pos:column="33"/></operator> <operator pos:line="88" pos:column="34">(<pos:position pos:line="88" pos:column="35"/></operator><name pos:line="88" pos:column="35">padding<pos:position pos:line="88" pos:column="42"/></name> <operator pos:line="88" pos:column="43">-<pos:position pos:line="88" pos:column="44"/></operator> <name pos:line="88" pos:column="45">len<pos:position pos:line="88" pos:column="48"/></name><operator pos:line="88" pos:column="48">)<pos:position pos:line="88" pos:column="49"/></operator> <operator pos:line="88" pos:column="50">/<pos:position pos:line="88" pos:column="51"/></operator> <literal type="number" pos:line="88" pos:column="52">2<pos:position pos:line="88" pos:column="53"/></literal></expr>;<pos:position pos:line="88" pos:column="54"/></expr_stmt></block></then></if></elseif></if>
		<comment type="block" pos:line="89" pos:column="17">/*
		 * we calculate padding in columns, now
		 * convert it back to chars
		 */</comment>
		<expr_stmt><expr><name pos:line="93" pos:column="17">padding<pos:position pos:line="93" pos:column="24"/></name> <operator pos:line="93" pos:column="25">=<pos:position pos:line="93" pos:column="26"/></operator> <name pos:line="93" pos:column="27">padding<pos:position pos:line="93" pos:column="34"/></name> <operator pos:line="93" pos:column="35">-<pos:position pos:line="93" pos:column="36"/></operator> <name pos:line="93" pos:column="37">len<pos:position pos:line="93" pos:column="40"/></name> <operator pos:line="93" pos:column="41">+<pos:position pos:line="93" pos:column="42"/></operator> <name><name pos:line="93" pos:column="43">local_sb<pos:position pos:line="93" pos:column="51"/></name><operator pos:line="93" pos:column="51">.<pos:position pos:line="93" pos:column="52"/></operator><name pos:line="93" pos:column="52">len<pos:position pos:line="93" pos:column="55"/></name></name></expr>;<pos:position pos:line="93" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="94" pos:column="17">strbuf_addchars<pos:position pos:line="94" pos:column="32"/></name><argument_list pos:line="94" pos:column="32">(<argument><expr><name pos:line="94" pos:column="33">sb<pos:position pos:line="94" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="94" pos:column="37">' '<pos:position pos:line="94" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="42">padding<pos:position pos:line="94" pos:column="49"/></name></expr></argument>)<pos:position pos:line="94" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="95" pos:column="17">memcpy<pos:position pos:line="95" pos:column="23"/></name><argument_list pos:line="95" pos:column="23">(<argument><expr><name><name pos:line="95" pos:column="24">sb<pos:position pos:line="95" pos:column="26"/></name><operator pos:line="95" pos:column="26">-&gt;<pos:position pos:line="95" pos:column="31"/></operator><name pos:line="95" pos:column="28">buf<pos:position pos:line="95" pos:column="31"/></name></name> <operator pos:line="95" pos:column="32">+<pos:position pos:line="95" pos:column="33"/></operator> <name pos:line="95" pos:column="34">sb_len<pos:position pos:line="95" pos:column="40"/></name> <operator pos:line="95" pos:column="41">+<pos:position pos:line="95" pos:column="42"/></operator> <name pos:line="95" pos:column="43">offset<pos:position pos:line="95" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="51">local_sb<pos:position pos:line="95" pos:column="59"/></name><operator pos:line="95" pos:column="59">.<pos:position pos:line="95" pos:column="60"/></operator><name pos:line="95" pos:column="60">buf<pos:position pos:line="95" pos:column="63"/></name></name></expr></argument>,
		       <argument><expr><name><name pos:line="96" pos:column="24">local_sb<pos:position pos:line="96" pos:column="32"/></name><operator pos:line="96" pos:column="32">.<pos:position pos:line="96" pos:column="33"/></operator><name pos:line="96" pos:column="33">len<pos:position pos:line="96" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="97" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="98" pos:column="9">strbuf_release<pos:position pos:line="98" pos:column="23"/></name><argument_list pos:line="98" pos:column="23">(<argument><expr><operator pos:line="98" pos:column="24">&amp;<pos:position pos:line="98" pos:column="29"/></operator><name pos:line="98" pos:column="25">local_sb<pos:position pos:line="98" pos:column="33"/></name></expr></argument>)<pos:position pos:line="98" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="99" pos:column="9">c<pos:position pos:line="99" pos:column="10"/></name><operator pos:line="99" pos:column="10">-&gt;<pos:position pos:line="99" pos:column="15"/></operator><name pos:line="99" pos:column="12">flush_type<pos:position pos:line="99" pos:column="22"/></name></name> <operator pos:line="99" pos:column="23">=<pos:position pos:line="99" pos:column="24"/></operator> <name pos:line="99" pos:column="25">no_flush<pos:position pos:line="99" pos:column="33"/></name></expr>;<pos:position pos:line="99" pos:column="34"/></expr_stmt>
	<return pos:line="100" pos:column="9">return <expr><name pos:line="100" pos:column="16">total_consumed<pos:position pos:line="100" pos:column="30"/></name></expr>;<pos:position pos:line="100" pos:column="31"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4231_git-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">grab_commit_values<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">atom_value<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">val<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">deref<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="67">struct<pos:position pos:line="1" pos:column="73"/></name> <name pos:line="1" pos:column="74">object<pos:position pos:line="1" pos:column="80"/></name></name> <modifier pos:line="1" pos:column="81">*<pos:position pos:line="1" pos:column="82"/></modifier></type><name pos:line="1" pos:column="82">obj<pos:position pos:line="1" pos:column="85"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="87">void<pos:position pos:line="1" pos:column="91"/></name> <modifier pos:line="1" pos:column="92">*<pos:position pos:line="1" pos:column="93"/></modifier></type><name pos:line="1" pos:column="93">buf<pos:position pos:line="1" pos:column="96"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="98">unsigned<pos:position pos:line="1" pos:column="106"/></name> <name pos:line="1" pos:column="107">long<pos:position pos:line="1" pos:column="111"/></name></type> <name pos:line="1" pos:column="112">sz<pos:position pos:line="1" pos:column="114"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="115"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">commit<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><operator pos:line="4" pos:column="33">(<pos:position pos:line="4" pos:column="34"/></operator>struct <name pos:line="4" pos:column="41">commit<pos:position pos:line="4" pos:column="47"/></name> <operator pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></operator><operator pos:line="4" pos:column="49">)<pos:position pos:line="4" pos:column="50"/></operator> <name pos:line="4" pos:column="51">obj<pos:position pos:line="4" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="25">used_atom_cnt<pos:position pos:line="6" pos:column="38"/></name></expr>;<pos:position pos:line="6" pos:column="39"/></condition> <incr><expr><name pos:line="6" pos:column="40">i<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">++<pos:position pos:line="6" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="44"/></control> <block pos:line="6" pos:column="45">{
		<decl_stmt><decl><type><specifier pos:line="7" pos:column="17">const<pos:position pos:line="7" pos:column="22"/></specifier> <name pos:line="7" pos:column="23">char<pos:position pos:line="7" pos:column="27"/></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">name<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><name><name pos:line="7" pos:column="36">used_atom<pos:position pos:line="7" pos:column="45"/></name><index pos:line="7" pos:column="45">[<expr><name pos:line="7" pos:column="46">i<pos:position pos:line="7" pos:column="47"/></name></expr>]<pos:position pos:line="7" pos:column="48"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">atom_value<pos:position pos:line="8" pos:column="34"/></name></name> <modifier pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></modifier></type><name pos:line="8" pos:column="36">v<pos:position pos:line="8" pos:column="37"/></name> <init pos:line="8" pos:column="38">= <expr><operator pos:line="8" pos:column="40">&amp;<pos:position pos:line="8" pos:column="45"/></operator><name><name pos:line="8" pos:column="41">val<pos:position pos:line="8" pos:column="44"/></name><index pos:line="8" pos:column="44">[<expr><name pos:line="8" pos:column="45">i<pos:position pos:line="8" pos:column="46"/></name></expr>]<pos:position pos:line="8" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><operator pos:line="9" pos:column="22">!<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">deref<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">!=<pos:position pos:line="9" pos:column="31"/></operator> <operator pos:line="9" pos:column="32">(<pos:position pos:line="9" pos:column="33"/></operator><operator pos:line="9" pos:column="33">*<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="34">name<pos:position pos:line="9" pos:column="38"/></name> <operator pos:line="9" pos:column="39">==<pos:position pos:line="9" pos:column="41"/></operator> <literal type="char" pos:line="9" pos:column="42">'*'<pos:position pos:line="9" pos:column="45"/></literal><operator pos:line="9" pos:column="45">)<pos:position pos:line="9" pos:column="46"/></operator></expr>)<pos:position pos:line="9" pos:column="47"/></condition><then pos:line="9" pos:column="47">
			<block type="pseudo"><continue pos:line="10" pos:column="25">continue;<pos:position pos:line="10" pos:column="34"/></continue></block></then></if>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">deref<pos:position pos:line="11" pos:column="26"/></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">name<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">++<pos:position pos:line="12" pos:column="31"/></operator></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt></block></then></if>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><call><name pos:line="13" pos:column="22">strcmp<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">name<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="35">"tree"<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="43"/></condition><then pos:line="13" pos:column="43"> <block pos:line="13" pos:column="44">{
			<decl_stmt><decl><type><name pos:line="14" pos:column="25">char<pos:position pos:line="14" pos:column="29"/></name> <modifier pos:line="14" pos:column="30">*<pos:position pos:line="14" pos:column="31"/></modifier></type><name pos:line="14" pos:column="31">s<pos:position pos:line="14" pos:column="32"/></name> <init pos:line="14" pos:column="33">= <expr><call><name pos:line="14" pos:column="35">xmalloc<pos:position pos:line="14" pos:column="42"/></name><argument_list pos:line="14" pos:column="42">(<argument><expr><literal type="number" pos:line="14" pos:column="43">41<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="47"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">strcpy<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">s<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="35">sha1_to_hex<pos:position pos:line="15" pos:column="46"/></name><argument_list pos:line="15" pos:column="46">(<argument><expr><name><name pos:line="15" pos:column="47">commit<pos:position pos:line="15" pos:column="53"/></name><operator pos:line="15" pos:column="53">-&gt;<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="55">tree<pos:position pos:line="15" pos:column="59"/></name><operator pos:line="15" pos:column="59">-&gt;<pos:position pos:line="15" pos:column="64"/></operator><name pos:line="15" pos:column="61">object<pos:position pos:line="15" pos:column="67"/></name><operator pos:line="15" pos:column="67">.<pos:position pos:line="15" pos:column="68"/></operator><name pos:line="15" pos:column="68">sha1<pos:position pos:line="15" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="16" pos:column="25">v<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">s<pos:position pos:line="16" pos:column="29"/></name></name> <operator pos:line="16" pos:column="30">=<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="32">s<pos:position pos:line="16" pos:column="33"/></name></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><call><name pos:line="18" pos:column="22">strcmp<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">name<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="35">"numparent"<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="48"/></condition><then pos:line="18" pos:column="48"> <block pos:line="18" pos:column="49">{
			<decl_stmt><decl><type><name pos:line="19" pos:column="25">char<pos:position pos:line="19" pos:column="29"/></name> <modifier pos:line="19" pos:column="30">*<pos:position pos:line="19" pos:column="31"/></modifier></type><name pos:line="19" pos:column="31">s<pos:position pos:line="19" pos:column="32"/></name> <init pos:line="19" pos:column="33">= <expr><call><name pos:line="19" pos:column="35">xmalloc<pos:position pos:line="19" pos:column="42"/></name><argument_list pos:line="19" pos:column="42">(<argument><expr><literal type="number" pos:line="19" pos:column="43">40<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="47"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="20" pos:column="25">v<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">ul<pos:position pos:line="20" pos:column="30"/></name></name> <operator pos:line="20" pos:column="31">=<pos:position pos:line="20" pos:column="32"/></operator> <call><name pos:line="20" pos:column="33">commit_list_count<pos:position pos:line="20" pos:column="50"/></name><argument_list pos:line="20" pos:column="50">(<argument><expr><name><name pos:line="20" pos:column="51">commit<pos:position pos:line="20" pos:column="57"/></name><operator pos:line="20" pos:column="57">-&gt;<pos:position pos:line="20" pos:column="62"/></operator><name pos:line="20" pos:column="59">parents<pos:position pos:line="20" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">sprintf<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">s<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="36">"%lu"<pos:position pos:line="21" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="43">v<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">ul<pos:position pos:line="21" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="22" pos:column="25">v<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">-&gt;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="28">s<pos:position pos:line="22" pos:column="29"/></name></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">s<pos:position pos:line="22" pos:column="33"/></name></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></then>
		<elseif pos:line="24" pos:column="17">else <if pos:line="24" pos:column="22">if <condition pos:line="24" pos:column="25">(<expr><operator pos:line="24" pos:column="26">!<pos:position pos:line="24" pos:column="27"/></operator><call><name pos:line="24" pos:column="27">strcmp<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">name<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="40">"parent"<pos:position pos:line="24" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="50"/></condition><then pos:line="24" pos:column="50"> <block pos:line="24" pos:column="51">{
			<decl_stmt><decl><type><name pos:line="25" pos:column="25">int<pos:position pos:line="25" pos:column="28"/></name></type> <name pos:line="25" pos:column="29">num<pos:position pos:line="25" pos:column="32"/></name> <init pos:line="25" pos:column="33">= <expr><call><name pos:line="25" pos:column="35">commit_list_count<pos:position pos:line="25" pos:column="52"/></name><argument_list pos:line="25" pos:column="52">(<argument><expr><name><name pos:line="25" pos:column="53">commit<pos:position pos:line="25" pos:column="59"/></name><operator pos:line="25" pos:column="59">-&gt;<pos:position pos:line="25" pos:column="64"/></operator><name pos:line="25" pos:column="61">parents<pos:position pos:line="25" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="70"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="26" pos:column="25">int<pos:position pos:line="26" pos:column="28"/></name></type> <name pos:line="26" pos:column="29">i<pos:position pos:line="26" pos:column="30"/></name></decl>;<pos:position pos:line="26" pos:column="31"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="27" pos:column="25">struct<pos:position pos:line="27" pos:column="31"/></name> <name pos:line="27" pos:column="32">commit_list<pos:position pos:line="27" pos:column="43"/></name></name> <modifier pos:line="27" pos:column="44">*<pos:position pos:line="27" pos:column="45"/></modifier></type><name pos:line="27" pos:column="45">parents<pos:position pos:line="27" pos:column="52"/></name></decl>;<pos:position pos:line="27" pos:column="53"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="28" pos:column="25">char<pos:position pos:line="28" pos:column="29"/></name> <modifier pos:line="28" pos:column="30">*<pos:position pos:line="28" pos:column="31"/></modifier></type><name pos:line="28" pos:column="31">s<pos:position pos:line="28" pos:column="32"/></name> <init pos:line="28" pos:column="33">= <expr><call><name pos:line="28" pos:column="35">xmalloc<pos:position pos:line="28" pos:column="42"/></name><argument_list pos:line="28" pos:column="42">(<argument><expr><literal type="number" pos:line="28" pos:column="43">41<pos:position pos:line="28" pos:column="45"/></literal> <operator pos:line="28" pos:column="46">*<pos:position pos:line="28" pos:column="47"/></operator> <name pos:line="28" pos:column="48">num<pos:position pos:line="28" pos:column="51"/></name> <operator pos:line="28" pos:column="52">+<pos:position pos:line="28" pos:column="53"/></operator> <literal type="number" pos:line="28" pos:column="54">1<pos:position pos:line="28" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="57"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="29" pos:column="25">v<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">-&gt;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="28">s<pos:position pos:line="29" pos:column="29"/></name></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <name pos:line="29" pos:column="32">s<pos:position pos:line="29" pos:column="33"/></name></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
			<for pos:line="30" pos:column="25">for <control pos:line="30" pos:column="29">(<init><expr><name pos:line="30" pos:column="30">i<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">=<pos:position pos:line="30" pos:column="33"/></operator> <literal type="number" pos:line="30" pos:column="34">0<pos:position pos:line="30" pos:column="35"/></literal></expr><operator pos:line="30" pos:column="35">,<pos:position pos:line="30" pos:column="36"/></operator> <expr><name pos:line="30" pos:column="37">parents<pos:position pos:line="30" pos:column="44"/></name> <operator pos:line="30" pos:column="45">=<pos:position pos:line="30" pos:column="46"/></operator> <name><name pos:line="30" pos:column="47">commit<pos:position pos:line="30" pos:column="53"/></name><operator pos:line="30" pos:column="53">-&gt;<pos:position pos:line="30" pos:column="58"/></operator><name pos:line="30" pos:column="55">parents<pos:position pos:line="30" pos:column="62"/></name></name></expr>;<pos:position pos:line="30" pos:column="63"/></init>
			     <condition><expr><name pos:line="31" pos:column="30">parents<pos:position pos:line="31" pos:column="37"/></name></expr>;<pos:position pos:line="31" pos:column="38"/></condition>
			     <incr><expr><name pos:line="32" pos:column="30">parents<pos:position pos:line="32" pos:column="37"/></name> <operator pos:line="32" pos:column="38">=<pos:position pos:line="32" pos:column="39"/></operator> <name><name pos:line="32" pos:column="40">parents<pos:position pos:line="32" pos:column="47"/></name><operator pos:line="32" pos:column="47">-&gt;<pos:position pos:line="32" pos:column="52"/></operator><name pos:line="32" pos:column="49">next<pos:position pos:line="32" pos:column="53"/></name></name></expr><operator pos:line="32" pos:column="53">,<pos:position pos:line="32" pos:column="54"/></operator> <expr><name pos:line="32" pos:column="55">i<pos:position pos:line="32" pos:column="56"/></name> <operator pos:line="32" pos:column="57">=<pos:position pos:line="32" pos:column="58"/></operator> <name pos:line="32" pos:column="59">i<pos:position pos:line="32" pos:column="60"/></name> <operator pos:line="32" pos:column="61">+<pos:position pos:line="32" pos:column="62"/></operator> <literal type="number" pos:line="32" pos:column="63">41<pos:position pos:line="32" pos:column="65"/></literal></expr></incr>)<pos:position pos:line="32" pos:column="66"/></control> <block pos:line="32" pos:column="67">{
				<decl_stmt><decl><type><name><name pos:line="33" pos:column="33">struct<pos:position pos:line="33" pos:column="39"/></name> <name pos:line="33" pos:column="40">commit<pos:position pos:line="33" pos:column="46"/></name></name> <modifier pos:line="33" pos:column="47">*<pos:position pos:line="33" pos:column="48"/></modifier></type><name pos:line="33" pos:column="48">parent<pos:position pos:line="33" pos:column="54"/></name> <init pos:line="33" pos:column="55">= <expr><name><name pos:line="33" pos:column="57">parents<pos:position pos:line="33" pos:column="64"/></name><operator pos:line="33" pos:column="64">-&gt;<pos:position pos:line="33" pos:column="69"/></operator><name pos:line="33" pos:column="66">item<pos:position pos:line="33" pos:column="70"/></name></name></expr></init></decl>;<pos:position pos:line="33" pos:column="71"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="34" pos:column="33">strcpy<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">s<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">+<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="42">i<pos:position pos:line="34" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="45">sha1_to_hex<pos:position pos:line="34" pos:column="56"/></name><argument_list pos:line="34" pos:column="56">(<argument><expr><name><name pos:line="34" pos:column="57">parent<pos:position pos:line="34" pos:column="63"/></name><operator pos:line="34" pos:column="63">-&gt;<pos:position pos:line="34" pos:column="68"/></operator><name pos:line="34" pos:column="65">object<pos:position pos:line="34" pos:column="71"/></name><operator pos:line="34" pos:column="71">.<pos:position pos:line="34" pos:column="72"/></operator><name pos:line="34" pos:column="72">sha1<pos:position pos:line="34" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="79"/></expr_stmt>
				<if pos:line="35" pos:column="33">if <condition pos:line="35" pos:column="36">(<expr><name><name pos:line="35" pos:column="37">parents<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">-&gt;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="46">next<pos:position pos:line="35" pos:column="50"/></name></name></expr>)<pos:position pos:line="35" pos:column="51"/></condition><then pos:line="35" pos:column="51">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="41">s<pos:position pos:line="36" pos:column="42"/></name><index pos:line="36" pos:column="42">[<expr><name pos:line="36" pos:column="43">i<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">+<pos:position pos:line="36" pos:column="45"/></operator><literal type="number" pos:line="36" pos:column="45">40<pos:position pos:line="36" pos:column="47"/></literal></expr>]<pos:position pos:line="36" pos:column="48"/></index></name> <operator pos:line="36" pos:column="49">=<pos:position pos:line="36" pos:column="50"/></operator> <literal type="char" pos:line="36" pos:column="51">' '<pos:position pos:line="36" pos:column="54"/></literal></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt></block></then></if>
			}<pos:position pos:line="37" pos:column="26"/></block></for>
			<if pos:line="38" pos:column="25">if <condition pos:line="38" pos:column="28">(<expr><operator pos:line="38" pos:column="29">!<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="30">i<pos:position pos:line="38" pos:column="31"/></name></expr>)<pos:position pos:line="38" pos:column="32"/></condition><then pos:line="38" pos:column="32">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="39" pos:column="33">*<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="34">s<pos:position pos:line="39" pos:column="35"/></name> <operator pos:line="39" pos:column="36">=<pos:position pos:line="39" pos:column="37"/></operator> <literal type="char" pos:line="39" pos:column="38">'\0'<pos:position pos:line="39" pos:column="42"/></literal></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt></block></then></if>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="41" pos:column="10"/></block></for>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3542_git-2.4.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">alloc_table<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">hashmap<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">map<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">unsigned<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">size<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><name><name pos:line="3" pos:column="9">map<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">-&gt;<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="14">tablesize<pos:position pos:line="3" pos:column="23"/></name></name> <operator pos:line="3" pos:column="24">=<pos:position pos:line="3" pos:column="25"/></operator> <name pos:line="3" pos:column="26">size<pos:position pos:line="3" pos:column="30"/></name></expr>;<pos:position pos:line="3" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="4" pos:column="9">map<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">-&gt;<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="14">table<pos:position pos:line="4" pos:column="19"/></name></name> <operator pos:line="4" pos:column="20">=<pos:position pos:line="4" pos:column="21"/></operator> <call><name pos:line="4" pos:column="22">xcalloc<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><name pos:line="4" pos:column="30">size<pos:position pos:line="4" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="36">sizeof<argument_list pos:line="4" pos:column="42">(<argument><expr pos:line="4" pos:column="43">struct <name pos:line="4" pos:column="50">hashmap_entry<pos:position pos:line="4" pos:column="63"/></name> <operator pos:line="4" pos:column="64">*<pos:position pos:line="4" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="4" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="68"/></expr_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* calculate resize thresholds for new size */</comment>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">map<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">grow_at<pos:position pos:line="7" pos:column="21"/></name></name> <operator pos:line="7" pos:column="22">=<pos:position pos:line="7" pos:column="23"/></operator> <call pos:line="7" pos:column="24">(<name pos:line="7" pos:column="25">unsigned<pos:position pos:line="7" pos:column="33"/></name> <name pos:line="7" pos:column="34">int<pos:position pos:line="7" pos:column="37"/></name>) <argument_list pos:line="7" pos:column="39">(<argument><expr><operator pos:line="7" pos:column="40">(<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">uint64_t<pos:position pos:line="7" pos:column="49"/></name><operator pos:line="7" pos:column="49">)<pos:position pos:line="7" pos:column="50"/></operator> <name pos:line="7" pos:column="51">size<pos:position pos:line="7" pos:column="55"/></name> <operator pos:line="7" pos:column="56">*<pos:position pos:line="7" pos:column="57"/></operator> <name pos:line="7" pos:column="58">HASHMAP_LOAD_FACTOR<pos:position pos:line="7" pos:column="77"/></name> <operator pos:line="7" pos:column="78">/<pos:position pos:line="7" pos:column="79"/></operator> <literal type="number" pos:line="7" pos:column="80">100<pos:position pos:line="7" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="85"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">size<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&lt;=<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="21">HASHMAP_INITIAL_SIZE<pos:position pos:line="8" pos:column="41"/></name></expr>)<pos:position pos:line="8" pos:column="42"/></condition><then pos:line="8" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="17">map<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">shrink_at<pos:position pos:line="9" pos:column="31"/></name></name> <operator pos:line="9" pos:column="32">=<pos:position pos:line="9" pos:column="33"/></operator> <literal type="number" pos:line="9" pos:column="34">0<pos:position pos:line="9" pos:column="35"/></literal></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt></block></then>
	<else pos:line="10" pos:column="9">else
		<comment type="block" pos:line="11" pos:column="17">/*
		 * The shrink-threshold must be slightly smaller than
		 * (grow-threshold / resize-factor) to prevent erratic resizing,
		 * thus we divide by (resize-factor + 1).
		 */</comment>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="17">map<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">shrink_at<pos:position pos:line="16" pos:column="31"/></name></name> <operator pos:line="16" pos:column="32">=<pos:position pos:line="16" pos:column="33"/></operator> <name><name pos:line="16" pos:column="34">map<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">grow_at<pos:position pos:line="16" pos:column="46"/></name></name> <operator pos:line="16" pos:column="47">/<pos:position pos:line="16" pos:column="48"/></operator> <operator pos:line="16" pos:column="49">(<pos:position pos:line="16" pos:column="50"/></operator><operator pos:line="16" pos:column="50">(<pos:position pos:line="16" pos:column="51"/></operator><literal type="number" pos:line="16" pos:column="51">1<pos:position pos:line="16" pos:column="52"/></literal> <operator pos:line="16" pos:column="53">&lt;&lt;<pos:position pos:line="16" pos:column="61"/></operator> <name pos:line="16" pos:column="56">HASHMAP_RESIZE_BITS<pos:position pos:line="16" pos:column="75"/></name><operator pos:line="16" pos:column="75">)<pos:position pos:line="16" pos:column="76"/></operator> <operator pos:line="16" pos:column="77">+<pos:position pos:line="16" pos:column="78"/></operator> <literal type="number" pos:line="16" pos:column="79">1<pos:position pos:line="16" pos:column="80"/></literal><operator pos:line="16" pos:column="80">)<pos:position pos:line="16" pos:column="81"/></operator></expr>;<pos:position pos:line="16" pos:column="82"/></expr_stmt></block></else></if>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

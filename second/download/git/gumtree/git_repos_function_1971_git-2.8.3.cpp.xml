<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1971_git-2.8.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">decode_85<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">char<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">dst<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">buffer<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">len<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">prep_base85<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">()<pos:position pos:line="3" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">say2<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><literal type="string" pos:line="5" pos:column="14">"decode 85 &lt;%.*s&gt;"<pos:position pos:line="5" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="34">len<pos:position pos:line="5" pos:column="37"/></name> <operator pos:line="5" pos:column="38">/<pos:position pos:line="5" pos:column="39"/></operator> <literal type="number" pos:line="5" pos:column="40">4<pos:position pos:line="5" pos:column="41"/></literal> <operator pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></operator> <literal type="number" pos:line="5" pos:column="44">5<pos:position pos:line="5" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="47">buffer<pos:position pos:line="5" pos:column="53"/></name></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="55"/></expr_stmt>
	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><name pos:line="6" pos:column="16">len<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition> <block pos:line="6" pos:column="21">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">unsigned<pos:position pos:line="7" pos:column="25"/></name></type> <name pos:line="7" pos:column="26">acc<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><literal type="number" pos:line="7" pos:column="32">0<pos:position pos:line="7" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">de<pos:position pos:line="8" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="25">cnt<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><literal type="number" pos:line="8" pos:column="31">4<pos:position pos:line="8" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">unsigned<pos:position pos:line="9" pos:column="25"/></name> <name pos:line="9" pos:column="26">char<pos:position pos:line="9" pos:column="30"/></name></type> <name pos:line="9" pos:column="31">ch<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
		<do pos:line="10" pos:column="17">do <block pos:line="10" pos:column="20">{
			<expr_stmt><expr><name pos:line="11" pos:column="25">ch<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <operator pos:line="11" pos:column="30">*<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">buffer<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">++<pos:position pos:line="11" pos:column="39"/></operator></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="12" pos:column="25">de<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">=<pos:position pos:line="12" pos:column="29"/></operator> <name><name pos:line="12" pos:column="30">de85<pos:position pos:line="12" pos:column="34"/></name><index pos:line="12" pos:column="34">[<expr><name pos:line="12" pos:column="35">ch<pos:position pos:line="12" pos:column="37"/></name></expr>]<pos:position pos:line="12" pos:column="38"/></index></name></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><operator pos:line="13" pos:column="29">--<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">de<pos:position pos:line="13" pos:column="33"/></name> <operator pos:line="13" pos:column="34">&lt;<pos:position pos:line="13" pos:column="38"/></operator> <literal type="number" pos:line="13" pos:column="36">0<pos:position pos:line="13" pos:column="37"/></literal></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38">
				<block type="pseudo"><return pos:line="14" pos:column="33">return <expr><call><name pos:line="14" pos:column="40">error<pos:position pos:line="14" pos:column="45"/></name><argument_list pos:line="14" pos:column="45">(<argument><expr><literal type="string" pos:line="14" pos:column="46">"invalid base85 alphabet %c"<pos:position pos:line="14" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="76">ch<pos:position pos:line="14" pos:column="78"/></name></expr></argument>)<pos:position pos:line="14" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="80"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="15" pos:column="25">acc<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <name pos:line="15" pos:column="31">acc<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">*<pos:position pos:line="15" pos:column="36"/></operator> <literal type="number" pos:line="15" pos:column="37">85<pos:position pos:line="15" pos:column="39"/></literal> <operator pos:line="15" pos:column="40">+<pos:position pos:line="15" pos:column="41"/></operator> <name pos:line="15" pos:column="42">de<pos:position pos:line="15" pos:column="44"/></name></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block> while <condition pos:line="16" pos:column="25">(<expr><operator pos:line="16" pos:column="26">--<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="28">cnt<pos:position pos:line="16" pos:column="31"/></name></expr>)<pos:position pos:line="16" pos:column="32"/></condition>;<pos:position pos:line="16" pos:column="33"/></do>
		<expr_stmt><expr><name pos:line="17" pos:column="17">ch<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <operator pos:line="17" pos:column="22">*<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">buffer<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">++<pos:position pos:line="17" pos:column="31"/></operator></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">de<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name><name pos:line="18" pos:column="22">de85<pos:position pos:line="18" pos:column="26"/></name><index pos:line="18" pos:column="26">[<expr><name pos:line="18" pos:column="27">ch<pos:position pos:line="18" pos:column="29"/></name></expr>]<pos:position pos:line="18" pos:column="30"/></index></name></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">--<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">de<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">&lt;<pos:position pos:line="19" pos:column="30"/></operator> <literal type="number" pos:line="19" pos:column="28">0<pos:position pos:line="19" pos:column="29"/></literal></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30">
			<block type="pseudo"><return pos:line="20" pos:column="25">return <expr><call><name pos:line="20" pos:column="32">error<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><literal type="string" pos:line="20" pos:column="38">"invalid base85 alphabet %c"<pos:position pos:line="20" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="68">ch<pos:position pos:line="20" pos:column="70"/></name></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="72"/></return></block></then></if>
		<comment type="block" pos:line="21" pos:column="17">/* Detect overflow. */</comment>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><literal type="number" pos:line="22" pos:column="21">0xffffffff<pos:position pos:line="22" pos:column="31"/></literal> <operator pos:line="22" pos:column="32">/<pos:position pos:line="22" pos:column="33"/></operator> <literal type="number" pos:line="22" pos:column="34">85<pos:position pos:line="22" pos:column="36"/></literal> <operator pos:line="22" pos:column="37">&lt;<pos:position pos:line="22" pos:column="41"/></operator> <name pos:line="22" pos:column="39">acc<pos:position pos:line="22" pos:column="42"/></name> <operator pos:line="22" pos:column="43">||<pos:position pos:line="22" pos:column="45"/></operator>
		    <literal type="number" pos:line="23" pos:column="21">0xffffffff<pos:position pos:line="23" pos:column="31"/></literal> <operator pos:line="23" pos:column="32">-<pos:position pos:line="23" pos:column="33"/></operator> <name pos:line="23" pos:column="34">de<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">&lt;<pos:position pos:line="23" pos:column="41"/></operator> <operator pos:line="23" pos:column="39">(<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="40">acc<pos:position pos:line="23" pos:column="43"/></name> <operator pos:line="23" pos:column="44">*=<pos:position pos:line="23" pos:column="46"/></operator> <literal type="number" pos:line="23" pos:column="47">85<pos:position pos:line="23" pos:column="49"/></literal><operator pos:line="23" pos:column="49">)<pos:position pos:line="23" pos:column="50"/></operator></expr>)<pos:position pos:line="23" pos:column="51"/></condition><then pos:line="23" pos:column="51">
			<block type="pseudo"><return pos:line="24" pos:column="25">return <expr><call><name pos:line="24" pos:column="32">error<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><literal type="string" pos:line="24" pos:column="38">"invalid base85 sequence %.5s"<pos:position pos:line="24" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="70">buffer<pos:position pos:line="24" pos:column="76"/></name><operator pos:line="24" pos:column="76">-<pos:position pos:line="24" pos:column="77"/></operator><literal type="number" pos:line="24" pos:column="77">5<pos:position pos:line="24" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="80"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="25" pos:column="17">acc<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">+=<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">de<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">say1<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><literal type="string" pos:line="26" pos:column="22">" %08x"<pos:position pos:line="26" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="31">acc<pos:position pos:line="26" pos:column="34"/></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>

		<expr_stmt><expr><name pos:line="28" pos:column="17">cnt<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <ternary><condition><expr><operator pos:line="28" pos:column="23">(<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">len<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">&lt;<pos:position pos:line="28" pos:column="32"/></operator> <literal type="number" pos:line="28" pos:column="30">4<pos:position pos:line="28" pos:column="31"/></literal><operator pos:line="28" pos:column="31">)<pos:position pos:line="28" pos:column="32"/></operator></expr> ?<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34"> <expr><name pos:line="28" pos:column="35">len<pos:position pos:line="28" pos:column="38"/></name></expr> <pos:position pos:line="28" pos:column="39"/></then><else pos:line="28" pos:column="39">: <expr><literal type="number" pos:line="28" pos:column="41">4<pos:position pos:line="28" pos:column="42"/></literal></expr></else></ternary></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">len<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">-=<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">cnt<pos:position pos:line="29" pos:column="27"/></name></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
		<do pos:line="30" pos:column="17">do <block pos:line="30" pos:column="20">{
			<expr_stmt><expr><name pos:line="31" pos:column="25">acc<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <operator pos:line="31" pos:column="31">(<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="32">acc<pos:position pos:line="31" pos:column="35"/></name> <operator pos:line="31" pos:column="36">&lt;&lt;<pos:position pos:line="31" pos:column="44"/></operator> <literal type="number" pos:line="31" pos:column="39">8<pos:position pos:line="31" pos:column="40"/></literal><operator pos:line="31" pos:column="40">)<pos:position pos:line="31" pos:column="41"/></operator> <operator pos:line="31" pos:column="42">|<pos:position pos:line="31" pos:column="43"/></operator> <operator pos:line="31" pos:column="44">(<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="45">acc<pos:position pos:line="31" pos:column="48"/></name> <operator pos:line="31" pos:column="49">&gt;&gt;<pos:position pos:line="31" pos:column="54"/></operator> <literal type="number" pos:line="31" pos:column="52">24<pos:position pos:line="31" pos:column="54"/></literal><operator pos:line="31" pos:column="54">)<pos:position pos:line="31" pos:column="55"/></operator></expr>;<pos:position pos:line="31" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="32" pos:column="25">*<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">dst<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">++<pos:position pos:line="32" pos:column="31"/></operator> <operator pos:line="32" pos:column="32">=<pos:position pos:line="32" pos:column="33"/></operator> <name pos:line="32" pos:column="34">acc<pos:position pos:line="32" pos:column="37"/></name></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block> while <condition pos:line="33" pos:column="25">(<expr><operator pos:line="33" pos:column="26">--<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="28">cnt<pos:position pos:line="33" pos:column="31"/></name></expr>)<pos:position pos:line="33" pos:column="32"/></condition>;<pos:position pos:line="33" pos:column="33"/></do>
	}<pos:position pos:line="34" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">say<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><literal type="string" pos:line="35" pos:column="13">"\n"<pos:position pos:line="35" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt>

	<return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

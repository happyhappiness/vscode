<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4844_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">unsigned<pos:position pos:line="1" pos:column="9"/></name> <name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">xdl_hashbits<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">unsigned<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">size<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <block pos:line="1" pos:column="46">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">unsigned<pos:position pos:line="2" pos:column="17"/></name> <name pos:line="2" pos:column="18">int<pos:position pos:line="2" pos:column="21"/></name></type> <name pos:line="2" pos:column="22">val<pos:position pos:line="2" pos:column="25"/></name> <init pos:line="2" pos:column="26">= <expr><literal type="number" pos:line="2" pos:column="28">1<pos:position pos:line="2" pos:column="29"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="31">bits<pos:position pos:line="2" pos:column="35"/></name> <init pos:line="2" pos:column="36">= <expr><literal type="number" pos:line="2" pos:column="38">0<pos:position pos:line="2" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="40"/></decl_stmt>

	<for pos:line="4" pos:column="9">for <control pos:line="4" pos:column="13">(<init pos:line="4" pos:column="14">;<pos:position pos:line="4" pos:column="15"/></init> <condition><expr><name pos:line="4" pos:column="16">val<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">&lt;<pos:position pos:line="4" pos:column="24"/></operator> <name pos:line="4" pos:column="22">size<pos:position pos:line="4" pos:column="26"/></name> <operator pos:line="4" pos:column="27">&amp;&amp;<pos:position pos:line="4" pos:column="37"/></operator> <name pos:line="4" pos:column="30">bits<pos:position pos:line="4" pos:column="34"/></name> <operator pos:line="4" pos:column="35">&lt;<pos:position pos:line="4" pos:column="39"/></operator> <name pos:line="4" pos:column="37">CHAR_BIT<pos:position pos:line="4" pos:column="45"/></name> <operator pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></operator> sizeof<operator pos:line="4" pos:column="54">(<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">unsigned<pos:position pos:line="4" pos:column="63"/></name> <name pos:line="4" pos:column="64">int<pos:position pos:line="4" pos:column="67"/></name><operator pos:line="4" pos:column="67">)<pos:position pos:line="4" pos:column="68"/></operator></expr>;<pos:position pos:line="4" pos:column="69"/></condition> <incr><expr><name pos:line="4" pos:column="70">val<pos:position pos:line="4" pos:column="73"/></name> <operator pos:line="4" pos:column="74">&lt;&lt;=<pos:position pos:line="4" pos:column="83"/></operator> <literal type="number" pos:line="4" pos:column="78">1<pos:position pos:line="4" pos:column="79"/></literal></expr><operator pos:line="4" pos:column="79">,<pos:position pos:line="4" pos:column="80"/></operator> <expr><name pos:line="4" pos:column="81">bits<pos:position pos:line="4" pos:column="85"/></name><operator pos:line="4" pos:column="85">++<pos:position pos:line="4" pos:column="87"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="88"/></control><block type="pseudo"><empty_stmt pos:line="4" pos:column="88">;<pos:position pos:line="4" pos:column="89"/></empty_stmt></block></for>
	<return pos:line="5" pos:column="9">return <expr><ternary><condition><expr><name pos:line="5" pos:column="16">bits<pos:position pos:line="5" pos:column="20"/></name></expr> ?<pos:position pos:line="5" pos:column="22"/></condition><then pos:line="5" pos:column="22"> <expr><name pos:line="5" pos:column="23">bits<pos:position pos:line="5" pos:column="27"/></name></expr></then><else pos:line="5" pos:column="27">: <expr><literal type="number" pos:line="5" pos:column="29">1<pos:position pos:line="5" pos:column="30"/></literal></expr></else></ternary></expr>;<pos:position pos:line="5" pos:column="31"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

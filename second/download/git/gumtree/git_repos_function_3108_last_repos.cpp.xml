<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3108_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">free_discovery<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">discovery<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">d<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">d<pos:position pos:line="3" pos:column="14"/></name></expr>)<pos:position pos:line="3" pos:column="15"/></condition><then pos:line="3" pos:column="15"> <block pos:line="3" pos:column="16">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><name pos:line="4" pos:column="21">d<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">==<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="26">last_discovery<pos:position pos:line="4" pos:column="40"/></name></expr>)<pos:position pos:line="4" pos:column="41"/></condition><then pos:line="4" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="25">last_discovery<pos:position pos:line="5" pos:column="39"/></name> <operator pos:line="5" pos:column="40">=<pos:position pos:line="5" pos:column="41"/></operator> <name pos:line="5" pos:column="42">NULL<pos:position pos:line="5" pos:column="46"/></name></expr>;<pos:position pos:line="5" pos:column="47"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">free<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name><name pos:line="6" pos:column="22">d<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">shallow<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">oid<pos:position pos:line="6" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">free<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name><name pos:line="7" pos:column="22">d<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">buf_alloc<pos:position pos:line="7" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">free_refs<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name><name pos:line="8" pos:column="27">d<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">refs<pos:position pos:line="8" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">free<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">d<pos:position pos:line="9" pos:column="23"/></name></expr></argument>)<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1177_git-2.3.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">normalize_path_copy_len<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">dst<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">src<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">prefix_len<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">dst0<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">has_dos_drive_prefix<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">(<argument><expr><name pos:line="5" pos:column="34">src<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="39"/></condition><then pos:line="5" pos:column="39"> <block pos:line="5" pos:column="40">{
		<expr_stmt><expr><operator pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">dst<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">++<pos:position pos:line="6" pos:column="23"/></operator> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <operator pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">src<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">++<pos:position pos:line="6" pos:column="32"/></operator></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">dst<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">++<pos:position pos:line="7" pos:column="23"/></operator> <operator pos:line="7" pos:column="24">=<pos:position pos:line="7" pos:column="25"/></operator> <operator pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">src<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">++<pos:position pos:line="7" pos:column="32"/></operator></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="9" pos:column="9">dst0<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <name pos:line="9" pos:column="16">dst<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">is_dir_sep<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><operator pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">src<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30"> <block pos:line="11" pos:column="31">{
		<expr_stmt><expr><operator pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">dst<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">++<pos:position pos:line="12" pos:column="23"/></operator> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <literal type="char" pos:line="12" pos:column="26">'/'<pos:position pos:line="12" pos:column="29"/></literal></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
		<while pos:line="13" pos:column="17">while <condition pos:line="13" pos:column="23">(<expr><call><name pos:line="13" pos:column="24">is_dir_sep<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><operator pos:line="13" pos:column="35">*<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">src<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="41"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">src<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">++<pos:position pos:line="14" pos:column="30"/></operator></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt></block></while>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init pos:line="17" pos:column="14">;<pos:position pos:line="17" pos:column="15"/></init><condition pos:line="17" pos:column="15">;<pos:position pos:line="17" pos:column="16"/></condition><incr/>)<pos:position pos:line="17" pos:column="17"/></control> <block pos:line="17" pos:column="18">{
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">char<pos:position pos:line="18" pos:column="21"/></name></type> <name pos:line="18" pos:column="22">c<pos:position pos:line="18" pos:column="23"/></name> <init pos:line="18" pos:column="24">= <expr><operator pos:line="18" pos:column="26">*<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">src<pos:position pos:line="18" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="31"/></decl_stmt>

		<comment type="block" pos:line="20" pos:column="17">/*
		 * A path component that begins with . could be
		 * special:
		 * (1) "." and ends   -- ignore and terminate.
		 * (2) "./"           -- ignore them, eat slash and continue.
		 * (3) ".." and ends  -- strip one and terminate.
		 * (4) "../"          -- strip one, eat slash and continue.
		 */</comment>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">c<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">==<pos:position pos:line="28" pos:column="25"/></operator> <literal type="char" pos:line="28" pos:column="26">'.'<pos:position pos:line="28" pos:column="29"/></literal></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30"> <block pos:line="28" pos:column="31">{
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><operator pos:line="29" pos:column="29">!<pos:position pos:line="29" pos:column="30"/></operator><name><name pos:line="29" pos:column="30">src<pos:position pos:line="29" pos:column="33"/></name><index pos:line="29" pos:column="33">[<expr><literal type="number" pos:line="29" pos:column="34">1<pos:position pos:line="29" pos:column="35"/></literal></expr>]<pos:position pos:line="29" pos:column="36"/></index></name></expr>)<pos:position pos:line="29" pos:column="37"/></condition><then pos:line="29" pos:column="37"> <block pos:line="29" pos:column="38">{
				<comment type="block" pos:line="30" pos:column="33">/* (1) */</comment>
				<expr_stmt><expr><name pos:line="31" pos:column="33">src<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">++<pos:position pos:line="31" pos:column="38"/></operator></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
			}<pos:position pos:line="32" pos:column="26"/></block></then> <elseif pos:line="32" pos:column="27">else <if pos:line="32" pos:column="32">if <condition pos:line="32" pos:column="35">(<expr><call><name pos:line="32" pos:column="36">is_dir_sep<pos:position pos:line="32" pos:column="46"/></name><argument_list pos:line="32" pos:column="46">(<argument><expr><name><name pos:line="32" pos:column="47">src<pos:position pos:line="32" pos:column="50"/></name><index pos:line="32" pos:column="50">[<expr><literal type="number" pos:line="32" pos:column="51">1<pos:position pos:line="32" pos:column="52"/></literal></expr>]<pos:position pos:line="32" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="55"/></condition><then pos:line="32" pos:column="55"> <block pos:line="32" pos:column="56">{
				<comment type="block" pos:line="33" pos:column="33">/* (2) */</comment>
				<expr_stmt><expr><name pos:line="34" pos:column="33">src<pos:position pos:line="34" pos:column="36"/></name> <operator pos:line="34" pos:column="37">+=<pos:position pos:line="34" pos:column="39"/></operator> <literal type="number" pos:line="34" pos:column="40">2<pos:position pos:line="34" pos:column="41"/></literal></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
				<while pos:line="35" pos:column="33">while <condition pos:line="35" pos:column="39">(<expr><call><name pos:line="35" pos:column="40">is_dir_sep<pos:position pos:line="35" pos:column="50"/></name><argument_list pos:line="35" pos:column="50">(<argument><expr><operator pos:line="35" pos:column="51">*<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="52">src<pos:position pos:line="35" pos:column="55"/></name></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="57"/></condition>
					<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="41">src<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">++<pos:position pos:line="36" pos:column="46"/></operator></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt></block></while>
				<continue pos:line="37" pos:column="33">continue;<pos:position pos:line="37" pos:column="42"/></continue>
			}<pos:position pos:line="38" pos:column="26"/></block></then></if></elseif> <elseif pos:line="38" pos:column="27">else <if pos:line="38" pos:column="32">if <condition pos:line="38" pos:column="35">(<expr><name><name pos:line="38" pos:column="36">src<pos:position pos:line="38" pos:column="39"/></name><index pos:line="38" pos:column="39">[<expr><literal type="number" pos:line="38" pos:column="40">1<pos:position pos:line="38" pos:column="41"/></literal></expr>]<pos:position pos:line="38" pos:column="42"/></index></name> <operator pos:line="38" pos:column="43">==<pos:position pos:line="38" pos:column="45"/></operator> <literal type="char" pos:line="38" pos:column="46">'.'<pos:position pos:line="38" pos:column="49"/></literal></expr>)<pos:position pos:line="38" pos:column="50"/></condition><then pos:line="38" pos:column="50"> <block pos:line="38" pos:column="51">{
				<if pos:line="39" pos:column="33">if <condition pos:line="39" pos:column="36">(<expr><operator pos:line="39" pos:column="37">!<pos:position pos:line="39" pos:column="38"/></operator><name><name pos:line="39" pos:column="38">src<pos:position pos:line="39" pos:column="41"/></name><index pos:line="39" pos:column="41">[<expr><literal type="number" pos:line="39" pos:column="42">2<pos:position pos:line="39" pos:column="43"/></literal></expr>]<pos:position pos:line="39" pos:column="44"/></index></name></expr>)<pos:position pos:line="39" pos:column="45"/></condition><then pos:line="39" pos:column="45"> <block pos:line="39" pos:column="46">{
					<comment type="block" pos:line="40" pos:column="41">/* (3) */</comment>
					<expr_stmt><expr><name pos:line="41" pos:column="41">src<pos:position pos:line="41" pos:column="44"/></name> <operator pos:line="41" pos:column="45">+=<pos:position pos:line="41" pos:column="47"/></operator> <literal type="number" pos:line="41" pos:column="48">2<pos:position pos:line="41" pos:column="49"/></literal></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>
					<goto pos:line="42" pos:column="41">goto <name pos:line="42" pos:column="46">up_one<pos:position pos:line="42" pos:column="52"/></name>;<pos:position pos:line="42" pos:column="53"/></goto>
				}<pos:position pos:line="43" pos:column="34"/></block></then> <elseif pos:line="43" pos:column="35">else <if pos:line="43" pos:column="40">if <condition pos:line="43" pos:column="43">(<expr><call><name pos:line="43" pos:column="44">is_dir_sep<pos:position pos:line="43" pos:column="54"/></name><argument_list pos:line="43" pos:column="54">(<argument><expr><name><name pos:line="43" pos:column="55">src<pos:position pos:line="43" pos:column="58"/></name><index pos:line="43" pos:column="58">[<expr><literal type="number" pos:line="43" pos:column="59">2<pos:position pos:line="43" pos:column="60"/></literal></expr>]<pos:position pos:line="43" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="63"/></condition><then pos:line="43" pos:column="63"> <block pos:line="43" pos:column="64">{
					<comment type="block" pos:line="44" pos:column="41">/* (4) */</comment>
					<expr_stmt><expr><name pos:line="45" pos:column="41">src<pos:position pos:line="45" pos:column="44"/></name> <operator pos:line="45" pos:column="45">+=<pos:position pos:line="45" pos:column="47"/></operator> <literal type="number" pos:line="45" pos:column="48">3<pos:position pos:line="45" pos:column="49"/></literal></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt>
					<while pos:line="46" pos:column="41">while <condition pos:line="46" pos:column="47">(<expr><call><name pos:line="46" pos:column="48">is_dir_sep<pos:position pos:line="46" pos:column="58"/></name><argument_list pos:line="46" pos:column="58">(<argument><expr><operator pos:line="46" pos:column="59">*<pos:position pos:line="46" pos:column="60"/></operator><name pos:line="46" pos:column="60">src<pos:position pos:line="46" pos:column="63"/></name></expr></argument>)<pos:position pos:line="46" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="65"/></condition>
						<block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="49">src<pos:position pos:line="47" pos:column="52"/></name><operator pos:line="47" pos:column="52">++<pos:position pos:line="47" pos:column="54"/></operator></expr>;<pos:position pos:line="47" pos:column="55"/></expr_stmt></block></while>
					<goto pos:line="48" pos:column="41">goto <name pos:line="48" pos:column="46">up_one<pos:position pos:line="48" pos:column="52"/></name>;<pos:position pos:line="48" pos:column="53"/></goto>
				}<pos:position pos:line="49" pos:column="34"/></block></then></if></elseif></if>
			}<pos:position pos:line="50" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="51" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="53" pos:column="17">/* copy up to the next '/', and eat all '/' */</comment>
		<while pos:line="54" pos:column="17">while <condition pos:line="54" pos:column="23">(<expr><operator pos:line="54" pos:column="24">(<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="25">c<pos:position pos:line="54" pos:column="26"/></name> <operator pos:line="54" pos:column="27">=<pos:position pos:line="54" pos:column="28"/></operator> <operator pos:line="54" pos:column="29">*<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="30">src<pos:position pos:line="54" pos:column="33"/></name><operator pos:line="54" pos:column="33">++<pos:position pos:line="54" pos:column="35"/></operator><operator pos:line="54" pos:column="35">)<pos:position pos:line="54" pos:column="36"/></operator> <operator pos:line="54" pos:column="37">!=<pos:position pos:line="54" pos:column="39"/></operator> <literal type="char" pos:line="54" pos:column="40">'\0'<pos:position pos:line="54" pos:column="44"/></literal> <operator pos:line="54" pos:column="45">&amp;&amp;<pos:position pos:line="54" pos:column="55"/></operator> <operator pos:line="54" pos:column="48">!<pos:position pos:line="54" pos:column="49"/></operator><call><name pos:line="54" pos:column="49">is_dir_sep<pos:position pos:line="54" pos:column="59"/></name><argument_list pos:line="54" pos:column="59">(<argument><expr><name pos:line="54" pos:column="60">c<pos:position pos:line="54" pos:column="61"/></name></expr></argument>)<pos:position pos:line="54" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="63"/></condition>
			<block type="pseudo"><expr_stmt><expr><operator pos:line="55" pos:column="25">*<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="26">dst<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">++<pos:position pos:line="55" pos:column="31"/></operator> <operator pos:line="55" pos:column="32">=<pos:position pos:line="55" pos:column="33"/></operator> <name pos:line="55" pos:column="34">c<pos:position pos:line="55" pos:column="35"/></name></expr>;<pos:position pos:line="55" pos:column="36"/></expr_stmt></block></while>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><call><name pos:line="56" pos:column="21">is_dir_sep<pos:position pos:line="56" pos:column="31"/></name><argument_list pos:line="56" pos:column="31">(<argument><expr><name pos:line="56" pos:column="32">c<pos:position pos:line="56" pos:column="33"/></name></expr></argument>)<pos:position pos:line="56" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="35"/></condition><then pos:line="56" pos:column="35"> <block pos:line="56" pos:column="36">{
			<expr_stmt><expr><operator pos:line="57" pos:column="25">*<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="26">dst<pos:position pos:line="57" pos:column="29"/></name><operator pos:line="57" pos:column="29">++<pos:position pos:line="57" pos:column="31"/></operator> <operator pos:line="57" pos:column="32">=<pos:position pos:line="57" pos:column="33"/></operator> <literal type="char" pos:line="57" pos:column="34">'/'<pos:position pos:line="57" pos:column="37"/></literal></expr>;<pos:position pos:line="57" pos:column="38"/></expr_stmt>
			<while pos:line="58" pos:column="25">while <condition pos:line="58" pos:column="31">(<expr><call><name pos:line="58" pos:column="32">is_dir_sep<pos:position pos:line="58" pos:column="42"/></name><argument_list pos:line="58" pos:column="42">(<argument><expr><name pos:line="58" pos:column="43">c<pos:position pos:line="58" pos:column="44"/></name></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="46"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="33">c<pos:position pos:line="59" pos:column="34"/></name> <operator pos:line="59" pos:column="35">=<pos:position pos:line="59" pos:column="36"/></operator> <operator pos:line="59" pos:column="37">*<pos:position pos:line="59" pos:column="38"/></operator><name pos:line="59" pos:column="38">src<pos:position pos:line="59" pos:column="41"/></name><operator pos:line="59" pos:column="41">++<pos:position pos:line="59" pos:column="43"/></operator></expr>;<pos:position pos:line="59" pos:column="44"/></expr_stmt></block></while>
			<expr_stmt><expr><name pos:line="60" pos:column="25">src<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">--<pos:position pos:line="60" pos:column="30"/></operator></expr>;<pos:position pos:line="60" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="61" pos:column="18"/></block></then> <elseif pos:line="61" pos:column="19">else <if pos:line="61" pos:column="24">if <condition pos:line="61" pos:column="27">(<expr><operator pos:line="61" pos:column="28">!<pos:position pos:line="61" pos:column="29"/></operator><name pos:line="61" pos:column="29">c<pos:position pos:line="61" pos:column="30"/></name></expr>)<pos:position pos:line="61" pos:column="31"/></condition><then pos:line="61" pos:column="31">
			<block type="pseudo"><break pos:line="62" pos:column="25">break;<pos:position pos:line="62" pos:column="31"/></break></block></then></if></elseif></if>
		<continue pos:line="63" pos:column="17">continue;<pos:position pos:line="63" pos:column="26"/></continue>

	<label><name pos:line="65" pos:column="9">up_one<pos:position pos:line="65" pos:column="15"/></name>:<pos:position pos:line="65" pos:column="16"/></label>
		<comment type="block" pos:line="66" pos:column="17">/*
		 * dst0..dst is prefix portion, and dst[-1] is '/';
		 * go up one level.
		 */</comment>
		<expr_stmt><expr><name pos:line="70" pos:column="17">dst<pos:position pos:line="70" pos:column="20"/></name><operator pos:line="70" pos:column="20">--<pos:position pos:line="70" pos:column="22"/></operator></expr>;<pos:position pos:line="70" pos:column="23"/></expr_stmt>	<comment type="block" pos:line="70" pos:column="25">/* go to trailing '/' */</comment>
		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><name pos:line="71" pos:column="21">dst<pos:position pos:line="71" pos:column="24"/></name> <operator pos:line="71" pos:column="25">&lt;=<pos:position pos:line="71" pos:column="30"/></operator> <name pos:line="71" pos:column="28">dst0<pos:position pos:line="71" pos:column="32"/></name></expr>)<pos:position pos:line="71" pos:column="33"/></condition><then pos:line="71" pos:column="33">
			<block type="pseudo"><return pos:line="72" pos:column="25">return <expr><operator pos:line="72" pos:column="32">-<pos:position pos:line="72" pos:column="33"/></operator><literal type="number" pos:line="72" pos:column="33">1<pos:position pos:line="72" pos:column="34"/></literal></expr>;<pos:position pos:line="72" pos:column="35"/></return></block></then></if>
		<comment type="block" pos:line="73" pos:column="17">/* Windows: dst[-1] cannot be backslash anymore */</comment>
		<while pos:line="74" pos:column="17">while <condition pos:line="74" pos:column="23">(<expr><name pos:line="74" pos:column="24">dst0<pos:position pos:line="74" pos:column="28"/></name> <operator pos:line="74" pos:column="29">&lt;<pos:position pos:line="74" pos:column="33"/></operator> <name pos:line="74" pos:column="31">dst<pos:position pos:line="74" pos:column="34"/></name> <operator pos:line="74" pos:column="35">&amp;&amp;<pos:position pos:line="74" pos:column="45"/></operator> <name><name pos:line="74" pos:column="38">dst<pos:position pos:line="74" pos:column="41"/></name><index pos:line="74" pos:column="41">[<expr><operator pos:line="74" pos:column="42">-<pos:position pos:line="74" pos:column="43"/></operator><literal type="number" pos:line="74" pos:column="43">1<pos:position pos:line="74" pos:column="44"/></literal></expr>]<pos:position pos:line="74" pos:column="45"/></index></name> <operator pos:line="74" pos:column="46">!=<pos:position pos:line="74" pos:column="48"/></operator> <literal type="char" pos:line="74" pos:column="49">'/'<pos:position pos:line="74" pos:column="52"/></literal></expr>)<pos:position pos:line="74" pos:column="53"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="25">dst<pos:position pos:line="75" pos:column="28"/></name><operator pos:line="75" pos:column="28">--<pos:position pos:line="75" pos:column="30"/></operator></expr>;<pos:position pos:line="75" pos:column="31"/></expr_stmt></block></while>
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name pos:line="76" pos:column="21">prefix_len<pos:position pos:line="76" pos:column="31"/></name> <operator pos:line="76" pos:column="32">&amp;&amp;<pos:position pos:line="76" pos:column="42"/></operator> <operator pos:line="76" pos:column="35">*<pos:position pos:line="76" pos:column="36"/></operator><name pos:line="76" pos:column="36">prefix_len<pos:position pos:line="76" pos:column="46"/></name> <operator pos:line="76" pos:column="47">&gt;<pos:position pos:line="76" pos:column="51"/></operator> <name pos:line="76" pos:column="49">dst<pos:position pos:line="76" pos:column="52"/></name> <operator pos:line="76" pos:column="53">-<pos:position pos:line="76" pos:column="54"/></operator> <name pos:line="76" pos:column="55">dst0<pos:position pos:line="76" pos:column="59"/></name></expr>)<pos:position pos:line="76" pos:column="60"/></condition><then pos:line="76" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="77" pos:column="25">*<pos:position pos:line="77" pos:column="26"/></operator><name pos:line="77" pos:column="26">prefix_len<pos:position pos:line="77" pos:column="36"/></name> <operator pos:line="77" pos:column="37">=<pos:position pos:line="77" pos:column="38"/></operator> <name pos:line="77" pos:column="39">dst<pos:position pos:line="77" pos:column="42"/></name> <operator pos:line="77" pos:column="43">-<pos:position pos:line="77" pos:column="44"/></operator> <name pos:line="77" pos:column="45">dst0<pos:position pos:line="77" pos:column="49"/></name></expr>;<pos:position pos:line="77" pos:column="50"/></expr_stmt></block></then></if>
	}<pos:position pos:line="78" pos:column="10"/></block></for>
	<expr_stmt><expr><operator pos:line="79" pos:column="9">*<pos:position pos:line="79" pos:column="10"/></operator><name pos:line="79" pos:column="10">dst<pos:position pos:line="79" pos:column="13"/></name> <operator pos:line="79" pos:column="14">=<pos:position pos:line="79" pos:column="15"/></operator> <literal type="char" pos:line="79" pos:column="16">'\0'<pos:position pos:line="79" pos:column="20"/></literal></expr>;<pos:position pos:line="79" pos:column="21"/></expr_stmt>
	<return pos:line="80" pos:column="9">return <expr><literal type="number" pos:line="80" pos:column="16">0<pos:position pos:line="80" pos:column="17"/></literal></expr>;<pos:position pos:line="80" pos:column="18"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

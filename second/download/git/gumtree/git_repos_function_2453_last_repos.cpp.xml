<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2453_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">fill_directory<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">dir_struct<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">dir<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>,
		   <parameter><decl><type><name><name pos:line="2" pos:column="20">struct<pos:position pos:line="2" pos:column="26"/></name> <name pos:line="2" pos:column="27">index_state<pos:position pos:line="2" pos:column="38"/></name></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">istate<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
		   <parameter><decl><type><specifier pos:line="3" pos:column="20">const<pos:position pos:line="3" pos:column="25"/></specifier> <name><name pos:line="3" pos:column="26">struct<pos:position pos:line="3" pos:column="32"/></name> <name pos:line="3" pos:column="33">pathspec<pos:position pos:line="3" pos:column="41"/></name></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">pathspec<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">prefix<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">prefix_len<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/*
	 * Calculate common prefix for the pathspec, and
	 * use that to optimize the directory walk
	 */</comment>
	<expr_stmt><expr><name pos:line="12" pos:column="9">prefix_len<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <call><name pos:line="12" pos:column="22">common_prefix_len<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">pathspec<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">prefix<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <ternary><condition><expr><name pos:line="13" pos:column="18">prefix_len<pos:position pos:line="13" pos:column="28"/></name></expr> ?<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30"> <expr><name><name pos:line="13" pos:column="31">pathspec<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">items<pos:position pos:line="13" pos:column="46"/></name><index pos:line="13" pos:column="46">[<expr><literal type="number" pos:line="13" pos:column="47">0<pos:position pos:line="13" pos:column="48"/></literal></expr>]<pos:position pos:line="13" pos:column="49"/></index></name><operator pos:line="13" pos:column="49">.<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="50">match<pos:position pos:line="13" pos:column="55"/></name></expr> <pos:position pos:line="13" pos:column="56"/></then><else pos:line="13" pos:column="56">: <expr><literal type="string" pos:line="13" pos:column="58">""<pos:position pos:line="13" pos:column="60"/></literal></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt>

	<comment type="block" pos:line="15" pos:column="9">/* Read the directory and prune it */</comment>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">read_directory<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">dir<pos:position pos:line="16" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="29">istate<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">prefix<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">prefix_len<pos:position pos:line="16" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="57">pathspec<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>

	<return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">prefix_len<pos:position pos:line="18" pos:column="26"/></name></expr>;<pos:position pos:line="18" pos:column="27"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

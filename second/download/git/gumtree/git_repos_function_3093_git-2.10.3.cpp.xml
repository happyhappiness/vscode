<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3093_git-2.10.3.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">commit_list<pos:position pos:line="1" pos:column="19"/></name></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">filter_skipped<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">commit_list<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">list<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
				   <parameter><decl><type><name><name pos:line="2" pos:column="36">struct<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">commit_list<pos:position pos:line="2" pos:column="54"/></name></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier><modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">tried<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="3" pos:column="36">int<pos:position pos:line="3" pos:column="39"/></name></type> <name pos:line="3" pos:column="40">show_all<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="4" pos:column="36">int<pos:position pos:line="4" pos:column="39"/></name> <modifier pos:line="4" pos:column="40">*<pos:position pos:line="4" pos:column="41"/></modifier></type><name pos:line="4" pos:column="41">count<pos:position pos:line="4" pos:column="46"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="5" pos:column="36">int<pos:position pos:line="5" pos:column="39"/></name> <modifier pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></modifier></type><name pos:line="5" pos:column="41">skipped_first<pos:position pos:line="5" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="55"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">commit_list<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">filtered<pos:position pos:line="7" pos:column="37"/></name> <init pos:line="7" pos:column="38">= <expr><name pos:line="7" pos:column="40">NULL<pos:position pos:line="7" pos:column="44"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="46">*<pos:position pos:line="7" pos:column="47"/></modifier><modifier pos:line="7" pos:column="47">*<pos:position pos:line="7" pos:column="48"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="48">f<pos:position pos:line="7" pos:column="49"/></name> <init pos:line="7" pos:column="50">= <expr><operator pos:line="7" pos:column="52">&amp;<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="53">filtered<pos:position pos:line="7" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="62"/></decl_stmt>

	<expr_stmt><expr><operator pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">tried<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">skipped_first<pos:position pos:line="11" pos:column="26"/></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">skipped_first<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">=<pos:position pos:line="12" pos:column="33"/></operator> <literal type="number" pos:line="12" pos:column="34">0<pos:position pos:line="12" pos:column="35"/></literal></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">count<pos:position pos:line="13" pos:column="18"/></name></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">count<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name><name pos:line="16" pos:column="14">skipped_revs<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">.<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">nr<pos:position pos:line="16" pos:column="29"/></name></name></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><name pos:line="17" pos:column="24">list<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></return></block></then></if>

	<while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><name pos:line="19" pos:column="16">list<pos:position pos:line="19" pos:column="20"/></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition> <block pos:line="19" pos:column="22">{
		<decl_stmt><decl><type><name><name pos:line="20" pos:column="17">struct<pos:position pos:line="20" pos:column="23"/></name> <name pos:line="20" pos:column="24">commit_list<pos:position pos:line="20" pos:column="35"/></name></name> <modifier pos:line="20" pos:column="36">*<pos:position pos:line="20" pos:column="37"/></modifier></type><name pos:line="20" pos:column="37">next<pos:position pos:line="20" pos:column="41"/></name> <init pos:line="20" pos:column="42">= <expr><name><name pos:line="20" pos:column="44">list<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">-&gt;<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="50">next<pos:position pos:line="20" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="20" pos:column="55"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">list<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">next<pos:position pos:line="21" pos:column="27"/></name></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="30">NULL<pos:position pos:line="21" pos:column="34"/></name></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><literal type="number" pos:line="22" pos:column="21">0<pos:position pos:line="22" pos:column="22"/></literal> <operator pos:line="22" pos:column="23">&lt;=<pos:position pos:line="22" pos:column="28"/></operator> <call><name pos:line="22" pos:column="26">sha1_array_lookup<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><operator pos:line="22" pos:column="44">&amp;<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="45">skipped_revs<pos:position pos:line="22" pos:column="57"/></name></expr></argument>,
					   <argument><expr><name><name pos:line="23" pos:column="44">list<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">-&gt;<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="50">item<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">-&gt;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="56">object<pos:position pos:line="23" pos:column="62"/></name><operator pos:line="23" pos:column="62">.<pos:position pos:line="23" pos:column="63"/></operator><name pos:line="23" pos:column="63">oid<pos:position pos:line="23" pos:column="66"/></name><operator pos:line="23" pos:column="66">.<pos:position pos:line="23" pos:column="67"/></operator><name pos:line="23" pos:column="67">hash<pos:position pos:line="23" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="73"/></condition><then pos:line="23" pos:column="73"> <block pos:line="23" pos:column="74">{
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><name pos:line="24" pos:column="29">skipped_first<pos:position pos:line="24" pos:column="42"/></name> <operator pos:line="24" pos:column="43">&amp;&amp;<pos:position pos:line="24" pos:column="53"/></operator> <operator pos:line="24" pos:column="46">!<pos:position pos:line="24" pos:column="47"/></operator><operator pos:line="24" pos:column="47">*<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="48">skipped_first<pos:position pos:line="24" pos:column="61"/></name></expr>)<pos:position pos:line="24" pos:column="62"/></condition><then pos:line="24" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="25" pos:column="33">*<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="34">skipped_first<pos:position pos:line="25" pos:column="47"/></name> <operator pos:line="25" pos:column="48">=<pos:position pos:line="25" pos:column="49"/></operator> <literal type="number" pos:line="25" pos:column="50">1<pos:position pos:line="25" pos:column="51"/></literal></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt></block></then></if>
			<comment type="block" pos:line="26" pos:column="25">/* Move current to tried list */</comment>
			<expr_stmt><expr><operator pos:line="27" pos:column="25">*<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">tried<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">=<pos:position pos:line="27" pos:column="33"/></operator> <name pos:line="27" pos:column="34">list<pos:position pos:line="27" pos:column="38"/></name></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">tried<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">=<pos:position pos:line="28" pos:column="32"/></operator> <operator pos:line="28" pos:column="33">&amp;<pos:position pos:line="28" pos:column="38"/></operator><name><name pos:line="28" pos:column="34">list<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">-&gt;<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="40">next<pos:position pos:line="28" pos:column="44"/></name></name></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></then> <else pos:line="29" pos:column="19">else <block pos:line="29" pos:column="24">{
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><operator pos:line="30" pos:column="29">!<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="30">show_all<pos:position pos:line="30" pos:column="38"/></name></expr>)<pos:position pos:line="30" pos:column="39"/></condition><then pos:line="30" pos:column="39"> <block pos:line="30" pos:column="40">{
				<if pos:line="31" pos:column="33">if <condition pos:line="31" pos:column="36">(<expr><operator pos:line="31" pos:column="37">!<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">skipped_first<pos:position pos:line="31" pos:column="51"/></name> <operator pos:line="31" pos:column="52">||<pos:position pos:line="31" pos:column="54"/></operator> <operator pos:line="31" pos:column="55">!<pos:position pos:line="31" pos:column="56"/></operator><operator pos:line="31" pos:column="56">*<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="57">skipped_first<pos:position pos:line="31" pos:column="70"/></name></expr>)<pos:position pos:line="31" pos:column="71"/></condition><then pos:line="31" pos:column="71">
					<block type="pseudo"><return pos:line="32" pos:column="41">return <expr><name pos:line="32" pos:column="48">list<pos:position pos:line="32" pos:column="52"/></name></expr>;<pos:position pos:line="32" pos:column="53"/></return></block></then></if>
			}<pos:position pos:line="33" pos:column="26"/></block></then> <elseif pos:line="33" pos:column="27">else <if pos:line="33" pos:column="32">if <condition pos:line="33" pos:column="35">(<expr><name pos:line="33" pos:column="36">skipped_first<pos:position pos:line="33" pos:column="49"/></name> <operator pos:line="33" pos:column="50">&amp;&amp;<pos:position pos:line="33" pos:column="60"/></operator> <operator pos:line="33" pos:column="53">!<pos:position pos:line="33" pos:column="54"/></operator><operator pos:line="33" pos:column="54">*<pos:position pos:line="33" pos:column="55"/></operator><name pos:line="33" pos:column="55">skipped_first<pos:position pos:line="33" pos:column="68"/></name></expr>)<pos:position pos:line="33" pos:column="69"/></condition><then pos:line="33" pos:column="69"> <block pos:line="33" pos:column="70">{
				<comment type="block" pos:line="34" pos:column="33">/* This means we know it's not skipped */</comment>
				<expr_stmt><expr><operator pos:line="35" pos:column="33">*<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">skipped_first<pos:position pos:line="35" pos:column="47"/></name> <operator pos:line="35" pos:column="48">=<pos:position pos:line="35" pos:column="49"/></operator> <operator pos:line="35" pos:column="50">-<pos:position pos:line="35" pos:column="51"/></operator><literal type="number" pos:line="35" pos:column="51">1<pos:position pos:line="35" pos:column="52"/></literal></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
			}<pos:position pos:line="36" pos:column="26"/></block></then></if></elseif></if>
			<comment type="block" pos:line="37" pos:column="25">/* Move current to filtered list */</comment>
			<expr_stmt><expr><operator pos:line="38" pos:column="25">*<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">f<pos:position pos:line="38" pos:column="27"/></name> <operator pos:line="38" pos:column="28">=<pos:position pos:line="38" pos:column="29"/></operator> <name pos:line="38" pos:column="30">list<pos:position pos:line="38" pos:column="34"/></name></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="39" pos:column="25">f<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <operator pos:line="39" pos:column="29">&amp;<pos:position pos:line="39" pos:column="34"/></operator><name><name pos:line="39" pos:column="30">list<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">-&gt;<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="36">next<pos:position pos:line="39" pos:column="40"/></name></name></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
			<if pos:line="40" pos:column="25">if <condition pos:line="40" pos:column="28">(<expr><name pos:line="40" pos:column="29">count<pos:position pos:line="40" pos:column="34"/></name></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="41" pos:column="33">(<pos:position pos:line="41" pos:column="34"/></operator><operator pos:line="41" pos:column="34">*<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="35">count<pos:position pos:line="41" pos:column="40"/></name><operator pos:line="41" pos:column="40">)<pos:position pos:line="41" pos:column="41"/></operator><operator pos:line="41" pos:column="41">++<pos:position pos:line="41" pos:column="43"/></operator></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt></block></then></if>
		}<pos:position pos:line="42" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="43" pos:column="17">list<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">=<pos:position pos:line="43" pos:column="23"/></operator> <name pos:line="43" pos:column="24">next<pos:position pos:line="43" pos:column="28"/></name></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></while>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">skipped_first<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">&amp;&amp;<pos:position pos:line="46" pos:column="37"/></operator> <operator pos:line="46" pos:column="30">*<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="31">skipped_first<pos:position pos:line="46" pos:column="44"/></name> <operator pos:line="46" pos:column="45">==<pos:position pos:line="46" pos:column="47"/></operator> <operator pos:line="46" pos:column="48">-<pos:position pos:line="46" pos:column="49"/></operator><literal type="number" pos:line="46" pos:column="49">1<pos:position pos:line="46" pos:column="50"/></literal></expr>)<pos:position pos:line="46" pos:column="51"/></condition><then pos:line="46" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="47" pos:column="17">*<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">skipped_first<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">=<pos:position pos:line="47" pos:column="33"/></operator> <literal type="number" pos:line="47" pos:column="34">0<pos:position pos:line="47" pos:column="35"/></literal></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt></block></then></if>

	<return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">filtered<pos:position pos:line="49" pos:column="24"/></name></expr>;<pos:position pos:line="49" pos:column="25"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6846_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">FORCEINLINE<pos:position pos:line="1" pos:column="19"/></name> <name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">win32munmap<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type> <name pos:line="1" pos:column="42">ptr<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">size_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">size<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list> <block pos:line="1" pos:column="60">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">MEMORY_BASIC_INFORMATION<pos:position pos:line="2" pos:column="27"/></name></type> <name pos:line="2" pos:column="28">minfo<pos:position pos:line="2" pos:column="33"/></name></decl>;<pos:position pos:line="2" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name><modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type> <name pos:line="3" pos:column="9">cptr<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><operator pos:line="3" pos:column="16">(<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">char<pos:position pos:line="3" pos:column="21"/></name><operator pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></operator><operator pos:line="3" pos:column="22">)<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">ptr<pos:position pos:line="3" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <while pos:line="4" pos:column="3">while <condition pos:line="4" pos:column="9">(<expr><name pos:line="4" pos:column="10">size<pos:position pos:line="4" pos:column="14"/></name></expr>)<pos:position pos:line="4" pos:column="15"/></condition> <block pos:line="4" pos:column="16">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">VirtualQuery<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name pos:line="5" pos:column="22">cptr<pos:position pos:line="5" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="28">&amp;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="29">minfo<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="36">sizeof<argument_list pos:line="5" pos:column="42">(<argument><expr><name pos:line="5" pos:column="43">minfo<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call> <operator pos:line="5" pos:column="51">==<pos:position pos:line="5" pos:column="53"/></operator> <literal type="number" pos:line="5" pos:column="54">0<pos:position pos:line="5" pos:column="55"/></literal></expr>)<pos:position pos:line="5" pos:column="56"/></condition><then pos:line="5" pos:column="56">
      <block type="pseudo"><return pos:line="6" pos:column="7">return <expr><operator pos:line="6" pos:column="14">-<pos:position pos:line="6" pos:column="15"/></operator><literal type="number" pos:line="6" pos:column="15">1<pos:position pos:line="6" pos:column="16"/></literal></expr>;<pos:position pos:line="6" pos:column="17"/></return></block></then></if>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">minfo<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">.<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">BaseAddress<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">!=<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="30">cptr<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">||<pos:position pos:line="7" pos:column="37"/></operator> <name><name pos:line="7" pos:column="38">minfo<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">.<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="44">AllocationBase<pos:position pos:line="7" pos:column="58"/></name></name> <operator pos:line="7" pos:column="59">!=<pos:position pos:line="7" pos:column="61"/></operator> <name pos:line="7" pos:column="62">cptr<pos:position pos:line="7" pos:column="66"/></name> <operator pos:line="7" pos:column="67">||<pos:position pos:line="7" pos:column="69"/></operator>
	<name><name pos:line="8" pos:column="9">minfo<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">State<pos:position pos:line="8" pos:column="20"/></name></name> <operator pos:line="8" pos:column="21">!=<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">MEM_COMMIT<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">||<pos:position pos:line="8" pos:column="37"/></operator> <name><name pos:line="8" pos:column="38">minfo<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">.<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">RegionSize<pos:position pos:line="8" pos:column="54"/></name></name> <operator pos:line="8" pos:column="55">&gt;<pos:position pos:line="8" pos:column="59"/></operator> <name pos:line="8" pos:column="57">size<pos:position pos:line="8" pos:column="61"/></name></expr>)<pos:position pos:line="8" pos:column="62"/></condition><then pos:line="8" pos:column="62">
      <block type="pseudo"><return pos:line="9" pos:column="7">return <expr><operator pos:line="9" pos:column="14">-<pos:position pos:line="9" pos:column="15"/></operator><literal type="number" pos:line="9" pos:column="15">1<pos:position pos:line="9" pos:column="16"/></literal></expr>;<pos:position pos:line="9" pos:column="17"/></return></block></then></if>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">VirtualFree<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">cptr<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="27">0<pos:position pos:line="10" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="30">MEM_RELEASE<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call> <operator pos:line="10" pos:column="43">==<pos:position pos:line="10" pos:column="45"/></operator> <literal type="number" pos:line="10" pos:column="46">0<pos:position pos:line="10" pos:column="47"/></literal></expr>)<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48">
      <block type="pseudo"><return pos:line="11" pos:column="7">return <expr><operator pos:line="11" pos:column="14">-<pos:position pos:line="11" pos:column="15"/></operator><literal type="number" pos:line="11" pos:column="15">1<pos:position pos:line="11" pos:column="16"/></literal></expr>;<pos:position pos:line="11" pos:column="17"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="12" pos:column="5">cptr<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">+=<pos:position pos:line="12" pos:column="12"/></operator> <name><name pos:line="12" pos:column="13">minfo<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">RegionSize<pos:position pos:line="12" pos:column="29"/></name></name></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">size<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">-=<pos:position pos:line="13" pos:column="12"/></operator> <name><name pos:line="13" pos:column="13">minfo<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">.<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">RegionSize<pos:position pos:line="13" pos:column="29"/></name></name></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></while>
  <return pos:line="15" pos:column="3">return <expr><literal type="number" pos:line="15" pos:column="10">0<pos:position pos:line="15" pos:column="11"/></literal></expr>;<pos:position pos:line="15" pos:column="12"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3506_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">display_table<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">string_list<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">list<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="2" pos:column="27">unsigned<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">colopts<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>,
			  <parameter><decl><type><specifier pos:line="3" pos:column="27">const<pos:position pos:line="3" pos:column="32"/></specifier> <name><name pos:line="3" pos:column="33">struct<pos:position pos:line="3" pos:column="39"/></name> <name pos:line="3" pos:column="40">column_options<pos:position pos:line="3" pos:column="54"/></name></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">opts<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="61"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">column_data<pos:position pos:line="5" pos:column="27"/></name></name></type> <name pos:line="5" pos:column="28">data<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">x<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">y<pos:position pos:line="6" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="19">i<pos:position pos:line="6" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="22">initial_width<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">empty_cell<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">memset<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><operator pos:line="9" pos:column="16">&amp;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="17">data<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="26">sizeof<argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">data<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">data<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">.<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">list<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">list<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">data<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">.<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">colopts<pos:position pos:line="11" pos:column="21"/></name></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">colopts<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">data<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">.<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">opts<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <operator pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">opts<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">ALLOC_ARRAY<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name><name pos:line="14" pos:column="21">data<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">.<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">len<pos:position pos:line="14" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="31">list<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">nr<pos:position pos:line="14" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></init> <condition><expr><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <name><name pos:line="15" pos:column="25">list<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">nr<pos:position pos:line="15" pos:column="33"/></name></name></expr>;<pos:position pos:line="15" pos:column="34"/></condition> <incr><expr><name pos:line="15" pos:column="35">i<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">++<pos:position pos:line="15" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="39"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="17">data<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">.<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">len<pos:position pos:line="16" pos:column="25"/></name><index pos:line="16" pos:column="25">[<expr><name pos:line="16" pos:column="26">i<pos:position pos:line="16" pos:column="27"/></name></expr>]<pos:position pos:line="16" pos:column="28"/></index></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <call><name pos:line="16" pos:column="31">item_length<pos:position pos:line="16" pos:column="42"/></name><argument_list pos:line="16" pos:column="42">(<argument><expr><name pos:line="16" pos:column="43">colopts<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="52">list<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">-&gt;<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="58">items<pos:position pos:line="16" pos:column="63"/></name><index pos:line="16" pos:column="63">[<expr><name pos:line="16" pos:column="64">i<pos:position pos:line="16" pos:column="65"/></name></expr>]<pos:position pos:line="16" pos:column="66"/></index></name><operator pos:line="16" pos:column="66">.<pos:position pos:line="16" pos:column="67"/></operator><name pos:line="16" pos:column="67">string<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="75"/></expr_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">layout<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><operator pos:line="18" pos:column="16">&amp;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="17">data<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="23">&amp;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="24">initial_width<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">colopts<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">&amp;<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="23">COL_DENSE<pos:position pos:line="20" pos:column="32"/></name></expr>)<pos:position pos:line="20" pos:column="33"/></condition><then pos:line="20" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">shrink_columns<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><operator pos:line="21" pos:column="32">&amp;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="33">data<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">empty_cell<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <call><name pos:line="23" pos:column="22">xmallocz<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">initial_width<pos:position pos:line="23" pos:column="44"/></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">memset<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">empty_cell<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="28">' '<pos:position pos:line="24" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="33">initial_width<pos:position pos:line="24" pos:column="46"/></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt>
	<for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><expr><name pos:line="25" pos:column="14">y<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></init> <condition><expr><name pos:line="25" pos:column="21">y<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">&lt;<pos:position pos:line="25" pos:column="27"/></operator> <name><name pos:line="25" pos:column="25">data<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">.<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">rows<pos:position pos:line="25" pos:column="34"/></name></name></expr>;<pos:position pos:line="25" pos:column="35"/></condition> <incr><expr><name pos:line="25" pos:column="36">y<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">++<pos:position pos:line="25" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="40"/></control> <block pos:line="25" pos:column="41">{
		<for pos:line="26" pos:column="17">for <control pos:line="26" pos:column="21">(<init><expr><name pos:line="26" pos:column="22">x<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <literal type="number" pos:line="26" pos:column="26">0<pos:position pos:line="26" pos:column="27"/></literal></expr>;<pos:position pos:line="26" pos:column="28"/></init> <condition><expr><name pos:line="26" pos:column="29">x<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">&lt;<pos:position pos:line="26" pos:column="35"/></operator> <name><name pos:line="26" pos:column="33">data<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">.<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">cols<pos:position pos:line="26" pos:column="42"/></name></name></expr>;<pos:position pos:line="26" pos:column="43"/></condition> <incr><expr><name pos:line="26" pos:column="44">x<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">++<pos:position pos:line="26" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="48"/></control>
			<block type="pseudo"><if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><call><name pos:line="27" pos:column="29">display_cell<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><operator pos:line="27" pos:column="42">&amp;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="43">data<pos:position pos:line="27" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="49">initial_width<pos:position pos:line="27" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="64">empty_cell<pos:position pos:line="27" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="76">x<pos:position pos:line="27" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="79">y<pos:position pos:line="27" pos:column="80"/></name></expr></argument>)<pos:position pos:line="27" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="82"/></condition><then pos:line="27" pos:column="82">
				<block type="pseudo"><break pos:line="28" pos:column="33">break;<pos:position pos:line="28" pos:column="39"/></break></block></then></if></block></for>
	}<pos:position pos:line="29" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">free<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name><name pos:line="31" pos:column="14">data<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">.<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">len<pos:position pos:line="31" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">free<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><name><name pos:line="32" pos:column="14">data<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">.<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="19">width<pos:position pos:line="32" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">free<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><name pos:line="33" pos:column="14">empty_cell<pos:position pos:line="33" pos:column="24"/></name></expr></argument>)<pos:position pos:line="33" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

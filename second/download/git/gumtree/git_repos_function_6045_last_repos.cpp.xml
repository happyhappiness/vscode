<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6045_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">update_one<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">path<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">verify_path<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">(<argument><expr><name pos:line="3" pos:column="26">path<pos:position pos:line="3" pos:column="30"/></name></expr></argument>)<pos:position pos:line="3" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="32"/></condition><then pos:line="3" pos:column="32"> <block pos:line="3" pos:column="33">{
		<expr_stmt><expr><call><name pos:line="4" pos:column="17">fprintf<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">stderr<pos:position pos:line="4" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="33">"Ignoring path %s\n"<pos:position pos:line="4" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="55">path<pos:position pos:line="4" pos:column="59"/></name></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="61"/></expr_stmt>
		<return pos:line="5" pos:column="17">return;<pos:position pos:line="5" pos:column="24"/></return>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">mark_valid_only<pos:position pos:line="7" pos:column="28"/></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29"> <block pos:line="7" pos:column="30">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><call><name pos:line="8" pos:column="21">mark_ce_flags<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">path<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="41">CE_VALID<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">mark_valid_only<pos:position pos:line="8" pos:column="66"/></name> <operator pos:line="8" pos:column="67">==<pos:position pos:line="8" pos:column="69"/></operator> <name pos:line="8" pos:column="70">MARK_FLAG<pos:position pos:line="8" pos:column="79"/></name></expr></argument>)<pos:position pos:line="8" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="81"/></condition><then pos:line="8" pos:column="81">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="25">die<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><literal type="string" pos:line="9" pos:column="29">"Unable to mark file %s"<pos:position pos:line="9" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="55">path<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt></block></then></if>
		<return pos:line="10" pos:column="17">return;<pos:position pos:line="10" pos:column="24"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">mark_skip_worktree_only<pos:position pos:line="12" pos:column="36"/></name></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37"> <block pos:line="12" pos:column="38">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><call><name pos:line="13" pos:column="21">mark_ce_flags<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">path<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="41">CE_SKIP_WORKTREE<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="59">mark_skip_worktree_only<pos:position pos:line="13" pos:column="82"/></name> <operator pos:line="13" pos:column="83">==<pos:position pos:line="13" pos:column="85"/></operator> <name pos:line="13" pos:column="86">MARK_FLAG<pos:position pos:line="13" pos:column="95"/></name></expr></argument>)<pos:position pos:line="13" pos:column="96"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="97"/></condition><then pos:line="13" pos:column="97">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="25">die<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><literal type="string" pos:line="14" pos:column="29">"Unable to mark file %s"<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="55">path<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt></block></then></if>
		<return pos:line="15" pos:column="17">return;<pos:position pos:line="15" pos:column="24"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">force_remove<pos:position pos:line="18" pos:column="25"/></name></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26"> <block pos:line="18" pos:column="27">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><call><name pos:line="19" pos:column="21">remove_file_from_cache<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">path<pos:position pos:line="19" pos:column="48"/></name></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="50"/></condition><then pos:line="19" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">die<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><literal type="string" pos:line="20" pos:column="29">"git update-index: unable to remove %s"<pos:position pos:line="20" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="70">path<pos:position pos:line="20" pos:column="74"/></name></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="76"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">report<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><literal type="string" pos:line="21" pos:column="24">"remove '%s'"<pos:position pos:line="21" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">path<pos:position pos:line="21" pos:column="43"/></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
		<return pos:line="22" pos:column="17">return;<pos:position pos:line="22" pos:column="24"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">process_path<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">path<pos:position pos:line="24" pos:column="30"/></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="32"/></condition><then pos:line="24" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">die<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><literal type="string" pos:line="25" pos:column="21">"Unable to process path %s"<pos:position pos:line="25" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">path<pos:position pos:line="25" pos:column="54"/></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="56"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">report<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><literal type="string" pos:line="26" pos:column="16">"add '%s'"<pos:position pos:line="26" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="28">path<pos:position pos:line="26" pos:column="32"/></name></expr></argument>)<pos:position pos:line="26" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

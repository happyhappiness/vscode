<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_300_git-2.5.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_index_entry_with_check<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">index_state<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">istate<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="67">struct<pos:position pos:line="1" pos:column="73"/></name> <name pos:line="1" pos:column="74">cache_entry<pos:position pos:line="1" pos:column="85"/></name></name> <modifier pos:line="1" pos:column="86">*<pos:position pos:line="1" pos:column="87"/></modifier></type><name pos:line="1" pos:column="87">ce<pos:position pos:line="1" pos:column="89"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="91">int<pos:position pos:line="1" pos:column="94"/></name></type> <name pos:line="1" pos:column="95">option<pos:position pos:line="1" pos:column="101"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="102"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">pos<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ok_to_add<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">option<pos:position pos:line="4" pos:column="31"/></name> <operator pos:line="4" pos:column="32">&amp;<pos:position pos:line="4" pos:column="37"/></operator> <name pos:line="4" pos:column="34">ADD_CACHE_OK_TO_ADD<pos:position pos:line="4" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">ok_to_replace<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">option<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">&amp;<pos:position pos:line="5" pos:column="41"/></operator> <name pos:line="5" pos:column="38">ADD_CACHE_OK_TO_REPLACE<pos:position pos:line="5" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">skip_df_check<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">option<pos:position pos:line="6" pos:column="35"/></name> <operator pos:line="6" pos:column="36">&amp;<pos:position pos:line="6" pos:column="41"/></operator> <name pos:line="6" pos:column="38">ADD_CACHE_SKIP_DFCHECK<pos:position pos:line="6" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">new_only<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><name pos:line="7" pos:column="24">option<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">&amp;<pos:position pos:line="7" pos:column="36"/></operator> <name pos:line="7" pos:column="33">ADD_CACHE_NEW_ONLY<pos:position pos:line="7" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><operator pos:line="9" pos:column="14">(<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">option<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">&amp;<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="24">ADD_CACHE_KEEP_CACHE_TREE<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">)<pos:position pos:line="9" pos:column="50"/></operator></expr>)<pos:position pos:line="9" pos:column="51"/></condition><then pos:line="9" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">cache_tree_invalidate_path<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">istate<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="52">ce<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">-&gt;<pos:position pos:line="10" pos:column="59"/></operator><name pos:line="10" pos:column="56">name<pos:position pos:line="10" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="11" pos:column="9">pos<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <call><name pos:line="11" pos:column="15">index_name_stage_pos<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">istate<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="44">ce<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="48">name<pos:position pos:line="11" pos:column="52"/></name></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="54">ce_namelen<pos:position pos:line="11" pos:column="64"/></name><argument_list pos:line="11" pos:column="64">(<argument><expr><name pos:line="11" pos:column="65">ce<pos:position pos:line="11" pos:column="67"/></name></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="70">ce_stage<pos:position pos:line="11" pos:column="78"/></name><argument_list pos:line="11" pos:column="78">(<argument><expr><name pos:line="11" pos:column="79">ce<pos:position pos:line="11" pos:column="81"/></name></expr></argument>)<pos:position pos:line="11" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="84"/></expr_stmt>

	<comment type="block" pos:line="13" pos:column="9">/* existing match? Just replace it. */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">pos<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&gt;=<pos:position pos:line="14" pos:column="22"/></operator> <literal type="number" pos:line="14" pos:column="20">0<pos:position pos:line="14" pos:column="21"/></literal></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22"> <block pos:line="14" pos:column="23">{
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">new_only<pos:position pos:line="15" pos:column="30"/></name></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">replace_index_entry<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><name pos:line="16" pos:column="45">istate<pos:position pos:line="16" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="53">pos<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="58">ce<pos:position pos:line="16" pos:column="60"/></name></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt></block></then></if>
		<return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="19" pos:column="9">pos<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <operator pos:line="19" pos:column="15">-<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">pos<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-<pos:position pos:line="19" pos:column="20"/></operator><literal type="number" pos:line="19" pos:column="20">1<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><operator pos:line="21" pos:column="14">(<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">option<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">&amp;<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="24">ADD_CACHE_KEEP_CACHE_TREE<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">)<pos:position pos:line="21" pos:column="50"/></operator></expr>)<pos:position pos:line="21" pos:column="51"/></condition><then pos:line="21" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">untracked_cache_add_to_index<pos:position pos:line="22" pos:column="45"/></name><argument_list pos:line="22" pos:column="45">(<argument><expr><name pos:line="22" pos:column="46">istate<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="54">ce<pos:position pos:line="22" pos:column="56"/></name><operator pos:line="22" pos:column="56">-&gt;<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="58">name<pos:position pos:line="22" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="64"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="24" pos:column="9">/*
	 * Inserting a merged entry ("stage 0") into the index
	 * will always replace all non-merged entries..
	 */</comment>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">pos<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">&lt;<pos:position pos:line="28" pos:column="21"/></operator> <name><name pos:line="28" pos:column="19">istate<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">-&gt;<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="27">cache_nr<pos:position pos:line="28" pos:column="35"/></name></name> <operator pos:line="28" pos:column="36">&amp;&amp;<pos:position pos:line="28" pos:column="46"/></operator> <call><name pos:line="28" pos:column="39">ce_stage<pos:position pos:line="28" pos:column="47"/></name><argument_list pos:line="28" pos:column="47">(<argument><expr><name pos:line="28" pos:column="48">ce<pos:position pos:line="28" pos:column="50"/></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call> <operator pos:line="28" pos:column="52">==<pos:position pos:line="28" pos:column="54"/></operator> <literal type="number" pos:line="28" pos:column="55">0<pos:position pos:line="28" pos:column="56"/></literal></expr>)<pos:position pos:line="28" pos:column="57"/></condition><then pos:line="28" pos:column="57"> <block pos:line="28" pos:column="58">{
		<while pos:line="29" pos:column="17">while <condition pos:line="29" pos:column="23">(<expr><call><name pos:line="29" pos:column="24">ce_same_name<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name><name pos:line="29" pos:column="37">istate<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">-&gt;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="45">cache<pos:position pos:line="29" pos:column="50"/></name><index pos:line="29" pos:column="50">[<expr><name pos:line="29" pos:column="51">pos<pos:position pos:line="29" pos:column="54"/></name></expr>]<pos:position pos:line="29" pos:column="55"/></index></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="57">ce<pos:position pos:line="29" pos:column="59"/></name></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="61"/></condition> <block pos:line="29" pos:column="62">{
			<expr_stmt><expr><name pos:line="30" pos:column="25">ok_to_add<pos:position pos:line="30" pos:column="34"/></name> <operator pos:line="30" pos:column="35">=<pos:position pos:line="30" pos:column="36"/></operator> <literal type="number" pos:line="30" pos:column="37">1<pos:position pos:line="30" pos:column="38"/></literal></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><operator pos:line="31" pos:column="29">!<pos:position pos:line="31" pos:column="30"/></operator><call><name pos:line="31" pos:column="30">remove_index_entry_at<pos:position pos:line="31" pos:column="51"/></name><argument_list pos:line="31" pos:column="51">(<argument><expr><name pos:line="31" pos:column="52">istate<pos:position pos:line="31" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="60">pos<pos:position pos:line="31" pos:column="63"/></name></expr></argument>)<pos:position pos:line="31" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="65"/></condition><then pos:line="31" pos:column="65">
				<block type="pseudo"><break pos:line="32" pos:column="33">break;<pos:position pos:line="32" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="33" pos:column="18"/></block></while>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">ok_to_add<pos:position pos:line="36" pos:column="23"/></name></expr>)<pos:position pos:line="36" pos:column="24"/></condition><then pos:line="36" pos:column="24">
		<block type="pseudo"><return pos:line="37" pos:column="17">return <expr><operator pos:line="37" pos:column="24">-<pos:position pos:line="37" pos:column="25"/></operator><literal type="number" pos:line="37" pos:column="25">1<pos:position pos:line="37" pos:column="26"/></literal></expr>;<pos:position pos:line="37" pos:column="27"/></return></block></then></if>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><call><name pos:line="38" pos:column="14">verify_path<pos:position pos:line="38" pos:column="25"/></name><argument_list pos:line="38" pos:column="25">(<argument><expr><name><name pos:line="38" pos:column="26">ce<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">-&gt;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="30">name<pos:position pos:line="38" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="36"/></condition><then pos:line="38" pos:column="36">
		<block type="pseudo"><return pos:line="39" pos:column="17">return <expr><call><name pos:line="39" pos:column="24">error<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><literal type="string" pos:line="39" pos:column="30">"Invalid path '%s'"<pos:position pos:line="39" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="51">ce<pos:position pos:line="39" pos:column="53"/></name><operator pos:line="39" pos:column="53">-&gt;<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="55">name<pos:position pos:line="39" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="61"/></return></block></then></if>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">skip_df_check<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">&amp;&amp;<pos:position pos:line="41" pos:column="38"/></operator>
	    <call><name pos:line="42" pos:column="13">check_file_directory_conflict<pos:position pos:line="42" pos:column="42"/></name><argument_list pos:line="42" pos:column="42">(<argument><expr><name pos:line="42" pos:column="43">istate<pos:position pos:line="42" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="51">ce<pos:position pos:line="42" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="55">pos<pos:position pos:line="42" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="60">ok_to_replace<pos:position pos:line="42" pos:column="73"/></name></expr></argument>)<pos:position pos:line="42" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="75"/></condition><then pos:line="42" pos:column="75"> <block pos:line="42" pos:column="76">{
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">!<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">ok_to_replace<pos:position pos:line="43" pos:column="35"/></name></expr>)<pos:position pos:line="43" pos:column="36"/></condition><then pos:line="43" pos:column="36">
			<block type="pseudo"><return pos:line="44" pos:column="25">return <expr><call><name pos:line="44" pos:column="32">error<pos:position pos:line="44" pos:column="37"/></name><argument_list pos:line="44" pos:column="37">(<argument><expr><literal type="string" pos:line="44" pos:column="38">"'%s' appears as both a file and as a directory"<pos:position pos:line="44" pos:column="86"/></literal></expr></argument>,
				     <argument><expr><name><name pos:line="45" pos:column="38">ce<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">-&gt;<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="42">name<pos:position pos:line="45" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="48"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="46" pos:column="17">pos<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <call><name pos:line="46" pos:column="23">index_name_stage_pos<pos:position pos:line="46" pos:column="43"/></name><argument_list pos:line="46" pos:column="43">(<argument><expr><name pos:line="46" pos:column="44">istate<pos:position pos:line="46" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="52">ce<pos:position pos:line="46" pos:column="54"/></name><operator pos:line="46" pos:column="54">-&gt;<pos:position pos:line="46" pos:column="59"/></operator><name pos:line="46" pos:column="56">name<pos:position pos:line="46" pos:column="60"/></name></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="62">ce_namelen<pos:position pos:line="46" pos:column="72"/></name><argument_list pos:line="46" pos:column="72">(<argument><expr><name pos:line="46" pos:column="73">ce<pos:position pos:line="46" pos:column="75"/></name></expr></argument>)<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="78">ce_stage<pos:position pos:line="46" pos:column="86"/></name><argument_list pos:line="46" pos:column="86">(<argument><expr><name pos:line="46" pos:column="87">ce<pos:position pos:line="46" pos:column="89"/></name></expr></argument>)<pos:position pos:line="46" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="92"/></expr_stmt>
		<expr_stmt><expr><name pos:line="47" pos:column="17">pos<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <operator pos:line="47" pos:column="23">-<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="24">pos<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">-<pos:position pos:line="47" pos:column="28"/></operator><literal type="number" pos:line="47" pos:column="28">1<pos:position pos:line="47" pos:column="29"/></literal></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>
	<return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">pos<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">+<pos:position pos:line="49" pos:column="21"/></operator> <literal type="number" pos:line="49" pos:column="22">1<pos:position pos:line="49" pos:column="23"/></literal></expr>;<pos:position pos:line="49" pos:column="24"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

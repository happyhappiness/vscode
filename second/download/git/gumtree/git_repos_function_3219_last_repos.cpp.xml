<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3219_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">traverse_trees_recursive<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">int<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">n<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">unsigned<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">long<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">dirmask<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
				    <parameter><decl><type><name pos:line="2" pos:column="37">unsigned<pos:position pos:line="2" pos:column="45"/></name> <name pos:line="2" pos:column="46">long<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">df_conflicts<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="3" pos:column="37">struct<pos:position pos:line="3" pos:column="43"/></name> <name pos:line="3" pos:column="44">name_entry<pos:position pos:line="3" pos:column="54"/></name></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">names<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="4" pos:column="37">struct<pos:position pos:line="4" pos:column="43"/></name> <name pos:line="4" pos:column="44">traverse_info<pos:position pos:line="4" pos:column="57"/></name></name> <modifier pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></modifier></type><name pos:line="4" pos:column="59">info<pos:position pos:line="4" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="64"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">ret<pos:position pos:line="6" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="21">bottom<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">nr_buf<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">tree_desc<pos:position pos:line="8" pos:column="25"/></name></name></type> <name><name pos:line="8" pos:column="26">t<pos:position pos:line="8" pos:column="27"/></name><index pos:line="8" pos:column="27">[<expr><name pos:line="8" pos:column="28">MAX_UNPACK_TREES<pos:position pos:line="8" pos:column="44"/></name></expr>]<pos:position pos:line="8" pos:column="45"/></index></name></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">void<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name><name pos:line="9" pos:column="15">buf<pos:position pos:line="9" pos:column="18"/></name><index pos:line="9" pos:column="18">[<expr><name pos:line="9" pos:column="19">MAX_UNPACK_TREES<pos:position pos:line="9" pos:column="35"/></name></expr>]<pos:position pos:line="9" pos:column="36"/></index></name></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">traverse_info<pos:position pos:line="10" pos:column="29"/></name></name></type> <name pos:line="10" pos:column="30">newinfo<pos:position pos:line="10" pos:column="37"/></name></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">name_entry<pos:position pos:line="11" pos:column="26"/></name></name> <modifier pos:line="11" pos:column="27">*<pos:position pos:line="11" pos:column="28"/></modifier></type><name pos:line="11" pos:column="28">p<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">p<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">names<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
	<while pos:line="14" pos:column="9">while <condition pos:line="14" pos:column="15">(<expr><operator pos:line="14" pos:column="16">!<pos:position pos:line="14" pos:column="17"/></operator><name><name pos:line="14" pos:column="17">p<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">mode<pos:position pos:line="14" pos:column="24"/></name></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">p<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">++<pos:position pos:line="15" pos:column="20"/></operator></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt></block></while>

	<expr_stmt><expr><name pos:line="17" pos:column="9">newinfo<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <operator pos:line="17" pos:column="19">*<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">info<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">newinfo<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">.<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">prev<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">info<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">newinfo<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">pathspec<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <name><name pos:line="19" pos:column="28">info<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">pathspec<pos:position pos:line="19" pos:column="42"/></name></name></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">newinfo<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">.<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">name<pos:position pos:line="20" pos:column="21"/></name></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <operator pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">p<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">newinfo<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">.<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">pathlen<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">+=<pos:position pos:line="21" pos:column="27"/></operator> <call><name pos:line="21" pos:column="28">tree_entry_len<pos:position pos:line="21" pos:column="42"/></name><argument_list pos:line="21" pos:column="42">(<argument><expr><name pos:line="21" pos:column="43">p<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call> <operator pos:line="21" pos:column="46">+<pos:position pos:line="21" pos:column="47"/></operator> <literal type="number" pos:line="21" pos:column="48">1<pos:position pos:line="21" pos:column="49"/></literal></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">newinfo<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">.<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">df_conflicts<pos:position pos:line="22" pos:column="29"/></name></name> <operator pos:line="22" pos:column="30">|=<pos:position pos:line="22" pos:column="32"/></operator> <name pos:line="22" pos:column="33">df_conflicts<pos:position pos:line="22" pos:column="45"/></name></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>

	<comment type="block" pos:line="24" pos:column="9">/*
	 * Fetch the tree from the ODB for each peer directory in the
	 * n commits.
	 *
	 * For 2- and 3-way traversals, we try to avoid hitting the
	 * ODB twice for the same OID.  This should yield a nice speed
	 * up in checkouts and merges when the commits are similar.
	 *
	 * We don't bother doing the full O(n^2) search for larger n,
	 * because wider traversals don't happen that often and we
	 * avoid the search setup.
	 *
	 * When 2 peer OIDs are the same, we just copy the tree
	 * descriptor data.  This implicitly borrows the buffer
	 * data from the earlier cell.
	 */</comment>
	<for pos:line="40" pos:column="9">for <control pos:line="40" pos:column="13">(<init><expr><name pos:line="40" pos:column="14">i<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <literal type="number" pos:line="40" pos:column="18">0<pos:position pos:line="40" pos:column="19"/></literal></expr>;<pos:position pos:line="40" pos:column="20"/></init> <condition><expr><name pos:line="40" pos:column="21">i<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">&lt;<pos:position pos:line="40" pos:column="27"/></operator> <name pos:line="40" pos:column="25">n<pos:position pos:line="40" pos:column="26"/></name></expr>;<pos:position pos:line="40" pos:column="27"/></condition> <incr><expr><name pos:line="40" pos:column="28">i<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">++<pos:position pos:line="40" pos:column="31"/></operator></expr><operator pos:line="40" pos:column="31">,<pos:position pos:line="40" pos:column="32"/></operator> <expr><name pos:line="40" pos:column="33">dirmask<pos:position pos:line="40" pos:column="40"/></name> <operator pos:line="40" pos:column="41">&gt;&gt;=<pos:position pos:line="40" pos:column="50"/></operator> <literal type="number" pos:line="40" pos:column="45">1<pos:position pos:line="40" pos:column="46"/></literal></expr></incr>)<pos:position pos:line="40" pos:column="47"/></control> <block pos:line="40" pos:column="48">{
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">i<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">&gt;<pos:position pos:line="41" pos:column="27"/></operator> <literal type="number" pos:line="41" pos:column="25">0<pos:position pos:line="41" pos:column="26"/></literal> <operator pos:line="41" pos:column="27">&amp;&amp;<pos:position pos:line="41" pos:column="37"/></operator> <call><name pos:line="41" pos:column="30">are_same_oid<pos:position pos:line="41" pos:column="42"/></name><argument_list pos:line="41" pos:column="42">(<argument><expr><operator pos:line="41" pos:column="43">&amp;<pos:position pos:line="41" pos:column="48"/></operator><name><name pos:line="41" pos:column="44">names<pos:position pos:line="41" pos:column="49"/></name><index pos:line="41" pos:column="49">[<expr><name pos:line="41" pos:column="50">i<pos:position pos:line="41" pos:column="51"/></name></expr>]<pos:position pos:line="41" pos:column="52"/></index></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="54">&amp;<pos:position pos:line="41" pos:column="59"/></operator><name><name pos:line="41" pos:column="55">names<pos:position pos:line="41" pos:column="60"/></name><index pos:line="41" pos:column="60">[<expr><name pos:line="41" pos:column="61">i<pos:position pos:line="41" pos:column="62"/></name> <operator pos:line="41" pos:column="63">-<pos:position pos:line="41" pos:column="64"/></operator> <literal type="number" pos:line="41" pos:column="65">1<pos:position pos:line="41" pos:column="66"/></literal></expr>]<pos:position pos:line="41" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="69"/></condition><then pos:line="41" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="25">t<pos:position pos:line="42" pos:column="26"/></name><index pos:line="42" pos:column="26">[<expr><name pos:line="42" pos:column="27">i<pos:position pos:line="42" pos:column="28"/></name></expr>]<pos:position pos:line="42" pos:column="29"/></index></name> <operator pos:line="42" pos:column="30">=<pos:position pos:line="42" pos:column="31"/></operator> <name><name pos:line="42" pos:column="32">t<pos:position pos:line="42" pos:column="33"/></name><index pos:line="42" pos:column="33">[<expr><name pos:line="42" pos:column="34">i<pos:position pos:line="42" pos:column="35"/></name> <operator pos:line="42" pos:column="36">-<pos:position pos:line="42" pos:column="37"/></operator> <literal type="number" pos:line="42" pos:column="38">1<pos:position pos:line="42" pos:column="39"/></literal></expr>]<pos:position pos:line="42" pos:column="40"/></index></name></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt></block></then>
		<elseif pos:line="43" pos:column="17">else <if pos:line="43" pos:column="22">if <condition pos:line="43" pos:column="25">(<expr><name pos:line="43" pos:column="26">i<pos:position pos:line="43" pos:column="27"/></name> <operator pos:line="43" pos:column="28">&gt;<pos:position pos:line="43" pos:column="32"/></operator> <literal type="number" pos:line="43" pos:column="30">1<pos:position pos:line="43" pos:column="31"/></literal> <operator pos:line="43" pos:column="32">&amp;&amp;<pos:position pos:line="43" pos:column="42"/></operator> <call><name pos:line="43" pos:column="35">are_same_oid<pos:position pos:line="43" pos:column="47"/></name><argument_list pos:line="43" pos:column="47">(<argument><expr><operator pos:line="43" pos:column="48">&amp;<pos:position pos:line="43" pos:column="53"/></operator><name><name pos:line="43" pos:column="49">names<pos:position pos:line="43" pos:column="54"/></name><index pos:line="43" pos:column="54">[<expr><name pos:line="43" pos:column="55">i<pos:position pos:line="43" pos:column="56"/></name></expr>]<pos:position pos:line="43" pos:column="57"/></index></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="59">&amp;<pos:position pos:line="43" pos:column="64"/></operator><name><name pos:line="43" pos:column="60">names<pos:position pos:line="43" pos:column="65"/></name><index pos:line="43" pos:column="65">[<expr><name pos:line="43" pos:column="66">i<pos:position pos:line="43" pos:column="67"/></name> <operator pos:line="43" pos:column="68">-<pos:position pos:line="43" pos:column="69"/></operator> <literal type="number" pos:line="43" pos:column="70">2<pos:position pos:line="43" pos:column="71"/></literal></expr>]<pos:position pos:line="43" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="74"/></condition><then pos:line="43" pos:column="74">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="25">t<pos:position pos:line="44" pos:column="26"/></name><index pos:line="44" pos:column="26">[<expr><name pos:line="44" pos:column="27">i<pos:position pos:line="44" pos:column="28"/></name></expr>]<pos:position pos:line="44" pos:column="29"/></index></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <name><name pos:line="44" pos:column="32">t<pos:position pos:line="44" pos:column="33"/></name><index pos:line="44" pos:column="33">[<expr><name pos:line="44" pos:column="34">i<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">-<pos:position pos:line="44" pos:column="37"/></operator> <literal type="number" pos:line="44" pos:column="38">2<pos:position pos:line="44" pos:column="39"/></literal></expr>]<pos:position pos:line="44" pos:column="40"/></index></name></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt></block></then></if></elseif>
		<else pos:line="45" pos:column="17">else <block pos:line="45" pos:column="22">{
			<decl_stmt><decl><type><specifier pos:line="46" pos:column="25">const<pos:position pos:line="46" pos:column="30"/></specifier> <name pos:line="46" pos:column="31">unsigned<pos:position pos:line="46" pos:column="39"/></name> <name pos:line="46" pos:column="40">char<pos:position pos:line="46" pos:column="44"/></name> <modifier pos:line="46" pos:column="45">*<pos:position pos:line="46" pos:column="46"/></modifier></type><name pos:line="46" pos:column="46">sha1<pos:position pos:line="46" pos:column="50"/></name> <init pos:line="46" pos:column="51">= <expr><name pos:line="46" pos:column="53">NULL<pos:position pos:line="46" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="46" pos:column="58"/></decl_stmt>
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><name pos:line="47" pos:column="29">dirmask<pos:position pos:line="47" pos:column="36"/></name> <operator pos:line="47" pos:column="37">&amp;<pos:position pos:line="47" pos:column="42"/></operator> <literal type="number" pos:line="47" pos:column="39">1<pos:position pos:line="47" pos:column="40"/></literal></expr>)<pos:position pos:line="47" pos:column="41"/></condition><then pos:line="47" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="33">sha1<pos:position pos:line="48" pos:column="37"/></name> <operator pos:line="48" pos:column="38">=<pos:position pos:line="48" pos:column="39"/></operator> <name><name pos:line="48" pos:column="40">names<pos:position pos:line="48" pos:column="45"/></name><index pos:line="48" pos:column="45">[<expr><name pos:line="48" pos:column="46">i<pos:position pos:line="48" pos:column="47"/></name></expr>]<pos:position pos:line="48" pos:column="48"/></index></name><operator pos:line="48" pos:column="48">.<pos:position pos:line="48" pos:column="49"/></operator><name><name pos:line="48" pos:column="49">oid<pos:position pos:line="48" pos:column="52"/></name><operator pos:line="48" pos:column="52">-&gt;<pos:position pos:line="48" pos:column="57"/></operator><name pos:line="48" pos:column="54">hash<pos:position pos:line="48" pos:column="58"/></name></name></expr>;<pos:position pos:line="48" pos:column="59"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="49" pos:column="25">buf<pos:position pos:line="49" pos:column="28"/></name><index pos:line="49" pos:column="28">[<expr><name pos:line="49" pos:column="29">nr_buf<pos:position pos:line="49" pos:column="35"/></name><operator pos:line="49" pos:column="35">++<pos:position pos:line="49" pos:column="37"/></operator></expr>]<pos:position pos:line="49" pos:column="38"/></index></name> <operator pos:line="49" pos:column="39">=<pos:position pos:line="49" pos:column="40"/></operator> <call><name pos:line="49" pos:column="41">fill_tree_descriptor<pos:position pos:line="49" pos:column="61"/></name><argument_list pos:line="49" pos:column="61">(<argument><expr><name pos:line="49" pos:column="62">t<pos:position pos:line="49" pos:column="63"/></name><operator pos:line="49" pos:column="63">+<pos:position pos:line="49" pos:column="64"/></operator><name pos:line="49" pos:column="64">i<pos:position pos:line="49" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="67">sha1<pos:position pos:line="49" pos:column="71"/></name></expr></argument>)<pos:position pos:line="49" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="73"/></expr_stmt>
		}<pos:position pos:line="50" pos:column="18"/></block></else></if>
	}<pos:position pos:line="51" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="53" pos:column="9">bottom<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <call><name pos:line="53" pos:column="18">switch_cache_bottom<pos:position pos:line="53" pos:column="37"/></name><argument_list pos:line="53" pos:column="37">(<argument><expr><operator pos:line="53" pos:column="38">&amp;<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="39">newinfo<pos:position pos:line="53" pos:column="46"/></name></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="54" pos:column="9">ret<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <call><name pos:line="54" pos:column="15">traverse_trees<pos:position pos:line="54" pos:column="29"/></name><argument_list pos:line="54" pos:column="29">(<argument><expr><name pos:line="54" pos:column="30">n<pos:position pos:line="54" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="33">t<pos:position pos:line="54" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="36">&amp;<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="37">newinfo<pos:position pos:line="54" pos:column="44"/></name></expr></argument>)<pos:position pos:line="54" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">restore_cache_bottom<pos:position pos:line="55" pos:column="29"/></name><argument_list pos:line="55" pos:column="29">(<argument><expr><operator pos:line="55" pos:column="30">&amp;<pos:position pos:line="55" pos:column="35"/></operator><name pos:line="55" pos:column="31">newinfo<pos:position pos:line="55" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="40">bottom<pos:position pos:line="55" pos:column="46"/></name></expr></argument>)<pos:position pos:line="55" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="48"/></expr_stmt>

	<for pos:line="57" pos:column="9">for <control pos:line="57" pos:column="13">(<init><expr><name pos:line="57" pos:column="14">i<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <literal type="number" pos:line="57" pos:column="18">0<pos:position pos:line="57" pos:column="19"/></literal></expr>;<pos:position pos:line="57" pos:column="20"/></init> <condition><expr><name pos:line="57" pos:column="21">i<pos:position pos:line="57" pos:column="22"/></name> <operator pos:line="57" pos:column="23">&lt;<pos:position pos:line="57" pos:column="27"/></operator> <name pos:line="57" pos:column="25">nr_buf<pos:position pos:line="57" pos:column="31"/></name></expr>;<pos:position pos:line="57" pos:column="32"/></condition> <incr><expr><name pos:line="57" pos:column="33">i<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">++<pos:position pos:line="57" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="57" pos:column="37"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="17">free<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name><name pos:line="58" pos:column="22">buf<pos:position pos:line="58" pos:column="25"/></name><index pos:line="58" pos:column="25">[<expr><name pos:line="58" pos:column="26">i<pos:position pos:line="58" pos:column="27"/></name></expr>]<pos:position pos:line="58" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="58" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt></block></for>

	<return pos:line="60" pos:column="9">return <expr><name pos:line="60" pos:column="16">ret<pos:position pos:line="60" pos:column="19"/></name></expr>;<pos:position pos:line="60" pos:column="20"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1314.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_one<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">strbuf<pos:position pos:line="1" pos:column="36"/></name></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">buffer<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">cache_tree<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">it<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                      <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">path<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">pathlen<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* One "cache-tree" entry consists of the following:
	 * path (NUL terminated)
	 * entry_count, subtree_nr ("%d %d\n")
	 * tree-sha1 (missing if invalid)
	 * subtree_nr "cache-tree" entries for subtrees.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">strbuf_grow<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">buffer<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="29">pathlen<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">+<pos:position pos:line="12" pos:column="38"/></operator> <literal type="number" pos:line="12" pos:column="39">100<pos:position pos:line="12" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">strbuf_add<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">buffer<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">path<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">pathlen<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">strbuf_addf<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">buffer<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="29">"%c%d %d\n"<pos:position pos:line="14" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="42">0<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="45">it<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">-&gt;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="49">entry_count<pos:position pos:line="14" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="62">it<pos:position pos:line="14" pos:column="64"/></name><operator pos:line="14" pos:column="64">-&gt;<pos:position pos:line="14" pos:column="69"/></operator><name pos:line="14" pos:column="66">subtree_nr<pos:position pos:line="14" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="78"/></expr_stmt>

<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><name pos:line="16" pos:column="5">DEBUG<pos:position pos:line="16" pos:column="10"/></name></expr></cpp:if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><literal type="number" pos:line="17" pos:column="13">0<pos:position pos:line="17" pos:column="14"/></literal> <operator pos:line="17" pos:column="15">&lt;=<pos:position pos:line="17" pos:column="20"/></operator> <name><name pos:line="17" pos:column="18">it<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">entry_count<pos:position pos:line="17" pos:column="33"/></name></name></expr>)<pos:position pos:line="17" pos:column="34"/></condition><then pos:line="17" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">fprintf<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">stderr<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="33">"cache-tree &lt;%.*s&gt; (%d ent, %d subtree) %s\n"<pos:position pos:line="18" pos:column="84"/></literal></expr></argument>,
			<argument><expr><name pos:line="19" pos:column="25">pathlen<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">path<pos:position pos:line="19" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="40">it<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">entry_count<pos:position pos:line="19" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="57">it<pos:position pos:line="19" pos:column="59"/></name><operator pos:line="19" pos:column="59">-&gt;<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="61">subtree_nr<pos:position pos:line="19" pos:column="71"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="20" pos:column="25">sha1_to_hex<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name><name pos:line="20" pos:column="37">it<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">sha1<pos:position pos:line="20" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt></block></then>
	<else pos:line="21" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">fprintf<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">stderr<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="33">"cache-tree &lt;%.*s&gt; (%d subtree) invalid\n"<pos:position pos:line="22" pos:column="81"/></literal></expr></argument>,
			<argument><expr><name pos:line="23" pos:column="25">pathlen<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">path<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="40">it<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">-&gt;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="44">subtree_nr<pos:position pos:line="23" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt></block></else></if>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><literal type="number" pos:line="26" pos:column="13">0<pos:position pos:line="26" pos:column="14"/></literal> <operator pos:line="26" pos:column="15">&lt;=<pos:position pos:line="26" pos:column="20"/></operator> <name><name pos:line="26" pos:column="18">it<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">entry_count<pos:position pos:line="26" pos:column="33"/></name></name></expr>)<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34"> <block pos:line="26" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">strbuf_add<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">buffer<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="36">it<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="40">sha1<pos:position pos:line="27" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="46">20<pos:position pos:line="27" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>
	<for pos:line="29" pos:column="9">for <control pos:line="29" pos:column="13">(<init><expr><name pos:line="29" pos:column="14">i<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <literal type="number" pos:line="29" pos:column="18">0<pos:position pos:line="29" pos:column="19"/></literal></expr>;<pos:position pos:line="29" pos:column="20"/></init> <condition><expr><name pos:line="29" pos:column="21">i<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">&lt;<pos:position pos:line="29" pos:column="27"/></operator> <name><name pos:line="29" pos:column="25">it<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">subtree_nr<pos:position pos:line="29" pos:column="39"/></name></name></expr>;<pos:position pos:line="29" pos:column="40"/></condition> <incr><expr><name pos:line="29" pos:column="41">i<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">++<pos:position pos:line="29" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="45"/></control> <block pos:line="29" pos:column="46">{
		<decl_stmt><decl><type><name><name pos:line="30" pos:column="17">struct<pos:position pos:line="30" pos:column="23"/></name> <name pos:line="30" pos:column="24">cache_tree_sub<pos:position pos:line="30" pos:column="38"/></name></name> <modifier pos:line="30" pos:column="39">*<pos:position pos:line="30" pos:column="40"/></modifier></type><name pos:line="30" pos:column="40">down<pos:position pos:line="30" pos:column="44"/></name> <init pos:line="30" pos:column="45">= <expr><name><name pos:line="30" pos:column="47">it<pos:position pos:line="30" pos:column="49"/></name><operator pos:line="30" pos:column="49">-&gt;<pos:position pos:line="30" pos:column="54"/></operator><name pos:line="30" pos:column="51">down<pos:position pos:line="30" pos:column="55"/></name><index pos:line="30" pos:column="55">[<expr><name pos:line="30" pos:column="56">i<pos:position pos:line="30" pos:column="57"/></name></expr>]<pos:position pos:line="30" pos:column="58"/></index></name></expr></init></decl>;<pos:position pos:line="30" pos:column="59"/></decl_stmt>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">i<pos:position pos:line="31" pos:column="22"/></name></expr>)<pos:position pos:line="31" pos:column="23"/></condition><then pos:line="31" pos:column="23"> <block pos:line="31" pos:column="24">{
			<decl_stmt><decl><type><name><name pos:line="32" pos:column="25">struct<pos:position pos:line="32" pos:column="31"/></name> <name pos:line="32" pos:column="32">cache_tree_sub<pos:position pos:line="32" pos:column="46"/></name></name> <modifier pos:line="32" pos:column="47">*<pos:position pos:line="32" pos:column="48"/></modifier></type><name pos:line="32" pos:column="48">prev<pos:position pos:line="32" pos:column="52"/></name> <init pos:line="32" pos:column="53">= <expr><name><name pos:line="32" pos:column="55">it<pos:position pos:line="32" pos:column="57"/></name><operator pos:line="32" pos:column="57">-&gt;<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="59">down<pos:position pos:line="32" pos:column="63"/></name><index pos:line="32" pos:column="63">[<expr><name pos:line="32" pos:column="64">i<pos:position pos:line="32" pos:column="65"/></name><operator pos:line="32" pos:column="65">-<pos:position pos:line="32" pos:column="66"/></operator><literal type="number" pos:line="32" pos:column="66">1<pos:position pos:line="32" pos:column="67"/></literal></expr>]<pos:position pos:line="32" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="32" pos:column="69"/></decl_stmt>
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><call><name pos:line="33" pos:column="29">subtree_name_cmp<pos:position pos:line="33" pos:column="45"/></name><argument_list pos:line="33" pos:column="45">(<argument><expr><name><name pos:line="33" pos:column="46">down<pos:position pos:line="33" pos:column="50"/></name><operator pos:line="33" pos:column="50">-&gt;<pos:position pos:line="33" pos:column="55"/></operator><name pos:line="33" pos:column="52">name<pos:position pos:line="33" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="58">down<pos:position pos:line="33" pos:column="62"/></name><operator pos:line="33" pos:column="62">-&gt;<pos:position pos:line="33" pos:column="67"/></operator><name pos:line="33" pos:column="64">namelen<pos:position pos:line="33" pos:column="71"/></name></name></expr></argument>,
					     <argument><expr><name><name pos:line="34" pos:column="46">prev<pos:position pos:line="34" pos:column="50"/></name><operator pos:line="34" pos:column="50">-&gt;<pos:position pos:line="34" pos:column="55"/></operator><name pos:line="34" pos:column="52">name<pos:position pos:line="34" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="58">prev<pos:position pos:line="34" pos:column="62"/></name><operator pos:line="34" pos:column="62">-&gt;<pos:position pos:line="34" pos:column="67"/></operator><name pos:line="34" pos:column="64">namelen<pos:position pos:line="34" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call> <operator pos:line="34" pos:column="73">&lt;=<pos:position pos:line="34" pos:column="78"/></operator> <literal type="number" pos:line="34" pos:column="76">0<pos:position pos:line="34" pos:column="77"/></literal></expr>)<pos:position pos:line="34" pos:column="78"/></condition><then pos:line="34" pos:column="78">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="33">die<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><literal type="string" pos:line="35" pos:column="37">"fatal - unsorted cache subtree"<pos:position pos:line="35" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt></block></then></if>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">write_one<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">buffer<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="35">down<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">-&gt;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="41">cache_tree<pos:position pos:line="37" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="53">down<pos:position pos:line="37" pos:column="57"/></name><operator pos:line="37" pos:column="57">-&gt;<pos:position pos:line="37" pos:column="62"/></operator><name pos:line="37" pos:column="59">name<pos:position pos:line="37" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="65">down<pos:position pos:line="37" pos:column="69"/></name><operator pos:line="37" pos:column="69">-&gt;<pos:position pos:line="37" pos:column="74"/></operator><name pos:line="37" pos:column="71">namelen<pos:position pos:line="37" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="80"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></for>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

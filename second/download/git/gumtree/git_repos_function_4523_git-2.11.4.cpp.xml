<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4523_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">patience_diff<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">mmfile_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">file1<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">mmfile_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">file2<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">xpparam_t<pos:position pos:line="2" pos:column="26"/></name> <specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">xpp<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">xdfenv_t<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">env<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">int<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">line1<pos:position pos:line="3" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="28">int<pos:position pos:line="3" pos:column="31"/></name></type> <name pos:line="3" pos:column="32">count1<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="40">int<pos:position pos:line="3" pos:column="43"/></name></type> <name pos:line="3" pos:column="44">line2<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="51">int<pos:position pos:line="3" pos:column="54"/></name></type> <name pos:line="3" pos:column="55">count2<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">hashmap<pos:position pos:line="5" pos:column="23"/></name></name></type> <name pos:line="5" pos:column="24">map<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">entry<pos:position pos:line="6" pos:column="21"/></name></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">first<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">result<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>

	<comment type="block" pos:line="9" pos:column="9">/* trivial case: one side is empty */</comment>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">count1<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <block pos:line="10" pos:column="22">{
		<while pos:line="11" pos:column="17">while<condition pos:line="11" pos:column="22">(<expr><name pos:line="11" pos:column="23">count2<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">--<pos:position pos:line="11" pos:column="31"/></operator></expr>)<pos:position pos:line="11" pos:column="32"/></condition>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="25">env<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">xdf2<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">.<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">rchg<pos:position pos:line="12" pos:column="39"/></name><index pos:line="12" pos:column="39">[<expr><name pos:line="12" pos:column="40">line2<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">++<pos:position pos:line="12" pos:column="47"/></operator> <operator pos:line="12" pos:column="48">-<pos:position pos:line="12" pos:column="49"/></operator> <literal type="number" pos:line="12" pos:column="50">1<pos:position pos:line="12" pos:column="51"/></literal></expr>]<pos:position pos:line="12" pos:column="52"/></index></name> <operator pos:line="12" pos:column="53">=<pos:position pos:line="12" pos:column="54"/></operator> <literal type="number" pos:line="12" pos:column="55">1<pos:position pos:line="12" pos:column="56"/></literal></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt></block></while>
		<return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then> <elseif pos:line="14" pos:column="11">else <if pos:line="14" pos:column="16">if <condition pos:line="14" pos:column="19">(<expr><operator pos:line="14" pos:column="20">!<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">count2<pos:position pos:line="14" pos:column="27"/></name></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28"> <block pos:line="14" pos:column="29">{
		<while pos:line="15" pos:column="17">while<condition pos:line="15" pos:column="22">(<expr><name pos:line="15" pos:column="23">count1<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">--<pos:position pos:line="15" pos:column="31"/></operator></expr>)<pos:position pos:line="15" pos:column="32"/></condition>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="25">env<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">xdf1<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">.<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="35">rchg<pos:position pos:line="16" pos:column="39"/></name><index pos:line="16" pos:column="39">[<expr><name pos:line="16" pos:column="40">line1<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">++<pos:position pos:line="16" pos:column="47"/></operator> <operator pos:line="16" pos:column="48">-<pos:position pos:line="16" pos:column="49"/></operator> <literal type="number" pos:line="16" pos:column="50">1<pos:position pos:line="16" pos:column="51"/></literal></expr>]<pos:position pos:line="16" pos:column="52"/></index></name> <operator pos:line="16" pos:column="53">=<pos:position pos:line="16" pos:column="54"/></operator> <literal type="number" pos:line="16" pos:column="55">1<pos:position pos:line="16" pos:column="56"/></literal></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt></block></while>
		<return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">memset<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><operator pos:line="20" pos:column="16">&amp;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="17">map<pos:position pos:line="20" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="25">sizeof<argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">map<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">fill_hashmap<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">file1<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">file2<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">xpp<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="45">env<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="50">&amp;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="51">map<pos:position pos:line="21" pos:column="54"/></name></expr></argument>,
			<argument><expr><name pos:line="22" pos:column="25">line1<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="32">count1<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">line2<pos:position pos:line="22" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="47">count2<pos:position pos:line="22" pos:column="53"/></name></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="55"/></condition><then pos:line="22" pos:column="55">
		<block type="pseudo"><return pos:line="23" pos:column="17">return <expr><operator pos:line="23" pos:column="24">-<pos:position pos:line="23" pos:column="25"/></operator><literal type="number" pos:line="23" pos:column="25">1<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></return></block></then></if>

	<comment type="block" pos:line="25" pos:column="9">/* are there any matching lines at all? */</comment>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><name><name pos:line="26" pos:column="14">map<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">.<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">has_matches<pos:position pos:line="26" pos:column="29"/></name></name></expr>)<pos:position pos:line="26" pos:column="30"/></condition><then pos:line="26" pos:column="30"> <block pos:line="26" pos:column="31">{
		<while pos:line="27" pos:column="17">while<condition pos:line="27" pos:column="22">(<expr><name pos:line="27" pos:column="23">count1<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">--<pos:position pos:line="27" pos:column="31"/></operator></expr>)<pos:position pos:line="27" pos:column="32"/></condition>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="25">env<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">-&gt;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="30">xdf1<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">.<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="35">rchg<pos:position pos:line="28" pos:column="39"/></name><index pos:line="28" pos:column="39">[<expr><name pos:line="28" pos:column="40">line1<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">++<pos:position pos:line="28" pos:column="47"/></operator> <operator pos:line="28" pos:column="48">-<pos:position pos:line="28" pos:column="49"/></operator> <literal type="number" pos:line="28" pos:column="50">1<pos:position pos:line="28" pos:column="51"/></literal></expr>]<pos:position pos:line="28" pos:column="52"/></index></name> <operator pos:line="28" pos:column="53">=<pos:position pos:line="28" pos:column="54"/></operator> <literal type="number" pos:line="28" pos:column="55">1<pos:position pos:line="28" pos:column="56"/></literal></expr>;<pos:position pos:line="28" pos:column="57"/></expr_stmt></block></while>
		<while pos:line="29" pos:column="17">while<condition pos:line="29" pos:column="22">(<expr><name pos:line="29" pos:column="23">count2<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">--<pos:position pos:line="29" pos:column="31"/></operator></expr>)<pos:position pos:line="29" pos:column="32"/></condition>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="25">env<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">-&gt;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="30">xdf2<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">.<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="35">rchg<pos:position pos:line="30" pos:column="39"/></name><index pos:line="30" pos:column="39">[<expr><name pos:line="30" pos:column="40">line2<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">++<pos:position pos:line="30" pos:column="47"/></operator> <operator pos:line="30" pos:column="48">-<pos:position pos:line="30" pos:column="49"/></operator> <literal type="number" pos:line="30" pos:column="50">1<pos:position pos:line="30" pos:column="51"/></literal></expr>]<pos:position pos:line="30" pos:column="52"/></index></name> <operator pos:line="30" pos:column="53">=<pos:position pos:line="30" pos:column="54"/></operator> <literal type="number" pos:line="30" pos:column="55">1<pos:position pos:line="30" pos:column="56"/></literal></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt></block></while>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">xdl_free<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name><name pos:line="31" pos:column="26">map<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">.<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="30">entries<pos:position pos:line="31" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
		<return pos:line="32" pos:column="17">return <expr><literal type="number" pos:line="32" pos:column="24">0<pos:position pos:line="32" pos:column="25"/></literal></expr>;<pos:position pos:line="32" pos:column="26"/></return>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="35" pos:column="9">first<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <call><name pos:line="35" pos:column="17">find_longest_common_sequence<pos:position pos:line="35" pos:column="45"/></name><argument_list pos:line="35" pos:column="45">(<argument><expr><operator pos:line="35" pos:column="46">&amp;<pos:position pos:line="35" pos:column="51"/></operator><name pos:line="35" pos:column="47">map<pos:position pos:line="35" pos:column="50"/></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">first<pos:position pos:line="36" pos:column="18"/></name></expr>)<pos:position pos:line="36" pos:column="19"/></condition><then pos:line="36" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="17">result<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <call><name pos:line="37" pos:column="26">walk_common_sequence<pos:position pos:line="37" pos:column="46"/></name><argument_list pos:line="37" pos:column="46">(<argument><expr><operator pos:line="37" pos:column="47">&amp;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="48">map<pos:position pos:line="37" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="53">first<pos:position pos:line="37" pos:column="58"/></name></expr></argument>,
			<argument><expr><name pos:line="38" pos:column="25">line1<pos:position pos:line="38" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="32">count1<pos:position pos:line="38" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="40">line2<pos:position pos:line="38" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="47">count2<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt></block></then>
	<else pos:line="39" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="17">result<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <call><name pos:line="40" pos:column="26">fall_back_to_classic_diff<pos:position pos:line="40" pos:column="51"/></name><argument_list pos:line="40" pos:column="51">(<argument><expr><operator pos:line="40" pos:column="52">&amp;<pos:position pos:line="40" pos:column="57"/></operator><name pos:line="40" pos:column="53">map<pos:position pos:line="40" pos:column="56"/></name></expr></argument>,
			<argument><expr><name pos:line="41" pos:column="25">line1<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="32">count1<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="40">line2<pos:position pos:line="41" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="47">count2<pos:position pos:line="41" pos:column="53"/></name></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="43" pos:column="9">xdl_free<pos:position pos:line="43" pos:column="17"/></name><argument_list pos:line="43" pos:column="17">(<argument><expr><name><name pos:line="43" pos:column="18">map<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">.<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">entries<pos:position pos:line="43" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
	<return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">result<pos:position pos:line="44" pos:column="22"/></name></expr>;<pos:position pos:line="44" pos:column="23"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

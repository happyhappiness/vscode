<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3059_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">verify_hostname<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">X509<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">cert<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">hostname<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">len<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">X509_NAME<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">subj<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">cname<pos:position pos:line="5" pos:column="19"/></name><index pos:line="5" pos:column="19">[<expr><literal type="number" pos:line="5" pos:column="20">1000<pos:position pos:line="5" pos:column="24"/></literal></expr>]<pos:position pos:line="5" pos:column="25"/></index></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">found<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">STACK_OF<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">GENERAL_NAME<pos:position pos:line="7" pos:column="30"/></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call> <operator pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">subj_alt_names<pos:position pos:line="7" pos:column="47"/></name></expr>;<pos:position pos:line="7" pos:column="48"/></expr_stmt>

	<comment type="block" pos:line="9" pos:column="9">/* try the DNS subjectAltNames */</comment>
	<expr_stmt><expr><name pos:line="10" pos:column="9">found<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">subj_alt_names<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <call><name pos:line="11" pos:column="31">X509_get_ext_d2i<pos:position pos:line="11" pos:column="47"/></name><argument_list pos:line="11" pos:column="47">(<argument><expr><name pos:line="11" pos:column="48">cert<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">NID_subject_alt_name<pos:position pos:line="11" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="76">NULL<pos:position pos:line="11" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="82">NULL<pos:position pos:line="11" pos:column="86"/></name></expr></argument>)<pos:position pos:line="11" pos:column="87"/></argument_list></call><operator pos:line="11" pos:column="87">)<pos:position pos:line="11" pos:column="88"/></operator></expr>)<pos:position pos:line="11" pos:column="89"/></condition><then pos:line="11" pos:column="89"> <block pos:line="11" pos:column="90">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">int<pos:position pos:line="12" pos:column="20"/></name></type> <name pos:line="12" pos:column="21">num_subj_alt_names<pos:position pos:line="12" pos:column="39"/></name> <init pos:line="12" pos:column="40">= <expr><call><name pos:line="12" pos:column="42">sk_GENERAL_NAME_num<pos:position pos:line="12" pos:column="61"/></name><argument_list pos:line="12" pos:column="61">(<argument><expr><name pos:line="12" pos:column="62">subj_alt_names<pos:position pos:line="12" pos:column="76"/></name></expr></argument>)<pos:position pos:line="12" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="78"/></decl_stmt>
		<for pos:line="13" pos:column="17">for <control pos:line="13" pos:column="21">(<init><expr><name pos:line="13" pos:column="22">i<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr>;<pos:position pos:line="13" pos:column="28"/></init> <condition><expr><operator pos:line="13" pos:column="29">!<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">found<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">&amp;&amp;<pos:position pos:line="13" pos:column="46"/></operator> <name pos:line="13" pos:column="39">i<pos:position pos:line="13" pos:column="40"/></name> <operator pos:line="13" pos:column="41">&lt;<pos:position pos:line="13" pos:column="45"/></operator> <name pos:line="13" pos:column="43">num_subj_alt_names<pos:position pos:line="13" pos:column="61"/></name></expr>;<pos:position pos:line="13" pos:column="62"/></condition> <incr><expr><name pos:line="13" pos:column="63">i<pos:position pos:line="13" pos:column="64"/></name><operator pos:line="13" pos:column="64">++<pos:position pos:line="13" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="67"/></control> <block pos:line="13" pos:column="68">{
			<decl_stmt><decl><type><name pos:line="14" pos:column="25">GENERAL_NAME<pos:position pos:line="14" pos:column="37"/></name> <modifier pos:line="14" pos:column="38">*<pos:position pos:line="14" pos:column="39"/></modifier></type><name pos:line="14" pos:column="39">subj_alt_name<pos:position pos:line="14" pos:column="52"/></name> <init pos:line="14" pos:column="53">= <expr><call><name pos:line="14" pos:column="55">sk_GENERAL_NAME_value<pos:position pos:line="14" pos:column="76"/></name><argument_list pos:line="14" pos:column="76">(<argument><expr><name pos:line="14" pos:column="77">subj_alt_names<pos:position pos:line="14" pos:column="91"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="93">i<pos:position pos:line="14" pos:column="94"/></name></expr></argument>)<pos:position pos:line="14" pos:column="95"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="96"/></decl_stmt>
			<if pos:line="15" pos:column="25">if <condition pos:line="15" pos:column="28">(<expr><name><name pos:line="15" pos:column="29">subj_alt_name<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">-&gt;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="44">type<pos:position pos:line="15" pos:column="48"/></name></name> <operator pos:line="15" pos:column="49">==<pos:position pos:line="15" pos:column="51"/></operator> <name pos:line="15" pos:column="52">GEN_DNS<pos:position pos:line="15" pos:column="59"/></name> <operator pos:line="15" pos:column="60">&amp;&amp;<pos:position pos:line="15" pos:column="70"/></operator>
			    <call><name pos:line="16" pos:column="29">strlen<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><operator pos:line="16" pos:column="36">(<pos:position pos:line="16" pos:column="37"/></operator><specifier pos:line="16" pos:column="37">const<pos:position pos:line="16" pos:column="42"/></specifier> <name pos:line="16" pos:column="43">char<pos:position pos:line="16" pos:column="47"/></name> <operator pos:line="16" pos:column="48">*<pos:position pos:line="16" pos:column="49"/></operator><operator pos:line="16" pos:column="49">)<pos:position pos:line="16" pos:column="50"/></operator><name><name pos:line="16" pos:column="50">subj_alt_name<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">-&gt;<pos:position pos:line="16" pos:column="68"/></operator><name pos:line="16" pos:column="65">d<pos:position pos:line="16" pos:column="66"/></name><operator pos:line="16" pos:column="66">.<pos:position pos:line="16" pos:column="67"/></operator><name pos:line="16" pos:column="67">ia5<pos:position pos:line="16" pos:column="70"/></name><operator pos:line="16" pos:column="70">-&gt;<pos:position pos:line="16" pos:column="75"/></operator><name pos:line="16" pos:column="72">data<pos:position pos:line="16" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call> <operator pos:line="16" pos:column="78">==<pos:position pos:line="16" pos:column="80"/></operator> <operator pos:line="16" pos:column="81">(<pos:position pos:line="16" pos:column="82"/></operator><name pos:line="16" pos:column="82">size_t<pos:position pos:line="16" pos:column="88"/></name><operator pos:line="16" pos:column="88">)<pos:position pos:line="16" pos:column="89"/></operator><name><name pos:line="16" pos:column="89">subj_alt_name<pos:position pos:line="16" pos:column="102"/></name><operator pos:line="16" pos:column="102">-&gt;<pos:position pos:line="16" pos:column="107"/></operator><name pos:line="16" pos:column="104">d<pos:position pos:line="16" pos:column="105"/></name><operator pos:line="16" pos:column="105">.<pos:position pos:line="16" pos:column="106"/></operator><name pos:line="16" pos:column="106">ia5<pos:position pos:line="16" pos:column="109"/></name><operator pos:line="16" pos:column="109">-&gt;<pos:position pos:line="16" pos:column="114"/></operator><name pos:line="16" pos:column="111">length<pos:position pos:line="16" pos:column="117"/></name></name> <operator pos:line="16" pos:column="118">&amp;&amp;<pos:position pos:line="16" pos:column="128"/></operator>
			    <call><name pos:line="17" pos:column="29">host_matches<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><name pos:line="17" pos:column="42">hostname<pos:position pos:line="17" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="52">(<pos:position pos:line="17" pos:column="53"/></operator><specifier pos:line="17" pos:column="53">const<pos:position pos:line="17" pos:column="58"/></specifier> <name pos:line="17" pos:column="59">char<pos:position pos:line="17" pos:column="63"/></name> <operator pos:line="17" pos:column="64">*<pos:position pos:line="17" pos:column="65"/></operator><operator pos:line="17" pos:column="65">)<pos:position pos:line="17" pos:column="66"/></operator><operator pos:line="17" pos:column="66">(<pos:position pos:line="17" pos:column="67"/></operator><name><name pos:line="17" pos:column="67">subj_alt_name<pos:position pos:line="17" pos:column="80"/></name><operator pos:line="17" pos:column="80">-&gt;<pos:position pos:line="17" pos:column="85"/></operator><name pos:line="17" pos:column="82">d<pos:position pos:line="17" pos:column="83"/></name><operator pos:line="17" pos:column="83">.<pos:position pos:line="17" pos:column="84"/></operator><name pos:line="17" pos:column="84">ia5<pos:position pos:line="17" pos:column="87"/></name><operator pos:line="17" pos:column="87">-&gt;<pos:position pos:line="17" pos:column="92"/></operator><name pos:line="17" pos:column="89">data<pos:position pos:line="17" pos:column="93"/></name></name><operator pos:line="17" pos:column="93">)<pos:position pos:line="17" pos:column="94"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="95"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="96"/></condition><then pos:line="17" pos:column="96">
				<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="33">found<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">=<pos:position pos:line="18" pos:column="40"/></operator> <literal type="number" pos:line="18" pos:column="41">1<pos:position pos:line="18" pos:column="42"/></literal></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt></block></then></if>
		}<pos:position pos:line="19" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">sk_GENERAL_NAME_pop_free<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">subj_alt_names<pos:position pos:line="20" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="58">GENERAL_NAME_free<pos:position pos:line="20" pos:column="75"/></name></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">found<pos:position pos:line="22" pos:column="18"/></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19">
		<block type="pseudo"><return pos:line="23" pos:column="17">return <expr><literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="25" pos:column="9">/* try the common name */</comment>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><operator pos:line="26" pos:column="14">(<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">subj<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <call><name pos:line="26" pos:column="22">X509_get_subject_name<pos:position pos:line="26" pos:column="43"/></name><argument_list pos:line="26" pos:column="43">(<argument><expr><name pos:line="26" pos:column="44">cert<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call><operator pos:line="26" pos:column="49">)<pos:position pos:line="26" pos:column="50"/></operator></expr>)<pos:position pos:line="26" pos:column="51"/></condition><then pos:line="26" pos:column="51">
		<block type="pseudo"><return pos:line="27" pos:column="17">return <expr><call><name pos:line="27" pos:column="24">error<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><literal type="string" pos:line="27" pos:column="30">"cannot get certificate subject"<pos:position pos:line="27" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="64"/></return></block></then></if>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">len<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <call><name pos:line="28" pos:column="20">X509_NAME_get_text_by_NID<pos:position pos:line="28" pos:column="45"/></name><argument_list pos:line="28" pos:column="45">(<argument><expr><name pos:line="28" pos:column="46">subj<pos:position pos:line="28" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="52">NID_commonName<pos:position pos:line="28" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="68">cname<pos:position pos:line="28" pos:column="73"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="75">sizeof<argument_list pos:line="28" pos:column="81">(<argument><expr><name pos:line="28" pos:column="82">cname<pos:position pos:line="28" pos:column="87"/></name></expr></argument>)<pos:position pos:line="28" pos:column="88"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="89"/></argument_list></call><operator pos:line="28" pos:column="89">)<pos:position pos:line="28" pos:column="90"/></operator> <operator pos:line="28" pos:column="91">&lt;<pos:position pos:line="28" pos:column="95"/></operator> <literal type="number" pos:line="28" pos:column="93">0<pos:position pos:line="28" pos:column="94"/></literal></expr>)<pos:position pos:line="28" pos:column="95"/></condition><then pos:line="28" pos:column="95">
		<block type="pseudo"><return pos:line="29" pos:column="17">return <expr><call><name pos:line="29" pos:column="24">error<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><literal type="string" pos:line="29" pos:column="30">"cannot get certificate common name"<pos:position pos:line="29" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="68"/></return></block></then></if>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">strlen<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><name pos:line="30" pos:column="20">cname<pos:position pos:line="30" pos:column="25"/></name></expr></argument>)<pos:position pos:line="30" pos:column="26"/></argument_list></call> <operator pos:line="30" pos:column="27">==<pos:position pos:line="30" pos:column="29"/></operator> <operator pos:line="30" pos:column="30">(<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="31">size_t<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">)<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="38">len<pos:position pos:line="30" pos:column="41"/></name> <operator pos:line="30" pos:column="42">&amp;&amp;<pos:position pos:line="30" pos:column="52"/></operator> <call><name pos:line="30" pos:column="45">host_matches<pos:position pos:line="30" pos:column="57"/></name><argument_list pos:line="30" pos:column="57">(<argument><expr><name pos:line="30" pos:column="58">hostname<pos:position pos:line="30" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="68">cname<pos:position pos:line="30" pos:column="73"/></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="75"/></condition><then pos:line="30" pos:column="75">
		<block type="pseudo"><return pos:line="31" pos:column="17">return <expr><literal type="number" pos:line="31" pos:column="24">0<pos:position pos:line="31" pos:column="25"/></literal></expr>;<pos:position pos:line="31" pos:column="26"/></return></block></then></if>
	<return pos:line="32" pos:column="9">return <expr><call><name pos:line="32" pos:column="16">error<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><literal type="string" pos:line="32" pos:column="22">"certificate owner '%s' does not match hostname '%s'"<pos:position pos:line="32" pos:column="75"/></literal></expr></argument>,
		     <argument><expr><name pos:line="33" pos:column="22">cname<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="29">hostname<pos:position pos:line="33" pos:column="37"/></name></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4691_git-2.11.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_gc<pos:position pos:line="1" pos:column="11"/></name><parameter_list pos:line="1" pos:column="11">(<parameter><decl><type><name pos:line="1" pos:column="12">int<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">argc<pos:position pos:line="1" pos:column="20"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier><modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">argv<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">prefix<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">aggressive<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><literal type="number" pos:line="3" pos:column="26">0<pos:position pos:line="3" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">auto_gc<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">quiet<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">force<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">name<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">pid_t<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">pid<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">daemonized<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><literal type="number" pos:line="9" pos:column="26">0<pos:position pos:line="9" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">option<pos:position pos:line="11" pos:column="22"/></name></name></type> <name><name pos:line="11" pos:column="23">builtin_gc_options<pos:position pos:line="11" pos:column="41"/></name><index pos:line="11" pos:column="41">[]<pos:position pos:line="11" pos:column="43"/></index></name> <init pos:line="11" pos:column="44">= <expr><block pos:line="11" pos:column="46">{
		<expr><call><name pos:line="12" pos:column="17">OPT__QUIET<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><operator pos:line="12" pos:column="28">&amp;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="29">quiet<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="36">N_<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><literal type="string" pos:line="12" pos:column="39">"suppress progress reporting"<pos:position pos:line="12" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>,
		<expr><block pos:line="13" pos:column="17">{ <expr><name pos:line="13" pos:column="19">OPTION_STRING<pos:position pos:line="13" pos:column="32"/></name></expr>, <expr><literal type="number" pos:line="13" pos:column="34">0<pos:position pos:line="13" pos:column="35"/></literal></expr>, <expr><literal type="string" pos:line="13" pos:column="37">"prune"<pos:position pos:line="13" pos:column="44"/></literal></expr>, <expr><operator pos:line="13" pos:column="46">&amp;<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="47">prune_expire<pos:position pos:line="13" pos:column="59"/></name></expr>, <expr><call><name pos:line="13" pos:column="61">N_<pos:position pos:line="13" pos:column="63"/></name><argument_list pos:line="13" pos:column="63">(<argument><expr><literal type="string" pos:line="13" pos:column="64">"date"<pos:position pos:line="13" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>,
			<expr><call><name pos:line="14" pos:column="25">N_<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><literal type="string" pos:line="14" pos:column="28">"prune unreferenced objects"<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>,
			<expr><name pos:line="15" pos:column="25">PARSE_OPT_OPTARG<pos:position pos:line="15" pos:column="41"/></name></expr>, <expr><name pos:line="15" pos:column="43">NULL<pos:position pos:line="15" pos:column="47"/></name></expr>, <expr><operator pos:line="15" pos:column="49">(<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">intptr_t<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">)<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="59">prune_expire<pos:position pos:line="15" pos:column="71"/></name></expr> }<pos:position pos:line="15" pos:column="73"/></block></expr>,
		<expr><call><name pos:line="16" pos:column="17">OPT_BOOL<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><literal type="number" pos:line="16" pos:column="26">0<pos:position pos:line="16" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="29">"aggressive"<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="43">&amp;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="44">aggressive<pos:position pos:line="16" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="56">N_<pos:position pos:line="16" pos:column="58"/></name><argument_list pos:line="16" pos:column="58">(<argument><expr><literal type="string" pos:line="16" pos:column="59">"be more thorough (increased runtime)"<pos:position pos:line="16" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="99"/></argument_list></call></expr>,
		<expr><call><name pos:line="17" pos:column="17">OPT_BOOL<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><literal type="number" pos:line="17" pos:column="26">0<pos:position pos:line="17" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="29">"auto"<pos:position pos:line="17" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="37">&amp;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="38">auto_gc<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="47">N_<pos:position pos:line="17" pos:column="49"/></name><argument_list pos:line="17" pos:column="49">(<argument><expr><literal type="string" pos:line="17" pos:column="50">"enable auto-gc mode"<pos:position pos:line="17" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr>,
		<expr><call><name pos:line="18" pos:column="17">OPT_BOOL<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="29">"force"<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="38">&amp;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="39">force<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="46">N_<pos:position pos:line="18" pos:column="48"/></name><argument_list pos:line="18" pos:column="48">(<argument><expr><literal type="string" pos:line="18" pos:column="49">"force running gc even if there may be another gc running"<pos:position pos:line="18" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="109"/></argument_list></call></expr>,
		<macro><name pos:line="19" pos:column="17">OPT_END<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">()<pos:position pos:line="19" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="20" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="20" pos:column="11"/></decl_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">argc<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">==<pos:position pos:line="22" pos:column="20"/></operator> <literal type="number" pos:line="22" pos:column="21">2<pos:position pos:line="22" pos:column="22"/></literal> <operator pos:line="22" pos:column="23">&amp;&amp;<pos:position pos:line="22" pos:column="33"/></operator> <operator pos:line="22" pos:column="26">!<pos:position pos:line="22" pos:column="27"/></operator><call><name pos:line="22" pos:column="27">strcmp<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name><name pos:line="22" pos:column="34">argv<pos:position pos:line="22" pos:column="38"/></name><index pos:line="22" pos:column="38">[<expr><literal type="number" pos:line="22" pos:column="39">1<pos:position pos:line="22" pos:column="40"/></literal></expr>]<pos:position pos:line="22" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="43">"-h"<pos:position pos:line="22" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="49"/></condition><then pos:line="22" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">usage_with_options<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">builtin_gc_usage<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">builtin_gc_options<pos:position pos:line="23" pos:column="72"/></name></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="74"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">argv_array_pushl<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><operator pos:line="25" pos:column="26">&amp;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="27">pack_refs_cmd<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="42">"pack-refs"<pos:position pos:line="25" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="55">"--all"<pos:position pos:line="25" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="64">"--prune"<pos:position pos:line="25" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="75">NULL<pos:position pos:line="25" pos:column="79"/></name></expr></argument>)<pos:position pos:line="25" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">argv_array_pushl<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><operator pos:line="26" pos:column="26">&amp;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="27">reflog<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="35">"reflog"<pos:position pos:line="26" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="45">"expire"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="55">"--all"<pos:position pos:line="26" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="64">NULL<pos:position pos:line="26" pos:column="68"/></name></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">argv_array_pushl<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><operator pos:line="27" pos:column="26">&amp;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="27">repack<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="35">"repack"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="45">"-d"<pos:position pos:line="27" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="51">"-l"<pos:position pos:line="27" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="57">NULL<pos:position pos:line="27" pos:column="61"/></name></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">argv_array_pushl<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><operator pos:line="28" pos:column="26">&amp;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="27">prune<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="34">"prune"<pos:position pos:line="28" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="43">"--expire"<pos:position pos:line="28" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="55">NULL<pos:position pos:line="28" pos:column="59"/></name></expr></argument>)<pos:position pos:line="28" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">argv_array_pushl<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><operator pos:line="29" pos:column="26">&amp;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="27">prune_worktrees<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="44">"worktree"<pos:position pos:line="29" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="56">"prune"<pos:position pos:line="29" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="65">"--expire"<pos:position pos:line="29" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="77">NULL<pos:position pos:line="29" pos:column="81"/></name></expr></argument>)<pos:position pos:line="29" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="83"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">argv_array_pushl<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><operator pos:line="30" pos:column="26">&amp;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="27">rerere<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="35">"rerere"<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="45">"gc"<pos:position pos:line="30" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="51">NULL<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">gc_config<pos:position pos:line="32" pos:column="18"/></name><argument_list pos:line="32" pos:column="18">()<pos:position pos:line="32" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">pack_refs<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">&lt;<pos:position pos:line="34" pos:column="27"/></operator> <literal type="number" pos:line="34" pos:column="25">0<pos:position pos:line="34" pos:column="26"/></literal></expr>)<pos:position pos:line="34" pos:column="27"/></condition><then pos:line="34" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="17">pack_refs<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">=<pos:position pos:line="35" pos:column="28"/></operator> <operator pos:line="35" pos:column="29">!<pos:position pos:line="35" pos:column="30"/></operator><call><name pos:line="35" pos:column="30">is_bare_repository<pos:position pos:line="35" pos:column="48"/></name><argument_list pos:line="35" pos:column="48">()<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="37" pos:column="9">argc<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">parse_options<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">argc<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="36">argv<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="42">prefix<pos:position pos:line="37" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="50">builtin_gc_options<pos:position pos:line="37" pos:column="68"/></name></expr></argument>,
			     <argument><expr><name pos:line="38" pos:column="30">builtin_gc_usage<pos:position pos:line="38" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="48">0<pos:position pos:line="38" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">argc<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">&gt;<pos:position pos:line="39" pos:column="22"/></operator> <literal type="number" pos:line="39" pos:column="20">0<pos:position pos:line="39" pos:column="21"/></literal></expr>)<pos:position pos:line="39" pos:column="22"/></condition><then pos:line="39" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">usage_with_options<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">builtin_gc_usage<pos:position pos:line="40" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="54">builtin_gc_options<pos:position pos:line="40" pos:column="72"/></name></expr></argument>)<pos:position pos:line="40" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="74"/></expr_stmt></block></then></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">aggressive<pos:position pos:line="42" pos:column="23"/></name></expr>)<pos:position pos:line="42" pos:column="24"/></condition><then pos:line="42" pos:column="24"> <block pos:line="42" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">argv_array_push<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><operator pos:line="43" pos:column="33">&amp;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="34">repack<pos:position pos:line="43" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="42">"-f"<pos:position pos:line="43" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="48"/></expr_stmt>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">aggressive_depth<pos:position pos:line="44" pos:column="37"/></name> <operator pos:line="44" pos:column="38">&gt;<pos:position pos:line="44" pos:column="42"/></operator> <literal type="number" pos:line="44" pos:column="40">0<pos:position pos:line="44" pos:column="41"/></literal></expr>)<pos:position pos:line="44" pos:column="42"/></condition><then pos:line="44" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="25">argv_array_pushf<pos:position pos:line="45" pos:column="41"/></name><argument_list pos:line="45" pos:column="41">(<argument><expr><operator pos:line="45" pos:column="42">&amp;<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="43">repack<pos:position pos:line="45" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="51">"--depth=%d"<pos:position pos:line="45" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="65">aggressive_depth<pos:position pos:line="45" pos:column="81"/></name></expr></argument>)<pos:position pos:line="45" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="83"/></expr_stmt></block></then></if>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">aggressive_window<pos:position pos:line="46" pos:column="38"/></name> <operator pos:line="46" pos:column="39">&gt;<pos:position pos:line="46" pos:column="43"/></operator> <literal type="number" pos:line="46" pos:column="41">0<pos:position pos:line="46" pos:column="42"/></literal></expr>)<pos:position pos:line="46" pos:column="43"/></condition><then pos:line="46" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="25">argv_array_pushf<pos:position pos:line="47" pos:column="41"/></name><argument_list pos:line="47" pos:column="41">(<argument><expr><operator pos:line="47" pos:column="42">&amp;<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="43">repack<pos:position pos:line="47" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="51">"--window=%d"<pos:position pos:line="47" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="66">aggressive_window<pos:position pos:line="47" pos:column="83"/></name></expr></argument>)<pos:position pos:line="47" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="85"/></expr_stmt></block></then></if>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">quiet<pos:position pos:line="49" pos:column="18"/></name></expr>)<pos:position pos:line="49" pos:column="19"/></condition><then pos:line="49" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="17">argv_array_push<pos:position pos:line="50" pos:column="32"/></name><argument_list pos:line="50" pos:column="32">(<argument><expr><operator pos:line="50" pos:column="33">&amp;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="34">repack<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="42">"-q"<pos:position pos:line="50" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="48"/></expr_stmt></block></then></if>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">auto_gc<pos:position pos:line="52" pos:column="20"/></name></expr>)<pos:position pos:line="52" pos:column="21"/></condition><then pos:line="52" pos:column="21"> <block pos:line="52" pos:column="22">{
		<comment type="block" pos:line="53" pos:column="17">/*
		 * Auto-gc should be least intrusive as possible.
		 */</comment>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><operator pos:line="56" pos:column="21">!<pos:position pos:line="56" pos:column="22"/></operator><call><name pos:line="56" pos:column="22">need_to_gc<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">()<pos:position pos:line="56" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="35"/></condition><then pos:line="56" pos:column="35">
			<block type="pseudo"><return pos:line="57" pos:column="25">return <expr><literal type="number" pos:line="57" pos:column="32">0<pos:position pos:line="57" pos:column="33"/></literal></expr>;<pos:position pos:line="57" pos:column="34"/></return></block></then></if>
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><operator pos:line="58" pos:column="21">!<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="22">quiet<pos:position pos:line="58" pos:column="27"/></name></expr>)<pos:position pos:line="58" pos:column="28"/></condition><then pos:line="58" pos:column="28"> <block pos:line="58" pos:column="29">{
			<if pos:line="59" pos:column="25">if <condition pos:line="59" pos:column="28">(<expr><name pos:line="59" pos:column="29">detach_auto<pos:position pos:line="59" pos:column="40"/></name></expr>)<pos:position pos:line="59" pos:column="41"/></condition><then pos:line="59" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="33">fprintf<pos:position pos:line="60" pos:column="40"/></name><argument_list pos:line="60" pos:column="40">(<argument><expr><name pos:line="60" pos:column="41">stderr<pos:position pos:line="60" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="49">_<pos:position pos:line="60" pos:column="50"/></name><argument_list pos:line="60" pos:column="50">(<argument><expr><literal type="string" pos:line="60" pos:column="51">"Auto packing the repository in background for optimum performance.\n"<pos:position pos:line="60" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="122"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="124"/></expr_stmt></block></then>
			<else pos:line="61" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="33">fprintf<pos:position pos:line="62" pos:column="40"/></name><argument_list pos:line="62" pos:column="40">(<argument><expr><name pos:line="62" pos:column="41">stderr<pos:position pos:line="62" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="49">_<pos:position pos:line="62" pos:column="50"/></name><argument_list pos:line="62" pos:column="50">(<argument><expr><literal type="string" pos:line="62" pos:column="51">"Auto packing the repository for optimum performance.\n"<pos:position pos:line="62" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="110"/></expr_stmt></block></else></if>
			<expr_stmt><expr><call><name pos:line="63" pos:column="25">fprintf<pos:position pos:line="63" pos:column="32"/></name><argument_list pos:line="63" pos:column="32">(<argument><expr><name pos:line="63" pos:column="33">stderr<pos:position pos:line="63" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="41">_<pos:position pos:line="63" pos:column="42"/></name><argument_list pos:line="63" pos:column="42">(<argument><expr><literal type="string" pos:line="63" pos:column="43">"See \"git help gc\" for manual housekeeping.\n"<pos:position pos:line="63" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="94"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name pos:line="65" pos:column="21">detach_auto<pos:position pos:line="65" pos:column="32"/></name></expr>)<pos:position pos:line="65" pos:column="33"/></condition><then pos:line="65" pos:column="33"> <block pos:line="65" pos:column="34">{
			<if pos:line="66" pos:column="25">if <condition pos:line="66" pos:column="28">(<expr><call><name pos:line="66" pos:column="29">report_last_gc_error<pos:position pos:line="66" pos:column="49"/></name><argument_list pos:line="66" pos:column="49">()<pos:position pos:line="66" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="52"/></condition><then pos:line="66" pos:column="52">
				<block type="pseudo"><return pos:line="67" pos:column="33">return <expr><operator pos:line="67" pos:column="40">-<pos:position pos:line="67" pos:column="41"/></operator><literal type="number" pos:line="67" pos:column="41">1<pos:position pos:line="67" pos:column="42"/></literal></expr>;<pos:position pos:line="67" pos:column="43"/></return></block></then></if>

			<if pos:line="69" pos:column="25">if <condition pos:line="69" pos:column="28">(<expr><call><name pos:line="69" pos:column="29">gc_before_repack<pos:position pos:line="69" pos:column="45"/></name><argument_list pos:line="69" pos:column="45">()<pos:position pos:line="69" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="48"/></condition><then pos:line="69" pos:column="48">
				<block type="pseudo"><return pos:line="70" pos:column="33">return <expr><operator pos:line="70" pos:column="40">-<pos:position pos:line="70" pos:column="41"/></operator><literal type="number" pos:line="70" pos:column="41">1<pos:position pos:line="70" pos:column="42"/></literal></expr>;<pos:position pos:line="70" pos:column="43"/></return></block></then></if>
			<comment type="block" pos:line="71" pos:column="25">/*
			 * failure to daemonize is ok, we'll continue
			 * in foreground
			 */</comment>
			<expr_stmt><expr><name pos:line="75" pos:column="25">daemonized<pos:position pos:line="75" pos:column="35"/></name> <operator pos:line="75" pos:column="36">=<pos:position pos:line="75" pos:column="37"/></operator> <operator pos:line="75" pos:column="38">!<pos:position pos:line="75" pos:column="39"/></operator><call><name pos:line="75" pos:column="39">daemonize<pos:position pos:line="75" pos:column="48"/></name><argument_list pos:line="75" pos:column="48">()<pos:position pos:line="75" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="76" pos:column="18"/></block></then></if>
	}<pos:position pos:line="77" pos:column="10"/></block></then> <else pos:line="77" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="17">add_repack_all_option<pos:position pos:line="78" pos:column="38"/></name><argument_list pos:line="78" pos:column="38">()<pos:position pos:line="78" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="41"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="80" pos:column="9">name<pos:position pos:line="80" pos:column="13"/></name> <operator pos:line="80" pos:column="14">=<pos:position pos:line="80" pos:column="15"/></operator> <call><name pos:line="80" pos:column="16">lock_repo_for_gc<pos:position pos:line="80" pos:column="32"/></name><argument_list pos:line="80" pos:column="32">(<argument><expr><name pos:line="80" pos:column="33">force<pos:position pos:line="80" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="40">&amp;<pos:position pos:line="80" pos:column="45"/></operator><name pos:line="80" pos:column="41">pid<pos:position pos:line="80" pos:column="44"/></name></expr></argument>)<pos:position pos:line="80" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="46"/></expr_stmt>
	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><name pos:line="81" pos:column="13">name<pos:position pos:line="81" pos:column="17"/></name></expr>)<pos:position pos:line="81" pos:column="18"/></condition><then pos:line="81" pos:column="18"> <block pos:line="81" pos:column="19">{
		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><name pos:line="82" pos:column="21">auto_gc<pos:position pos:line="82" pos:column="28"/></name></expr>)<pos:position pos:line="82" pos:column="29"/></condition><then pos:line="82" pos:column="29">
			<block type="pseudo"><return pos:line="83" pos:column="25">return <expr><literal type="number" pos:line="83" pos:column="32">0<pos:position pos:line="83" pos:column="33"/></literal></expr>;<pos:position pos:line="83" pos:column="34"/></return></block></then></if> <comment type="block" pos:line="83" pos:column="35">/* be quiet on --auto */</comment>
		<expr_stmt><expr><call><name pos:line="84" pos:column="17">die<pos:position pos:line="84" pos:column="20"/></name><argument_list pos:line="84" pos:column="20">(<argument><expr><call><name pos:line="84" pos:column="21">_<pos:position pos:line="84" pos:column="22"/></name><argument_list pos:line="84" pos:column="22">(<argument><expr><literal type="string" pos:line="84" pos:column="23">"gc is already running on machine '%s' pid %"<pos:position pos:line="84" pos:column="68"/></literal><name pos:line="84" pos:column="68">PRIuMAX<pos:position pos:line="84" pos:column="75"/></name><literal type="string" pos:line="84" pos:column="75">" (use --force if not)"<pos:position pos:line="84" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="99"/></argument_list></call></expr></argument>,
		    <argument><expr><name pos:line="85" pos:column="21">name<pos:position pos:line="85" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="27">(<pos:position pos:line="85" pos:column="28"/></operator><name pos:line="85" pos:column="28">uintmax_t<pos:position pos:line="85" pos:column="37"/></name><operator pos:line="85" pos:column="37">)<pos:position pos:line="85" pos:column="38"/></operator><name pos:line="85" pos:column="38">pid<pos:position pos:line="85" pos:column="41"/></name></expr></argument>)<pos:position pos:line="85" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="86" pos:column="10"/></block></then></if>

	<if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><name pos:line="88" pos:column="13">daemonized<pos:position pos:line="88" pos:column="23"/></name></expr>)<pos:position pos:line="88" pos:column="24"/></condition><then pos:line="88" pos:column="24"> <block pos:line="88" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="89" pos:column="17">hold_lock_file_for_update<pos:position pos:line="89" pos:column="42"/></name><argument_list pos:line="89" pos:column="42">(<argument><expr><operator pos:line="89" pos:column="43">&amp;<pos:position pos:line="89" pos:column="48"/></operator><name pos:line="89" pos:column="44">log_lock<pos:position pos:line="89" pos:column="52"/></name></expr></argument>,
					  <argument><expr><call><name pos:line="90" pos:column="43">git_path<pos:position pos:line="90" pos:column="51"/></name><argument_list pos:line="90" pos:column="51">(<argument><expr><literal type="string" pos:line="90" pos:column="52">"gc.log"<pos:position pos:line="90" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="61"/></argument_list></call></expr></argument>,
					  <argument><expr><name pos:line="91" pos:column="43">LOCK_DIE_ON_ERROR<pos:position pos:line="91" pos:column="60"/></name></expr></argument>)<pos:position pos:line="91" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="92" pos:column="17">dup2<pos:position pos:line="92" pos:column="21"/></name><argument_list pos:line="92" pos:column="21">(<argument><expr><call><name pos:line="92" pos:column="22">get_lock_file_fd<pos:position pos:line="92" pos:column="38"/></name><argument_list pos:line="92" pos:column="38">(<argument><expr><operator pos:line="92" pos:column="39">&amp;<pos:position pos:line="92" pos:column="44"/></operator><name pos:line="92" pos:column="40">log_lock<pos:position pos:line="92" pos:column="48"/></name></expr></argument>)<pos:position pos:line="92" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="51">2<pos:position pos:line="92" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="93" pos:column="17">sigchain_push_common<pos:position pos:line="93" pos:column="37"/></name><argument_list pos:line="93" pos:column="37">(<argument><expr><name pos:line="93" pos:column="38">process_log_file_on_signal<pos:position pos:line="93" pos:column="64"/></name></expr></argument>)<pos:position pos:line="93" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="94" pos:column="17">atexit<pos:position pos:line="94" pos:column="23"/></name><argument_list pos:line="94" pos:column="23">(<argument><expr><name pos:line="94" pos:column="24">process_log_file_at_exit<pos:position pos:line="94" pos:column="48"/></name></expr></argument>)<pos:position pos:line="94" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="95" pos:column="10"/></block></then></if>

	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><call><name pos:line="97" pos:column="13">gc_before_repack<pos:position pos:line="97" pos:column="29"/></name><argument_list pos:line="97" pos:column="29">()<pos:position pos:line="97" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="32"/></condition><then pos:line="97" pos:column="32">
		<block type="pseudo"><return pos:line="98" pos:column="17">return <expr><operator pos:line="98" pos:column="24">-<pos:position pos:line="98" pos:column="25"/></operator><literal type="number" pos:line="98" pos:column="25">1<pos:position pos:line="98" pos:column="26"/></literal></expr>;<pos:position pos:line="98" pos:column="27"/></return></block></then></if>

	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><operator pos:line="100" pos:column="13">!<pos:position pos:line="100" pos:column="14"/></operator><name pos:line="100" pos:column="14">repository_format_precious_objects<pos:position pos:line="100" pos:column="48"/></name></expr>)<pos:position pos:line="100" pos:column="49"/></condition><then pos:line="100" pos:column="49"> <block pos:line="100" pos:column="50">{
		<if pos:line="101" pos:column="17">if <condition pos:line="101" pos:column="20">(<expr><call><name pos:line="101" pos:column="21">run_command_v_opt<pos:position pos:line="101" pos:column="38"/></name><argument_list pos:line="101" pos:column="38">(<argument><expr><name><name pos:line="101" pos:column="39">repack<pos:position pos:line="101" pos:column="45"/></name><operator pos:line="101" pos:column="45">.<pos:position pos:line="101" pos:column="46"/></operator><name pos:line="101" pos:column="46">argv<pos:position pos:line="101" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="52">RUN_GIT_CMD<pos:position pos:line="101" pos:column="63"/></name></expr></argument>)<pos:position pos:line="101" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="65"/></condition><then pos:line="101" pos:column="65">
			<block type="pseudo"><return pos:line="102" pos:column="25">return <expr><call><name pos:line="102" pos:column="32">error<pos:position pos:line="102" pos:column="37"/></name><argument_list pos:line="102" pos:column="37">(<argument><expr><name pos:line="102" pos:column="38">FAILED_RUN<pos:position pos:line="102" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="50">repack<pos:position pos:line="102" pos:column="56"/></name><operator pos:line="102" pos:column="56">.<pos:position pos:line="102" pos:column="57"/></operator><name pos:line="102" pos:column="57">argv<pos:position pos:line="102" pos:column="61"/></name><index pos:line="102" pos:column="61">[<expr><literal type="number" pos:line="102" pos:column="62">0<pos:position pos:line="102" pos:column="63"/></literal></expr>]<pos:position pos:line="102" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="102" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="66"/></return></block></then></if>

		<if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">(<expr><name pos:line="104" pos:column="21">prune_expire<pos:position pos:line="104" pos:column="33"/></name></expr>)<pos:position pos:line="104" pos:column="34"/></condition><then pos:line="104" pos:column="34"> <block pos:line="104" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="105" pos:column="25">argv_array_push<pos:position pos:line="105" pos:column="40"/></name><argument_list pos:line="105" pos:column="40">(<argument><expr><operator pos:line="105" pos:column="41">&amp;<pos:position pos:line="105" pos:column="46"/></operator><name pos:line="105" pos:column="42">prune<pos:position pos:line="105" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="49">prune_expire<pos:position pos:line="105" pos:column="61"/></name></expr></argument>)<pos:position pos:line="105" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="63"/></expr_stmt>
			<if pos:line="106" pos:column="25">if <condition pos:line="106" pos:column="28">(<expr><name pos:line="106" pos:column="29">quiet<pos:position pos:line="106" pos:column="34"/></name></expr>)<pos:position pos:line="106" pos:column="35"/></condition><then pos:line="106" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="33">argv_array_push<pos:position pos:line="107" pos:column="48"/></name><argument_list pos:line="107" pos:column="48">(<argument><expr><operator pos:line="107" pos:column="49">&amp;<pos:position pos:line="107" pos:column="54"/></operator><name pos:line="107" pos:column="50">prune<pos:position pos:line="107" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="57">"--no-progress"<pos:position pos:line="107" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="74"/></expr_stmt></block></then></if>
			<if pos:line="108" pos:column="25">if <condition pos:line="108" pos:column="28">(<expr><call><name pos:line="108" pos:column="29">run_command_v_opt<pos:position pos:line="108" pos:column="46"/></name><argument_list pos:line="108" pos:column="46">(<argument><expr><name><name pos:line="108" pos:column="47">prune<pos:position pos:line="108" pos:column="52"/></name><operator pos:line="108" pos:column="52">.<pos:position pos:line="108" pos:column="53"/></operator><name pos:line="108" pos:column="53">argv<pos:position pos:line="108" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="59">RUN_GIT_CMD<pos:position pos:line="108" pos:column="70"/></name></expr></argument>)<pos:position pos:line="108" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="108" pos:column="72"/></condition><then pos:line="108" pos:column="72">
				<block type="pseudo"><return pos:line="109" pos:column="33">return <expr><call><name pos:line="109" pos:column="40">error<pos:position pos:line="109" pos:column="45"/></name><argument_list pos:line="109" pos:column="45">(<argument><expr><name pos:line="109" pos:column="46">FAILED_RUN<pos:position pos:line="109" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="58">prune<pos:position pos:line="109" pos:column="63"/></name><operator pos:line="109" pos:column="63">.<pos:position pos:line="109" pos:column="64"/></operator><name pos:line="109" pos:column="64">argv<pos:position pos:line="109" pos:column="68"/></name><index pos:line="109" pos:column="68">[<expr><literal type="number" pos:line="109" pos:column="69">0<pos:position pos:line="109" pos:column="70"/></literal></expr>]<pos:position pos:line="109" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="109" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="73"/></return></block></then></if>
		}<pos:position pos:line="110" pos:column="18"/></block></then></if>
	}<pos:position pos:line="111" pos:column="10"/></block></then></if>

	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name pos:line="113" pos:column="13">prune_worktrees_expire<pos:position pos:line="113" pos:column="35"/></name></expr>)<pos:position pos:line="113" pos:column="36"/></condition><then pos:line="113" pos:column="36"> <block pos:line="113" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="114" pos:column="17">argv_array_push<pos:position pos:line="114" pos:column="32"/></name><argument_list pos:line="114" pos:column="32">(<argument><expr><operator pos:line="114" pos:column="33">&amp;<pos:position pos:line="114" pos:column="38"/></operator><name pos:line="114" pos:column="34">prune_worktrees<pos:position pos:line="114" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="51">prune_worktrees_expire<pos:position pos:line="114" pos:column="73"/></name></expr></argument>)<pos:position pos:line="114" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="75"/></expr_stmt>
		<if pos:line="115" pos:column="17">if <condition pos:line="115" pos:column="20">(<expr><call><name pos:line="115" pos:column="21">run_command_v_opt<pos:position pos:line="115" pos:column="38"/></name><argument_list pos:line="115" pos:column="38">(<argument><expr><name><name pos:line="115" pos:column="39">prune_worktrees<pos:position pos:line="115" pos:column="54"/></name><operator pos:line="115" pos:column="54">.<pos:position pos:line="115" pos:column="55"/></operator><name pos:line="115" pos:column="55">argv<pos:position pos:line="115" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="61">RUN_GIT_CMD<pos:position pos:line="115" pos:column="72"/></name></expr></argument>)<pos:position pos:line="115" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="115" pos:column="74"/></condition><then pos:line="115" pos:column="74">
			<block type="pseudo"><return pos:line="116" pos:column="25">return <expr><call><name pos:line="116" pos:column="32">error<pos:position pos:line="116" pos:column="37"/></name><argument_list pos:line="116" pos:column="37">(<argument><expr><name pos:line="116" pos:column="38">FAILED_RUN<pos:position pos:line="116" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="50">prune_worktrees<pos:position pos:line="116" pos:column="65"/></name><operator pos:line="116" pos:column="65">.<pos:position pos:line="116" pos:column="66"/></operator><name pos:line="116" pos:column="66">argv<pos:position pos:line="116" pos:column="70"/></name><index pos:line="116" pos:column="70">[<expr><literal type="number" pos:line="116" pos:column="71">0<pos:position pos:line="116" pos:column="72"/></literal></expr>]<pos:position pos:line="116" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="116" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="75"/></return></block></then></if>
	}<pos:position pos:line="117" pos:column="10"/></block></then></if>

	<if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><call><name pos:line="119" pos:column="13">run_command_v_opt<pos:position pos:line="119" pos:column="30"/></name><argument_list pos:line="119" pos:column="30">(<argument><expr><name><name pos:line="119" pos:column="31">rerere<pos:position pos:line="119" pos:column="37"/></name><operator pos:line="119" pos:column="37">.<pos:position pos:line="119" pos:column="38"/></operator><name pos:line="119" pos:column="38">argv<pos:position pos:line="119" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="44">RUN_GIT_CMD<pos:position pos:line="119" pos:column="55"/></name></expr></argument>)<pos:position pos:line="119" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="119" pos:column="57"/></condition><then pos:line="119" pos:column="57">
		<block type="pseudo"><return pos:line="120" pos:column="17">return <expr><call><name pos:line="120" pos:column="24">error<pos:position pos:line="120" pos:column="29"/></name><argument_list pos:line="120" pos:column="29">(<argument><expr><name pos:line="120" pos:column="30">FAILED_RUN<pos:position pos:line="120" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="42">rerere<pos:position pos:line="120" pos:column="48"/></name><operator pos:line="120" pos:column="48">.<pos:position pos:line="120" pos:column="49"/></operator><name pos:line="120" pos:column="49">argv<pos:position pos:line="120" pos:column="53"/></name><index pos:line="120" pos:column="53">[<expr><literal type="number" pos:line="120" pos:column="54">0<pos:position pos:line="120" pos:column="55"/></literal></expr>]<pos:position pos:line="120" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="120" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="58"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="122" pos:column="9">report_garbage<pos:position pos:line="122" pos:column="23"/></name> <operator pos:line="122" pos:column="24">=<pos:position pos:line="122" pos:column="25"/></operator> <name pos:line="122" pos:column="26">report_pack_garbage<pos:position pos:line="122" pos:column="45"/></name></expr>;<pos:position pos:line="122" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="123" pos:column="9">reprepare_packed_git<pos:position pos:line="123" pos:column="29"/></name><argument_list pos:line="123" pos:column="29">()<pos:position pos:line="123" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="32"/></expr_stmt>
	<if pos:line="124" pos:column="9">if <condition pos:line="124" pos:column="12">(<expr><name><name pos:line="124" pos:column="13">pack_garbage<pos:position pos:line="124" pos:column="25"/></name><operator pos:line="124" pos:column="25">.<pos:position pos:line="124" pos:column="26"/></operator><name pos:line="124" pos:column="26">nr<pos:position pos:line="124" pos:column="28"/></name></name> <operator pos:line="124" pos:column="29">&gt;<pos:position pos:line="124" pos:column="33"/></operator> <literal type="number" pos:line="124" pos:column="31">0<pos:position pos:line="124" pos:column="32"/></literal></expr>)<pos:position pos:line="124" pos:column="33"/></condition><then pos:line="124" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="125" pos:column="17">clean_pack_garbage<pos:position pos:line="125" pos:column="35"/></name><argument_list pos:line="125" pos:column="35">()<pos:position pos:line="125" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="38"/></expr_stmt></block></then></if>

	<if pos:line="127" pos:column="9">if <condition pos:line="127" pos:column="12">(<expr><name pos:line="127" pos:column="13">auto_gc<pos:position pos:line="127" pos:column="20"/></name> <operator pos:line="127" pos:column="21">&amp;&amp;<pos:position pos:line="127" pos:column="31"/></operator> <call><name pos:line="127" pos:column="24">too_many_loose_objects<pos:position pos:line="127" pos:column="46"/></name><argument_list pos:line="127" pos:column="46">()<pos:position pos:line="127" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="49"/></condition><then pos:line="127" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="128" pos:column="17">warning<pos:position pos:line="128" pos:column="24"/></name><argument_list pos:line="128" pos:column="24">(<argument><expr><call><name pos:line="128" pos:column="25">_<pos:position pos:line="128" pos:column="26"/></name><argument_list pos:line="128" pos:column="26">(<argument><expr><literal type="string" pos:line="128" pos:column="27">"There are too many unreachable loose objects; "<pos:position pos:line="128" pos:column="75"/></literal>
			<literal type="string" pos:line="129" pos:column="25">"run 'git prune' to remove them."<pos:position pos:line="129" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="129" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="61"/></expr_stmt></block></then></if>

	<return pos:line="131" pos:column="9">return <expr><literal type="number" pos:line="131" pos:column="16">0<pos:position pos:line="131" pos:column="17"/></literal></expr>;<pos:position pos:line="131" pos:column="18"/></return>
}<pos:position pos:line="132" pos:column="2"/></block></function></unit>

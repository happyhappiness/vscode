<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_359_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">verify_hdr<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">cache_header<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">hdr<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">unsigned<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">long<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">size<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">git_SHA_CTX<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">c<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name></type> <name><name pos:line="4" pos:column="23">sha1<pos:position pos:line="4" pos:column="27"/></name><index pos:line="4" pos:column="27">[<expr><literal type="number" pos:line="4" pos:column="28">20<pos:position pos:line="4" pos:column="30"/></literal></expr>]<pos:position pos:line="4" pos:column="31"/></index></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">hdr_version<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">hdr<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">hdr_signature<pos:position pos:line="7" pos:column="31"/></name></name> <operator pos:line="7" pos:column="32">!=<pos:position pos:line="7" pos:column="34"/></operator> <call><name pos:line="7" pos:column="35">htonl<pos:position pos:line="7" pos:column="40"/></name><argument_list pos:line="7" pos:column="40">(<argument><expr><name pos:line="7" pos:column="41">CACHE_SIGNATURE<pos:position pos:line="7" pos:column="56"/></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="58"/></condition><then pos:line="7" pos:column="58">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><call><name pos:line="8" pos:column="24">error<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><literal type="string" pos:line="8" pos:column="30">"bad signature"<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="9" pos:column="9">hdr_version<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <call><name pos:line="9" pos:column="23">ntohl<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name><name pos:line="9" pos:column="29">hdr<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">hdr_version<pos:position pos:line="9" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="47"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">hdr_version<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">&lt;<pos:position pos:line="10" pos:column="29"/></operator> <name pos:line="10" pos:column="27">INDEX_FORMAT_LB<pos:position pos:line="10" pos:column="42"/></name> <operator pos:line="10" pos:column="43">||<pos:position pos:line="10" pos:column="45"/></operator> <name pos:line="10" pos:column="46">INDEX_FORMAT_UB<pos:position pos:line="10" pos:column="61"/></name> <operator pos:line="10" pos:column="62">&lt;<pos:position pos:line="10" pos:column="66"/></operator> <name pos:line="10" pos:column="64">hdr_version<pos:position pos:line="10" pos:column="75"/></name></expr>)<pos:position pos:line="10" pos:column="76"/></condition><then pos:line="10" pos:column="76">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><call><name pos:line="11" pos:column="24">error<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><literal type="string" pos:line="11" pos:column="30">"bad index version %d"<pos:position pos:line="11" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">hdr_version<pos:position pos:line="11" pos:column="65"/></name></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="67"/></return></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">verify_index_checksum<pos:position pos:line="13" pos:column="35"/></name></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">git_SHA1_Init<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><operator pos:line="16" pos:column="23">&amp;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="24">c<pos:position pos:line="16" pos:column="25"/></name></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">git_SHA1_Update<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><operator pos:line="17" pos:column="25">&amp;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="26">c<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="29">hdr<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">size<pos:position pos:line="17" pos:column="38"/></name> <operator pos:line="17" pos:column="39">-<pos:position pos:line="17" pos:column="40"/></operator> <literal type="number" pos:line="17" pos:column="41">20<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">git_SHA1_Final<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">sha1<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="30">&amp;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="31">c<pos:position pos:line="18" pos:column="32"/></name></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">hashcmp<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">sha1<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="27">(<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">unsigned<pos:position pos:line="19" pos:column="36"/></name> <name pos:line="19" pos:column="37">char<pos:position pos:line="19" pos:column="41"/></name> <operator pos:line="19" pos:column="42">*<pos:position pos:line="19" pos:column="43"/></operator><operator pos:line="19" pos:column="43">)<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="44">hdr<pos:position pos:line="19" pos:column="47"/></name> <operator pos:line="19" pos:column="48">+<pos:position pos:line="19" pos:column="49"/></operator> <name pos:line="19" pos:column="50">size<pos:position pos:line="19" pos:column="54"/></name> <operator pos:line="19" pos:column="55">-<pos:position pos:line="19" pos:column="56"/></operator> <literal type="number" pos:line="19" pos:column="57">20<pos:position pos:line="19" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="61"/></condition><then pos:line="19" pos:column="61">
		<block type="pseudo"><return pos:line="20" pos:column="17">return <expr><call><name pos:line="20" pos:column="24">error<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><literal type="string" pos:line="20" pos:column="30">"bad index file sha1 signature"<pos:position pos:line="20" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="63"/></return></block></then></if>
	<return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

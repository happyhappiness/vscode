<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2938.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">verify_signed_buffer<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">payload<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">size_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">payload_size<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">signature<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">size_t<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">signature_size<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="3" pos:column="26">struct<pos:position pos:line="3" pos:column="32"/></name> <name pos:line="3" pos:column="33">strbuf<pos:position pos:line="3" pos:column="39"/></name></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">gpg_output<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="3" pos:column="53">struct<pos:position pos:line="3" pos:column="59"/></name> <name pos:line="3" pos:column="60">strbuf<pos:position pos:line="3" pos:column="66"/></name></name> <modifier pos:line="3" pos:column="67">*<pos:position pos:line="3" pos:column="68"/></modifier></type><name pos:line="3" pos:column="68">gpg_status<pos:position pos:line="3" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="79"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">child_process<pos:position pos:line="5" pos:column="29"/></name></name></type> <name pos:line="5" pos:column="30">gpg<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><name pos:line="5" pos:column="36">CHILD_PROCESS_INIT<pos:position pos:line="5" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name><name pos:line="6" pos:column="21">args_gpg<pos:position pos:line="6" pos:column="29"/></name><index pos:line="6" pos:column="29">[]<pos:position pos:line="6" pos:column="31"/></index></name> <init pos:line="6" pos:column="32">= <expr><block pos:line="6" pos:column="34">{<expr><name pos:line="6" pos:column="35">NULL<pos:position pos:line="6" pos:column="39"/></name></expr>, <expr><literal type="string" pos:line="6" pos:column="41">"--status-fd=1"<pos:position pos:line="6" pos:column="56"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="58">"--verify"<pos:position pos:line="6" pos:column="68"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="70">"FILE"<pos:position pos:line="6" pos:column="76"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="78">"-"<pos:position pos:line="6" pos:column="81"/></literal></expr>, <expr><name pos:line="6" pos:column="83">NULL<pos:position pos:line="6" pos:column="87"/></name></expr>}<pos:position pos:line="6" pos:column="88"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="89"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">path<pos:position pos:line="7" pos:column="18"/></name><index pos:line="7" pos:column="18">[<expr><name pos:line="7" pos:column="19">PATH_MAX<pos:position pos:line="7" pos:column="27"/></name></expr>]<pos:position pos:line="7" pos:column="28"/></index></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">fd<pos:position pos:line="8" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="17">ret<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">strbuf<pos:position pos:line="9" pos:column="22"/></name></name></type> <name pos:line="9" pos:column="23">buf<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name pos:line="9" pos:column="29">STRBUF_INIT<pos:position pos:line="9" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">strbuf<pos:position pos:line="10" pos:column="22"/></name></name> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">pbuf<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><operator pos:line="10" pos:column="31">&amp;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="32">buf<pos:position pos:line="10" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="12" pos:column="9">args_gpg<pos:position pos:line="12" pos:column="17"/></name><index pos:line="12" pos:column="17">[<expr><literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>]<pos:position pos:line="12" pos:column="20"/></index></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">gpg_program<pos:position pos:line="12" pos:column="34"/></name></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">fd<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">git_mkstemp<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">path<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">PATH_MAX<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="42">".git_vtag_tmpXXXXXX"<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">fd<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">&lt;<pos:position pos:line="14" pos:column="20"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><call><name pos:line="15" pos:column="24">error<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><call><name pos:line="15" pos:column="30">_<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><literal type="string" pos:line="15" pos:column="32">"could not create temporary file '%s': %s"<pos:position pos:line="15" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr></argument>,
			     <argument><expr><name pos:line="16" pos:column="30">path<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="36">strerror<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><name pos:line="16" pos:column="45">errno<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></return></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">write_in_full<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">fd<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="31">signature<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">signature_size<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call> <operator pos:line="17" pos:column="58">&lt;<pos:position pos:line="17" pos:column="62"/></operator> <literal type="number" pos:line="17" pos:column="60">0<pos:position pos:line="17" pos:column="61"/></literal></expr>)<pos:position pos:line="17" pos:column="62"/></condition><then pos:line="17" pos:column="62">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><call><name pos:line="18" pos:column="24">error<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><call><name pos:line="18" pos:column="30">_<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><literal type="string" pos:line="18" pos:column="32">"failed writing detached signature to '%s': %s"<pos:position pos:line="18" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call></expr></argument>,
			     <argument><expr><name pos:line="19" pos:column="30">path<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="36">strerror<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">(<argument><expr><name pos:line="19" pos:column="45">errno<pos:position pos:line="19" pos:column="50"/></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">close<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">fd<pos:position pos:line="20" pos:column="17"/></name></expr></argument>)<pos:position pos:line="20" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="22" pos:column="9">gpg<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">.<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">argv<pos:position pos:line="22" pos:column="17"/></name></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">args_gpg<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">gpg<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">.<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">in<pos:position pos:line="23" pos:column="15"/></name></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <operator pos:line="23" pos:column="18">-<pos:position pos:line="23" pos:column="19"/></operator><literal type="number" pos:line="23" pos:column="19">1<pos:position pos:line="23" pos:column="20"/></literal></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">gpg<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">.<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">out<pos:position pos:line="24" pos:column="16"/></name></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <operator pos:line="24" pos:column="19">-<pos:position pos:line="24" pos:column="20"/></operator><literal type="number" pos:line="24" pos:column="20">1<pos:position pos:line="24" pos:column="21"/></literal></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">gpg_output<pos:position pos:line="25" pos:column="23"/></name></expr>)<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="17">gpg<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">.<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">err<pos:position pos:line="26" pos:column="24"/></name></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <operator pos:line="26" pos:column="27">-<pos:position pos:line="26" pos:column="28"/></operator><literal type="number" pos:line="26" pos:column="28">1<pos:position pos:line="26" pos:column="29"/></literal></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">args_gpg<pos:position pos:line="27" pos:column="17"/></name><index pos:line="27" pos:column="17">[<expr><literal type="number" pos:line="27" pos:column="18">3<pos:position pos:line="27" pos:column="19"/></literal></expr>]<pos:position pos:line="27" pos:column="20"/></index></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="23">path<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">start_command<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><operator pos:line="28" pos:column="27">&amp;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="28">gpg<pos:position pos:line="28" pos:column="31"/></name></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33"> <block pos:line="28" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">unlink<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">path<pos:position pos:line="29" pos:column="28"/></name></expr></argument>)<pos:position pos:line="29" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><call><name pos:line="30" pos:column="24">error<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><call><name pos:line="30" pos:column="30">_<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><literal type="string" pos:line="30" pos:column="32">"could not run gpg."<pos:position pos:line="30" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="33" pos:column="9">write_in_full<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name><name pos:line="33" pos:column="23">gpg<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">.<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="27">in<pos:position pos:line="33" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="31">payload<pos:position pos:line="33" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="40">payload_size<pos:position pos:line="33" pos:column="52"/></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">close<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><name><name pos:line="34" pos:column="15">gpg<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">.<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">in<pos:position pos:line="34" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">gpg_output<pos:position pos:line="36" pos:column="23"/></name></expr>)<pos:position pos:line="36" pos:column="24"/></condition><then pos:line="36" pos:column="24"> <block pos:line="36" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">strbuf_read<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">gpg_output<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="41">gpg<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">.<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="45">err<pos:position pos:line="37" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="50">0<pos:position pos:line="37" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">close<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><name><name pos:line="38" pos:column="23">gpg<pos:position pos:line="38" pos:column="26"/></name><operator pos:line="38" pos:column="26">.<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="27">err<pos:position pos:line="38" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">gpg_status<pos:position pos:line="40" pos:column="23"/></name></expr>)<pos:position pos:line="40" pos:column="24"/></condition><then pos:line="40" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="17">pbuf<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="24">gpg_status<pos:position pos:line="41" pos:column="34"/></name></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">strbuf_read<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><name pos:line="42" pos:column="21">pbuf<pos:position pos:line="42" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="27">gpg<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">.<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="31">out<pos:position pos:line="42" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="36">0<pos:position pos:line="42" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">close<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><name><name pos:line="43" pos:column="15">gpg<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">.<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="19">out<pos:position pos:line="43" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>

	<expr_stmt><expr><name pos:line="45" pos:column="9">ret<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <call><name pos:line="45" pos:column="15">finish_command<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><operator pos:line="45" pos:column="30">&amp;<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="31">gpg<pos:position pos:line="45" pos:column="34"/></name></expr></argument>)<pos:position pos:line="45" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="36"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">unlink_or_warn<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><name pos:line="47" pos:column="24">path<pos:position pos:line="47" pos:column="28"/></name></expr></argument>)<pos:position pos:line="47" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><name pos:line="49" pos:column="9">ret<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">|=<pos:position pos:line="49" pos:column="15"/></operator> <operator pos:line="49" pos:column="16">!<pos:position pos:line="49" pos:column="17"/></operator><call><name pos:line="49" pos:column="17">strstr<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><name><name pos:line="49" pos:column="24">pbuf<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">-&gt;<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="30">buf<pos:position pos:line="49" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="35">"\n[GNUPG:] GOODSIG "<pos:position pos:line="49" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">strbuf_release<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><operator pos:line="50" pos:column="24">&amp;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="25">buf<pos:position pos:line="50" pos:column="28"/></name></expr></argument>)<pos:position pos:line="50" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt> <comment type="block" pos:line="50" pos:column="31">/* no matter it was used or not */</comment>

	<return pos:line="52" pos:column="9">return <expr><name pos:line="52" pos:column="16">ret<pos:position pos:line="52" pos:column="19"/></name></expr>;<pos:position pos:line="52" pos:column="20"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

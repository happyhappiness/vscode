<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4121_git-2.7.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">void<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">buffer_grow<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">ewah_bitmap<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">self<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">size_t<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">new_size<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">rlw_offset<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><operator pos:line="3" pos:column="29">(<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="30">uint8_t<pos:position pos:line="3" pos:column="37"/></name> <operator pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></operator><operator pos:line="3" pos:column="39">)<pos:position pos:line="3" pos:column="40"/></operator><name><name pos:line="3" pos:column="40">self<pos:position pos:line="3" pos:column="44"/></name><operator pos:line="3" pos:column="44">-&gt;<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="46">rlw<pos:position pos:line="3" pos:column="49"/></name></name> <operator pos:line="3" pos:column="50">-<pos:position pos:line="3" pos:column="51"/></operator> <operator pos:line="3" pos:column="52">(<pos:position pos:line="3" pos:column="53"/></operator><name pos:line="3" pos:column="53">uint8_t<pos:position pos:line="3" pos:column="60"/></name> <operator pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></operator><operator pos:line="3" pos:column="62">)<pos:position pos:line="3" pos:column="63"/></operator><name><name pos:line="3" pos:column="63">self<pos:position pos:line="3" pos:column="67"/></name><operator pos:line="3" pos:column="67">-&gt;<pos:position pos:line="3" pos:column="72"/></operator><name pos:line="3" pos:column="69">buffer<pos:position pos:line="3" pos:column="75"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="76"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">self<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">alloc_size<pos:position pos:line="5" pos:column="29"/></name></name> <operator pos:line="5" pos:column="30">&gt;=<pos:position pos:line="5" pos:column="35"/></operator> <name pos:line="5" pos:column="33">new_size<pos:position pos:line="5" pos:column="41"/></name></expr>)<pos:position pos:line="5" pos:column="42"/></condition><then pos:line="5" pos:column="42">
		<block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name><name pos:line="8" pos:column="9">self<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">alloc_size<pos:position pos:line="8" pos:column="25"/></name></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">new_size<pos:position pos:line="8" pos:column="36"/></name></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">REALLOC_ARRAY<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name><name pos:line="9" pos:column="23">self<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">buffer<pos:position pos:line="9" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="37">self<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">alloc_size<pos:position pos:line="9" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">self<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">rlw<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <name><name pos:line="10" pos:column="21">self<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">buffer<pos:position pos:line="10" pos:column="33"/></name></name> <operator pos:line="10" pos:column="34">+<pos:position pos:line="10" pos:column="35"/></operator> <operator pos:line="10" pos:column="36">(<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="37">rlw_offset<pos:position pos:line="10" pos:column="47"/></name> <operator pos:line="10" pos:column="48">/<pos:position pos:line="10" pos:column="49"/></operator> <sizeof pos:line="10" pos:column="50">sizeof<argument_list pos:line="10" pos:column="56">(<argument><expr><name pos:line="10" pos:column="57">eword_t<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></sizeof><operator pos:line="10" pos:column="65">)<pos:position pos:line="10" pos:column="66"/></operator></expr>;<pos:position pos:line="10" pos:column="67"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

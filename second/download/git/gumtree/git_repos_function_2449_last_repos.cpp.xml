<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2449_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">git_fnmatch<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">pathspec_item<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">item<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">pattern<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">string<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">int<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">prefix<pos:position pos:line="3" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="28"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">prefix<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">&gt;<pos:position pos:line="5" pos:column="24"/></operator> <literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr>)<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24"> <block pos:line="5" pos:column="25">{
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><call><name pos:line="6" pos:column="21">ps_strncmp<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><name pos:line="6" pos:column="32">item<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="38">pattern<pos:position pos:line="6" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="47">string<pos:position pos:line="6" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="55">prefix<pos:position pos:line="6" pos:column="61"/></name></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="63"/></condition><then pos:line="6" pos:column="63">
			<block type="pseudo"><return pos:line="7" pos:column="25">return <expr><name pos:line="7" pos:column="32">WM_NOMATCH<pos:position pos:line="7" pos:column="42"/></name></expr>;<pos:position pos:line="7" pos:column="43"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="8" pos:column="17">pattern<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">+=<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">prefix<pos:position pos:line="8" pos:column="34"/></name></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">string<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">+=<pos:position pos:line="9" pos:column="26"/></operator> <name pos:line="9" pos:column="27">prefix<pos:position pos:line="9" pos:column="33"/></name></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">item<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">flags<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">&amp;<pos:position pos:line="11" pos:column="30"/></operator> <name pos:line="11" pos:column="27">PATHSPEC_ONESTAR<pos:position pos:line="11" pos:column="43"/></name></expr>)<pos:position pos:line="11" pos:column="44"/></condition><then pos:line="11" pos:column="44"> <block pos:line="11" pos:column="45">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">int<pos:position pos:line="12" pos:column="20"/></name></type> <name pos:line="12" pos:column="21">pattern_len<pos:position pos:line="12" pos:column="32"/></name> <init pos:line="12" pos:column="33">= <expr><call><name pos:line="12" pos:column="35">strlen<pos:position pos:line="12" pos:column="41"/></name><argument_list pos:line="12" pos:column="41">(<argument><expr><operator pos:line="12" pos:column="42">++<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">pattern<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">string_len<pos:position pos:line="13" pos:column="31"/></name> <init pos:line="13" pos:column="32">= <expr><call><name pos:line="13" pos:column="34">strlen<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><expr><name pos:line="13" pos:column="41">string<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="49"/></decl_stmt>
		<return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">string_len<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">&lt;<pos:position pos:line="14" pos:column="39"/></operator> <name pos:line="14" pos:column="37">pattern_len<pos:position pos:line="14" pos:column="48"/></name> <operator pos:line="14" pos:column="49">||<pos:position pos:line="14" pos:column="51"/></operator>
			<call><name pos:line="15" pos:column="25">ps_strcmp<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">item<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">pattern<pos:position pos:line="15" pos:column="48"/></name></expr></argument>,
				  <argument><expr><name pos:line="16" pos:column="35">string<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">+<pos:position pos:line="16" pos:column="43"/></operator> <name pos:line="16" pos:column="44">string_len<pos:position pos:line="16" pos:column="54"/></name> <operator pos:line="16" pos:column="55">-<pos:position pos:line="16" pos:column="56"/></operator> <name pos:line="16" pos:column="57">pattern_len<pos:position pos:line="16" pos:column="68"/></name></expr></argument>)<pos:position pos:line="16" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="70"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">item<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">magic<pos:position pos:line="18" pos:column="24"/></name></name> <operator pos:line="18" pos:column="25">&amp;<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="27">PATHSPEC_GLOB<pos:position pos:line="18" pos:column="40"/></name></expr>)<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><call><name pos:line="19" pos:column="24">wildmatch<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">pattern<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">string<pos:position pos:line="19" pos:column="49"/></name></expr></argument>,
				 <argument><expr><name pos:line="20" pos:column="34">WM_PATHNAME<pos:position pos:line="20" pos:column="45"/></name> <operator pos:line="20" pos:column="46">|<pos:position pos:line="20" pos:column="47"/></operator>
				 <operator pos:line="21" pos:column="34">(<pos:position pos:line="21" pos:column="35"/></operator><ternary><condition><expr><name><name pos:line="21" pos:column="35">item<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">-&gt;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="41">magic<pos:position pos:line="21" pos:column="46"/></name></name> <operator pos:line="21" pos:column="47">&amp;<pos:position pos:line="21" pos:column="52"/></operator> <name pos:line="21" pos:column="49">PATHSPEC_ICASE<pos:position pos:line="21" pos:column="63"/></name></expr> ?<pos:position pos:line="21" pos:column="65"/></condition><then pos:line="21" pos:column="65"> <expr><name pos:line="21" pos:column="66">WM_CASEFOLD<pos:position pos:line="21" pos:column="77"/></name></expr> <pos:position pos:line="21" pos:column="78"/></then><else pos:line="21" pos:column="78">: <expr><literal type="number" pos:line="21" pos:column="80">0<pos:position pos:line="21" pos:column="81"/></literal></expr></else></ternary><operator pos:line="21" pos:column="81">)<pos:position pos:line="21" pos:column="82"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="84"/></return></block></then>
	<else pos:line="22" pos:column="9">else
		<comment type="block" pos:line="23" pos:column="17">/* wildmatch has not learned no FNM_PATHNAME mode yet */</comment>
		<block type="pseudo"><return pos:line="24" pos:column="17">return <expr><call><name pos:line="24" pos:column="24">wildmatch<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">pattern<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">string<pos:position pos:line="24" pos:column="49"/></name></expr></argument>,
				 <argument><expr><ternary><condition><expr><name><name pos:line="25" pos:column="34">item<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">magic<pos:position pos:line="25" pos:column="45"/></name></name> <operator pos:line="25" pos:column="46">&amp;<pos:position pos:line="25" pos:column="51"/></operator> <name pos:line="25" pos:column="48">PATHSPEC_ICASE<pos:position pos:line="25" pos:column="62"/></name></expr> ?<pos:position pos:line="25" pos:column="64"/></condition><then pos:line="25" pos:column="64"> <expr><name pos:line="25" pos:column="65">WM_CASEFOLD<pos:position pos:line="25" pos:column="76"/></name></expr> <pos:position pos:line="25" pos:column="77"/></then><else pos:line="25" pos:column="77">: <expr><literal type="number" pos:line="25" pos:column="79">0<pos:position pos:line="25" pos:column="80"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="25" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="82"/></return></block></else></if>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

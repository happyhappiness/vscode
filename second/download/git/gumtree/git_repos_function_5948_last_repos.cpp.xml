<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5948_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">llist_item<pos:position pos:line="1" pos:column="32"/></name></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">llist_item_get<pos:position pos:line="1" pos:column="48"/></name><parameter_list pos:line="1" pos:column="48">(<parameter><decl><type><name pos:line="1" pos:column="49">void<pos:position pos:line="1" pos:column="53"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	struct <expr_stmt><expr><name pos:line="3" pos:column="16">llist_item<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></operator><operator pos:line="3" pos:column="28">new<pos:position pos:line="3" pos:column="31"/></operator></expr>;<pos:position pos:line="3" pos:column="32"/></expr_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">( <expr><name pos:line="4" pos:column="14">free_nodes<pos:position pos:line="4" pos:column="24"/></name></expr> )<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26"> <block pos:line="4" pos:column="27">{
		<expr_stmt><expr><operator pos:line="5" pos:column="17">new<pos:position pos:line="5" pos:column="20"/></operator> <operator pos:line="5" pos:column="21">=<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">free_nodes<pos:position pos:line="5" pos:column="33"/></name></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="6" pos:column="17">free_nodes<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">=<pos:position pos:line="6" pos:column="29"/></operator> <name><name pos:line="6" pos:column="30">free_nodes<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="42">next<pos:position pos:line="6" pos:column="46"/></name></name></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="7" pos:column="10"/></block></then> <else pos:line="7" pos:column="11">else <block pos:line="7" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">ALLOC_ARRAY<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><operator pos:line="9" pos:column="29">new<pos:position pos:line="9" pos:column="32"/></operator></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">BLKSIZE<pos:position pos:line="9" pos:column="41"/></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt>
		<for pos:line="10" pos:column="17">for <control pos:line="10" pos:column="21">(<init pos:line="10" pos:column="22">;<pos:position pos:line="10" pos:column="23"/></init> <condition><expr><name pos:line="10" pos:column="24">i<pos:position pos:line="10" pos:column="25"/></name> <operator pos:line="10" pos:column="26">&lt;<pos:position pos:line="10" pos:column="30"/></operator> <name pos:line="10" pos:column="28">BLKSIZE<pos:position pos:line="10" pos:column="35"/></name></expr>;<pos:position pos:line="10" pos:column="36"/></condition> <incr><expr><name pos:line="10" pos:column="37">i<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">++<pos:position pos:line="10" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="41"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="25">llist_item_put<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><operator pos:line="11" pos:column="40">&amp;<pos:position pos:line="11" pos:column="45"/></operator><operator pos:line="11" pos:column="41">new<pos:position pos:line="11" pos:column="44"/></operator><index pos:line="11" pos:column="44">[<expr><name pos:line="11" pos:column="45">i<pos:position pos:line="11" pos:column="46"/></name></expr>]<pos:position pos:line="11" pos:column="47"/></index></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt></block></for>
	}<pos:position pos:line="12" pos:column="10"/></block></else></if>
	<return pos:line="13" pos:column="9">return <expr><operator pos:line="13" pos:column="16">new<pos:position pos:line="13" pos:column="19"/></operator></expr>;<pos:position pos:line="13" pos:column="20"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

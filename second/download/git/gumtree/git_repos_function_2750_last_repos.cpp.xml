<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2750_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">parse_options_start<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">parse_opt_ctx_t<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ctx<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">argc<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier><modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">argv<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <name pos:line="2" pos:column="61">char<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">prefix<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="3" pos:column="26">const<pos:position pos:line="3" pos:column="31"/></specifier> <name><name pos:line="3" pos:column="32">struct<pos:position pos:line="3" pos:column="38"/></name> <name pos:line="3" pos:column="39">option<pos:position pos:line="3" pos:column="45"/></name></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">options<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="56">int<pos:position pos:line="3" pos:column="59"/></name></type> <name pos:line="3" pos:column="60">flags<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="66"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">memset<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">ctx<pos:position pos:line="5" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="24">sizeof<argument_list pos:line="5" pos:column="30">(<argument><expr><operator pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">ctx<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="6" pos:column="9">ctx<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">argc<pos:position pos:line="6" pos:column="18"/></name></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <name><name pos:line="6" pos:column="21">ctx<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">total<pos:position pos:line="6" pos:column="31"/></name></name> <operator pos:line="6" pos:column="32">=<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="34">argc<pos:position pos:line="6" pos:column="38"/></name> <operator pos:line="6" pos:column="39">-<pos:position pos:line="6" pos:column="40"/></operator> <literal type="number" pos:line="6" pos:column="41">1<pos:position pos:line="6" pos:column="42"/></literal></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">ctx<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">argv<pos:position pos:line="7" pos:column="18"/></name></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">argv<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">+<pos:position pos:line="7" pos:column="27"/></operator> <literal type="number" pos:line="7" pos:column="28">1<pos:position pos:line="7" pos:column="29"/></literal></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">ctx<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">out<pos:position pos:line="8" pos:column="17"/></name></name>  <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">argv<pos:position pos:line="8" pos:column="25"/></name></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">ctx<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">prefix<pos:position pos:line="9" pos:column="20"/></name></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">prefix<pos:position pos:line="9" pos:column="29"/></name></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">ctx<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">cpidx<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <operator pos:line="10" pos:column="22">(<pos:position pos:line="10" pos:column="23"/></operator><operator pos:line="10" pos:column="23">(<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">flags<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator> <name pos:line="10" pos:column="32">PARSE_OPT_KEEP_ARGV0<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">)<pos:position pos:line="10" pos:column="53"/></operator> <operator pos:line="10" pos:column="54">!=<pos:position pos:line="10" pos:column="56"/></operator> <literal type="number" pos:line="10" pos:column="57">0<pos:position pos:line="10" pos:column="58"/></literal><operator pos:line="10" pos:column="58">)<pos:position pos:line="10" pos:column="59"/></operator></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">ctx<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">flags<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">flags<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">flags<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">&amp;<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="22">PARSE_OPT_KEEP_UNKNOWN<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">)<pos:position pos:line="12" pos:column="45"/></operator> <operator pos:line="12" pos:column="46">&amp;&amp;<pos:position pos:line="12" pos:column="56"/></operator>
	    <operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">flags<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">&amp;<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="22">PARSE_OPT_STOP_AT_NON_OPTION<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">)<pos:position pos:line="13" pos:column="51"/></operator></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">die<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><literal type="string" pos:line="14" pos:column="21">"STOP_AT_NON_OPTION and KEEP_UNKNOWN don't go together"<pos:position pos:line="14" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="78"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">parse_options_check<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">options<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

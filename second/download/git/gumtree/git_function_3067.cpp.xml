<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_3067.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">handle_skipped_merge_base<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">unsigned<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">mb<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">mb_hex<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><call><name pos:line="3" pos:column="24">sha1_to_hex<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">(<argument><expr><name pos:line="3" pos:column="36">mb<pos:position pos:line="3" pos:column="38"/></name></expr></argument>)<pos:position pos:line="3" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">bad_hex<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><call><name pos:line="4" pos:column="25">sha1_to_hex<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">(<argument><expr><name><name pos:line="4" pos:column="37">current_bad_oid<pos:position pos:line="4" pos:column="52"/></name><operator pos:line="4" pos:column="52">-&gt;<pos:position pos:line="4" pos:column="57"/></operator><name pos:line="4" pos:column="54">hash<pos:position pos:line="4" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">good_hex<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><call><name pos:line="5" pos:column="26">join_sha1_array_hex<pos:position pos:line="5" pos:column="45"/></name><argument_list pos:line="5" pos:column="45">(<argument><expr><operator pos:line="5" pos:column="46">&amp;<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="47">good_revs<pos:position pos:line="5" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="5" pos:column="58">' '<pos:position pos:line="5" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="63"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">warning<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><literal type="string" pos:line="7" pos:column="17">"the merge base between %s and [%s] "<pos:position pos:line="7" pos:column="54"/></literal>
		<literal type="string" pos:line="8" pos:column="17">"must be skipped.\n"<pos:position pos:line="8" pos:column="37"/></literal>
		<literal type="string" pos:line="9" pos:column="17">"So we cannot be sure the first %s commit is "<pos:position pos:line="9" pos:column="63"/></literal>
		<literal type="string" pos:line="10" pos:column="17">"between %s and %s.\n"<pos:position pos:line="10" pos:column="39"/></literal>
		<literal type="string" pos:line="11" pos:column="17">"We continue anyway."<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>,
		<argument><expr><name pos:line="12" pos:column="17">bad_hex<pos:position pos:line="12" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="26">good_hex<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">term_bad<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">mb_hex<pos:position pos:line="12" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="54">bad_hex<pos:position pos:line="12" pos:column="61"/></name></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">free<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">good_hex<pos:position pos:line="13" pos:column="22"/></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

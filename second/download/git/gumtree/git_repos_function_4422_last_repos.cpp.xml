<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4422_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">refspec<pos:position pos:line="1" pos:column="22"/></name></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">parse_refspec_internal<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">nr_refspec<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="63">const<pos:position pos:line="1" pos:column="68"/></specifier> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier><modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">refspec<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="85">int<pos:position pos:line="1" pos:column="88"/></name></type> <name pos:line="1" pos:column="89">fetch<pos:position pos:line="1" pos:column="94"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="96">int<pos:position pos:line="1" pos:column="99"/></name></type> <name pos:line="1" pos:column="100">verify<pos:position pos:line="1" pos:column="106"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="107"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">refspec<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">rs<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><call><name pos:line="4" pos:column="30">xcalloc<pos:position pos:line="4" pos:column="37"/></name><argument_list pos:line="4" pos:column="37">(<argument><expr><name pos:line="4" pos:column="38">nr_refspec<pos:position pos:line="4" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="50">sizeof<argument_list pos:line="4" pos:column="56">(<argument><expr><operator pos:line="4" pos:column="57">*<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="58">rs<pos:position pos:line="4" pos:column="60"/></name></expr></argument>)<pos:position pos:line="4" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="63"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="25">nr_refspec<pos:position pos:line="6" pos:column="35"/></name></expr>;<pos:position pos:line="6" pos:column="36"/></condition> <incr><expr><name pos:line="6" pos:column="37">i<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">++<pos:position pos:line="6" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="41"/></control> <block pos:line="6" pos:column="42">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">size_t<pos:position pos:line="7" pos:column="23"/></name></type> <name pos:line="7" pos:column="24">llen<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">is_glob<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">lhs<pos:position pos:line="9" pos:column="32"/></name></decl>, <modifier pos:line="9" pos:column="34">*<pos:position pos:line="9" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="35">rhs<pos:position pos:line="9" pos:column="38"/></name></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">int<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">flags<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>

		<expr_stmt><expr><name pos:line="12" pos:column="17">is_glob<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">=<pos:position pos:line="12" pos:column="26"/></operator> <literal type="number" pos:line="12" pos:column="27">0<pos:position pos:line="12" pos:column="28"/></literal></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>

		<expr_stmt><expr><name pos:line="14" pos:column="17">lhs<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name><name pos:line="14" pos:column="23">refspec<pos:position pos:line="14" pos:column="30"/></name><index pos:line="14" pos:column="30">[<expr><name pos:line="14" pos:column="31">i<pos:position pos:line="14" pos:column="32"/></name></expr>]<pos:position pos:line="14" pos:column="33"/></index></name></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">lhs<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">==<pos:position pos:line="15" pos:column="28"/></operator> <literal type="char" pos:line="15" pos:column="29">'+'<pos:position pos:line="15" pos:column="32"/></literal></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <block pos:line="15" pos:column="34">{
			<expr_stmt><expr><name><name pos:line="16" pos:column="25">rs<pos:position pos:line="16" pos:column="27"/></name><index pos:line="16" pos:column="27">[<expr><name pos:line="16" pos:column="28">i<pos:position pos:line="16" pos:column="29"/></name></expr>]<pos:position pos:line="16" pos:column="30"/></index></name><operator pos:line="16" pos:column="30">.<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">force<pos:position pos:line="16" pos:column="36"/></name> <operator pos:line="16" pos:column="37">=<pos:position pos:line="16" pos:column="38"/></operator> <literal type="number" pos:line="16" pos:column="39">1<pos:position pos:line="16" pos:column="40"/></literal></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="17" pos:column="25">lhs<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">++<pos:position pos:line="17" pos:column="30"/></operator></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="20" pos:column="17">rhs<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <call><name pos:line="20" pos:column="23">strrchr<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">lhs<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="36">':'<pos:position pos:line="20" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>

		<comment type="block" pos:line="22" pos:column="17">/*
		 * Before going on, special case ":" (or "+:") as a refspec
		 * for pushing matching refs.
		 */</comment>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">fetch<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">&amp;&amp;<pos:position pos:line="26" pos:column="38"/></operator> <name pos:line="26" pos:column="31">rhs<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">==<pos:position pos:line="26" pos:column="37"/></operator> <name pos:line="26" pos:column="38">lhs<pos:position pos:line="26" pos:column="41"/></name> <operator pos:line="26" pos:column="42">&amp;&amp;<pos:position pos:line="26" pos:column="52"/></operator> <name><name pos:line="26" pos:column="45">rhs<pos:position pos:line="26" pos:column="48"/></name><index pos:line="26" pos:column="48">[<expr><literal type="number" pos:line="26" pos:column="49">1<pos:position pos:line="26" pos:column="50"/></literal></expr>]<pos:position pos:line="26" pos:column="51"/></index></name> <operator pos:line="26" pos:column="52">==<pos:position pos:line="26" pos:column="54"/></operator> <literal type="char" pos:line="26" pos:column="55">'\0'<pos:position pos:line="26" pos:column="59"/></literal></expr>)<pos:position pos:line="26" pos:column="60"/></condition><then pos:line="26" pos:column="60"> <block pos:line="26" pos:column="61">{
			<expr_stmt><expr><name><name pos:line="27" pos:column="25">rs<pos:position pos:line="27" pos:column="27"/></name><index pos:line="27" pos:column="27">[<expr><name pos:line="27" pos:column="28">i<pos:position pos:line="27" pos:column="29"/></name></expr>]<pos:position pos:line="27" pos:column="30"/></index></name><operator pos:line="27" pos:column="30">.<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="31">matching<pos:position pos:line="27" pos:column="39"/></name> <operator pos:line="27" pos:column="40">=<pos:position pos:line="27" pos:column="41"/></operator> <literal type="number" pos:line="27" pos:column="42">1<pos:position pos:line="27" pos:column="43"/></literal></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
			<continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">rhs<pos:position pos:line="31" pos:column="24"/></name></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25"> <block pos:line="31" pos:column="26">{
			<decl_stmt><decl><type><name pos:line="32" pos:column="25">size_t<pos:position pos:line="32" pos:column="31"/></name></type> <name pos:line="32" pos:column="32">rlen<pos:position pos:line="32" pos:column="36"/></name> <init pos:line="32" pos:column="37">= <expr><call><name pos:line="32" pos:column="39">strlen<pos:position pos:line="32" pos:column="45"/></name><argument_list pos:line="32" pos:column="45">(<argument><expr><operator pos:line="32" pos:column="46">++<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="48">rhs<pos:position pos:line="32" pos:column="51"/></name></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="53"/></decl_stmt>
			<expr_stmt><expr><name pos:line="33" pos:column="25">is_glob<pos:position pos:line="33" pos:column="32"/></name> <operator pos:line="33" pos:column="33">=<pos:position pos:line="33" pos:column="34"/></operator> <operator pos:line="33" pos:column="35">(<pos:position pos:line="33" pos:column="36"/></operator><literal type="number" pos:line="33" pos:column="36">1<pos:position pos:line="33" pos:column="37"/></literal> <operator pos:line="33" pos:column="38">&lt;=<pos:position pos:line="33" pos:column="43"/></operator> <name pos:line="33" pos:column="41">rlen<pos:position pos:line="33" pos:column="45"/></name> <operator pos:line="33" pos:column="46">&amp;&amp;<pos:position pos:line="33" pos:column="56"/></operator> <call><name pos:line="33" pos:column="49">strchr<pos:position pos:line="33" pos:column="55"/></name><argument_list pos:line="33" pos:column="55">(<argument><expr><name pos:line="33" pos:column="56">rhs<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="33" pos:column="61">'*'<pos:position pos:line="33" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call><operator pos:line="33" pos:column="65">)<pos:position pos:line="33" pos:column="66"/></operator></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="34" pos:column="25">rs<pos:position pos:line="34" pos:column="27"/></name><index pos:line="34" pos:column="27">[<expr><name pos:line="34" pos:column="28">i<pos:position pos:line="34" pos:column="29"/></name></expr>]<pos:position pos:line="34" pos:column="30"/></index></name><operator pos:line="34" pos:column="30">.<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="31">dst<pos:position pos:line="34" pos:column="34"/></name> <operator pos:line="34" pos:column="35">=<pos:position pos:line="34" pos:column="36"/></operator> <call><name pos:line="34" pos:column="37">xstrndup<pos:position pos:line="34" pos:column="45"/></name><argument_list pos:line="34" pos:column="45">(<argument><expr><name pos:line="34" pos:column="46">rhs<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="51">rlen<pos:position pos:line="34" pos:column="55"/></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="37" pos:column="17">llen<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><ternary><condition><expr><name pos:line="37" pos:column="25">rhs<pos:position pos:line="37" pos:column="28"/></name></expr> ?<pos:position pos:line="37" pos:column="30"/></condition><then pos:line="37" pos:column="30"> <expr><operator pos:line="37" pos:column="31">(<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="32">rhs<pos:position pos:line="37" pos:column="35"/></name> <operator pos:line="37" pos:column="36">-<pos:position pos:line="37" pos:column="37"/></operator> <name pos:line="37" pos:column="38">lhs<pos:position pos:line="37" pos:column="41"/></name> <operator pos:line="37" pos:column="42">-<pos:position pos:line="37" pos:column="43"/></operator> <literal type="number" pos:line="37" pos:column="44">1<pos:position pos:line="37" pos:column="45"/></literal><operator pos:line="37" pos:column="45">)<pos:position pos:line="37" pos:column="46"/></operator></expr> <pos:position pos:line="37" pos:column="47"/></then><else pos:line="37" pos:column="47">: <expr><call><name pos:line="37" pos:column="49">strlen<pos:position pos:line="37" pos:column="55"/></name><argument_list pos:line="37" pos:column="55">(<argument><expr><name pos:line="37" pos:column="56">lhs<pos:position pos:line="37" pos:column="59"/></name></expr></argument>)<pos:position pos:line="37" pos:column="60"/></argument_list></call></expr></else></ternary><operator pos:line="37" pos:column="60">)<pos:position pos:line="37" pos:column="61"/></operator></expr>;<pos:position pos:line="37" pos:column="62"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><literal type="number" pos:line="38" pos:column="21">1<pos:position pos:line="38" pos:column="22"/></literal> <operator pos:line="38" pos:column="23">&lt;=<pos:position pos:line="38" pos:column="28"/></operator> <name pos:line="38" pos:column="26">llen<pos:position pos:line="38" pos:column="30"/></name> <operator pos:line="38" pos:column="31">&amp;&amp;<pos:position pos:line="38" pos:column="41"/></operator> <call><name pos:line="38" pos:column="34">memchr<pos:position pos:line="38" pos:column="40"/></name><argument_list pos:line="38" pos:column="40">(<argument><expr><name pos:line="38" pos:column="41">lhs<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="46">'*'<pos:position pos:line="38" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="51">llen<pos:position pos:line="38" pos:column="55"/></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="57"/></condition><then pos:line="38" pos:column="57"> <block pos:line="38" pos:column="58">{
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><operator pos:line="39" pos:column="29">(<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">rhs<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">&amp;&amp;<pos:position pos:line="39" pos:column="44"/></operator> <operator pos:line="39" pos:column="37">!<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="38">is_glob<pos:position pos:line="39" pos:column="45"/></name><operator pos:line="39" pos:column="45">)<pos:position pos:line="39" pos:column="46"/></operator> <operator pos:line="39" pos:column="47">||<pos:position pos:line="39" pos:column="49"/></operator> <operator pos:line="39" pos:column="50">(<pos:position pos:line="39" pos:column="51"/></operator><operator pos:line="39" pos:column="51">!<pos:position pos:line="39" pos:column="52"/></operator><name pos:line="39" pos:column="52">rhs<pos:position pos:line="39" pos:column="55"/></name> <operator pos:line="39" pos:column="56">&amp;&amp;<pos:position pos:line="39" pos:column="66"/></operator> <name pos:line="39" pos:column="59">fetch<pos:position pos:line="39" pos:column="64"/></name><operator pos:line="39" pos:column="64">)<pos:position pos:line="39" pos:column="65"/></operator></expr>)<pos:position pos:line="39" pos:column="66"/></condition><then pos:line="39" pos:column="66">
				<block type="pseudo"><goto pos:line="40" pos:column="33">goto <name pos:line="40" pos:column="38">invalid<pos:position pos:line="40" pos:column="45"/></name>;<pos:position pos:line="40" pos:column="46"/></goto></block></then></if>
			<expr_stmt><expr><name pos:line="41" pos:column="25">is_glob<pos:position pos:line="41" pos:column="32"/></name> <operator pos:line="41" pos:column="33">=<pos:position pos:line="41" pos:column="34"/></operator> <literal type="number" pos:line="41" pos:column="35">1<pos:position pos:line="41" pos:column="36"/></literal></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="42" pos:column="18"/></block></then> <elseif pos:line="42" pos:column="19">else <if pos:line="42" pos:column="24">if <condition pos:line="42" pos:column="27">(<expr><name pos:line="42" pos:column="28">rhs<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">&amp;&amp;<pos:position pos:line="42" pos:column="42"/></operator> <name pos:line="42" pos:column="35">is_glob<pos:position pos:line="42" pos:column="42"/></name></expr>)<pos:position pos:line="42" pos:column="43"/></condition><then pos:line="42" pos:column="43"> <block pos:line="42" pos:column="44">{
			<goto pos:line="43" pos:column="25">goto <name pos:line="43" pos:column="30">invalid<pos:position pos:line="43" pos:column="37"/></name>;<pos:position pos:line="43" pos:column="38"/></goto>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if></elseif></if>

		<expr_stmt><expr><name><name pos:line="46" pos:column="17">rs<pos:position pos:line="46" pos:column="19"/></name><index pos:line="46" pos:column="19">[<expr><name pos:line="46" pos:column="20">i<pos:position pos:line="46" pos:column="21"/></name></expr>]<pos:position pos:line="46" pos:column="22"/></index></name><operator pos:line="46" pos:column="22">.<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="23">pattern<pos:position pos:line="46" pos:column="30"/></name> <operator pos:line="46" pos:column="31">=<pos:position pos:line="46" pos:column="32"/></operator> <name pos:line="46" pos:column="33">is_glob<pos:position pos:line="46" pos:column="40"/></name></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="47" pos:column="17">rs<pos:position pos:line="47" pos:column="19"/></name><index pos:line="47" pos:column="19">[<expr><name pos:line="47" pos:column="20">i<pos:position pos:line="47" pos:column="21"/></name></expr>]<pos:position pos:line="47" pos:column="22"/></index></name><operator pos:line="47" pos:column="22">.<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="23">src<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">=<pos:position pos:line="47" pos:column="28"/></operator> <call><name pos:line="47" pos:column="29">xstrndup<pos:position pos:line="47" pos:column="37"/></name><argument_list pos:line="47" pos:column="37">(<argument><expr><name pos:line="47" pos:column="38">lhs<pos:position pos:line="47" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="43">llen<pos:position pos:line="47" pos:column="47"/></name></expr></argument>)<pos:position pos:line="47" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="48" pos:column="17">flags<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">=<pos:position pos:line="48" pos:column="24"/></operator> <name pos:line="48" pos:column="25">REFNAME_ALLOW_ONELEVEL<pos:position pos:line="48" pos:column="47"/></name> <operator pos:line="48" pos:column="48">|<pos:position pos:line="48" pos:column="49"/></operator> <operator pos:line="48" pos:column="50">(<pos:position pos:line="48" pos:column="51"/></operator><ternary><condition><expr><name pos:line="48" pos:column="51">is_glob<pos:position pos:line="48" pos:column="58"/></name></expr> ?<pos:position pos:line="48" pos:column="60"/></condition><then pos:line="48" pos:column="60"> <expr><name pos:line="48" pos:column="61">REFNAME_REFSPEC_PATTERN<pos:position pos:line="48" pos:column="84"/></name></expr> <pos:position pos:line="48" pos:column="85"/></then><else pos:line="48" pos:column="85">: <expr><literal type="number" pos:line="48" pos:column="87">0<pos:position pos:line="48" pos:column="88"/></literal></expr></else></ternary><operator pos:line="48" pos:column="88">)<pos:position pos:line="48" pos:column="89"/></operator></expr>;<pos:position pos:line="48" pos:column="90"/></expr_stmt>

		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">fetch<pos:position pos:line="50" pos:column="26"/></name></expr>)<pos:position pos:line="50" pos:column="27"/></condition><then pos:line="50" pos:column="27"> <block pos:line="50" pos:column="28">{
			<decl_stmt><decl><type><name><name pos:line="51" pos:column="25">struct<pos:position pos:line="51" pos:column="31"/></name> <name pos:line="51" pos:column="32">object_id<pos:position pos:line="51" pos:column="41"/></name></name></type> <name pos:line="51" pos:column="42">unused<pos:position pos:line="51" pos:column="48"/></name></decl>;<pos:position pos:line="51" pos:column="49"/></decl_stmt>

			<comment type="block" pos:line="53" pos:column="25">/* LHS */</comment>
			<if pos:line="54" pos:column="25">if <condition pos:line="54" pos:column="28">(<expr><operator pos:line="54" pos:column="29">!<pos:position pos:line="54" pos:column="30"/></operator><operator pos:line="54" pos:column="30">*<pos:position pos:line="54" pos:column="31"/></operator><name><name pos:line="54" pos:column="31">rs<pos:position pos:line="54" pos:column="33"/></name><index pos:line="54" pos:column="33">[<expr><name pos:line="54" pos:column="34">i<pos:position pos:line="54" pos:column="35"/></name></expr>]<pos:position pos:line="54" pos:column="36"/></index></name><operator pos:line="54" pos:column="36">.<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="37">src<pos:position pos:line="54" pos:column="40"/></name></expr>)<pos:position pos:line="54" pos:column="41"/></condition><then pos:line="54" pos:column="41">
				<block type="pseudo"><empty_stmt pos:line="55" pos:column="33">;<pos:position pos:line="55" pos:column="34"/></empty_stmt></block></then> <comment type="block" pos:line="55" pos:column="35">/* empty is ok; it means "HEAD" */</comment>
			<elseif pos:line="56" pos:column="25">else <if pos:line="56" pos:column="30">if <condition pos:line="56" pos:column="33">(<expr><name pos:line="56" pos:column="34">llen<pos:position pos:line="56" pos:column="38"/></name> <operator pos:line="56" pos:column="39">==<pos:position pos:line="56" pos:column="41"/></operator> <name pos:line="56" pos:column="42">GIT_SHA1_HEXSZ<pos:position pos:line="56" pos:column="56"/></name> <operator pos:line="56" pos:column="57">&amp;&amp;<pos:position pos:line="56" pos:column="67"/></operator> <operator pos:line="56" pos:column="60">!<pos:position pos:line="56" pos:column="61"/></operator><call><name pos:line="56" pos:column="61">get_oid_hex<pos:position pos:line="56" pos:column="72"/></name><argument_list pos:line="56" pos:column="72">(<argument><expr><name><name pos:line="56" pos:column="73">rs<pos:position pos:line="56" pos:column="75"/></name><index pos:line="56" pos:column="75">[<expr><name pos:line="56" pos:column="76">i<pos:position pos:line="56" pos:column="77"/></name></expr>]<pos:position pos:line="56" pos:column="78"/></index></name><operator pos:line="56" pos:column="78">.<pos:position pos:line="56" pos:column="79"/></operator><name pos:line="56" pos:column="79">src<pos:position pos:line="56" pos:column="82"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="84">&amp;<pos:position pos:line="56" pos:column="89"/></operator><name pos:line="56" pos:column="85">unused<pos:position pos:line="56" pos:column="91"/></name></expr></argument>)<pos:position pos:line="56" pos:column="92"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="93"/></condition><then pos:line="56" pos:column="93">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="33">rs<pos:position pos:line="57" pos:column="35"/></name><index pos:line="57" pos:column="35">[<expr><name pos:line="57" pos:column="36">i<pos:position pos:line="57" pos:column="37"/></name></expr>]<pos:position pos:line="57" pos:column="38"/></index></name><operator pos:line="57" pos:column="38">.<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="39">exact_sha1<pos:position pos:line="57" pos:column="49"/></name> <operator pos:line="57" pos:column="50">=<pos:position pos:line="57" pos:column="51"/></operator> <literal type="number" pos:line="57" pos:column="52">1<pos:position pos:line="57" pos:column="53"/></literal></expr>;<pos:position pos:line="57" pos:column="54"/></expr_stmt></block></then></if></elseif> <comment type="block" pos:line="57" pos:column="55">/* ok */</comment>
			<elseif pos:line="58" pos:column="25">else <if pos:line="58" pos:column="30">if <condition pos:line="58" pos:column="33">(<expr><operator pos:line="58" pos:column="34">!<pos:position pos:line="58" pos:column="35"/></operator><call><name pos:line="58" pos:column="35">check_refname_format<pos:position pos:line="58" pos:column="55"/></name><argument_list pos:line="58" pos:column="55">(<argument><expr><name><name pos:line="58" pos:column="56">rs<pos:position pos:line="58" pos:column="58"/></name><index pos:line="58" pos:column="58">[<expr><name pos:line="58" pos:column="59">i<pos:position pos:line="58" pos:column="60"/></name></expr>]<pos:position pos:line="58" pos:column="61"/></index></name><operator pos:line="58" pos:column="61">.<pos:position pos:line="58" pos:column="62"/></operator><name pos:line="58" pos:column="62">src<pos:position pos:line="58" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="67">flags<pos:position pos:line="58" pos:column="72"/></name></expr></argument>)<pos:position pos:line="58" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="74"/></condition><then pos:line="58" pos:column="74">
				<block type="pseudo"><empty_stmt pos:line="59" pos:column="33">;<pos:position pos:line="59" pos:column="34"/></empty_stmt></block></then></if></elseif> <comment type="block" pos:line="59" pos:column="35">/* valid looking ref is ok */</comment>
			<else pos:line="60" pos:column="25">else
				<block type="pseudo"><goto pos:line="61" pos:column="33">goto <name pos:line="61" pos:column="38">invalid<pos:position pos:line="61" pos:column="45"/></name>;<pos:position pos:line="61" pos:column="46"/></goto></block></else></if>
			<comment type="block" pos:line="62" pos:column="25">/* RHS */</comment>
			<if pos:line="63" pos:column="25">if <condition pos:line="63" pos:column="28">(<expr><operator pos:line="63" pos:column="29">!<pos:position pos:line="63" pos:column="30"/></operator><name><name pos:line="63" pos:column="30">rs<pos:position pos:line="63" pos:column="32"/></name><index pos:line="63" pos:column="32">[<expr><name pos:line="63" pos:column="33">i<pos:position pos:line="63" pos:column="34"/></name></expr>]<pos:position pos:line="63" pos:column="35"/></index></name><operator pos:line="63" pos:column="35">.<pos:position pos:line="63" pos:column="36"/></operator><name pos:line="63" pos:column="36">dst<pos:position pos:line="63" pos:column="39"/></name></expr>)<pos:position pos:line="63" pos:column="40"/></condition><then pos:line="63" pos:column="40">
				<block type="pseudo"><empty_stmt pos:line="64" pos:column="33">;<pos:position pos:line="64" pos:column="34"/></empty_stmt></block></then> <comment type="block" pos:line="64" pos:column="35">/* missing is ok; it is the same as empty */</comment>
			<elseif pos:line="65" pos:column="25">else <if pos:line="65" pos:column="30">if <condition pos:line="65" pos:column="33">(<expr><operator pos:line="65" pos:column="34">!<pos:position pos:line="65" pos:column="35"/></operator><operator pos:line="65" pos:column="35">*<pos:position pos:line="65" pos:column="36"/></operator><name><name pos:line="65" pos:column="36">rs<pos:position pos:line="65" pos:column="38"/></name><index pos:line="65" pos:column="38">[<expr><name pos:line="65" pos:column="39">i<pos:position pos:line="65" pos:column="40"/></name></expr>]<pos:position pos:line="65" pos:column="41"/></index></name><operator pos:line="65" pos:column="41">.<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="42">dst<pos:position pos:line="65" pos:column="45"/></name></expr>)<pos:position pos:line="65" pos:column="46"/></condition><then pos:line="65" pos:column="46">
				<block type="pseudo"><empty_stmt pos:line="66" pos:column="33">;<pos:position pos:line="66" pos:column="34"/></empty_stmt></block></then></if></elseif> <comment type="block" pos:line="66" pos:column="35">/* empty is ok; it means "do not store" */</comment>
			<elseif pos:line="67" pos:column="25">else <if pos:line="67" pos:column="30">if <condition pos:line="67" pos:column="33">(<expr><operator pos:line="67" pos:column="34">!<pos:position pos:line="67" pos:column="35"/></operator><call><name pos:line="67" pos:column="35">check_refname_format<pos:position pos:line="67" pos:column="55"/></name><argument_list pos:line="67" pos:column="55">(<argument><expr><name><name pos:line="67" pos:column="56">rs<pos:position pos:line="67" pos:column="58"/></name><index pos:line="67" pos:column="58">[<expr><name pos:line="67" pos:column="59">i<pos:position pos:line="67" pos:column="60"/></name></expr>]<pos:position pos:line="67" pos:column="61"/></index></name><operator pos:line="67" pos:column="61">.<pos:position pos:line="67" pos:column="62"/></operator><name pos:line="67" pos:column="62">dst<pos:position pos:line="67" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="67">flags<pos:position pos:line="67" pos:column="72"/></name></expr></argument>)<pos:position pos:line="67" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="74"/></condition><then pos:line="67" pos:column="74">
				<block type="pseudo"><empty_stmt pos:line="68" pos:column="33">;<pos:position pos:line="68" pos:column="34"/></empty_stmt></block></then></if></elseif> <comment type="block" pos:line="68" pos:column="35">/* valid looking ref is ok */</comment>
			<else pos:line="69" pos:column="25">else
				<block type="pseudo"><goto pos:line="70" pos:column="33">goto <name pos:line="70" pos:column="38">invalid<pos:position pos:line="70" pos:column="45"/></name>;<pos:position pos:line="70" pos:column="46"/></goto></block></else></if>
		}<pos:position pos:line="71" pos:column="18"/></block></then> <else pos:line="71" pos:column="19">else <block pos:line="71" pos:column="24">{
			<comment type="block" pos:line="72" pos:column="25">/*
			 * LHS
			 * - empty is allowed; it means delete.
			 * - when wildcarded, it must be a valid looking ref.
			 * - otherwise, it must be an extended SHA-1, but
			 *   there is no existing way to validate this.
			 */</comment>
			<if pos:line="79" pos:column="25">if <condition pos:line="79" pos:column="28">(<expr><operator pos:line="79" pos:column="29">!<pos:position pos:line="79" pos:column="30"/></operator><operator pos:line="79" pos:column="30">*<pos:position pos:line="79" pos:column="31"/></operator><name><name pos:line="79" pos:column="31">rs<pos:position pos:line="79" pos:column="33"/></name><index pos:line="79" pos:column="33">[<expr><name pos:line="79" pos:column="34">i<pos:position pos:line="79" pos:column="35"/></name></expr>]<pos:position pos:line="79" pos:column="36"/></index></name><operator pos:line="79" pos:column="36">.<pos:position pos:line="79" pos:column="37"/></operator><name pos:line="79" pos:column="37">src<pos:position pos:line="79" pos:column="40"/></name></expr>)<pos:position pos:line="79" pos:column="41"/></condition><then pos:line="79" pos:column="41">
				<block type="pseudo"><empty_stmt pos:line="80" pos:column="33">;<pos:position pos:line="80" pos:column="34"/></empty_stmt></block></then> <comment type="block" pos:line="80" pos:column="35">/* empty is ok */</comment>
			<elseif pos:line="81" pos:column="25">else <if pos:line="81" pos:column="30">if <condition pos:line="81" pos:column="33">(<expr><name pos:line="81" pos:column="34">is_glob<pos:position pos:line="81" pos:column="41"/></name></expr>)<pos:position pos:line="81" pos:column="42"/></condition><then pos:line="81" pos:column="42"> <block pos:line="81" pos:column="43">{
				<if pos:line="82" pos:column="33">if <condition pos:line="82" pos:column="36">(<expr><call><name pos:line="82" pos:column="37">check_refname_format<pos:position pos:line="82" pos:column="57"/></name><argument_list pos:line="82" pos:column="57">(<argument><expr><name><name pos:line="82" pos:column="58">rs<pos:position pos:line="82" pos:column="60"/></name><index pos:line="82" pos:column="60">[<expr><name pos:line="82" pos:column="61">i<pos:position pos:line="82" pos:column="62"/></name></expr>]<pos:position pos:line="82" pos:column="63"/></index></name><operator pos:line="82" pos:column="63">.<pos:position pos:line="82" pos:column="64"/></operator><name pos:line="82" pos:column="64">src<pos:position pos:line="82" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="69">flags<pos:position pos:line="82" pos:column="74"/></name></expr></argument>)<pos:position pos:line="82" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="76"/></condition><then pos:line="82" pos:column="76">
					<block type="pseudo"><goto pos:line="83" pos:column="41">goto <name pos:line="83" pos:column="46">invalid<pos:position pos:line="83" pos:column="53"/></name>;<pos:position pos:line="83" pos:column="54"/></goto></block></then></if>
			}<pos:position pos:line="84" pos:column="26"/></block></then></if></elseif>
			<else pos:line="85" pos:column="25">else
				<block type="pseudo"><empty_stmt pos:line="86" pos:column="33">;<pos:position pos:line="86" pos:column="34"/></empty_stmt></block></else></if> <comment type="block" pos:line="86" pos:column="35">/* anything goes, for now */</comment>
			<comment type="block" pos:line="87" pos:column="25">/*
			 * RHS
			 * - missing is allowed, but LHS then must be a
			 *   valid looking ref.
			 * - empty is not allowed.
			 * - otherwise it must be a valid looking ref.
			 */</comment>
			<if pos:line="94" pos:column="25">if <condition pos:line="94" pos:column="28">(<expr><operator pos:line="94" pos:column="29">!<pos:position pos:line="94" pos:column="30"/></operator><name><name pos:line="94" pos:column="30">rs<pos:position pos:line="94" pos:column="32"/></name><index pos:line="94" pos:column="32">[<expr><name pos:line="94" pos:column="33">i<pos:position pos:line="94" pos:column="34"/></name></expr>]<pos:position pos:line="94" pos:column="35"/></index></name><operator pos:line="94" pos:column="35">.<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="36">dst<pos:position pos:line="94" pos:column="39"/></name></expr>)<pos:position pos:line="94" pos:column="40"/></condition><then pos:line="94" pos:column="40"> <block pos:line="94" pos:column="41">{
				<if pos:line="95" pos:column="33">if <condition pos:line="95" pos:column="36">(<expr><call><name pos:line="95" pos:column="37">check_refname_format<pos:position pos:line="95" pos:column="57"/></name><argument_list pos:line="95" pos:column="57">(<argument><expr><name><name pos:line="95" pos:column="58">rs<pos:position pos:line="95" pos:column="60"/></name><index pos:line="95" pos:column="60">[<expr><name pos:line="95" pos:column="61">i<pos:position pos:line="95" pos:column="62"/></name></expr>]<pos:position pos:line="95" pos:column="63"/></index></name><operator pos:line="95" pos:column="63">.<pos:position pos:line="95" pos:column="64"/></operator><name pos:line="95" pos:column="64">src<pos:position pos:line="95" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="69">flags<pos:position pos:line="95" pos:column="74"/></name></expr></argument>)<pos:position pos:line="95" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="76"/></condition><then pos:line="95" pos:column="76">
					<block type="pseudo"><goto pos:line="96" pos:column="41">goto <name pos:line="96" pos:column="46">invalid<pos:position pos:line="96" pos:column="53"/></name>;<pos:position pos:line="96" pos:column="54"/></goto></block></then></if>
			}<pos:position pos:line="97" pos:column="26"/></block></then> <elseif pos:line="97" pos:column="27">else <if pos:line="97" pos:column="32">if <condition pos:line="97" pos:column="35">(<expr><operator pos:line="97" pos:column="36">!<pos:position pos:line="97" pos:column="37"/></operator><operator pos:line="97" pos:column="37">*<pos:position pos:line="97" pos:column="38"/></operator><name><name pos:line="97" pos:column="38">rs<pos:position pos:line="97" pos:column="40"/></name><index pos:line="97" pos:column="40">[<expr><name pos:line="97" pos:column="41">i<pos:position pos:line="97" pos:column="42"/></name></expr>]<pos:position pos:line="97" pos:column="43"/></index></name><operator pos:line="97" pos:column="43">.<pos:position pos:line="97" pos:column="44"/></operator><name pos:line="97" pos:column="44">dst<pos:position pos:line="97" pos:column="47"/></name></expr>)<pos:position pos:line="97" pos:column="48"/></condition><then pos:line="97" pos:column="48"> <block pos:line="97" pos:column="49">{
				<goto pos:line="98" pos:column="33">goto <name pos:line="98" pos:column="38">invalid<pos:position pos:line="98" pos:column="45"/></name>;<pos:position pos:line="98" pos:column="46"/></goto>
			}<pos:position pos:line="99" pos:column="26"/></block></then></if></elseif> <else pos:line="99" pos:column="27">else <block pos:line="99" pos:column="32">{
				<if pos:line="100" pos:column="33">if <condition pos:line="100" pos:column="36">(<expr><call><name pos:line="100" pos:column="37">check_refname_format<pos:position pos:line="100" pos:column="57"/></name><argument_list pos:line="100" pos:column="57">(<argument><expr><name><name pos:line="100" pos:column="58">rs<pos:position pos:line="100" pos:column="60"/></name><index pos:line="100" pos:column="60">[<expr><name pos:line="100" pos:column="61">i<pos:position pos:line="100" pos:column="62"/></name></expr>]<pos:position pos:line="100" pos:column="63"/></index></name><operator pos:line="100" pos:column="63">.<pos:position pos:line="100" pos:column="64"/></operator><name pos:line="100" pos:column="64">dst<pos:position pos:line="100" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="69">flags<pos:position pos:line="100" pos:column="74"/></name></expr></argument>)<pos:position pos:line="100" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="76"/></condition><then pos:line="100" pos:column="76">
					<block type="pseudo"><goto pos:line="101" pos:column="41">goto <name pos:line="101" pos:column="46">invalid<pos:position pos:line="101" pos:column="53"/></name>;<pos:position pos:line="101" pos:column="54"/></goto></block></then></if>
			}<pos:position pos:line="102" pos:column="26"/></block></else></if>
		}<pos:position pos:line="103" pos:column="18"/></block></else></if>
	}<pos:position pos:line="104" pos:column="10"/></block></for>
	<return pos:line="105" pos:column="9">return <expr><name pos:line="105" pos:column="16">rs<pos:position pos:line="105" pos:column="18"/></name></expr>;<pos:position pos:line="105" pos:column="19"/></return>

 <label><name pos:line="107" pos:column="2">invalid<pos:position pos:line="107" pos:column="9"/></name>:<pos:position pos:line="107" pos:column="10"/></label>
	<if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><name pos:line="108" pos:column="13">verify<pos:position pos:line="108" pos:column="19"/></name></expr>)<pos:position pos:line="108" pos:column="20"/></condition><then pos:line="108" pos:column="20"> <block pos:line="108" pos:column="21">{
		<comment type="block" pos:line="109" pos:column="17">/*
		 * nr_refspec must be greater than zero and i must be valid
		 * since it is only possible to reach this point from within
		 * the for loop above.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="114" pos:column="17">free_refspec<pos:position pos:line="114" pos:column="29"/></name><argument_list pos:line="114" pos:column="29">(<argument><expr><name pos:line="114" pos:column="30">i<pos:position pos:line="114" pos:column="31"/></name><operator pos:line="114" pos:column="31">+<pos:position pos:line="114" pos:column="32"/></operator><literal type="number" pos:line="114" pos:column="32">1<pos:position pos:line="114" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="35">rs<pos:position pos:line="114" pos:column="37"/></name></expr></argument>)<pos:position pos:line="114" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="39"/></expr_stmt>
		<return pos:line="115" pos:column="17">return <expr><name pos:line="115" pos:column="24">NULL<pos:position pos:line="115" pos:column="28"/></name></expr>;<pos:position pos:line="115" pos:column="29"/></return>
	}<pos:position pos:line="116" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="117" pos:column="9">die<pos:position pos:line="117" pos:column="12"/></name><argument_list pos:line="117" pos:column="12">(<argument><expr><literal type="string" pos:line="117" pos:column="13">"Invalid refspec '%s'"<pos:position pos:line="117" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="37">refspec<pos:position pos:line="117" pos:column="44"/></name><index pos:line="117" pos:column="44">[<expr><name pos:line="117" pos:column="45">i<pos:position pos:line="117" pos:column="46"/></name></expr>]<pos:position pos:line="117" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="117" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="49"/></expr_stmt>
}<pos:position pos:line="118" pos:column="2"/></block></function></unit>

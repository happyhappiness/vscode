<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3198_git-2.13.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">line_log_filter<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">rev_info<pos:position pos:line="1" pos:column="36"/></name></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">rev<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">commit<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit_list<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">list<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><name><name pos:line="4" pos:column="36">rev<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">commits<pos:position pos:line="4" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit_list<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">out<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name pos:line="5" pos:column="35">NULL<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="41">*<pos:position pos:line="5" pos:column="42"/></modifier><modifier pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="43">pp<pos:position pos:line="5" pos:column="45"/></name> <init pos:line="5" pos:column="46">= <expr><operator pos:line="5" pos:column="48">&amp;<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="49">out<pos:position pos:line="5" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>

	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">list<pos:position pos:line="7" pos:column="20"/></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition> <block pos:line="7" pos:column="22">{
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">commit_list<pos:position pos:line="8" pos:column="35"/></name></name> <modifier pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></modifier></type><name pos:line="8" pos:column="37">to_free<pos:position pos:line="8" pos:column="44"/></name> <init pos:line="8" pos:column="45">= <expr><name pos:line="8" pos:column="47">NULL<pos:position pos:line="8" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="52"/></decl_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">commit<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <name><name pos:line="9" pos:column="26">list<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">item<pos:position pos:line="9" pos:column="36"/></name></name></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><call><name pos:line="10" pos:column="21">process_ranges_arbitrary_commit<pos:position pos:line="10" pos:column="52"/></name><argument_list pos:line="10" pos:column="52">(<argument><expr><name pos:line="10" pos:column="53">rev<pos:position pos:line="10" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="58">commit<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="66"/></condition><then pos:line="10" pos:column="66"> <block pos:line="10" pos:column="67">{
			<expr_stmt><expr><operator pos:line="11" pos:column="25">*<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">pp<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <name pos:line="11" pos:column="31">list<pos:position pos:line="11" pos:column="35"/></name></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="12" pos:column="25">pp<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">=<pos:position pos:line="12" pos:column="29"/></operator> <operator pos:line="12" pos:column="30">&amp;<pos:position pos:line="12" pos:column="35"/></operator><name><name pos:line="12" pos:column="31">list<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">next<pos:position pos:line="12" pos:column="41"/></name></name></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="13" pos:column="18"/></block></then> <else pos:line="13" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">to_free<pos:position pos:line="14" pos:column="32"/></name> <operator pos:line="14" pos:column="33">=<pos:position pos:line="14" pos:column="34"/></operator> <name pos:line="14" pos:column="35">list<pos:position pos:line="14" pos:column="39"/></name></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="15" pos:column="17">list<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <name><name pos:line="15" pos:column="24">list<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">next<pos:position pos:line="15" pos:column="34"/></name></name></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">free<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">to_free<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></while>
	<expr_stmt><expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">pp<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">NULL<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>

	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">list<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">out<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></init> <condition><expr><name pos:line="20" pos:column="26">list<pos:position pos:line="20" pos:column="30"/></name></expr>;<pos:position pos:line="20" pos:column="31"/></condition> <incr><expr><name pos:line="20" pos:column="32">list<pos:position pos:line="20" pos:column="36"/></name> <operator pos:line="20" pos:column="37">=<pos:position pos:line="20" pos:column="38"/></operator> <name><name pos:line="20" pos:column="39">list<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">next<pos:position pos:line="20" pos:column="49"/></name></name></expr></incr>)<pos:position pos:line="20" pos:column="50"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">rewrite_parents<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">rev<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="38">list<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">-&gt;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="44">item<pos:position pos:line="21" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">line_log_rewrite_one<pos:position pos:line="21" pos:column="70"/></name></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt></block></for>

	<expr_stmt><expr><name><name pos:line="23" pos:column="9">rev<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">commits<pos:position pos:line="23" pos:column="21"/></name></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">out<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>

	<return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3627_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">commit_list<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">best_bisection_sorted<pos:position pos:line="1" pos:column="49"/></name><parameter_list pos:line="1" pos:column="49">(<parameter><decl><type><name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">commit_list<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">list<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="76">int<pos:position pos:line="1" pos:column="79"/></name></type> <name pos:line="1" pos:column="80">nr<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit_list<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">p<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit_dist<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">array<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><call><name pos:line="4" pos:column="37">xcalloc<pos:position pos:line="4" pos:column="44"/></name><argument_list pos:line="4" pos:column="44">(<argument><expr><name pos:line="4" pos:column="45">nr<pos:position pos:line="4" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="49">sizeof<argument_list pos:line="4" pos:column="55">(<argument><expr><operator pos:line="4" pos:column="56">*<pos:position pos:line="4" pos:column="57"/></operator><name pos:line="4" pos:column="57">array<pos:position pos:line="4" pos:column="62"/></name></expr></argument>)<pos:position pos:line="4" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">buf<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">STRBUF_INIT<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">cnt<pos:position pos:line="6" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="18">i<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">p<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">list<pos:position pos:line="8" pos:column="22"/></name></expr><operator pos:line="8" pos:column="22">,<pos:position pos:line="8" pos:column="23"/></operator> <expr><name pos:line="8" pos:column="24">cnt<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal></expr>;<pos:position pos:line="8" pos:column="32"/></init> <condition><expr><name pos:line="8" pos:column="33">p<pos:position pos:line="8" pos:column="34"/></name></expr>;<pos:position pos:line="8" pos:column="35"/></condition> <incr><expr><name pos:line="8" pos:column="36">p<pos:position pos:line="8" pos:column="37"/></name> <operator pos:line="8" pos:column="38">=<pos:position pos:line="8" pos:column="39"/></operator> <name><name pos:line="8" pos:column="40">p<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">-&gt;<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="43">next<pos:position pos:line="8" pos:column="47"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="48"/></control> <block pos:line="8" pos:column="49">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">distance<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">unsigned<pos:position pos:line="10" pos:column="25"/></name></type> <name pos:line="10" pos:column="26">flags<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><name><name pos:line="10" pos:column="34">p<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">item<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">object<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">.<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="50">flags<pos:position pos:line="10" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="56"/></decl_stmt>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">flags<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">&amp;<pos:position pos:line="12" pos:column="32"/></operator> <name pos:line="12" pos:column="29">TREESAME<pos:position pos:line="12" pos:column="37"/></name></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38">
			<block type="pseudo"><continue pos:line="13" pos:column="25">continue;<pos:position pos:line="13" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="14" pos:column="17">distance<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="28">weight<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">p<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">nr<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">-<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="26">distance<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">&lt;<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="37">distance<pos:position pos:line="15" pos:column="45"/></name></expr>)<pos:position pos:line="15" pos:column="46"/></condition><then pos:line="15" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="25">distance<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">=<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="36">nr<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">-<pos:position pos:line="16" pos:column="40"/></operator> <name pos:line="16" pos:column="41">distance<pos:position pos:line="16" pos:column="49"/></name></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="17" pos:column="17">array<pos:position pos:line="17" pos:column="22"/></name><index pos:line="17" pos:column="22">[<expr><name pos:line="17" pos:column="23">cnt<pos:position pos:line="17" pos:column="26"/></name></expr>]<pos:position pos:line="17" pos:column="27"/></index></name><operator pos:line="17" pos:column="27">.<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">commit<pos:position pos:line="17" pos:column="34"/></name> <operator pos:line="17" pos:column="35">=<pos:position pos:line="17" pos:column="36"/></operator> <name><name pos:line="17" pos:column="37">p<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">-&gt;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="40">item<pos:position pos:line="17" pos:column="44"/></name></name></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">array<pos:position pos:line="18" pos:column="22"/></name><index pos:line="18" pos:column="22">[<expr><name pos:line="18" pos:column="23">cnt<pos:position pos:line="18" pos:column="26"/></name></expr>]<pos:position pos:line="18" pos:column="27"/></index></name><operator pos:line="18" pos:column="27">.<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">distance<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">=<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="39">distance<pos:position pos:line="18" pos:column="47"/></name></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">cnt<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">++<pos:position pos:line="19" pos:column="22"/></operator></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">QSORT<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><name pos:line="21" pos:column="15">array<pos:position pos:line="21" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="22">cnt<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="27">compare_commit_dist<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">p<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">list<pos:position pos:line="22" pos:column="22"/></name></expr><operator pos:line="22" pos:column="22">,<pos:position pos:line="22" pos:column="23"/></operator> <expr><name pos:line="22" pos:column="24">i<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr>;<pos:position pos:line="22" pos:column="30"/></init> <condition><expr><name pos:line="22" pos:column="31">i<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">&lt;<pos:position pos:line="22" pos:column="37"/></operator> <name pos:line="22" pos:column="35">cnt<pos:position pos:line="22" pos:column="38"/></name></expr>;<pos:position pos:line="22" pos:column="39"/></condition> <incr><expr><name pos:line="22" pos:column="40">i<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">++<pos:position pos:line="22" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="44"/></control> <block pos:line="22" pos:column="45">{
		<decl_stmt><decl><type><name><name pos:line="23" pos:column="17">struct<pos:position pos:line="23" pos:column="23"/></name> <name pos:line="23" pos:column="24">object<pos:position pos:line="23" pos:column="30"/></name></name> <modifier pos:line="23" pos:column="31">*<pos:position pos:line="23" pos:column="32"/></modifier></type><name pos:line="23" pos:column="32">obj<pos:position pos:line="23" pos:column="35"/></name> <init pos:line="23" pos:column="36">= <expr><operator pos:line="23" pos:column="38">&amp;<pos:position pos:line="23" pos:column="43"/></operator><operator pos:line="23" pos:column="39">(<pos:position pos:line="23" pos:column="40"/></operator><name><name pos:line="23" pos:column="40">array<pos:position pos:line="23" pos:column="45"/></name><index pos:line="23" pos:column="45">[<expr><name pos:line="23" pos:column="46">i<pos:position pos:line="23" pos:column="47"/></name></expr>]<pos:position pos:line="23" pos:column="48"/></index></name><operator pos:line="23" pos:column="48">.<pos:position pos:line="23" pos:column="49"/></operator><name><name pos:line="23" pos:column="49">commit<pos:position pos:line="23" pos:column="55"/></name><operator pos:line="23" pos:column="55">-&gt;<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="57">object<pos:position pos:line="23" pos:column="63"/></name></name><operator pos:line="23" pos:column="63">)<pos:position pos:line="23" pos:column="64"/></operator></expr></init></decl>;<pos:position pos:line="23" pos:column="65"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="25" pos:column="17">strbuf_reset<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><operator pos:line="25" pos:column="30">&amp;<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="31">buf<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">strbuf_addf<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><operator pos:line="26" pos:column="29">&amp;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="30">buf<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="35">"dist=%d"<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="46">array<pos:position pos:line="26" pos:column="51"/></name><index pos:line="26" pos:column="51">[<expr><name pos:line="26" pos:column="52">i<pos:position pos:line="26" pos:column="53"/></name></expr>]<pos:position pos:line="26" pos:column="54"/></index></name><operator pos:line="26" pos:column="54">.<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="55">distance<pos:position pos:line="26" pos:column="63"/></name></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">add_name_decoration<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><name pos:line="27" pos:column="37">DECORATION_NONE<pos:position pos:line="27" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="54">buf<pos:position pos:line="27" pos:column="57"/></name><operator pos:line="27" pos:column="57">.<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="58">buf<pos:position pos:line="27" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="63">obj<pos:position pos:line="27" pos:column="66"/></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="29" pos:column="17">p<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">-&gt;<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="20">item<pos:position pos:line="29" pos:column="24"/></name></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <name><name pos:line="29" pos:column="27">array<pos:position pos:line="29" pos:column="32"/></name><index pos:line="29" pos:column="32">[<expr><name pos:line="29" pos:column="33">i<pos:position pos:line="29" pos:column="34"/></name></expr>]<pos:position pos:line="29" pos:column="35"/></index></name><operator pos:line="29" pos:column="35">.<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="36">commit<pos:position pos:line="29" pos:column="42"/></name></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">p<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <name><name pos:line="30" pos:column="21">p<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">next<pos:position pos:line="30" pos:column="28"/></name></name></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></for>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">p<pos:position pos:line="32" pos:column="14"/></name></expr>)<pos:position pos:line="32" pos:column="15"/></condition><then pos:line="32" pos:column="15">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="17">p<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">-&gt;<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="20">next<pos:position pos:line="33" pos:column="24"/></name></name> <operator pos:line="33" pos:column="25">=<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="27">NULL<pos:position pos:line="33" pos:column="31"/></name></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">strbuf_release<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><operator pos:line="34" pos:column="24">&amp;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="25">buf<pos:position pos:line="34" pos:column="28"/></name></expr></argument>)<pos:position pos:line="34" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">free<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">array<pos:position pos:line="35" pos:column="19"/></name></expr></argument>)<pos:position pos:line="35" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
	<return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">list<pos:position pos:line="36" pos:column="20"/></name></expr>;<pos:position pos:line="36" pos:column="21"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

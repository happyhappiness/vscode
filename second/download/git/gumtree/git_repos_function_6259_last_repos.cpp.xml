<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6259_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_object_entry<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">unsigned<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">sha1<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="56">enum<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">object_type<pos:position pos:line="1" pos:column="72"/></name></name></type> <name pos:line="1" pos:column="73">type<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
			    <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">name<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">exclude<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">packed_git<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">found_pack<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><name pos:line="4" pos:column="41">NULL<pos:position pos:line="4" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">off_t<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">found_offset<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><literal type="number" pos:line="5" pos:column="30">0<pos:position pos:line="5" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">uint32_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">index_pos<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">have_duplicate_entry<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">sha1<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="40">exclude<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="49">&amp;<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="50">index_pos<pos:position pos:line="8" pos:column="59"/></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="61"/></condition><then pos:line="8" pos:column="61">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">want_object_in_pack<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">sha1<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">exclude<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="49">&amp;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="50">found_pack<pos:position pos:line="11" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="62">&amp;<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="63">found_offset<pos:position pos:line="11" pos:column="75"/></name></expr></argument>)<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="77"/></condition><then pos:line="11" pos:column="77"> <block pos:line="11" pos:column="78">{
		<comment type="block" pos:line="12" pos:column="17">/* The pack is missing an object, so it will not have closure */</comment>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">write_bitmap_index<pos:position pos:line="13" pos:column="39"/></name></expr>)<pos:position pos:line="13" pos:column="40"/></condition><then pos:line="13" pos:column="40"> <block pos:line="13" pos:column="41">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">warning<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><call><name pos:line="14" pos:column="33">_<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">no_closure_warning<pos:position pos:line="14" pos:column="53"/></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name pos:line="15" pos:column="25">write_bitmap_index<pos:position pos:line="15" pos:column="43"/></name> <operator pos:line="15" pos:column="44">=<pos:position pos:line="15" pos:column="45"/></operator> <literal type="number" pos:line="15" pos:column="46">0<pos:position pos:line="15" pos:column="47"/></literal></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
		<return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">create_object_entry<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">sha1<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">type<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="41">pack_name_hash<pos:position pos:line="20" pos:column="55"/></name><argument_list pos:line="20" pos:column="55">(<argument><expr><name pos:line="20" pos:column="56">name<pos:position pos:line="20" pos:column="60"/></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="21" pos:column="29">exclude<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">name<pos:position pos:line="21" pos:column="42"/></name> <operator pos:line="21" pos:column="43">&amp;&amp;<pos:position pos:line="21" pos:column="53"/></operator> <call><name pos:line="21" pos:column="46">no_try_delta<pos:position pos:line="21" pos:column="58"/></name><argument_list pos:line="21" pos:column="58">(<argument><expr><name pos:line="21" pos:column="59">name<pos:position pos:line="21" pos:column="63"/></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="22" pos:column="29">index_pos<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">found_pack<pos:position pos:line="22" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="52">found_offset<pos:position pos:line="22" pos:column="64"/></name></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="66"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="24" pos:column="9">display_progress<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">progress_state<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">nr_result<pos:position pos:line="24" pos:column="51"/></name></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="53"/></expr_stmt>
	<return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">1<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

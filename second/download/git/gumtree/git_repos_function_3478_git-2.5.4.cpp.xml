<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3478_git-2.5.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">match_expr_eval<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">grep_expr<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">x<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">bol<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">eol<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="2" pos:column="28">enum<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">grep_context<pos:position pos:line="2" pos:column="45"/></name></name></type> <name pos:line="2" pos:column="46">ctx<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">int<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">collect_hits<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">h<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">regmatch_t<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">match<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">x<pos:position pos:line="7" pos:column="15"/></name></expr>)<pos:position pos:line="7" pos:column="16"/></condition><then pos:line="7" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">die<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><literal type="string" pos:line="8" pos:column="21">"Not a valid grep expression"<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt></block></then></if>
	<switch pos:line="9" pos:column="9">switch <condition pos:line="9" pos:column="16">(<expr><name><name pos:line="9" pos:column="17">x<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">node<pos:position pos:line="9" pos:column="24"/></name></name></expr>)<pos:position pos:line="9" pos:column="25"/></condition> <block pos:line="9" pos:column="26">{
	<case pos:line="10" pos:column="9">case <expr><name pos:line="10" pos:column="14">GREP_NODE_TRUE<pos:position pos:line="10" pos:column="28"/></name></expr>:<pos:position pos:line="10" pos:column="29"/></case>
		<expr_stmt><expr><name pos:line="11" pos:column="17">h<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <literal type="number" pos:line="11" pos:column="21">1<pos:position pos:line="11" pos:column="22"/></literal></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
		<break pos:line="12" pos:column="17">break;<pos:position pos:line="12" pos:column="23"/></break>
	<case pos:line="13" pos:column="9">case <expr><name pos:line="13" pos:column="14">GREP_NODE_ATOM<pos:position pos:line="13" pos:column="28"/></name></expr>:<pos:position pos:line="13" pos:column="29"/></case>
		<expr_stmt><expr><name pos:line="14" pos:column="17">h<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <call><name pos:line="14" pos:column="21">match_one_pattern<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><name><name pos:line="14" pos:column="39">x<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">u<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">.<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="44">atom<pos:position pos:line="14" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">bol<pos:position pos:line="14" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="55">eol<pos:position pos:line="14" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="60">ctx<pos:position pos:line="14" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="65">&amp;<pos:position pos:line="14" pos:column="70"/></operator><name pos:line="14" pos:column="66">match<pos:position pos:line="14" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="73">0<pos:position pos:line="14" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="76"/></expr_stmt>
		<break pos:line="15" pos:column="17">break;<pos:position pos:line="15" pos:column="23"/></break>
	<case pos:line="16" pos:column="9">case <expr><name pos:line="16" pos:column="14">GREP_NODE_NOT<pos:position pos:line="16" pos:column="27"/></name></expr>:<pos:position pos:line="16" pos:column="28"/></case>
		<expr_stmt><expr><name pos:line="17" pos:column="17">h<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><call><name pos:line="17" pos:column="22">match_expr_eval<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name><name pos:line="17" pos:column="38">x<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">-&gt;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="41">u<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">.<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">unary<pos:position pos:line="17" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">bol<pos:position pos:line="17" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="55">eol<pos:position pos:line="17" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="60">ctx<pos:position pos:line="17" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="65">0<pos:position pos:line="17" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>
		<break pos:line="18" pos:column="17">break;<pos:position pos:line="18" pos:column="23"/></break>
	<case pos:line="19" pos:column="9">case <expr><name pos:line="19" pos:column="14">GREP_NODE_AND<pos:position pos:line="19" pos:column="27"/></name></expr>:<pos:position pos:line="19" pos:column="28"/></case>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><call><name pos:line="20" pos:column="22">match_expr_eval<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name><name pos:line="20" pos:column="38">x<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">u<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">.<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="43">binary<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">.<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">left<pos:position pos:line="20" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="56">bol<pos:position pos:line="20" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="61">eol<pos:position pos:line="20" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="66">ctx<pos:position pos:line="20" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="71">0<pos:position pos:line="20" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="74"/></condition><then pos:line="20" pos:column="74">
			<block type="pseudo"><return pos:line="21" pos:column="25">return <expr><literal type="number" pos:line="21" pos:column="32">0<pos:position pos:line="21" pos:column="33"/></literal></expr>;<pos:position pos:line="21" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="22" pos:column="17">h<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <call><name pos:line="22" pos:column="21">match_expr_eval<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><name><name pos:line="22" pos:column="37">x<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">u<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">.<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="42">binary<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">.<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="49">right<pos:position pos:line="22" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="56">bol<pos:position pos:line="22" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="61">eol<pos:position pos:line="22" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="66">ctx<pos:position pos:line="22" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="71">0<pos:position pos:line="22" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="74"/></expr_stmt>
		<break pos:line="23" pos:column="17">break;<pos:position pos:line="23" pos:column="23"/></break>
	<case pos:line="24" pos:column="9">case <expr><name pos:line="24" pos:column="14">GREP_NODE_OR<pos:position pos:line="24" pos:column="26"/></name></expr>:<pos:position pos:line="24" pos:column="27"/></case>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">collect_hits<pos:position pos:line="25" pos:column="34"/></name></expr>)<pos:position pos:line="25" pos:column="35"/></condition><then pos:line="25" pos:column="35">
			<block type="pseudo"><return pos:line="26" pos:column="25">return <expr><operator pos:line="26" pos:column="32">(<pos:position pos:line="26" pos:column="33"/></operator><call><name pos:line="26" pos:column="33">match_expr_eval<pos:position pos:line="26" pos:column="48"/></name><argument_list pos:line="26" pos:column="48">(<argument><expr><name><name pos:line="26" pos:column="49">x<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">-&gt;<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="52">u<pos:position pos:line="26" pos:column="53"/></name><operator pos:line="26" pos:column="53">.<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="54">binary<pos:position pos:line="26" pos:column="60"/></name><operator pos:line="26" pos:column="60">.<pos:position pos:line="26" pos:column="61"/></operator><name pos:line="26" pos:column="61">left<pos:position pos:line="26" pos:column="65"/></name></name></expr></argument>,
						<argument><expr><name pos:line="27" pos:column="49">bol<pos:position pos:line="27" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="54">eol<pos:position pos:line="27" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="59">ctx<pos:position pos:line="27" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="64">0<pos:position pos:line="27" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></call> <operator pos:line="27" pos:column="67">||<pos:position pos:line="27" pos:column="69"/></operator>
				<call><name pos:line="28" pos:column="33">match_expr_eval<pos:position pos:line="28" pos:column="48"/></name><argument_list pos:line="28" pos:column="48">(<argument><expr><name><name pos:line="28" pos:column="49">x<pos:position pos:line="28" pos:column="50"/></name><operator pos:line="28" pos:column="50">-&gt;<pos:position pos:line="28" pos:column="55"/></operator><name pos:line="28" pos:column="52">u<pos:position pos:line="28" pos:column="53"/></name><operator pos:line="28" pos:column="53">.<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="54">binary<pos:position pos:line="28" pos:column="60"/></name><operator pos:line="28" pos:column="60">.<pos:position pos:line="28" pos:column="61"/></operator><name pos:line="28" pos:column="61">right<pos:position pos:line="28" pos:column="66"/></name></name></expr></argument>,
						<argument><expr><name pos:line="29" pos:column="49">bol<pos:position pos:line="29" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">eol<pos:position pos:line="29" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="59">ctx<pos:position pos:line="29" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="64">0<pos:position pos:line="29" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call><operator pos:line="29" pos:column="66">)<pos:position pos:line="29" pos:column="67"/></operator></expr>;<pos:position pos:line="29" pos:column="68"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="30" pos:column="17">h<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <call><name pos:line="30" pos:column="21">match_expr_eval<pos:position pos:line="30" pos:column="36"/></name><argument_list pos:line="30" pos:column="36">(<argument><expr><name><name pos:line="30" pos:column="37">x<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">-&gt;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="40">u<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">.<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="42">binary<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">.<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="49">left<pos:position pos:line="30" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="55">bol<pos:position pos:line="30" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="60">eol<pos:position pos:line="30" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="65">ctx<pos:position pos:line="30" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="70">0<pos:position pos:line="30" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">x<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">u<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">.<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">binary<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">.<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="29">left<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">hit<pos:position pos:line="31" pos:column="38"/></name></name> <operator pos:line="31" pos:column="39">|=<pos:position pos:line="31" pos:column="41"/></operator> <name pos:line="31" pos:column="42">h<pos:position pos:line="31" pos:column="43"/></name></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="32" pos:column="17">h<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">|=<pos:position pos:line="32" pos:column="21"/></operator> <call><name pos:line="32" pos:column="22">match_expr_eval<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name><name pos:line="32" pos:column="38">x<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">-&gt;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="41">u<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">.<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="43">binary<pos:position pos:line="32" pos:column="49"/></name><operator pos:line="32" pos:column="49">.<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="50">right<pos:position pos:line="32" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="57">bol<pos:position pos:line="32" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="62">eol<pos:position pos:line="32" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="67">ctx<pos:position pos:line="32" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="72">1<pos:position pos:line="32" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>
		<break pos:line="33" pos:column="17">break;<pos:position pos:line="33" pos:column="23"/></break>
	<default pos:line="34" pos:column="9">default:<pos:position pos:line="34" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">die<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><literal type="string" pos:line="35" pos:column="21">"Unexpected node type (internal error) %d"<pos:position pos:line="35" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="65">x<pos:position pos:line="35" pos:column="66"/></name><operator pos:line="35" pos:column="66">-&gt;<pos:position pos:line="35" pos:column="71"/></operator><name pos:line="35" pos:column="68">node<pos:position pos:line="35" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></switch>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">collect_hits<pos:position pos:line="37" pos:column="25"/></name></expr>)<pos:position pos:line="37" pos:column="26"/></condition><then pos:line="37" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="17">x<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">-&gt;<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="20">hit<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">|=<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">h<pos:position pos:line="38" pos:column="28"/></name></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt></block></then></if>
	<return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">h<pos:position pos:line="39" pos:column="17"/></name></expr>;<pos:position pos:line="39" pos:column="18"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

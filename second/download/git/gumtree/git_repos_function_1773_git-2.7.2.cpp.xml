<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1773_git-2.7.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">rearrange_packed_git<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">void<pos:position pos:line="1" pos:column="38"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">packed_git<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier><modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">ary<pos:position pos:line="3" pos:column="32"/></name></decl>, <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="35">p<pos:position pos:line="3" pos:column="36"/></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">n<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">n<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr><operator pos:line="6" pos:column="19">,<pos:position pos:line="6" pos:column="20"/></operator> <expr><name pos:line="6" pos:column="21">p<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">packed_git<pos:position pos:line="6" pos:column="35"/></name></expr>;<pos:position pos:line="6" pos:column="36"/></init> <condition><expr><name pos:line="6" pos:column="37">p<pos:position pos:line="6" pos:column="38"/></name></expr>;<pos:position pos:line="6" pos:column="39"/></condition> <incr><expr><name pos:line="6" pos:column="40">p<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">=<pos:position pos:line="6" pos:column="43"/></operator> <name><name pos:line="6" pos:column="44">p<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">-&gt;<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="47">next<pos:position pos:line="6" pos:column="51"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="52"/></control>
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">n<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">++<pos:position pos:line="7" pos:column="20"/></operator></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt></block></for>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">n<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">&lt;<pos:position pos:line="8" pos:column="19"/></operator> <literal type="number" pos:line="8" pos:column="17">2<pos:position pos:line="8" pos:column="18"/></literal></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19">
		<block type="pseudo"><return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return></block></then></if>

	<comment type="block" pos:line="11" pos:column="9">/* prepare an array of packed_git for easier sorting */</comment>
	<expr_stmt><expr><name pos:line="12" pos:column="9">ary<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">xcalloc<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">n<pos:position pos:line="12" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="26">sizeof<argument_list pos:line="12" pos:column="32">(<argument><expr pos:line="12" pos:column="33">struct <name pos:line="12" pos:column="40">packed_git<pos:position pos:line="12" pos:column="50"/></name> <operator pos:line="12" pos:column="51">*<pos:position pos:line="12" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">n<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr><operator pos:line="13" pos:column="19">,<pos:position pos:line="13" pos:column="20"/></operator> <expr><name pos:line="13" pos:column="21">p<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <name pos:line="13" pos:column="25">packed_git<pos:position pos:line="13" pos:column="35"/></name></expr>;<pos:position pos:line="13" pos:column="36"/></init> <condition><expr><name pos:line="13" pos:column="37">p<pos:position pos:line="13" pos:column="38"/></name></expr>;<pos:position pos:line="13" pos:column="39"/></condition> <incr><expr><name pos:line="13" pos:column="40">p<pos:position pos:line="13" pos:column="41"/></name> <operator pos:line="13" pos:column="42">=<pos:position pos:line="13" pos:column="43"/></operator> <name><name pos:line="13" pos:column="44">p<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">next<pos:position pos:line="13" pos:column="51"/></name></name></expr></incr>)<pos:position pos:line="13" pos:column="52"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="17">ary<pos:position pos:line="14" pos:column="20"/></name><index pos:line="14" pos:column="20">[<expr><name pos:line="14" pos:column="21">n<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">++<pos:position pos:line="14" pos:column="24"/></operator></expr>]<pos:position pos:line="14" pos:column="25"/></index></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="28">p<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">qsort<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">ary<pos:position pos:line="16" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="20">n<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="23">sizeof<argument_list pos:line="16" pos:column="29">(<argument><expr pos:line="16" pos:column="30">struct <name pos:line="16" pos:column="37">packed_git<pos:position pos:line="16" pos:column="47"/></name> <operator pos:line="16" pos:column="48">*<pos:position pos:line="16" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">sort_pack<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt>

	<comment type="block" pos:line="18" pos:column="9">/* link them back again */</comment>
	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="25">n<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">-<pos:position pos:line="19" pos:column="28"/></operator> <literal type="number" pos:line="19" pos:column="29">1<pos:position pos:line="19" pos:column="30"/></literal></expr>;<pos:position pos:line="19" pos:column="31"/></condition> <incr><expr><name pos:line="19" pos:column="32">i<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">++<pos:position pos:line="19" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="36"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="17">ary<pos:position pos:line="20" pos:column="20"/></name><index pos:line="20" pos:column="20">[<expr><name pos:line="20" pos:column="21">i<pos:position pos:line="20" pos:column="22"/></name></expr>]<pos:position pos:line="20" pos:column="23"/></index></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">next<pos:position pos:line="20" pos:column="29"/></name> <operator pos:line="20" pos:column="30">=<pos:position pos:line="20" pos:column="31"/></operator> <name><name pos:line="20" pos:column="32">ary<pos:position pos:line="20" pos:column="35"/></name><index pos:line="20" pos:column="35">[<expr><name pos:line="20" pos:column="36">i<pos:position pos:line="20" pos:column="37"/></name> <operator pos:line="20" pos:column="38">+<pos:position pos:line="20" pos:column="39"/></operator> <literal type="number" pos:line="20" pos:column="40">1<pos:position pos:line="20" pos:column="41"/></literal></expr>]<pos:position pos:line="20" pos:column="42"/></index></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt></block></for>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">ary<pos:position pos:line="21" pos:column="12"/></name><index pos:line="21" pos:column="12">[<expr><name pos:line="21" pos:column="13">n<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">-<pos:position pos:line="21" pos:column="16"/></operator> <literal type="number" pos:line="21" pos:column="17">1<pos:position pos:line="21" pos:column="18"/></literal></expr>]<pos:position pos:line="21" pos:column="19"/></index></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">next<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">NULL<pos:position pos:line="21" pos:column="32"/></name></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">packed_git<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <name><name pos:line="22" pos:column="22">ary<pos:position pos:line="22" pos:column="25"/></name><index pos:line="22" pos:column="25">[<expr><literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr>]<pos:position pos:line="22" pos:column="28"/></index></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="24" pos:column="9">free<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">ary<pos:position pos:line="24" pos:column="17"/></name></expr></argument>)<pos:position pos:line="24" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="19"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5471_git-2.7.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">show<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">argc<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">argv<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">no_query<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><literal type="number" pos:line="3" pos:column="24">0<pos:position pos:line="3" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="27">result<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><literal type="number" pos:line="3" pos:column="36">0<pos:position pos:line="3" pos:column="37"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="39">query_flag<pos:position pos:line="3" pos:column="49"/></name> <init pos:line="3" pos:column="50">= <expr><literal type="number" pos:line="3" pos:column="52">0<pos:position pos:line="3" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">option<pos:position pos:line="4" pos:column="22"/></name></name></type> <name><name pos:line="4" pos:column="23">options<pos:position pos:line="4" pos:column="30"/></name><index pos:line="4" pos:column="30">[]<pos:position pos:line="4" pos:column="32"/></index></name> <init pos:line="4" pos:column="33">= <expr><block pos:line="4" pos:column="35">{
		<expr><call><name pos:line="5" pos:column="17">OPT_BOOL<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><literal type="char" pos:line="5" pos:column="26">'n'<pos:position pos:line="5" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="31">NULL<pos:position pos:line="5" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="37">&amp;<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="38">no_query<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="48">N_<pos:position pos:line="5" pos:column="50"/></name><argument_list pos:line="5" pos:column="50">(<argument><expr><literal type="string" pos:line="5" pos:column="51">"do not query remotes"<pos:position pos:line="5" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></call></expr>,
		<macro><name pos:line="6" pos:column="17">OPT_END<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">()<pos:position pos:line="6" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="7" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">ref_states<pos:position pos:line="8" pos:column="26"/></name></name></type> <name pos:line="8" pos:column="27">states<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">string_list<pos:position pos:line="9" pos:column="27"/></name></name></type> <name pos:line="9" pos:column="28">info_list<pos:position pos:line="9" pos:column="37"/></name> <init pos:line="9" pos:column="38">= <expr><name pos:line="9" pos:column="40">STRING_LIST_INIT_NODUP<pos:position pos:line="9" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">show_info<pos:position pos:line="10" pos:column="25"/></name></name></type> <name pos:line="10" pos:column="26">info<pos:position pos:line="10" pos:column="30"/></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">argc<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">parse_options<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">argc<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">argv<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">NULL<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">options<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="57">builtin_remote_show_usage<pos:position pos:line="12" pos:column="82"/></name></expr></argument>,
			     <argument><expr><literal type="number" pos:line="13" pos:column="30">0<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">argc<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">&lt;<pos:position pos:line="15" pos:column="22"/></operator> <literal type="number" pos:line="15" pos:column="20">1<pos:position pos:line="15" pos:column="21"/></literal></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><call><name pos:line="16" pos:column="24">show_all<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">()<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></return></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">no_query<pos:position pos:line="18" pos:column="22"/></name></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">query_flag<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <operator pos:line="19" pos:column="30">(<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="31">GET_REF_STATES<pos:position pos:line="19" pos:column="45"/></name> <operator pos:line="19" pos:column="46">|<pos:position pos:line="19" pos:column="47"/></operator> <name pos:line="19" pos:column="48">GET_HEAD_NAMES<pos:position pos:line="19" pos:column="62"/></name> <operator pos:line="19" pos:column="63">|<pos:position pos:line="19" pos:column="64"/></operator> <name pos:line="19" pos:column="65">GET_PUSH_REF_STATES<pos:position pos:line="19" pos:column="84"/></name><operator pos:line="19" pos:column="84">)<pos:position pos:line="19" pos:column="85"/></operator></expr>;<pos:position pos:line="19" pos:column="86"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="21" pos:column="9">memset<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><operator pos:line="21" pos:column="16">&amp;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="17">states<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="25">0<pos:position pos:line="21" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="28">sizeof<argument_list pos:line="21" pos:column="34">(<argument><expr><name pos:line="21" pos:column="35">states<pos:position pos:line="21" pos:column="41"/></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">memset<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><operator pos:line="22" pos:column="16">&amp;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="17">info<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="23">0<pos:position pos:line="22" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="26">sizeof<argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">info<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">info<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">.<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">states<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <operator pos:line="23" pos:column="23">&amp;<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="24">states<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">info<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">.<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">list<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <operator pos:line="24" pos:column="21">&amp;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="22">info_list<pos:position pos:line="24" pos:column="31"/></name></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
	<for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init pos:line="25" pos:column="14">;<pos:position pos:line="25" pos:column="15"/></init> <condition><expr><name pos:line="25" pos:column="16">argc<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></condition> <incr><expr><name pos:line="25" pos:column="22">argc<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">--<pos:position pos:line="25" pos:column="28"/></operator></expr><operator pos:line="25" pos:column="28">,<pos:position pos:line="25" pos:column="29"/></operator> <expr><name pos:line="25" pos:column="30">argv<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">++<pos:position pos:line="25" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="37"/></control> <block pos:line="25" pos:column="38">{
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">int<pos:position pos:line="26" pos:column="20"/></name></type> <name pos:line="26" pos:column="21">i<pos:position pos:line="26" pos:column="22"/></name></decl>;<pos:position pos:line="26" pos:column="23"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="27" pos:column="17">const<pos:position pos:line="27" pos:column="22"/></specifier> <name pos:line="27" pos:column="23">char<pos:position pos:line="27" pos:column="27"/></name> <modifier pos:line="27" pos:column="28">*<pos:position pos:line="27" pos:column="29"/></modifier><modifier pos:line="27" pos:column="29">*<pos:position pos:line="27" pos:column="30"/></modifier></type><name pos:line="27" pos:column="30">url<pos:position pos:line="27" pos:column="33"/></name></decl>;<pos:position pos:line="27" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="28" pos:column="17">int<pos:position pos:line="28" pos:column="20"/></name></type> <name pos:line="28" pos:column="21">url_nr<pos:position pos:line="28" pos:column="27"/></name></decl>;<pos:position pos:line="28" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="30" pos:column="17">get_remote_ref_states<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">(<argument><expr><operator pos:line="30" pos:column="39">*<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="40">argv<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="46">&amp;<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="47">states<pos:position pos:line="30" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="55">query_flag<pos:position pos:line="30" pos:column="65"/></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="32" pos:column="17">printf_ln<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><call><name pos:line="32" pos:column="27">_<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><literal type="string" pos:line="32" pos:column="29">"* remote %s"<pos:position pos:line="32" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="32" pos:column="45">*<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="46">argv<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">printf_ln<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><call><name pos:line="33" pos:column="27">_<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><literal type="string" pos:line="33" pos:column="29">"  Fetch URL: %s"<pos:position pos:line="33" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="33" pos:column="49">states<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">.<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="56">remote<pos:position pos:line="33" pos:column="62"/></name><operator pos:line="33" pos:column="62">-&gt;<pos:position pos:line="33" pos:column="67"/></operator><name pos:line="33" pos:column="64">url_nr<pos:position pos:line="33" pos:column="70"/></name></name> <operator pos:line="33" pos:column="71">&gt;<pos:position pos:line="33" pos:column="75"/></operator> <literal type="number" pos:line="33" pos:column="73">0<pos:position pos:line="33" pos:column="74"/></literal></expr> ?<pos:position pos:line="33" pos:column="76"/></condition><then pos:line="33" pos:column="76">
		       <expr><name><name pos:line="34" pos:column="24">states<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">.<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="31">remote<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">-&gt;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="39">url<pos:position pos:line="34" pos:column="42"/></name><index pos:line="34" pos:column="42">[<expr><literal type="number" pos:line="34" pos:column="43">0<pos:position pos:line="34" pos:column="44"/></literal></expr>]<pos:position pos:line="34" pos:column="45"/></index></name></expr> <pos:position pos:line="34" pos:column="46"/></then><else pos:line="34" pos:column="46">: <expr><call><name pos:line="34" pos:column="48">_<pos:position pos:line="34" pos:column="49"/></name><argument_list pos:line="34" pos:column="49">(<argument><expr><literal type="string" pos:line="34" pos:column="50">"(no URL)"<pos:position pos:line="34" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name><name pos:line="35" pos:column="21">states<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">.<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="28">remote<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">-&gt;<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="36">pushurl_nr<pos:position pos:line="35" pos:column="46"/></name></name></expr>)<pos:position pos:line="35" pos:column="47"/></condition><then pos:line="35" pos:column="47"> <block pos:line="35" pos:column="48">{
			<expr_stmt><expr><name pos:line="36" pos:column="25">url<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <name><name pos:line="36" pos:column="31">states<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">.<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="38">remote<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">-&gt;<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="46">pushurl<pos:position pos:line="36" pos:column="53"/></name></name></expr>;<pos:position pos:line="36" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><name pos:line="37" pos:column="25">url_nr<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <name><name pos:line="37" pos:column="34">states<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">.<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="41">remote<pos:position pos:line="37" pos:column="47"/></name><operator pos:line="37" pos:column="47">-&gt;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="49">pushurl_nr<pos:position pos:line="37" pos:column="59"/></name></name></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then> <else pos:line="38" pos:column="19">else <block pos:line="38" pos:column="24">{
			<expr_stmt><expr><name pos:line="39" pos:column="25">url<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">=<pos:position pos:line="39" pos:column="30"/></operator> <name><name pos:line="39" pos:column="31">states<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">.<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="38">remote<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">-&gt;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="46">url<pos:position pos:line="39" pos:column="49"/></name></name></expr>;<pos:position pos:line="39" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="40" pos:column="25">url_nr<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">=<pos:position pos:line="40" pos:column="33"/></operator> <name><name pos:line="40" pos:column="34">states<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">.<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="41">remote<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">-&gt;<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="49">url_nr<pos:position pos:line="40" pos:column="55"/></name></name></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></else></if>
		<for pos:line="42" pos:column="17">for <control pos:line="42" pos:column="21">(<init><expr><name pos:line="42" pos:column="22">i<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <literal type="number" pos:line="42" pos:column="26">0<pos:position pos:line="42" pos:column="27"/></literal></expr>;<pos:position pos:line="42" pos:column="28"/></init> <condition><expr><name pos:line="42" pos:column="29">i<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">&lt;<pos:position pos:line="42" pos:column="35"/></operator> <name pos:line="42" pos:column="33">url_nr<pos:position pos:line="42" pos:column="39"/></name></expr>;<pos:position pos:line="42" pos:column="40"/></condition> <incr><expr><name pos:line="42" pos:column="41">i<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">++<pos:position pos:line="42" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="45"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="25">printf_ln<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><call><name pos:line="43" pos:column="35">_<pos:position pos:line="43" pos:column="36"/></name><argument_list pos:line="43" pos:column="36">(<argument><expr><literal type="string" pos:line="43" pos:column="37">"  Push  URL: %s"<pos:position pos:line="43" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="57">url<pos:position pos:line="43" pos:column="60"/></name><index pos:line="43" pos:column="60">[<expr><name pos:line="43" pos:column="61">i<pos:position pos:line="43" pos:column="62"/></name></expr>]<pos:position pos:line="43" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="65"/></expr_stmt></block></for>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><operator pos:line="44" pos:column="21">!<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">i<pos:position pos:line="44" pos:column="23"/></name></expr>)<pos:position pos:line="44" pos:column="24"/></condition><then pos:line="44" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="25">printf_ln<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><call><name pos:line="45" pos:column="35">_<pos:position pos:line="45" pos:column="36"/></name><argument_list pos:line="45" pos:column="36">(<argument><expr><literal type="string" pos:line="45" pos:column="37">"  Push  URL: %s"<pos:position pos:line="45" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="57">"(no URL)"<pos:position pos:line="45" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="69"/></expr_stmt></block></then></if>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">no_query<pos:position pos:line="46" pos:column="29"/></name></expr>)<pos:position pos:line="46" pos:column="30"/></condition><then pos:line="46" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="25">printf_ln<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><call><name pos:line="47" pos:column="35">_<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><literal type="string" pos:line="47" pos:column="37">"  HEAD branch: %s"<pos:position pos:line="47" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="59">"(not queried)"<pos:position pos:line="47" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="76"/></expr_stmt></block></then>
		<elseif pos:line="48" pos:column="17">else <if pos:line="48" pos:column="22">if <condition pos:line="48" pos:column="25">(<expr><operator pos:line="48" pos:column="26">!<pos:position pos:line="48" pos:column="27"/></operator><name><name pos:line="48" pos:column="27">states<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">.<pos:position pos:line="48" pos:column="34"/></operator><name pos:line="48" pos:column="34">heads<pos:position pos:line="48" pos:column="39"/></name><operator pos:line="48" pos:column="39">.<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="40">nr<pos:position pos:line="48" pos:column="42"/></name></name></expr>)<pos:position pos:line="48" pos:column="43"/></condition><then pos:line="48" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="25">printf_ln<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><call><name pos:line="49" pos:column="35">_<pos:position pos:line="49" pos:column="36"/></name><argument_list pos:line="49" pos:column="36">(<argument><expr><literal type="string" pos:line="49" pos:column="37">"  HEAD branch: %s"<pos:position pos:line="49" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="59">"(unknown)"<pos:position pos:line="49" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="50" pos:column="17">else <if pos:line="50" pos:column="22">if <condition pos:line="50" pos:column="25">(<expr><name><name pos:line="50" pos:column="26">states<pos:position pos:line="50" pos:column="32"/></name><operator pos:line="50" pos:column="32">.<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="33">heads<pos:position pos:line="50" pos:column="38"/></name><operator pos:line="50" pos:column="38">.<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="39">nr<pos:position pos:line="50" pos:column="41"/></name></name> <operator pos:line="50" pos:column="42">==<pos:position pos:line="50" pos:column="44"/></operator> <literal type="number" pos:line="50" pos:column="45">1<pos:position pos:line="50" pos:column="46"/></literal></expr>)<pos:position pos:line="50" pos:column="47"/></condition><then pos:line="50" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="25">printf_ln<pos:position pos:line="51" pos:column="34"/></name><argument_list pos:line="51" pos:column="34">(<argument><expr><call><name pos:line="51" pos:column="35">_<pos:position pos:line="51" pos:column="36"/></name><argument_list pos:line="51" pos:column="36">(<argument><expr><literal type="string" pos:line="51" pos:column="37">"  HEAD branch: %s"<pos:position pos:line="51" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="59">states<pos:position pos:line="51" pos:column="65"/></name><operator pos:line="51" pos:column="65">.<pos:position pos:line="51" pos:column="66"/></operator><name pos:line="51" pos:column="66">heads<pos:position pos:line="51" pos:column="71"/></name><operator pos:line="51" pos:column="71">.<pos:position pos:line="51" pos:column="72"/></operator><name pos:line="51" pos:column="72">items<pos:position pos:line="51" pos:column="77"/></name><index pos:line="51" pos:column="77">[<expr><literal type="number" pos:line="51" pos:column="78">0<pos:position pos:line="51" pos:column="79"/></literal></expr>]<pos:position pos:line="51" pos:column="80"/></index></name><operator pos:line="51" pos:column="80">.<pos:position pos:line="51" pos:column="81"/></operator><name pos:line="51" pos:column="81">string<pos:position pos:line="51" pos:column="87"/></name></expr></argument>)<pos:position pos:line="51" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="89"/></expr_stmt></block></then></if></elseif>
		<else pos:line="52" pos:column="17">else <block pos:line="52" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">printf<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><call><name pos:line="53" pos:column="32">_<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><literal type="string" pos:line="53" pos:column="34">"  HEAD branch (remote HEAD is ambiguous,"<pos:position pos:line="53" pos:column="76"/></literal>
				 <literal type="string" pos:line="54" pos:column="34">" may be one of the following):\n"<pos:position pos:line="54" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="71"/></expr_stmt>
			<for pos:line="55" pos:column="25">for <control pos:line="55" pos:column="29">(<init><expr><name pos:line="55" pos:column="30">i<pos:position pos:line="55" pos:column="31"/></name> <operator pos:line="55" pos:column="32">=<pos:position pos:line="55" pos:column="33"/></operator> <literal type="number" pos:line="55" pos:column="34">0<pos:position pos:line="55" pos:column="35"/></literal></expr>;<pos:position pos:line="55" pos:column="36"/></init> <condition><expr><name pos:line="55" pos:column="37">i<pos:position pos:line="55" pos:column="38"/></name> <operator pos:line="55" pos:column="39">&lt;<pos:position pos:line="55" pos:column="43"/></operator> <name><name pos:line="55" pos:column="41">states<pos:position pos:line="55" pos:column="47"/></name><operator pos:line="55" pos:column="47">.<pos:position pos:line="55" pos:column="48"/></operator><name pos:line="55" pos:column="48">heads<pos:position pos:line="55" pos:column="53"/></name><operator pos:line="55" pos:column="53">.<pos:position pos:line="55" pos:column="54"/></operator><name pos:line="55" pos:column="54">nr<pos:position pos:line="55" pos:column="56"/></name></name></expr>;<pos:position pos:line="55" pos:column="57"/></condition> <incr><expr><name pos:line="55" pos:column="58">i<pos:position pos:line="55" pos:column="59"/></name><operator pos:line="55" pos:column="59">++<pos:position pos:line="55" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="55" pos:column="62"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="33">printf<pos:position pos:line="56" pos:column="39"/></name><argument_list pos:line="56" pos:column="39">(<argument><expr><literal type="string" pos:line="56" pos:column="40">"    %s\n"<pos:position pos:line="56" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="52">states<pos:position pos:line="56" pos:column="58"/></name><operator pos:line="56" pos:column="58">.<pos:position pos:line="56" pos:column="59"/></operator><name pos:line="56" pos:column="59">heads<pos:position pos:line="56" pos:column="64"/></name><operator pos:line="56" pos:column="64">.<pos:position pos:line="56" pos:column="65"/></operator><name pos:line="56" pos:column="65">items<pos:position pos:line="56" pos:column="70"/></name><index pos:line="56" pos:column="70">[<expr><name pos:line="56" pos:column="71">i<pos:position pos:line="56" pos:column="72"/></name></expr>]<pos:position pos:line="56" pos:column="73"/></index></name><operator pos:line="56" pos:column="73">.<pos:position pos:line="56" pos:column="74"/></operator><name pos:line="56" pos:column="74">string<pos:position pos:line="56" pos:column="80"/></name></expr></argument>)<pos:position pos:line="56" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="82"/></expr_stmt></block></for>
		}<pos:position pos:line="57" pos:column="18"/></block></else></if>

		<comment type="block" pos:line="59" pos:column="17">/* remote branch info */</comment>
		<expr_stmt><expr><name><name pos:line="60" pos:column="17">info<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">.<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="22">width<pos:position pos:line="60" pos:column="27"/></name></name> <operator pos:line="60" pos:column="28">=<pos:position pos:line="60" pos:column="29"/></operator> <literal type="number" pos:line="60" pos:column="30">0<pos:position pos:line="60" pos:column="31"/></literal></expr>;<pos:position pos:line="60" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="61" pos:column="17">for_each_string_list<pos:position pos:line="61" pos:column="37"/></name><argument_list pos:line="61" pos:column="37">(<argument><expr><operator pos:line="61" pos:column="38">&amp;<pos:position pos:line="61" pos:column="43"/></operator><name><name pos:line="61" pos:column="39">states<pos:position pos:line="61" pos:column="45"/></name><operator pos:line="61" pos:column="45">.<pos:position pos:line="61" pos:column="46"/></operator></name><operator pos:line="61" pos:column="46">new<pos:position pos:line="61" pos:column="49"/></operator></expr></argument>, <argument><expr><name pos:line="61" pos:column="51">add_remote_to_show_info<pos:position pos:line="61" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="76">&amp;<pos:position pos:line="61" pos:column="81"/></operator><name pos:line="61" pos:column="77">info<pos:position pos:line="61" pos:column="81"/></name></expr></argument>)<pos:position pos:line="61" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="83"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">for_each_string_list<pos:position pos:line="62" pos:column="37"/></name><argument_list pos:line="62" pos:column="37">(<argument><expr><operator pos:line="62" pos:column="38">&amp;<pos:position pos:line="62" pos:column="43"/></operator><name><name pos:line="62" pos:column="39">states<pos:position pos:line="62" pos:column="45"/></name><operator pos:line="62" pos:column="45">.<pos:position pos:line="62" pos:column="46"/></operator><name pos:line="62" pos:column="46">tracked<pos:position pos:line="62" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="55">add_remote_to_show_info<pos:position pos:line="62" pos:column="78"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="80">&amp;<pos:position pos:line="62" pos:column="85"/></operator><name pos:line="62" pos:column="81">info<pos:position pos:line="62" pos:column="85"/></name></expr></argument>)<pos:position pos:line="62" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="87"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">for_each_string_list<pos:position pos:line="63" pos:column="37"/></name><argument_list pos:line="63" pos:column="37">(<argument><expr><operator pos:line="63" pos:column="38">&amp;<pos:position pos:line="63" pos:column="43"/></operator><name><name pos:line="63" pos:column="39">states<pos:position pos:line="63" pos:column="45"/></name><operator pos:line="63" pos:column="45">.<pos:position pos:line="63" pos:column="46"/></operator><name pos:line="63" pos:column="46">stale<pos:position pos:line="63" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="53">add_remote_to_show_info<pos:position pos:line="63" pos:column="76"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="78">&amp;<pos:position pos:line="63" pos:column="83"/></operator><name pos:line="63" pos:column="79">info<pos:position pos:line="63" pos:column="83"/></name></expr></argument>)<pos:position pos:line="63" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="85"/></expr_stmt>
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><name><name pos:line="64" pos:column="21">info<pos:position pos:line="64" pos:column="25"/></name><operator pos:line="64" pos:column="25">.<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="26">list<pos:position pos:line="64" pos:column="30"/></name><operator pos:line="64" pos:column="30">-&gt;<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="32">nr<pos:position pos:line="64" pos:column="34"/></name></name></expr>)<pos:position pos:line="64" pos:column="35"/></condition><then pos:line="64" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="25">printf_ln<pos:position pos:line="65" pos:column="34"/></name><argument_list pos:line="65" pos:column="34">(<argument><expr><call><name pos:line="65" pos:column="35">Q_<pos:position pos:line="65" pos:column="37"/></name><argument_list pos:line="65" pos:column="37">(<argument><expr><literal type="string" pos:line="65" pos:column="38">"  Remote branch:%s"<pos:position pos:line="65" pos:column="58"/></literal></expr></argument>,
				     <argument><expr><literal type="string" pos:line="66" pos:column="38">"  Remote branches:%s"<pos:position pos:line="66" pos:column="60"/></literal></expr></argument>,
				     <argument><expr><name><name pos:line="67" pos:column="38">info<pos:position pos:line="67" pos:column="42"/></name><operator pos:line="67" pos:column="42">.<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="43">list<pos:position pos:line="67" pos:column="47"/></name><operator pos:line="67" pos:column="47">-&gt;<pos:position pos:line="67" pos:column="52"/></operator><name pos:line="67" pos:column="49">nr<pos:position pos:line="67" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></call></expr></argument>,
				  <argument><expr><ternary><condition><expr><name pos:line="68" pos:column="35">no_query<pos:position pos:line="68" pos:column="43"/></name></expr> ?<pos:position pos:line="68" pos:column="45"/></condition><then pos:line="68" pos:column="45"> <expr><call><name pos:line="68" pos:column="46">_<pos:position pos:line="68" pos:column="47"/></name><argument_list pos:line="68" pos:column="47">(<argument><expr><literal type="string" pos:line="68" pos:column="48">" (status not queried)"<pos:position pos:line="68" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="72"/></argument_list></call></expr> <pos:position pos:line="68" pos:column="73"/></then><else pos:line="68" pos:column="73">: <expr><literal type="string" pos:line="68" pos:column="75">""<pos:position pos:line="68" pos:column="77"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="68" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="79"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">for_each_string_list<pos:position pos:line="69" pos:column="37"/></name><argument_list pos:line="69" pos:column="37">(<argument><expr><name><name pos:line="69" pos:column="38">info<pos:position pos:line="69" pos:column="42"/></name><operator pos:line="69" pos:column="42">.<pos:position pos:line="69" pos:column="43"/></operator><name pos:line="69" pos:column="43">list<pos:position pos:line="69" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="49">show_remote_info_item<pos:position pos:line="69" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="72">&amp;<pos:position pos:line="69" pos:column="77"/></operator><name pos:line="69" pos:column="73">info<pos:position pos:line="69" pos:column="77"/></name></expr></argument>)<pos:position pos:line="69" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="70" pos:column="17">string_list_clear<pos:position pos:line="70" pos:column="34"/></name><argument_list pos:line="70" pos:column="34">(<argument><expr><name><name pos:line="70" pos:column="35">info<pos:position pos:line="70" pos:column="39"/></name><operator pos:line="70" pos:column="39">.<pos:position pos:line="70" pos:column="40"/></operator><name pos:line="70" pos:column="40">list<pos:position pos:line="70" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="46">0<pos:position pos:line="70" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="49"/></expr_stmt>

		<comment type="block" pos:line="72" pos:column="17">/* git pull info */</comment>
		<expr_stmt><expr><name><name pos:line="73" pos:column="17">info<pos:position pos:line="73" pos:column="21"/></name><operator pos:line="73" pos:column="21">.<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="22">width<pos:position pos:line="73" pos:column="27"/></name></name> <operator pos:line="73" pos:column="28">=<pos:position pos:line="73" pos:column="29"/></operator> <literal type="number" pos:line="73" pos:column="30">0<pos:position pos:line="73" pos:column="31"/></literal></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="74" pos:column="17">info<pos:position pos:line="74" pos:column="21"/></name><operator pos:line="74" pos:column="21">.<pos:position pos:line="74" pos:column="22"/></operator><name pos:line="74" pos:column="22">any_rebase<pos:position pos:line="74" pos:column="32"/></name></name> <operator pos:line="74" pos:column="33">=<pos:position pos:line="74" pos:column="34"/></operator> <literal type="number" pos:line="74" pos:column="35">0<pos:position pos:line="74" pos:column="36"/></literal></expr>;<pos:position pos:line="74" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="75" pos:column="17">for_each_string_list<pos:position pos:line="75" pos:column="37"/></name><argument_list pos:line="75" pos:column="37">(<argument><expr><operator pos:line="75" pos:column="38">&amp;<pos:position pos:line="75" pos:column="43"/></operator><name pos:line="75" pos:column="39">branch_list<pos:position pos:line="75" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="52">add_local_to_show_info<pos:position pos:line="75" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="76">&amp;<pos:position pos:line="75" pos:column="81"/></operator><name pos:line="75" pos:column="77">info<pos:position pos:line="75" pos:column="81"/></name></expr></argument>)<pos:position pos:line="75" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="83"/></expr_stmt>
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name><name pos:line="76" pos:column="21">info<pos:position pos:line="76" pos:column="25"/></name><operator pos:line="76" pos:column="25">.<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="26">list<pos:position pos:line="76" pos:column="30"/></name><operator pos:line="76" pos:column="30">-&gt;<pos:position pos:line="76" pos:column="35"/></operator><name pos:line="76" pos:column="32">nr<pos:position pos:line="76" pos:column="34"/></name></name></expr>)<pos:position pos:line="76" pos:column="35"/></condition><then pos:line="76" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="25">printf_ln<pos:position pos:line="77" pos:column="34"/></name><argument_list pos:line="77" pos:column="34">(<argument><expr><call><name pos:line="77" pos:column="35">Q_<pos:position pos:line="77" pos:column="37"/></name><argument_list pos:line="77" pos:column="37">(<argument><expr><literal type="string" pos:line="77" pos:column="38">"  Local branch configured for 'git pull':"<pos:position pos:line="77" pos:column="81"/></literal></expr></argument>,
				     <argument><expr><literal type="string" pos:line="78" pos:column="38">"  Local branches configured for 'git pull':"<pos:position pos:line="78" pos:column="83"/></literal></expr></argument>,
				     <argument><expr><name><name pos:line="79" pos:column="38">info<pos:position pos:line="79" pos:column="42"/></name><operator pos:line="79" pos:column="42">.<pos:position pos:line="79" pos:column="43"/></operator><name pos:line="79" pos:column="43">list<pos:position pos:line="79" pos:column="47"/></name><operator pos:line="79" pos:column="47">-&gt;<pos:position pos:line="79" pos:column="52"/></operator><name pos:line="79" pos:column="49">nr<pos:position pos:line="79" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="54"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="80" pos:column="17">for_each_string_list<pos:position pos:line="80" pos:column="37"/></name><argument_list pos:line="80" pos:column="37">(<argument><expr><name><name pos:line="80" pos:column="38">info<pos:position pos:line="80" pos:column="42"/></name><operator pos:line="80" pos:column="42">.<pos:position pos:line="80" pos:column="43"/></operator><name pos:line="80" pos:column="43">list<pos:position pos:line="80" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="49">show_local_info_item<pos:position pos:line="80" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="71">&amp;<pos:position pos:line="80" pos:column="76"/></operator><name pos:line="80" pos:column="72">info<pos:position pos:line="80" pos:column="76"/></name></expr></argument>)<pos:position pos:line="80" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="81" pos:column="17">string_list_clear<pos:position pos:line="81" pos:column="34"/></name><argument_list pos:line="81" pos:column="34">(<argument><expr><name><name pos:line="81" pos:column="35">info<pos:position pos:line="81" pos:column="39"/></name><operator pos:line="81" pos:column="39">.<pos:position pos:line="81" pos:column="40"/></operator><name pos:line="81" pos:column="40">list<pos:position pos:line="81" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="46">0<pos:position pos:line="81" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="49"/></expr_stmt>

		<comment type="block" pos:line="83" pos:column="17">/* git push info */</comment>
		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><name><name pos:line="84" pos:column="21">states<pos:position pos:line="84" pos:column="27"/></name><operator pos:line="84" pos:column="27">.<pos:position pos:line="84" pos:column="28"/></operator><name pos:line="84" pos:column="28">remote<pos:position pos:line="84" pos:column="34"/></name><operator pos:line="84" pos:column="34">-&gt;<pos:position pos:line="84" pos:column="39"/></operator><name pos:line="84" pos:column="36">mirror<pos:position pos:line="84" pos:column="42"/></name></name></expr>)<pos:position pos:line="84" pos:column="43"/></condition><then pos:line="84" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="25">printf_ln<pos:position pos:line="85" pos:column="34"/></name><argument_list pos:line="85" pos:column="34">(<argument><expr><call><name pos:line="85" pos:column="35">_<pos:position pos:line="85" pos:column="36"/></name><argument_list pos:line="85" pos:column="36">(<argument><expr><literal type="string" pos:line="85" pos:column="37">"  Local refs will be mirrored by 'git push'"<pos:position pos:line="85" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="85" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="85"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name><name pos:line="87" pos:column="17">info<pos:position pos:line="87" pos:column="21"/></name><operator pos:line="87" pos:column="21">.<pos:position pos:line="87" pos:column="22"/></operator><name pos:line="87" pos:column="22">width<pos:position pos:line="87" pos:column="27"/></name></name> <operator pos:line="87" pos:column="28">=<pos:position pos:line="87" pos:column="29"/></operator> <name><name pos:line="87" pos:column="30">info<pos:position pos:line="87" pos:column="34"/></name><operator pos:line="87" pos:column="34">.<pos:position pos:line="87" pos:column="35"/></operator><name pos:line="87" pos:column="35">width2<pos:position pos:line="87" pos:column="41"/></name></name> <operator pos:line="87" pos:column="42">=<pos:position pos:line="87" pos:column="43"/></operator> <literal type="number" pos:line="87" pos:column="44">0<pos:position pos:line="87" pos:column="45"/></literal></expr>;<pos:position pos:line="87" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="88" pos:column="17">for_each_string_list<pos:position pos:line="88" pos:column="37"/></name><argument_list pos:line="88" pos:column="37">(<argument><expr><operator pos:line="88" pos:column="38">&amp;<pos:position pos:line="88" pos:column="43"/></operator><name><name pos:line="88" pos:column="39">states<pos:position pos:line="88" pos:column="45"/></name><operator pos:line="88" pos:column="45">.<pos:position pos:line="88" pos:column="46"/></operator><name pos:line="88" pos:column="46">push<pos:position pos:line="88" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="52">add_push_to_show_info<pos:position pos:line="88" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="75">&amp;<pos:position pos:line="88" pos:column="80"/></operator><name pos:line="88" pos:column="76">info<pos:position pos:line="88" pos:column="80"/></name></expr></argument>)<pos:position pos:line="88" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="82"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="89" pos:column="17">qsort<pos:position pos:line="89" pos:column="22"/></name><argument_list pos:line="89" pos:column="22">(<argument><expr><name><name pos:line="89" pos:column="23">info<pos:position pos:line="89" pos:column="27"/></name><operator pos:line="89" pos:column="27">.<pos:position pos:line="89" pos:column="28"/></operator><name pos:line="89" pos:column="28">list<pos:position pos:line="89" pos:column="32"/></name><operator pos:line="89" pos:column="32">-&gt;<pos:position pos:line="89" pos:column="37"/></operator><name pos:line="89" pos:column="34">items<pos:position pos:line="89" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="41">info<pos:position pos:line="89" pos:column="45"/></name><operator pos:line="89" pos:column="45">.<pos:position pos:line="89" pos:column="46"/></operator><name pos:line="89" pos:column="46">list<pos:position pos:line="89" pos:column="50"/></name><operator pos:line="89" pos:column="50">-&gt;<pos:position pos:line="89" pos:column="55"/></operator><name pos:line="89" pos:column="52">nr<pos:position pos:line="89" pos:column="54"/></name></name></expr></argument>,
			<argument><expr><sizeof pos:line="90" pos:column="25">sizeof<argument_list pos:line="90" pos:column="31">(<argument><expr><operator pos:line="90" pos:column="32">*<pos:position pos:line="90" pos:column="33"/></operator><name><name pos:line="90" pos:column="33">info<pos:position pos:line="90" pos:column="37"/></name><operator pos:line="90" pos:column="37">.<pos:position pos:line="90" pos:column="38"/></operator><name pos:line="90" pos:column="38">list<pos:position pos:line="90" pos:column="42"/></name><operator pos:line="90" pos:column="42">-&gt;<pos:position pos:line="90" pos:column="47"/></operator><name pos:line="90" pos:column="44">items<pos:position pos:line="90" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="90" pos:column="52">cmp_string_with_push<pos:position pos:line="90" pos:column="72"/></name></expr></argument>)<pos:position pos:line="90" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="74"/></expr_stmt>
		<if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><name><name pos:line="91" pos:column="21">info<pos:position pos:line="91" pos:column="25"/></name><operator pos:line="91" pos:column="25">.<pos:position pos:line="91" pos:column="26"/></operator><name pos:line="91" pos:column="26">list<pos:position pos:line="91" pos:column="30"/></name><operator pos:line="91" pos:column="30">-&gt;<pos:position pos:line="91" pos:column="35"/></operator><name pos:line="91" pos:column="32">nr<pos:position pos:line="91" pos:column="34"/></name></name></expr>)<pos:position pos:line="91" pos:column="35"/></condition><then pos:line="91" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="25">printf_ln<pos:position pos:line="92" pos:column="34"/></name><argument_list pos:line="92" pos:column="34">(<argument><expr><call><name pos:line="92" pos:column="35">Q_<pos:position pos:line="92" pos:column="37"/></name><argument_list pos:line="92" pos:column="37">(<argument><expr><literal type="string" pos:line="92" pos:column="38">"  Local ref configured for 'git push'%s:"<pos:position pos:line="92" pos:column="80"/></literal></expr></argument>,
				     <argument><expr><literal type="string" pos:line="93" pos:column="38">"  Local refs configured for 'git push'%s:"<pos:position pos:line="93" pos:column="81"/></literal></expr></argument>,
				     <argument><expr><name><name pos:line="94" pos:column="38">info<pos:position pos:line="94" pos:column="42"/></name><operator pos:line="94" pos:column="42">.<pos:position pos:line="94" pos:column="43"/></operator><name pos:line="94" pos:column="43">list<pos:position pos:line="94" pos:column="47"/></name><operator pos:line="94" pos:column="47">-&gt;<pos:position pos:line="94" pos:column="52"/></operator><name pos:line="94" pos:column="49">nr<pos:position pos:line="94" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="52"/></argument_list></call></expr></argument>,
				  <argument><expr><ternary><condition><expr><name pos:line="95" pos:column="35">no_query<pos:position pos:line="95" pos:column="43"/></name></expr> ?<pos:position pos:line="95" pos:column="45"/></condition><then pos:line="95" pos:column="45"> <expr><call><name pos:line="95" pos:column="46">_<pos:position pos:line="95" pos:column="47"/></name><argument_list pos:line="95" pos:column="47">(<argument><expr><literal type="string" pos:line="95" pos:column="48">" (status not queried)"<pos:position pos:line="95" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="72"/></argument_list></call></expr> <pos:position pos:line="95" pos:column="73"/></then><else pos:line="95" pos:column="73">: <expr><literal type="string" pos:line="95" pos:column="75">""<pos:position pos:line="95" pos:column="77"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="95" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="79"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="96" pos:column="17">for_each_string_list<pos:position pos:line="96" pos:column="37"/></name><argument_list pos:line="96" pos:column="37">(<argument><expr><name><name pos:line="96" pos:column="38">info<pos:position pos:line="96" pos:column="42"/></name><operator pos:line="96" pos:column="42">.<pos:position pos:line="96" pos:column="43"/></operator><name pos:line="96" pos:column="43">list<pos:position pos:line="96" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="49">show_push_info_item<pos:position pos:line="96" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="70">&amp;<pos:position pos:line="96" pos:column="75"/></operator><name pos:line="96" pos:column="71">info<pos:position pos:line="96" pos:column="75"/></name></expr></argument>)<pos:position pos:line="96" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="97" pos:column="17">string_list_clear<pos:position pos:line="97" pos:column="34"/></name><argument_list pos:line="97" pos:column="34">(<argument><expr><name><name pos:line="97" pos:column="35">info<pos:position pos:line="97" pos:column="39"/></name><operator pos:line="97" pos:column="39">.<pos:position pos:line="97" pos:column="40"/></operator><name pos:line="97" pos:column="40">list<pos:position pos:line="97" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="46">0<pos:position pos:line="97" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="49"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="99" pos:column="17">free_remote_ref_states<pos:position pos:line="99" pos:column="39"/></name><argument_list pos:line="99" pos:column="39">(<argument><expr><operator pos:line="99" pos:column="40">&amp;<pos:position pos:line="99" pos:column="45"/></operator><name pos:line="99" pos:column="41">states<pos:position pos:line="99" pos:column="47"/></name></expr></argument>)<pos:position pos:line="99" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="100" pos:column="10"/></block></for>

	<return pos:line="102" pos:column="9">return <expr><name pos:line="102" pos:column="16">result<pos:position pos:line="102" pos:column="22"/></name></expr>;<pos:position pos:line="102" pos:column="23"/></return>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

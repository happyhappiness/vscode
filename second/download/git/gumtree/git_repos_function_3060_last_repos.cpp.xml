<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3060_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">process_trailers_lists<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">list_head<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">head<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
				   <parameter><decl><type><name><name pos:line="2" pos:column="36">struct<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">list_head<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">arg_head<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">list_head<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">pos<pos:position pos:line="4" pos:column="30"/></name></decl>, <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="33">p<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">arg_item<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">arg_tok<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

	<macro><name pos:line="7" pos:column="9">list_for_each_safe<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument pos:line="7" pos:column="28">pos<pos:position pos:line="7" pos:column="31"/></argument>, <argument pos:line="7" pos:column="33">p<pos:position pos:line="7" pos:column="34"/></argument>, <argument pos:line="7" pos:column="36">arg_head<pos:position pos:line="7" pos:column="44"/></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></macro> <block pos:line="7" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">applied<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><literal type="number" pos:line="8" pos:column="31">0<pos:position pos:line="8" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">arg_tok<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">=<pos:position pos:line="9" pos:column="26"/></operator> <call><name pos:line="9" pos:column="27">list_entry<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><name pos:line="9" pos:column="38">pos<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr pos:line="9" pos:column="43">struct <name pos:line="9" pos:column="50">arg_item<pos:position pos:line="9" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="60">list<pos:position pos:line="9" pos:column="64"/></name></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="66"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="11" pos:column="17">list_del<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">pos<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>

		<expr_stmt><expr><name pos:line="13" pos:column="17">applied<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <call><name pos:line="13" pos:column="27">find_same_and_apply_arg<pos:position pos:line="13" pos:column="50"/></name><argument_list pos:line="13" pos:column="50">(<argument><expr><name pos:line="13" pos:column="51">head<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="57">arg_tok<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">applied<pos:position pos:line="15" pos:column="29"/></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">apply_arg_if_missing<pos:position pos:line="16" pos:column="45"/></name><argument_list pos:line="16" pos:column="45">(<argument><expr><name pos:line="16" pos:column="46">head<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">arg_tok<pos:position pos:line="16" pos:column="59"/></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt></block></then></if>
	}<pos:position pos:line="17" pos:column="10"/></block>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

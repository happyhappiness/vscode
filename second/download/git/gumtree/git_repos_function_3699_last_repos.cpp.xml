<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3699_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">ip2str<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">family<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">sockaddr<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">sin<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">socklen_t<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">len<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">NO_IPV6<pos:position pos:line="3" pos:column="15"/></name></cpp:ifdef>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name></type> <name><name pos:line="4" pos:column="21">ip<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><name pos:line="4" pos:column="24">INET_ADDRSTRLEN<pos:position pos:line="4" pos:column="39"/></name></expr>]<pos:position pos:line="4" pos:column="40"/></index></name></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
<cpp:else pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">else<pos:position pos:line="5" pos:column="6"/></cpp:directive></cpp:else>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">char<pos:position pos:line="6" pos:column="20"/></name></type> <name><name pos:line="6" pos:column="21">ip<pos:position pos:line="6" pos:column="23"/></name><index pos:line="6" pos:column="23">[<expr><name pos:line="6" pos:column="24">INET6_ADDRSTRLEN<pos:position pos:line="6" pos:column="40"/></name></expr>]<pos:position pos:line="6" pos:column="41"/></index></name></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>

	<switch pos:line="9" pos:column="9">switch <condition pos:line="9" pos:column="16">(<expr><name pos:line="9" pos:column="17">family<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition> <block pos:line="9" pos:column="25">{
<cpp:ifndef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifndef<pos:position pos:line="10" pos:column="8"/></cpp:directive> <name pos:line="10" pos:column="9">NO_IPV6<pos:position pos:line="10" pos:column="16"/></name></cpp:ifndef>
	<case pos:line="11" pos:column="9">case <expr><name pos:line="11" pos:column="14">AF_INET6<pos:position pos:line="11" pos:column="22"/></name></expr>:<pos:position pos:line="11" pos:column="23"/></case>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">inet_ntop<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">family<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="35">&amp;<pos:position pos:line="12" pos:column="40"/></operator><operator pos:line="12" pos:column="36">(<pos:position pos:line="12" pos:column="37"/></operator><operator pos:line="12" pos:column="37">(<pos:position pos:line="12" pos:column="38"/></operator>struct <name pos:line="12" pos:column="45">sockaddr_in6<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">*<pos:position pos:line="12" pos:column="58"/></operator><operator pos:line="12" pos:column="58">)<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="59">sin<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">)<pos:position pos:line="12" pos:column="63"/></operator><operator pos:line="12" pos:column="63">-&gt;<pos:position pos:line="12" pos:column="68"/></operator><name pos:line="12" pos:column="65">sin6_addr<pos:position pos:line="12" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="76">ip<pos:position pos:line="12" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="80">len<pos:position pos:line="12" pos:column="83"/></name></expr></argument>)<pos:position pos:line="12" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="85"/></expr_stmt>
		<break pos:line="13" pos:column="17">break;<pos:position pos:line="13" pos:column="23"/></break>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
	<case pos:line="15" pos:column="9">case <expr><name pos:line="15" pos:column="14">AF_INET<pos:position pos:line="15" pos:column="21"/></name></expr>:<pos:position pos:line="15" pos:column="22"/></case>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">inet_ntop<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">family<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="35">&amp;<pos:position pos:line="16" pos:column="40"/></operator><operator pos:line="16" pos:column="36">(<pos:position pos:line="16" pos:column="37"/></operator><operator pos:line="16" pos:column="37">(<pos:position pos:line="16" pos:column="38"/></operator>struct <name pos:line="16" pos:column="45">sockaddr_in<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">*<pos:position pos:line="16" pos:column="57"/></operator><operator pos:line="16" pos:column="57">)<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="58">sin<pos:position pos:line="16" pos:column="61"/></name><operator pos:line="16" pos:column="61">)<pos:position pos:line="16" pos:column="62"/></operator><operator pos:line="16" pos:column="62">-&gt;<pos:position pos:line="16" pos:column="67"/></operator><name pos:line="16" pos:column="64">sin_addr<pos:position pos:line="16" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="74">ip<pos:position pos:line="16" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="78">len<pos:position pos:line="16" pos:column="81"/></name></expr></argument>)<pos:position pos:line="16" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="83"/></expr_stmt>
		<break pos:line="17" pos:column="17">break;<pos:position pos:line="17" pos:column="23"/></break>
	<default pos:line="18" pos:column="9">default:<pos:position pos:line="18" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">xsnprintf<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">ip<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="31">sizeof<argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">ip<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="43">"&lt;unknown&gt;"<pos:position pos:line="19" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></switch>
	<return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">ip<pos:position pos:line="21" pos:column="18"/></name></expr>;<pos:position pos:line="21" pos:column="19"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1767_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">atom_str<pos:position pos:line="1" pos:column="23"/></name></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">to_atom<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">s<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">unsigned<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">short<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">len<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">int<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">hc<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">hc_str<pos:position pos:line="3" pos:column="33"/></name><argument_list pos:line="3" pos:column="33">(<argument><expr><name pos:line="3" pos:column="34">s<pos:position pos:line="3" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="37">len<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call> <operator pos:line="3" pos:column="42">%<pos:position pos:line="3" pos:column="43"/></operator> <name pos:line="3" pos:column="44">atom_table_sz<pos:position pos:line="3" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">atom_str<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">c<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">c<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <name><name pos:line="6" pos:column="18">atom_table<pos:position pos:line="6" pos:column="28"/></name><index pos:line="6" pos:column="28">[<expr><name pos:line="6" pos:column="29">hc<pos:position pos:line="6" pos:column="31"/></name></expr>]<pos:position pos:line="6" pos:column="32"/></index></name></expr>;<pos:position pos:line="6" pos:column="33"/></init> <condition><expr><name pos:line="6" pos:column="34">c<pos:position pos:line="6" pos:column="35"/></name></expr>;<pos:position pos:line="6" pos:column="36"/></condition> <incr><expr><name pos:line="6" pos:column="37">c<pos:position pos:line="6" pos:column="38"/></name> <operator pos:line="6" pos:column="39">=<pos:position pos:line="6" pos:column="40"/></operator> <name><name pos:line="6" pos:column="41">c<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">-&gt;<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="44">next_atom<pos:position pos:line="6" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="54"/></control>
		<block type="pseudo"><if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name><name pos:line="7" pos:column="21">c<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">-&gt;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="24">str_len<pos:position pos:line="7" pos:column="31"/></name></name> <operator pos:line="7" pos:column="32">==<pos:position pos:line="7" pos:column="34"/></operator> <name pos:line="7" pos:column="35">len<pos:position pos:line="7" pos:column="38"/></name> <operator pos:line="7" pos:column="39">&amp;&amp;<pos:position pos:line="7" pos:column="49"/></operator> <operator pos:line="7" pos:column="42">!<pos:position pos:line="7" pos:column="43"/></operator><call><name pos:line="7" pos:column="43">strncmp<pos:position pos:line="7" pos:column="50"/></name><argument_list pos:line="7" pos:column="50">(<argument><expr><name pos:line="7" pos:column="51">s<pos:position pos:line="7" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="54">c<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">-&gt;<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="57">str_dat<pos:position pos:line="7" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="66">len<pos:position pos:line="7" pos:column="69"/></name></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="71"/></condition><then pos:line="7" pos:column="71">
			<block type="pseudo"><return pos:line="8" pos:column="25">return <expr><name pos:line="8" pos:column="32">c<pos:position pos:line="8" pos:column="33"/></name></expr>;<pos:position pos:line="8" pos:column="34"/></return></block></then></if></block></for>

	<expr_stmt><expr><name pos:line="10" pos:column="9">c<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">pool_alloc<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><sizeof pos:line="10" pos:column="24">sizeof<argument_list pos:line="10" pos:column="30">(<argument><expr pos:line="10" pos:column="31">struct <name pos:line="10" pos:column="38">atom_str<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></sizeof> <operator pos:line="10" pos:column="48">+<pos:position pos:line="10" pos:column="49"/></operator> <name pos:line="10" pos:column="50">len<pos:position pos:line="10" pos:column="53"/></name> <operator pos:line="10" pos:column="54">+<pos:position pos:line="10" pos:column="55"/></operator> <literal type="number" pos:line="10" pos:column="56">1<pos:position pos:line="10" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">c<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">str_len<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">len<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">memcpy<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name><name pos:line="12" pos:column="16">c<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">str_dat<pos:position pos:line="12" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="28">s<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="31">len<pos:position pos:line="12" pos:column="34"/></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">c<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">str_dat<pos:position pos:line="13" pos:column="19"/></name><index pos:line="13" pos:column="19">[<expr><name pos:line="13" pos:column="20">len<pos:position pos:line="13" pos:column="23"/></name></expr>]<pos:position pos:line="13" pos:column="24"/></index></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <literal type="number" pos:line="13" pos:column="27">0<pos:position pos:line="13" pos:column="28"/></literal></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">c<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">next_atom<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <name><name pos:line="14" pos:column="24">atom_table<pos:position pos:line="14" pos:column="34"/></name><index pos:line="14" pos:column="34">[<expr><name pos:line="14" pos:column="35">hc<pos:position pos:line="14" pos:column="37"/></name></expr>]<pos:position pos:line="14" pos:column="38"/></index></name></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">atom_table<pos:position pos:line="15" pos:column="19"/></name><index pos:line="15" pos:column="19">[<expr><name pos:line="15" pos:column="20">hc<pos:position pos:line="15" pos:column="22"/></name></expr>]<pos:position pos:line="15" pos:column="23"/></index></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="26">c<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">atom_cnt<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">++<pos:position pos:line="16" pos:column="19"/></operator></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
	<return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">c<pos:position pos:line="17" pos:column="17"/></name></expr>;<pos:position pos:line="17" pos:column="18"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

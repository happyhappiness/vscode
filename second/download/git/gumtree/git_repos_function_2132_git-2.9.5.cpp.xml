<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2132_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_multipart_boundary<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">mailinfo<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">mi<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name><name pos:line="1" pos:column="61">struct<pos:position pos:line="1" pos:column="67"/></name> <name pos:line="1" pos:column="68">strbuf<pos:position pos:line="1" pos:column="74"/></name></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">line<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">content_top<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><operator pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></operator><operator pos:line="3" pos:column="39">(<pos:position pos:line="3" pos:column="40"/></operator><name><name pos:line="3" pos:column="40">mi<pos:position pos:line="3" pos:column="42"/></name><operator pos:line="3" pos:column="42">-&gt;<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="44">content_top<pos:position pos:line="3" pos:column="55"/></name></name><operator pos:line="3" pos:column="55">)<pos:position pos:line="3" pos:column="56"/></operator></expr></init></decl>;<pos:position pos:line="3" pos:column="57"/></decl_stmt>

	<return pos:line="5" pos:column="9">return <expr><operator pos:line="5" pos:column="16">(<pos:position pos:line="5" pos:column="17"/></operator><operator pos:line="5" pos:column="17">(<pos:position pos:line="5" pos:column="18"/></operator><name><name pos:line="5" pos:column="18">content_top<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">len<pos:position pos:line="5" pos:column="34"/></name></name> <operator pos:line="5" pos:column="35">&lt;=<pos:position pos:line="5" pos:column="40"/></operator> <name><name pos:line="5" pos:column="38">line<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">len<pos:position pos:line="5" pos:column="47"/></name></name><operator pos:line="5" pos:column="47">)<pos:position pos:line="5" pos:column="48"/></operator> <operator pos:line="5" pos:column="49">&amp;&amp;<pos:position pos:line="5" pos:column="59"/></operator>
		<operator pos:line="6" pos:column="17">!<pos:position pos:line="6" pos:column="18"/></operator><call><name pos:line="6" pos:column="18">memcmp<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name><name pos:line="6" pos:column="25">line<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">buf<pos:position pos:line="6" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="36">content_top<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">-&gt;<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="49">buf<pos:position pos:line="6" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="54">content_top<pos:position pos:line="6" pos:column="65"/></name><operator pos:line="6" pos:column="65">-&gt;<pos:position pos:line="6" pos:column="70"/></operator><name pos:line="6" pos:column="67">len<pos:position pos:line="6" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call><operator pos:line="6" pos:column="71">)<pos:position pos:line="6" pos:column="72"/></operator></expr>;<pos:position pos:line="6" pos:column="73"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

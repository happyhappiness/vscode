<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4546_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">hashmap_add<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name><name pos:line="1" pos:column="18">struct<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">hashmap<pos:position pos:line="1" pos:column="32"/></name></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">map<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">void<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">entry<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">int<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">b<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><call><name pos:line="3" pos:column="26">bucket<pos:position pos:line="3" pos:column="32"/></name><argument_list pos:line="3" pos:column="32">(<argument><expr><name pos:line="3" pos:column="33">map<pos:position pos:line="3" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="38">entry<pos:position pos:line="3" pos:column="43"/></name></expr></argument>)<pos:position pos:line="3" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* add entry */</comment>
	<expr_stmt><expr><operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator>struct <name pos:line="6" pos:column="18">hashmap_entry<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></operator><operator pos:line="6" pos:column="33">)<pos:position pos:line="6" pos:column="34"/></operator> <name pos:line="6" pos:column="35">entry<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">)<pos:position pos:line="6" pos:column="41"/></operator><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">next<pos:position pos:line="6" pos:column="47"/></name> <operator pos:line="6" pos:column="48">=<pos:position pos:line="6" pos:column="49"/></operator> <name><name pos:line="6" pos:column="50">map<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">-&gt;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="55">table<pos:position pos:line="6" pos:column="60"/></name><index pos:line="6" pos:column="60">[<expr><name pos:line="6" pos:column="61">b<pos:position pos:line="6" pos:column="62"/></name></expr>]<pos:position pos:line="6" pos:column="63"/></index></name></expr>;<pos:position pos:line="6" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">map<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">table<pos:position pos:line="7" pos:column="19"/></name><index pos:line="7" pos:column="19">[<expr><name pos:line="7" pos:column="20">b<pos:position pos:line="7" pos:column="21"/></name></expr>]<pos:position pos:line="7" pos:column="22"/></index></name> <operator pos:line="7" pos:column="23">=<pos:position pos:line="7" pos:column="24"/></operator> <name pos:line="7" pos:column="25">entry<pos:position pos:line="7" pos:column="30"/></name></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>

	<comment type="block" pos:line="9" pos:column="9">/* fix size and rehash if appropriate */</comment>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">map<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">size<pos:position pos:line="10" pos:column="18"/></name></name><operator pos:line="10" pos:column="18">++<pos:position pos:line="10" pos:column="20"/></operator></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">map<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">size<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">&gt;<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="25">map<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">grow_at<pos:position pos:line="11" pos:column="37"/></name></name></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">rehash<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">map<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="29">map<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">tablesize<pos:position pos:line="12" pos:column="43"/></name></name> <operator pos:line="12" pos:column="44">&lt;&lt;<pos:position pos:line="12" pos:column="52"/></operator> <name pos:line="12" pos:column="47">HASHMAP_RESIZE_BITS<pos:position pos:line="12" pos:column="66"/></name></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="68"/></expr_stmt></block></then></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

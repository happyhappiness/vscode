<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2070_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_stat_data<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">cache_entry<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ce<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">object_id<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier><modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">oidp<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="3" pos:column="26">unsigned<pos:position pos:line="3" pos:column="34"/></name> <name pos:line="3" pos:column="35">int<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">modep<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="4" pos:column="26">int<pos:position pos:line="4" pos:column="29"/></name></type> <name pos:line="4" pos:column="30">cached<pos:position pos:line="4" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="38">int<pos:position pos:line="4" pos:column="41"/></name></type> <name pos:line="4" pos:column="42">match_missing<pos:position pos:line="4" pos:column="55"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="5" pos:column="26">unsigned<pos:position pos:line="5" pos:column="34"/></name> <modifier pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></modifier></type><name pos:line="5" pos:column="36">dirty_submodule<pos:position pos:line="5" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="5" pos:column="53">struct<pos:position pos:line="5" pos:column="59"/></name> <name pos:line="5" pos:column="60">diff_options<pos:position pos:line="5" pos:column="72"/></name></name> <modifier pos:line="5" pos:column="73">*<pos:position pos:line="5" pos:column="74"/></modifier></type><name pos:line="5" pos:column="74">diffopt<pos:position pos:line="5" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="82"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name><name pos:line="7" pos:column="15">struct<pos:position pos:line="7" pos:column="21"/></name> <name pos:line="7" pos:column="22">object_id<pos:position pos:line="7" pos:column="31"/></name></name> <modifier pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></modifier></type><name pos:line="7" pos:column="33">oid<pos:position pos:line="7" pos:column="36"/></name> <init pos:line="7" pos:column="37">= <expr><operator pos:line="7" pos:column="39">&amp;<pos:position pos:line="7" pos:column="44"/></operator><name><name pos:line="7" pos:column="40">ce<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">-&gt;<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="44">oid<pos:position pos:line="7" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">int<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">mode<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name><name pos:line="8" pos:column="29">ce<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">-&gt;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="33">ce_mode<pos:position pos:line="8" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">cached<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">&amp;&amp;<pos:position pos:line="10" pos:column="31"/></operator> <operator pos:line="10" pos:column="24">!<pos:position pos:line="10" pos:column="25"/></operator><call><name pos:line="10" pos:column="25">ce_uptodate<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">(<argument><expr><name pos:line="10" pos:column="37">ce<pos:position pos:line="10" pos:column="39"/></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="41"/></condition><then pos:line="10" pos:column="41"> <block pos:line="10" pos:column="42">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">changed<pos:position pos:line="11" pos:column="28"/></name></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">stat<pos:position pos:line="12" pos:column="28"/></name></name></type> <name pos:line="12" pos:column="29">st<pos:position pos:line="12" pos:column="31"/></name></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>
		<expr_stmt><expr><name pos:line="13" pos:column="17">changed<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <call><name pos:line="13" pos:column="27">check_removed<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><expr><name pos:line="13" pos:column="41">ce<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="45">&amp;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="46">st<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">changed<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">&lt;<pos:position pos:line="14" pos:column="33"/></operator> <literal type="number" pos:line="14" pos:column="31">0<pos:position pos:line="14" pos:column="32"/></literal></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33">
			<block type="pseudo"><return pos:line="15" pos:column="25">return <expr><operator pos:line="15" pos:column="32">-<pos:position pos:line="15" pos:column="33"/></operator><literal type="number" pos:line="15" pos:column="33">1<pos:position pos:line="15" pos:column="34"/></literal></expr>;<pos:position pos:line="15" pos:column="35"/></return></block></then>
		<elseif pos:line="16" pos:column="17">else <if pos:line="16" pos:column="22">if <condition pos:line="16" pos:column="25">(<expr><name pos:line="16" pos:column="26">changed<pos:position pos:line="16" pos:column="33"/></name></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34"> <block pos:line="16" pos:column="35">{
			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><name pos:line="17" pos:column="29">match_missing<pos:position pos:line="17" pos:column="42"/></name></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43"> <block pos:line="17" pos:column="44">{
				<expr_stmt><expr><operator pos:line="18" pos:column="33">*<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="34">oidp<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">=<pos:position pos:line="18" pos:column="40"/></operator> <name pos:line="18" pos:column="41">oid<pos:position pos:line="18" pos:column="44"/></name></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="19" pos:column="33">*<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">modep<pos:position pos:line="19" pos:column="39"/></name> <operator pos:line="19" pos:column="40">=<pos:position pos:line="19" pos:column="41"/></operator> <name pos:line="19" pos:column="42">mode<pos:position pos:line="19" pos:column="46"/></name></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
				<return pos:line="20" pos:column="33">return <expr><literal type="number" pos:line="20" pos:column="40">0<pos:position pos:line="20" pos:column="41"/></literal></expr>;<pos:position pos:line="20" pos:column="42"/></return>
			}<pos:position pos:line="21" pos:column="26"/></block></then></if>
			<return pos:line="22" pos:column="25">return <expr><operator pos:line="22" pos:column="32">-<pos:position pos:line="22" pos:column="33"/></operator><literal type="number" pos:line="22" pos:column="33">1<pos:position pos:line="22" pos:column="34"/></literal></expr>;<pos:position pos:line="22" pos:column="35"/></return>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><name pos:line="24" pos:column="17">changed<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <call><name pos:line="24" pos:column="27">match_stat_with_submodule<pos:position pos:line="24" pos:column="52"/></name><argument_list pos:line="24" pos:column="52">(<argument><expr><name pos:line="24" pos:column="53">diffopt<pos:position pos:line="24" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="62">ce<pos:position pos:line="24" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="66">&amp;<pos:position pos:line="24" pos:column="71"/></operator><name pos:line="24" pos:column="67">st<pos:position pos:line="24" pos:column="69"/></name></expr></argument>,
						    <argument><expr><literal type="number" pos:line="25" pos:column="53">0<pos:position pos:line="25" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="56">dirty_submodule<pos:position pos:line="25" pos:column="71"/></name></expr></argument>)<pos:position pos:line="25" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="73"/></expr_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">changed<pos:position pos:line="26" pos:column="28"/></name></expr>)<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29"> <block pos:line="26" pos:column="30">{
			<expr_stmt><expr><name pos:line="27" pos:column="25">mode<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">=<pos:position pos:line="27" pos:column="31"/></operator> <call><name pos:line="27" pos:column="32">ce_mode_from_stat<pos:position pos:line="27" pos:column="49"/></name><argument_list pos:line="27" pos:column="49">(<argument><expr><name pos:line="27" pos:column="50">ce<pos:position pos:line="27" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="54">st<pos:position pos:line="27" pos:column="56"/></name><operator pos:line="27" pos:column="56">.<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="57">st_mode<pos:position pos:line="27" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">oid<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <operator pos:line="28" pos:column="31">&amp;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="32">null_oid<pos:position pos:line="28" pos:column="40"/></name></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="32" pos:column="9">*<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">oidp<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <name pos:line="32" pos:column="17">oid<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">modep<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <name pos:line="33" pos:column="18">mode<pos:position pos:line="33" pos:column="22"/></name></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>
	<return pos:line="34" pos:column="9">return <expr><literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

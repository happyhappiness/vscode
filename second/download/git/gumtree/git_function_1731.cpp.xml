<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1731.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">curl_append_msgs_to_imap<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">imap_server_conf<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">server<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="2" pos:column="37">struct<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">strbuf<pos:position pos:line="2" pos:column="50"/></name></name><modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type> <name pos:line="2" pos:column="52">all_msgs<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">int<pos:position pos:line="2" pos:column="65"/></name></type> <name pos:line="2" pos:column="66">total<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list> <block pos:line="2" pos:column="73">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ofs<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">n<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">buffer<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">msgbuf<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><block pos:line="5" pos:column="32">{ <expr><name pos:line="5" pos:column="34">STRBUF_INIT<pos:position pos:line="5" pos:column="45"/></name></expr>, <expr><literal type="number" pos:line="5" pos:column="47">0<pos:position pos:line="5" pos:column="48"/></literal></expr> }<pos:position pos:line="5" pos:column="50"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">CURL<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">curl<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">CURLcode<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">res<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><name pos:line="7" pos:column="24">CURLE_OK<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">curl<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <call><name pos:line="9" pos:column="16">setup_curl<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">server<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">curl_easy_setopt<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">curl<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">CURLOPT_READDATA<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="50">&amp;<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="51">msgbuf<pos:position pos:line="10" pos:column="57"/></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">fprintf<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">stderr<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="25">"sending %d message%s\n"<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="51">total<pos:position pos:line="12" pos:column="56"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="12" pos:column="58">(<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="59">total<pos:position pos:line="12" pos:column="64"/></name> <operator pos:line="12" pos:column="65">!=<pos:position pos:line="12" pos:column="67"/></operator> <literal type="number" pos:line="12" pos:column="68">1<pos:position pos:line="12" pos:column="69"/></literal><operator pos:line="12" pos:column="69">)<pos:position pos:line="12" pos:column="70"/></operator></expr> ?<pos:position pos:line="12" pos:column="72"/></condition><then pos:line="12" pos:column="72"> <expr><literal type="string" pos:line="12" pos:column="73">"s"<pos:position pos:line="12" pos:column="76"/></literal></expr> <pos:position pos:line="12" pos:column="77"/></then><else pos:line="12" pos:column="77">: <expr><literal type="string" pos:line="12" pos:column="79">""<pos:position pos:line="12" pos:column="81"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="12" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="83"/></expr_stmt>
	<while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>)<pos:position pos:line="13" pos:column="18"/></condition> <block pos:line="13" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">unsigned<pos:position pos:line="14" pos:column="25"/></name></type> <name pos:line="14" pos:column="26">percent<pos:position pos:line="14" pos:column="33"/></name> <init pos:line="14" pos:column="34">= <expr><name pos:line="14" pos:column="36">n<pos:position pos:line="14" pos:column="37"/></name> <operator pos:line="14" pos:column="38">*<pos:position pos:line="14" pos:column="39"/></operator> <literal type="number" pos:line="14" pos:column="40">100<pos:position pos:line="14" pos:column="43"/></literal> <operator pos:line="14" pos:column="44">/<pos:position pos:line="14" pos:column="45"/></operator> <name pos:line="14" pos:column="46">total<pos:position pos:line="14" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="52"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">int<pos:position pos:line="15" pos:column="20"/></name></type> <name pos:line="15" pos:column="21">prev_len<pos:position pos:line="15" pos:column="29"/></name></decl>;<pos:position pos:line="15" pos:column="30"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="17" pos:column="17">fprintf<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">stderr<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="33">"%4u%% (%d/%d) done\r"<pos:position pos:line="17" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="57">percent<pos:position pos:line="17" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="66">n<pos:position pos:line="17" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="69">total<pos:position pos:line="17" pos:column="74"/></name></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="76"/></expr_stmt>

		<expr_stmt><expr><name pos:line="19" pos:column="17">prev_len<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <name><name pos:line="19" pos:column="28">msgbuf<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">.<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">buf<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">.<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="39">len<pos:position pos:line="19" pos:column="42"/></name></name></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><call><name pos:line="20" pos:column="22">split_msg<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">all_msgs<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="42">&amp;<pos:position pos:line="20" pos:column="47"/></operator><name><name pos:line="20" pos:column="43">msgbuf<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">.<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">buf<pos:position pos:line="20" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="55">&amp;<pos:position pos:line="20" pos:column="60"/></operator><name pos:line="20" pos:column="56">ofs<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="61"/></condition><then pos:line="20" pos:column="61">
			<block type="pseudo"><break pos:line="21" pos:column="25">break;<pos:position pos:line="21" pos:column="31"/></break></block></then></if>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">server<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">use_html<pos:position pos:line="22" pos:column="37"/></name></name></expr>)<pos:position pos:line="22" pos:column="38"/></condition><then pos:line="22" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">wrap_in_html<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><operator pos:line="23" pos:column="38">&amp;<pos:position pos:line="23" pos:column="43"/></operator><name><name pos:line="23" pos:column="39">msgbuf<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">.<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="46">buf<pos:position pos:line="23" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">lf_to_crlf<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><operator pos:line="24" pos:column="28">&amp;<pos:position pos:line="24" pos:column="33"/></operator><name><name pos:line="24" pos:column="29">msgbuf<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">.<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="36">buf<pos:position pos:line="24" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="26" pos:column="17">curl_easy_setopt<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">curl<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="40">CURLOPT_INFILESIZE_LARGE<pos:position pos:line="26" pos:column="64"/></name></expr></argument>,
				 <argument><expr><call pos:line="27" pos:column="34">(<name pos:line="27" pos:column="35">curl_off_t<pos:position pos:line="27" pos:column="45"/></name>)<argument_list pos:line="27" pos:column="46">(<argument><expr><name><name pos:line="27" pos:column="47">msgbuf<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">.<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="54">buf<pos:position pos:line="27" pos:column="57"/></name><operator pos:line="27" pos:column="57">.<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="58">len<pos:position pos:line="27" pos:column="61"/></name></name><operator pos:line="27" pos:column="61">-<pos:position pos:line="27" pos:column="62"/></operator><name pos:line="27" pos:column="62">prev_len<pos:position pos:line="27" pos:column="70"/></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="73"/></expr_stmt>

		<expr_stmt><expr><name pos:line="29" pos:column="17">res<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <call><name pos:line="29" pos:column="23">curl_easy_perform<pos:position pos:line="29" pos:column="40"/></name><argument_list pos:line="29" pos:column="40">(<argument><expr><name pos:line="29" pos:column="41">curl<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>

		<if pos:line="31" pos:column="17">if<condition pos:line="31" pos:column="19">(<expr><name pos:line="31" pos:column="20">res<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">!=<pos:position pos:line="31" pos:column="26"/></operator> <name pos:line="31" pos:column="27">CURLE_OK<pos:position pos:line="31" pos:column="35"/></name></expr>)<pos:position pos:line="31" pos:column="36"/></condition><then pos:line="31" pos:column="36"> <block pos:line="31" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">fprintf<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">stderr<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="41">"curl_easy_perform() failed: %s\n"<pos:position pos:line="32" pos:column="75"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="33" pos:column="41">curl_easy_strerror<pos:position pos:line="33" pos:column="59"/></name><argument_list pos:line="33" pos:column="59">(<argument><expr><name pos:line="33" pos:column="60">res<pos:position pos:line="33" pos:column="63"/></name></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="66"/></expr_stmt>
			<break pos:line="34" pos:column="25">break;<pos:position pos:line="34" pos:column="31"/></break>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="37" pos:column="17">n<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">++<pos:position pos:line="37" pos:column="20"/></operator></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">fprintf<pos:position pos:line="39" pos:column="16"/></name><argument_list pos:line="39" pos:column="16">(<argument><expr><name pos:line="39" pos:column="17">stderr<pos:position pos:line="39" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="25">"\n"<pos:position pos:line="39" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="41" pos:column="9">curl_easy_cleanup<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><name pos:line="41" pos:column="27">curl<pos:position pos:line="41" pos:column="31"/></name></expr></argument>)<pos:position pos:line="41" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">curl_global_cleanup<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">()<pos:position pos:line="42" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="31"/></expr_stmt>

	<return pos:line="44" pos:column="9">return <expr><literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

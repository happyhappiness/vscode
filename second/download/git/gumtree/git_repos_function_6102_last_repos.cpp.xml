<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6102_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_diff_tree<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">argc<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">argv<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">prefix<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">line<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><literal type="number" pos:line="3" pos:column="19">1000<pos:position pos:line="3" pos:column="23"/></literal></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">tree1<pos:position pos:line="4" pos:column="29"/></name></decl>, <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="32">tree2<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name><name pos:line="5" pos:column="16">struct<pos:position pos:line="5" pos:column="22"/></name> <name pos:line="5" pos:column="23">rev_info<pos:position pos:line="5" pos:column="31"/></name></name> <modifier pos:line="5" pos:column="32">*<pos:position pos:line="5" pos:column="33"/></modifier></type><name pos:line="5" pos:column="33">opt<pos:position pos:line="5" pos:column="36"/></name> <init pos:line="5" pos:column="37">= <expr><operator pos:line="5" pos:column="39">&amp;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="40">log_tree_opt<pos:position pos:line="5" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">setup_revision_opt<pos:position pos:line="6" pos:column="34"/></name></name></type> <name pos:line="6" pos:column="35">s_r_opt<pos:position pos:line="6" pos:column="42"/></name></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">read_stdin<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">argc<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">==<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="21">2<pos:position pos:line="9" pos:column="22"/></literal> <operator pos:line="9" pos:column="23">&amp;&amp;<pos:position pos:line="9" pos:column="33"/></operator> <operator pos:line="9" pos:column="26">!<pos:position pos:line="9" pos:column="27"/></operator><call><name pos:line="9" pos:column="27">strcmp<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name><name pos:line="9" pos:column="34">argv<pos:position pos:line="9" pos:column="38"/></name><index pos:line="9" pos:column="38">[<expr><literal type="number" pos:line="9" pos:column="39">1<pos:position pos:line="9" pos:column="40"/></literal></expr>]<pos:position pos:line="9" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="43">"-h"<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">usage<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">diff_tree_usage<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">git_config<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">git_diff_basic_config<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">NULL<pos:position pos:line="12" pos:column="47"/></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt> <comment type="block" pos:line="12" pos:column="50">/* no "diff" UI options */</comment>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">init_revisions<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">opt<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">prefix<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">gitmodules_config<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">()<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">opt<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">abbrev<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <literal type="number" pos:line="15" pos:column="23">0<pos:position pos:line="15" pos:column="24"/></literal></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">opt<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">diff<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <literal type="number" pos:line="16" pos:column="21">1<pos:position pos:line="16" pos:column="22"/></literal></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">opt<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">disable_stdin<pos:position pos:line="17" pos:column="27"/></name></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <literal type="number" pos:line="17" pos:column="30">1<pos:position pos:line="17" pos:column="31"/></literal></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">memset<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><operator pos:line="18" pos:column="16">&amp;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="17">s_r_opt<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="29">sizeof<argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">s_r_opt<pos:position pos:line="18" pos:column="43"/></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">s_r_opt<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">tweak<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">diff_tree_tweak_rev<pos:position pos:line="19" pos:column="44"/></name></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="21" pos:column="9">precompose_argv<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">argc<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="31">argv<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">argc<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">setup_revisions<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">argc<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">argv<pos:position pos:line="22" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="44">opt<pos:position pos:line="22" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="49">&amp;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="50">s_r_opt<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>

	<while pos:line="24" pos:column="9">while <condition pos:line="24" pos:column="15">(<expr><operator pos:line="24" pos:column="16">--<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">argc<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">&gt;<pos:position pos:line="24" pos:column="27"/></operator> <literal type="number" pos:line="24" pos:column="25">0<pos:position pos:line="24" pos:column="26"/></literal></expr>)<pos:position pos:line="24" pos:column="27"/></condition> <block pos:line="24" pos:column="28">{
		<decl_stmt><decl><type><specifier pos:line="25" pos:column="17">const<pos:position pos:line="25" pos:column="22"/></specifier> <name pos:line="25" pos:column="23">char<pos:position pos:line="25" pos:column="27"/></name> <modifier pos:line="25" pos:column="28">*<pos:position pos:line="25" pos:column="29"/></modifier></type><name pos:line="25" pos:column="29">arg<pos:position pos:line="25" pos:column="32"/></name> <init pos:line="25" pos:column="33">= <expr><operator pos:line="25" pos:column="35">*<pos:position pos:line="25" pos:column="36"/></operator><operator pos:line="25" pos:column="36">++<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="38">argv<pos:position pos:line="25" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="43"/></decl_stmt>

		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><call><name pos:line="27" pos:column="22">strcmp<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">arg<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="34">"--stdin"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="45"/></condition><then pos:line="27" pos:column="45"> <block pos:line="27" pos:column="46">{
			<expr_stmt><expr><name pos:line="28" pos:column="25">read_stdin<pos:position pos:line="28" pos:column="35"/></name> <operator pos:line="28" pos:column="36">=<pos:position pos:line="28" pos:column="37"/></operator> <literal type="number" pos:line="28" pos:column="38">1<pos:position pos:line="28" pos:column="39"/></literal></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
			<continue pos:line="29" pos:column="25">continue;<pos:position pos:line="29" pos:column="34"/></continue>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">usage<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">diff_tree_usage<pos:position pos:line="31" pos:column="38"/></name></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></while>

	<comment type="block" pos:line="34" pos:column="9">/*
	 * NOTE!  We expect "a..b" to expand to "^a b" but it is
	 * perfectly valid for revision range parser to yield "b ^a",
	 * which means the same thing. If we get the latter, i.e. the
	 * second one is marked UNINTERESTING, we recover the original
	 * order the user gave, i.e. "a..b", by swapping the trees.
	 */</comment>
	<switch pos:line="41" pos:column="9">switch <condition pos:line="41" pos:column="16">(<expr><name><name pos:line="41" pos:column="17">opt<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">pending<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">.<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="30">nr<pos:position pos:line="41" pos:column="32"/></name></name></expr>)<pos:position pos:line="41" pos:column="33"/></condition> <block pos:line="41" pos:column="34">{
	<case pos:line="42" pos:column="9">case <expr><literal type="number" pos:line="42" pos:column="14">0<pos:position pos:line="42" pos:column="15"/></literal></expr>:<pos:position pos:line="42" pos:column="16"/></case>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">!<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">read_stdin<pos:position pos:line="43" pos:column="32"/></name></expr>)<pos:position pos:line="43" pos:column="33"/></condition><then pos:line="43" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="25">usage<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">diff_tree_usage<pos:position pos:line="44" pos:column="46"/></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt></block></then></if>
		<break pos:line="45" pos:column="17">break;<pos:position pos:line="45" pos:column="23"/></break>
	<case pos:line="46" pos:column="9">case <expr><literal type="number" pos:line="46" pos:column="14">1<pos:position pos:line="46" pos:column="15"/></literal></expr>:<pos:position pos:line="46" pos:column="16"/></case>
		<expr_stmt><expr><name pos:line="47" pos:column="17">tree1<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">=<pos:position pos:line="47" pos:column="24"/></operator> <name><name pos:line="47" pos:column="25">opt<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">-&gt;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="30">pending<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">.<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="38">objects<pos:position pos:line="47" pos:column="45"/></name><index pos:line="47" pos:column="45">[<expr><literal type="number" pos:line="47" pos:column="46">0<pos:position pos:line="47" pos:column="47"/></literal></expr>]<pos:position pos:line="47" pos:column="48"/></index></name><operator pos:line="47" pos:column="48">.<pos:position pos:line="47" pos:column="49"/></operator><name pos:line="47" pos:column="49">item<pos:position pos:line="47" pos:column="53"/></name></expr>;<pos:position pos:line="47" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">diff_tree_commit_oid<pos:position pos:line="48" pos:column="37"/></name><argument_list pos:line="48" pos:column="37">(<argument><expr><operator pos:line="48" pos:column="38">&amp;<pos:position pos:line="48" pos:column="43"/></operator><name><name pos:line="48" pos:column="39">tree1<pos:position pos:line="48" pos:column="44"/></name><operator pos:line="48" pos:column="44">-&gt;<pos:position pos:line="48" pos:column="49"/></operator><name pos:line="48" pos:column="46">oid<pos:position pos:line="48" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt>
		<break pos:line="49" pos:column="17">break;<pos:position pos:line="49" pos:column="23"/></break>
	<case pos:line="50" pos:column="9">case <expr><literal type="number" pos:line="50" pos:column="14">2<pos:position pos:line="50" pos:column="15"/></literal></expr>:<pos:position pos:line="50" pos:column="16"/></case>
		<expr_stmt><expr><name pos:line="51" pos:column="17">tree1<pos:position pos:line="51" pos:column="22"/></name> <operator pos:line="51" pos:column="23">=<pos:position pos:line="51" pos:column="24"/></operator> <name><name pos:line="51" pos:column="25">opt<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">-&gt;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="30">pending<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">.<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="38">objects<pos:position pos:line="51" pos:column="45"/></name><index pos:line="51" pos:column="45">[<expr><literal type="number" pos:line="51" pos:column="46">0<pos:position pos:line="51" pos:column="47"/></literal></expr>]<pos:position pos:line="51" pos:column="48"/></index></name><operator pos:line="51" pos:column="48">.<pos:position pos:line="51" pos:column="49"/></operator><name pos:line="51" pos:column="49">item<pos:position pos:line="51" pos:column="53"/></name></expr>;<pos:position pos:line="51" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="52" pos:column="17">tree2<pos:position pos:line="52" pos:column="22"/></name> <operator pos:line="52" pos:column="23">=<pos:position pos:line="52" pos:column="24"/></operator> <name><name pos:line="52" pos:column="25">opt<pos:position pos:line="52" pos:column="28"/></name><operator pos:line="52" pos:column="28">-&gt;<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="30">pending<pos:position pos:line="52" pos:column="37"/></name><operator pos:line="52" pos:column="37">.<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="38">objects<pos:position pos:line="52" pos:column="45"/></name><index pos:line="52" pos:column="45">[<expr><literal type="number" pos:line="52" pos:column="46">1<pos:position pos:line="52" pos:column="47"/></literal></expr>]<pos:position pos:line="52" pos:column="48"/></index></name><operator pos:line="52" pos:column="48">.<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="49">item<pos:position pos:line="52" pos:column="53"/></name></expr>;<pos:position pos:line="52" pos:column="54"/></expr_stmt>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name><name pos:line="53" pos:column="21">tree2<pos:position pos:line="53" pos:column="26"/></name><operator pos:line="53" pos:column="26">-&gt;<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="28">flags<pos:position pos:line="53" pos:column="33"/></name></name> <operator pos:line="53" pos:column="34">&amp;<pos:position pos:line="53" pos:column="39"/></operator> <name pos:line="53" pos:column="36">UNINTERESTING<pos:position pos:line="53" pos:column="49"/></name></expr>)<pos:position pos:line="53" pos:column="50"/></condition><then pos:line="53" pos:column="50"> <block pos:line="53" pos:column="51">{
			<expr_stmt><expr><call><name pos:line="54" pos:column="25">SWAP<pos:position pos:line="54" pos:column="29"/></name><argument_list pos:line="54" pos:column="29">(<argument><expr><name pos:line="54" pos:column="30">tree2<pos:position pos:line="54" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="37">tree1<pos:position pos:line="54" pos:column="42"/></name></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">diff_tree_oid<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><operator pos:line="56" pos:column="31">&amp;<pos:position pos:line="56" pos:column="36"/></operator><name><name pos:line="56" pos:column="32">tree1<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">-&gt;<pos:position pos:line="56" pos:column="42"/></operator><name pos:line="56" pos:column="39">oid<pos:position pos:line="56" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="44">&amp;<pos:position pos:line="56" pos:column="49"/></operator><name><name pos:line="56" pos:column="45">tree2<pos:position pos:line="56" pos:column="50"/></name><operator pos:line="56" pos:column="50">-&gt;<pos:position pos:line="56" pos:column="55"/></operator><name pos:line="56" pos:column="52">oid<pos:position pos:line="56" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="57">""<pos:position pos:line="56" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="56" pos:column="61">&amp;<pos:position pos:line="56" pos:column="66"/></operator><name><name pos:line="56" pos:column="62">opt<pos:position pos:line="56" pos:column="65"/></name><operator pos:line="56" pos:column="65">-&gt;<pos:position pos:line="56" pos:column="70"/></operator><name pos:line="56" pos:column="67">diffopt<pos:position pos:line="56" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">log_tree_diff_flush<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><name pos:line="57" pos:column="37">opt<pos:position pos:line="57" pos:column="40"/></name></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="42"/></expr_stmt>
		<break pos:line="58" pos:column="17">break;<pos:position pos:line="58" pos:column="23"/></break>
	}<pos:position pos:line="59" pos:column="10"/></block></switch>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">read_stdin<pos:position pos:line="61" pos:column="23"/></name></expr>)<pos:position pos:line="61" pos:column="24"/></condition><then pos:line="61" pos:column="24"> <block pos:line="61" pos:column="25">{
		<decl_stmt><decl><type><name pos:line="62" pos:column="17">int<pos:position pos:line="62" pos:column="20"/></name></type> <name pos:line="62" pos:column="21">saved_nrl<pos:position pos:line="62" pos:column="30"/></name> <init pos:line="62" pos:column="31">= <expr><literal type="number" pos:line="62" pos:column="33">0<pos:position pos:line="62" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="62" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="63" pos:column="17">int<pos:position pos:line="63" pos:column="20"/></name></type> <name pos:line="63" pos:column="21">saved_dcctc<pos:position pos:line="63" pos:column="32"/></name> <init pos:line="63" pos:column="33">= <expr><literal type="number" pos:line="63" pos:column="35">0<pos:position pos:line="63" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="63" pos:column="37"/></decl_stmt>

		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name><name pos:line="65" pos:column="21">opt<pos:position pos:line="65" pos:column="24"/></name><operator pos:line="65" pos:column="24">-&gt;<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="26">diffopt<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">.<pos:position pos:line="65" pos:column="34"/></operator><name pos:line="65" pos:column="34">detect_rename<pos:position pos:line="65" pos:column="47"/></name></name></expr>)<pos:position pos:line="65" pos:column="48"/></condition><then pos:line="65" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="66" pos:column="25">opt<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">-&gt;<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="30">diffopt<pos:position pos:line="66" pos:column="37"/></name><operator pos:line="66" pos:column="37">.<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="38">setup<pos:position pos:line="66" pos:column="43"/></name></name> <operator pos:line="66" pos:column="44">|=<pos:position pos:line="66" pos:column="46"/></operator> <operator pos:line="66" pos:column="47">(<pos:position pos:line="66" pos:column="48"/></operator><name pos:line="66" pos:column="48">DIFF_SETUP_USE_SIZE_CACHE<pos:position pos:line="66" pos:column="73"/></name> <operator pos:line="66" pos:column="74">|<pos:position pos:line="66" pos:column="75"/></operator>
					       <name pos:line="67" pos:column="48">DIFF_SETUP_USE_CACHE<pos:position pos:line="67" pos:column="68"/></name><operator pos:line="67" pos:column="68">)<pos:position pos:line="67" pos:column="69"/></operator></expr>;<pos:position pos:line="67" pos:column="70"/></expr_stmt></block></then></if>
		<while pos:line="68" pos:column="17">while <condition pos:line="68" pos:column="23">(<expr><call><name pos:line="68" pos:column="24">fgets<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><name pos:line="68" pos:column="30">line<pos:position pos:line="68" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="36">sizeof<argument_list pos:line="68" pos:column="42">(<argument><expr><name pos:line="68" pos:column="43">line<pos:position pos:line="68" pos:column="47"/></name></expr></argument>)<pos:position pos:line="68" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="68" pos:column="50">stdin<pos:position pos:line="68" pos:column="55"/></name></expr></argument>)<pos:position pos:line="68" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="57"/></condition> <block pos:line="68" pos:column="58">{
			<decl_stmt><decl><type><name><name pos:line="69" pos:column="25">struct<pos:position pos:line="69" pos:column="31"/></name> <name pos:line="69" pos:column="32">object_id<pos:position pos:line="69" pos:column="41"/></name></name></type> <name pos:line="69" pos:column="42">oid<pos:position pos:line="69" pos:column="45"/></name></decl>;<pos:position pos:line="69" pos:column="46"/></decl_stmt>

			<if pos:line="71" pos:column="25">if <condition pos:line="71" pos:column="28">(<expr><call><name pos:line="71" pos:column="29">get_oid_hex<pos:position pos:line="71" pos:column="40"/></name><argument_list pos:line="71" pos:column="40">(<argument><expr><name pos:line="71" pos:column="41">line<pos:position pos:line="71" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="47">&amp;<pos:position pos:line="71" pos:column="52"/></operator><name pos:line="71" pos:column="48">oid<pos:position pos:line="71" pos:column="51"/></name></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="53"/></condition><then pos:line="71" pos:column="53"> <block pos:line="71" pos:column="54">{
				<expr_stmt><expr><call><name pos:line="72" pos:column="33">fputs<pos:position pos:line="72" pos:column="38"/></name><argument_list pos:line="72" pos:column="38">(<argument><expr><name pos:line="72" pos:column="39">line<pos:position pos:line="72" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="45">stdout<pos:position pos:line="72" pos:column="51"/></name></expr></argument>)<pos:position pos:line="72" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="73" pos:column="33">fflush<pos:position pos:line="73" pos:column="39"/></name><argument_list pos:line="73" pos:column="39">(<argument><expr><name pos:line="73" pos:column="40">stdout<pos:position pos:line="73" pos:column="46"/></name></expr></argument>)<pos:position pos:line="73" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="74" pos:column="26"/></block></then>
			<else pos:line="75" pos:column="25">else <block pos:line="75" pos:column="30">{
				<expr_stmt><expr><call><name pos:line="76" pos:column="33">diff_tree_stdin<pos:position pos:line="76" pos:column="48"/></name><argument_list pos:line="76" pos:column="48">(<argument><expr><name pos:line="76" pos:column="49">line<pos:position pos:line="76" pos:column="53"/></name></expr></argument>)<pos:position pos:line="76" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="55"/></expr_stmt>
				<if pos:line="77" pos:column="33">if <condition pos:line="77" pos:column="36">(<expr><name pos:line="77" pos:column="37">saved_nrl<pos:position pos:line="77" pos:column="46"/></name> <operator pos:line="77" pos:column="47">&lt;<pos:position pos:line="77" pos:column="51"/></operator> <name><name pos:line="77" pos:column="49">opt<pos:position pos:line="77" pos:column="52"/></name><operator pos:line="77" pos:column="52">-&gt;<pos:position pos:line="77" pos:column="57"/></operator><name pos:line="77" pos:column="54">diffopt<pos:position pos:line="77" pos:column="61"/></name><operator pos:line="77" pos:column="61">.<pos:position pos:line="77" pos:column="62"/></operator><name pos:line="77" pos:column="62">needed_rename_limit<pos:position pos:line="77" pos:column="81"/></name></name></expr>)<pos:position pos:line="77" pos:column="82"/></condition><then pos:line="77" pos:column="82">
					<block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="41">saved_nrl<pos:position pos:line="78" pos:column="50"/></name> <operator pos:line="78" pos:column="51">=<pos:position pos:line="78" pos:column="52"/></operator> <name><name pos:line="78" pos:column="53">opt<pos:position pos:line="78" pos:column="56"/></name><operator pos:line="78" pos:column="56">-&gt;<pos:position pos:line="78" pos:column="61"/></operator><name pos:line="78" pos:column="58">diffopt<pos:position pos:line="78" pos:column="65"/></name><operator pos:line="78" pos:column="65">.<pos:position pos:line="78" pos:column="66"/></operator><name pos:line="78" pos:column="66">needed_rename_limit<pos:position pos:line="78" pos:column="85"/></name></name></expr>;<pos:position pos:line="78" pos:column="86"/></expr_stmt></block></then></if>
				<if pos:line="79" pos:column="33">if <condition pos:line="79" pos:column="36">(<expr><name><name pos:line="79" pos:column="37">opt<pos:position pos:line="79" pos:column="40"/></name><operator pos:line="79" pos:column="40">-&gt;<pos:position pos:line="79" pos:column="45"/></operator><name pos:line="79" pos:column="42">diffopt<pos:position pos:line="79" pos:column="49"/></name><operator pos:line="79" pos:column="49">.<pos:position pos:line="79" pos:column="50"/></operator><name pos:line="79" pos:column="50">degraded_cc_to_c<pos:position pos:line="79" pos:column="66"/></name></name></expr>)<pos:position pos:line="79" pos:column="67"/></condition><then pos:line="79" pos:column="67">
					<block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="41">saved_dcctc<pos:position pos:line="80" pos:column="52"/></name> <operator pos:line="80" pos:column="53">=<pos:position pos:line="80" pos:column="54"/></operator> <literal type="number" pos:line="80" pos:column="55">1<pos:position pos:line="80" pos:column="56"/></literal></expr>;<pos:position pos:line="80" pos:column="57"/></expr_stmt></block></then></if>
			}<pos:position pos:line="81" pos:column="26"/></block></else></if>
		}<pos:position pos:line="82" pos:column="18"/></block></while>
		<expr_stmt><expr><name><name pos:line="83" pos:column="17">opt<pos:position pos:line="83" pos:column="20"/></name><operator pos:line="83" pos:column="20">-&gt;<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="22">diffopt<pos:position pos:line="83" pos:column="29"/></name><operator pos:line="83" pos:column="29">.<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="30">degraded_cc_to_c<pos:position pos:line="83" pos:column="46"/></name></name> <operator pos:line="83" pos:column="47">=<pos:position pos:line="83" pos:column="48"/></operator> <name pos:line="83" pos:column="49">saved_dcctc<pos:position pos:line="83" pos:column="60"/></name></expr>;<pos:position pos:line="83" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="84" pos:column="17">opt<pos:position pos:line="84" pos:column="20"/></name><operator pos:line="84" pos:column="20">-&gt;<pos:position pos:line="84" pos:column="25"/></operator><name pos:line="84" pos:column="22">diffopt<pos:position pos:line="84" pos:column="29"/></name><operator pos:line="84" pos:column="29">.<pos:position pos:line="84" pos:column="30"/></operator><name pos:line="84" pos:column="30">needed_rename_limit<pos:position pos:line="84" pos:column="49"/></name></name> <operator pos:line="84" pos:column="50">=<pos:position pos:line="84" pos:column="51"/></operator> <name pos:line="84" pos:column="52">saved_nrl<pos:position pos:line="84" pos:column="61"/></name></expr>;<pos:position pos:line="84" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="85" pos:column="10"/></block></then></if>

	<return pos:line="87" pos:column="9">return <expr><call><name pos:line="87" pos:column="16">diff_result_code<pos:position pos:line="87" pos:column="32"/></name><argument_list pos:line="87" pos:column="32">(<argument><expr><operator pos:line="87" pos:column="33">&amp;<pos:position pos:line="87" pos:column="38"/></operator><name><name pos:line="87" pos:column="34">opt<pos:position pos:line="87" pos:column="37"/></name><operator pos:line="87" pos:column="37">-&gt;<pos:position pos:line="87" pos:column="42"/></operator><name pos:line="87" pos:column="39">diffopt<pos:position pos:line="87" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="48">0<pos:position pos:line="87" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="51"/></return>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2340_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">attr_check<pos:position pos:line="1" pos:column="18"/></name></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">attr_check_alloc<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">void<pos:position pos:line="1" pos:column="41"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">attr_check<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">c<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><call><name pos:line="3" pos:column="32">xcalloc<pos:position pos:line="3" pos:column="39"/></name><argument_list pos:line="3" pos:column="39">(<argument><expr><literal type="number" pos:line="3" pos:column="40">1<pos:position pos:line="3" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="43">sizeof<argument_list pos:line="3" pos:column="49">(<argument><expr pos:line="3" pos:column="50">struct <name pos:line="3" pos:column="57">attr_check<pos:position pos:line="3" pos:column="67"/></name></expr></argument>)<pos:position pos:line="3" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="70"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* save pointer to the check struct */</comment>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">check_vector_add<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">c<pos:position pos:line="6" pos:column="27"/></name></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>

	<return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">c<pos:position pos:line="8" pos:column="17"/></name></expr>;<pos:position pos:line="8" pos:column="18"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1723_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_submodule_path<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">strbuf<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">buf<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">path<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
			     <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">fmt<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">va_list<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">args<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">git_submodule_common_dir<pos:position pos:line="4" pos:column="47"/></name> <init pos:line="4" pos:column="48">= <expr><name pos:line="4" pos:column="50">STRBUF_INIT<pos:position pos:line="4" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">git_submodule_dir<pos:position pos:line="5" pos:column="40"/></name> <init pos:line="5" pos:column="41">= <expr><name pos:line="5" pos:column="43">STRBUF_INIT<pos:position pos:line="5" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ret<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">ret<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">submodule_to_gitdir<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><operator pos:line="8" pos:column="35">&amp;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="36">git_submodule_dir<pos:position pos:line="8" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="55">path<pos:position pos:line="8" pos:column="59"/></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">ret<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition><then pos:line="9" pos:column="17">
		<block type="pseudo"><goto pos:line="10" pos:column="17">goto <name pos:line="10" pos:column="22">cleanup<pos:position pos:line="10" pos:column="29"/></name>;<pos:position pos:line="10" pos:column="30"/></goto></block></then></if>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">strbuf_complete<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><operator pos:line="12" pos:column="25">&amp;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="26">git_submodule_dir<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="45">'/'<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">strbuf_addbuf<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">buf<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="28">&amp;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="29">git_submodule_dir<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">strbuf_vaddf<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">buf<pos:position pos:line="14" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="27">fmt<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="32">args<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">get_common_dir_noenv<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><operator pos:line="16" pos:column="34">&amp;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="35">git_submodule_common_dir<pos:position pos:line="16" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="61">git_submodule_dir<pos:position pos:line="16" pos:column="78"/></name><operator pos:line="16" pos:column="78">.<pos:position pos:line="16" pos:column="79"/></operator><name pos:line="16" pos:column="79">buf<pos:position pos:line="16" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="84"/></condition><then pos:line="16" pos:column="84">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">update_common_dir<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">buf<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="40">git_submodule_dir<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">.<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="58">len<pos:position pos:line="17" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="63">git_submodule_common_dir<pos:position pos:line="17" pos:column="87"/></name><operator pos:line="17" pos:column="87">.<pos:position pos:line="17" pos:column="88"/></operator><name pos:line="17" pos:column="88">buf<pos:position pos:line="17" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="93"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">strbuf_cleanup_path<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">buf<pos:position pos:line="19" pos:column="32"/></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>

<label><name pos:line="21" pos:column="1">cleanup<pos:position pos:line="21" pos:column="8"/></name>:<pos:position pos:line="21" pos:column="9"/></label>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">strbuf_release<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><operator pos:line="22" pos:column="24">&amp;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="25">git_submodule_dir<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">strbuf_release<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><operator pos:line="23" pos:column="24">&amp;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="25">git_submodule_common_dir<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>
	<return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">ret<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

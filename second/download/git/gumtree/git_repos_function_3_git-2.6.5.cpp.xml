<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3_git-2.6.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">long<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">parse_tag_date<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">buf<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">tail<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">dateptr<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>

	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">buf<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">&lt;<pos:position pos:line="5" pos:column="24"/></operator> <name pos:line="5" pos:column="22">tail<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&amp;&amp;<pos:position pos:line="5" pos:column="37"/></operator> <operator pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">buf<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">++<pos:position pos:line="5" pos:column="36"/></operator> <operator pos:line="5" pos:column="37">!=<pos:position pos:line="5" pos:column="39"/></operator> <literal type="char" pos:line="5" pos:column="40">'&gt;'<pos:position pos:line="5" pos:column="46"/></literal></expr>)<pos:position pos:line="5" pos:column="44"/></condition>
		<comment type="block" pos:line="6" pos:column="17">/* nada */</comment><block type="pseudo"><empty_stmt pos:line="6" pos:column="27">;<pos:position pos:line="6" pos:column="28"/></empty_stmt></block></while>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">buf<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&gt;=<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="20">tail<pos:position pos:line="7" pos:column="24"/></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="9" pos:column="9">dateptr<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">buf<pos:position pos:line="9" pos:column="22"/></name></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><name pos:line="10" pos:column="16">buf<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">&lt;<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="22">tail<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">&amp;&amp;<pos:position pos:line="10" pos:column="37"/></operator> <operator pos:line="10" pos:column="30">*<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">buf<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">++<pos:position pos:line="10" pos:column="36"/></operator> <operator pos:line="10" pos:column="37">!=<pos:position pos:line="10" pos:column="39"/></operator> <literal type="char" pos:line="10" pos:column="40">'\n'<pos:position pos:line="10" pos:column="44"/></literal></expr>)<pos:position pos:line="10" pos:column="45"/></condition>
		<comment type="block" pos:line="11" pos:column="17">/* nada */</comment><block type="pseudo"><empty_stmt pos:line="11" pos:column="27">;<pos:position pos:line="11" pos:column="28"/></empty_stmt></block></while>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">buf<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&gt;=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="20">tail<pos:position pos:line="12" pos:column="24"/></name></expr>)<pos:position pos:line="12" pos:column="25"/></condition><then pos:line="12" pos:column="25">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return></block></then></if>
	<comment type="block" pos:line="14" pos:column="9">/* dateptr &lt; buf &amp;&amp; buf[-1] == '\n', so strtoul will stop at buf-1 */</comment>
	<return pos:line="15" pos:column="9">return <expr><call><name pos:line="15" pos:column="16">strtoul<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">dateptr<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="33">NULL<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="39">10<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

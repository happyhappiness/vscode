<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2922_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lock_file_timeout<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">lock_file<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">lk<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">path<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">flags<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">long<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">timeout_ms<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">n<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">1<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">multiplier<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><literal type="number" pos:line="5" pos:column="26">1<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">long<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">remaining_ms<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><literal type="number" pos:line="6" pos:column="29">0<pos:position pos:line="6" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">int<pos:position pos:line="7" pos:column="19"/></name></type> <name pos:line="7" pos:column="20">random_initialized<pos:position pos:line="7" pos:column="38"/></name> <init pos:line="7" pos:column="39">= <expr><literal type="number" pos:line="7" pos:column="41">0<pos:position pos:line="7" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">timeout_ms<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">==<pos:position pos:line="9" pos:column="26"/></operator> <literal type="number" pos:line="9" pos:column="27">0<pos:position pos:line="9" pos:column="28"/></literal></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><call><name pos:line="10" pos:column="24">lock_file<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">lk<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">path<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">flags<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></return></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">random_initialized<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33"> <block pos:line="12" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">srand<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><operator pos:line="13" pos:column="23">(<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">unsigned<pos:position pos:line="13" pos:column="32"/></name> <name pos:line="13" pos:column="33">int<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">)<pos:position pos:line="13" pos:column="37"/></operator><call><name pos:line="13" pos:column="37">getpid<pos:position pos:line="13" pos:column="43"/></name><argument_list pos:line="13" pos:column="43">()<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">random_initialized<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">=<pos:position pos:line="14" pos:column="37"/></operator> <literal type="number" pos:line="14" pos:column="38">1<pos:position pos:line="14" pos:column="39"/></literal></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">timeout_ms<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">&gt;<pos:position pos:line="17" pos:column="28"/></operator> <literal type="number" pos:line="17" pos:column="26">0<pos:position pos:line="17" pos:column="27"/></literal></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">remaining_ms<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">=<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="32">timeout_ms<pos:position pos:line="18" pos:column="42"/></name></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt></block></then></if>

	<while pos:line="20" pos:column="9">while <condition pos:line="20" pos:column="15">(<expr><literal type="number" pos:line="20" pos:column="16">1<pos:position pos:line="20" pos:column="17"/></literal></expr>)<pos:position pos:line="20" pos:column="18"/></condition> <block pos:line="20" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">long<pos:position pos:line="21" pos:column="21"/></name></type> <name pos:line="21" pos:column="22">backoff_ms<pos:position pos:line="21" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="21" pos:column="34">wait_ms<pos:position pos:line="21" pos:column="41"/></name></decl>;<pos:position pos:line="21" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">int<pos:position pos:line="22" pos:column="20"/></name></type> <name pos:line="22" pos:column="21">fd<pos:position pos:line="22" pos:column="23"/></name></decl>;<pos:position pos:line="22" pos:column="24"/></decl_stmt>

		<expr_stmt><expr><name pos:line="24" pos:column="17">fd<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <call><name pos:line="24" pos:column="22">lock_file<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">lk<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="36">path<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">flags<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">fd<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">&gt;=<pos:position pos:line="26" pos:column="29"/></operator> <literal type="number" pos:line="26" pos:column="27">0<pos:position pos:line="26" pos:column="28"/></literal></expr>)<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29">
			<block type="pseudo"><return pos:line="27" pos:column="25">return <expr><name pos:line="27" pos:column="32">fd<pos:position pos:line="27" pos:column="34"/></name></expr>;<pos:position pos:line="27" pos:column="35"/></return></block></then> <comment type="block" pos:line="27" pos:column="36">/* success */</comment>
		<elseif pos:line="28" pos:column="17">else <if pos:line="28" pos:column="22">if <condition pos:line="28" pos:column="25">(<expr><name pos:line="28" pos:column="26">errno<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">!=<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="35">EEXIST<pos:position pos:line="28" pos:column="41"/></name></expr>)<pos:position pos:line="28" pos:column="42"/></condition><then pos:line="28" pos:column="42">
			<block type="pseudo"><return pos:line="29" pos:column="25">return <expr><operator pos:line="29" pos:column="32">-<pos:position pos:line="29" pos:column="33"/></operator><literal type="number" pos:line="29" pos:column="33">1<pos:position pos:line="29" pos:column="34"/></literal></expr>;<pos:position pos:line="29" pos:column="35"/></return></block></then></if></elseif> <comment type="block" pos:line="29" pos:column="36">/* failure other than lock held */</comment>
		<elseif pos:line="30" pos:column="17">else <if pos:line="30" pos:column="22">if <condition pos:line="30" pos:column="25">(<expr><name pos:line="30" pos:column="26">timeout_ms<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">&gt;<pos:position pos:line="30" pos:column="41"/></operator> <literal type="number" pos:line="30" pos:column="39">0<pos:position pos:line="30" pos:column="40"/></literal> <operator pos:line="30" pos:column="41">&amp;&amp;<pos:position pos:line="30" pos:column="51"/></operator> <name pos:line="30" pos:column="44">remaining_ms<pos:position pos:line="30" pos:column="56"/></name> <operator pos:line="30" pos:column="57">&lt;=<pos:position pos:line="30" pos:column="62"/></operator> <literal type="number" pos:line="30" pos:column="60">0<pos:position pos:line="30" pos:column="61"/></literal></expr>)<pos:position pos:line="30" pos:column="62"/></condition><then pos:line="30" pos:column="62">
			<block type="pseudo"><return pos:line="31" pos:column="25">return <expr><operator pos:line="31" pos:column="32">-<pos:position pos:line="31" pos:column="33"/></operator><literal type="number" pos:line="31" pos:column="33">1<pos:position pos:line="31" pos:column="34"/></literal></expr>;<pos:position pos:line="31" pos:column="35"/></return></block></then></if></elseif></if> <comment type="block" pos:line="31" pos:column="36">/* failure due to timeout */</comment>

		<expr_stmt><expr><name pos:line="33" pos:column="17">backoff_ms<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">=<pos:position pos:line="33" pos:column="29"/></operator> <name pos:line="33" pos:column="30">multiplier<pos:position pos:line="33" pos:column="40"/></name> <operator pos:line="33" pos:column="41">*<pos:position pos:line="33" pos:column="42"/></operator> <name pos:line="33" pos:column="43">INITIAL_BACKOFF_MS<pos:position pos:line="33" pos:column="61"/></name></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt>
		<comment type="block" pos:line="34" pos:column="17">/* back off for between 0.75*backoff_ms and 1.25*backoff_ms */</comment>
		<expr_stmt><expr><name pos:line="35" pos:column="17">wait_ms<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">=<pos:position pos:line="35" pos:column="26"/></operator> <operator pos:line="35" pos:column="27">(<pos:position pos:line="35" pos:column="28"/></operator><literal type="number" pos:line="35" pos:column="28">750<pos:position pos:line="35" pos:column="31"/></literal> <operator pos:line="35" pos:column="32">+<pos:position pos:line="35" pos:column="33"/></operator> <call><name pos:line="35" pos:column="34">rand<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">()<pos:position pos:line="35" pos:column="40"/></argument_list></call> <operator pos:line="35" pos:column="41">%<pos:position pos:line="35" pos:column="42"/></operator> <literal type="number" pos:line="35" pos:column="43">500<pos:position pos:line="35" pos:column="46"/></literal><operator pos:line="35" pos:column="46">)<pos:position pos:line="35" pos:column="47"/></operator> <operator pos:line="35" pos:column="48">*<pos:position pos:line="35" pos:column="49"/></operator> <name pos:line="35" pos:column="50">backoff_ms<pos:position pos:line="35" pos:column="60"/></name> <operator pos:line="35" pos:column="61">/<pos:position pos:line="35" pos:column="62"/></operator> <literal type="number" pos:line="35" pos:column="63">1000<pos:position pos:line="35" pos:column="67"/></literal></expr>;<pos:position pos:line="35" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">sleep_millisec<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">wait_ms<pos:position pos:line="36" pos:column="39"/></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="37" pos:column="17">remaining_ms<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">-=<pos:position pos:line="37" pos:column="32"/></operator> <name pos:line="37" pos:column="33">wait_ms<pos:position pos:line="37" pos:column="40"/></name></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>

		<comment type="block" pos:line="39" pos:column="17">/* Recursion: (n+1)^2 = n^2 + 2n + 1 */</comment>
		<expr_stmt><expr><name pos:line="40" pos:column="17">multiplier<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">+=<pos:position pos:line="40" pos:column="30"/></operator> <literal type="number" pos:line="40" pos:column="31">2<pos:position pos:line="40" pos:column="32"/></literal><operator pos:line="40" pos:column="32">*<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="33">n<pos:position pos:line="40" pos:column="34"/></name> <operator pos:line="40" pos:column="35">+<pos:position pos:line="40" pos:column="36"/></operator> <literal type="number" pos:line="40" pos:column="37">1<pos:position pos:line="40" pos:column="38"/></literal></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">multiplier<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">&gt;<pos:position pos:line="41" pos:column="36"/></operator> <name pos:line="41" pos:column="34">BACKOFF_MAX_MULTIPLIER<pos:position pos:line="41" pos:column="56"/></name></expr>)<pos:position pos:line="41" pos:column="57"/></condition><then pos:line="41" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="25">multiplier<pos:position pos:line="42" pos:column="35"/></name> <operator pos:line="42" pos:column="36">=<pos:position pos:line="42" pos:column="37"/></operator> <name pos:line="42" pos:column="38">BACKOFF_MAX_MULTIPLIER<pos:position pos:line="42" pos:column="60"/></name></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt></block></then>
		<else pos:line="43" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="25">n<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">++<pos:position pos:line="44" pos:column="28"/></operator></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt></block></else></if>
	}<pos:position pos:line="45" pos:column="10"/></block></while>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4434_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">for_each_remote<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">each_remote_fn<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">fn<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">priv<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">result<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><literal type="number" pos:line="3" pos:column="25">0<pos:position pos:line="3" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">read_config<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">()<pos:position pos:line="4" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt>
	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr>;<pos:position pos:line="5" pos:column="20"/></init> <condition><expr><name pos:line="5" pos:column="21">i<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&lt;<pos:position pos:line="5" pos:column="27"/></operator> <name pos:line="5" pos:column="25">remotes_nr<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">&amp;&amp;<pos:position pos:line="5" pos:column="46"/></operator> <operator pos:line="5" pos:column="39">!<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">result<pos:position pos:line="5" pos:column="46"/></name></expr>;<pos:position pos:line="5" pos:column="47"/></condition> <incr><expr><name pos:line="5" pos:column="48">i<pos:position pos:line="5" pos:column="49"/></name><operator pos:line="5" pos:column="49">++<pos:position pos:line="5" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="52"/></control> <block pos:line="5" pos:column="53">{
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">struct<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">remote<pos:position pos:line="6" pos:column="30"/></name></name> <modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier></type><name pos:line="6" pos:column="32">r<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><name><name pos:line="6" pos:column="36">remotes<pos:position pos:line="6" pos:column="43"/></name><index pos:line="6" pos:column="43">[<expr><name pos:line="6" pos:column="44">i<pos:position pos:line="6" pos:column="45"/></name></expr>]<pos:position pos:line="6" pos:column="46"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="47"/></decl_stmt>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">r<pos:position pos:line="7" pos:column="23"/></name></expr>)<pos:position pos:line="7" pos:column="24"/></condition><then pos:line="7" pos:column="24">
			<block type="pseudo"><continue pos:line="8" pos:column="25">continue;<pos:position pos:line="8" pos:column="34"/></continue></block></then></if>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><name><name pos:line="9" pos:column="22">r<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">fetch<pos:position pos:line="9" pos:column="30"/></name></name></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="25">r<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">fetch<pos:position pos:line="10" pos:column="33"/></name></name> <operator pos:line="10" pos:column="34">=<pos:position pos:line="10" pos:column="35"/></operator> <call><name pos:line="10" pos:column="36">parse_fetch_refspec<pos:position pos:line="10" pos:column="55"/></name><argument_list pos:line="10" pos:column="55">(<argument><expr><name><name pos:line="10" pos:column="56">r<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">-&gt;<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="59">fetch_refspec_nr<pos:position pos:line="10" pos:column="75"/></name></name></expr></argument>,
						       <argument><expr><name><name pos:line="11" pos:column="56">r<pos:position pos:line="11" pos:column="57"/></name><operator pos:line="11" pos:column="57">-&gt;<pos:position pos:line="11" pos:column="62"/></operator><name pos:line="11" pos:column="59">fetch_refspec<pos:position pos:line="11" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="74"/></expr_stmt></block></then></if>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name><name pos:line="12" pos:column="22">r<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">push<pos:position pos:line="12" pos:column="29"/></name></name></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="25">r<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">push<pos:position pos:line="13" pos:column="32"/></name></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <call><name pos:line="13" pos:column="35">parse_push_refspec<pos:position pos:line="13" pos:column="53"/></name><argument_list pos:line="13" pos:column="53">(<argument><expr><name><name pos:line="13" pos:column="54">r<pos:position pos:line="13" pos:column="55"/></name><operator pos:line="13" pos:column="55">-&gt;<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="57">push_refspec_nr<pos:position pos:line="13" pos:column="72"/></name></name></expr></argument>,
						     <argument><expr><name><name pos:line="14" pos:column="54">r<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">-&gt;<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="57">push_refspec<pos:position pos:line="14" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="71"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="15" pos:column="17">result<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="26">fn<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">r<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">priv<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></for>
	<return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">result<pos:position pos:line="17" pos:column="22"/></name></expr>;<pos:position pos:line="17" pos:column="23"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

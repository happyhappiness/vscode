<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1430.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">find_linked_symref<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">symref<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">branch<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">id<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">sb<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name pos:line="4" pos:column="28">STRBUF_INIT<pos:position pos:line="4" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">path<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">STRBUF_INIT<pos:position pos:line="5" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">gitdir<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name pos:line="6" pos:column="32">STRBUF_INIT<pos:position pos:line="6" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">existing<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>

	<comment type="block" pos:line="9" pos:column="9">/*
	 * $GIT_COMMON_DIR/$symref (e.g. HEAD) is practically outside
	 * $GIT_DIR so resolve_ref_unsafe() won't work (it uses
	 * git_path). Parse the ref ourselves.
	 */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">id<pos:position pos:line="14" pos:column="15"/></name></expr>)<pos:position pos:line="14" pos:column="16"/></condition><then pos:line="14" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">strbuf_addf<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><operator pos:line="15" pos:column="29">&amp;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="30">path<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="36">"%s/worktrees/%s/%s"<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="58">get_git_common_dir<pos:position pos:line="15" pos:column="76"/></name><argument_list pos:line="15" pos:column="76">()<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="80">id<pos:position pos:line="15" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="84">symref<pos:position pos:line="15" pos:column="90"/></name></expr></argument>)<pos:position pos:line="15" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="92"/></expr_stmt></block></then>
	<else pos:line="16" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">strbuf_addf<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><operator pos:line="17" pos:column="29">&amp;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="30">path<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="36">"%s/%s"<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="45">get_git_common_dir<pos:position pos:line="17" pos:column="63"/></name><argument_list pos:line="17" pos:column="63">()<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="67">symref<pos:position pos:line="17" pos:column="73"/></name></expr></argument>)<pos:position pos:line="17" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="75"/></expr_stmt></block></else></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">strbuf_readlink<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><operator pos:line="19" pos:column="30">&amp;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="31">sb<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="35">path<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">.<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="40">buf<pos:position pos:line="19" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="45">0<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48"> <block pos:line="19" pos:column="49">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><call><name pos:line="20" pos:column="22">starts_with<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><name><name pos:line="20" pos:column="34">sb<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">.<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="37">buf<pos:position pos:line="20" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="42">"refs/"<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call> <operator pos:line="20" pos:column="51">||<pos:position pos:line="20" pos:column="53"/></operator>
		    <call><name pos:line="21" pos:column="21">check_refname_format<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><expr><name><name pos:line="21" pos:column="42">sb<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">.<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="45">buf<pos:position pos:line="21" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="50">0<pos:position pos:line="21" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53">
			<block type="pseudo"><goto pos:line="22" pos:column="25">goto <name pos:line="22" pos:column="30">done<pos:position pos:line="22" pos:column="34"/></name>;<pos:position pos:line="22" pos:column="35"/></goto></block></then></if>
	}<pos:position pos:line="23" pos:column="10"/></block></then> <elseif pos:line="23" pos:column="11">else <if pos:line="23" pos:column="16">if <condition pos:line="23" pos:column="19">(<expr><call><name pos:line="23" pos:column="20">strbuf_read_file<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><operator pos:line="23" pos:column="37">&amp;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="38">sb<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="42">path<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">.<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="47">buf<pos:position pos:line="23" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="52">0<pos:position pos:line="23" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call> <operator pos:line="23" pos:column="55">&gt;=<pos:position pos:line="23" pos:column="60"/></operator> <literal type="number" pos:line="23" pos:column="58">0<pos:position pos:line="23" pos:column="59"/></literal> <operator pos:line="23" pos:column="60">&amp;&amp;<pos:position pos:line="23" pos:column="70"/></operator>
	    <call><name pos:line="24" pos:column="13">starts_with<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name><name pos:line="24" pos:column="25">sb<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">.<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="28">buf<pos:position pos:line="24" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="33">"ref:"<pos:position pos:line="24" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="41"/></condition><then pos:line="24" pos:column="41"> <block pos:line="24" pos:column="42">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">strbuf_remove<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><operator pos:line="25" pos:column="31">&amp;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="32">sb<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="36">0<pos:position pos:line="25" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="39">strlen<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><literal type="string" pos:line="25" pos:column="46">"ref:"<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">strbuf_trim<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><operator pos:line="26" pos:column="29">&amp;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="30">sb<pos:position pos:line="26" pos:column="32"/></name></expr></argument>)<pos:position pos:line="26" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if></elseif> <else pos:line="27" pos:column="11">else
		<block type="pseudo"><goto pos:line="28" pos:column="17">goto <name pos:line="28" pos:column="22">done<pos:position pos:line="28" pos:column="26"/></name>;<pos:position pos:line="28" pos:column="27"/></goto></block></else></if>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><call><name pos:line="29" pos:column="13">strcmp<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name><name pos:line="29" pos:column="20">sb<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">.<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="23">buf<pos:position pos:line="29" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="28">branch<pos:position pos:line="29" pos:column="34"/></name></expr></argument>)<pos:position pos:line="29" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="36"/></condition><then pos:line="29" pos:column="36">
		<block type="pseudo"><goto pos:line="30" pos:column="17">goto <name pos:line="30" pos:column="22">done<pos:position pos:line="30" pos:column="26"/></name>;<pos:position pos:line="30" pos:column="27"/></goto></block></then></if>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">id<pos:position pos:line="31" pos:column="15"/></name></expr>)<pos:position pos:line="31" pos:column="16"/></condition><then pos:line="31" pos:column="16"> <block pos:line="31" pos:column="17">{
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">strbuf_reset<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><operator pos:line="32" pos:column="30">&amp;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="31">path<pos:position pos:line="32" pos:column="35"/></name></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">strbuf_addf<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><operator pos:line="33" pos:column="29">&amp;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="30">path<pos:position pos:line="33" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="36">"%s/worktrees/%s/gitdir"<pos:position pos:line="33" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="62">get_git_common_dir<pos:position pos:line="33" pos:column="80"/></name><argument_list pos:line="33" pos:column="80">()<pos:position pos:line="33" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="33" pos:column="84">id<pos:position pos:line="33" pos:column="86"/></name></expr></argument>)<pos:position pos:line="33" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="88"/></expr_stmt>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><call><name pos:line="34" pos:column="21">strbuf_read_file<pos:position pos:line="34" pos:column="37"/></name><argument_list pos:line="34" pos:column="37">(<argument><expr><operator pos:line="34" pos:column="38">&amp;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="39">gitdir<pos:position pos:line="34" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="47">path<pos:position pos:line="34" pos:column="51"/></name><operator pos:line="34" pos:column="51">.<pos:position pos:line="34" pos:column="52"/></operator><name pos:line="34" pos:column="52">buf<pos:position pos:line="34" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="57">0<pos:position pos:line="34" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call> <operator pos:line="34" pos:column="60">&lt;=<pos:position pos:line="34" pos:column="65"/></operator> <literal type="number" pos:line="34" pos:column="63">0<pos:position pos:line="34" pos:column="64"/></literal></expr>)<pos:position pos:line="34" pos:column="65"/></condition><then pos:line="34" pos:column="65">
			<block type="pseudo"><goto pos:line="35" pos:column="25">goto <name pos:line="35" pos:column="30">done<pos:position pos:line="35" pos:column="34"/></name>;<pos:position pos:line="35" pos:column="35"/></goto></block></then></if>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">strbuf_rtrim<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><operator pos:line="36" pos:column="30">&amp;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="31">gitdir<pos:position pos:line="36" pos:column="37"/></name></expr></argument>)<pos:position pos:line="36" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></then> <else pos:line="37" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="17">strbuf_addstr<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><operator pos:line="38" pos:column="31">&amp;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="32">gitdir<pos:position pos:line="38" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="40">get_git_common_dir<pos:position pos:line="38" pos:column="58"/></name><argument_list pos:line="38" pos:column="58">()<pos:position pos:line="38" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">strbuf_strip_suffix<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><operator pos:line="39" pos:column="29">&amp;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="30">gitdir<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="38">".git"<pos:position pos:line="39" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><name pos:line="41" pos:column="9">existing<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <call><name pos:line="41" pos:column="20">strbuf_detach<pos:position pos:line="41" pos:column="33"/></name><argument_list pos:line="41" pos:column="33">(<argument><expr><operator pos:line="41" pos:column="34">&amp;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="35">gitdir<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="43">NULL<pos:position pos:line="41" pos:column="47"/></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="49"/></expr_stmt>
<label><name pos:line="42" pos:column="1">done<pos:position pos:line="42" pos:column="5"/></name>:<pos:position pos:line="42" pos:column="6"/></label>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">strbuf_release<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><operator pos:line="43" pos:column="24">&amp;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="25">path<pos:position pos:line="43" pos:column="29"/></name></expr></argument>)<pos:position pos:line="43" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">strbuf_release<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><operator pos:line="44" pos:column="24">&amp;<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="25">sb<pos:position pos:line="44" pos:column="27"/></name></expr></argument>)<pos:position pos:line="44" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">strbuf_release<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><operator pos:line="45" pos:column="24">&amp;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="25">gitdir<pos:position pos:line="45" pos:column="31"/></name></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>

	<return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">existing<pos:position pos:line="47" pos:column="24"/></name></expr>;<pos:position pos:line="47" pos:column="25"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

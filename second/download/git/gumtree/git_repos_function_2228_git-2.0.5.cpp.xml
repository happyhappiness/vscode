<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2228_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">clear_ce_flags_1<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">cache_entry<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier><modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">cache<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">nr<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">strbuf<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">prefix<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="3" pos:column="29">int<pos:position pos:line="3" pos:column="32"/></name></type> <name pos:line="3" pos:column="33">select_mask<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="46">int<pos:position pos:line="3" pos:column="49"/></name></type> <name pos:line="3" pos:column="50">clear_mask<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="4" pos:column="29">struct<pos:position pos:line="4" pos:column="35"/></name> <name pos:line="4" pos:column="36">exclude_list<pos:position pos:line="4" pos:column="48"/></name></name> <modifier pos:line="4" pos:column="49">*<pos:position pos:line="4" pos:column="50"/></modifier></type><name pos:line="4" pos:column="50">el<pos:position pos:line="4" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="54">int<pos:position pos:line="4" pos:column="57"/></name></type> <name pos:line="4" pos:column="58">defval<pos:position pos:line="4" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="65"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">cache_entry<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier><modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">cache_end<pos:position pos:line="6" pos:column="39"/></name> <init pos:line="6" pos:column="40">= <expr><name pos:line="6" pos:column="42">cache<pos:position pos:line="6" pos:column="47"/></name> <operator pos:line="6" pos:column="48">+<pos:position pos:line="6" pos:column="49"/></operator> <name pos:line="6" pos:column="50">nr<pos:position pos:line="6" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="53"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/*
	 * Process all entries that have the given prefix and meet
	 * select_mask condition
	 */</comment>
	<while pos:line="12" pos:column="9">while<condition pos:line="12" pos:column="14">(<expr><name pos:line="12" pos:column="15">cache<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">!=<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">cache_end<pos:position pos:line="12" pos:column="33"/></name></expr>)<pos:position pos:line="12" pos:column="34"/></condition> <block pos:line="12" pos:column="35">{
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">struct<pos:position pos:line="13" pos:column="23"/></name> <name pos:line="13" pos:column="24">cache_entry<pos:position pos:line="13" pos:column="35"/></name></name> <modifier pos:line="13" pos:column="36">*<pos:position pos:line="13" pos:column="37"/></modifier></type><name pos:line="13" pos:column="37">ce<pos:position pos:line="13" pos:column="39"/></name> <init pos:line="13" pos:column="40">= <expr><operator pos:line="13" pos:column="42">*<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="43">cache<pos:position pos:line="13" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="14" pos:column="17">const<pos:position pos:line="14" pos:column="22"/></specifier> <name pos:line="14" pos:column="23">char<pos:position pos:line="14" pos:column="27"/></name> <modifier pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></modifier></type><name pos:line="14" pos:column="29">name<pos:position pos:line="14" pos:column="33"/></name></decl>, <modifier pos:line="14" pos:column="35">*<pos:position pos:line="14" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="14" pos:column="36">slash<pos:position pos:line="14" pos:column="41"/></name></decl>;<pos:position pos:line="14" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">int<pos:position pos:line="15" pos:column="20"/></name></type> <name pos:line="15" pos:column="21">len<pos:position pos:line="15" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="26">dtype<pos:position pos:line="15" pos:column="31"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="33">ret<pos:position pos:line="15" pos:column="36"/></name></decl>;<pos:position pos:line="15" pos:column="37"/></decl_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">select_mask<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">&amp;&amp;<pos:position pos:line="17" pos:column="43"/></operator> <operator pos:line="17" pos:column="36">!<pos:position pos:line="17" pos:column="37"/></operator><operator pos:line="17" pos:column="37">(<pos:position pos:line="17" pos:column="38"/></operator><name><name pos:line="17" pos:column="38">ce<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">-&gt;<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="42">ce_flags<pos:position pos:line="17" pos:column="50"/></name></name> <operator pos:line="17" pos:column="51">&amp;<pos:position pos:line="17" pos:column="56"/></operator> <name pos:line="17" pos:column="53">select_mask<pos:position pos:line="17" pos:column="64"/></name><operator pos:line="17" pos:column="64">)<pos:position pos:line="17" pos:column="65"/></operator></expr>)<pos:position pos:line="17" pos:column="66"/></condition><then pos:line="17" pos:column="66"> <block pos:line="17" pos:column="67">{
			<expr_stmt><expr><name pos:line="18" pos:column="25">cache<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">++<pos:position pos:line="18" pos:column="32"/></operator></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
			<continue pos:line="19" pos:column="25">continue;<pos:position pos:line="19" pos:column="34"/></continue>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>

		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">prefix<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">len<pos:position pos:line="22" pos:column="32"/></name></name> <operator pos:line="22" pos:column="33">&amp;&amp;<pos:position pos:line="22" pos:column="43"/></operator> <call><name pos:line="22" pos:column="36">strncmp<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><name><name pos:line="22" pos:column="44">ce<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">-&gt;<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="48">name<pos:position pos:line="22" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="54">prefix<pos:position pos:line="22" pos:column="60"/></name><operator pos:line="22" pos:column="60">-&gt;<pos:position pos:line="22" pos:column="65"/></operator><name pos:line="22" pos:column="62">buf<pos:position pos:line="22" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="67">prefix<pos:position pos:line="22" pos:column="73"/></name><operator pos:line="22" pos:column="73">-&gt;<pos:position pos:line="22" pos:column="78"/></operator><name pos:line="22" pos:column="75">len<pos:position pos:line="22" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="80"/></condition><then pos:line="22" pos:column="80">
			<block type="pseudo"><break pos:line="23" pos:column="25">break;<pos:position pos:line="23" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name pos:line="25" pos:column="17">name<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <name><name pos:line="25" pos:column="24">ce<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">name<pos:position pos:line="25" pos:column="32"/></name></name> <operator pos:line="25" pos:column="33">+<pos:position pos:line="25" pos:column="34"/></operator> <name><name pos:line="25" pos:column="35">prefix<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">len<pos:position pos:line="25" pos:column="46"/></name></name></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">slash<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <call><name pos:line="26" pos:column="25">strchr<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">name<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="38">'/'<pos:position pos:line="26" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>

		<comment type="block" pos:line="28" pos:column="17">/* If it's a directory, try whole directory match first */</comment>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">slash<pos:position pos:line="29" pos:column="26"/></name></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27"> <block pos:line="29" pos:column="28">{
			<decl_stmt><decl><type><name pos:line="30" pos:column="25">int<pos:position pos:line="30" pos:column="28"/></name></type> <name pos:line="30" pos:column="29">processed<pos:position pos:line="30" pos:column="38"/></name></decl>;<pos:position pos:line="30" pos:column="39"/></decl_stmt>

			<expr_stmt><expr><name pos:line="32" pos:column="25">len<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="31">slash<pos:position pos:line="32" pos:column="36"/></name> <operator pos:line="32" pos:column="37">-<pos:position pos:line="32" pos:column="38"/></operator> <name pos:line="32" pos:column="39">name<pos:position pos:line="32" pos:column="43"/></name></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">strbuf_add<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">prefix<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">name<pos:position pos:line="33" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="50">len<pos:position pos:line="33" pos:column="53"/></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="55"/></expr_stmt>

			<expr_stmt><expr><name pos:line="35" pos:column="25">processed<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">=<pos:position pos:line="35" pos:column="36"/></operator> <call><name pos:line="35" pos:column="37">clear_ce_flags_dir<pos:position pos:line="35" pos:column="55"/></name><argument_list pos:line="35" pos:column="55">(<argument><expr><name pos:line="35" pos:column="56">cache<pos:position pos:line="35" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="63">cache_end<pos:position pos:line="35" pos:column="72"/></name> <operator pos:line="35" pos:column="73">-<pos:position pos:line="35" pos:column="74"/></operator> <name pos:line="35" pos:column="75">cache<pos:position pos:line="35" pos:column="80"/></name></expr></argument>,
						       <argument><expr><name pos:line="36" pos:column="56">prefix<pos:position pos:line="36" pos:column="62"/></name></expr></argument>,
						       <argument><expr><name><name pos:line="37" pos:column="56">prefix<pos:position pos:line="37" pos:column="62"/></name><operator pos:line="37" pos:column="62">-&gt;<pos:position pos:line="37" pos:column="67"/></operator><name pos:line="37" pos:column="64">buf<pos:position pos:line="37" pos:column="67"/></name></name> <operator pos:line="37" pos:column="68">+<pos:position pos:line="37" pos:column="69"/></operator> <name><name pos:line="37" pos:column="70">prefix<pos:position pos:line="37" pos:column="76"/></name><operator pos:line="37" pos:column="76">-&gt;<pos:position pos:line="37" pos:column="81"/></operator><name pos:line="37" pos:column="78">len<pos:position pos:line="37" pos:column="81"/></name></name> <operator pos:line="37" pos:column="82">-<pos:position pos:line="37" pos:column="83"/></operator> <name pos:line="37" pos:column="84">len<pos:position pos:line="37" pos:column="87"/></name></expr></argument>,
						       <argument><expr><name pos:line="38" pos:column="56">select_mask<pos:position pos:line="38" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="69">clear_mask<pos:position pos:line="38" pos:column="79"/></name></expr></argument>,
						       <argument><expr><name pos:line="39" pos:column="56">el<pos:position pos:line="39" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="60">defval<pos:position pos:line="39" pos:column="66"/></name></expr></argument>)<pos:position pos:line="39" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="68"/></expr_stmt>

			<comment type="block" pos:line="41" pos:column="25">/* clear_c_f_dir eats a whole dir already? */</comment>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><name pos:line="42" pos:column="29">processed<pos:position pos:line="42" pos:column="38"/></name></expr>)<pos:position pos:line="42" pos:column="39"/></condition><then pos:line="42" pos:column="39"> <block pos:line="42" pos:column="40">{
				<expr_stmt><expr><name pos:line="43" pos:column="33">cache<pos:position pos:line="43" pos:column="38"/></name> <operator pos:line="43" pos:column="39">+=<pos:position pos:line="43" pos:column="41"/></operator> <name pos:line="43" pos:column="42">processed<pos:position pos:line="43" pos:column="51"/></name></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="44" pos:column="33">strbuf_setlen<pos:position pos:line="44" pos:column="46"/></name><argument_list pos:line="44" pos:column="46">(<argument><expr><name pos:line="44" pos:column="47">prefix<pos:position pos:line="44" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="55">prefix<pos:position pos:line="44" pos:column="61"/></name><operator pos:line="44" pos:column="61">-&gt;<pos:position pos:line="44" pos:column="66"/></operator><name pos:line="44" pos:column="63">len<pos:position pos:line="44" pos:column="66"/></name></name> <operator pos:line="44" pos:column="67">-<pos:position pos:line="44" pos:column="68"/></operator> <name pos:line="44" pos:column="69">len<pos:position pos:line="44" pos:column="72"/></name></expr></argument>)<pos:position pos:line="44" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="74"/></expr_stmt>
				<continue pos:line="45" pos:column="33">continue;<pos:position pos:line="45" pos:column="42"/></continue>
			}<pos:position pos:line="46" pos:column="26"/></block></then></if>

			<expr_stmt><expr><call><name pos:line="48" pos:column="25">strbuf_addch<pos:position pos:line="48" pos:column="37"/></name><argument_list pos:line="48" pos:column="37">(<argument><expr><name pos:line="48" pos:column="38">prefix<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="48" pos:column="46">'/'<pos:position pos:line="48" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name pos:line="49" pos:column="25">cache<pos:position pos:line="49" pos:column="30"/></name> <operator pos:line="49" pos:column="31">+=<pos:position pos:line="49" pos:column="33"/></operator> <call><name pos:line="49" pos:column="34">clear_ce_flags_1<pos:position pos:line="49" pos:column="50"/></name><argument_list pos:line="49" pos:column="50">(<argument><expr><name pos:line="49" pos:column="51">cache<pos:position pos:line="49" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="58">cache_end<pos:position pos:line="49" pos:column="67"/></name> <operator pos:line="49" pos:column="68">-<pos:position pos:line="49" pos:column="69"/></operator> <name pos:line="49" pos:column="70">cache<pos:position pos:line="49" pos:column="75"/></name></expr></argument>,
						  <argument><expr><name pos:line="50" pos:column="51">prefix<pos:position pos:line="50" pos:column="57"/></name></expr></argument>,
						  <argument><expr><name pos:line="51" pos:column="51">select_mask<pos:position pos:line="51" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="64">clear_mask<pos:position pos:line="51" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="76">el<pos:position pos:line="51" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="80">defval<pos:position pos:line="51" pos:column="86"/></name></expr></argument>)<pos:position pos:line="51" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="88"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="52" pos:column="25">strbuf_setlen<pos:position pos:line="52" pos:column="38"/></name><argument_list pos:line="52" pos:column="38">(<argument><expr><name pos:line="52" pos:column="39">prefix<pos:position pos:line="52" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="47">prefix<pos:position pos:line="52" pos:column="53"/></name><operator pos:line="52" pos:column="53">-&gt;<pos:position pos:line="52" pos:column="58"/></operator><name pos:line="52" pos:column="55">len<pos:position pos:line="52" pos:column="58"/></name></name> <operator pos:line="52" pos:column="59">-<pos:position pos:line="52" pos:column="60"/></operator> <name pos:line="52" pos:column="61">len<pos:position pos:line="52" pos:column="64"/></name> <operator pos:line="52" pos:column="65">-<pos:position pos:line="52" pos:column="66"/></operator> <literal type="number" pos:line="52" pos:column="67">1<pos:position pos:line="52" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="70"/></expr_stmt>
			<continue pos:line="53" pos:column="25">continue;<pos:position pos:line="53" pos:column="34"/></continue>
		}<pos:position pos:line="54" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="56" pos:column="17">/* Non-directory */</comment>
		<expr_stmt><expr><name pos:line="57" pos:column="17">dtype<pos:position pos:line="57" pos:column="22"/></name> <operator pos:line="57" pos:column="23">=<pos:position pos:line="57" pos:column="24"/></operator> <call><name pos:line="57" pos:column="25">ce_to_dtype<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><name pos:line="57" pos:column="37">ce<pos:position pos:line="57" pos:column="39"/></name></expr></argument>)<pos:position pos:line="57" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="58" pos:column="17">ret<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">=<pos:position pos:line="58" pos:column="22"/></operator> <call><name pos:line="58" pos:column="23">is_excluded_from_list<pos:position pos:line="58" pos:column="44"/></name><argument_list pos:line="58" pos:column="44">(<argument><expr><name><name pos:line="58" pos:column="45">ce<pos:position pos:line="58" pos:column="47"/></name><operator pos:line="58" pos:column="47">-&gt;<pos:position pos:line="58" pos:column="52"/></operator><name pos:line="58" pos:column="49">name<pos:position pos:line="58" pos:column="53"/></name></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="55">ce_namelen<pos:position pos:line="58" pos:column="65"/></name><argument_list pos:line="58" pos:column="65">(<argument><expr><name pos:line="58" pos:column="66">ce<pos:position pos:line="58" pos:column="68"/></name></expr></argument>)<pos:position pos:line="58" pos:column="69"/></argument_list></call></expr></argument>,
					    <argument><expr><name pos:line="59" pos:column="45">name<pos:position pos:line="59" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="51">&amp;<pos:position pos:line="59" pos:column="56"/></operator><name pos:line="59" pos:column="52">dtype<pos:position pos:line="59" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="59">el<pos:position pos:line="59" pos:column="61"/></name></expr></argument>)<pos:position pos:line="59" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="63"/></expr_stmt>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">ret<pos:position pos:line="60" pos:column="24"/></name> <operator pos:line="60" pos:column="25">&lt;<pos:position pos:line="60" pos:column="29"/></operator> <literal type="number" pos:line="60" pos:column="27">0<pos:position pos:line="60" pos:column="28"/></literal></expr>)<pos:position pos:line="60" pos:column="29"/></condition><then pos:line="60" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="25">ret<pos:position pos:line="61" pos:column="28"/></name> <operator pos:line="61" pos:column="29">=<pos:position pos:line="61" pos:column="30"/></operator> <name pos:line="61" pos:column="31">defval<pos:position pos:line="61" pos:column="37"/></name></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt></block></then></if>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">ret<pos:position pos:line="62" pos:column="24"/></name> <operator pos:line="62" pos:column="25">&gt;<pos:position pos:line="62" pos:column="29"/></operator> <literal type="number" pos:line="62" pos:column="27">0<pos:position pos:line="62" pos:column="28"/></literal></expr>)<pos:position pos:line="62" pos:column="29"/></condition><then pos:line="62" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="25">ce<pos:position pos:line="63" pos:column="27"/></name><operator pos:line="63" pos:column="27">-&gt;<pos:position pos:line="63" pos:column="32"/></operator><name pos:line="63" pos:column="29">ce_flags<pos:position pos:line="63" pos:column="37"/></name></name> <operator pos:line="63" pos:column="38">&amp;=<pos:position pos:line="63" pos:column="44"/></operator> <operator pos:line="63" pos:column="41">~<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="42">clear_mask<pos:position pos:line="63" pos:column="52"/></name></expr>;<pos:position pos:line="63" pos:column="53"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="64" pos:column="17">cache<pos:position pos:line="64" pos:column="22"/></name><operator pos:line="64" pos:column="22">++<pos:position pos:line="64" pos:column="24"/></operator></expr>;<pos:position pos:line="64" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="65" pos:column="10"/></block></while>
	<return pos:line="66" pos:column="9">return <expr><name pos:line="66" pos:column="16">nr<pos:position pos:line="66" pos:column="18"/></name> <operator pos:line="66" pos:column="19">-<pos:position pos:line="66" pos:column="20"/></operator> <operator pos:line="66" pos:column="21">(<pos:position pos:line="66" pos:column="22"/></operator><name pos:line="66" pos:column="22">cache_end<pos:position pos:line="66" pos:column="31"/></name> <operator pos:line="66" pos:column="32">-<pos:position pos:line="66" pos:column="33"/></operator> <name pos:line="66" pos:column="34">cache<pos:position pos:line="66" pos:column="39"/></name><operator pos:line="66" pos:column="39">)<pos:position pos:line="66" pos:column="40"/></operator></expr>;<pos:position pos:line="66" pos:column="41"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_972_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">child_die<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">enum<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">child_errcode<pos:position pos:line="1" pos:column="41"/></name></name></type> <name pos:line="1" pos:column="42">err<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">child_err<pos:position pos:line="3" pos:column="25"/></name></name></type> <name pos:line="3" pos:column="26">buf<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="5" pos:column="9">buf<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">.<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">err<pos:position pos:line="5" pos:column="16"/></name></name> <operator pos:line="5" pos:column="17">=<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">err<pos:position pos:line="5" pos:column="22"/></name></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="6" pos:column="9">buf<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">.<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">syserr<pos:position pos:line="6" pos:column="19"/></name></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <name pos:line="6" pos:column="22">errno<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* write(2) on buf smaller than PIPE_BUF (min 512) is atomic: */</comment>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">xwrite<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">child_notifier<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="32">&amp;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="33">buf<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="38">sizeof<argument_list pos:line="9" pos:column="44">(<argument><expr><name pos:line="9" pos:column="45">buf<pos:position pos:line="9" pos:column="48"/></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">_exit<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><literal type="number" pos:line="10" pos:column="15">1<pos:position pos:line="10" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

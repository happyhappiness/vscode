<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1805_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_next_command<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">stdin_eof<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><literal type="number" pos:line="3" pos:column="32">0<pos:position pos:line="3" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">stdin_eof<pos:position pos:line="5" pos:column="22"/></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23"> <block pos:line="5" pos:column="24">{
		<expr_stmt><expr><name pos:line="6" pos:column="17">unread_command_buf<pos:position pos:line="6" pos:column="35"/></name> <operator pos:line="6" pos:column="36">=<pos:position pos:line="6" pos:column="37"/></operator> <literal type="number" pos:line="6" pos:column="38">0<pos:position pos:line="6" pos:column="39"/></literal></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
		<return pos:line="7" pos:column="17">return <expr><name pos:line="7" pos:column="24">EOF<pos:position pos:line="7" pos:column="27"/></name></expr>;<pos:position pos:line="7" pos:column="28"/></return>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init pos:line="10" pos:column="14">;<pos:position pos:line="10" pos:column="15"/></init><condition pos:line="10" pos:column="15">;<pos:position pos:line="10" pos:column="16"/></condition><incr/>)<pos:position pos:line="10" pos:column="17"/></control> <block pos:line="10" pos:column="18">{
		<decl_stmt><decl><type><specifier pos:line="11" pos:column="17">const<pos:position pos:line="11" pos:column="22"/></specifier> <name pos:line="11" pos:column="23">char<pos:position pos:line="11" pos:column="27"/></name> <modifier pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></modifier></type><name pos:line="11" pos:column="29">p<pos:position pos:line="11" pos:column="30"/></name></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>

		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">unread_command_buf<pos:position pos:line="13" pos:column="39"/></name></expr>)<pos:position pos:line="13" pos:column="40"/></condition><then pos:line="13" pos:column="40"> <block pos:line="13" pos:column="41">{
			<expr_stmt><expr><name pos:line="14" pos:column="25">unread_command_buf<pos:position pos:line="14" pos:column="43"/></name> <operator pos:line="14" pos:column="44">=<pos:position pos:line="14" pos:column="45"/></operator> <literal type="number" pos:line="14" pos:column="46">0<pos:position pos:line="14" pos:column="47"/></literal></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></then> <else pos:line="15" pos:column="19">else <block pos:line="15" pos:column="24">{
			<decl_stmt><decl><type><name><name pos:line="16" pos:column="25">struct<pos:position pos:line="16" pos:column="31"/></name> <name pos:line="16" pos:column="32">recent_command<pos:position pos:line="16" pos:column="46"/></name></name> <modifier pos:line="16" pos:column="47">*<pos:position pos:line="16" pos:column="48"/></modifier></type><name pos:line="16" pos:column="48">rc<pos:position pos:line="16" pos:column="50"/></name></decl>;<pos:position pos:line="16" pos:column="51"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="18" pos:column="25">strbuf_detach<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><operator pos:line="18" pos:column="39">&amp;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="40">command_buf<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="53">NULL<pos:position pos:line="18" pos:column="57"/></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name pos:line="19" pos:column="25">stdin_eof<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">=<pos:position pos:line="19" pos:column="36"/></operator> <call><name pos:line="19" pos:column="37">strbuf_getline_lf<pos:position pos:line="19" pos:column="54"/></name><argument_list pos:line="19" pos:column="54">(<argument><expr><operator pos:line="19" pos:column="55">&amp;<pos:position pos:line="19" pos:column="60"/></operator><name pos:line="19" pos:column="56">command_buf<pos:position pos:line="19" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="69">stdin<pos:position pos:line="19" pos:column="74"/></name></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="76"/></expr_stmt>
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><name pos:line="20" pos:column="29">stdin_eof<pos:position pos:line="20" pos:column="38"/></name></expr>)<pos:position pos:line="20" pos:column="39"/></condition><then pos:line="20" pos:column="39">
				<block type="pseudo"><return pos:line="21" pos:column="33">return <expr><name pos:line="21" pos:column="40">EOF<pos:position pos:line="21" pos:column="43"/></name></expr>;<pos:position pos:line="21" pos:column="44"/></return></block></then></if>

			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><operator pos:line="23" pos:column="29">!<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">seen_data_command<pos:position pos:line="23" pos:column="47"/></name>
				<operator pos:line="24" pos:column="33">&amp;&amp;<pos:position pos:line="24" pos:column="43"/></operator> <operator pos:line="24" pos:column="36">!<pos:position pos:line="24" pos:column="37"/></operator><call><name pos:line="24" pos:column="37">starts_with<pos:position pos:line="24" pos:column="48"/></name><argument_list pos:line="24" pos:column="48">(<argument><expr><name><name pos:line="24" pos:column="49">command_buf<pos:position pos:line="24" pos:column="60"/></name><operator pos:line="24" pos:column="60">.<pos:position pos:line="24" pos:column="61"/></operator><name pos:line="24" pos:column="61">buf<pos:position pos:line="24" pos:column="64"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="66">"feature "<pos:position pos:line="24" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call>
				<operator pos:line="25" pos:column="33">&amp;&amp;<pos:position pos:line="25" pos:column="43"/></operator> <operator pos:line="25" pos:column="36">!<pos:position pos:line="25" pos:column="37"/></operator><call><name pos:line="25" pos:column="37">starts_with<pos:position pos:line="25" pos:column="48"/></name><argument_list pos:line="25" pos:column="48">(<argument><expr><name><name pos:line="25" pos:column="49">command_buf<pos:position pos:line="25" pos:column="60"/></name><operator pos:line="25" pos:column="60">.<pos:position pos:line="25" pos:column="61"/></operator><name pos:line="25" pos:column="61">buf<pos:position pos:line="25" pos:column="64"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="66">"option "<pos:position pos:line="25" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="77"/></condition><then pos:line="25" pos:column="77"> <block pos:line="25" pos:column="78">{
				<expr_stmt><expr><call><name pos:line="26" pos:column="33">parse_argv<pos:position pos:line="26" pos:column="43"/></name><argument_list pos:line="26" pos:column="43">()<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="27" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="29" pos:column="25">rc<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <name pos:line="29" pos:column="30">rc_free<pos:position pos:line="29" pos:column="37"/></name></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><name pos:line="30" pos:column="29">rc<pos:position pos:line="30" pos:column="31"/></name></expr>)<pos:position pos:line="30" pos:column="32"/></condition><then pos:line="30" pos:column="32">
				<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="33">rc_free<pos:position pos:line="31" pos:column="40"/></name> <operator pos:line="31" pos:column="41">=<pos:position pos:line="31" pos:column="42"/></operator> <name><name pos:line="31" pos:column="43">rc<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-&gt;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="47">next<pos:position pos:line="31" pos:column="51"/></name></name></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt></block></then>
			<else pos:line="32" pos:column="25">else <block pos:line="32" pos:column="30">{
				<expr_stmt><expr><name pos:line="33" pos:column="33">rc<pos:position pos:line="33" pos:column="35"/></name> <operator pos:line="33" pos:column="36">=<pos:position pos:line="33" pos:column="37"/></operator> <name><name pos:line="33" pos:column="38">cmd_hist<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">.<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="47">next<pos:position pos:line="33" pos:column="51"/></name></name></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="34" pos:column="33">cmd_hist<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">.<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="42">next<pos:position pos:line="34" pos:column="46"/></name></name> <operator pos:line="34" pos:column="47">=<pos:position pos:line="34" pos:column="48"/></operator> <name><name pos:line="34" pos:column="49">rc<pos:position pos:line="34" pos:column="51"/></name><operator pos:line="34" pos:column="51">-&gt;<pos:position pos:line="34" pos:column="56"/></operator><name pos:line="34" pos:column="53">next<pos:position pos:line="34" pos:column="57"/></name></name></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="35" pos:column="33">cmd_hist<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">.<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="42">next<pos:position pos:line="35" pos:column="46"/></name><operator pos:line="35" pos:column="46">-&gt;<pos:position pos:line="35" pos:column="51"/></operator><name pos:line="35" pos:column="48">prev<pos:position pos:line="35" pos:column="52"/></name></name> <operator pos:line="35" pos:column="53">=<pos:position pos:line="35" pos:column="54"/></operator> <operator pos:line="35" pos:column="55">&amp;<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="56">cmd_hist<pos:position pos:line="35" pos:column="64"/></name></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="36" pos:column="33">free<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name><name pos:line="36" pos:column="38">rc<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">-&gt;<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="42">buf<pos:position pos:line="36" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>
			}<pos:position pos:line="37" pos:column="26"/></block></else></if>

			<expr_stmt><expr><name><name pos:line="39" pos:column="25">rc<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">buf<pos:position pos:line="39" pos:column="32"/></name></name> <operator pos:line="39" pos:column="33">=<pos:position pos:line="39" pos:column="34"/></operator> <name><name pos:line="39" pos:column="35">command_buf<pos:position pos:line="39" pos:column="46"/></name><operator pos:line="39" pos:column="46">.<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="47">buf<pos:position pos:line="39" pos:column="50"/></name></name></expr>;<pos:position pos:line="39" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="40" pos:column="25">rc<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">prev<pos:position pos:line="40" pos:column="33"/></name></name> <operator pos:line="40" pos:column="34">=<pos:position pos:line="40" pos:column="35"/></operator> <name pos:line="40" pos:column="36">cmd_tail<pos:position pos:line="40" pos:column="44"/></name></expr>;<pos:position pos:line="40" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="41" pos:column="25">rc<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">next<pos:position pos:line="41" pos:column="33"/></name></name> <operator pos:line="41" pos:column="34">=<pos:position pos:line="41" pos:column="35"/></operator> <name><name pos:line="41" pos:column="36">cmd_hist<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">.<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="45">prev<pos:position pos:line="41" pos:column="49"/></name></name></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="42" pos:column="25">rc<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">prev<pos:position pos:line="42" pos:column="33"/></name><operator pos:line="42" pos:column="33">-&gt;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="35">next<pos:position pos:line="42" pos:column="39"/></name></name> <operator pos:line="42" pos:column="40">=<pos:position pos:line="42" pos:column="41"/></operator> <name pos:line="42" pos:column="42">rc<pos:position pos:line="42" pos:column="44"/></name></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="43" pos:column="25">cmd_tail<pos:position pos:line="43" pos:column="33"/></name> <operator pos:line="43" pos:column="34">=<pos:position pos:line="43" pos:column="35"/></operator> <name pos:line="43" pos:column="36">rc<pos:position pos:line="43" pos:column="38"/></name></expr>;<pos:position pos:line="43" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></else></if>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><call><name pos:line="45" pos:column="21">skip_prefix<pos:position pos:line="45" pos:column="32"/></name><argument_list pos:line="45" pos:column="32">(<argument><expr><name><name pos:line="45" pos:column="33">command_buf<pos:position pos:line="45" pos:column="44"/></name><operator pos:line="45" pos:column="44">.<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="45">buf<pos:position pos:line="45" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="50">"get-mark "<pos:position pos:line="45" pos:column="61"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="63">&amp;<pos:position pos:line="45" pos:column="68"/></operator><name pos:line="45" pos:column="64">p<pos:position pos:line="45" pos:column="65"/></name></expr></argument>)<pos:position pos:line="45" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="67"/></condition><then pos:line="45" pos:column="67"> <block pos:line="45" pos:column="68">{
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">parse_get_mark<pos:position pos:line="46" pos:column="39"/></name><argument_list pos:line="46" pos:column="39">(<argument><expr><name pos:line="46" pos:column="40">p<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
			<continue pos:line="47" pos:column="25">continue;<pos:position pos:line="47" pos:column="34"/></continue>
		}<pos:position pos:line="48" pos:column="18"/></block></then></if>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><call><name pos:line="49" pos:column="21">skip_prefix<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><name><name pos:line="49" pos:column="33">command_buf<pos:position pos:line="49" pos:column="44"/></name><operator pos:line="49" pos:column="44">.<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="45">buf<pos:position pos:line="49" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="50">"cat-blob "<pos:position pos:line="49" pos:column="61"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="63">&amp;<pos:position pos:line="49" pos:column="68"/></operator><name pos:line="49" pos:column="64">p<pos:position pos:line="49" pos:column="65"/></name></expr></argument>)<pos:position pos:line="49" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="67"/></condition><then pos:line="49" pos:column="67"> <block pos:line="49" pos:column="68">{
			<expr_stmt><expr><call><name pos:line="50" pos:column="25">parse_cat_blob<pos:position pos:line="50" pos:column="39"/></name><argument_list pos:line="50" pos:column="39">(<argument><expr><name pos:line="50" pos:column="40">p<pos:position pos:line="50" pos:column="41"/></name></expr></argument>)<pos:position pos:line="50" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="43"/></expr_stmt>
			<continue pos:line="51" pos:column="25">continue;<pos:position pos:line="51" pos:column="34"/></continue>
		}<pos:position pos:line="52" pos:column="18"/></block></then></if>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name><name pos:line="53" pos:column="21">command_buf<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">.<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="33">buf<pos:position pos:line="53" pos:column="36"/></name><index pos:line="53" pos:column="36">[<expr><literal type="number" pos:line="53" pos:column="37">0<pos:position pos:line="53" pos:column="38"/></literal></expr>]<pos:position pos:line="53" pos:column="39"/></index></name> <operator pos:line="53" pos:column="40">==<pos:position pos:line="53" pos:column="42"/></operator> <literal type="char" pos:line="53" pos:column="43">'#'<pos:position pos:line="53" pos:column="46"/></literal></expr>)<pos:position pos:line="53" pos:column="47"/></condition><then pos:line="53" pos:column="47">
			<block type="pseudo"><continue pos:line="54" pos:column="25">continue;<pos:position pos:line="54" pos:column="34"/></continue></block></then></if>
		<return pos:line="55" pos:column="17">return <expr><literal type="number" pos:line="55" pos:column="24">0<pos:position pos:line="55" pos:column="25"/></literal></expr>;<pos:position pos:line="55" pos:column="26"/></return>
	}<pos:position pos:line="56" pos:column="10"/></block></for>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

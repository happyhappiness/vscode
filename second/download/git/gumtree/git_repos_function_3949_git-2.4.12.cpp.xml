<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3949_git-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_tag_body<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">fd<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">unsigned<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">sha1<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">long<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">size<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">enum<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">object_type<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">type<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">buf<pos:position pos:line="5" pos:column="18"/></name></decl>, <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="21">sp<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">buf<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">read_sha1_file<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">sha1<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="36">&amp;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="37">type<pos:position pos:line="7" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="43">&amp;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="44">size<pos:position pos:line="7" pos:column="48"/></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="50"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">buf<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18">
		<block type="pseudo"><return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return></block></then></if>
	<comment type="block" pos:line="10" pos:column="9">/* skip header */</comment>
	<expr_stmt><expr><name pos:line="11" pos:column="9">sp<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">strstr<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">buf<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="26">"\n\n"<pos:position pos:line="11" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">sp<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">||<pos:position pos:line="13" pos:column="19"/></operator> <operator pos:line="13" pos:column="20">!<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">size<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">||<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="29">type<pos:position pos:line="13" pos:column="33"/></name> <operator pos:line="13" pos:column="34">!=<pos:position pos:line="13" pos:column="36"/></operator> <name pos:line="13" pos:column="37">OBJ_TAG<pos:position pos:line="13" pos:column="44"/></name></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45"> <block pos:line="13" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">free<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">buf<pos:position pos:line="14" pos:column="25"/></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
		<return pos:line="15" pos:column="17">return;<pos:position pos:line="15" pos:column="24"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">sp<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">+=<pos:position pos:line="17" pos:column="14"/></operator> <literal type="number" pos:line="17" pos:column="15">2<pos:position pos:line="17" pos:column="16"/></literal></expr>;<pos:position pos:line="17" pos:column="17"/></expr_stmt> <comment type="block" pos:line="17" pos:column="18">/* skip the 2 LFs */</comment>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">write_or_die<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">fd<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="26">sp<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="30">parse_signature<pos:position pos:line="18" pos:column="45"/></name><argument_list pos:line="18" pos:column="45">(<argument><expr><name pos:line="18" pos:column="46">sp<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">buf<pos:position pos:line="18" pos:column="53"/></name> <operator pos:line="18" pos:column="54">+<pos:position pos:line="18" pos:column="55"/></operator> <name pos:line="18" pos:column="56">size<pos:position pos:line="18" pos:column="60"/></name> <operator pos:line="18" pos:column="61">-<pos:position pos:line="18" pos:column="62"/></operator> <name pos:line="18" pos:column="63">sp<pos:position pos:line="18" pos:column="65"/></name></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="68"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">free<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><name pos:line="20" pos:column="14">buf<pos:position pos:line="20" pos:column="17"/></name></expr></argument>)<pos:position pos:line="20" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1821_git-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">prep_exclude<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">dir_struct<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">dir<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">base<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">int<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">baselen<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">exclude_list_group<pos:position pos:line="3" pos:column="34"/></name></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">group<pos:position pos:line="3" pos:column="41"/></name></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">exclude_list<pos:position pos:line="4" pos:column="28"/></name></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">el<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">exclude_stack<pos:position pos:line="5" pos:column="29"/></name></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">stk<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><name pos:line="5" pos:column="37">NULL<pos:position pos:line="5" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">current<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">group<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <operator pos:line="8" pos:column="17">&amp;<pos:position pos:line="8" pos:column="22"/></operator><name><name pos:line="8" pos:column="18">dir<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">exclude_list_group<pos:position pos:line="8" pos:column="41"/></name><index pos:line="8" pos:column="41">[<expr><name pos:line="8" pos:column="42">EXC_DIRS<pos:position pos:line="8" pos:column="50"/></name></expr>]<pos:position pos:line="8" pos:column="51"/></index></name></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>

	<comment type="block" pos:line="10" pos:column="9">/*
	 * Pop the exclude lists from the EXCL_DIRS exclude_list_group
	 * which originate from directories not in the prefix of the
	 * path being checked.
	 */</comment>
	<while pos:line="15" pos:column="9">while <condition pos:line="15" pos:column="15">(<expr><operator pos:line="15" pos:column="16">(<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">stk<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <name><name pos:line="15" pos:column="23">dir<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">exclude_stack<pos:position pos:line="15" pos:column="41"/></name></name><operator pos:line="15" pos:column="41">)<pos:position pos:line="15" pos:column="42"/></operator> <operator pos:line="15" pos:column="43">!=<pos:position pos:line="15" pos:column="45"/></operator> <name pos:line="15" pos:column="46">NULL<pos:position pos:line="15" pos:column="50"/></name></expr>)<pos:position pos:line="15" pos:column="51"/></condition> <block pos:line="15" pos:column="52">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">stk<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">baselen<pos:position pos:line="16" pos:column="33"/></name></name> <operator pos:line="16" pos:column="34">&lt;=<pos:position pos:line="16" pos:column="39"/></operator> <name pos:line="16" pos:column="37">baselen<pos:position pos:line="16" pos:column="44"/></name> <operator pos:line="16" pos:column="45">&amp;&amp;<pos:position pos:line="16" pos:column="55"/></operator>
		    <operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><call><name pos:line="17" pos:column="22">strncmp<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name><name pos:line="17" pos:column="30">dir<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">-&gt;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="35">basebuf<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">.<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">buf<pos:position pos:line="17" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">base<pos:position pos:line="17" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="54">stk<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">-&gt;<pos:position pos:line="17" pos:column="62"/></operator><name pos:line="17" pos:column="59">baselen<pos:position pos:line="17" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="68"/></condition><then pos:line="17" pos:column="68">
			<block type="pseudo"><break pos:line="18" pos:column="25">break;<pos:position pos:line="18" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="19" pos:column="17">el<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <operator pos:line="19" pos:column="22">&amp;<pos:position pos:line="19" pos:column="27"/></operator><name><name pos:line="19" pos:column="23">group<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">el<pos:position pos:line="19" pos:column="32"/></name><index pos:line="19" pos:column="32">[<expr><name><name pos:line="19" pos:column="33">dir<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">exclude_stack<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">-&gt;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="53">exclude_ix<pos:position pos:line="19" pos:column="63"/></name></name></expr>]<pos:position pos:line="19" pos:column="64"/></index></name></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">dir<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">-&gt;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">exclude_stack<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">=<pos:position pos:line="20" pos:column="37"/></operator> <name><name pos:line="20" pos:column="38">stk<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">-&gt;<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="43">prev<pos:position pos:line="20" pos:column="47"/></name></name></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">dir<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">exclude<pos:position pos:line="21" pos:column="29"/></name></name> <operator pos:line="21" pos:column="30">=<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="32">NULL<pos:position pos:line="21" pos:column="36"/></name></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">free<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><operator pos:line="22" pos:column="22">(<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="23">char<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">*<pos:position pos:line="22" pos:column="29"/></operator><operator pos:line="22" pos:column="29">)<pos:position pos:line="22" pos:column="30"/></operator><name><name pos:line="22" pos:column="30">el<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">src<pos:position pos:line="22" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt> <comment type="block" pos:line="22" pos:column="40">/* see strbuf_detach() below */</comment>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">clear_exclude_list<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">el<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">free<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">stk<pos:position pos:line="24" pos:column="25"/></name></expr></argument>)<pos:position pos:line="24" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">group<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">nr<pos:position pos:line="25" pos:column="26"/></name></name><operator pos:line="25" pos:column="26">--<pos:position pos:line="25" pos:column="28"/></operator></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></while>

	<comment type="block" pos:line="28" pos:column="9">/* Skip traversing into sub directories if the parent is excluded */</comment>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name><name pos:line="29" pos:column="13">dir<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">exclude<pos:position pos:line="29" pos:column="25"/></name></name></expr>)<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26">
		<block type="pseudo"><return pos:line="30" pos:column="17">return;<pos:position pos:line="30" pos:column="24"/></return></block></then></if>

	<comment type="block" pos:line="32" pos:column="9">/*
	 * Lazy initialization. All call sites currently just
	 * memset(dir, 0, sizeof(*dir)) before use. Changing all of
	 * them seems lots of work for little benefit.
	 */</comment>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">!<pos:position pos:line="37" pos:column="14"/></operator><name><name pos:line="37" pos:column="14">dir<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">-&gt;<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="19">basebuf<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">.<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="27">buf<pos:position pos:line="37" pos:column="30"/></name></name></expr>)<pos:position pos:line="37" pos:column="31"/></condition><then pos:line="37" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="17">strbuf_init<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><operator pos:line="38" pos:column="29">&amp;<pos:position pos:line="38" pos:column="34"/></operator><name><name pos:line="38" pos:column="30">dir<pos:position pos:line="38" pos:column="33"/></name><operator pos:line="38" pos:column="33">-&gt;<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="35">basebuf<pos:position pos:line="38" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="44">PATH_MAX<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="40" pos:column="9">/* Read from the parent directories and push them down. */</comment>
	<expr_stmt><expr><name pos:line="41" pos:column="9">current<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <ternary><condition><expr><name pos:line="41" pos:column="19">stk<pos:position pos:line="41" pos:column="22"/></name></expr> ?<pos:position pos:line="41" pos:column="24"/></condition><then pos:line="41" pos:column="24"> <expr><name><name pos:line="41" pos:column="25">stk<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">-&gt;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="30">baselen<pos:position pos:line="41" pos:column="37"/></name></name></expr> <pos:position pos:line="41" pos:column="38"/></then><else pos:line="41" pos:column="38">: <expr><operator pos:line="41" pos:column="40">-<pos:position pos:line="41" pos:column="41"/></operator><literal type="number" pos:line="41" pos:column="41">1<pos:position pos:line="41" pos:column="42"/></literal></expr></else></ternary></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">strbuf_setlen<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><operator pos:line="42" pos:column="23">&amp;<pos:position pos:line="42" pos:column="28"/></operator><name><name pos:line="42" pos:column="24">dir<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">basebuf<pos:position pos:line="42" pos:column="36"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="42" pos:column="38">current<pos:position pos:line="42" pos:column="45"/></name> <operator pos:line="42" pos:column="46">&lt;<pos:position pos:line="42" pos:column="50"/></operator> <literal type="number" pos:line="42" pos:column="48">0<pos:position pos:line="42" pos:column="49"/></literal></expr> ?<pos:position pos:line="42" pos:column="51"/></condition><then pos:line="42" pos:column="51"> <expr><literal type="number" pos:line="42" pos:column="52">0<pos:position pos:line="42" pos:column="53"/></literal></expr> <pos:position pos:line="42" pos:column="54"/></then><else pos:line="42" pos:column="54">: <expr><name pos:line="42" pos:column="56">current<pos:position pos:line="42" pos:column="63"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="42" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="65"/></expr_stmt>
	<while pos:line="43" pos:column="9">while <condition pos:line="43" pos:column="15">(<expr><name pos:line="43" pos:column="16">current<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">&lt;<pos:position pos:line="43" pos:column="28"/></operator> <name pos:line="43" pos:column="26">baselen<pos:position pos:line="43" pos:column="33"/></name></expr>)<pos:position pos:line="43" pos:column="34"/></condition> <block pos:line="43" pos:column="35">{
		<decl_stmt><decl><type><specifier pos:line="44" pos:column="17">const<pos:position pos:line="44" pos:column="22"/></specifier> <name pos:line="44" pos:column="23">char<pos:position pos:line="44" pos:column="27"/></name> <modifier pos:line="44" pos:column="28">*<pos:position pos:line="44" pos:column="29"/></modifier></type><name pos:line="44" pos:column="29">cp<pos:position pos:line="44" pos:column="31"/></name></decl>;<pos:position pos:line="44" pos:column="32"/></decl_stmt>

		<expr_stmt><expr><name pos:line="46" pos:column="17">stk<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <call><name pos:line="46" pos:column="23">xcalloc<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><literal type="number" pos:line="46" pos:column="31">1<pos:position pos:line="46" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="34">sizeof<argument_list pos:line="46" pos:column="40">(<argument><expr><operator pos:line="46" pos:column="41">*<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="42">stk<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="48"/></expr_stmt>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">current<pos:position pos:line="47" pos:column="28"/></name> <operator pos:line="47" pos:column="29">&lt;<pos:position pos:line="47" pos:column="33"/></operator> <literal type="number" pos:line="47" pos:column="31">0<pos:position pos:line="47" pos:column="32"/></literal></expr>)<pos:position pos:line="47" pos:column="33"/></condition><then pos:line="47" pos:column="33"> <block pos:line="47" pos:column="34">{
			<expr_stmt><expr><name pos:line="48" pos:column="25">cp<pos:position pos:line="48" pos:column="27"/></name> <operator pos:line="48" pos:column="28">=<pos:position pos:line="48" pos:column="29"/></operator> <name pos:line="48" pos:column="30">base<pos:position pos:line="48" pos:column="34"/></name></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="49" pos:column="25">current<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">=<pos:position pos:line="49" pos:column="34"/></operator> <literal type="number" pos:line="49" pos:column="35">0<pos:position pos:line="49" pos:column="36"/></literal></expr>;<pos:position pos:line="49" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="50" pos:column="18"/></block></then> <else pos:line="50" pos:column="19">else <block pos:line="50" pos:column="24">{
			<expr_stmt><expr><name pos:line="51" pos:column="25">cp<pos:position pos:line="51" pos:column="27"/></name> <operator pos:line="51" pos:column="28">=<pos:position pos:line="51" pos:column="29"/></operator> <call><name pos:line="51" pos:column="30">strchr<pos:position pos:line="51" pos:column="36"/></name><argument_list pos:line="51" pos:column="36">(<argument><expr><name pos:line="51" pos:column="37">base<pos:position pos:line="51" pos:column="41"/></name> <operator pos:line="51" pos:column="42">+<pos:position pos:line="51" pos:column="43"/></operator> <name pos:line="51" pos:column="44">current<pos:position pos:line="51" pos:column="51"/></name> <operator pos:line="51" pos:column="52">+<pos:position pos:line="51" pos:column="53"/></operator> <literal type="number" pos:line="51" pos:column="54">1<pos:position pos:line="51" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="51" pos:column="57">'/'<pos:position pos:line="51" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="62"/></expr_stmt>
			<if pos:line="52" pos:column="25">if <condition pos:line="52" pos:column="28">(<expr><operator pos:line="52" pos:column="29">!<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="30">cp<pos:position pos:line="52" pos:column="32"/></name></expr>)<pos:position pos:line="52" pos:column="33"/></condition><then pos:line="52" pos:column="33">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="33">die<pos:position pos:line="53" pos:column="36"/></name><argument_list pos:line="53" pos:column="36">(<argument><expr><literal type="string" pos:line="53" pos:column="37">"oops in prep_exclude"<pos:position pos:line="53" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="61"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="54" pos:column="25">cp<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">++<pos:position pos:line="54" pos:column="29"/></operator></expr>;<pos:position pos:line="54" pos:column="30"/></expr_stmt>
		}<pos:position pos:line="55" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name><name pos:line="56" pos:column="17">stk<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">-&gt;<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="22">prev<pos:position pos:line="56" pos:column="26"/></name></name> <operator pos:line="56" pos:column="27">=<pos:position pos:line="56" pos:column="28"/></operator> <name><name pos:line="56" pos:column="29">dir<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">-&gt;<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="34">exclude_stack<pos:position pos:line="56" pos:column="47"/></name></name></expr>;<pos:position pos:line="56" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="57" pos:column="17">stk<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">-&gt;<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="22">baselen<pos:position pos:line="57" pos:column="29"/></name></name> <operator pos:line="57" pos:column="30">=<pos:position pos:line="57" pos:column="31"/></operator> <name pos:line="57" pos:column="32">cp<pos:position pos:line="57" pos:column="34"/></name> <operator pos:line="57" pos:column="35">-<pos:position pos:line="57" pos:column="36"/></operator> <name pos:line="57" pos:column="37">base<pos:position pos:line="57" pos:column="41"/></name></expr>;<pos:position pos:line="57" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="58" pos:column="17">stk<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">-&gt;<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="22">exclude_ix<pos:position pos:line="58" pos:column="32"/></name></name> <operator pos:line="58" pos:column="33">=<pos:position pos:line="58" pos:column="34"/></operator> <name><name pos:line="58" pos:column="35">group<pos:position pos:line="58" pos:column="40"/></name><operator pos:line="58" pos:column="40">-&gt;<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="42">nr<pos:position pos:line="58" pos:column="44"/></name></name></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="59" pos:column="17">el<pos:position pos:line="59" pos:column="19"/></name> <operator pos:line="59" pos:column="20">=<pos:position pos:line="59" pos:column="21"/></operator> <call><name pos:line="59" pos:column="22">add_exclude_list<pos:position pos:line="59" pos:column="38"/></name><argument_list pos:line="59" pos:column="38">(<argument><expr><name pos:line="59" pos:column="39">dir<pos:position pos:line="59" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="44">EXC_DIRS<pos:position pos:line="59" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="54">NULL<pos:position pos:line="59" pos:column="58"/></name></expr></argument>)<pos:position pos:line="59" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">strbuf_add<pos:position pos:line="60" pos:column="27"/></name><argument_list pos:line="60" pos:column="27">(<argument><expr><operator pos:line="60" pos:column="28">&amp;<pos:position pos:line="60" pos:column="33"/></operator><name><name pos:line="60" pos:column="29">dir<pos:position pos:line="60" pos:column="32"/></name><operator pos:line="60" pos:column="32">-&gt;<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="34">basebuf<pos:position pos:line="60" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="43">base<pos:position pos:line="60" pos:column="47"/></name> <operator pos:line="60" pos:column="48">+<pos:position pos:line="60" pos:column="49"/></operator> <name pos:line="60" pos:column="50">current<pos:position pos:line="60" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="59">stk<pos:position pos:line="60" pos:column="62"/></name><operator pos:line="60" pos:column="62">-&gt;<pos:position pos:line="60" pos:column="67"/></operator><name pos:line="60" pos:column="64">baselen<pos:position pos:line="60" pos:column="71"/></name></name> <operator pos:line="60" pos:column="72">-<pos:position pos:line="60" pos:column="73"/></operator> <name pos:line="60" pos:column="74">current<pos:position pos:line="60" pos:column="81"/></name></expr></argument>)<pos:position pos:line="60" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="83"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="61" pos:column="17">assert<pos:position pos:line="61" pos:column="23"/></name><argument_list pos:line="61" pos:column="23">(<argument><expr><name><name pos:line="61" pos:column="24">stk<pos:position pos:line="61" pos:column="27"/></name><operator pos:line="61" pos:column="27">-&gt;<pos:position pos:line="61" pos:column="32"/></operator><name pos:line="61" pos:column="29">baselen<pos:position pos:line="61" pos:column="36"/></name></name> <operator pos:line="61" pos:column="37">==<pos:position pos:line="61" pos:column="39"/></operator> <name><name pos:line="61" pos:column="40">dir<pos:position pos:line="61" pos:column="43"/></name><operator pos:line="61" pos:column="43">-&gt;<pos:position pos:line="61" pos:column="48"/></operator><name pos:line="61" pos:column="45">basebuf<pos:position pos:line="61" pos:column="52"/></name><operator pos:line="61" pos:column="52">.<pos:position pos:line="61" pos:column="53"/></operator><name pos:line="61" pos:column="53">len<pos:position pos:line="61" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="58"/></expr_stmt>

		<comment type="block" pos:line="63" pos:column="17">/* Abort if the directory is excluded */</comment>
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><name><name pos:line="64" pos:column="21">stk<pos:position pos:line="64" pos:column="24"/></name><operator pos:line="64" pos:column="24">-&gt;<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="26">baselen<pos:position pos:line="64" pos:column="33"/></name></name></expr>)<pos:position pos:line="64" pos:column="34"/></condition><then pos:line="64" pos:column="34"> <block pos:line="64" pos:column="35">{
			<decl_stmt><decl><type><name pos:line="65" pos:column="25">int<pos:position pos:line="65" pos:column="28"/></name></type> <name pos:line="65" pos:column="29">dt<pos:position pos:line="65" pos:column="31"/></name> <init pos:line="65" pos:column="32">= <expr><name pos:line="65" pos:column="34">DT_DIR<pos:position pos:line="65" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="65" pos:column="41"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="66" pos:column="25">dir<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">-&gt;<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="30">basebuf<pos:position pos:line="66" pos:column="37"/></name><operator pos:line="66" pos:column="37">.<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="38">buf<pos:position pos:line="66" pos:column="41"/></name><index pos:line="66" pos:column="41">[<expr><name><name pos:line="66" pos:column="42">stk<pos:position pos:line="66" pos:column="45"/></name><operator pos:line="66" pos:column="45">-&gt;<pos:position pos:line="66" pos:column="50"/></operator><name pos:line="66" pos:column="47">baselen<pos:position pos:line="66" pos:column="54"/></name></name> <operator pos:line="66" pos:column="55">-<pos:position pos:line="66" pos:column="56"/></operator> <literal type="number" pos:line="66" pos:column="57">1<pos:position pos:line="66" pos:column="58"/></literal></expr>]<pos:position pos:line="66" pos:column="59"/></index></name> <operator pos:line="66" pos:column="60">=<pos:position pos:line="66" pos:column="61"/></operator> <literal type="number" pos:line="66" pos:column="62">0<pos:position pos:line="66" pos:column="63"/></literal></expr>;<pos:position pos:line="66" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="67" pos:column="25">dir<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">-&gt;<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="30">exclude<pos:position pos:line="67" pos:column="37"/></name></name> <operator pos:line="67" pos:column="38">=<pos:position pos:line="67" pos:column="39"/></operator> <call><name pos:line="67" pos:column="40">last_exclude_matching_from_lists<pos:position pos:line="67" pos:column="72"/></name><argument_list pos:line="67" pos:column="72">(<argument><expr><name pos:line="67" pos:column="73">dir<pos:position pos:line="67" pos:column="76"/></name></expr></argument>,
				<argument><expr><name><name pos:line="68" pos:column="33">dir<pos:position pos:line="68" pos:column="36"/></name><operator pos:line="68" pos:column="36">-&gt;<pos:position pos:line="68" pos:column="41"/></operator><name pos:line="68" pos:column="38">basebuf<pos:position pos:line="68" pos:column="45"/></name><operator pos:line="68" pos:column="45">.<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="46">buf<pos:position pos:line="68" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="51">stk<pos:position pos:line="68" pos:column="54"/></name><operator pos:line="68" pos:column="54">-&gt;<pos:position pos:line="68" pos:column="59"/></operator><name pos:line="68" pos:column="56">baselen<pos:position pos:line="68" pos:column="63"/></name></name> <operator pos:line="68" pos:column="64">-<pos:position pos:line="68" pos:column="65"/></operator> <literal type="number" pos:line="68" pos:column="66">1<pos:position pos:line="68" pos:column="67"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="69" pos:column="33">dir<pos:position pos:line="69" pos:column="36"/></name><operator pos:line="69" pos:column="36">-&gt;<pos:position pos:line="69" pos:column="41"/></operator><name pos:line="69" pos:column="38">basebuf<pos:position pos:line="69" pos:column="45"/></name><operator pos:line="69" pos:column="45">.<pos:position pos:line="69" pos:column="46"/></operator><name pos:line="69" pos:column="46">buf<pos:position pos:line="69" pos:column="49"/></name></name> <operator pos:line="69" pos:column="50">+<pos:position pos:line="69" pos:column="51"/></operator> <name pos:line="69" pos:column="52">current<pos:position pos:line="69" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="61">&amp;<pos:position pos:line="69" pos:column="66"/></operator><name pos:line="69" pos:column="62">dt<pos:position pos:line="69" pos:column="64"/></name></expr></argument>)<pos:position pos:line="69" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="70" pos:column="25">dir<pos:position pos:line="70" pos:column="28"/></name><operator pos:line="70" pos:column="28">-&gt;<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="30">basebuf<pos:position pos:line="70" pos:column="37"/></name><operator pos:line="70" pos:column="37">.<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="38">buf<pos:position pos:line="70" pos:column="41"/></name><index pos:line="70" pos:column="41">[<expr><name><name pos:line="70" pos:column="42">stk<pos:position pos:line="70" pos:column="45"/></name><operator pos:line="70" pos:column="45">-&gt;<pos:position pos:line="70" pos:column="50"/></operator><name pos:line="70" pos:column="47">baselen<pos:position pos:line="70" pos:column="54"/></name></name> <operator pos:line="70" pos:column="55">-<pos:position pos:line="70" pos:column="56"/></operator> <literal type="number" pos:line="70" pos:column="57">1<pos:position pos:line="70" pos:column="58"/></literal></expr>]<pos:position pos:line="70" pos:column="59"/></index></name> <operator pos:line="70" pos:column="60">=<pos:position pos:line="70" pos:column="61"/></operator> <literal type="char" pos:line="70" pos:column="62">'/'<pos:position pos:line="70" pos:column="65"/></literal></expr>;<pos:position pos:line="70" pos:column="66"/></expr_stmt>
			<if pos:line="71" pos:column="25">if <condition pos:line="71" pos:column="28">(<expr><name><name pos:line="71" pos:column="29">dir<pos:position pos:line="71" pos:column="32"/></name><operator pos:line="71" pos:column="32">-&gt;<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="34">exclude<pos:position pos:line="71" pos:column="41"/></name></name> <operator pos:line="71" pos:column="42">&amp;&amp;<pos:position pos:line="71" pos:column="52"/></operator>
			    <name><name pos:line="72" pos:column="29">dir<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">-&gt;<pos:position pos:line="72" pos:column="37"/></operator><name pos:line="72" pos:column="34">exclude<pos:position pos:line="72" pos:column="41"/></name><operator pos:line="72" pos:column="41">-&gt;<pos:position pos:line="72" pos:column="46"/></operator><name pos:line="72" pos:column="43">flags<pos:position pos:line="72" pos:column="48"/></name></name> <operator pos:line="72" pos:column="49">&amp;<pos:position pos:line="72" pos:column="54"/></operator> <name pos:line="72" pos:column="51">EXC_FLAG_NEGATIVE<pos:position pos:line="72" pos:column="68"/></name></expr>)<pos:position pos:line="72" pos:column="69"/></condition><then pos:line="72" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="73" pos:column="33">dir<pos:position pos:line="73" pos:column="36"/></name><operator pos:line="73" pos:column="36">-&gt;<pos:position pos:line="73" pos:column="41"/></operator><name pos:line="73" pos:column="38">exclude<pos:position pos:line="73" pos:column="45"/></name></name> <operator pos:line="73" pos:column="46">=<pos:position pos:line="73" pos:column="47"/></operator> <name pos:line="73" pos:column="48">NULL<pos:position pos:line="73" pos:column="52"/></name></expr>;<pos:position pos:line="73" pos:column="53"/></expr_stmt></block></then></if>
			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><name><name pos:line="74" pos:column="29">dir<pos:position pos:line="74" pos:column="32"/></name><operator pos:line="74" pos:column="32">-&gt;<pos:position pos:line="74" pos:column="37"/></operator><name pos:line="74" pos:column="34">exclude<pos:position pos:line="74" pos:column="41"/></name></name></expr>)<pos:position pos:line="74" pos:column="42"/></condition><then pos:line="74" pos:column="42"> <block pos:line="74" pos:column="43">{
				<expr_stmt><expr><name><name pos:line="75" pos:column="33">dir<pos:position pos:line="75" pos:column="36"/></name><operator pos:line="75" pos:column="36">-&gt;<pos:position pos:line="75" pos:column="41"/></operator><name pos:line="75" pos:column="38">exclude_stack<pos:position pos:line="75" pos:column="51"/></name></name> <operator pos:line="75" pos:column="52">=<pos:position pos:line="75" pos:column="53"/></operator> <name pos:line="75" pos:column="54">stk<pos:position pos:line="75" pos:column="57"/></name></expr>;<pos:position pos:line="75" pos:column="58"/></expr_stmt>
				<return pos:line="76" pos:column="33">return;<pos:position pos:line="76" pos:column="40"/></return>
			}<pos:position pos:line="77" pos:column="26"/></block></then></if>
		}<pos:position pos:line="78" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="80" pos:column="17">/* Try to read per-directory file */</comment>
		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><name><name pos:line="81" pos:column="21">dir<pos:position pos:line="81" pos:column="24"/></name><operator pos:line="81" pos:column="24">-&gt;<pos:position pos:line="81" pos:column="29"/></operator><name pos:line="81" pos:column="26">exclude_per_dir<pos:position pos:line="81" pos:column="41"/></name></name></expr>)<pos:position pos:line="81" pos:column="42"/></condition><then pos:line="81" pos:column="42"> <block pos:line="81" pos:column="43">{
			<comment type="block" pos:line="82" pos:column="25">/*
			 * dir-&gt;basebuf gets reused by the traversal, but we
			 * need fname to remain unchanged to ensure the src
			 * member of each struct exclude correctly
			 * back-references its source file.  Other invocations
			 * of add_exclude_list provide stable strings, so we
			 * strbuf_detach() and free() here in the caller.
			 */</comment>
			<decl_stmt><decl><type><name><name pos:line="90" pos:column="25">struct<pos:position pos:line="90" pos:column="31"/></name> <name pos:line="90" pos:column="32">strbuf<pos:position pos:line="90" pos:column="38"/></name></name></type> <name pos:line="90" pos:column="39">sb<pos:position pos:line="90" pos:column="41"/></name> <init pos:line="90" pos:column="42">= <expr><name pos:line="90" pos:column="44">STRBUF_INIT<pos:position pos:line="90" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="90" pos:column="56"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="91" pos:column="25">strbuf_addbuf<pos:position pos:line="91" pos:column="38"/></name><argument_list pos:line="91" pos:column="38">(<argument><expr><operator pos:line="91" pos:column="39">&amp;<pos:position pos:line="91" pos:column="44"/></operator><name pos:line="91" pos:column="40">sb<pos:position pos:line="91" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="44">&amp;<pos:position pos:line="91" pos:column="49"/></operator><name><name pos:line="91" pos:column="45">dir<pos:position pos:line="91" pos:column="48"/></name><operator pos:line="91" pos:column="48">-&gt;<pos:position pos:line="91" pos:column="53"/></operator><name pos:line="91" pos:column="50">basebuf<pos:position pos:line="91" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="92" pos:column="25">strbuf_addstr<pos:position pos:line="92" pos:column="38"/></name><argument_list pos:line="92" pos:column="38">(<argument><expr><operator pos:line="92" pos:column="39">&amp;<pos:position pos:line="92" pos:column="44"/></operator><name pos:line="92" pos:column="40">sb<pos:position pos:line="92" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="44">dir<pos:position pos:line="92" pos:column="47"/></name><operator pos:line="92" pos:column="47">-&gt;<pos:position pos:line="92" pos:column="52"/></operator><name pos:line="92" pos:column="49">exclude_per_dir<pos:position pos:line="92" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="93" pos:column="25">el<pos:position pos:line="93" pos:column="27"/></name><operator pos:line="93" pos:column="27">-&gt;<pos:position pos:line="93" pos:column="32"/></operator><name pos:line="93" pos:column="29">src<pos:position pos:line="93" pos:column="32"/></name></name> <operator pos:line="93" pos:column="33">=<pos:position pos:line="93" pos:column="34"/></operator> <call><name pos:line="93" pos:column="35">strbuf_detach<pos:position pos:line="93" pos:column="48"/></name><argument_list pos:line="93" pos:column="48">(<argument><expr><operator pos:line="93" pos:column="49">&amp;<pos:position pos:line="93" pos:column="54"/></operator><name pos:line="93" pos:column="50">sb<pos:position pos:line="93" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="54">NULL<pos:position pos:line="93" pos:column="58"/></name></expr></argument>)<pos:position pos:line="93" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="94" pos:column="25">add_excludes_from_file_to_list<pos:position pos:line="94" pos:column="55"/></name><argument_list pos:line="94" pos:column="55">(<argument><expr><name><name pos:line="94" pos:column="56">el<pos:position pos:line="94" pos:column="58"/></name><operator pos:line="94" pos:column="58">-&gt;<pos:position pos:line="94" pos:column="63"/></operator><name pos:line="94" pos:column="60">src<pos:position pos:line="94" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="65">el<pos:position pos:line="94" pos:column="67"/></name><operator pos:line="94" pos:column="67">-&gt;<pos:position pos:line="94" pos:column="72"/></operator><name pos:line="94" pos:column="69">src<pos:position pos:line="94" pos:column="72"/></name></name></expr></argument>,
						       <argument><expr><name><name pos:line="95" pos:column="56">stk<pos:position pos:line="95" pos:column="59"/></name><operator pos:line="95" pos:column="59">-&gt;<pos:position pos:line="95" pos:column="64"/></operator><name pos:line="95" pos:column="61">baselen<pos:position pos:line="95" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="70">el<pos:position pos:line="95" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="74">1<pos:position pos:line="95" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="77"/></expr_stmt>
		}<pos:position pos:line="96" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="97" pos:column="17">dir<pos:position pos:line="97" pos:column="20"/></name><operator pos:line="97" pos:column="20">-&gt;<pos:position pos:line="97" pos:column="25"/></operator><name pos:line="97" pos:column="22">exclude_stack<pos:position pos:line="97" pos:column="35"/></name></name> <operator pos:line="97" pos:column="36">=<pos:position pos:line="97" pos:column="37"/></operator> <name pos:line="97" pos:column="38">stk<pos:position pos:line="97" pos:column="41"/></name></expr>;<pos:position pos:line="97" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="98" pos:column="17">current<pos:position pos:line="98" pos:column="24"/></name> <operator pos:line="98" pos:column="25">=<pos:position pos:line="98" pos:column="26"/></operator> <name><name pos:line="98" pos:column="27">stk<pos:position pos:line="98" pos:column="30"/></name><operator pos:line="98" pos:column="30">-&gt;<pos:position pos:line="98" pos:column="35"/></operator><name pos:line="98" pos:column="32">baselen<pos:position pos:line="98" pos:column="39"/></name></name></expr>;<pos:position pos:line="98" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="99" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="100" pos:column="9">strbuf_setlen<pos:position pos:line="100" pos:column="22"/></name><argument_list pos:line="100" pos:column="22">(<argument><expr><operator pos:line="100" pos:column="23">&amp;<pos:position pos:line="100" pos:column="28"/></operator><name><name pos:line="100" pos:column="24">dir<pos:position pos:line="100" pos:column="27"/></name><operator pos:line="100" pos:column="27">-&gt;<pos:position pos:line="100" pos:column="32"/></operator><name pos:line="100" pos:column="29">basebuf<pos:position pos:line="100" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="38">baselen<pos:position pos:line="100" pos:column="45"/></name></expr></argument>)<pos:position pos:line="100" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="47"/></expr_stmt>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

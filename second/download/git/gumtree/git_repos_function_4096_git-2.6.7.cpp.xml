<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4096_git-2.6.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ewah_serialize_native<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">ewah_bitmap<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">self<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">fd<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uint32_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">write32<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">to_write<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name><name pos:line="4" pos:column="27">self<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">buffer_size<pos:position pos:line="4" pos:column="44"/></name></name> <operator pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></operator> <literal type="number" pos:line="4" pos:column="47">8<pos:position pos:line="4" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* 32 bit -- bit size for the map */</comment>
	<expr_stmt><expr><name pos:line="7" pos:column="9">write32<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <operator pos:line="7" pos:column="19">(<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">uint32_t<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">)<pos:position pos:line="7" pos:column="29"/></operator><name><name pos:line="7" pos:column="29">self<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">-&gt;<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="35">bit_size<pos:position pos:line="7" pos:column="43"/></name></name></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">write<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">fd<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="23">&amp;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="24">write32<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="33">4<pos:position pos:line="8" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call> <operator pos:line="8" pos:column="36">!=<pos:position pos:line="8" pos:column="38"/></operator> <literal type="number" pos:line="8" pos:column="39">4<pos:position pos:line="8" pos:column="40"/></literal></expr>)<pos:position pos:line="8" pos:column="41"/></condition><then pos:line="8" pos:column="41">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">-<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">1<pos:position pos:line="9" pos:column="26"/></literal></expr>;<pos:position pos:line="9" pos:column="27"/></return></block></then></if>

	<comment type="block" format="doxygen" pos:line="11" pos:column="9">/** 32 bit -- number of compressed 64-bit words */</comment>
	<expr_stmt><expr><name pos:line="12" pos:column="9">write32<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <operator pos:line="12" pos:column="19">(<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">uint32_t<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">)<pos:position pos:line="12" pos:column="29"/></operator><name><name pos:line="12" pos:column="29">self<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">-&gt;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="35">buffer_size<pos:position pos:line="12" pos:column="46"/></name></name></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">write<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">fd<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="23">&amp;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="24">write32<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="33">4<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call> <operator pos:line="13" pos:column="36">!=<pos:position pos:line="13" pos:column="38"/></operator> <literal type="number" pos:line="13" pos:column="39">4<pos:position pos:line="13" pos:column="40"/></literal></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">write<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">fd<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="23">self<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">buffer<pos:position pos:line="16" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">to_write<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call> <operator pos:line="16" pos:column="47">!=<pos:position pos:line="16" pos:column="49"/></operator> <name pos:line="16" pos:column="50">to_write<pos:position pos:line="16" pos:column="58"/></name></expr>)<pos:position pos:line="16" pos:column="59"/></condition><then pos:line="16" pos:column="59">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">-<pos:position pos:line="17" pos:column="25"/></operator><literal type="number" pos:line="17" pos:column="25">1<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></return></block></then></if>

	<comment type="block" format="doxygen" pos:line="19" pos:column="9">/** 32 bit -- position for the RLW */</comment>
	<expr_stmt><expr><name pos:line="20" pos:column="9">write32<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <name><name pos:line="20" pos:column="19">self<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">rlw<pos:position pos:line="20" pos:column="28"/></name></name> <operator pos:line="20" pos:column="29">-<pos:position pos:line="20" pos:column="30"/></operator> <name><name pos:line="20" pos:column="31">self<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">buffer<pos:position pos:line="20" pos:column="43"/></name></name></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">write<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">fd<pos:position pos:line="21" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="23">&amp;<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="24">write32<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="33">4<pos:position pos:line="21" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call> <operator pos:line="21" pos:column="36">!=<pos:position pos:line="21" pos:column="38"/></operator> <literal type="number" pos:line="21" pos:column="39">4<pos:position pos:line="21" pos:column="40"/></literal></expr>)<pos:position pos:line="21" pos:column="41"/></condition><then pos:line="21" pos:column="41">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">-<pos:position pos:line="22" pos:column="25"/></operator><literal type="number" pos:line="22" pos:column="25">1<pos:position pos:line="22" pos:column="26"/></literal></expr>;<pos:position pos:line="22" pos:column="27"/></return></block></then></if>

	<return pos:line="24" pos:column="9">return <expr><operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><literal type="number" pos:line="24" pos:column="17">3<pos:position pos:line="24" pos:column="18"/></literal> <operator pos:line="24" pos:column="19">*<pos:position pos:line="24" pos:column="20"/></operator> <literal type="number" pos:line="24" pos:column="21">4<pos:position pos:line="24" pos:column="22"/></literal><operator pos:line="24" pos:column="22">)<pos:position pos:line="24" pos:column="23"/></operator> <operator pos:line="24" pos:column="24">+<pos:position pos:line="24" pos:column="25"/></operator> <name pos:line="24" pos:column="26">to_write<pos:position pos:line="24" pos:column="34"/></name></expr>;<pos:position pos:line="24" pos:column="35"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1083_git-2.8.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">unsigned<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">long<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">get_delta_hdr_size<pos:position pos:line="1" pos:column="47"/></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">unsigned<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier><modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">datap<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
					       <parameter><decl><type><specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier> <name pos:line="2" pos:column="54">unsigned<pos:position pos:line="2" pos:column="62"/></name> <name pos:line="2" pos:column="63">char<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">top<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">unsigned<pos:position pos:line="4" pos:column="23"/></name> <name pos:line="4" pos:column="24">char<pos:position pos:line="4" pos:column="28"/></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">data<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><operator pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="38">datap<pos:position pos:line="4" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">long<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">cmd<pos:position pos:line="5" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="28">size<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><literal type="number" pos:line="5" pos:column="35">0<pos:position pos:line="5" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
	<do pos:line="7" pos:column="9">do <block pos:line="7" pos:column="12">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">cmd<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <operator pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">data<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">++<pos:position pos:line="8" pos:column="30"/></operator></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">size<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">|=<pos:position pos:line="9" pos:column="24"/></operator> <operator pos:line="9" pos:column="25">(<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">cmd<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">&amp;<pos:position pos:line="9" pos:column="35"/></operator> <literal type="number" pos:line="9" pos:column="32">0x7f<pos:position pos:line="9" pos:column="36"/></literal><operator pos:line="9" pos:column="36">)<pos:position pos:line="9" pos:column="37"/></operator> <operator pos:line="9" pos:column="38">&lt;&lt;<pos:position pos:line="9" pos:column="46"/></operator> <name pos:line="9" pos:column="41">i<pos:position pos:line="9" pos:column="42"/></name></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">i<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">+=<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="22">7<pos:position pos:line="10" pos:column="23"/></literal></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block> while <condition pos:line="11" pos:column="17">(<expr><name pos:line="11" pos:column="18">cmd<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">&amp;<pos:position pos:line="11" pos:column="27"/></operator> <literal type="number" pos:line="11" pos:column="24">0x80<pos:position pos:line="11" pos:column="28"/></literal> <operator pos:line="11" pos:column="29">&amp;&amp;<pos:position pos:line="11" pos:column="39"/></operator> <name pos:line="11" pos:column="32">data<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">&lt;<pos:position pos:line="11" pos:column="41"/></operator> <name pos:line="11" pos:column="39">top<pos:position pos:line="11" pos:column="42"/></name></expr>)<pos:position pos:line="11" pos:column="43"/></condition>;<pos:position pos:line="11" pos:column="44"/></do>
	<expr_stmt><expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">datap<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">data<pos:position pos:line="12" pos:column="22"/></name></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
	<return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">size<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_151_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_reachable_revlist<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">child_process<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">cmd<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">object_array<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">src<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="3" pos:column="33">struct<pos:position pos:line="3" pos:column="39"/></name> <name pos:line="3" pos:column="40">object_array<pos:position pos:line="3" pos:column="52"/></name></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">reachable<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="64"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><specifier pos:line="5" pos:column="16">const<pos:position pos:line="5" pos:column="21"/></specifier> <name pos:line="5" pos:column="22">char<pos:position pos:line="5" pos:column="26"/></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name><name pos:line="5" pos:column="28">argv<pos:position pos:line="5" pos:column="32"/></name><index pos:line="5" pos:column="32">[]<pos:position pos:line="5" pos:column="34"/></index></name> <init pos:line="5" pos:column="35">= <expr><block pos:line="5" pos:column="37">{
		<expr><literal type="string" pos:line="6" pos:column="17">"rev-list"<pos:position pos:line="6" pos:column="27"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="29">"--stdin"<pos:position pos:line="6" pos:column="38"/></literal></expr>, <expr><name pos:line="6" pos:column="40">NULL<pos:position pos:line="6" pos:column="44"/></name></expr>,
	}<pos:position pos:line="7" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">object<pos:position pos:line="8" pos:column="22"/></name></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">o<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">namebuf<pos:position pos:line="9" pos:column="21"/></name><index pos:line="9" pos:column="21">[<expr><literal type="number" pos:line="9" pos:column="22">42<pos:position pos:line="9" pos:column="24"/></literal></expr>]<pos:position pos:line="9" pos:column="25"/></index></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt> <comment type="block" pos:line="9" pos:column="27">/* ^ + SHA-1 + LF */</comment>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">i<pos:position pos:line="10" pos:column="14"/></name></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="12" pos:column="9">cmd<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">argv<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">argv<pos:position pos:line="12" pos:column="25"/></name></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">cmd<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">git_cmd<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <literal type="number" pos:line="13" pos:column="24">1<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">cmd<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">no_stderr<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">cmd<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">in<pos:position pos:line="15" pos:column="16"/></name></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <operator pos:line="15" pos:column="19">-<pos:position pos:line="15" pos:column="20"/></operator><literal type="number" pos:line="15" pos:column="20">1<pos:position pos:line="15" pos:column="21"/></literal></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">cmd<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">out<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <operator pos:line="16" pos:column="20">-<pos:position pos:line="16" pos:column="21"/></operator><literal type="number" pos:line="16" pos:column="21">1<pos:position pos:line="16" pos:column="22"/></literal></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>

	<comment type="block" pos:line="18" pos:column="9">/*
	 * If the next rev-list --stdin encounters an unknown commit,
	 * it terminates, which will cause SIGPIPE in the write loop
	 * below.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">sigchain_push<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">SIGPIPE<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="32">SIG_IGN<pos:position pos:line="23" pos:column="39"/></name></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">start_command<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">cmd<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
		<block type="pseudo"><goto pos:line="26" pos:column="17">goto <name pos:line="26" pos:column="22">error<pos:position pos:line="26" pos:column="27"/></name>;<pos:position pos:line="26" pos:column="28"/></goto></block></then></if>

	<expr_stmt><expr><name><name pos:line="28" pos:column="9">namebuf<pos:position pos:line="28" pos:column="16"/></name><index pos:line="28" pos:column="16">[<expr><literal type="number" pos:line="28" pos:column="17">0<pos:position pos:line="28" pos:column="18"/></literal></expr>]<pos:position pos:line="28" pos:column="19"/></index></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <literal type="char" pos:line="28" pos:column="22">'^'<pos:position pos:line="28" pos:column="25"/></literal></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">namebuf<pos:position pos:line="29" pos:column="16"/></name><index pos:line="29" pos:column="16">[<expr><name pos:line="29" pos:column="17">GIT_SHA1_HEXSZ<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">+<pos:position pos:line="29" pos:column="33"/></operator> <literal type="number" pos:line="29" pos:column="34">1<pos:position pos:line="29" pos:column="35"/></literal></expr>]<pos:position pos:line="29" pos:column="36"/></index></name> <operator pos:line="29" pos:column="37">=<pos:position pos:line="29" pos:column="38"/></operator> <literal type="char" pos:line="29" pos:column="39">'\n'<pos:position pos:line="29" pos:column="43"/></literal></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
	<for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">i<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">get_max_object_index<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">()<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></init> <condition><expr><literal type="number" pos:line="30" pos:column="42">0<pos:position pos:line="30" pos:column="43"/></literal> <operator pos:line="30" pos:column="44">&lt;<pos:position pos:line="30" pos:column="48"/></operator> <name pos:line="30" pos:column="46">i<pos:position pos:line="30" pos:column="47"/></name></expr>;<pos:position pos:line="30" pos:column="48"/></condition> <incr/>)<pos:position pos:line="30" pos:column="50"/></control> <block pos:line="30" pos:column="51">{
		<expr_stmt><expr><name pos:line="31" pos:column="17">o<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <call><name pos:line="31" pos:column="21">get_indexed_object<pos:position pos:line="31" pos:column="39"/></name><argument_list pos:line="31" pos:column="39">(<argument><expr><operator pos:line="31" pos:column="40">--<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="42">i<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="45"/></expr_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">!<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">o<pos:position pos:line="32" pos:column="23"/></name></expr>)<pos:position pos:line="32" pos:column="24"/></condition><then pos:line="32" pos:column="24">
			<block type="pseudo"><continue pos:line="33" pos:column="25">continue;<pos:position pos:line="33" pos:column="34"/></continue></block></then></if>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">reachable<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">&amp;&amp;<pos:position pos:line="34" pos:column="41"/></operator> <name><name pos:line="34" pos:column="34">o<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">-&gt;<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="37">type<pos:position pos:line="34" pos:column="41"/></name></name> <operator pos:line="34" pos:column="42">==<pos:position pos:line="34" pos:column="44"/></operator> <name pos:line="34" pos:column="45">OBJ_COMMIT<pos:position pos:line="34" pos:column="55"/></name></expr>)<pos:position pos:line="34" pos:column="56"/></condition><then pos:line="34" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="25">o<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">-&gt;<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="28">flags<pos:position pos:line="35" pos:column="33"/></name></name> <operator pos:line="35" pos:column="34">&amp;=<pos:position pos:line="35" pos:column="40"/></operator> <operator pos:line="35" pos:column="37">~<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="38">TMP_MARK<pos:position pos:line="35" pos:column="46"/></name></expr>;<pos:position pos:line="35" pos:column="47"/></expr_stmt></block></then></if>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><call><name pos:line="36" pos:column="22">is_our_ref<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">o<pos:position pos:line="36" pos:column="34"/></name></expr></argument>)<pos:position pos:line="36" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="36"/></condition><then pos:line="36" pos:column="36">
			<block type="pseudo"><continue pos:line="37" pos:column="25">continue;<pos:position pos:line="37" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">memcpy<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><name pos:line="38" pos:column="24">namebuf<pos:position pos:line="38" pos:column="31"/></name> <operator pos:line="38" pos:column="32">+<pos:position pos:line="38" pos:column="33"/></operator> <literal type="number" pos:line="38" pos:column="34">1<pos:position pos:line="38" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="37">oid_to_hex<pos:position pos:line="38" pos:column="47"/></name><argument_list pos:line="38" pos:column="47">(<argument><expr><operator pos:line="38" pos:column="48">&amp;<pos:position pos:line="38" pos:column="53"/></operator><name><name pos:line="38" pos:column="49">o<pos:position pos:line="38" pos:column="50"/></name><operator pos:line="38" pos:column="50">-&gt;<pos:position pos:line="38" pos:column="55"/></operator><name pos:line="38" pos:column="52">oid<pos:position pos:line="38" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="38" pos:column="58">GIT_SHA1_HEXSZ<pos:position pos:line="38" pos:column="72"/></name></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="74"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><call><name pos:line="39" pos:column="21">write_in_full<pos:position pos:line="39" pos:column="34"/></name><argument_list pos:line="39" pos:column="34">(<argument><expr><name><name pos:line="39" pos:column="35">cmd<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">-&gt;<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="40">in<pos:position pos:line="39" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="44">namebuf<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="53">GIT_SHA1_HEXSZ<pos:position pos:line="39" pos:column="67"/></name> <operator pos:line="39" pos:column="68">+<pos:position pos:line="39" pos:column="69"/></operator> <literal type="number" pos:line="39" pos:column="70">2<pos:position pos:line="39" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="72"/></argument_list></call> <operator pos:line="39" pos:column="73">&lt;<pos:position pos:line="39" pos:column="77"/></operator> <literal type="number" pos:line="39" pos:column="75">0<pos:position pos:line="39" pos:column="76"/></literal></expr>)<pos:position pos:line="39" pos:column="77"/></condition><then pos:line="39" pos:column="77">
			<block type="pseudo"><goto pos:line="40" pos:column="25">goto <name pos:line="40" pos:column="30">error<pos:position pos:line="40" pos:column="35"/></name>;<pos:position pos:line="40" pos:column="36"/></goto></block></then></if>
	}<pos:position pos:line="41" pos:column="10"/></block></for>
	<expr_stmt><expr><name><name pos:line="42" pos:column="9">namebuf<pos:position pos:line="42" pos:column="16"/></name><index pos:line="42" pos:column="16">[<expr><name pos:line="42" pos:column="17">GIT_SHA1_HEXSZ<pos:position pos:line="42" pos:column="31"/></name></expr>]<pos:position pos:line="42" pos:column="32"/></index></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <literal type="char" pos:line="42" pos:column="35">'\n'<pos:position pos:line="42" pos:column="39"/></literal></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt>
	<for pos:line="43" pos:column="9">for <control pos:line="43" pos:column="13">(<init><expr><name pos:line="43" pos:column="14">i<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <literal type="number" pos:line="43" pos:column="18">0<pos:position pos:line="43" pos:column="19"/></literal></expr>;<pos:position pos:line="43" pos:column="20"/></init> <condition><expr><name pos:line="43" pos:column="21">i<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">&lt;<pos:position pos:line="43" pos:column="27"/></operator> <name><name pos:line="43" pos:column="25">src<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">-&gt;<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="30">nr<pos:position pos:line="43" pos:column="32"/></name></name></expr>;<pos:position pos:line="43" pos:column="33"/></condition> <incr><expr><name pos:line="43" pos:column="34">i<pos:position pos:line="43" pos:column="35"/></name><operator pos:line="43" pos:column="35">++<pos:position pos:line="43" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="43" pos:column="38"/></control> <block pos:line="43" pos:column="39">{
		<expr_stmt><expr><name pos:line="44" pos:column="17">o<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <name><name pos:line="44" pos:column="21">src<pos:position pos:line="44" pos:column="24"/></name><operator pos:line="44" pos:column="24">-&gt;<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="26">objects<pos:position pos:line="44" pos:column="33"/></name><index pos:line="44" pos:column="33">[<expr><name pos:line="44" pos:column="34">i<pos:position pos:line="44" pos:column="35"/></name></expr>]<pos:position pos:line="44" pos:column="36"/></index></name><operator pos:line="44" pos:column="36">.<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="37">item<pos:position pos:line="44" pos:column="41"/></name></expr>;<pos:position pos:line="44" pos:column="42"/></expr_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><call><name pos:line="45" pos:column="21">is_our_ref<pos:position pos:line="45" pos:column="31"/></name><argument_list pos:line="45" pos:column="31">(<argument><expr><name pos:line="45" pos:column="32">o<pos:position pos:line="45" pos:column="33"/></name></expr></argument>)<pos:position pos:line="45" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="35"/></condition><then pos:line="45" pos:column="35"> <block pos:line="45" pos:column="36">{
			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><name pos:line="46" pos:column="29">reachable<pos:position pos:line="46" pos:column="38"/></name></expr>)<pos:position pos:line="46" pos:column="39"/></condition><then pos:line="46" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="33">add_object_array<pos:position pos:line="47" pos:column="49"/></name><argument_list pos:line="47" pos:column="49">(<argument><expr><name pos:line="47" pos:column="50">o<pos:position pos:line="47" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="53">NULL<pos:position pos:line="47" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="59">reachable<pos:position pos:line="47" pos:column="68"/></name></expr></argument>)<pos:position pos:line="47" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="70"/></expr_stmt></block></then></if>
			<continue pos:line="48" pos:column="25">continue;<pos:position pos:line="48" pos:column="34"/></continue>
		}<pos:position pos:line="49" pos:column="18"/></block></then></if>
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">reachable<pos:position pos:line="50" pos:column="30"/></name> <operator pos:line="50" pos:column="31">&amp;&amp;<pos:position pos:line="50" pos:column="41"/></operator> <name><name pos:line="50" pos:column="34">o<pos:position pos:line="50" pos:column="35"/></name><operator pos:line="50" pos:column="35">-&gt;<pos:position pos:line="50" pos:column="40"/></operator><name pos:line="50" pos:column="37">type<pos:position pos:line="50" pos:column="41"/></name></name> <operator pos:line="50" pos:column="42">==<pos:position pos:line="50" pos:column="44"/></operator> <name pos:line="50" pos:column="45">OBJ_COMMIT<pos:position pos:line="50" pos:column="55"/></name></expr>)<pos:position pos:line="50" pos:column="56"/></condition><then pos:line="50" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="51" pos:column="25">o<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">-&gt;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="28">flags<pos:position pos:line="51" pos:column="33"/></name></name> <operator pos:line="51" pos:column="34">|=<pos:position pos:line="51" pos:column="36"/></operator> <name pos:line="51" pos:column="37">TMP_MARK<pos:position pos:line="51" pos:column="45"/></name></expr>;<pos:position pos:line="51" pos:column="46"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">memcpy<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><name pos:line="52" pos:column="24">namebuf<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="33">oid_to_hex<pos:position pos:line="52" pos:column="43"/></name><argument_list pos:line="52" pos:column="43">(<argument><expr><operator pos:line="52" pos:column="44">&amp;<pos:position pos:line="52" pos:column="49"/></operator><name><name pos:line="52" pos:column="45">o<pos:position pos:line="52" pos:column="46"/></name><operator pos:line="52" pos:column="46">-&gt;<pos:position pos:line="52" pos:column="51"/></operator><name pos:line="52" pos:column="48">oid<pos:position pos:line="52" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="52" pos:column="54">GIT_SHA1_HEXSZ<pos:position pos:line="52" pos:column="68"/></name></expr></argument>)<pos:position pos:line="52" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="70"/></expr_stmt>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><call><name pos:line="53" pos:column="21">write_in_full<pos:position pos:line="53" pos:column="34"/></name><argument_list pos:line="53" pos:column="34">(<argument><expr><name><name pos:line="53" pos:column="35">cmd<pos:position pos:line="53" pos:column="38"/></name><operator pos:line="53" pos:column="38">-&gt;<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="40">in<pos:position pos:line="53" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="44">namebuf<pos:position pos:line="53" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="53">GIT_SHA1_HEXSZ<pos:position pos:line="53" pos:column="67"/></name> <operator pos:line="53" pos:column="68">+<pos:position pos:line="53" pos:column="69"/></operator> <literal type="number" pos:line="53" pos:column="70">1<pos:position pos:line="53" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="72"/></argument_list></call> <operator pos:line="53" pos:column="73">&lt;<pos:position pos:line="53" pos:column="77"/></operator> <literal type="number" pos:line="53" pos:column="75">0<pos:position pos:line="53" pos:column="76"/></literal></expr>)<pos:position pos:line="53" pos:column="77"/></condition><then pos:line="53" pos:column="77">
			<block type="pseudo"><goto pos:line="54" pos:column="25">goto <name pos:line="54" pos:column="30">error<pos:position pos:line="54" pos:column="35"/></name>;<pos:position pos:line="54" pos:column="36"/></goto></block></then></if>
	}<pos:position pos:line="55" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">close<pos:position pos:line="56" pos:column="14"/></name><argument_list pos:line="56" pos:column="14">(<argument><expr><name><name pos:line="56" pos:column="15">cmd<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">-&gt;<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="20">in<pos:position pos:line="56" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="57" pos:column="9">cmd<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">-&gt;<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="14">in<pos:position pos:line="57" pos:column="16"/></name></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <operator pos:line="57" pos:column="19">-<pos:position pos:line="57" pos:column="20"/></operator><literal type="number" pos:line="57" pos:column="20">1<pos:position pos:line="57" pos:column="21"/></literal></expr>;<pos:position pos:line="57" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">sigchain_pop<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">SIGPIPE<pos:position pos:line="58" pos:column="29"/></name></expr></argument>)<pos:position pos:line="58" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt>

	<return pos:line="60" pos:column="9">return <expr><literal type="number" pos:line="60" pos:column="16">0<pos:position pos:line="60" pos:column="17"/></literal></expr>;<pos:position pos:line="60" pos:column="18"/></return>

<label><name pos:line="62" pos:column="1">error<pos:position pos:line="62" pos:column="6"/></name>:<pos:position pos:line="62" pos:column="7"/></label>
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">sigchain_pop<pos:position pos:line="63" pos:column="21"/></name><argument_list pos:line="63" pos:column="21">(<argument><expr><name pos:line="63" pos:column="22">SIGPIPE<pos:position pos:line="63" pos:column="29"/></name></expr></argument>)<pos:position pos:line="63" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="31"/></expr_stmt>

	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name><name pos:line="65" pos:column="13">cmd<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">-&gt;<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="18">in<pos:position pos:line="65" pos:column="20"/></name></name> <operator pos:line="65" pos:column="21">&gt;=<pos:position pos:line="65" pos:column="26"/></operator> <literal type="number" pos:line="65" pos:column="24">0<pos:position pos:line="65" pos:column="25"/></literal></expr>)<pos:position pos:line="65" pos:column="26"/></condition><then pos:line="65" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="17">close<pos:position pos:line="66" pos:column="22"/></name><argument_list pos:line="66" pos:column="22">(<argument><expr><name><name pos:line="66" pos:column="23">cmd<pos:position pos:line="66" pos:column="26"/></name><operator pos:line="66" pos:column="26">-&gt;<pos:position pos:line="66" pos:column="31"/></operator><name pos:line="66" pos:column="28">in<pos:position pos:line="66" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt></block></then></if>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name><name pos:line="67" pos:column="13">cmd<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">-&gt;<pos:position pos:line="67" pos:column="21"/></operator><name pos:line="67" pos:column="18">out<pos:position pos:line="67" pos:column="21"/></name></name> <operator pos:line="67" pos:column="22">&gt;=<pos:position pos:line="67" pos:column="27"/></operator> <literal type="number" pos:line="67" pos:column="25">0<pos:position pos:line="67" pos:column="26"/></literal></expr>)<pos:position pos:line="67" pos:column="27"/></condition><then pos:line="67" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="17">close<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name><name pos:line="68" pos:column="23">cmd<pos:position pos:line="68" pos:column="26"/></name><operator pos:line="68" pos:column="26">-&gt;<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="28">out<pos:position pos:line="68" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt></block></then></if>
	<return pos:line="69" pos:column="9">return <expr><operator pos:line="69" pos:column="16">-<pos:position pos:line="69" pos:column="17"/></operator><literal type="number" pos:line="69" pos:column="17">1<pos:position pos:line="69" pos:column="18"/></literal></expr>;<pos:position pos:line="69" pos:column="19"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

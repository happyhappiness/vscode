<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2960_git-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">stage_sha<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">unsigned<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">sha<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">unsigned<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">mode<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<return pos:line="3" pos:column="9">return <expr><ternary><condition><expr><operator pos:line="3" pos:column="16">(<pos:position pos:line="3" pos:column="17"/></operator><call><name pos:line="3" pos:column="17">is_null_sha1<pos:position pos:line="3" pos:column="29"/></name><argument_list pos:line="3" pos:column="29">(<argument><expr><name pos:line="3" pos:column="30">sha<pos:position pos:line="3" pos:column="33"/></name></expr></argument>)<pos:position pos:line="3" pos:column="34"/></argument_list></call> <operator pos:line="3" pos:column="35">||<pos:position pos:line="3" pos:column="37"/></operator> <name pos:line="3" pos:column="38">mode<pos:position pos:line="3" pos:column="42"/></name> <operator pos:line="3" pos:column="43">==<pos:position pos:line="3" pos:column="45"/></operator> <literal type="number" pos:line="3" pos:column="46">0<pos:position pos:line="3" pos:column="47"/></literal><operator pos:line="3" pos:column="47">)<pos:position pos:line="3" pos:column="48"/></operator></expr> ?<pos:position pos:line="3" pos:column="50"/></condition><then pos:line="3" pos:column="50"> <expr><name pos:line="3" pos:column="51">NULL<pos:position pos:line="3" pos:column="55"/></name></expr></then><else pos:line="3" pos:column="55">: <expr><operator pos:line="3" pos:column="57">(<pos:position pos:line="3" pos:column="58"/></operator><name pos:line="3" pos:column="58">unsigned<pos:position pos:line="3" pos:column="66"/></name> <name pos:line="3" pos:column="67">char<pos:position pos:line="3" pos:column="71"/></name> <operator pos:line="3" pos:column="72">*<pos:position pos:line="3" pos:column="73"/></operator><operator pos:line="3" pos:column="73">)<pos:position pos:line="3" pos:column="74"/></operator><name pos:line="3" pos:column="74">sha<pos:position pos:line="3" pos:column="77"/></name></expr></else></ternary></expr>;<pos:position pos:line="3" pos:column="78"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2674.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_from_stdin<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">shortlog<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">log<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">author<pos:position pos:line="3" pos:column="20"/></name><index pos:line="3" pos:column="20">[<expr><literal type="number" pos:line="3" pos:column="21">1024<pos:position pos:line="3" pos:column="25"/></literal></expr>]<pos:position pos:line="3" pos:column="26"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="28">oneline<pos:position pos:line="3" pos:column="35"/></name><index pos:line="3" pos:column="35">[<expr><literal type="number" pos:line="3" pos:column="36">1024<pos:position pos:line="3" pos:column="40"/></literal></expr>]<pos:position pos:line="3" pos:column="41"/></index></name></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>

	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><call><name pos:line="5" pos:column="16">fgets<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name pos:line="5" pos:column="22">author<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="30">sizeof<argument_list pos:line="5" pos:column="36">(<argument><expr><name pos:line="5" pos:column="37">author<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="5" pos:column="46">stdin<pos:position pos:line="5" pos:column="51"/></name></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call> <operator pos:line="5" pos:column="53">!=<pos:position pos:line="5" pos:column="55"/></operator> <name pos:line="5" pos:column="56">NULL<pos:position pos:line="5" pos:column="60"/></name></expr>)<pos:position pos:line="5" pos:column="61"/></condition> <block pos:line="5" pos:column="62">{
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">!<pos:position pos:line="6" pos:column="22"/></operator><operator pos:line="6" pos:column="22">(<pos:position pos:line="6" pos:column="23"/></operator><name><name pos:line="6" pos:column="23">author<pos:position pos:line="6" pos:column="29"/></name><index pos:line="6" pos:column="29">[<expr><literal type="number" pos:line="6" pos:column="30">0<pos:position pos:line="6" pos:column="31"/></literal></expr>]<pos:position pos:line="6" pos:column="32"/></index></name> <operator pos:line="6" pos:column="33">==<pos:position pos:line="6" pos:column="35"/></operator> <literal type="char" pos:line="6" pos:column="36">'A'<pos:position pos:line="6" pos:column="39"/></literal> <operator pos:line="6" pos:column="40">||<pos:position pos:line="6" pos:column="42"/></operator> <name><name pos:line="6" pos:column="43">author<pos:position pos:line="6" pos:column="49"/></name><index pos:line="6" pos:column="49">[<expr><literal type="number" pos:line="6" pos:column="50">0<pos:position pos:line="6" pos:column="51"/></literal></expr>]<pos:position pos:line="6" pos:column="52"/></index></name> <operator pos:line="6" pos:column="53">==<pos:position pos:line="6" pos:column="55"/></operator> <literal type="char" pos:line="6" pos:column="56">'a'<pos:position pos:line="6" pos:column="59"/></literal><operator pos:line="6" pos:column="59">)<pos:position pos:line="6" pos:column="60"/></operator> <operator pos:line="6" pos:column="61">||<pos:position pos:line="6" pos:column="63"/></operator>
		    <operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><call><name pos:line="7" pos:column="22">starts_with<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">author<pos:position pos:line="7" pos:column="40"/></name> <operator pos:line="7" pos:column="41">+<pos:position pos:line="7" pos:column="42"/></operator> <literal type="number" pos:line="7" pos:column="43">1<pos:position pos:line="7" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="46">"uthor: "<pos:position pos:line="7" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="57"/></condition><then pos:line="7" pos:column="57">
			<block type="pseudo"><continue pos:line="8" pos:column="25">continue;<pos:position pos:line="8" pos:column="34"/></continue></block></then></if>
		<while pos:line="9" pos:column="17">while <condition pos:line="9" pos:column="23">(<expr><call><name pos:line="9" pos:column="24">fgets<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">oneline<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="39">sizeof<argument_list pos:line="9" pos:column="45">(<argument><expr><name pos:line="9" pos:column="46">oneline<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="9" pos:column="56">stdin<pos:position pos:line="9" pos:column="61"/></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call> <operator pos:line="9" pos:column="63">&amp;&amp;<pos:position pos:line="9" pos:column="73"/></operator>
		       <name><name pos:line="10" pos:column="24">oneline<pos:position pos:line="10" pos:column="31"/></name><index pos:line="10" pos:column="31">[<expr><literal type="number" pos:line="10" pos:column="32">0<pos:position pos:line="10" pos:column="33"/></literal></expr>]<pos:position pos:line="10" pos:column="34"/></index></name> <operator pos:line="10" pos:column="35">!=<pos:position pos:line="10" pos:column="37"/></operator> <literal type="char" pos:line="10" pos:column="38">'\n'<pos:position pos:line="10" pos:column="42"/></literal></expr>)<pos:position pos:line="10" pos:column="43"/></condition>
			<block type="pseudo"><empty_stmt pos:line="11" pos:column="25">;<pos:position pos:line="11" pos:column="26"/></empty_stmt></block></while> <comment type="block" pos:line="11" pos:column="27">/* discard headers */</comment>
		<while pos:line="12" pos:column="17">while <condition pos:line="12" pos:column="23">(<expr><call><name pos:line="12" pos:column="24">fgets<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">oneline<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="39">sizeof<argument_list pos:line="12" pos:column="45">(<argument><expr><name pos:line="12" pos:column="46">oneline<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="12" pos:column="56">stdin<pos:position pos:line="12" pos:column="61"/></name></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call> <operator pos:line="12" pos:column="63">&amp;&amp;<pos:position pos:line="12" pos:column="73"/></operator>
		       <name><name pos:line="13" pos:column="24">oneline<pos:position pos:line="13" pos:column="31"/></name><index pos:line="13" pos:column="31">[<expr><literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr>]<pos:position pos:line="13" pos:column="34"/></index></name> <operator pos:line="13" pos:column="35">==<pos:position pos:line="13" pos:column="37"/></operator> <literal type="char" pos:line="13" pos:column="38">'\n'<pos:position pos:line="13" pos:column="42"/></literal></expr>)<pos:position pos:line="13" pos:column="43"/></condition>
			<block type="pseudo"><empty_stmt pos:line="14" pos:column="25">;<pos:position pos:line="14" pos:column="26"/></empty_stmt></block></while> <comment type="block" pos:line="14" pos:column="27">/* discard blanks */</comment>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">insert_one_record<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">log<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="40">author<pos:position pos:line="15" pos:column="46"/></name> <operator pos:line="15" pos:column="47">+<pos:position pos:line="15" pos:column="48"/></operator> <literal type="number" pos:line="15" pos:column="49">8<pos:position pos:line="15" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="52">oneline<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></while>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5374_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">find_branch_name<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">rev_info<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">rev<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">positive<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><operator pos:line="3" pos:column="27">-<pos:position pos:line="3" pos:column="28"/></operator><literal type="number" pos:line="3" pos:column="28">1<pos:position pos:line="3" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object_id<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">branch_oid<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name><name pos:line="5" pos:column="15">struct<pos:position pos:line="5" pos:column="21"/></name> <name pos:line="5" pos:column="22">object_id<pos:position pos:line="5" pos:column="31"/></name></name> <modifier pos:line="5" pos:column="32">*<pos:position pos:line="5" pos:column="33"/></modifier></type><name pos:line="5" pos:column="33">tip_oid<pos:position pos:line="5" pos:column="40"/></name></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">ref<pos:position pos:line="6" pos:column="24"/></name></decl>, <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="27">v<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">full_ref<pos:position pos:line="7" pos:column="23"/></name></decl>, <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="26">branch<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><name pos:line="7" pos:column="35">NULL<pos:position pos:line="7" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><name pos:line="9" pos:column="21">i<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name><name pos:line="9" pos:column="25">rev<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">cmdline<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">.<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">nr<pos:position pos:line="9" pos:column="40"/></name></name></expr>;<pos:position pos:line="9" pos:column="41"/></condition> <incr><expr><name pos:line="9" pos:column="42">i<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">++<pos:position pos:line="9" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="46"/></control> <block pos:line="9" pos:column="47">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name><name pos:line="10" pos:column="21">rev<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">cmdline<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">.<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="34">rev<pos:position pos:line="10" pos:column="37"/></name><index pos:line="10" pos:column="37">[<expr><name pos:line="10" pos:column="38">i<pos:position pos:line="10" pos:column="39"/></name></expr>]<pos:position pos:line="10" pos:column="40"/></index></name><operator pos:line="10" pos:column="40">.<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">flags<pos:position pos:line="10" pos:column="46"/></name> <operator pos:line="10" pos:column="47">&amp;<pos:position pos:line="10" pos:column="52"/></operator> <name pos:line="10" pos:column="49">UNINTERESTING<pos:position pos:line="10" pos:column="62"/></name></expr>)<pos:position pos:line="10" pos:column="63"/></condition><then pos:line="10" pos:column="63">
			<block type="pseudo"><continue pos:line="11" pos:column="25">continue;<pos:position pos:line="11" pos:column="34"/></continue></block></then></if>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">positive<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">&lt;<pos:position pos:line="12" pos:column="34"/></operator> <literal type="number" pos:line="12" pos:column="32">0<pos:position pos:line="12" pos:column="33"/></literal></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">positive<pos:position pos:line="13" pos:column="33"/></name> <operator pos:line="13" pos:column="34">=<pos:position pos:line="13" pos:column="35"/></operator> <name pos:line="13" pos:column="36">i<pos:position pos:line="13" pos:column="37"/></name></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt></block></then>
		<else pos:line="14" pos:column="17">else
			<block type="pseudo"><return pos:line="15" pos:column="25">return <expr><name pos:line="15" pos:column="32">NULL<pos:position pos:line="15" pos:column="36"/></name></expr>;<pos:position pos:line="15" pos:column="37"/></return></block></else></if>
	}<pos:position pos:line="16" pos:column="10"/></block></for>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">positive<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">&lt;<pos:position pos:line="17" pos:column="26"/></operator> <literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><name pos:line="18" pos:column="24">NULL<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="19" pos:column="9">ref<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name><name pos:line="19" pos:column="15">rev<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">cmdline<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">.<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">rev<pos:position pos:line="19" pos:column="31"/></name><index pos:line="19" pos:column="31">[<expr><name pos:line="19" pos:column="32">positive<pos:position pos:line="19" pos:column="40"/></name></expr>]<pos:position pos:line="19" pos:column="41"/></index></name><operator pos:line="19" pos:column="41">.<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">name<pos:position pos:line="19" pos:column="46"/></name></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">tip_oid<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <operator pos:line="20" pos:column="19">&amp;<pos:position pos:line="20" pos:column="24"/></operator><name><name pos:line="20" pos:column="20">rev<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">cmdline<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">.<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="33">rev<pos:position pos:line="20" pos:column="36"/></name><index pos:line="20" pos:column="36">[<expr><name pos:line="20" pos:column="37">positive<pos:position pos:line="20" pos:column="45"/></name></expr>]<pos:position pos:line="20" pos:column="46"/></index></name><operator pos:line="20" pos:column="46">.<pos:position pos:line="20" pos:column="47"/></operator><name><name pos:line="20" pos:column="47">item<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">-&gt;<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="53">oid<pos:position pos:line="20" pos:column="56"/></name></name></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">dwim_ref<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">ref<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="27">strlen<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">ref<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="40">branch_oid<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">.<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="51">hash<pos:position pos:line="21" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="57">&amp;<pos:position pos:line="21" pos:column="62"/></operator><name pos:line="21" pos:column="58">full_ref<pos:position pos:line="21" pos:column="66"/></name></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></call> <operator pos:line="21" pos:column="68">&amp;&amp;<pos:position pos:line="21" pos:column="78"/></operator>
	    <call><name pos:line="22" pos:column="13">skip_prefix<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">full_ref<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="35">"refs/heads/"<pos:position pos:line="22" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="50">&amp;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="51">v<pos:position pos:line="22" pos:column="52"/></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call> <operator pos:line="22" pos:column="54">&amp;&amp;<pos:position pos:line="22" pos:column="64"/></operator>
	    <operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><call><name pos:line="23" pos:column="14">oidcmp<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">tip_oid<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="30">&amp;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="31">branch_oid<pos:position pos:line="23" pos:column="41"/></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">branch<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <call><name pos:line="24" pos:column="26">xstrdup<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">v<pos:position pos:line="24" pos:column="35"/></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">free<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">full_ref<pos:position pos:line="25" pos:column="22"/></name></expr></argument>)<pos:position pos:line="25" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
	<return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">branch<pos:position pos:line="26" pos:column="22"/></name></expr>;<pos:position pos:line="26" pos:column="23"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_747_git-2.7.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">commit_list<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">merge_bases_many<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name><name pos:line="1" pos:column="45">struct<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">commit<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">one<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">n<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="72">struct<pos:position pos:line="1" pos:column="78"/></name> <name pos:line="1" pos:column="79">commit<pos:position pos:line="1" pos:column="85"/></name></name> <modifier pos:line="1" pos:column="86">*<pos:position pos:line="1" pos:column="87"/></modifier><modifier pos:line="1" pos:column="87">*<pos:position pos:line="1" pos:column="88"/></modifier></type><name pos:line="1" pos:column="88">twos<pos:position pos:line="1" pos:column="92"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="93"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit_list<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">list<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">NULL<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit_list<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">result<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><name pos:line="4" pos:column="38">NULL<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="25">n<pos:position pos:line="7" pos:column="26"/></name></expr>;<pos:position pos:line="7" pos:column="27"/></condition> <incr><expr><name pos:line="7" pos:column="28">i<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">++<pos:position pos:line="7" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="32"/></control> <block pos:line="7" pos:column="33">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">one<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">==<pos:position pos:line="8" pos:column="27"/></operator> <name><name pos:line="8" pos:column="28">twos<pos:position pos:line="8" pos:column="32"/></name><index pos:line="8" pos:column="32">[<expr><name pos:line="8" pos:column="33">i<pos:position pos:line="8" pos:column="34"/></name></expr>]<pos:position pos:line="8" pos:column="35"/></index></name></expr>)<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36">
			<comment type="block" pos:line="9" pos:column="25">/*
			 * We do not mark this even with RESULT so we do not
			 * have to clean it up.
			 */</comment>
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><call><name pos:line="13" pos:column="32">commit_list_insert<pos:position pos:line="13" pos:column="50"/></name><argument_list pos:line="13" pos:column="50">(<argument><expr><name pos:line="13" pos:column="51">one<pos:position pos:line="13" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="56">&amp;<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="57">result<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></return></block></then></if>
	}<pos:position pos:line="14" pos:column="10"/></block></for>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">parse_commit<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">one<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><name pos:line="17" pos:column="24">NULL<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></return></block></then></if>
	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="25">n<pos:position pos:line="18" pos:column="26"/></name></expr>;<pos:position pos:line="18" pos:column="27"/></condition> <incr><expr><name pos:line="18" pos:column="28">i<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">++<pos:position pos:line="18" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="32"/></control> <block pos:line="18" pos:column="33">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><call><name pos:line="19" pos:column="21">parse_commit<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name><name pos:line="19" pos:column="34">twos<pos:position pos:line="19" pos:column="38"/></name><index pos:line="19" pos:column="38">[<expr><name pos:line="19" pos:column="39">i<pos:position pos:line="19" pos:column="40"/></name></expr>]<pos:position pos:line="19" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="43"/></condition><then pos:line="19" pos:column="43">
			<block type="pseudo"><return pos:line="20" pos:column="25">return <expr><name pos:line="20" pos:column="32">NULL<pos:position pos:line="20" pos:column="36"/></name></expr>;<pos:position pos:line="20" pos:column="37"/></return></block></then></if>
	}<pos:position pos:line="21" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="23" pos:column="9">list<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <call><name pos:line="23" pos:column="16">paint_down_to_common<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">one<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">n<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">twos<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>

	<while pos:line="25" pos:column="9">while <condition pos:line="25" pos:column="15">(<expr><name pos:line="25" pos:column="16">list<pos:position pos:line="25" pos:column="20"/></name></expr>)<pos:position pos:line="25" pos:column="21"/></condition> <block pos:line="25" pos:column="22">{
		<decl_stmt><decl><type><name><name pos:line="26" pos:column="17">struct<pos:position pos:line="26" pos:column="23"/></name> <name pos:line="26" pos:column="24">commit<pos:position pos:line="26" pos:column="30"/></name></name> <modifier pos:line="26" pos:column="31">*<pos:position pos:line="26" pos:column="32"/></modifier></type><name pos:line="26" pos:column="32">commit<pos:position pos:line="26" pos:column="38"/></name> <init pos:line="26" pos:column="39">= <expr><call><name pos:line="26" pos:column="41">pop_commit<pos:position pos:line="26" pos:column="51"/></name><argument_list pos:line="26" pos:column="51">(<argument><expr><operator pos:line="26" pos:column="52">&amp;<pos:position pos:line="26" pos:column="57"/></operator><name pos:line="26" pos:column="53">list<pos:position pos:line="26" pos:column="57"/></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="59"/></decl_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><operator pos:line="27" pos:column="22">(<pos:position pos:line="27" pos:column="23"/></operator><name><name pos:line="27" pos:column="23">commit<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">object<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">.<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">flags<pos:position pos:line="27" pos:column="43"/></name></name> <operator pos:line="27" pos:column="44">&amp;<pos:position pos:line="27" pos:column="49"/></operator> <name pos:line="27" pos:column="46">STALE<pos:position pos:line="27" pos:column="51"/></name><operator pos:line="27" pos:column="51">)<pos:position pos:line="27" pos:column="52"/></operator></expr>)<pos:position pos:line="27" pos:column="53"/></condition><then pos:line="27" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">commit_list_insert_by_date<pos:position pos:line="28" pos:column="51"/></name><argument_list pos:line="28" pos:column="51">(<argument><expr><name pos:line="28" pos:column="52">commit<pos:position pos:line="28" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="60">&amp;<pos:position pos:line="28" pos:column="65"/></operator><name pos:line="28" pos:column="61">result<pos:position pos:line="28" pos:column="67"/></name></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="69"/></expr_stmt></block></then></if>
	}<pos:position pos:line="29" pos:column="10"/></block></while>
	<return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">result<pos:position pos:line="30" pos:column="22"/></name></expr>;<pos:position pos:line="30" pos:column="23"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2530.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">delete_refs<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name><name pos:line="1" pos:column="17">struct<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">string_list<pos:position pos:line="1" pos:column="35"/></name></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">refnames<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">err<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">STRBUF_INIT<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">result<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name><name pos:line="6" pos:column="14">refnames<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">nr<pos:position pos:line="6" pos:column="26"/></name></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>;<pos:position pos:line="7" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">result<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <call><name pos:line="9" pos:column="18">repack_without_refs<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><name pos:line="9" pos:column="38">refnames<pos:position pos:line="9" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="48">&amp;<pos:position pos:line="9" pos:column="53"/></operator><name pos:line="9" pos:column="49">err<pos:position pos:line="9" pos:column="52"/></name></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">result<pos:position pos:line="10" pos:column="19"/></name></expr>)<pos:position pos:line="10" pos:column="20"/></condition><then pos:line="10" pos:column="20"> <block pos:line="10" pos:column="21">{
		<comment type="block" pos:line="11" pos:column="17">/*
		 * If we failed to rewrite the packed-refs file, then
		 * it is unsafe to try to remove loose refs, because
		 * doing so might expose an obsolete packed value for
		 * a reference that might even point at an object that
		 * has been garbage collected.
		 */</comment>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">refnames<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">nr<pos:position pos:line="18" pos:column="33"/></name></name> <operator pos:line="18" pos:column="34">==<pos:position pos:line="18" pos:column="36"/></operator> <literal type="number" pos:line="18" pos:column="37">1<pos:position pos:line="18" pos:column="38"/></literal></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">error<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><call><name pos:line="19" pos:column="31">_<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><literal type="string" pos:line="19" pos:column="33">"could not delete reference %s: %s"<pos:position pos:line="19" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="69"/></argument_list></call></expr></argument>,
			      <argument><expr><name><name pos:line="20" pos:column="31">refnames<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">items<pos:position pos:line="20" pos:column="46"/></name><index pos:line="20" pos:column="46">[<expr><literal type="number" pos:line="20" pos:column="47">0<pos:position pos:line="20" pos:column="48"/></literal></expr>]<pos:position pos:line="20" pos:column="49"/></index></name><operator pos:line="20" pos:column="49">.<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">string<pos:position pos:line="20" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="58">err<pos:position pos:line="20" pos:column="61"/></name><operator pos:line="20" pos:column="61">.<pos:position pos:line="20" pos:column="62"/></operator><name pos:line="20" pos:column="62">buf<pos:position pos:line="20" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt></block></then>
		<else pos:line="21" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="25">error<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><call><name pos:line="22" pos:column="31">_<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><literal type="string" pos:line="22" pos:column="33">"could not delete references: %s"<pos:position pos:line="22" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="69">err<pos:position pos:line="22" pos:column="72"/></name><operator pos:line="22" pos:column="72">.<pos:position pos:line="22" pos:column="73"/></operator><name pos:line="22" pos:column="73">buf<pos:position pos:line="22" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="78"/></expr_stmt></block></else></if>

		<goto pos:line="24" pos:column="17">goto <name pos:line="24" pos:column="22">out<pos:position pos:line="24" pos:column="25"/></name>;<pos:position pos:line="24" pos:column="26"/></goto>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init><expr><name pos:line="27" pos:column="14">i<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></init> <condition><expr><name pos:line="27" pos:column="21">i<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">&lt;<pos:position pos:line="27" pos:column="27"/></operator> <name><name pos:line="27" pos:column="25">refnames<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-&gt;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="35">nr<pos:position pos:line="27" pos:column="37"/></name></name></expr>;<pos:position pos:line="27" pos:column="38"/></condition> <incr><expr><name pos:line="27" pos:column="39">i<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">++<pos:position pos:line="27" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="43"/></control> <block pos:line="27" pos:column="44">{
		<decl_stmt><decl><type><specifier pos:line="28" pos:column="17">const<pos:position pos:line="28" pos:column="22"/></specifier> <name pos:line="28" pos:column="23">char<pos:position pos:line="28" pos:column="27"/></name> <modifier pos:line="28" pos:column="28">*<pos:position pos:line="28" pos:column="29"/></modifier></type><name pos:line="28" pos:column="29">refname<pos:position pos:line="28" pos:column="36"/></name> <init pos:line="28" pos:column="37">= <expr><name><name pos:line="28" pos:column="39">refnames<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">-&gt;<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="49">items<pos:position pos:line="28" pos:column="54"/></name><index pos:line="28" pos:column="54">[<expr><name pos:line="28" pos:column="55">i<pos:position pos:line="28" pos:column="56"/></name></expr>]<pos:position pos:line="28" pos:column="57"/></index></name><operator pos:line="28" pos:column="57">.<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="58">string<pos:position pos:line="28" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="65"/></decl_stmt>

		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><call><name pos:line="30" pos:column="21">delete_ref<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">refname<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="41">NULL<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="47">0<pos:position pos:line="30" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="50"/></condition><then pos:line="30" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="25">result<pos:position pos:line="31" pos:column="31"/></name> <operator pos:line="31" pos:column="32">|=<pos:position pos:line="31" pos:column="34"/></operator> <call><name pos:line="31" pos:column="35">error<pos:position pos:line="31" pos:column="40"/></name><argument_list pos:line="31" pos:column="40">(<argument><expr><call><name pos:line="31" pos:column="41">_<pos:position pos:line="31" pos:column="42"/></name><argument_list pos:line="31" pos:column="42">(<argument><expr><literal type="string" pos:line="31" pos:column="43">"could not remove reference %s"<pos:position pos:line="31" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="77">refname<pos:position pos:line="31" pos:column="84"/></name></expr></argument>)<pos:position pos:line="31" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="86"/></expr_stmt></block></then></if>
	}<pos:position pos:line="32" pos:column="10"/></block></for>

<label><name pos:line="34" pos:column="1">out<pos:position pos:line="34" pos:column="4"/></name>:<pos:position pos:line="34" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">strbuf_release<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><operator pos:line="35" pos:column="24">&amp;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="25">err<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
	<return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">result<pos:position pos:line="36" pos:column="22"/></name></expr>;<pos:position pos:line="36" pos:column="23"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5632_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">replace_parents<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">strbuf<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">buf<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">argc<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier><modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">argv<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">new_parents<pos:position pos:line="3" pos:column="34"/></name> <init pos:line="3" pos:column="35">= <expr><name pos:line="3" pos:column="37">STRBUF_INIT<pos:position pos:line="3" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">parent_start<pos:position pos:line="4" pos:column="33"/></name></decl>, <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="36">parent_end<pos:position pos:line="4" pos:column="46"/></name></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* find existing parents */</comment>
	<expr_stmt><expr><name pos:line="8" pos:column="9">parent_start<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <name><name pos:line="8" pos:column="24">buf<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">buf<pos:position pos:line="8" pos:column="32"/></name></name></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">parent_start<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">+=<pos:position pos:line="9" pos:column="24"/></operator> <literal type="number" pos:line="9" pos:column="25">46<pos:position pos:line="9" pos:column="27"/></literal></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt> <comment type="block" pos:line="9" pos:column="29">/* "tree " + "hex sha1" + "\n" */</comment>
	<expr_stmt><expr><name pos:line="10" pos:column="9">parent_end<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">parent_start<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>

	<while pos:line="12" pos:column="9">while <condition pos:line="12" pos:column="15">(<expr><call><name pos:line="12" pos:column="16">starts_with<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">parent_end<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="40">"parent "<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="51"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">parent_end<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">+=<pos:position pos:line="13" pos:column="30"/></operator> <literal type="number" pos:line="13" pos:column="31">48<pos:position pos:line="13" pos:column="33"/></literal></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt></block></while> <comment type="block" pos:line="13" pos:column="35">/* "parent " + "hex sha1" + "\n" */</comment>

	<comment type="block" pos:line="15" pos:column="9">/* prepare new parents */</comment>
	<for pos:line="16" pos:column="9">for <control pos:line="16" pos:column="13">(<init><expr><name pos:line="16" pos:column="14">i<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></init> <condition><expr><name pos:line="16" pos:column="21">i<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">&lt;<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="25">argc<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></condition> <incr><expr><name pos:line="16" pos:column="31">i<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">++<pos:position pos:line="16" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="35"/></control> <block pos:line="16" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">unsigned<pos:position pos:line="17" pos:column="25"/></name> <name pos:line="17" pos:column="26">char<pos:position pos:line="17" pos:column="30"/></name></type> <name><name pos:line="17" pos:column="31">sha1<pos:position pos:line="17" pos:column="35"/></name><index pos:line="17" pos:column="35">[<expr><literal type="number" pos:line="17" pos:column="36">20<pos:position pos:line="17" pos:column="38"/></literal></expr>]<pos:position pos:line="17" pos:column="39"/></index></name></decl>;<pos:position pos:line="17" pos:column="40"/></decl_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">get_sha1<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name><name pos:line="18" pos:column="30">argv<pos:position pos:line="18" pos:column="34"/></name><index pos:line="18" pos:column="34">[<expr><name pos:line="18" pos:column="35">i<pos:position pos:line="18" pos:column="36"/></name></expr>]<pos:position pos:line="18" pos:column="37"/></index></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="39">sha1<pos:position pos:line="18" pos:column="43"/></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call> <operator pos:line="18" pos:column="45">&lt;<pos:position pos:line="18" pos:column="49"/></operator> <literal type="number" pos:line="18" pos:column="47">0<pos:position pos:line="18" pos:column="48"/></literal></expr>)<pos:position pos:line="18" pos:column="49"/></condition><then pos:line="18" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">die<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><call><name pos:line="19" pos:column="29">_<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">"Not a valid object name: '%s'"<pos:position pos:line="19" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="65">argv<pos:position pos:line="19" pos:column="69"/></name><index pos:line="19" pos:column="69">[<expr><name pos:line="19" pos:column="70">i<pos:position pos:line="19" pos:column="71"/></name></expr>]<pos:position pos:line="19" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="74"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">lookup_commit_or_die<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">sha1<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="44">argv<pos:position pos:line="20" pos:column="48"/></name><index pos:line="20" pos:column="48">[<expr><name pos:line="20" pos:column="49">i<pos:position pos:line="20" pos:column="50"/></name></expr>]<pos:position pos:line="20" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">strbuf_addf<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><operator pos:line="21" pos:column="29">&amp;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="30">new_parents<pos:position pos:line="21" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="43">"parent %s\n"<pos:position pos:line="21" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="58">sha1_to_hex<pos:position pos:line="21" pos:column="69"/></name><argument_list pos:line="21" pos:column="69">(<argument><expr><name pos:line="21" pos:column="70">sha1<pos:position pos:line="21" pos:column="74"/></name></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></for>

	<comment type="block" pos:line="24" pos:column="9">/* replace existing parents with new ones */</comment>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">strbuf_splice<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">buf<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">parent_start<pos:position pos:line="25" pos:column="40"/></name> <operator pos:line="25" pos:column="41">-<pos:position pos:line="25" pos:column="42"/></operator> <name><name pos:line="25" pos:column="43">buf<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">buf<pos:position pos:line="25" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="53">parent_end<pos:position pos:line="25" pos:column="63"/></name> <operator pos:line="25" pos:column="64">-<pos:position pos:line="25" pos:column="65"/></operator> <name pos:line="25" pos:column="66">parent_start<pos:position pos:line="25" pos:column="78"/></name></expr></argument>,
		      <argument><expr><name><name pos:line="26" pos:column="23">new_parents<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">.<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">buf<pos:position pos:line="26" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="40">new_parents<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">.<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="52">len<pos:position pos:line="26" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">strbuf_release<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><operator pos:line="28" pos:column="24">&amp;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="25">new_parents<pos:position pos:line="28" pos:column="36"/></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

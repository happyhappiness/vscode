<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1967_git-2.8.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_bundle_refs<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">bundle_fd<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="45">struct<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">rev_info<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">revs<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ref_count<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name><name pos:line="6" pos:column="25">revs<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">pending<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">.<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="39">nr<pos:position pos:line="6" pos:column="41"/></name></name></expr>;<pos:position pos:line="6" pos:column="42"/></condition> <incr><expr><name pos:line="6" pos:column="43">i<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">++<pos:position pos:line="6" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="47"/></control> <block pos:line="6" pos:column="48">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">object_array_entry<pos:position pos:line="7" pos:column="42"/></name></name> <modifier pos:line="7" pos:column="43">*<pos:position pos:line="7" pos:column="44"/></modifier></type><name pos:line="7" pos:column="44">e<pos:position pos:line="7" pos:column="45"/></name> <init pos:line="7" pos:column="46">= <expr><name><name pos:line="7" pos:column="48">revs<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">-&gt;<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="54">pending<pos:position pos:line="7" pos:column="61"/></name><operator pos:line="7" pos:column="61">.<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="62">objects<pos:position pos:line="7" pos:column="69"/></name></name> <operator pos:line="7" pos:column="70">+<pos:position pos:line="7" pos:column="71"/></operator> <name pos:line="7" pos:column="72">i<pos:position pos:line="7" pos:column="73"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="74"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">object_id<pos:position pos:line="8" pos:column="33"/></name></name></type> <name pos:line="8" pos:column="34">oid<pos:position pos:line="8" pos:column="37"/></name></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">ref<pos:position pos:line="9" pos:column="26"/></name></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="10" pos:column="17">const<pos:position pos:line="10" pos:column="22"/></specifier> <name pos:line="10" pos:column="23">char<pos:position pos:line="10" pos:column="27"/></name> <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">display_ref<pos:position pos:line="10" pos:column="40"/></name></decl>;<pos:position pos:line="10" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">flag<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>

		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name><name pos:line="13" pos:column="21">e<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">item<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">flags<pos:position pos:line="13" pos:column="35"/></name></name> <operator pos:line="13" pos:column="36">&amp;<pos:position pos:line="13" pos:column="41"/></operator> <name pos:line="13" pos:column="38">UNINTERESTING<pos:position pos:line="13" pos:column="51"/></name></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52">
			<block type="pseudo"><continue pos:line="14" pos:column="25">continue;<pos:position pos:line="14" pos:column="34"/></continue></block></then></if>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><call><name pos:line="15" pos:column="21">dwim_ref<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name><name pos:line="15" pos:column="30">e<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">name<pos:position pos:line="15" pos:column="37"/></name></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="39">strlen<pos:position pos:line="15" pos:column="45"/></name><argument_list pos:line="15" pos:column="45">(<argument><expr><name><name pos:line="15" pos:column="46">e<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">-&gt;<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="49">name<pos:position pos:line="15" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="56">oid<pos:position pos:line="15" pos:column="59"/></name><operator pos:line="15" pos:column="59">.<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="60">hash<pos:position pos:line="15" pos:column="64"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="66">&amp;<pos:position pos:line="15" pos:column="71"/></operator><name pos:line="15" pos:column="67">ref<pos:position pos:line="15" pos:column="70"/></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call> <operator pos:line="15" pos:column="72">!=<pos:position pos:line="15" pos:column="74"/></operator> <literal type="number" pos:line="15" pos:column="75">1<pos:position pos:line="15" pos:column="76"/></literal></expr>)<pos:position pos:line="15" pos:column="77"/></condition><then pos:line="15" pos:column="77">
			<block type="pseudo"><goto pos:line="16" pos:column="25">goto <name pos:line="16" pos:column="30">skip_write_ref<pos:position pos:line="16" pos:column="44"/></name>;<pos:position pos:line="16" pos:column="45"/></goto></block></then></if>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">read_ref_full<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name><name pos:line="17" pos:column="35">e<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">name<pos:position pos:line="17" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">RESOLVE_REF_READING<pos:position pos:line="17" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="65">oid<pos:position pos:line="17" pos:column="68"/></name><operator pos:line="17" pos:column="68">.<pos:position pos:line="17" pos:column="69"/></operator><name pos:line="17" pos:column="69">hash<pos:position pos:line="17" pos:column="73"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="75">&amp;<pos:position pos:line="17" pos:column="80"/></operator><name pos:line="17" pos:column="76">flag<pos:position pos:line="17" pos:column="80"/></name></expr></argument>)<pos:position pos:line="17" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="82"/></condition><then pos:line="17" pos:column="82">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">flag<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">=<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="32">0<pos:position pos:line="18" pos:column="33"/></literal></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="19" pos:column="17">display_ref<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <ternary><condition><expr><operator pos:line="19" pos:column="31">(<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">flag<pos:position pos:line="19" pos:column="36"/></name> <operator pos:line="19" pos:column="37">&amp;<pos:position pos:line="19" pos:column="42"/></operator> <name pos:line="19" pos:column="39">REF_ISSYMREF<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">)<pos:position pos:line="19" pos:column="52"/></operator></expr> ?<pos:position pos:line="19" pos:column="54"/></condition><then pos:line="19" pos:column="54"> <expr><name><name pos:line="19" pos:column="55">e<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">-&gt;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="58">name<pos:position pos:line="19" pos:column="62"/></name></name></expr> <pos:position pos:line="19" pos:column="63"/></then><else pos:line="19" pos:column="63">: <expr><name pos:line="19" pos:column="65">ref<pos:position pos:line="19" pos:column="68"/></name></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="69"/></expr_stmt>

		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name><name pos:line="21" pos:column="21">e<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">item<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">type<pos:position pos:line="21" pos:column="34"/></name></name> <operator pos:line="21" pos:column="35">==<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="38">OBJ_TAG<pos:position pos:line="21" pos:column="45"/></name> <operator pos:line="21" pos:column="46">&amp;&amp;<pos:position pos:line="21" pos:column="56"/></operator>
				<operator pos:line="22" pos:column="33">!<pos:position pos:line="22" pos:column="34"/></operator><call><name pos:line="22" pos:column="34">is_tag_in_date_range<pos:position pos:line="22" pos:column="54"/></name><argument_list pos:line="22" pos:column="54">(<argument><expr><name><name pos:line="22" pos:column="55">e<pos:position pos:line="22" pos:column="56"/></name><operator pos:line="22" pos:column="56">-&gt;<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="58">item<pos:position pos:line="22" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="64">revs<pos:position pos:line="22" pos:column="68"/></name></expr></argument>)<pos:position pos:line="22" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="70"/></condition><then pos:line="22" pos:column="70"> <block pos:line="22" pos:column="71">{
			<expr_stmt><expr><name><name pos:line="23" pos:column="25">e<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">item<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">flags<pos:position pos:line="23" pos:column="39"/></name></name> <operator pos:line="23" pos:column="40">|=<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="43">UNINTERESTING<pos:position pos:line="23" pos:column="56"/></name></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt>
			<goto pos:line="24" pos:column="25">goto <name pos:line="24" pos:column="30">skip_write_ref<pos:position pos:line="24" pos:column="44"/></name>;<pos:position pos:line="24" pos:column="45"/></goto>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="27" pos:column="17">/*
		 * Make sure the refs we wrote out is correct; --max-count and
		 * other limiting options could have prevented all the tips
		 * from getting output.
		 *
		 * Non commit objects such as tags and blobs do not have
		 * this issue as they are not affected by those extra
		 * constraints.
		 */</comment>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><operator pos:line="36" pos:column="22">(<pos:position pos:line="36" pos:column="23"/></operator><name><name pos:line="36" pos:column="23">e<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">-&gt;<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="26">item<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">flags<pos:position pos:line="36" pos:column="37"/></name></name> <operator pos:line="36" pos:column="38">&amp;<pos:position pos:line="36" pos:column="43"/></operator> <name pos:line="36" pos:column="40">SHOWN<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">)<pos:position pos:line="36" pos:column="46"/></operator> <operator pos:line="36" pos:column="47">&amp;&amp;<pos:position pos:line="36" pos:column="57"/></operator> <name><name pos:line="36" pos:column="50">e<pos:position pos:line="36" pos:column="51"/></name><operator pos:line="36" pos:column="51">-&gt;<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="53">item<pos:position pos:line="36" pos:column="57"/></name><operator pos:line="36" pos:column="57">-&gt;<pos:position pos:line="36" pos:column="62"/></operator><name pos:line="36" pos:column="59">type<pos:position pos:line="36" pos:column="63"/></name></name> <operator pos:line="36" pos:column="64">==<pos:position pos:line="36" pos:column="66"/></operator> <name pos:line="36" pos:column="67">OBJ_COMMIT<pos:position pos:line="36" pos:column="77"/></name></expr>)<pos:position pos:line="36" pos:column="78"/></condition><then pos:line="36" pos:column="78"> <block pos:line="36" pos:column="79">{
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">warning<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><call><name pos:line="37" pos:column="33">_<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><literal type="string" pos:line="37" pos:column="35">"ref '%s' is excluded by the rev-list options"<pos:position pos:line="37" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="82"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="38" pos:column="33">e<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">name<pos:position pos:line="38" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
			<goto pos:line="39" pos:column="25">goto <name pos:line="39" pos:column="30">skip_write_ref<pos:position pos:line="39" pos:column="44"/></name>;<pos:position pos:line="39" pos:column="45"/></goto>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="41" pos:column="17">/*
		 * If you run "git bundle create bndl v1.0..v2.0", the
		 * name of the positive ref is "v2.0" but that is the
		 * commit that is referenced by the tag, and not the tag
		 * itself.
		 */</comment>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><call><name pos:line="47" pos:column="21">oidcmp<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><operator pos:line="47" pos:column="28">&amp;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="29">oid<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="34">&amp;<pos:position pos:line="47" pos:column="39"/></operator><name><name pos:line="47" pos:column="35">e<pos:position pos:line="47" pos:column="36"/></name><operator pos:line="47" pos:column="36">-&gt;<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="38">item<pos:position pos:line="47" pos:column="42"/></name><operator pos:line="47" pos:column="42">-&gt;<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="44">oid<pos:position pos:line="47" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="49"/></condition><then pos:line="47" pos:column="49"> <block pos:line="47" pos:column="50">{
			<comment type="block" pos:line="48" pos:column="25">/*
			 * Is this the positive end of a range expressed
			 * in terms of a tag (e.g. v2.0 from the range
			 * "v1.0..v2.0")?
			 */</comment>
			<decl_stmt><decl><type><name><name pos:line="53" pos:column="25">struct<pos:position pos:line="53" pos:column="31"/></name> <name pos:line="53" pos:column="32">commit<pos:position pos:line="53" pos:column="38"/></name></name> <modifier pos:line="53" pos:column="39">*<pos:position pos:line="53" pos:column="40"/></modifier></type><name pos:line="53" pos:column="40">one<pos:position pos:line="53" pos:column="43"/></name> <init pos:line="53" pos:column="44">= <expr><call><name pos:line="53" pos:column="46">lookup_commit_reference<pos:position pos:line="53" pos:column="69"/></name><argument_list pos:line="53" pos:column="69">(<argument><expr><name><name pos:line="53" pos:column="70">oid<pos:position pos:line="53" pos:column="73"/></name><operator pos:line="53" pos:column="73">.<pos:position pos:line="53" pos:column="74"/></operator><name pos:line="53" pos:column="74">hash<pos:position pos:line="53" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="80"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="54" pos:column="25">struct<pos:position pos:line="54" pos:column="31"/></name> <name pos:line="54" pos:column="32">object<pos:position pos:line="54" pos:column="38"/></name></name> <modifier pos:line="54" pos:column="39">*<pos:position pos:line="54" pos:column="40"/></modifier></type><name pos:line="54" pos:column="40">obj<pos:position pos:line="54" pos:column="43"/></name></decl>;<pos:position pos:line="54" pos:column="44"/></decl_stmt>

			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><name><name pos:line="56" pos:column="29">e<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">-&gt;<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="32">item<pos:position pos:line="56" pos:column="36"/></name></name> <operator pos:line="56" pos:column="37">==<pos:position pos:line="56" pos:column="39"/></operator> <operator pos:line="56" pos:column="40">&amp;<pos:position pos:line="56" pos:column="45"/></operator><operator pos:line="56" pos:column="41">(<pos:position pos:line="56" pos:column="42"/></operator><name><name pos:line="56" pos:column="42">one<pos:position pos:line="56" pos:column="45"/></name><operator pos:line="56" pos:column="45">-&gt;<pos:position pos:line="56" pos:column="50"/></operator><name pos:line="56" pos:column="47">object<pos:position pos:line="56" pos:column="53"/></name></name><operator pos:line="56" pos:column="53">)<pos:position pos:line="56" pos:column="54"/></operator></expr>)<pos:position pos:line="56" pos:column="55"/></condition><then pos:line="56" pos:column="55"> <block pos:line="56" pos:column="56">{
				<comment type="block" pos:line="57" pos:column="33">/*
				 * Need to include e-&gt;name as an
				 * independent ref to the pack-objects
				 * input, so that the tag is included
				 * in the output; otherwise we would
				 * end up triggering "empty bundle"
				 * error.
				 */</comment>
				<expr_stmt><expr><name pos:line="65" pos:column="33">obj<pos:position pos:line="65" pos:column="36"/></name> <operator pos:line="65" pos:column="37">=<pos:position pos:line="65" pos:column="38"/></operator> <call><name pos:line="65" pos:column="39">parse_object_or_die<pos:position pos:line="65" pos:column="58"/></name><argument_list pos:line="65" pos:column="58">(<argument><expr><name><name pos:line="65" pos:column="59">oid<pos:position pos:line="65" pos:column="62"/></name><operator pos:line="65" pos:column="62">.<pos:position pos:line="65" pos:column="63"/></operator><name pos:line="65" pos:column="63">hash<pos:position pos:line="65" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="69">e<pos:position pos:line="65" pos:column="70"/></name><operator pos:line="65" pos:column="70">-&gt;<pos:position pos:line="65" pos:column="75"/></operator><name pos:line="65" pos:column="72">name<pos:position pos:line="65" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="78"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="66" pos:column="33">obj<pos:position pos:line="66" pos:column="36"/></name><operator pos:line="66" pos:column="36">-&gt;<pos:position pos:line="66" pos:column="41"/></operator><name pos:line="66" pos:column="38">flags<pos:position pos:line="66" pos:column="43"/></name></name> <operator pos:line="66" pos:column="44">|=<pos:position pos:line="66" pos:column="46"/></operator> <name pos:line="66" pos:column="47">SHOWN<pos:position pos:line="66" pos:column="52"/></name></expr>;<pos:position pos:line="66" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="67" pos:column="33">add_pending_object<pos:position pos:line="67" pos:column="51"/></name><argument_list pos:line="67" pos:column="51">(<argument><expr><name pos:line="67" pos:column="52">revs<pos:position pos:line="67" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="58">obj<pos:position pos:line="67" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="63">e<pos:position pos:line="67" pos:column="64"/></name><operator pos:line="67" pos:column="64">-&gt;<pos:position pos:line="67" pos:column="69"/></operator><name pos:line="67" pos:column="66">name<pos:position pos:line="67" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="72"/></expr_stmt>
			}<pos:position pos:line="68" pos:column="26"/></block></then></if>
			<goto pos:line="69" pos:column="25">goto <name pos:line="69" pos:column="30">skip_write_ref<pos:position pos:line="69" pos:column="44"/></name>;<pos:position pos:line="69" pos:column="45"/></goto>
		}<pos:position pos:line="70" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="72" pos:column="17">ref_count<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">++<pos:position pos:line="72" pos:column="28"/></operator></expr>;<pos:position pos:line="72" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="73" pos:column="17">write_or_die<pos:position pos:line="73" pos:column="29"/></name><argument_list pos:line="73" pos:column="29">(<argument><expr><name pos:line="73" pos:column="30">bundle_fd<pos:position pos:line="73" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="41">oid_to_hex<pos:position pos:line="73" pos:column="51"/></name><argument_list pos:line="73" pos:column="51">(<argument><expr><operator pos:line="73" pos:column="52">&amp;<pos:position pos:line="73" pos:column="57"/></operator><name><name pos:line="73" pos:column="53">e<pos:position pos:line="73" pos:column="54"/></name><operator pos:line="73" pos:column="54">-&gt;<pos:position pos:line="73" pos:column="59"/></operator><name pos:line="73" pos:column="56">item<pos:position pos:line="73" pos:column="60"/></name><operator pos:line="73" pos:column="60">-&gt;<pos:position pos:line="73" pos:column="65"/></operator><name pos:line="73" pos:column="62">oid<pos:position pos:line="73" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="68">40<pos:position pos:line="73" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">write_or_die<pos:position pos:line="74" pos:column="29"/></name><argument_list pos:line="74" pos:column="29">(<argument><expr><name pos:line="74" pos:column="30">bundle_fd<pos:position pos:line="74" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="41">" "<pos:position pos:line="74" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="46">1<pos:position pos:line="74" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="75" pos:column="17">write_or_die<pos:position pos:line="75" pos:column="29"/></name><argument_list pos:line="75" pos:column="29">(<argument><expr><name pos:line="75" pos:column="30">bundle_fd<pos:position pos:line="75" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="41">display_ref<pos:position pos:line="75" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="75" pos:column="54">strlen<pos:position pos:line="75" pos:column="60"/></name><argument_list pos:line="75" pos:column="60">(<argument><expr><name pos:line="75" pos:column="61">display_ref<pos:position pos:line="75" pos:column="72"/></name></expr></argument>)<pos:position pos:line="75" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="76" pos:column="17">write_or_die<pos:position pos:line="76" pos:column="29"/></name><argument_list pos:line="76" pos:column="29">(<argument><expr><name pos:line="76" pos:column="30">bundle_fd<pos:position pos:line="76" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="41">"\n"<pos:position pos:line="76" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="47">1<pos:position pos:line="76" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="50"/></expr_stmt>
 <label><name pos:line="77" pos:column="2">skip_write_ref<pos:position pos:line="77" pos:column="16"/></name>:<pos:position pos:line="77" pos:column="17"/></label>
		<expr_stmt><expr><call><name pos:line="78" pos:column="17">free<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">(<argument><expr><name pos:line="78" pos:column="22">ref<pos:position pos:line="78" pos:column="25"/></name></expr></argument>)<pos:position pos:line="78" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="79" pos:column="10"/></block></for>

	<comment type="block" pos:line="81" pos:column="9">/* end header */</comment>
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">write_or_die<pos:position pos:line="82" pos:column="21"/></name><argument_list pos:line="82" pos:column="21">(<argument><expr><name pos:line="82" pos:column="22">bundle_fd<pos:position pos:line="82" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="33">"\n"<pos:position pos:line="82" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="39">1<pos:position pos:line="82" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="42"/></expr_stmt>
	<return pos:line="83" pos:column="9">return <expr><name pos:line="83" pos:column="16">ref_count<pos:position pos:line="83" pos:column="25"/></name></expr>;<pos:position pos:line="83" pos:column="26"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

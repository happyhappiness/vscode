<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_736.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">require_clean_work_tree<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">action<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">hint<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">int<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">ignore_submodules<pos:position pos:line="1" pos:column="88"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="90">int<pos:position pos:line="1" pos:column="93"/></name></type> <name pos:line="1" pos:column="94">gently<pos:position pos:line="1" pos:column="100"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="101"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">lock_file<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">lock_file<pos:position pos:line="3" pos:column="36"/></name> <init pos:line="3" pos:column="37">= <expr><call><name pos:line="3" pos:column="39">xcalloc<pos:position pos:line="3" pos:column="46"/></name><argument_list pos:line="3" pos:column="46">(<argument><expr><literal type="number" pos:line="3" pos:column="47">1<pos:position pos:line="3" pos:column="48"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="50">sizeof<argument_list pos:line="3" pos:column="56">(<argument><expr><operator pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></operator><name pos:line="3" pos:column="58">lock_file<pos:position pos:line="3" pos:column="67"/></name></expr></argument>)<pos:position pos:line="3" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="70"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">err<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">hold_locked_index<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">lock_file<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="38">0<pos:position pos:line="6" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">refresh_cache<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">REFRESH_QUIET<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">update_index_if_able<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><operator pos:line="8" pos:column="30">&amp;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="31">the_index<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">lock_file<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">rollback_lock_file<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">lock_file<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">has_unstaged_changes<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">ignore_submodules<pos:position pos:line="11" pos:column="51"/></name></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="53"/></condition><then pos:line="11" pos:column="53"> <block pos:line="11" pos:column="54">{
		<comment type="block" pos:line="12" pos:column="17">/* TRANSLATORS: the action is e.g. "pull with rebase" */</comment>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">error<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><call><name pos:line="13" pos:column="23">_<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><literal type="string" pos:line="13" pos:column="25">"cannot %s: You have unstaged changes."<pos:position pos:line="13" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="67">_<pos:position pos:line="13" pos:column="68"/></name><argument_list pos:line="13" pos:column="68">(<argument><expr><name pos:line="13" pos:column="69">action<pos:position pos:line="13" pos:column="75"/></name></expr></argument>)<pos:position pos:line="13" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">err<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <literal type="number" pos:line="14" pos:column="23">1<pos:position pos:line="14" pos:column="24"/></literal></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">has_uncommitted_changes<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">ignore_submodules<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="56"/></condition><then pos:line="17" pos:column="56"> <block pos:line="17" pos:column="57">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">err<pos:position pos:line="18" pos:column="24"/></name></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">error<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><call><name pos:line="19" pos:column="31">_<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><literal type="string" pos:line="19" pos:column="33">"additionally, your index contains uncommitted changes."<pos:position pos:line="19" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="92"/></expr_stmt></block></then>
		<else pos:line="20" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">error<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><call><name pos:line="21" pos:column="31">_<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><literal type="string" pos:line="21" pos:column="33">"cannot %s: Your index contains uncommitted changes."<pos:position pos:line="21" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="87"/></argument_list></call></expr></argument>,
			      <argument><expr><call><name pos:line="22" pos:column="31">_<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">action<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="23" pos:column="17">err<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <literal type="number" pos:line="23" pos:column="23">1<pos:position pos:line="23" pos:column="24"/></literal></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">err<pos:position pos:line="26" pos:column="16"/></name></expr>)<pos:position pos:line="26" pos:column="17"/></condition><then pos:line="26" pos:column="17"> <block pos:line="26" pos:column="18">{
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">hint<pos:position pos:line="27" pos:column="25"/></name></expr>)<pos:position pos:line="27" pos:column="26"/></condition><then pos:line="27" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">error<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><literal type="string" pos:line="28" pos:column="31">"%s"<pos:position pos:line="28" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="37">hint<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt></block></then></if>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">gently<pos:position pos:line="29" pos:column="28"/></name></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">exit<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><literal type="number" pos:line="30" pos:column="30">128<pos:position pos:line="30" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt></block></then></if>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">err<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

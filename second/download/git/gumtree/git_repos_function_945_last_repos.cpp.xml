<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_945_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ignore_non_trailer<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">buf<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">size_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">len<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">boc<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">bol<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">in_old_conflicts_block<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><literal type="number" pos:line="5" pos:column="38">0<pos:position pos:line="5" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">cutoff<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><call><name pos:line="6" pos:column="25">wt_status_locate_end<pos:position pos:line="6" pos:column="45"/></name><argument_list pos:line="6" pos:column="45">(<argument><expr><name pos:line="6" pos:column="46">buf<pos:position pos:line="6" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="51">len<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="56"/></decl_stmt>

	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name pos:line="8" pos:column="16">bol<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">&lt;<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="22">cutoff<pos:position pos:line="8" pos:column="28"/></name></expr>)<pos:position pos:line="8" pos:column="29"/></condition> <block pos:line="8" pos:column="30">{
		<decl_stmt><decl><type><specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">next_line<pos:position pos:line="9" pos:column="38"/></name> <init pos:line="9" pos:column="39">= <expr><call><name pos:line="9" pos:column="41">memchr<pos:position pos:line="9" pos:column="47"/></name><argument_list pos:line="9" pos:column="47">(<argument><expr><name pos:line="9" pos:column="48">buf<pos:position pos:line="9" pos:column="51"/></name> <operator pos:line="9" pos:column="52">+<pos:position pos:line="9" pos:column="53"/></operator> <name pos:line="9" pos:column="54">bol<pos:position pos:line="9" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="59">'\n'<pos:position pos:line="9" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="65">len<pos:position pos:line="9" pos:column="68"/></name> <operator pos:line="9" pos:column="69">-<pos:position pos:line="9" pos:column="70"/></operator> <name pos:line="9" pos:column="71">bol<pos:position pos:line="9" pos:column="74"/></name></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="76"/></decl_stmt>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">next_line<pos:position pos:line="11" pos:column="31"/></name></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">next_line<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">=<pos:position pos:line="12" pos:column="36"/></operator> <name pos:line="12" pos:column="37">buf<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">+<pos:position pos:line="12" pos:column="42"/></operator> <name pos:line="12" pos:column="43">len<pos:position pos:line="12" pos:column="46"/></name></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt></block></then>
		<else pos:line="13" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">next_line<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">++<pos:position pos:line="14" pos:column="36"/></operator></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt></block></else></if>

		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">buf<pos:position pos:line="16" pos:column="24"/></name><index pos:line="16" pos:column="24">[<expr><name pos:line="16" pos:column="25">bol<pos:position pos:line="16" pos:column="28"/></name></expr>]<pos:position pos:line="16" pos:column="29"/></index></name> <operator pos:line="16" pos:column="30">==<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">comment_line_char<pos:position pos:line="16" pos:column="50"/></name> <operator pos:line="16" pos:column="51">||<pos:position pos:line="16" pos:column="53"/></operator> <name><name pos:line="16" pos:column="54">buf<pos:position pos:line="16" pos:column="57"/></name><index pos:line="16" pos:column="57">[<expr><name pos:line="16" pos:column="58">bol<pos:position pos:line="16" pos:column="61"/></name></expr>]<pos:position pos:line="16" pos:column="62"/></index></name> <operator pos:line="16" pos:column="63">==<pos:position pos:line="16" pos:column="65"/></operator> <literal type="char" pos:line="16" pos:column="66">'\n'<pos:position pos:line="16" pos:column="70"/></literal></expr>)<pos:position pos:line="16" pos:column="71"/></condition><then pos:line="16" pos:column="71"> <block pos:line="16" pos:column="72">{
			<comment type="block" pos:line="17" pos:column="25">/* is this the first of the run of comments? */</comment>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><operator pos:line="18" pos:column="29">!<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">boc<pos:position pos:line="18" pos:column="33"/></name></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34">
				<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="33">boc<pos:position pos:line="19" pos:column="36"/></name> <operator pos:line="19" pos:column="37">=<pos:position pos:line="19" pos:column="38"/></operator> <name pos:line="19" pos:column="39">bol<pos:position pos:line="19" pos:column="42"/></name></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt></block></then></if>
			<comment type="block" pos:line="20" pos:column="25">/* otherwise, it is just continuing */</comment>
		}<pos:position pos:line="21" pos:column="18"/></block></then> <elseif pos:line="21" pos:column="19">else <if pos:line="21" pos:column="24">if <condition pos:line="21" pos:column="27">(<expr><call><name pos:line="21" pos:column="28">starts_with<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><name pos:line="21" pos:column="40">buf<pos:position pos:line="21" pos:column="43"/></name> <operator pos:line="21" pos:column="44">+<pos:position pos:line="21" pos:column="45"/></operator> <name pos:line="21" pos:column="46">bol<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="51">"Conflicts:\n"<pos:position pos:line="21" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="67"/></condition><then pos:line="21" pos:column="67"> <block pos:line="21" pos:column="68">{
			<expr_stmt><expr><name pos:line="22" pos:column="25">in_old_conflicts_block<pos:position pos:line="22" pos:column="47"/></name> <operator pos:line="22" pos:column="48">=<pos:position pos:line="22" pos:column="49"/></operator> <literal type="number" pos:line="22" pos:column="50">1<pos:position pos:line="22" pos:column="51"/></literal></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><operator pos:line="23" pos:column="29">!<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">boc<pos:position pos:line="23" pos:column="33"/></name></expr>)<pos:position pos:line="23" pos:column="34"/></condition><then pos:line="23" pos:column="34">
				<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="33">boc<pos:position pos:line="24" pos:column="36"/></name> <operator pos:line="24" pos:column="37">=<pos:position pos:line="24" pos:column="38"/></operator> <name pos:line="24" pos:column="39">bol<pos:position pos:line="24" pos:column="42"/></name></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt></block></then></if>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if></elseif> <elseif pos:line="25" pos:column="19">else <if pos:line="25" pos:column="24">if <condition pos:line="25" pos:column="27">(<expr><name pos:line="25" pos:column="28">in_old_conflicts_block<pos:position pos:line="25" pos:column="50"/></name> <operator pos:line="25" pos:column="51">&amp;&amp;<pos:position pos:line="25" pos:column="61"/></operator> <name><name pos:line="25" pos:column="54">buf<pos:position pos:line="25" pos:column="57"/></name><index pos:line="25" pos:column="57">[<expr><name pos:line="25" pos:column="58">bol<pos:position pos:line="25" pos:column="61"/></name></expr>]<pos:position pos:line="25" pos:column="62"/></index></name> <operator pos:line="25" pos:column="63">==<pos:position pos:line="25" pos:column="65"/></operator> <literal type="char" pos:line="25" pos:column="66">'\t'<pos:position pos:line="25" pos:column="70"/></literal></expr>)<pos:position pos:line="25" pos:column="71"/></condition><then pos:line="25" pos:column="71"> <block pos:line="25" pos:column="72">{
			<empty_stmt pos:line="26" pos:column="25">;<pos:position pos:line="26" pos:column="26"/></empty_stmt> <comment type="block" pos:line="26" pos:column="27">/* a pathname in the conflicts block */</comment>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if></elseif> <elseif pos:line="27" pos:column="19">else <if pos:line="27" pos:column="24">if <condition pos:line="27" pos:column="27">(<expr><name pos:line="27" pos:column="28">boc<pos:position pos:line="27" pos:column="31"/></name></expr>)<pos:position pos:line="27" pos:column="32"/></condition><then pos:line="27" pos:column="32"> <block pos:line="27" pos:column="33">{
			<comment type="block" pos:line="28" pos:column="25">/* the previous was not trailing comment */</comment>
			<expr_stmt><expr><name pos:line="29" pos:column="25">boc<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">=<pos:position pos:line="29" pos:column="30"/></operator> <literal type="number" pos:line="29" pos:column="31">0<pos:position pos:line="29" pos:column="32"/></literal></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">in_old_conflicts_block<pos:position pos:line="30" pos:column="47"/></name> <operator pos:line="30" pos:column="48">=<pos:position pos:line="30" pos:column="49"/></operator> <literal type="number" pos:line="30" pos:column="50">0<pos:position pos:line="30" pos:column="51"/></literal></expr>;<pos:position pos:line="30" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><name pos:line="32" pos:column="17">bol<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="23">next_line<pos:position pos:line="32" pos:column="32"/></name> <operator pos:line="32" pos:column="33">-<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="35">buf<pos:position pos:line="32" pos:column="38"/></name></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></while>
	<return pos:line="34" pos:column="9">return <expr><ternary><condition><expr><name pos:line="34" pos:column="16">boc<pos:position pos:line="34" pos:column="19"/></name></expr> ?<pos:position pos:line="34" pos:column="21"/></condition><then pos:line="34" pos:column="21"> <expr><name pos:line="34" pos:column="22">len<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">-<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">boc<pos:position pos:line="34" pos:column="31"/></name></expr> <pos:position pos:line="34" pos:column="32"/></then><else pos:line="34" pos:column="32">: <expr><name pos:line="34" pos:column="34">len<pos:position pos:line="34" pos:column="37"/></name> <operator pos:line="34" pos:column="38">-<pos:position pos:line="34" pos:column="39"/></operator> <name pos:line="34" pos:column="40">cutoff<pos:position pos:line="34" pos:column="46"/></name></expr></else></ternary></expr>;<pos:position pos:line="34" pos:column="47"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

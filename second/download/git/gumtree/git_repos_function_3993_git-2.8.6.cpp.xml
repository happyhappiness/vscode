<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3993_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_each_note<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">unsigned<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">object_sha1<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">unsigned<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">note_sha1<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">note_path<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">void<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">cb_data<pos:position pos:line="3" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="31"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">write_each_note_data<pos:position pos:line="5" pos:column="36"/></name></name> <modifier pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></modifier></type><name pos:line="5" pos:column="38">d<pos:position pos:line="5" pos:column="39"/></name> <init pos:line="5" pos:column="40">=
		<expr><operator pos:line="6" pos:column="17">(<pos:position pos:line="6" pos:column="18"/></operator>struct <name pos:line="6" pos:column="25">write_each_note_data<pos:position pos:line="6" pos:column="45"/></name> <operator pos:line="6" pos:column="46">*<pos:position pos:line="6" pos:column="47"/></operator><operator pos:line="6" pos:column="47">)<pos:position pos:line="6" pos:column="48"/></operator> <name pos:line="6" pos:column="49">cb_data<pos:position pos:line="6" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">note_path_len<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><call><name pos:line="7" pos:column="32">strlen<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name pos:line="7" pos:column="39">note_path<pos:position pos:line="7" pos:column="48"/></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">int<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">mode<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><literal type="number" pos:line="8" pos:column="29">0100644<pos:position pos:line="8" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">note_path<pos:position pos:line="10" pos:column="22"/></name><index pos:line="10" pos:column="22">[<expr><name pos:line="10" pos:column="23">note_path_len<pos:position pos:line="10" pos:column="36"/></name> <operator pos:line="10" pos:column="37">-<pos:position pos:line="10" pos:column="38"/></operator> <literal type="number" pos:line="10" pos:column="39">1<pos:position pos:line="10" pos:column="40"/></literal></expr>]<pos:position pos:line="10" pos:column="41"/></index></name> <operator pos:line="10" pos:column="42">==<pos:position pos:line="10" pos:column="44"/></operator> <literal type="char" pos:line="10" pos:column="45">'/'<pos:position pos:line="10" pos:column="48"/></literal></expr>)<pos:position pos:line="10" pos:column="49"/></condition><then pos:line="10" pos:column="49"> <block pos:line="10" pos:column="50">{
		<comment type="block" pos:line="11" pos:column="17">/* subtree entry */</comment>
		<expr_stmt><expr><name pos:line="12" pos:column="17">note_path_len<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">--<pos:position pos:line="12" pos:column="32"/></operator></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="13" pos:column="17">note_path<pos:position pos:line="13" pos:column="26"/></name><index pos:line="13" pos:column="26">[<expr><name pos:line="13" pos:column="27">note_path_len<pos:position pos:line="13" pos:column="40"/></name></expr>]<pos:position pos:line="13" pos:column="41"/></index></name> <operator pos:line="13" pos:column="42">=<pos:position pos:line="13" pos:column="43"/></operator> <literal type="char" pos:line="13" pos:column="44">'\0'<pos:position pos:line="13" pos:column="48"/></literal></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">mode<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <literal type="number" pos:line="14" pos:column="24">040000<pos:position pos:line="14" pos:column="30"/></literal></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">assert<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">note_path_len<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">&lt;=<pos:position pos:line="16" pos:column="35"/></operator> <literal type="number" pos:line="16" pos:column="33">40<pos:position pos:line="16" pos:column="35"/></literal> <operator pos:line="16" pos:column="36">+<pos:position pos:line="16" pos:column="37"/></operator> <literal type="number" pos:line="16" pos:column="38">19<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>

	<comment type="block" pos:line="18" pos:column="9">/* Weave non-note entries into note entries */</comment>
	<return pos:line="19" pos:column="9">return  <expr><call><name pos:line="19" pos:column="17">write_each_non_note_until<pos:position pos:line="19" pos:column="42"/></name><argument_list pos:line="19" pos:column="42">(<argument><expr><name pos:line="19" pos:column="43">note_path<pos:position pos:line="19" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="54">d<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call> <operator pos:line="19" pos:column="57">||<pos:position pos:line="19" pos:column="59"/></operator>
		<call><name pos:line="20" pos:column="17">write_each_note_helper<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">(<argument><expr><name><name pos:line="20" pos:column="40">d<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">-&gt;<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="43">root<pos:position pos:line="20" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">note_path<pos:position pos:line="20" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="60">mode<pos:position pos:line="20" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="66">note_sha1<pos:position pos:line="20" pos:column="75"/></name></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="77"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1590.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dump_tags<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> <name pos:line="3" pos:column="22">char<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">msg<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><literal type="string" pos:line="3" pos:column="34">"fast-import"<pos:position pos:line="3" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">tag<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">t<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ref_lock<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">lock<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">ref_name<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><name pos:line="6" pos:column="34">STRBUF_INIT<pos:position pos:line="6" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">t<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">first_tag<pos:position pos:line="8" pos:column="27"/></name></expr>;<pos:position pos:line="8" pos:column="28"/></init> <condition><expr><name pos:line="8" pos:column="29">t<pos:position pos:line="8" pos:column="30"/></name></expr>;<pos:position pos:line="8" pos:column="31"/></condition> <incr><expr><name pos:line="8" pos:column="32">t<pos:position pos:line="8" pos:column="33"/></name> <operator pos:line="8" pos:column="34">=<pos:position pos:line="8" pos:column="35"/></operator> <name><name pos:line="8" pos:column="36">t<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">next_tag<pos:position pos:line="8" pos:column="47"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="48"/></control> <block pos:line="8" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">strbuf_reset<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><operator pos:line="9" pos:column="30">&amp;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="31">ref_name<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">strbuf_addf<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><operator pos:line="10" pos:column="29">&amp;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="30">ref_name<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="40">"tags/%s"<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="51">t<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">-&gt;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="54">name<pos:position pos:line="10" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name pos:line="11" pos:column="17">lock<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <call><name pos:line="11" pos:column="24">lock_ref_sha1<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name><name pos:line="11" pos:column="38">ref_name<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">.<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="47">buf<pos:position pos:line="11" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">NULL<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">lock<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">||<pos:position pos:line="12" pos:column="29"/></operator> <call><name pos:line="12" pos:column="30">write_ref_sha1<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><name pos:line="12" pos:column="45">lock<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="51">t<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">-&gt;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="54">sha1<pos:position pos:line="12" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="60">msg<pos:position pos:line="12" pos:column="63"/></name></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call> <operator pos:line="12" pos:column="65">&lt;<pos:position pos:line="12" pos:column="69"/></operator> <literal type="number" pos:line="12" pos:column="67">0<pos:position pos:line="12" pos:column="68"/></literal></expr>)<pos:position pos:line="12" pos:column="69"/></condition><then pos:line="12" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">failure<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">|=<pos:position pos:line="13" pos:column="35"/></operator> <call><name pos:line="13" pos:column="36">error<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><literal type="string" pos:line="13" pos:column="42">"Unable to update %s"<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="65">ref_name<pos:position pos:line="13" pos:column="73"/></name><operator pos:line="13" pos:column="73">.<pos:position pos:line="13" pos:column="74"/></operator><name pos:line="13" pos:column="74">buf<pos:position pos:line="13" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="79"/></expr_stmt></block></then></if>
	}<pos:position pos:line="14" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">strbuf_release<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><operator pos:line="15" pos:column="24">&amp;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="25">ref_name<pos:position pos:line="15" pos:column="33"/></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

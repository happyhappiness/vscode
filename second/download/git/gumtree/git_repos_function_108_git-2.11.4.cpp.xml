<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_108_git-2.11.4.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">format_subject<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">strbuf<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">sb<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">msg<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
			   <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">line_separator<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">first<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="number" pos:line="4" pos:column="21">1<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init pos:line="6" pos:column="14">;<pos:position pos:line="6" pos:column="15"/></init><condition pos:line="6" pos:column="15">;<pos:position pos:line="6" pos:column="16"/></condition><incr/>)<pos:position pos:line="6" pos:column="17"/></control> <block pos:line="6" pos:column="18">{
		<decl_stmt><decl><type><specifier pos:line="7" pos:column="17">const<pos:position pos:line="7" pos:column="22"/></specifier> <name pos:line="7" pos:column="23">char<pos:position pos:line="7" pos:column="27"/></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">line<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><name pos:line="7" pos:column="36">msg<pos:position pos:line="7" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">linelen<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><call><name pos:line="8" pos:column="31">get_one_line<pos:position pos:line="8" pos:column="43"/></name><argument_list pos:line="8" pos:column="43">(<argument><expr><name pos:line="8" pos:column="44">line<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>

		<expr_stmt><expr><name pos:line="10" pos:column="17">msg<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">+=<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">linelen<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">linelen<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">||<pos:position pos:line="11" pos:column="32"/></operator> <call><name pos:line="11" pos:column="33">is_blank_line<pos:position pos:line="11" pos:column="46"/></name><argument_list pos:line="11" pos:column="46">(<argument><expr><name pos:line="11" pos:column="47">line<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="53">&amp;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="54">linelen<pos:position pos:line="11" pos:column="61"/></name></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="63"/></condition><then pos:line="11" pos:column="63">
			<block type="pseudo"><break pos:line="12" pos:column="25">break;<pos:position pos:line="12" pos:column="31"/></break></block></then></if>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">sb<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25">
			<block type="pseudo"><continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">strbuf_grow<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">sb<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">linelen<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">+<pos:position pos:line="16" pos:column="42"/></operator> <literal type="number" pos:line="16" pos:column="43">2<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">first<pos:position pos:line="17" pos:column="27"/></name></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">strbuf_addstr<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name pos:line="18" pos:column="39">sb<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">line_separator<pos:position pos:line="18" pos:column="57"/></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">strbuf_add<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">sb<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">line<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">linelen<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">first<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></for>
	<return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">msg<pos:position pos:line="22" pos:column="19"/></name></expr>;<pos:position pos:line="22" pos:column="20"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

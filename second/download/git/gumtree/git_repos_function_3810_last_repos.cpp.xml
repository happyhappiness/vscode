<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3810_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">merge_file_1<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">merge_options<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">o<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
					   <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name><name pos:line="2" pos:column="50">struct<pos:position pos:line="2" pos:column="56"/></name> <name pos:line="2" pos:column="57">diff_filespec<pos:position pos:line="2" pos:column="70"/></name></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">one<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
					   <parameter><decl><type><specifier pos:line="3" pos:column="44">const<pos:position pos:line="3" pos:column="49"/></specifier> <name><name pos:line="3" pos:column="50">struct<pos:position pos:line="3" pos:column="56"/></name> <name pos:line="3" pos:column="57">diff_filespec<pos:position pos:line="3" pos:column="70"/></name></name> <modifier pos:line="3" pos:column="71">*<pos:position pos:line="3" pos:column="72"/></modifier></type><name pos:line="3" pos:column="72">a<pos:position pos:line="3" pos:column="73"/></name></decl></parameter>,
					   <parameter><decl><type><specifier pos:line="4" pos:column="44">const<pos:position pos:line="4" pos:column="49"/></specifier> <name><name pos:line="4" pos:column="50">struct<pos:position pos:line="4" pos:column="56"/></name> <name pos:line="4" pos:column="57">diff_filespec<pos:position pos:line="4" pos:column="70"/></name></name> <modifier pos:line="4" pos:column="71">*<pos:position pos:line="4" pos:column="72"/></modifier></type><name pos:line="4" pos:column="72">b<pos:position pos:line="4" pos:column="73"/></name></decl></parameter>,
					   <parameter><decl><type><specifier pos:line="5" pos:column="44">const<pos:position pos:line="5" pos:column="49"/></specifier> <name pos:line="5" pos:column="50">char<pos:position pos:line="5" pos:column="54"/></name> <modifier pos:line="5" pos:column="55">*<pos:position pos:line="5" pos:column="56"/></modifier></type><name pos:line="5" pos:column="56">branch1<pos:position pos:line="5" pos:column="63"/></name></decl></parameter>,
					   <parameter><decl><type><specifier pos:line="6" pos:column="44">const<pos:position pos:line="6" pos:column="49"/></specifier> <name pos:line="6" pos:column="50">char<pos:position pos:line="6" pos:column="54"/></name> <modifier pos:line="6" pos:column="55">*<pos:position pos:line="6" pos:column="56"/></modifier></type><name pos:line="6" pos:column="56">branch2<pos:position pos:line="6" pos:column="63"/></name></decl></parameter>,
					   <parameter><decl><type><name><name pos:line="7" pos:column="44">struct<pos:position pos:line="7" pos:column="50"/></name> <name pos:line="7" pos:column="51">merge_file_info<pos:position pos:line="7" pos:column="66"/></name></name> <modifier pos:line="7" pos:column="67">*<pos:position pos:line="7" pos:column="68"/></modifier></type><name pos:line="7" pos:column="68">result<pos:position pos:line="7" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="75"/></parameter_list>
<block pos:line="8" pos:column="1">{
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">result<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">merge<pos:position pos:line="9" pos:column="22"/></name></name> <operator pos:line="9" pos:column="23">=<pos:position pos:line="9" pos:column="24"/></operator> <literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">result<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">clean<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">S_IFMT<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">&amp;<pos:position pos:line="12" pos:column="26"/></operator> <name><name pos:line="12" pos:column="23">a<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">mode<pos:position pos:line="12" pos:column="30"/></name></name><operator pos:line="12" pos:column="30">)<pos:position pos:line="12" pos:column="31"/></operator> <operator pos:line="12" pos:column="32">!=<pos:position pos:line="12" pos:column="34"/></operator> <operator pos:line="12" pos:column="35">(<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="36">S_IFMT<pos:position pos:line="12" pos:column="42"/></name> <operator pos:line="12" pos:column="43">&amp;<pos:position pos:line="12" pos:column="48"/></operator> <name><name pos:line="12" pos:column="45">b<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">-&gt;<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="48">mode<pos:position pos:line="12" pos:column="52"/></name></name><operator pos:line="12" pos:column="52">)<pos:position pos:line="12" pos:column="53"/></operator></expr>)<pos:position pos:line="12" pos:column="54"/></condition><then pos:line="12" pos:column="54"> <block pos:line="12" pos:column="55">{
		<expr_stmt><expr><name><name pos:line="13" pos:column="17">result<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">clean<pos:position pos:line="13" pos:column="30"/></name></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <literal type="number" pos:line="13" pos:column="33">0<pos:position pos:line="13" pos:column="34"/></literal></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">S_ISREG<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name><name pos:line="14" pos:column="29">a<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">mode<pos:position pos:line="14" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38"> <block pos:line="14" pos:column="39">{
			<expr_stmt><expr><name><name pos:line="15" pos:column="25">result<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">mode<pos:position pos:line="15" pos:column="37"/></name></name> <operator pos:line="15" pos:column="38">=<pos:position pos:line="15" pos:column="39"/></operator> <name><name pos:line="15" pos:column="40">a<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">mode<pos:position pos:line="15" pos:column="47"/></name></name></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">oidcpy<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><operator pos:line="16" pos:column="32">&amp;<pos:position pos:line="16" pos:column="37"/></operator><name><name pos:line="16" pos:column="33">result<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">oid<pos:position pos:line="16" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="46">&amp;<pos:position pos:line="16" pos:column="51"/></operator><name><name pos:line="16" pos:column="47">a<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">oid<pos:position pos:line="16" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></then> <else pos:line="17" pos:column="19">else <block pos:line="17" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="18" pos:column="25">result<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">mode<pos:position pos:line="18" pos:column="37"/></name></name> <operator pos:line="18" pos:column="38">=<pos:position pos:line="18" pos:column="39"/></operator> <name><name pos:line="18" pos:column="40">b<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">-&gt;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="43">mode<pos:position pos:line="18" pos:column="47"/></name></name></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">oidcpy<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><operator pos:line="19" pos:column="32">&amp;<pos:position pos:line="19" pos:column="37"/></operator><name><name pos:line="19" pos:column="33">result<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">oid<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="46">&amp;<pos:position pos:line="19" pos:column="51"/></operator><name><name pos:line="19" pos:column="47">b<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">-&gt;<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="50">oid<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></else></if>
	}<pos:position pos:line="21" pos:column="10"/></block></then> <else pos:line="21" pos:column="11">else <block pos:line="21" pos:column="16">{
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><call><name pos:line="22" pos:column="22">oid_eq<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><operator pos:line="22" pos:column="29">&amp;<pos:position pos:line="22" pos:column="34"/></operator><name><name pos:line="22" pos:column="30">a<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">oid<pos:position pos:line="22" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="38">&amp;<pos:position pos:line="22" pos:column="43"/></operator><name><name pos:line="22" pos:column="39">one<pos:position pos:line="22" pos:column="42"/></name><operator pos:line="22" pos:column="42">-&gt;<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="44">oid<pos:position pos:line="22" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call> <operator pos:line="22" pos:column="49">&amp;&amp;<pos:position pos:line="22" pos:column="59"/></operator> <operator pos:line="22" pos:column="52">!<pos:position pos:line="22" pos:column="53"/></operator><call><name pos:line="22" pos:column="53">oid_eq<pos:position pos:line="22" pos:column="59"/></name><argument_list pos:line="22" pos:column="59">(<argument><expr><operator pos:line="22" pos:column="60">&amp;<pos:position pos:line="22" pos:column="65"/></operator><name><name pos:line="22" pos:column="61">b<pos:position pos:line="22" pos:column="62"/></name><operator pos:line="22" pos:column="62">-&gt;<pos:position pos:line="22" pos:column="67"/></operator><name pos:line="22" pos:column="64">oid<pos:position pos:line="22" pos:column="67"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="69">&amp;<pos:position pos:line="22" pos:column="74"/></operator><name><name pos:line="22" pos:column="70">one<pos:position pos:line="22" pos:column="73"/></name><operator pos:line="22" pos:column="73">-&gt;<pos:position pos:line="22" pos:column="78"/></operator><name pos:line="22" pos:column="75">oid<pos:position pos:line="22" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="80"/></condition><then pos:line="22" pos:column="80">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="25">result<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">merge<pos:position pos:line="23" pos:column="38"/></name></name> <operator pos:line="23" pos:column="39">=<pos:position pos:line="23" pos:column="40"/></operator> <literal type="number" pos:line="23" pos:column="41">1<pos:position pos:line="23" pos:column="42"/></literal></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="25" pos:column="17">/*
		 * Merge modes
		 */</comment>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name><name pos:line="28" pos:column="21">a<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">mode<pos:position pos:line="28" pos:column="28"/></name></name> <operator pos:line="28" pos:column="29">==<pos:position pos:line="28" pos:column="31"/></operator> <name><name pos:line="28" pos:column="32">b<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">mode<pos:position pos:line="28" pos:column="39"/></name></name> <operator pos:line="28" pos:column="40">||<pos:position pos:line="28" pos:column="42"/></operator> <name><name pos:line="28" pos:column="43">a<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">-&gt;<pos:position pos:line="28" pos:column="49"/></operator><name pos:line="28" pos:column="46">mode<pos:position pos:line="28" pos:column="50"/></name></name> <operator pos:line="28" pos:column="51">==<pos:position pos:line="28" pos:column="53"/></operator> <name><name pos:line="28" pos:column="54">one<pos:position pos:line="28" pos:column="57"/></name><operator pos:line="28" pos:column="57">-&gt;<pos:position pos:line="28" pos:column="62"/></operator><name pos:line="28" pos:column="59">mode<pos:position pos:line="28" pos:column="63"/></name></name></expr>)<pos:position pos:line="28" pos:column="64"/></condition><then pos:line="28" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="25">result<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">mode<pos:position pos:line="29" pos:column="37"/></name></name> <operator pos:line="29" pos:column="38">=<pos:position pos:line="29" pos:column="39"/></operator> <name><name pos:line="29" pos:column="40">b<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">-&gt;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="43">mode<pos:position pos:line="29" pos:column="47"/></name></name></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt></block></then>
		<else pos:line="30" pos:column="17">else <block pos:line="30" pos:column="22">{
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">result<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">mode<pos:position pos:line="31" pos:column="37"/></name></name> <operator pos:line="31" pos:column="38">=<pos:position pos:line="31" pos:column="39"/></operator> <name><name pos:line="31" pos:column="40">a<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">-&gt;<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="43">mode<pos:position pos:line="31" pos:column="47"/></name></name></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>
			<if pos:line="32" pos:column="25">if <condition pos:line="32" pos:column="28">(<expr><name><name pos:line="32" pos:column="29">b<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">-&gt;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="32">mode<pos:position pos:line="32" pos:column="36"/></name></name> <operator pos:line="32" pos:column="37">!=<pos:position pos:line="32" pos:column="39"/></operator> <name><name pos:line="32" pos:column="40">one<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">-&gt;<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="45">mode<pos:position pos:line="32" pos:column="49"/></name></name></expr>)<pos:position pos:line="32" pos:column="50"/></condition><then pos:line="32" pos:column="50"> <block pos:line="32" pos:column="51">{
				<expr_stmt><expr><name><name pos:line="33" pos:column="33">result<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">-&gt;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="41">clean<pos:position pos:line="33" pos:column="46"/></name></name> <operator pos:line="33" pos:column="47">=<pos:position pos:line="33" pos:column="48"/></operator> <literal type="number" pos:line="33" pos:column="49">0<pos:position pos:line="33" pos:column="50"/></literal></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="34" pos:column="33">result<pos:position pos:line="34" pos:column="39"/></name><operator pos:line="34" pos:column="39">-&gt;<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="41">merge<pos:position pos:line="34" pos:column="46"/></name></name> <operator pos:line="34" pos:column="47">=<pos:position pos:line="34" pos:column="48"/></operator> <literal type="number" pos:line="34" pos:column="49">1<pos:position pos:line="34" pos:column="50"/></literal></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="35" pos:column="26"/></block></then></if>
		}<pos:position pos:line="36" pos:column="18"/></block></else></if>

		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">oid_eq<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><operator pos:line="38" pos:column="28">&amp;<pos:position pos:line="38" pos:column="33"/></operator><name><name pos:line="38" pos:column="29">a<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">oid<pos:position pos:line="38" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="37">&amp;<pos:position pos:line="38" pos:column="42"/></operator><name><name pos:line="38" pos:column="38">b<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">-&gt;<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="41">oid<pos:position pos:line="38" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></call> <operator pos:line="38" pos:column="46">||<pos:position pos:line="38" pos:column="48"/></operator> <call><name pos:line="38" pos:column="49">oid_eq<pos:position pos:line="38" pos:column="55"/></name><argument_list pos:line="38" pos:column="55">(<argument><expr><operator pos:line="38" pos:column="56">&amp;<pos:position pos:line="38" pos:column="61"/></operator><name><name pos:line="38" pos:column="57">a<pos:position pos:line="38" pos:column="58"/></name><operator pos:line="38" pos:column="58">-&gt;<pos:position pos:line="38" pos:column="63"/></operator><name pos:line="38" pos:column="60">oid<pos:position pos:line="38" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="65">&amp;<pos:position pos:line="38" pos:column="70"/></operator><name><name pos:line="38" pos:column="66">one<pos:position pos:line="38" pos:column="69"/></name><operator pos:line="38" pos:column="69">-&gt;<pos:position pos:line="38" pos:column="74"/></operator><name pos:line="38" pos:column="71">oid<pos:position pos:line="38" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="76"/></condition><then pos:line="38" pos:column="76">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">oidcpy<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><operator pos:line="39" pos:column="32">&amp;<pos:position pos:line="39" pos:column="37"/></operator><name><name pos:line="39" pos:column="33">result<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">-&gt;<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="41">oid<pos:position pos:line="39" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="46">&amp;<pos:position pos:line="39" pos:column="51"/></operator><name><name pos:line="39" pos:column="47">b<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">oid<pos:position pos:line="39" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="55"/></expr_stmt></block></then>
		<elseif pos:line="40" pos:column="17">else <if pos:line="40" pos:column="22">if <condition pos:line="40" pos:column="25">(<expr><call><name pos:line="40" pos:column="26">oid_eq<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><operator pos:line="40" pos:column="33">&amp;<pos:position pos:line="40" pos:column="38"/></operator><name><name pos:line="40" pos:column="34">b<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">-&gt;<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="37">oid<pos:position pos:line="40" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="42">&amp;<pos:position pos:line="40" pos:column="47"/></operator><name><name pos:line="40" pos:column="43">one<pos:position pos:line="40" pos:column="46"/></name><operator pos:line="40" pos:column="46">-&gt;<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="48">oid<pos:position pos:line="40" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="53"/></condition><then pos:line="40" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="25">oidcpy<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><operator pos:line="41" pos:column="32">&amp;<pos:position pos:line="41" pos:column="37"/></operator><name><name pos:line="41" pos:column="33">result<pos:position pos:line="41" pos:column="39"/></name><operator pos:line="41" pos:column="39">-&gt;<pos:position pos:line="41" pos:column="44"/></operator><name pos:line="41" pos:column="41">oid<pos:position pos:line="41" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="46">&amp;<pos:position pos:line="41" pos:column="51"/></operator><name><name pos:line="41" pos:column="47">a<pos:position pos:line="41" pos:column="48"/></name><operator pos:line="41" pos:column="48">-&gt;<pos:position pos:line="41" pos:column="53"/></operator><name pos:line="41" pos:column="50">oid<pos:position pos:line="41" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="42" pos:column="17">else <if pos:line="42" pos:column="22">if <condition pos:line="42" pos:column="25">(<expr><call><name pos:line="42" pos:column="26">S_ISREG<pos:position pos:line="42" pos:column="33"/></name><argument_list pos:line="42" pos:column="33">(<argument><expr><name><name pos:line="42" pos:column="34">a<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">-&gt;<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="37">mode<pos:position pos:line="42" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="43"/></condition><then pos:line="42" pos:column="43"> <block pos:line="42" pos:column="44">{
			<decl_stmt><decl><type><name pos:line="43" pos:column="25">mmbuffer_t<pos:position pos:line="43" pos:column="35"/></name></type> <name pos:line="43" pos:column="36">result_buf<pos:position pos:line="43" pos:column="46"/></name></decl>;<pos:position pos:line="43" pos:column="47"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="44" pos:column="25">int<pos:position pos:line="44" pos:column="28"/></name></type> <name pos:line="44" pos:column="29">ret<pos:position pos:line="44" pos:column="32"/></name> <init pos:line="44" pos:column="33">= <expr><literal type="number" pos:line="44" pos:column="35">0<pos:position pos:line="44" pos:column="36"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="44" pos:column="38">merge_status<pos:position pos:line="44" pos:column="50"/></name></decl>;<pos:position pos:line="44" pos:column="51"/></decl_stmt>

			<expr_stmt><expr><name pos:line="46" pos:column="25">merge_status<pos:position pos:line="46" pos:column="37"/></name> <operator pos:line="46" pos:column="38">=<pos:position pos:line="46" pos:column="39"/></operator> <call><name pos:line="46" pos:column="40">merge_3way<pos:position pos:line="46" pos:column="50"/></name><argument_list pos:line="46" pos:column="50">(<argument><expr><name pos:line="46" pos:column="51">o<pos:position pos:line="46" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="54">&amp;<pos:position pos:line="46" pos:column="59"/></operator><name pos:line="46" pos:column="55">result_buf<pos:position pos:line="46" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="67">one<pos:position pos:line="46" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="72">a<pos:position pos:line="46" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="75">b<pos:position pos:line="46" pos:column="76"/></name></expr></argument>,
						  <argument><expr><name pos:line="47" pos:column="51">branch1<pos:position pos:line="47" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="60">branch2<pos:position pos:line="47" pos:column="67"/></name></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="69"/></expr_stmt>

			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><operator pos:line="49" pos:column="29">(<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="30">merge_status<pos:position pos:line="49" pos:column="42"/></name> <operator pos:line="49" pos:column="43">&lt;<pos:position pos:line="49" pos:column="47"/></operator> <literal type="number" pos:line="49" pos:column="45">0<pos:position pos:line="49" pos:column="46"/></literal><operator pos:line="49" pos:column="46">)<pos:position pos:line="49" pos:column="47"/></operator> <operator pos:line="49" pos:column="48">||<pos:position pos:line="49" pos:column="50"/></operator> <operator pos:line="49" pos:column="51">!<pos:position pos:line="49" pos:column="52"/></operator><name><name pos:line="49" pos:column="52">result_buf<pos:position pos:line="49" pos:column="62"/></name><operator pos:line="49" pos:column="62">.<pos:position pos:line="49" pos:column="63"/></operator><name pos:line="49" pos:column="63">ptr<pos:position pos:line="49" pos:column="66"/></name></name></expr>)<pos:position pos:line="49" pos:column="67"/></condition><then pos:line="49" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="33">ret<pos:position pos:line="50" pos:column="36"/></name> <operator pos:line="50" pos:column="37">=<pos:position pos:line="50" pos:column="38"/></operator> <call><name pos:line="50" pos:column="39">err<pos:position pos:line="50" pos:column="42"/></name><argument_list pos:line="50" pos:column="42">(<argument><expr><name pos:line="50" pos:column="43">o<pos:position pos:line="50" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="46">_<pos:position pos:line="50" pos:column="47"/></name><argument_list pos:line="50" pos:column="47">(<argument><expr><literal type="string" pos:line="50" pos:column="48">"Failed to execute internal merge"<pos:position pos:line="50" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="85"/></expr_stmt></block></then></if>

			<if pos:line="52" pos:column="25">if <condition pos:line="52" pos:column="28">(<expr><operator pos:line="52" pos:column="29">!<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="30">ret<pos:position pos:line="52" pos:column="33"/></name> <operator pos:line="52" pos:column="34">&amp;&amp;<pos:position pos:line="52" pos:column="44"/></operator> <call><name pos:line="52" pos:column="37">write_sha1_file<pos:position pos:line="52" pos:column="52"/></name><argument_list pos:line="52" pos:column="52">(<argument><expr><name><name pos:line="52" pos:column="53">result_buf<pos:position pos:line="52" pos:column="63"/></name><operator pos:line="52" pos:column="63">.<pos:position pos:line="52" pos:column="64"/></operator><name pos:line="52" pos:column="64">ptr<pos:position pos:line="52" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="69">result_buf<pos:position pos:line="52" pos:column="79"/></name><operator pos:line="52" pos:column="79">.<pos:position pos:line="52" pos:column="80"/></operator><name pos:line="52" pos:column="80">size<pos:position pos:line="52" pos:column="84"/></name></name></expr></argument>,
						    <argument><expr><name pos:line="53" pos:column="53">blob_type<pos:position pos:line="53" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="64">result<pos:position pos:line="53" pos:column="70"/></name><operator pos:line="53" pos:column="70">-&gt;<pos:position pos:line="53" pos:column="75"/></operator><name pos:line="53" pos:column="72">oid<pos:position pos:line="53" pos:column="75"/></name><operator pos:line="53" pos:column="75">.<pos:position pos:line="53" pos:column="76"/></operator><name pos:line="53" pos:column="76">hash<pos:position pos:line="53" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="82"/></condition><then pos:line="53" pos:column="82">
				<block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="33">ret<pos:position pos:line="54" pos:column="36"/></name> <operator pos:line="54" pos:column="37">=<pos:position pos:line="54" pos:column="38"/></operator> <call><name pos:line="54" pos:column="39">err<pos:position pos:line="54" pos:column="42"/></name><argument_list pos:line="54" pos:column="42">(<argument><expr><name pos:line="54" pos:column="43">o<pos:position pos:line="54" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="46">_<pos:position pos:line="54" pos:column="47"/></name><argument_list pos:line="54" pos:column="47">(<argument><expr><literal type="string" pos:line="54" pos:column="48">"Unable to add %s to database"<pos:position pos:line="54" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="79"/></argument_list></call></expr></argument>,
					  <argument><expr><name><name pos:line="55" pos:column="43">a<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">-&gt;<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="46">path<pos:position pos:line="55" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="52"/></expr_stmt></block></then></if>

			<expr_stmt><expr><call><name pos:line="57" pos:column="25">free<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><name><name pos:line="57" pos:column="30">result_buf<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">.<pos:position pos:line="57" pos:column="41"/></operator><name pos:line="57" pos:column="41">ptr<pos:position pos:line="57" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="46"/></expr_stmt>
			<if pos:line="58" pos:column="25">if <condition pos:line="58" pos:column="28">(<expr><name pos:line="58" pos:column="29">ret<pos:position pos:line="58" pos:column="32"/></name></expr>)<pos:position pos:line="58" pos:column="33"/></condition><then pos:line="58" pos:column="33">
				<block type="pseudo"><return pos:line="59" pos:column="33">return <expr><name pos:line="59" pos:column="40">ret<pos:position pos:line="59" pos:column="43"/></name></expr>;<pos:position pos:line="59" pos:column="44"/></return></block></then></if>
			<expr_stmt><expr><name><name pos:line="60" pos:column="25">result<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">-&gt;<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="33">clean<pos:position pos:line="60" pos:column="38"/></name></name> <operator pos:line="60" pos:column="39">=<pos:position pos:line="60" pos:column="40"/></operator> <operator pos:line="60" pos:column="41">(<pos:position pos:line="60" pos:column="42"/></operator><name pos:line="60" pos:column="42">merge_status<pos:position pos:line="60" pos:column="54"/></name> <operator pos:line="60" pos:column="55">==<pos:position pos:line="60" pos:column="57"/></operator> <literal type="number" pos:line="60" pos:column="58">0<pos:position pos:line="60" pos:column="59"/></literal><operator pos:line="60" pos:column="59">)<pos:position pos:line="60" pos:column="60"/></operator></expr>;<pos:position pos:line="60" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if></elseif> <elseif pos:line="61" pos:column="19">else <if pos:line="61" pos:column="24">if <condition pos:line="61" pos:column="27">(<expr><call><name pos:line="61" pos:column="28">S_ISGITLINK<pos:position pos:line="61" pos:column="39"/></name><argument_list pos:line="61" pos:column="39">(<argument><expr><name><name pos:line="61" pos:column="40">a<pos:position pos:line="61" pos:column="41"/></name><operator pos:line="61" pos:column="41">-&gt;<pos:position pos:line="61" pos:column="46"/></operator><name pos:line="61" pos:column="43">mode<pos:position pos:line="61" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="49"/></condition><then pos:line="61" pos:column="49"> <block pos:line="61" pos:column="50">{
			<expr_stmt><expr><name><name pos:line="62" pos:column="25">result<pos:position pos:line="62" pos:column="31"/></name><operator pos:line="62" pos:column="31">-&gt;<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="33">clean<pos:position pos:line="62" pos:column="38"/></name></name> <operator pos:line="62" pos:column="39">=<pos:position pos:line="62" pos:column="40"/></operator> <call><name pos:line="62" pos:column="41">merge_submodule<pos:position pos:line="62" pos:column="56"/></name><argument_list pos:line="62" pos:column="56">(<argument><expr><operator pos:line="62" pos:column="57">&amp;<pos:position pos:line="62" pos:column="62"/></operator><name><name pos:line="62" pos:column="58">result<pos:position pos:line="62" pos:column="64"/></name><operator pos:line="62" pos:column="64">-&gt;<pos:position pos:line="62" pos:column="69"/></operator><name pos:line="62" pos:column="66">oid<pos:position pos:line="62" pos:column="69"/></name></name></expr></argument>,
						       <argument><expr><name><name pos:line="63" pos:column="56">one<pos:position pos:line="63" pos:column="59"/></name><operator pos:line="63" pos:column="59">-&gt;<pos:position pos:line="63" pos:column="64"/></operator><name pos:line="63" pos:column="61">path<pos:position pos:line="63" pos:column="65"/></name></name></expr></argument>,
						       <argument><expr><operator pos:line="64" pos:column="56">&amp;<pos:position pos:line="64" pos:column="61"/></operator><name><name pos:line="64" pos:column="57">one<pos:position pos:line="64" pos:column="60"/></name><operator pos:line="64" pos:column="60">-&gt;<pos:position pos:line="64" pos:column="65"/></operator><name pos:line="64" pos:column="62">oid<pos:position pos:line="64" pos:column="65"/></name></name></expr></argument>,
						       <argument><expr><operator pos:line="65" pos:column="56">&amp;<pos:position pos:line="65" pos:column="61"/></operator><name><name pos:line="65" pos:column="57">a<pos:position pos:line="65" pos:column="58"/></name><operator pos:line="65" pos:column="58">-&gt;<pos:position pos:line="65" pos:column="63"/></operator><name pos:line="65" pos:column="60">oid<pos:position pos:line="65" pos:column="63"/></name></name></expr></argument>,
						       <argument><expr><operator pos:line="66" pos:column="56">&amp;<pos:position pos:line="66" pos:column="61"/></operator><name><name pos:line="66" pos:column="57">b<pos:position pos:line="66" pos:column="58"/></name><operator pos:line="66" pos:column="58">-&gt;<pos:position pos:line="66" pos:column="63"/></operator><name pos:line="66" pos:column="60">oid<pos:position pos:line="66" pos:column="63"/></name></name></expr></argument>,
						       <argument><expr><operator pos:line="67" pos:column="56">!<pos:position pos:line="67" pos:column="57"/></operator><name><name pos:line="67" pos:column="57">o<pos:position pos:line="67" pos:column="58"/></name><operator pos:line="67" pos:column="58">-&gt;<pos:position pos:line="67" pos:column="63"/></operator><name pos:line="67" pos:column="60">call_depth<pos:position pos:line="67" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="72"/></expr_stmt>
		}<pos:position pos:line="68" pos:column="18"/></block></then></if></elseif> <elseif pos:line="68" pos:column="19">else <if pos:line="68" pos:column="24">if <condition pos:line="68" pos:column="27">(<expr><call><name pos:line="68" pos:column="28">S_ISLNK<pos:position pos:line="68" pos:column="35"/></name><argument_list pos:line="68" pos:column="35">(<argument><expr><name><name pos:line="68" pos:column="36">a<pos:position pos:line="68" pos:column="37"/></name><operator pos:line="68" pos:column="37">-&gt;<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="39">mode<pos:position pos:line="68" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="45"/></condition><then pos:line="68" pos:column="45"> <block pos:line="68" pos:column="46">{
			<expr_stmt><expr><call><name pos:line="69" pos:column="25">oidcpy<pos:position pos:line="69" pos:column="31"/></name><argument_list pos:line="69" pos:column="31">(<argument><expr><operator pos:line="69" pos:column="32">&amp;<pos:position pos:line="69" pos:column="37"/></operator><name><name pos:line="69" pos:column="33">result<pos:position pos:line="69" pos:column="39"/></name><operator pos:line="69" pos:column="39">-&gt;<pos:position pos:line="69" pos:column="44"/></operator><name pos:line="69" pos:column="41">oid<pos:position pos:line="69" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="46">&amp;<pos:position pos:line="69" pos:column="51"/></operator><name><name pos:line="69" pos:column="47">a<pos:position pos:line="69" pos:column="48"/></name><operator pos:line="69" pos:column="48">-&gt;<pos:position pos:line="69" pos:column="53"/></operator><name pos:line="69" pos:column="50">oid<pos:position pos:line="69" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="55"/></expr_stmt>

			<if pos:line="71" pos:column="25">if <condition pos:line="71" pos:column="28">(<expr><operator pos:line="71" pos:column="29">!<pos:position pos:line="71" pos:column="30"/></operator><call><name pos:line="71" pos:column="30">oid_eq<pos:position pos:line="71" pos:column="36"/></name><argument_list pos:line="71" pos:column="36">(<argument><expr><operator pos:line="71" pos:column="37">&amp;<pos:position pos:line="71" pos:column="42"/></operator><name><name pos:line="71" pos:column="38">a<pos:position pos:line="71" pos:column="39"/></name><operator pos:line="71" pos:column="39">-&gt;<pos:position pos:line="71" pos:column="44"/></operator><name pos:line="71" pos:column="41">oid<pos:position pos:line="71" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="46">&amp;<pos:position pos:line="71" pos:column="51"/></operator><name><name pos:line="71" pos:column="47">b<pos:position pos:line="71" pos:column="48"/></name><operator pos:line="71" pos:column="48">-&gt;<pos:position pos:line="71" pos:column="53"/></operator><name pos:line="71" pos:column="50">oid<pos:position pos:line="71" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="55"/></condition><then pos:line="71" pos:column="55">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="72" pos:column="33">result<pos:position pos:line="72" pos:column="39"/></name><operator pos:line="72" pos:column="39">-&gt;<pos:position pos:line="72" pos:column="44"/></operator><name pos:line="72" pos:column="41">clean<pos:position pos:line="72" pos:column="46"/></name></name> <operator pos:line="72" pos:column="47">=<pos:position pos:line="72" pos:column="48"/></operator> <literal type="number" pos:line="72" pos:column="49">0<pos:position pos:line="72" pos:column="50"/></literal></expr>;<pos:position pos:line="72" pos:column="51"/></expr_stmt></block></then></if>
		}<pos:position pos:line="73" pos:column="18"/></block></then></if></elseif> <else pos:line="73" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="25">die<pos:position pos:line="74" pos:column="28"/></name><argument_list pos:line="74" pos:column="28">(<argument><expr><literal type="string" pos:line="74" pos:column="29">"BUG: unsupported object type in the tree"<pos:position pos:line="74" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="73"/></expr_stmt></block></else></if>
	}<pos:position pos:line="75" pos:column="10"/></block></else></if>

	<return pos:line="77" pos:column="9">return <expr><literal type="number" pos:line="77" pos:column="16">0<pos:position pos:line="77" pos:column="17"/></literal></expr>;<pos:position pos:line="77" pos:column="18"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1549.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_update_ref<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">argc<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">argv<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">prefix<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">refname<pos:position pos:line="3" pos:column="28"/></name></decl>, <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="31">oldval<pos:position pos:line="3" pos:column="37"/></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name></type> <name><name pos:line="4" pos:column="23">sha1<pos:position pos:line="4" pos:column="27"/></name><index pos:line="4" pos:column="27">[<expr><literal type="number" pos:line="4" pos:column="28">20<pos:position pos:line="4" pos:column="30"/></literal></expr>]<pos:position pos:line="4" pos:column="31"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="33">oldsha1<pos:position pos:line="4" pos:column="40"/></name><index pos:line="4" pos:column="40">[<expr><literal type="number" pos:line="4" pos:column="41">20<pos:position pos:line="4" pos:column="43"/></literal></expr>]<pos:position pos:line="4" pos:column="44"/></index></name></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
	<expr_stmt><expr><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">delete<pos:position pos:line="5" pos:column="19"/></operator> <operator pos:line="5" pos:column="20">=<pos:position pos:line="5" pos:column="21"/></operator> <literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr><operator pos:line="5" pos:column="23">,<pos:position pos:line="5" pos:column="24"/></operator> <expr><name pos:line="5" pos:column="25">no_deref<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">=<pos:position pos:line="5" pos:column="35"/></operator> <literal type="number" pos:line="5" pos:column="36">0<pos:position pos:line="5" pos:column="37"/></literal></expr><operator pos:line="5" pos:column="37">,<pos:position pos:line="5" pos:column="38"/></operator> <expr><name pos:line="5" pos:column="39">read_stdin<pos:position pos:line="5" pos:column="49"/></name> <operator pos:line="5" pos:column="50">=<pos:position pos:line="5" pos:column="51"/></operator> <literal type="number" pos:line="5" pos:column="52">0<pos:position pos:line="5" pos:column="53"/></literal></expr><operator pos:line="5" pos:column="53">,<pos:position pos:line="5" pos:column="54"/></operator> <expr><name pos:line="5" pos:column="55">end_null<pos:position pos:line="5" pos:column="63"/></name> <operator pos:line="5" pos:column="64">=<pos:position pos:line="5" pos:column="65"/></operator> <literal type="number" pos:line="5" pos:column="66">0<pos:position pos:line="5" pos:column="67"/></literal></expr><operator pos:line="5" pos:column="67">,<pos:position pos:line="5" pos:column="68"/></operator> <expr><name pos:line="5" pos:column="69">flags<pos:position pos:line="5" pos:column="74"/></name> <operator pos:line="5" pos:column="75">=<pos:position pos:line="5" pos:column="76"/></operator> <literal type="number" pos:line="5" pos:column="77">0<pos:position pos:line="5" pos:column="78"/></literal></expr>;<pos:position pos:line="5" pos:column="79"/></expr_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">option<pos:position pos:line="6" pos:column="22"/></name></name></type> <name><name pos:line="6" pos:column="23">options<pos:position pos:line="6" pos:column="30"/></name><index pos:line="6" pos:column="30">[]<pos:position pos:line="6" pos:column="32"/></index></name> <init pos:line="6" pos:column="33">= <expr><block pos:line="6" pos:column="35">{
		<expr><call><name pos:line="7" pos:column="17">OPT_STRING<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">( <argument><expr><literal type="char" pos:line="7" pos:column="29">'m'<pos:position pos:line="7" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">NULL<pos:position pos:line="7" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="40">&amp;<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="41">msg<pos:position pos:line="7" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="46">N_<pos:position pos:line="7" pos:column="48"/></name><argument_list pos:line="7" pos:column="48">(<argument><expr><literal type="string" pos:line="7" pos:column="49">"reason"<pos:position pos:line="7" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="60">N_<pos:position pos:line="7" pos:column="62"/></name><argument_list pos:line="7" pos:column="62">(<argument><expr><literal type="string" pos:line="7" pos:column="63">"reason of the update"<pos:position pos:line="7" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="87"/></argument_list></call></expr>,
		<expr><call><name pos:line="8" pos:column="17">OPT_BOOL<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="char" pos:line="8" pos:column="26">'d'<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">NULL<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="37">&amp;<pos:position pos:line="8" pos:column="42"/></operator><operator pos:line="8" pos:column="38">delete<pos:position pos:line="8" pos:column="44"/></operator></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="46">N_<pos:position pos:line="8" pos:column="48"/></name><argument_list pos:line="8" pos:column="48">(<argument><expr><literal type="string" pos:line="8" pos:column="49">"delete the reference"<pos:position pos:line="8" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call></expr>,
		<expr><call><name pos:line="9" pos:column="17">OPT_BOOL<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">( <argument><expr><literal type="number" pos:line="9" pos:column="27">0<pos:position pos:line="9" pos:column="28"/></literal></expr></argument> , <argument><expr><literal type="string" pos:line="9" pos:column="31">"no-deref"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="43">&amp;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="44">no_deref<pos:position pos:line="9" pos:column="52"/></name></expr></argument>,
					<argument><expr><call><name pos:line="10" pos:column="41">N_<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><literal type="string" pos:line="10" pos:column="44">"update &lt;refname&gt; not the one it points to"<pos:position pos:line="10" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="89"/></argument_list></call></expr>,
		<expr><call><name pos:line="11" pos:column="17">OPT_BOOL<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><literal type="char" pos:line="11" pos:column="26">'z'<pos:position pos:line="11" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="31">NULL<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="37">&amp;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="38">end_null<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="48">N_<pos:position pos:line="11" pos:column="50"/></name><argument_list pos:line="11" pos:column="50">(<argument><expr><literal type="string" pos:line="11" pos:column="51">"stdin has NUL-terminated arguments"<pos:position pos:line="11" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="89"/></argument_list></call></expr>,
		<expr><call><name pos:line="12" pos:column="17">OPT_BOOL<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">( <argument><expr><literal type="number" pos:line="12" pos:column="27">0<pos:position pos:line="12" pos:column="28"/></literal></expr></argument> , <argument><expr><literal type="string" pos:line="12" pos:column="31">"stdin"<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="40">&amp;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="41">read_stdin<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="53">N_<pos:position pos:line="12" pos:column="55"/></name><argument_list pos:line="12" pos:column="55">(<argument><expr><literal type="string" pos:line="12" pos:column="56">"read updates from stdin"<pos:position pos:line="12" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="83"/></argument_list></call></expr>,
		<expr><call><name pos:line="13" pos:column="17">OPT_END<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">()<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>,
	}<pos:position pos:line="14" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="14" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">git_config<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">git_default_config<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">NULL<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">argc<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <call><name pos:line="17" pos:column="16">parse_options<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">argc<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">argv<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">prefix<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">options<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">git_update_ref_usage<pos:position pos:line="17" pos:column="79"/></name></expr></argument>,
			     <argument><expr><literal type="number" pos:line="18" pos:column="30">0<pos:position pos:line="18" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">msg<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">&amp;&amp;<pos:position pos:line="19" pos:column="27"/></operator> <operator pos:line="19" pos:column="20">!<pos:position pos:line="19" pos:column="21"/></operator><operator pos:line="19" pos:column="21">*<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">msg<pos:position pos:line="19" pos:column="25"/></name></expr>)<pos:position pos:line="19" pos:column="26"/></condition><then pos:line="19" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">die<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><literal type="string" pos:line="20" pos:column="21">"Refusing to perform update with empty message."<pos:position pos:line="20" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="71"/></expr_stmt></block></then></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">read_stdin<pos:position pos:line="22" pos:column="23"/></name></expr>)<pos:position pos:line="22" pos:column="24"/></condition><then pos:line="22" pos:column="24"> <block pos:line="22" pos:column="25">{
		<decl_stmt><decl><type><name><name pos:line="23" pos:column="17">struct<pos:position pos:line="23" pos:column="23"/></name> <name pos:line="23" pos:column="24">strbuf<pos:position pos:line="23" pos:column="30"/></name></name></type> <name pos:line="23" pos:column="31">err<pos:position pos:line="23" pos:column="34"/></name> <init pos:line="23" pos:column="35">= <expr><name pos:line="23" pos:column="37">STRBUF_INIT<pos:position pos:line="23" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="24" pos:column="17">struct<pos:position pos:line="24" pos:column="23"/></name> <name pos:line="24" pos:column="24">ref_transaction<pos:position pos:line="24" pos:column="39"/></name></name> <modifier pos:line="24" pos:column="40">*<pos:position pos:line="24" pos:column="41"/></modifier></type><name pos:line="24" pos:column="41">transaction<pos:position pos:line="24" pos:column="52"/></name></decl>;<pos:position pos:line="24" pos:column="53"/></decl_stmt>

		<expr_stmt><expr><name pos:line="26" pos:column="17">transaction<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <call><name pos:line="26" pos:column="31">ref_transaction_begin<pos:position pos:line="26" pos:column="52"/></name><argument_list pos:line="26" pos:column="52">(<argument><expr><operator pos:line="26" pos:column="53">&amp;<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="54">err<pos:position pos:line="26" pos:column="57"/></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">transaction<pos:position pos:line="27" pos:column="33"/></name></expr>)<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">die<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><literal type="string" pos:line="28" pos:column="29">"%s"<pos:position pos:line="28" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="35">err<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">.<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">buf<pos:position pos:line="28" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt></block></then></if>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">delete<pos:position pos:line="29" pos:column="27"/></operator> <operator pos:line="29" pos:column="28">||<pos:position pos:line="29" pos:column="30"/></operator> <name pos:line="29" pos:column="31">no_deref<pos:position pos:line="29" pos:column="39"/></name> <operator pos:line="29" pos:column="40">||<pos:position pos:line="29" pos:column="42"/></operator> <name pos:line="29" pos:column="43">argc<pos:position pos:line="29" pos:column="47"/></name> <operator pos:line="29" pos:column="48">&gt;<pos:position pos:line="29" pos:column="52"/></operator> <literal type="number" pos:line="29" pos:column="50">0<pos:position pos:line="29" pos:column="51"/></literal></expr>)<pos:position pos:line="29" pos:column="52"/></condition><then pos:line="29" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">usage_with_options<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><name pos:line="30" pos:column="44">git_update_ref_usage<pos:position pos:line="30" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="66">options<pos:position pos:line="30" pos:column="73"/></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="75"/></expr_stmt></block></then></if>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">end_null<pos:position pos:line="31" pos:column="29"/></name></expr>)<pos:position pos:line="31" pos:column="30"/></condition><then pos:line="31" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="25">line_termination<pos:position pos:line="32" pos:column="41"/></name> <operator pos:line="32" pos:column="42">=<pos:position pos:line="32" pos:column="43"/></operator> <literal type="char" pos:line="32" pos:column="44">'\0'<pos:position pos:line="32" pos:column="48"/></literal></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">update_refs_stdin<pos:position pos:line="33" pos:column="34"/></name><argument_list pos:line="33" pos:column="34">(<argument><expr><name pos:line="33" pos:column="35">transaction<pos:position pos:line="33" pos:column="46"/></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><call><name pos:line="34" pos:column="21">ref_transaction_commit<pos:position pos:line="34" pos:column="43"/></name><argument_list pos:line="34" pos:column="43">(<argument><expr><name pos:line="34" pos:column="44">transaction<pos:position pos:line="34" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="57">&amp;<pos:position pos:line="34" pos:column="62"/></operator><name pos:line="34" pos:column="58">err<pos:position pos:line="34" pos:column="61"/></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="63"/></condition><then pos:line="34" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="25">die<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><literal type="string" pos:line="35" pos:column="29">"%s"<pos:position pos:line="35" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="35">err<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">.<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">buf<pos:position pos:line="35" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">ref_transaction_free<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name pos:line="36" pos:column="38">transaction<pos:position pos:line="36" pos:column="49"/></name></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">strbuf_release<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><operator pos:line="37" pos:column="32">&amp;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="33">err<pos:position pos:line="37" pos:column="36"/></name></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>
		<return pos:line="38" pos:column="17">return <expr><literal type="number" pos:line="38" pos:column="24">0<pos:position pos:line="38" pos:column="25"/></literal></expr>;<pos:position pos:line="38" pos:column="26"/></return>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">end_null<pos:position pos:line="41" pos:column="21"/></name></expr>)<pos:position pos:line="41" pos:column="22"/></condition><then pos:line="41" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="17">usage_with_options<pos:position pos:line="42" pos:column="35"/></name><argument_list pos:line="42" pos:column="35">(<argument><expr><name pos:line="42" pos:column="36">git_update_ref_usage<pos:position pos:line="42" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="58">options<pos:position pos:line="42" pos:column="65"/></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="67"/></expr_stmt></block></then></if>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">delete<pos:position pos:line="44" pos:column="19"/></operator></expr>)<pos:position pos:line="44" pos:column="20"/></condition><then pos:line="44" pos:column="20"> <block pos:line="44" pos:column="21">{
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name><name pos:line="45" pos:column="21">argc<pos:position pos:line="45" pos:column="25"/></name> <argument_list type="generic" pos:line="45" pos:column="26">&lt; <argument><expr><literal type="number" pos:line="45" pos:column="28">1<pos:position pos:line="45" pos:column="29"/></literal> <operator pos:line="45" pos:column="30">||<pos:position pos:line="45" pos:column="32"/></operator> <name pos:line="45" pos:column="33">argc<pos:position pos:line="45" pos:column="37"/></name></expr></argument> &gt;<pos:position pos:line="45" pos:column="42"/></argument_list></name> <literal type="number" pos:line="45" pos:column="40">2<pos:position pos:line="45" pos:column="41"/></literal></expr>)<pos:position pos:line="45" pos:column="42"/></condition><then pos:line="45" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">usage_with_options<pos:position pos:line="46" pos:column="43"/></name><argument_list pos:line="46" pos:column="43">(<argument><expr><name pos:line="46" pos:column="44">git_update_ref_usage<pos:position pos:line="46" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="66">options<pos:position pos:line="46" pos:column="73"/></name></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="75"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="47" pos:column="17">refname<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <name><name pos:line="47" pos:column="27">argv<pos:position pos:line="47" pos:column="31"/></name><index pos:line="47" pos:column="31">[<expr><literal type="number" pos:line="47" pos:column="32">0<pos:position pos:line="47" pos:column="33"/></literal></expr>]<pos:position pos:line="47" pos:column="34"/></index></name></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="48" pos:column="17">oldval<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">=<pos:position pos:line="48" pos:column="25"/></operator> <name><name pos:line="48" pos:column="26">argv<pos:position pos:line="48" pos:column="30"/></name><index pos:line="48" pos:column="30">[<expr><literal type="number" pos:line="48" pos:column="31">1<pos:position pos:line="48" pos:column="32"/></literal></expr>]<pos:position pos:line="48" pos:column="33"/></index></name></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></then> <else pos:line="49" pos:column="11">else <block pos:line="49" pos:column="16">{
		<decl_stmt><decl><type><specifier pos:line="50" pos:column="17">const<pos:position pos:line="50" pos:column="22"/></specifier> <name pos:line="50" pos:column="23">char<pos:position pos:line="50" pos:column="27"/></name> <modifier pos:line="50" pos:column="28">*<pos:position pos:line="50" pos:column="29"/></modifier></type><name pos:line="50" pos:column="29">value<pos:position pos:line="50" pos:column="34"/></name></decl>;<pos:position pos:line="50" pos:column="35"/></decl_stmt>
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name><name pos:line="51" pos:column="21">argc<pos:position pos:line="51" pos:column="25"/></name> <argument_list type="generic" pos:line="51" pos:column="26">&lt; <argument><expr><literal type="number" pos:line="51" pos:column="28">2<pos:position pos:line="51" pos:column="29"/></literal> <operator pos:line="51" pos:column="30">||<pos:position pos:line="51" pos:column="32"/></operator> <name pos:line="51" pos:column="33">argc<pos:position pos:line="51" pos:column="37"/></name></expr></argument> &gt;<pos:position pos:line="51" pos:column="42"/></argument_list></name> <literal type="number" pos:line="51" pos:column="40">3<pos:position pos:line="51" pos:column="41"/></literal></expr>)<pos:position pos:line="51" pos:column="42"/></condition><then pos:line="51" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="25">usage_with_options<pos:position pos:line="52" pos:column="43"/></name><argument_list pos:line="52" pos:column="43">(<argument><expr><name pos:line="52" pos:column="44">git_update_ref_usage<pos:position pos:line="52" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="66">options<pos:position pos:line="52" pos:column="73"/></name></expr></argument>)<pos:position pos:line="52" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="75"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="53" pos:column="17">refname<pos:position pos:line="53" pos:column="24"/></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <name><name pos:line="53" pos:column="27">argv<pos:position pos:line="53" pos:column="31"/></name><index pos:line="53" pos:column="31">[<expr><literal type="number" pos:line="53" pos:column="32">0<pos:position pos:line="53" pos:column="33"/></literal></expr>]<pos:position pos:line="53" pos:column="34"/></index></name></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="54" pos:column="17">value<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">=<pos:position pos:line="54" pos:column="24"/></operator> <name><name pos:line="54" pos:column="25">argv<pos:position pos:line="54" pos:column="29"/></name><index pos:line="54" pos:column="29">[<expr><literal type="number" pos:line="54" pos:column="30">1<pos:position pos:line="54" pos:column="31"/></literal></expr>]<pos:position pos:line="54" pos:column="32"/></index></name></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="55" pos:column="17">oldval<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <name><name pos:line="55" pos:column="26">argv<pos:position pos:line="55" pos:column="30"/></name><index pos:line="55" pos:column="30">[<expr><literal type="number" pos:line="55" pos:column="31">2<pos:position pos:line="55" pos:column="32"/></literal></expr>]<pos:position pos:line="55" pos:column="33"/></index></name></expr>;<pos:position pos:line="55" pos:column="34"/></expr_stmt>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><call><name pos:line="56" pos:column="21">get_sha1<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">value<pos:position pos:line="56" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="37">sha1<pos:position pos:line="56" pos:column="41"/></name></expr></argument>)<pos:position pos:line="56" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="43"/></condition><then pos:line="56" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="25">die<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><literal type="string" pos:line="57" pos:column="29">"%s: not a valid SHA1"<pos:position pos:line="57" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="53">value<pos:position pos:line="57" pos:column="58"/></name></expr></argument>)<pos:position pos:line="57" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="60"/></expr_stmt></block></then></if>
	}<pos:position pos:line="58" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="60" pos:column="9">hashclr<pos:position pos:line="60" pos:column="16"/></name><argument_list pos:line="60" pos:column="16">(<argument><expr><name pos:line="60" pos:column="17">oldsha1<pos:position pos:line="60" pos:column="24"/></name></expr></argument>)<pos:position pos:line="60" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="26"/></expr_stmt> <comment type="block" pos:line="60" pos:column="27">/* all-zero hash in case oldval is the empty string */</comment>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">oldval<pos:position pos:line="61" pos:column="19"/></name> <operator pos:line="61" pos:column="20">&amp;&amp;<pos:position pos:line="61" pos:column="30"/></operator> <operator pos:line="61" pos:column="23">*<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="24">oldval<pos:position pos:line="61" pos:column="30"/></name> <operator pos:line="61" pos:column="31">&amp;&amp;<pos:position pos:line="61" pos:column="41"/></operator> <call><name pos:line="61" pos:column="34">get_sha1<pos:position pos:line="61" pos:column="42"/></name><argument_list pos:line="61" pos:column="42">(<argument><expr><name pos:line="61" pos:column="43">oldval<pos:position pos:line="61" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="51">oldsha1<pos:position pos:line="61" pos:column="58"/></name></expr></argument>)<pos:position pos:line="61" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="60"/></condition><then pos:line="61" pos:column="60">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="17">die<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><literal type="string" pos:line="62" pos:column="21">"%s: not a valid old SHA1"<pos:position pos:line="62" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="49">oldval<pos:position pos:line="62" pos:column="55"/></name></expr></argument>)<pos:position pos:line="62" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="57"/></expr_stmt></block></then></if>

	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">no_deref<pos:position pos:line="64" pos:column="21"/></name></expr>)<pos:position pos:line="64" pos:column="22"/></condition><then pos:line="64" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="17">flags<pos:position pos:line="65" pos:column="22"/></name> <operator pos:line="65" pos:column="23">=<pos:position pos:line="65" pos:column="24"/></operator> <name pos:line="65" pos:column="25">REF_NODEREF<pos:position pos:line="65" pos:column="36"/></name></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt></block></then></if>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><operator pos:line="66" pos:column="13">delete<pos:position pos:line="66" pos:column="19"/></operator></expr>)<pos:position pos:line="66" pos:column="20"/></condition><then pos:line="66" pos:column="20">
		<block type="pseudo"><return pos:line="67" pos:column="17">return <expr><call><name pos:line="67" pos:column="24">delete_ref<pos:position pos:line="67" pos:column="34"/></name><argument_list pos:line="67" pos:column="34">(<argument><expr><name pos:line="67" pos:column="35">refname<pos:position pos:line="67" pos:column="42"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="67" pos:column="44">oldval<pos:position pos:line="67" pos:column="50"/></name></expr> ?<pos:position pos:line="67" pos:column="52"/></condition><then pos:line="67" pos:column="52"> <expr><name pos:line="67" pos:column="53">oldsha1<pos:position pos:line="67" pos:column="60"/></name></expr> <pos:position pos:line="67" pos:column="61"/></then><else pos:line="67" pos:column="61">: <expr><name pos:line="67" pos:column="63">NULL<pos:position pos:line="67" pos:column="67"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="67" pos:column="69">flags<pos:position pos:line="67" pos:column="74"/></name></expr></argument>)<pos:position pos:line="67" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="76"/></return></block></then>
	<else pos:line="68" pos:column="9">else
		<block type="pseudo"><return pos:line="69" pos:column="17">return <expr><call><name pos:line="69" pos:column="24">update_ref<pos:position pos:line="69" pos:column="34"/></name><argument_list pos:line="69" pos:column="34">(<argument><expr><name pos:line="69" pos:column="35">msg<pos:position pos:line="69" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="40">refname<pos:position pos:line="69" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="49">sha1<pos:position pos:line="69" pos:column="53"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="69" pos:column="55">oldval<pos:position pos:line="69" pos:column="61"/></name></expr> ?<pos:position pos:line="69" pos:column="63"/></condition><then pos:line="69" pos:column="63"> <expr><name pos:line="69" pos:column="64">oldsha1<pos:position pos:line="69" pos:column="71"/></name></expr> <pos:position pos:line="69" pos:column="72"/></then><else pos:line="69" pos:column="72">: <expr><name pos:line="69" pos:column="74">NULL<pos:position pos:line="69" pos:column="78"/></name></expr></else></ternary></expr></argument>,
				  <argument><expr><name pos:line="70" pos:column="35">flags<pos:position pos:line="70" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="42">UPDATE_REFS_DIE_ON_ERR<pos:position pos:line="70" pos:column="64"/></name></expr></argument>)<pos:position pos:line="70" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="66"/></return></block></else></if>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

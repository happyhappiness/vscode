<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3066_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_trailer_default_config<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conf_key<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="61">const<pos:position pos:line="1" pos:column="66"/></specifier> <name pos:line="1" pos:column="67">char<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">value<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="80">void<pos:position pos:line="1" pos:column="84"/></name> <modifier pos:line="1" pos:column="85">*<pos:position pos:line="1" pos:column="86"/></modifier></type><name pos:line="1" pos:column="86">cb<pos:position pos:line="1" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="89"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">trailer_item<pos:position pos:line="3" pos:column="33"/></name></decl>, <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="36">variable_name<pos:position pos:line="3" pos:column="49"/></name></decl>;<pos:position pos:line="3" pos:column="50"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><call><name pos:line="5" pos:column="14">skip_prefix<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">conf_key<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="36">"trailer."<pos:position pos:line="5" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="5" pos:column="48">&amp;<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="49">trailer_item<pos:position pos:line="5" pos:column="61"/></name></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="63"/></condition><then pos:line="5" pos:column="63">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="8" pos:column="9">variable_name<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <call><name pos:line="8" pos:column="25">strrchr<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">trailer_item<pos:position pos:line="8" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="47">'.'<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">variable_name<pos:position pos:line="9" pos:column="27"/></name></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28"> <block pos:line="9" pos:column="29">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><call><name pos:line="10" pos:column="22">strcmp<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">trailer_item<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="43">"where"<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="52"/></condition><then pos:line="10" pos:column="52"> <block pos:line="10" pos:column="53">{
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><call><name pos:line="11" pos:column="29">set_where<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><operator pos:line="11" pos:column="39">&amp;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="40">default_conf_info<pos:position pos:line="11" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="59">value<pos:position pos:line="11" pos:column="64"/></name></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call> <operator pos:line="11" pos:column="66">&lt;<pos:position pos:line="11" pos:column="70"/></operator> <literal type="number" pos:line="11" pos:column="68">0<pos:position pos:line="11" pos:column="69"/></literal></expr>)<pos:position pos:line="11" pos:column="70"/></condition><then pos:line="11" pos:column="70">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="33">warning<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><call><name pos:line="12" pos:column="41">_<pos:position pos:line="12" pos:column="42"/></name><argument_list pos:line="12" pos:column="42">(<argument><expr><literal type="string" pos:line="12" pos:column="43">"unknown value '%s' for key '%s'"<pos:position pos:line="12" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="77"/></argument_list></call></expr></argument>,
					<argument><expr><name pos:line="13" pos:column="41">value<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">conf_key<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt></block></then></if>
		}<pos:position pos:line="14" pos:column="18"/></block></then> <elseif pos:line="14" pos:column="19">else <if pos:line="14" pos:column="24">if <condition pos:line="14" pos:column="27">(<expr><operator pos:line="14" pos:column="28">!<pos:position pos:line="14" pos:column="29"/></operator><call><name pos:line="14" pos:column="29">strcmp<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><name pos:line="14" pos:column="36">trailer_item<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="50">"ifexists"<pos:position pos:line="14" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="62"/></condition><then pos:line="14" pos:column="62"> <block pos:line="14" pos:column="63">{
			<if pos:line="15" pos:column="25">if <condition pos:line="15" pos:column="28">(<expr><call><name pos:line="15" pos:column="29">set_if_exists<pos:position pos:line="15" pos:column="42"/></name><argument_list pos:line="15" pos:column="42">(<argument><expr><operator pos:line="15" pos:column="43">&amp;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="44">default_conf_info<pos:position pos:line="15" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="63">value<pos:position pos:line="15" pos:column="68"/></name></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call> <operator pos:line="15" pos:column="70">&lt;<pos:position pos:line="15" pos:column="74"/></operator> <literal type="number" pos:line="15" pos:column="72">0<pos:position pos:line="15" pos:column="73"/></literal></expr>)<pos:position pos:line="15" pos:column="74"/></condition><then pos:line="15" pos:column="74">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="33">warning<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><call><name pos:line="16" pos:column="41">_<pos:position pos:line="16" pos:column="42"/></name><argument_list pos:line="16" pos:column="42">(<argument><expr><literal type="string" pos:line="16" pos:column="43">"unknown value '%s' for key '%s'"<pos:position pos:line="16" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call></expr></argument>,
					<argument><expr><name pos:line="17" pos:column="41">value<pos:position pos:line="17" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">conf_key<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt></block></then></if>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if></elseif> <elseif pos:line="18" pos:column="19">else <if pos:line="18" pos:column="24">if <condition pos:line="18" pos:column="27">(<expr><operator pos:line="18" pos:column="28">!<pos:position pos:line="18" pos:column="29"/></operator><call><name pos:line="18" pos:column="29">strcmp<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">trailer_item<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="50">"ifmissing"<pos:position pos:line="18" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="63"/></condition><then pos:line="18" pos:column="63"> <block pos:line="18" pos:column="64">{
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><call><name pos:line="19" pos:column="29">set_if_missing<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><operator pos:line="19" pos:column="44">&amp;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="45">default_conf_info<pos:position pos:line="19" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="64">value<pos:position pos:line="19" pos:column="69"/></name></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call> <operator pos:line="19" pos:column="71">&lt;<pos:position pos:line="19" pos:column="75"/></operator> <literal type="number" pos:line="19" pos:column="73">0<pos:position pos:line="19" pos:column="74"/></literal></expr>)<pos:position pos:line="19" pos:column="75"/></condition><then pos:line="19" pos:column="75">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="33">warning<pos:position pos:line="20" pos:column="40"/></name><argument_list pos:line="20" pos:column="40">(<argument><expr><call><name pos:line="20" pos:column="41">_<pos:position pos:line="20" pos:column="42"/></name><argument_list pos:line="20" pos:column="42">(<argument><expr><literal type="string" pos:line="20" pos:column="43">"unknown value '%s' for key '%s'"<pos:position pos:line="20" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr></argument>,
					<argument><expr><name pos:line="21" pos:column="41">value<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">conf_key<pos:position pos:line="21" pos:column="56"/></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt></block></then></if>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if></elseif> <elseif pos:line="22" pos:column="19">else <if pos:line="22" pos:column="24">if <condition pos:line="22" pos:column="27">(<expr><operator pos:line="22" pos:column="28">!<pos:position pos:line="22" pos:column="29"/></operator><call><name pos:line="22" pos:column="29">strcmp<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name pos:line="22" pos:column="36">trailer_item<pos:position pos:line="22" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="50">"separators"<pos:position pos:line="22" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="64"/></condition><then pos:line="22" pos:column="64"> <block pos:line="22" pos:column="65">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">separators<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <call><name pos:line="23" pos:column="38">xstrdup<pos:position pos:line="23" pos:column="45"/></name><argument_list pos:line="23" pos:column="45">(<argument><expr><name pos:line="23" pos:column="46">value<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<return pos:line="26" pos:column="9">return <expr><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2204_git-2.8.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">transport_push<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">transport<pos:position pos:line="1" pos:column="36"/></name></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">transport<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">refspec_nr<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier><modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">refspec<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">int<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">flags<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="3" pos:column="20">unsigned<pos:position pos:line="3" pos:column="28"/></name> <name pos:line="3" pos:column="29">int<pos:position pos:line="3" pos:column="32"/></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">reject_reasons<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="49"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<expr_stmt><expr><operator pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">reject_reasons<pos:position pos:line="5" pos:column="24"/></name> <operator pos:line="5" pos:column="25">=<pos:position pos:line="5" pos:column="26"/></operator> <literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr>;<pos:position pos:line="5" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">transport_verify_remote_names<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><name pos:line="6" pos:column="39">refspec_nr<pos:position pos:line="6" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="51">refspec<pos:position pos:line="6" pos:column="58"/></name></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="60"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">transport<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">push<pos:position pos:line="8" pos:column="28"/></name></name></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <block pos:line="8" pos:column="30">{
		<comment type="block" pos:line="9" pos:column="17">/* Maybe FIXME. But no important transport uses this case. */</comment>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">flags<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">&amp;<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="29">TRANSPORT_PUSH_SET_UPSTREAM<pos:position pos:line="10" pos:column="56"/></name></expr>)<pos:position pos:line="10" pos:column="57"/></condition><then pos:line="10" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="25">die<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><literal type="string" pos:line="11" pos:column="29">"This transport does not support using --set-upstream"<pos:position pos:line="11" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="85"/></expr_stmt></block></then></if>

		<return pos:line="13" pos:column="17">return <expr><call><name><name pos:line="13" pos:column="24">transport<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="35">push<pos:position pos:line="13" pos:column="39"/></name></name><argument_list pos:line="13" pos:column="39">(<argument><expr><name pos:line="13" pos:column="40">transport<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">refspec_nr<pos:position pos:line="13" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="63">refspec<pos:position pos:line="13" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="72">flags<pos:position pos:line="13" pos:column="77"/></name></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="79"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then> <elseif pos:line="14" pos:column="11">else <if pos:line="14" pos:column="16">if <condition pos:line="14" pos:column="19">(<expr><name><name pos:line="14" pos:column="20">transport<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">push_refs<pos:position pos:line="14" pos:column="40"/></name></name></expr>)<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41"> <block pos:line="14" pos:column="42">{
		<decl_stmt><decl><type><name><name pos:line="15" pos:column="17">struct<pos:position pos:line="15" pos:column="23"/></name> <name pos:line="15" pos:column="24">ref<pos:position pos:line="15" pos:column="27"/></name></name> <modifier pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></modifier></type><name pos:line="15" pos:column="29">remote_refs<pos:position pos:line="15" pos:column="40"/></name></decl>;<pos:position pos:line="15" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="16" pos:column="17">struct<pos:position pos:line="16" pos:column="23"/></name> <name pos:line="16" pos:column="24">ref<pos:position pos:line="16" pos:column="27"/></name></name> <modifier pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></modifier></type><name pos:line="16" pos:column="29">local_refs<pos:position pos:line="16" pos:column="39"/></name> <init pos:line="16" pos:column="40">= <expr><call><name pos:line="16" pos:column="42">get_local_heads<pos:position pos:line="16" pos:column="57"/></name><argument_list pos:line="16" pos:column="57">()<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="60"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">int<pos:position pos:line="17" pos:column="20"/></name></type> <name pos:line="17" pos:column="21">match_flags<pos:position pos:line="17" pos:column="32"/></name> <init pos:line="17" pos:column="33">= <expr><name pos:line="17" pos:column="35">MATCH_REFS_NONE<pos:position pos:line="17" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="51"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">int<pos:position pos:line="18" pos:column="20"/></name></type> <name pos:line="18" pos:column="21">verbose<pos:position pos:line="18" pos:column="28"/></name> <init pos:line="18" pos:column="29">= <expr><operator pos:line="18" pos:column="31">(<pos:position pos:line="18" pos:column="32"/></operator><name><name pos:line="18" pos:column="32">transport<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">-&gt;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="43">verbose<pos:position pos:line="18" pos:column="50"/></name></name> <operator pos:line="18" pos:column="51">&gt;<pos:position pos:line="18" pos:column="55"/></operator> <literal type="number" pos:line="18" pos:column="53">0<pos:position pos:line="18" pos:column="54"/></literal><operator pos:line="18" pos:column="54">)<pos:position pos:line="18" pos:column="55"/></operator></expr></init></decl>;<pos:position pos:line="18" pos:column="56"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">int<pos:position pos:line="19" pos:column="20"/></name></type> <name pos:line="19" pos:column="21">quiet<pos:position pos:line="19" pos:column="26"/></name> <init pos:line="19" pos:column="27">= <expr><operator pos:line="19" pos:column="29">(<pos:position pos:line="19" pos:column="30"/></operator><name><name pos:line="19" pos:column="30">transport<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">verbose<pos:position pos:line="19" pos:column="48"/></name></name> <operator pos:line="19" pos:column="49">&lt;<pos:position pos:line="19" pos:column="53"/></operator> <literal type="number" pos:line="19" pos:column="51">0<pos:position pos:line="19" pos:column="52"/></literal><operator pos:line="19" pos:column="52">)<pos:position pos:line="19" pos:column="53"/></operator></expr></init></decl>;<pos:position pos:line="19" pos:column="54"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">int<pos:position pos:line="20" pos:column="20"/></name></type> <name pos:line="20" pos:column="21">porcelain<pos:position pos:line="20" pos:column="30"/></name> <init pos:line="20" pos:column="31">= <expr><name pos:line="20" pos:column="33">flags<pos:position pos:line="20" pos:column="38"/></name> <operator pos:line="20" pos:column="39">&amp;<pos:position pos:line="20" pos:column="44"/></operator> <name pos:line="20" pos:column="41">TRANSPORT_PUSH_PORCELAIN<pos:position pos:line="20" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="66"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">int<pos:position pos:line="21" pos:column="20"/></name></type> <name pos:line="21" pos:column="21">pretend<pos:position pos:line="21" pos:column="28"/></name> <init pos:line="21" pos:column="29">= <expr><name pos:line="21" pos:column="31">flags<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">&amp;<pos:position pos:line="21" pos:column="42"/></operator> <name pos:line="21" pos:column="39">TRANSPORT_PUSH_DRY_RUN<pos:position pos:line="21" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="62"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">int<pos:position pos:line="22" pos:column="20"/></name></type> <name pos:line="22" pos:column="21">push_ret<pos:position pos:line="22" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="31">ret<pos:position pos:line="22" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="36">err<pos:position pos:line="22" pos:column="39"/></name></decl>;<pos:position pos:line="22" pos:column="40"/></decl_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">check_push_refs<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><name pos:line="24" pos:column="37">local_refs<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="49">refspec_nr<pos:position pos:line="24" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">refspec<pos:position pos:line="24" pos:column="68"/></name></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call> <operator pos:line="24" pos:column="70">&lt;<pos:position pos:line="24" pos:column="74"/></operator> <literal type="number" pos:line="24" pos:column="72">0<pos:position pos:line="24" pos:column="73"/></literal></expr>)<pos:position pos:line="24" pos:column="74"/></condition><then pos:line="24" pos:column="74">
			<block type="pseudo"><return pos:line="25" pos:column="25">return <expr><operator pos:line="25" pos:column="32">-<pos:position pos:line="25" pos:column="33"/></operator><literal type="number" pos:line="25" pos:column="33">1<pos:position pos:line="25" pos:column="34"/></literal></expr>;<pos:position pos:line="25" pos:column="35"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="27" pos:column="17">remote_refs<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <call><name><name pos:line="27" pos:column="31">transport<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="42">get_refs_list<pos:position pos:line="27" pos:column="55"/></name></name><argument_list pos:line="27" pos:column="55">(<argument><expr><name pos:line="27" pos:column="56">transport<pos:position pos:line="27" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="67">1<pos:position pos:line="27" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt>

		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">flags<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">&amp;<pos:position pos:line="29" pos:column="32"/></operator> <name pos:line="29" pos:column="29">TRANSPORT_PUSH_ALL<pos:position pos:line="29" pos:column="47"/></name></expr>)<pos:position pos:line="29" pos:column="48"/></condition><then pos:line="29" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="25">match_flags<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">|=<pos:position pos:line="30" pos:column="39"/></operator> <name pos:line="30" pos:column="40">MATCH_REFS_ALL<pos:position pos:line="30" pos:column="54"/></name></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt></block></then></if>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">flags<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">&amp;<pos:position pos:line="31" pos:column="32"/></operator> <name pos:line="31" pos:column="29">TRANSPORT_PUSH_MIRROR<pos:position pos:line="31" pos:column="50"/></name></expr>)<pos:position pos:line="31" pos:column="51"/></condition><then pos:line="31" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="25">match_flags<pos:position pos:line="32" pos:column="36"/></name> <operator pos:line="32" pos:column="37">|=<pos:position pos:line="32" pos:column="39"/></operator> <name pos:line="32" pos:column="40">MATCH_REFS_MIRROR<pos:position pos:line="32" pos:column="57"/></name></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt></block></then></if>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">flags<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">&amp;<pos:position pos:line="33" pos:column="32"/></operator> <name pos:line="33" pos:column="29">TRANSPORT_PUSH_PRUNE<pos:position pos:line="33" pos:column="49"/></name></expr>)<pos:position pos:line="33" pos:column="50"/></condition><then pos:line="33" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="25">match_flags<pos:position pos:line="34" pos:column="36"/></name> <operator pos:line="34" pos:column="37">|=<pos:position pos:line="34" pos:column="39"/></operator> <name pos:line="34" pos:column="40">MATCH_REFS_PRUNE<pos:position pos:line="34" pos:column="56"/></name></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt></block></then></if>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">flags<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">&amp;<pos:position pos:line="35" pos:column="32"/></operator> <name pos:line="35" pos:column="29">TRANSPORT_PUSH_FOLLOW_TAGS<pos:position pos:line="35" pos:column="55"/></name></expr>)<pos:position pos:line="35" pos:column="56"/></condition><then pos:line="35" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="25">match_flags<pos:position pos:line="36" pos:column="36"/></name> <operator pos:line="36" pos:column="37">|=<pos:position pos:line="36" pos:column="39"/></operator> <name pos:line="36" pos:column="40">MATCH_REFS_FOLLOW_TAGS<pos:position pos:line="36" pos:column="62"/></name></expr>;<pos:position pos:line="36" pos:column="63"/></expr_stmt></block></then></if>

		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">match_push_refs<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><name pos:line="38" pos:column="37">local_refs<pos:position pos:line="38" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="49">&amp;<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="50">remote_refs<pos:position pos:line="38" pos:column="61"/></name></expr></argument>,
				    <argument><expr><name pos:line="39" pos:column="37">refspec_nr<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="49">refspec<pos:position pos:line="39" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="58">match_flags<pos:position pos:line="39" pos:column="69"/></name></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="71"/></condition><then pos:line="39" pos:column="71"> <block pos:line="39" pos:column="72">{
			<return pos:line="40" pos:column="25">return <expr><operator pos:line="40" pos:column="32">-<pos:position pos:line="40" pos:column="33"/></operator><literal type="number" pos:line="40" pos:column="33">1<pos:position pos:line="40" pos:column="34"/></literal></expr>;<pos:position pos:line="40" pos:column="35"/></return>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>

		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name><name pos:line="43" pos:column="21">transport<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">-&gt;<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="32">smart_options<pos:position pos:line="43" pos:column="45"/></name></name> <operator pos:line="43" pos:column="46">&amp;&amp;<pos:position pos:line="43" pos:column="56"/></operator>
		    <name><name pos:line="44" pos:column="21">transport<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">-&gt;<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="32">smart_options<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">-&gt;<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="47">cas<pos:position pos:line="44" pos:column="50"/></name></name> <operator pos:line="44" pos:column="51">&amp;&amp;<pos:position pos:line="44" pos:column="61"/></operator>
		    <operator pos:line="45" pos:column="21">!<pos:position pos:line="45" pos:column="22"/></operator><call><name pos:line="45" pos:column="22">is_empty_cas<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><name><name pos:line="45" pos:column="35">transport<pos:position pos:line="45" pos:column="44"/></name><operator pos:line="45" pos:column="44">-&gt;<pos:position pos:line="45" pos:column="49"/></operator><name pos:line="45" pos:column="46">smart_options<pos:position pos:line="45" pos:column="59"/></name><operator pos:line="45" pos:column="59">-&gt;<pos:position pos:line="45" pos:column="64"/></operator><name pos:line="45" pos:column="61">cas<pos:position pos:line="45" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="66"/></condition><then pos:line="45" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">apply_push_cas<pos:position pos:line="46" pos:column="39"/></name><argument_list pos:line="46" pos:column="39">(<argument><expr><name><name pos:line="46" pos:column="40">transport<pos:position pos:line="46" pos:column="49"/></name><operator pos:line="46" pos:column="49">-&gt;<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="51">smart_options<pos:position pos:line="46" pos:column="64"/></name><operator pos:line="46" pos:column="64">-&gt;<pos:position pos:line="46" pos:column="69"/></operator><name pos:line="46" pos:column="66">cas<pos:position pos:line="46" pos:column="69"/></name></name></expr></argument>,
				       <argument><expr><name><name pos:line="47" pos:column="40">transport<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">-&gt;<pos:position pos:line="47" pos:column="54"/></operator><name pos:line="47" pos:column="51">remote<pos:position pos:line="47" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="59">remote_refs<pos:position pos:line="47" pos:column="70"/></name></expr></argument>)<pos:position pos:line="47" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="72"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="49" pos:column="17">set_ref_status_for_push<pos:position pos:line="49" pos:column="40"/></name><argument_list pos:line="49" pos:column="40">(<argument><expr><name pos:line="49" pos:column="41">remote_refs<pos:position pos:line="49" pos:column="52"/></name></expr></argument>,
			<argument><expr><name pos:line="50" pos:column="25">flags<pos:position pos:line="50" pos:column="30"/></name> <operator pos:line="50" pos:column="31">&amp;<pos:position pos:line="50" pos:column="36"/></operator> <name pos:line="50" pos:column="33">TRANSPORT_PUSH_MIRROR<pos:position pos:line="50" pos:column="54"/></name></expr></argument>,
			<argument><expr><name pos:line="51" pos:column="25">flags<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">&amp;<pos:position pos:line="51" pos:column="36"/></operator> <name pos:line="51" pos:column="33">TRANSPORT_PUSH_FORCE<pos:position pos:line="51" pos:column="53"/></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>

		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><operator pos:line="53" pos:column="21">!<pos:position pos:line="53" pos:column="22"/></operator><operator pos:line="53" pos:column="22">(<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="23">flags<pos:position pos:line="53" pos:column="28"/></name> <operator pos:line="53" pos:column="29">&amp;<pos:position pos:line="53" pos:column="34"/></operator> <name pos:line="53" pos:column="31">TRANSPORT_PUSH_NO_HOOK<pos:position pos:line="53" pos:column="53"/></name><operator pos:line="53" pos:column="53">)<pos:position pos:line="53" pos:column="54"/></operator></expr>)<pos:position pos:line="53" pos:column="55"/></condition><then pos:line="53" pos:column="55">
			<block type="pseudo"><if pos:line="54" pos:column="25">if <condition pos:line="54" pos:column="28">(<expr><call><name pos:line="54" pos:column="29">run_pre_push_hook<pos:position pos:line="54" pos:column="46"/></name><argument_list pos:line="54" pos:column="46">(<argument><expr><name pos:line="54" pos:column="47">transport<pos:position pos:line="54" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="58">remote_refs<pos:position pos:line="54" pos:column="69"/></name></expr></argument>)<pos:position pos:line="54" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="71"/></condition><then pos:line="54" pos:column="71">
				<block type="pseudo"><return pos:line="55" pos:column="33">return <expr><operator pos:line="55" pos:column="40">-<pos:position pos:line="55" pos:column="41"/></operator><literal type="number" pos:line="55" pos:column="41">1<pos:position pos:line="55" pos:column="42"/></literal></expr>;<pos:position pos:line="55" pos:column="43"/></return></block></then></if></block></then></if>

		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><operator pos:line="57" pos:column="21">(<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="22">flags<pos:position pos:line="57" pos:column="27"/></name> <operator pos:line="57" pos:column="28">&amp;<pos:position pos:line="57" pos:column="33"/></operator> <name pos:line="57" pos:column="30">TRANSPORT_RECURSE_SUBMODULES_ON_DEMAND<pos:position pos:line="57" pos:column="68"/></name><operator pos:line="57" pos:column="68">)<pos:position pos:line="57" pos:column="69"/></operator> <operator pos:line="57" pos:column="70">&amp;&amp;<pos:position pos:line="57" pos:column="80"/></operator> <operator pos:line="57" pos:column="73">!<pos:position pos:line="57" pos:column="74"/></operator><call><name pos:line="57" pos:column="74">is_bare_repository<pos:position pos:line="57" pos:column="92"/></name><argument_list pos:line="57" pos:column="92">()<pos:position pos:line="57" pos:column="94"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="95"/></condition><then pos:line="57" pos:column="95"> <block pos:line="57" pos:column="96">{
			<decl_stmt><decl><type><name><name pos:line="58" pos:column="25">struct<pos:position pos:line="58" pos:column="31"/></name> <name pos:line="58" pos:column="32">ref<pos:position pos:line="58" pos:column="35"/></name></name> <modifier pos:line="58" pos:column="36">*<pos:position pos:line="58" pos:column="37"/></modifier></type><name pos:line="58" pos:column="37">ref<pos:position pos:line="58" pos:column="40"/></name> <init pos:line="58" pos:column="41">= <expr><name pos:line="58" pos:column="43">remote_refs<pos:position pos:line="58" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="58" pos:column="55"/></decl_stmt>
			<for pos:line="59" pos:column="25">for <control pos:line="59" pos:column="29">(<init pos:line="59" pos:column="30">;<pos:position pos:line="59" pos:column="31"/></init> <condition><expr><name pos:line="59" pos:column="32">ref<pos:position pos:line="59" pos:column="35"/></name></expr>;<pos:position pos:line="59" pos:column="36"/></condition> <incr><expr><name pos:line="59" pos:column="37">ref<pos:position pos:line="59" pos:column="40"/></name> <operator pos:line="59" pos:column="41">=<pos:position pos:line="59" pos:column="42"/></operator> <name><name pos:line="59" pos:column="43">ref<pos:position pos:line="59" pos:column="46"/></name><operator pos:line="59" pos:column="46">-&gt;<pos:position pos:line="59" pos:column="51"/></operator><name pos:line="59" pos:column="48">next<pos:position pos:line="59" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="59" pos:column="53"/></control>
				<block type="pseudo"><if pos:line="60" pos:column="33">if <condition pos:line="60" pos:column="36">(<expr><operator pos:line="60" pos:column="37">!<pos:position pos:line="60" pos:column="38"/></operator><call><name pos:line="60" pos:column="38">is_null_oid<pos:position pos:line="60" pos:column="49"/></name><argument_list pos:line="60" pos:column="49">(<argument><expr><operator pos:line="60" pos:column="50">&amp;<pos:position pos:line="60" pos:column="55"/></operator><name><name pos:line="60" pos:column="51">ref<pos:position pos:line="60" pos:column="54"/></name><operator pos:line="60" pos:column="54">-&gt;<pos:position pos:line="60" pos:column="59"/></operator><name pos:line="60" pos:column="56">new_oid<pos:position pos:line="60" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="64"/></argument_list></call> <operator pos:line="60" pos:column="65">&amp;&amp;<pos:position pos:line="60" pos:column="75"/></operator>
				    <operator pos:line="61" pos:column="37">!<pos:position pos:line="61" pos:column="38"/></operator><call><name pos:line="61" pos:column="38">push_unpushed_submodules<pos:position pos:line="61" pos:column="62"/></name><argument_list pos:line="61" pos:column="62">(<argument><expr><name><name pos:line="61" pos:column="63">ref<pos:position pos:line="61" pos:column="66"/></name><operator pos:line="61" pos:column="66">-&gt;<pos:position pos:line="61" pos:column="71"/></operator><name pos:line="61" pos:column="68">new_oid<pos:position pos:line="61" pos:column="75"/></name><operator pos:line="61" pos:column="75">.<pos:position pos:line="61" pos:column="76"/></operator><name pos:line="61" pos:column="76">hash<pos:position pos:line="61" pos:column="80"/></name></name></expr></argument>,
					    <argument><expr><name><name pos:line="62" pos:column="45">transport<pos:position pos:line="62" pos:column="54"/></name><operator pos:line="62" pos:column="54">-&gt;<pos:position pos:line="62" pos:column="59"/></operator><name pos:line="62" pos:column="56">remote<pos:position pos:line="62" pos:column="62"/></name><operator pos:line="62" pos:column="62">-&gt;<pos:position pos:line="62" pos:column="67"/></operator><name pos:line="62" pos:column="64">name<pos:position pos:line="62" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="70"/></condition><then pos:line="62" pos:column="70">
				    <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="37">die<pos:position pos:line="63" pos:column="40"/></name> <argument_list pos:line="63" pos:column="41">(<argument><expr><literal type="string" pos:line="63" pos:column="42">"Failed to push all needed submodules!"<pos:position pos:line="63" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="83"/></expr_stmt></block></then></if></block></for>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if>

		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><operator pos:line="66" pos:column="21">(<pos:position pos:line="66" pos:column="22"/></operator><name pos:line="66" pos:column="22">flags<pos:position pos:line="66" pos:column="27"/></name> <operator pos:line="66" pos:column="28">&amp;<pos:position pos:line="66" pos:column="33"/></operator> <operator pos:line="66" pos:column="30">(<pos:position pos:line="66" pos:column="31"/></operator><name pos:line="66" pos:column="31">TRANSPORT_RECURSE_SUBMODULES_ON_DEMAND<pos:position pos:line="66" pos:column="69"/></name> <operator pos:line="66" pos:column="70">|<pos:position pos:line="66" pos:column="71"/></operator>
			      <name pos:line="67" pos:column="31">TRANSPORT_RECURSE_SUBMODULES_CHECK<pos:position pos:line="67" pos:column="65"/></name><operator pos:line="67" pos:column="65">)<pos:position pos:line="67" pos:column="66"/></operator><operator pos:line="67" pos:column="66">)<pos:position pos:line="67" pos:column="67"/></operator> <operator pos:line="67" pos:column="68">&amp;&amp;<pos:position pos:line="67" pos:column="78"/></operator> <operator pos:line="67" pos:column="71">!<pos:position pos:line="67" pos:column="72"/></operator><call><name pos:line="67" pos:column="72">is_bare_repository<pos:position pos:line="67" pos:column="90"/></name><argument_list pos:line="67" pos:column="90">()<pos:position pos:line="67" pos:column="92"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="93"/></condition><then pos:line="67" pos:column="93"> <block pos:line="67" pos:column="94">{
			<decl_stmt><decl><type><name><name pos:line="68" pos:column="25">struct<pos:position pos:line="68" pos:column="31"/></name> <name pos:line="68" pos:column="32">ref<pos:position pos:line="68" pos:column="35"/></name></name> <modifier pos:line="68" pos:column="36">*<pos:position pos:line="68" pos:column="37"/></modifier></type><name pos:line="68" pos:column="37">ref<pos:position pos:line="68" pos:column="40"/></name> <init pos:line="68" pos:column="41">= <expr><name pos:line="68" pos:column="43">remote_refs<pos:position pos:line="68" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="68" pos:column="55"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="69" pos:column="25">struct<pos:position pos:line="69" pos:column="31"/></name> <name pos:line="69" pos:column="32">string_list<pos:position pos:line="69" pos:column="43"/></name></name></type> <name pos:line="69" pos:column="44">needs_pushing<pos:position pos:line="69" pos:column="57"/></name> <init pos:line="69" pos:column="58">= <expr><name pos:line="69" pos:column="60">STRING_LIST_INIT_DUP<pos:position pos:line="69" pos:column="80"/></name></expr></init></decl>;<pos:position pos:line="69" pos:column="81"/></decl_stmt>

			<for pos:line="71" pos:column="25">for <control pos:line="71" pos:column="29">(<init pos:line="71" pos:column="30">;<pos:position pos:line="71" pos:column="31"/></init> <condition><expr><name pos:line="71" pos:column="32">ref<pos:position pos:line="71" pos:column="35"/></name></expr>;<pos:position pos:line="71" pos:column="36"/></condition> <incr><expr><name pos:line="71" pos:column="37">ref<pos:position pos:line="71" pos:column="40"/></name> <operator pos:line="71" pos:column="41">=<pos:position pos:line="71" pos:column="42"/></operator> <name><name pos:line="71" pos:column="43">ref<pos:position pos:line="71" pos:column="46"/></name><operator pos:line="71" pos:column="46">-&gt;<pos:position pos:line="71" pos:column="51"/></operator><name pos:line="71" pos:column="48">next<pos:position pos:line="71" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="71" pos:column="53"/></control>
				<block type="pseudo"><if pos:line="72" pos:column="33">if <condition pos:line="72" pos:column="36">(<expr><operator pos:line="72" pos:column="37">!<pos:position pos:line="72" pos:column="38"/></operator><call><name pos:line="72" pos:column="38">is_null_oid<pos:position pos:line="72" pos:column="49"/></name><argument_list pos:line="72" pos:column="49">(<argument><expr><operator pos:line="72" pos:column="50">&amp;<pos:position pos:line="72" pos:column="55"/></operator><name><name pos:line="72" pos:column="51">ref<pos:position pos:line="72" pos:column="54"/></name><operator pos:line="72" pos:column="54">-&gt;<pos:position pos:line="72" pos:column="59"/></operator><name pos:line="72" pos:column="56">new_oid<pos:position pos:line="72" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="64"/></argument_list></call> <operator pos:line="72" pos:column="65">&amp;&amp;<pos:position pos:line="72" pos:column="75"/></operator>
				    <call><name pos:line="73" pos:column="37">find_unpushed_submodules<pos:position pos:line="73" pos:column="61"/></name><argument_list pos:line="73" pos:column="61">(<argument><expr><name><name pos:line="73" pos:column="62">ref<pos:position pos:line="73" pos:column="65"/></name><operator pos:line="73" pos:column="65">-&gt;<pos:position pos:line="73" pos:column="70"/></operator><name pos:line="73" pos:column="67">new_oid<pos:position pos:line="73" pos:column="74"/></name><operator pos:line="73" pos:column="74">.<pos:position pos:line="73" pos:column="75"/></operator><name pos:line="73" pos:column="75">hash<pos:position pos:line="73" pos:column="79"/></name></name></expr></argument>,
					    <argument><expr><name><name pos:line="74" pos:column="45">transport<pos:position pos:line="74" pos:column="54"/></name><operator pos:line="74" pos:column="54">-&gt;<pos:position pos:line="74" pos:column="59"/></operator><name pos:line="74" pos:column="56">remote<pos:position pos:line="74" pos:column="62"/></name><operator pos:line="74" pos:column="62">-&gt;<pos:position pos:line="74" pos:column="67"/></operator><name pos:line="74" pos:column="64">name<pos:position pos:line="74" pos:column="68"/></name></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="70">&amp;<pos:position pos:line="74" pos:column="75"/></operator><name pos:line="74" pos:column="71">needs_pushing<pos:position pos:line="74" pos:column="84"/></name></expr></argument>)<pos:position pos:line="74" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="86"/></condition><then pos:line="74" pos:column="86">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="41">die_with_unpushed_submodules<pos:position pos:line="75" pos:column="69"/></name><argument_list pos:line="75" pos:column="69">(<argument><expr><operator pos:line="75" pos:column="70">&amp;<pos:position pos:line="75" pos:column="75"/></operator><name pos:line="75" pos:column="71">needs_pushing<pos:position pos:line="75" pos:column="84"/></name></expr></argument>)<pos:position pos:line="75" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="86"/></expr_stmt></block></then></if></block></for>
		}<pos:position pos:line="76" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="78" pos:column="17">push_ret<pos:position pos:line="78" pos:column="25"/></name> <operator pos:line="78" pos:column="26">=<pos:position pos:line="78" pos:column="27"/></operator> <call><name><name pos:line="78" pos:column="28">transport<pos:position pos:line="78" pos:column="37"/></name><operator pos:line="78" pos:column="37">-&gt;<pos:position pos:line="78" pos:column="42"/></operator><name pos:line="78" pos:column="39">push_refs<pos:position pos:line="78" pos:column="48"/></name></name><argument_list pos:line="78" pos:column="48">(<argument><expr><name pos:line="78" pos:column="49">transport<pos:position pos:line="78" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="60">remote_refs<pos:position pos:line="78" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="73">flags<pos:position pos:line="78" pos:column="78"/></name></expr></argument>)<pos:position pos:line="78" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><name pos:line="79" pos:column="17">err<pos:position pos:line="79" pos:column="20"/></name> <operator pos:line="79" pos:column="21">=<pos:position pos:line="79" pos:column="22"/></operator> <call><name pos:line="79" pos:column="23">push_had_errors<pos:position pos:line="79" pos:column="38"/></name><argument_list pos:line="79" pos:column="38">(<argument><expr><name pos:line="79" pos:column="39">remote_refs<pos:position pos:line="79" pos:column="50"/></name></expr></argument>)<pos:position pos:line="79" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name pos:line="80" pos:column="17">ret<pos:position pos:line="80" pos:column="20"/></name> <operator pos:line="80" pos:column="21">=<pos:position pos:line="80" pos:column="22"/></operator> <name pos:line="80" pos:column="23">push_ret<pos:position pos:line="80" pos:column="31"/></name> <operator pos:line="80" pos:column="32">|<pos:position pos:line="80" pos:column="33"/></operator> <name pos:line="80" pos:column="34">err<pos:position pos:line="80" pos:column="37"/></name></expr>;<pos:position pos:line="80" pos:column="38"/></expr_stmt>

		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><operator pos:line="82" pos:column="21">!<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="22">quiet<pos:position pos:line="82" pos:column="27"/></name> <operator pos:line="82" pos:column="28">||<pos:position pos:line="82" pos:column="30"/></operator> <name pos:line="82" pos:column="31">err<pos:position pos:line="82" pos:column="34"/></name></expr>)<pos:position pos:line="82" pos:column="35"/></condition><then pos:line="82" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="25">transport_print_push_status<pos:position pos:line="83" pos:column="52"/></name><argument_list pos:line="83" pos:column="52">(<argument><expr><name><name pos:line="83" pos:column="53">transport<pos:position pos:line="83" pos:column="62"/></name><operator pos:line="83" pos:column="62">-&gt;<pos:position pos:line="83" pos:column="67"/></operator><name pos:line="83" pos:column="64">url<pos:position pos:line="83" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="69">remote_refs<pos:position pos:line="83" pos:column="80"/></name></expr></argument>,
					<argument><expr><name pos:line="84" pos:column="41">verbose<pos:position pos:line="84" pos:column="48"/></name> <operator pos:line="84" pos:column="49">|<pos:position pos:line="84" pos:column="50"/></operator> <name pos:line="84" pos:column="51">porcelain<pos:position pos:line="84" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="62">porcelain<pos:position pos:line="84" pos:column="71"/></name></expr></argument>,
					<argument><expr><name pos:line="85" pos:column="41">reject_reasons<pos:position pos:line="85" pos:column="55"/></name></expr></argument>)<pos:position pos:line="85" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="57"/></expr_stmt></block></then></if>

		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><name pos:line="87" pos:column="21">flags<pos:position pos:line="87" pos:column="26"/></name> <operator pos:line="87" pos:column="27">&amp;<pos:position pos:line="87" pos:column="32"/></operator> <name pos:line="87" pos:column="29">TRANSPORT_PUSH_SET_UPSTREAM<pos:position pos:line="87" pos:column="56"/></name></expr>)<pos:position pos:line="87" pos:column="57"/></condition><then pos:line="87" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="25">set_upstreams<pos:position pos:line="88" pos:column="38"/></name><argument_list pos:line="88" pos:column="38">(<argument><expr><name pos:line="88" pos:column="39">transport<pos:position pos:line="88" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="50">remote_refs<pos:position pos:line="88" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="63">pretend<pos:position pos:line="88" pos:column="70"/></name></expr></argument>)<pos:position pos:line="88" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="72"/></expr_stmt></block></then></if>

		<if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><operator pos:line="90" pos:column="21">!<pos:position pos:line="90" pos:column="22"/></operator><operator pos:line="90" pos:column="22">(<pos:position pos:line="90" pos:column="23"/></operator><name pos:line="90" pos:column="23">flags<pos:position pos:line="90" pos:column="28"/></name> <operator pos:line="90" pos:column="29">&amp;<pos:position pos:line="90" pos:column="34"/></operator> <name pos:line="90" pos:column="31">TRANSPORT_PUSH_DRY_RUN<pos:position pos:line="90" pos:column="53"/></name><operator pos:line="90" pos:column="53">)<pos:position pos:line="90" pos:column="54"/></operator></expr>)<pos:position pos:line="90" pos:column="55"/></condition><then pos:line="90" pos:column="55"> <block pos:line="90" pos:column="56">{
			<decl_stmt><decl><type><name><name pos:line="91" pos:column="25">struct<pos:position pos:line="91" pos:column="31"/></name> <name pos:line="91" pos:column="32">ref<pos:position pos:line="91" pos:column="35"/></name></name> <modifier pos:line="91" pos:column="36">*<pos:position pos:line="91" pos:column="37"/></modifier></type><name pos:line="91" pos:column="37">ref<pos:position pos:line="91" pos:column="40"/></name></decl>;<pos:position pos:line="91" pos:column="41"/></decl_stmt>
			<for pos:line="92" pos:column="25">for <control pos:line="92" pos:column="29">(<init><expr><name pos:line="92" pos:column="30">ref<pos:position pos:line="92" pos:column="33"/></name> <operator pos:line="92" pos:column="34">=<pos:position pos:line="92" pos:column="35"/></operator> <name pos:line="92" pos:column="36">remote_refs<pos:position pos:line="92" pos:column="47"/></name></expr>;<pos:position pos:line="92" pos:column="48"/></init> <condition><expr><name pos:line="92" pos:column="49">ref<pos:position pos:line="92" pos:column="52"/></name></expr>;<pos:position pos:line="92" pos:column="53"/></condition> <incr><expr><name pos:line="92" pos:column="54">ref<pos:position pos:line="92" pos:column="57"/></name> <operator pos:line="92" pos:column="58">=<pos:position pos:line="92" pos:column="59"/></operator> <name><name pos:line="92" pos:column="60">ref<pos:position pos:line="92" pos:column="63"/></name><operator pos:line="92" pos:column="63">-&gt;<pos:position pos:line="92" pos:column="68"/></operator><name pos:line="92" pos:column="65">next<pos:position pos:line="92" pos:column="69"/></name></name></expr></incr>)<pos:position pos:line="92" pos:column="70"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="33">transport_update_tracking_ref<pos:position pos:line="93" pos:column="62"/></name><argument_list pos:line="93" pos:column="62">(<argument><expr><name><name pos:line="93" pos:column="63">transport<pos:position pos:line="93" pos:column="72"/></name><operator pos:line="93" pos:column="72">-&gt;<pos:position pos:line="93" pos:column="77"/></operator><name pos:line="93" pos:column="74">remote<pos:position pos:line="93" pos:column="80"/></name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="82">ref<pos:position pos:line="93" pos:column="85"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="87">verbose<pos:position pos:line="93" pos:column="94"/></name></expr></argument>)<pos:position pos:line="93" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="96"/></expr_stmt></block></for>
		}<pos:position pos:line="94" pos:column="18"/></block></then></if>

		<if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><name pos:line="96" pos:column="21">porcelain<pos:position pos:line="96" pos:column="30"/></name> <operator pos:line="96" pos:column="31">&amp;&amp;<pos:position pos:line="96" pos:column="41"/></operator> <operator pos:line="96" pos:column="34">!<pos:position pos:line="96" pos:column="35"/></operator><name pos:line="96" pos:column="35">push_ret<pos:position pos:line="96" pos:column="43"/></name></expr>)<pos:position pos:line="96" pos:column="44"/></condition><then pos:line="96" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="97" pos:column="25">puts<pos:position pos:line="97" pos:column="29"/></name><argument_list pos:line="97" pos:column="29">(<argument><expr><literal type="string" pos:line="97" pos:column="30">"Done"<pos:position pos:line="97" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="38"/></expr_stmt></block></then>
		<elseif pos:line="98" pos:column="17">else <if pos:line="98" pos:column="22">if <condition pos:line="98" pos:column="25">(<expr><operator pos:line="98" pos:column="26">!<pos:position pos:line="98" pos:column="27"/></operator><name pos:line="98" pos:column="27">quiet<pos:position pos:line="98" pos:column="32"/></name> <operator pos:line="98" pos:column="33">&amp;&amp;<pos:position pos:line="98" pos:column="43"/></operator> <operator pos:line="98" pos:column="36">!<pos:position pos:line="98" pos:column="37"/></operator><name pos:line="98" pos:column="37">ret<pos:position pos:line="98" pos:column="40"/></name> <operator pos:line="98" pos:column="41">&amp;&amp;<pos:position pos:line="98" pos:column="51"/></operator> <operator pos:line="98" pos:column="44">!<pos:position pos:line="98" pos:column="45"/></operator><call><name pos:line="98" pos:column="45">transport_refs_pushed<pos:position pos:line="98" pos:column="66"/></name><argument_list pos:line="98" pos:column="66">(<argument><expr><name pos:line="98" pos:column="67">remote_refs<pos:position pos:line="98" pos:column="78"/></name></expr></argument>)<pos:position pos:line="98" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="80"/></condition><then pos:line="98" pos:column="80">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="25">fprintf<pos:position pos:line="99" pos:column="32"/></name><argument_list pos:line="99" pos:column="32">(<argument><expr><name pos:line="99" pos:column="33">stderr<pos:position pos:line="99" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="41">"Everything up-to-date\n"<pos:position pos:line="99" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="68"/></expr_stmt></block></then></if></elseif></if>

		<return pos:line="101" pos:column="17">return <expr><name pos:line="101" pos:column="24">ret<pos:position pos:line="101" pos:column="27"/></name></expr>;<pos:position pos:line="101" pos:column="28"/></return>
	}<pos:position pos:line="102" pos:column="10"/></block></then></if></elseif></if>
	<return pos:line="103" pos:column="9">return <expr><literal type="number" pos:line="103" pos:column="16">1<pos:position pos:line="103" pos:column="17"/></literal></expr>;<pos:position pos:line="103" pos:column="18"/></return>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

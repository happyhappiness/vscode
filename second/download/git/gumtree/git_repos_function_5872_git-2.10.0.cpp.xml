<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5872_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">ref_iterator<pos:position pos:line="1" pos:column="27"/></name></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">cache_ref_iterator_begin<pos:position pos:line="1" pos:column="53"/></name><parameter_list pos:line="1" pos:column="53">(<parameter><decl><type><name><name pos:line="1" pos:column="54">struct<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">ref_dir<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">dir<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">cache_ref_iterator<pos:position pos:line="3" pos:column="34"/></name></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">iter<pos:position pos:line="3" pos:column="40"/></name></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ref_iterator<pos:position pos:line="4" pos:column="28"/></name></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">ref_iterator<pos:position pos:line="4" pos:column="42"/></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">cache_ref_iterator_level<pos:position pos:line="5" pos:column="40"/></name></name> <modifier pos:line="5" pos:column="41">*<pos:position pos:line="5" pos:column="42"/></modifier></type><name pos:line="5" pos:column="42">level<pos:position pos:line="5" pos:column="47"/></name></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">iter<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <call><name pos:line="7" pos:column="16">xcalloc<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><literal type="number" pos:line="7" pos:column="24">1<pos:position pos:line="7" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="27">sizeof<argument_list pos:line="7" pos:column="33">(<argument><expr><operator pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">iter<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">ref_iterator<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <operator pos:line="8" pos:column="24">&amp;<pos:position pos:line="8" pos:column="29"/></operator><name><name pos:line="8" pos:column="25">iter<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">base<pos:position pos:line="8" pos:column="35"/></name></name></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">base_ref_iterator_init<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">ref_iterator<pos:position pos:line="9" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="46">&amp;<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="47">cache_ref_iterator_vtable<pos:position pos:line="9" pos:column="72"/></name></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">ALLOC_GROW<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name><name pos:line="10" pos:column="20">iter<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">levels<pos:position pos:line="10" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="34">10<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="38">iter<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">levels_alloc<pos:position pos:line="10" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="12" pos:column="9">iter<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">levels_nr<pos:position pos:line="12" pos:column="24"/></name></name> <operator pos:line="12" pos:column="25">=<pos:position pos:line="12" pos:column="26"/></operator> <literal type="number" pos:line="12" pos:column="27">1<pos:position pos:line="12" pos:column="28"/></literal></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">level<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <operator pos:line="13" pos:column="17">&amp;<pos:position pos:line="13" pos:column="22"/></operator><name><name pos:line="13" pos:column="18">iter<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">levels<pos:position pos:line="13" pos:column="30"/></name><index pos:line="13" pos:column="30">[<expr><literal type="number" pos:line="13" pos:column="31">0<pos:position pos:line="13" pos:column="32"/></literal></expr>]<pos:position pos:line="13" pos:column="33"/></index></name></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">level<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">index<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">level<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">dir<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="22">dir<pos:position pos:line="15" pos:column="25"/></name></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>

	<return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">ref_iterator<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

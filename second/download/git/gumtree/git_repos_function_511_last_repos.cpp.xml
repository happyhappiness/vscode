<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_511_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">setup_scoreboard<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">blame_scoreboard<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">sb<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">path<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="70">struct<pos:position pos:line="1" pos:column="76"/></name> <name pos:line="1" pos:column="77">blame_origin<pos:position pos:line="1" pos:column="89"/></name></name> <modifier pos:line="1" pos:column="90">*<pos:position pos:line="1" pos:column="91"/></modifier><modifier pos:line="1" pos:column="91">*<pos:position pos:line="1" pos:column="92"/></modifier></type><name pos:line="1" pos:column="92">orig<pos:position pos:line="1" pos:column="96"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="97"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">final_commit_name<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">= <expr><name pos:line="3" pos:column="41">NULL<pos:position pos:line="3" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">blame_origin<pos:position pos:line="4" pos:column="28"/></name></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">o<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">final_commit<pos:position pos:line="5" pos:column="36"/></name> <init pos:line="5" pos:column="37">= <expr><name pos:line="5" pos:column="39">NULL<pos:position pos:line="5" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">enum<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">object_type<pos:position pos:line="6" pos:column="25"/></name></name></type> <name pos:line="6" pos:column="26">type<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">sb<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">reverse<pos:position pos:line="8" pos:column="24"/></name></name> <operator pos:line="8" pos:column="25">&amp;&amp;<pos:position pos:line="8" pos:column="35"/></operator> <name><name pos:line="8" pos:column="28">sb<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-&gt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="32">contents_from<pos:position pos:line="8" pos:column="45"/></name></name></expr>)<pos:position pos:line="8" pos:column="46"/></condition><then pos:line="8" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">die<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><call><name pos:line="9" pos:column="21">_<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><literal type="string" pos:line="9" pos:column="23">"--contents and --reverse do not blend well."<pos:position pos:line="9" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></expr_stmt></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="14">sb<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">reverse<pos:position pos:line="11" pos:column="25"/></name></name></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26"> <block pos:line="11" pos:column="27">{
		<expr_stmt><expr><name><name pos:line="12" pos:column="17">sb<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">final<pos:position pos:line="12" pos:column="26"/></name></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <call><name pos:line="12" pos:column="29">find_single_final<pos:position pos:line="12" pos:column="46"/></name><argument_list pos:line="12" pos:column="46">(<argument><expr><name><name pos:line="12" pos:column="47">sb<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">revs<pos:position pos:line="12" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="57">&amp;<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="58">final_commit_name<pos:position pos:line="12" pos:column="75"/></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="13" pos:column="17">sb<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">commits<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">.<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">compare<pos:position pos:line="13" pos:column="36"/></name></name> <operator pos:line="13" pos:column="37">=<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="39">compare_commits_by_commit_date<pos:position pos:line="13" pos:column="69"/></name></expr>;<pos:position pos:line="13" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then> <else pos:line="14" pos:column="11">else <block pos:line="14" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">sb<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">-&gt;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="21">final<pos:position pos:line="15" pos:column="26"/></name></name> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <call><name pos:line="15" pos:column="29">find_single_initial<pos:position pos:line="15" pos:column="48"/></name><argument_list pos:line="15" pos:column="48">(<argument><expr><name><name pos:line="15" pos:column="49">sb<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">revs<pos:position pos:line="15" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="59">&amp;<pos:position pos:line="15" pos:column="64"/></operator><name pos:line="15" pos:column="60">final_commit_name<pos:position pos:line="15" pos:column="77"/></name></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">sb<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">commits<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">.<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">compare<pos:position pos:line="16" pos:column="36"/></name></name> <operator pos:line="16" pos:column="37">=<pos:position pos:line="16" pos:column="38"/></operator> <name pos:line="16" pos:column="39">compare_commits_by_reverse_commit_date<pos:position pos:line="16" pos:column="77"/></name></expr>;<pos:position pos:line="16" pos:column="78"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></else></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">sb<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">final<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">&amp;&amp;<pos:position pos:line="19" pos:column="33"/></operator> <name><name pos:line="19" pos:column="26">sb<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">contents_from<pos:position pos:line="19" pos:column="43"/></name></name></expr>)<pos:position pos:line="19" pos:column="44"/></condition><then pos:line="19" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">die<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><call><name pos:line="20" pos:column="21">_<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><literal type="string" pos:line="20" pos:column="23">"cannot use --contents with final commit object name"<pos:position pos:line="20" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="79"/></expr_stmt></block></then></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">sb<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">reverse<pos:position pos:line="22" pos:column="24"/></name></name> <operator pos:line="22" pos:column="25">&amp;&amp;<pos:position pos:line="22" pos:column="35"/></operator> <name><name pos:line="22" pos:column="28">sb<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">revs<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">first_parent_only<pos:position pos:line="22" pos:column="55"/></name></name></expr>)<pos:position pos:line="22" pos:column="56"/></condition><then pos:line="22" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="17">sb<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">revs<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">-&gt;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="27">children<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">.<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="36">name<pos:position pos:line="23" pos:column="40"/></name></name> <operator pos:line="23" pos:column="41">=<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="43">NULL<pos:position pos:line="23" pos:column="47"/></name></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt></block></then></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><name><name pos:line="25" pos:column="14">sb<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">final<pos:position pos:line="25" pos:column="23"/></name></name></expr>)<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24"> <block pos:line="25" pos:column="25">{
		<comment type="block" pos:line="26" pos:column="17">/*
		 * "--not A B -- path" without anything positive;
		 * do not default to HEAD, but use the working tree
		 * or "--contents".
		 */</comment>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">setup_work_tree<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">()<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">sb<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">-&gt;<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="21">final<pos:position pos:line="32" pos:column="26"/></name></name> <operator pos:line="32" pos:column="27">=<pos:position pos:line="32" pos:column="28"/></operator> <call><name pos:line="32" pos:column="29">fake_working_tree_commit<pos:position pos:line="32" pos:column="53"/></name><argument_list pos:line="32" pos:column="53">(<argument><expr><operator pos:line="32" pos:column="54">&amp;<pos:position pos:line="32" pos:column="59"/></operator><name><name pos:line="32" pos:column="55">sb<pos:position pos:line="32" pos:column="57"/></name><operator pos:line="32" pos:column="57">-&gt;<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="59">revs<pos:position pos:line="32" pos:column="63"/></name><operator pos:line="32" pos:column="63">-&gt;<pos:position pos:line="32" pos:column="68"/></operator><name pos:line="32" pos:column="65">diffopt<pos:position pos:line="32" pos:column="72"/></name></name></expr></argument>,
						     <argument><expr><name pos:line="33" pos:column="54">path<pos:position pos:line="33" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="60">sb<pos:position pos:line="33" pos:column="62"/></name><operator pos:line="33" pos:column="62">-&gt;<pos:position pos:line="33" pos:column="67"/></operator><name pos:line="33" pos:column="64">contents_from<pos:position pos:line="33" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">add_pending_object<pos:position pos:line="34" pos:column="35"/></name><argument_list pos:line="34" pos:column="35">(<argument><expr><name><name pos:line="34" pos:column="36">sb<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">-&gt;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="40">revs<pos:position pos:line="34" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="46">&amp;<pos:position pos:line="34" pos:column="51"/></operator><operator pos:line="34" pos:column="47">(<pos:position pos:line="34" pos:column="48"/></operator><name><name pos:line="34" pos:column="48">sb<pos:position pos:line="34" pos:column="50"/></name><operator pos:line="34" pos:column="50">-&gt;<pos:position pos:line="34" pos:column="55"/></operator><name pos:line="34" pos:column="52">final<pos:position pos:line="34" pos:column="57"/></name><operator pos:line="34" pos:column="57">-&gt;<pos:position pos:line="34" pos:column="62"/></operator><name pos:line="34" pos:column="59">object<pos:position pos:line="34" pos:column="65"/></name></name><operator pos:line="34" pos:column="65">)<pos:position pos:line="34" pos:column="66"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="68">":"<pos:position pos:line="34" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name><name pos:line="37" pos:column="13">sb<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">-&gt;<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="17">reverse<pos:position pos:line="37" pos:column="24"/></name></name> <operator pos:line="37" pos:column="25">&amp;&amp;<pos:position pos:line="37" pos:column="35"/></operator> <name><name pos:line="37" pos:column="28">sb<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">-&gt;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="32">revs<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">-&gt;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="38">first_parent_only<pos:position pos:line="37" pos:column="55"/></name></name></expr>)<pos:position pos:line="37" pos:column="56"/></condition><then pos:line="37" pos:column="56"> <block pos:line="37" pos:column="57">{
		<expr_stmt><expr><name pos:line="38" pos:column="17">final_commit<pos:position pos:line="38" pos:column="29"/></name> <operator pos:line="38" pos:column="30">=<pos:position pos:line="38" pos:column="31"/></operator> <call><name pos:line="38" pos:column="32">find_single_final<pos:position pos:line="38" pos:column="49"/></name><argument_list pos:line="38" pos:column="49">(<argument><expr><name><name pos:line="38" pos:column="50">sb<pos:position pos:line="38" pos:column="52"/></name><operator pos:line="38" pos:column="52">-&gt;<pos:position pos:line="38" pos:column="57"/></operator><name pos:line="38" pos:column="54">revs<pos:position pos:line="38" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="60">NULL<pos:position pos:line="38" pos:column="64"/></name></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="66"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">!<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">final_commit<pos:position pos:line="39" pos:column="34"/></name></expr>)<pos:position pos:line="39" pos:column="35"/></condition><then pos:line="39" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="25">die<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><call><name pos:line="40" pos:column="29">_<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><literal type="string" pos:line="40" pos:column="31">"--reverse and --first-parent together require specified latest commit"<pos:position pos:line="40" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="103"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="105"/></expr_stmt></block></then></if>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="43" pos:column="9">/*
	 * If we have bottom, this will mark the ancestors of the
	 * bottom commits we would reach while traversing as
	 * uninteresting.
	 */</comment>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><call><name pos:line="48" pos:column="13">prepare_revision_walk<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><name><name pos:line="48" pos:column="35">sb<pos:position pos:line="48" pos:column="37"/></name><operator pos:line="48" pos:column="37">-&gt;<pos:position pos:line="48" pos:column="42"/></operator><name pos:line="48" pos:column="39">revs<pos:position pos:line="48" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="45"/></condition><then pos:line="48" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="17">die<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><call><name pos:line="49" pos:column="21">_<pos:position pos:line="49" pos:column="22"/></name><argument_list pos:line="49" pos:column="22">(<argument><expr><literal type="string" pos:line="49" pos:column="23">"revision walk setup failed"<pos:position pos:line="49" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="54"/></expr_stmt></block></then></if>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">sb<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">-&gt;<pos:position pos:line="51" pos:column="20"/></operator><name pos:line="51" pos:column="17">reverse<pos:position pos:line="51" pos:column="24"/></name></name> <operator pos:line="51" pos:column="25">&amp;&amp;<pos:position pos:line="51" pos:column="35"/></operator> <name><name pos:line="51" pos:column="28">sb<pos:position pos:line="51" pos:column="30"/></name><operator pos:line="51" pos:column="30">-&gt;<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="32">revs<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">-&gt;<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="38">first_parent_only<pos:position pos:line="51" pos:column="55"/></name></name></expr>)<pos:position pos:line="51" pos:column="56"/></condition><then pos:line="51" pos:column="56"> <block pos:line="51" pos:column="57">{
		<decl_stmt><decl><type><name><name pos:line="52" pos:column="17">struct<pos:position pos:line="52" pos:column="23"/></name> <name pos:line="52" pos:column="24">commit<pos:position pos:line="52" pos:column="30"/></name></name> <modifier pos:line="52" pos:column="31">*<pos:position pos:line="52" pos:column="32"/></modifier></type><name pos:line="52" pos:column="32">c<pos:position pos:line="52" pos:column="33"/></name> <init pos:line="52" pos:column="34">= <expr><name pos:line="52" pos:column="36">final_commit<pos:position pos:line="52" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="52" pos:column="49"/></decl_stmt>

		<expr_stmt><expr><name><name pos:line="54" pos:column="17">sb<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">-&gt;<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="21">revs<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">-&gt;<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="27">children<pos:position pos:line="54" pos:column="35"/></name><operator pos:line="54" pos:column="35">.<pos:position pos:line="54" pos:column="36"/></operator><name pos:line="54" pos:column="36">name<pos:position pos:line="54" pos:column="40"/></name></name> <operator pos:line="54" pos:column="41">=<pos:position pos:line="54" pos:column="42"/></operator> <literal type="string" pos:line="54" pos:column="43">"children"<pos:position pos:line="54" pos:column="53"/></literal></expr>;<pos:position pos:line="54" pos:column="54"/></expr_stmt>
		<while pos:line="55" pos:column="17">while <condition pos:line="55" pos:column="23">(<expr><name><name pos:line="55" pos:column="24">c<pos:position pos:line="55" pos:column="25"/></name><operator pos:line="55" pos:column="25">-&gt;<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="27">parents<pos:position pos:line="55" pos:column="34"/></name></name> <operator pos:line="55" pos:column="35">&amp;&amp;<pos:position pos:line="55" pos:column="45"/></operator>
		       <call><name pos:line="56" pos:column="24">oidcmp<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><operator pos:line="56" pos:column="31">&amp;<pos:position pos:line="56" pos:column="36"/></operator><name><name pos:line="56" pos:column="32">c<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">-&gt;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="35">object<pos:position pos:line="56" pos:column="41"/></name><operator pos:line="56" pos:column="41">.<pos:position pos:line="56" pos:column="42"/></operator><name pos:line="56" pos:column="42">oid<pos:position pos:line="56" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="47">&amp;<pos:position pos:line="56" pos:column="52"/></operator><name><name pos:line="56" pos:column="48">sb<pos:position pos:line="56" pos:column="50"/></name><operator pos:line="56" pos:column="50">-&gt;<pos:position pos:line="56" pos:column="55"/></operator><name pos:line="56" pos:column="52">final<pos:position pos:line="56" pos:column="57"/></name><operator pos:line="56" pos:column="57">-&gt;<pos:position pos:line="56" pos:column="62"/></operator><name pos:line="56" pos:column="59">object<pos:position pos:line="56" pos:column="65"/></name><operator pos:line="56" pos:column="65">.<pos:position pos:line="56" pos:column="66"/></operator><name pos:line="56" pos:column="66">oid<pos:position pos:line="56" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="71"/></condition> <block pos:line="56" pos:column="72">{
			<decl_stmt><decl><type><name><name pos:line="57" pos:column="25">struct<pos:position pos:line="57" pos:column="31"/></name> <name pos:line="57" pos:column="32">commit_list<pos:position pos:line="57" pos:column="43"/></name></name> <modifier pos:line="57" pos:column="44">*<pos:position pos:line="57" pos:column="45"/></modifier></type><name pos:line="57" pos:column="45">l<pos:position pos:line="57" pos:column="46"/></name> <init pos:line="57" pos:column="47">= <expr><call><name pos:line="57" pos:column="49">xcalloc<pos:position pos:line="57" pos:column="56"/></name><argument_list pos:line="57" pos:column="56">(<argument><expr><literal type="number" pos:line="57" pos:column="57">1<pos:position pos:line="57" pos:column="58"/></literal></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="60">sizeof<argument_list pos:line="57" pos:column="66">(<argument><expr><operator pos:line="57" pos:column="67">*<pos:position pos:line="57" pos:column="68"/></operator><name pos:line="57" pos:column="68">l<pos:position pos:line="57" pos:column="69"/></name></expr></argument>)<pos:position pos:line="57" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="57" pos:column="72"/></decl_stmt>

			<expr_stmt><expr><name><name pos:line="59" pos:column="25">l<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">-&gt;<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="28">item<pos:position pos:line="59" pos:column="32"/></name></name> <operator pos:line="59" pos:column="33">=<pos:position pos:line="59" pos:column="34"/></operator> <name pos:line="59" pos:column="35">c<pos:position pos:line="59" pos:column="36"/></name></expr>;<pos:position pos:line="59" pos:column="37"/></expr_stmt>
			<if pos:line="60" pos:column="25">if <condition pos:line="60" pos:column="28">(<expr><call><name pos:line="60" pos:column="29">add_decoration<pos:position pos:line="60" pos:column="43"/></name><argument_list pos:line="60" pos:column="43">(<argument><expr><operator pos:line="60" pos:column="44">&amp;<pos:position pos:line="60" pos:column="49"/></operator><name><name pos:line="60" pos:column="45">sb<pos:position pos:line="60" pos:column="47"/></name><operator pos:line="60" pos:column="47">-&gt;<pos:position pos:line="60" pos:column="52"/></operator><name pos:line="60" pos:column="49">revs<pos:position pos:line="60" pos:column="53"/></name><operator pos:line="60" pos:column="53">-&gt;<pos:position pos:line="60" pos:column="58"/></operator><name pos:line="60" pos:column="55">children<pos:position pos:line="60" pos:column="63"/></name></name></expr></argument>,
					   <argument><expr><operator pos:line="61" pos:column="44">&amp;<pos:position pos:line="61" pos:column="49"/></operator><name><name pos:line="61" pos:column="45">c<pos:position pos:line="61" pos:column="46"/></name><operator pos:line="61" pos:column="46">-&gt;<pos:position pos:line="61" pos:column="51"/></operator><name pos:line="61" pos:column="48">parents<pos:position pos:line="61" pos:column="55"/></name><operator pos:line="61" pos:column="55">-&gt;<pos:position pos:line="61" pos:column="60"/></operator><name pos:line="61" pos:column="57">item<pos:position pos:line="61" pos:column="61"/></name><operator pos:line="61" pos:column="61">-&gt;<pos:position pos:line="61" pos:column="66"/></operator><name pos:line="61" pos:column="63">object<pos:position pos:line="61" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="71">l<pos:position pos:line="61" pos:column="72"/></name></expr></argument>)<pos:position pos:line="61" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="74"/></condition><then pos:line="61" pos:column="74">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="33">die<pos:position pos:line="62" pos:column="36"/></name><argument_list pos:line="62" pos:column="36">(<argument><expr><literal type="string" pos:line="62" pos:column="37">"BUG: not unique item in first-parent chain"<pos:position pos:line="62" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="83"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="63" pos:column="25">c<pos:position pos:line="63" pos:column="26"/></name> <operator pos:line="63" pos:column="27">=<pos:position pos:line="63" pos:column="28"/></operator> <name><name pos:line="63" pos:column="29">c<pos:position pos:line="63" pos:column="30"/></name><operator pos:line="63" pos:column="30">-&gt;<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="32">parents<pos:position pos:line="63" pos:column="39"/></name><operator pos:line="63" pos:column="39">-&gt;<pos:position pos:line="63" pos:column="44"/></operator><name pos:line="63" pos:column="41">item<pos:position pos:line="63" pos:column="45"/></name></name></expr>;<pos:position pos:line="63" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></while>

		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><call><name pos:line="66" pos:column="21">oidcmp<pos:position pos:line="66" pos:column="27"/></name><argument_list pos:line="66" pos:column="27">(<argument><expr><operator pos:line="66" pos:column="28">&amp;<pos:position pos:line="66" pos:column="33"/></operator><name><name pos:line="66" pos:column="29">c<pos:position pos:line="66" pos:column="30"/></name><operator pos:line="66" pos:column="30">-&gt;<pos:position pos:line="66" pos:column="35"/></operator><name pos:line="66" pos:column="32">object<pos:position pos:line="66" pos:column="38"/></name><operator pos:line="66" pos:column="38">.<pos:position pos:line="66" pos:column="39"/></operator><name pos:line="66" pos:column="39">oid<pos:position pos:line="66" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="44">&amp;<pos:position pos:line="66" pos:column="49"/></operator><name><name pos:line="66" pos:column="45">sb<pos:position pos:line="66" pos:column="47"/></name><operator pos:line="66" pos:column="47">-&gt;<pos:position pos:line="66" pos:column="52"/></operator><name pos:line="66" pos:column="49">final<pos:position pos:line="66" pos:column="54"/></name><operator pos:line="66" pos:column="54">-&gt;<pos:position pos:line="66" pos:column="59"/></operator><name pos:line="66" pos:column="56">object<pos:position pos:line="66" pos:column="62"/></name><operator pos:line="66" pos:column="62">.<pos:position pos:line="66" pos:column="63"/></operator><name pos:line="66" pos:column="63">oid<pos:position pos:line="66" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="68"/></condition><then pos:line="66" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="25">die<pos:position pos:line="67" pos:column="28"/></name><argument_list pos:line="67" pos:column="28">(<argument><expr><call><name pos:line="67" pos:column="29">_<pos:position pos:line="67" pos:column="30"/></name><argument_list pos:line="67" pos:column="30">(<argument><expr><literal type="string" pos:line="67" pos:column="31">"--reverse --first-parent together require range along first-parent chain"<pos:position pos:line="67" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="106"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="108"/></expr_stmt></block></then></if>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if>

	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><call><name pos:line="70" pos:column="13">is_null_oid<pos:position pos:line="70" pos:column="24"/></name><argument_list pos:line="70" pos:column="24">(<argument><expr><operator pos:line="70" pos:column="25">&amp;<pos:position pos:line="70" pos:column="30"/></operator><name><name pos:line="70" pos:column="26">sb<pos:position pos:line="70" pos:column="28"/></name><operator pos:line="70" pos:column="28">-&gt;<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="30">final<pos:position pos:line="70" pos:column="35"/></name><operator pos:line="70" pos:column="35">-&gt;<pos:position pos:line="70" pos:column="40"/></operator><name pos:line="70" pos:column="37">object<pos:position pos:line="70" pos:column="43"/></name><operator pos:line="70" pos:column="43">.<pos:position pos:line="70" pos:column="44"/></operator><name pos:line="70" pos:column="44">oid<pos:position pos:line="70" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="49"/></condition><then pos:line="70" pos:column="49"> <block pos:line="70" pos:column="50">{
		<expr_stmt><expr><name pos:line="71" pos:column="17">o<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">=<pos:position pos:line="71" pos:column="20"/></operator> <name><name pos:line="71" pos:column="21">sb<pos:position pos:line="71" pos:column="23"/></name><operator pos:line="71" pos:column="23">-&gt;<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="25">final<pos:position pos:line="71" pos:column="30"/></name><operator pos:line="71" pos:column="30">-&gt;<pos:position pos:line="71" pos:column="35"/></operator><name pos:line="71" pos:column="32">util<pos:position pos:line="71" pos:column="36"/></name></name></expr>;<pos:position pos:line="71" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="72" pos:column="17">sb<pos:position pos:line="72" pos:column="19"/></name><operator pos:line="72" pos:column="19">-&gt;<pos:position pos:line="72" pos:column="24"/></operator><name pos:line="72" pos:column="21">final_buf<pos:position pos:line="72" pos:column="30"/></name></name> <operator pos:line="72" pos:column="31">=<pos:position pos:line="72" pos:column="32"/></operator> <call><name pos:line="72" pos:column="33">xmemdupz<pos:position pos:line="72" pos:column="41"/></name><argument_list pos:line="72" pos:column="41">(<argument><expr><name><name pos:line="72" pos:column="42">o<pos:position pos:line="72" pos:column="43"/></name><operator pos:line="72" pos:column="43">-&gt;<pos:position pos:line="72" pos:column="48"/></operator><name pos:line="72" pos:column="45">file<pos:position pos:line="72" pos:column="49"/></name><operator pos:line="72" pos:column="49">.<pos:position pos:line="72" pos:column="50"/></operator><name pos:line="72" pos:column="50">ptr<pos:position pos:line="72" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="55">o<pos:position pos:line="72" pos:column="56"/></name><operator pos:line="72" pos:column="56">-&gt;<pos:position pos:line="72" pos:column="61"/></operator><name pos:line="72" pos:column="58">file<pos:position pos:line="72" pos:column="62"/></name><operator pos:line="72" pos:column="62">.<pos:position pos:line="72" pos:column="63"/></operator><name pos:line="72" pos:column="63">size<pos:position pos:line="72" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="73" pos:column="17">sb<pos:position pos:line="73" pos:column="19"/></name><operator pos:line="73" pos:column="19">-&gt;<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="21">final_buf_size<pos:position pos:line="73" pos:column="35"/></name></name> <operator pos:line="73" pos:column="36">=<pos:position pos:line="73" pos:column="37"/></operator> <name><name pos:line="73" pos:column="38">o<pos:position pos:line="73" pos:column="39"/></name><operator pos:line="73" pos:column="39">-&gt;<pos:position pos:line="73" pos:column="44"/></operator><name pos:line="73" pos:column="41">file<pos:position pos:line="73" pos:column="45"/></name><operator pos:line="73" pos:column="45">.<pos:position pos:line="73" pos:column="46"/></operator><name pos:line="73" pos:column="46">size<pos:position pos:line="73" pos:column="50"/></name></name></expr>;<pos:position pos:line="73" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="74" pos:column="10"/></block></then>
	<else pos:line="75" pos:column="9">else <block pos:line="75" pos:column="14">{
		<expr_stmt><expr><name pos:line="76" pos:column="17">o<pos:position pos:line="76" pos:column="18"/></name> <operator pos:line="76" pos:column="19">=<pos:position pos:line="76" pos:column="20"/></operator> <call><name pos:line="76" pos:column="21">get_origin<pos:position pos:line="76" pos:column="31"/></name><argument_list pos:line="76" pos:column="31">(<argument><expr><name><name pos:line="76" pos:column="32">sb<pos:position pos:line="76" pos:column="34"/></name><operator pos:line="76" pos:column="34">-&gt;<pos:position pos:line="76" pos:column="39"/></operator><name pos:line="76" pos:column="36">final<pos:position pos:line="76" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="43">path<pos:position pos:line="76" pos:column="47"/></name></expr></argument>)<pos:position pos:line="76" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="49"/></expr_stmt>
		<if pos:line="77" pos:column="17">if <condition pos:line="77" pos:column="20">(<expr><call><name pos:line="77" pos:column="21">fill_blob_sha1_and_mode<pos:position pos:line="77" pos:column="44"/></name><argument_list pos:line="77" pos:column="44">(<argument><expr><name pos:line="77" pos:column="45">o<pos:position pos:line="77" pos:column="46"/></name></expr></argument>)<pos:position pos:line="77" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="48"/></condition><then pos:line="77" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="25">die<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><call><name pos:line="78" pos:column="29">_<pos:position pos:line="78" pos:column="30"/></name><argument_list pos:line="78" pos:column="30">(<argument><expr><literal type="string" pos:line="78" pos:column="31">"no such path %s in %s"<pos:position pos:line="78" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="78" pos:column="57">path<pos:position pos:line="78" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="63">final_commit_name<pos:position pos:line="78" pos:column="80"/></name></expr></argument>)<pos:position pos:line="78" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="82"/></expr_stmt></block></then></if>

		<if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><call><name pos:line="80" pos:column="21">DIFF_OPT_TST<pos:position pos:line="80" pos:column="33"/></name><argument_list pos:line="80" pos:column="33">(<argument><expr><operator pos:line="80" pos:column="34">&amp;<pos:position pos:line="80" pos:column="39"/></operator><name><name pos:line="80" pos:column="35">sb<pos:position pos:line="80" pos:column="37"/></name><operator pos:line="80" pos:column="37">-&gt;<pos:position pos:line="80" pos:column="42"/></operator><name pos:line="80" pos:column="39">revs<pos:position pos:line="80" pos:column="43"/></name><operator pos:line="80" pos:column="43">-&gt;<pos:position pos:line="80" pos:column="48"/></operator><name pos:line="80" pos:column="45">diffopt<pos:position pos:line="80" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="54">ALLOW_TEXTCONV<pos:position pos:line="80" pos:column="68"/></name></expr></argument>)<pos:position pos:line="80" pos:column="69"/></argument_list></call> <operator pos:line="80" pos:column="70">&amp;&amp;<pos:position pos:line="80" pos:column="80"/></operator>
		    <call><name pos:line="81" pos:column="21">textconv_object<pos:position pos:line="81" pos:column="36"/></name><argument_list pos:line="81" pos:column="36">(<argument><expr><name pos:line="81" pos:column="37">path<pos:position pos:line="81" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="43">o<pos:position pos:line="81" pos:column="44"/></name><operator pos:line="81" pos:column="44">-&gt;<pos:position pos:line="81" pos:column="49"/></operator><name pos:line="81" pos:column="46">mode<pos:position pos:line="81" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="52">&amp;<pos:position pos:line="81" pos:column="57"/></operator><name><name pos:line="81" pos:column="53">o<pos:position pos:line="81" pos:column="54"/></name><operator pos:line="81" pos:column="54">-&gt;<pos:position pos:line="81" pos:column="59"/></operator><name pos:line="81" pos:column="56">blob_oid<pos:position pos:line="81" pos:column="64"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="66">1<pos:position pos:line="81" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="81" pos:column="69">(<pos:position pos:line="81" pos:column="70"/></operator><name pos:line="81" pos:column="70">char<pos:position pos:line="81" pos:column="74"/></name> <operator pos:line="81" pos:column="75">*<pos:position pos:line="81" pos:column="76"/></operator><operator pos:line="81" pos:column="76">*<pos:position pos:line="81" pos:column="77"/></operator><operator pos:line="81" pos:column="77">)<pos:position pos:line="81" pos:column="78"/></operator> <operator pos:line="81" pos:column="79">&amp;<pos:position pos:line="81" pos:column="84"/></operator><name><name pos:line="81" pos:column="80">sb<pos:position pos:line="81" pos:column="82"/></name><operator pos:line="81" pos:column="82">-&gt;<pos:position pos:line="81" pos:column="87"/></operator><name pos:line="81" pos:column="84">final_buf<pos:position pos:line="81" pos:column="93"/></name></name></expr></argument>,
				    <argument><expr><operator pos:line="82" pos:column="37">&amp;<pos:position pos:line="82" pos:column="42"/></operator><name><name pos:line="82" pos:column="38">sb<pos:position pos:line="82" pos:column="40"/></name><operator pos:line="82" pos:column="40">-&gt;<pos:position pos:line="82" pos:column="45"/></operator><name pos:line="82" pos:column="42">final_buf_size<pos:position pos:line="82" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="58"/></condition><then pos:line="82" pos:column="58">
			<block type="pseudo"><empty_stmt pos:line="83" pos:column="25">;<pos:position pos:line="83" pos:column="26"/></empty_stmt></block></then>
		<else pos:line="84" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="85" pos:column="25">sb<pos:position pos:line="85" pos:column="27"/></name><operator pos:line="85" pos:column="27">-&gt;<pos:position pos:line="85" pos:column="32"/></operator><name pos:line="85" pos:column="29">final_buf<pos:position pos:line="85" pos:column="38"/></name></name> <operator pos:line="85" pos:column="39">=<pos:position pos:line="85" pos:column="40"/></operator> <call><name pos:line="85" pos:column="41">read_sha1_file<pos:position pos:line="85" pos:column="55"/></name><argument_list pos:line="85" pos:column="55">(<argument><expr><name><name pos:line="85" pos:column="56">o<pos:position pos:line="85" pos:column="57"/></name><operator pos:line="85" pos:column="57">-&gt;<pos:position pos:line="85" pos:column="62"/></operator><name pos:line="85" pos:column="59">blob_oid<pos:position pos:line="85" pos:column="67"/></name><operator pos:line="85" pos:column="67">.<pos:position pos:line="85" pos:column="68"/></operator><name pos:line="85" pos:column="68">hash<pos:position pos:line="85" pos:column="72"/></name></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="74">&amp;<pos:position pos:line="85" pos:column="79"/></operator><name pos:line="85" pos:column="75">type<pos:position pos:line="85" pos:column="79"/></name></expr></argument>,
						       <argument><expr><operator pos:line="86" pos:column="56">&amp;<pos:position pos:line="86" pos:column="61"/></operator><name><name pos:line="86" pos:column="57">sb<pos:position pos:line="86" pos:column="59"/></name><operator pos:line="86" pos:column="59">-&gt;<pos:position pos:line="86" pos:column="64"/></operator><name pos:line="86" pos:column="61">final_buf_size<pos:position pos:line="86" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="77"/></expr_stmt></block></else></if>

		<if pos:line="88" pos:column="17">if <condition pos:line="88" pos:column="20">(<expr><operator pos:line="88" pos:column="21">!<pos:position pos:line="88" pos:column="22"/></operator><name><name pos:line="88" pos:column="22">sb<pos:position pos:line="88" pos:column="24"/></name><operator pos:line="88" pos:column="24">-&gt;<pos:position pos:line="88" pos:column="29"/></operator><name pos:line="88" pos:column="26">final_buf<pos:position pos:line="88" pos:column="35"/></name></name></expr>)<pos:position pos:line="88" pos:column="36"/></condition><then pos:line="88" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="25">die<pos:position pos:line="89" pos:column="28"/></name><argument_list pos:line="89" pos:column="28">(<argument><expr><call><name pos:line="89" pos:column="29">_<pos:position pos:line="89" pos:column="30"/></name><argument_list pos:line="89" pos:column="30">(<argument><expr><literal type="string" pos:line="89" pos:column="31">"cannot read blob %s for path %s"<pos:position pos:line="89" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="65"/></argument_list></call></expr></argument>,
			    <argument><expr><call><name pos:line="90" pos:column="29">oid_to_hex<pos:position pos:line="90" pos:column="39"/></name><argument_list pos:line="90" pos:column="39">(<argument><expr><operator pos:line="90" pos:column="40">&amp;<pos:position pos:line="90" pos:column="45"/></operator><name><name pos:line="90" pos:column="41">o<pos:position pos:line="90" pos:column="42"/></name><operator pos:line="90" pos:column="42">-&gt;<pos:position pos:line="90" pos:column="47"/></operator><name pos:line="90" pos:column="44">blob_oid<pos:position pos:line="90" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="53"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="91" pos:column="29">path<pos:position pos:line="91" pos:column="33"/></name></expr></argument>)<pos:position pos:line="91" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="35"/></expr_stmt></block></then></if>
	}<pos:position pos:line="92" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name><name pos:line="93" pos:column="9">sb<pos:position pos:line="93" pos:column="11"/></name><operator pos:line="93" pos:column="11">-&gt;<pos:position pos:line="93" pos:column="16"/></operator><name pos:line="93" pos:column="13">num_read_blob<pos:position pos:line="93" pos:column="26"/></name></name><operator pos:line="93" pos:column="26">++<pos:position pos:line="93" pos:column="28"/></operator></expr>;<pos:position pos:line="93" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="94" pos:column="9">prepare_lines<pos:position pos:line="94" pos:column="22"/></name><argument_list pos:line="94" pos:column="22">(<argument><expr><name pos:line="94" pos:column="23">sb<pos:position pos:line="94" pos:column="25"/></name></expr></argument>)<pos:position pos:line="94" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="27"/></expr_stmt>

	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">orig<pos:position pos:line="96" pos:column="17"/></name></expr>)<pos:position pos:line="96" pos:column="18"/></condition><then pos:line="96" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="97" pos:column="17">*<pos:position pos:line="97" pos:column="18"/></operator><name pos:line="97" pos:column="18">orig<pos:position pos:line="97" pos:column="22"/></name> <operator pos:line="97" pos:column="23">=<pos:position pos:line="97" pos:column="24"/></operator> <name pos:line="97" pos:column="25">o<pos:position pos:line="97" pos:column="26"/></name></expr>;<pos:position pos:line="97" pos:column="27"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="99" pos:column="9">free<pos:position pos:line="99" pos:column="13"/></name><argument_list pos:line="99" pos:column="13">(<argument><expr><operator pos:line="99" pos:column="14">(<pos:position pos:line="99" pos:column="15"/></operator><name pos:line="99" pos:column="15">char<pos:position pos:line="99" pos:column="19"/></name> <operator pos:line="99" pos:column="20">*<pos:position pos:line="99" pos:column="21"/></operator><operator pos:line="99" pos:column="21">)<pos:position pos:line="99" pos:column="22"/></operator><name pos:line="99" pos:column="22">final_commit_name<pos:position pos:line="99" pos:column="39"/></name></expr></argument>)<pos:position pos:line="99" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="41"/></expr_stmt>
}<pos:position pos:line="100" pos:column="2"/></block></function></unit>

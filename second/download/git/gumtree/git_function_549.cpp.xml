<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_549.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">everything_local<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">fetch_pack_args<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">args<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">ref<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier><modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">refs<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="3" pos:column="29">struct<pos:position pos:line="3" pos:column="35"/></name> <name pos:line="3" pos:column="36">ref<pos:position pos:line="3" pos:column="39"/></name></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier><modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">sought<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="50">int<pos:position pos:line="3" pos:column="53"/></name></type> <name pos:line="3" pos:column="54">nr_sought<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="64"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ref<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">ref<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">retval<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">long<pos:position pos:line="7" pos:column="22"/></name></type> <name pos:line="7" pos:column="23">cutoff<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><literal type="number" pos:line="7" pos:column="32">0<pos:position pos:line="7" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">save_commit_buffer<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <literal type="number" pos:line="9" pos:column="30">0<pos:position pos:line="9" pos:column="31"/></literal></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">ref<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <operator pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">refs<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></init> <condition><expr><name pos:line="11" pos:column="27">ref<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></condition> <incr><expr><name pos:line="11" pos:column="32">ref<pos:position pos:line="11" pos:column="35"/></name> <operator pos:line="11" pos:column="36">=<pos:position pos:line="11" pos:column="37"/></operator> <name><name pos:line="11" pos:column="38">ref<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">-&gt;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="43">next<pos:position pos:line="11" pos:column="47"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="48"/></control> <block pos:line="11" pos:column="49">{
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">object<pos:position pos:line="12" pos:column="30"/></name></name> <modifier pos:line="12" pos:column="31">*<pos:position pos:line="12" pos:column="32"/></modifier></type><name pos:line="12" pos:column="32">o<pos:position pos:line="12" pos:column="33"/></name></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><call><name pos:line="14" pos:column="22">has_object_file<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><operator pos:line="14" pos:column="38">&amp;<pos:position pos:line="14" pos:column="43"/></operator><name><name pos:line="14" pos:column="39">ref<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">old_oid<pos:position pos:line="14" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="53"/></condition><then pos:line="14" pos:column="53">
			<block type="pseudo"><continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="17" pos:column="17">o<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <call><name pos:line="17" pos:column="21">parse_object<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name><name pos:line="17" pos:column="34">ref<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">old_oid<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">.<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="47">hash<pos:position pos:line="17" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">o<pos:position pos:line="18" pos:column="23"/></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24">
			<block type="pseudo"><continue pos:line="19" pos:column="25">continue;<pos:position pos:line="19" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="21" pos:column="17">/* We already have it -- which may mean that we were
		 * in sync with the other side at some time after
		 * that (it is OK if we guess wrong here).
		 */</comment>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">o<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">type<pos:position pos:line="25" pos:column="28"/></name></name> <operator pos:line="25" pos:column="29">==<pos:position pos:line="25" pos:column="31"/></operator> <name pos:line="25" pos:column="32">OBJ_COMMIT<pos:position pos:line="25" pos:column="42"/></name></expr>)<pos:position pos:line="25" pos:column="43"/></condition><then pos:line="25" pos:column="43"> <block pos:line="25" pos:column="44">{
			<decl_stmt><decl><type><name><name pos:line="26" pos:column="25">struct<pos:position pos:line="26" pos:column="31"/></name> <name pos:line="26" pos:column="32">commit<pos:position pos:line="26" pos:column="38"/></name></name> <modifier pos:line="26" pos:column="39">*<pos:position pos:line="26" pos:column="40"/></modifier></type><name pos:line="26" pos:column="40">commit<pos:position pos:line="26" pos:column="46"/></name> <init pos:line="26" pos:column="47">= <expr><operator pos:line="26" pos:column="49">(<pos:position pos:line="26" pos:column="50"/></operator>struct <name pos:line="26" pos:column="57">commit<pos:position pos:line="26" pos:column="63"/></name> <operator pos:line="26" pos:column="64">*<pos:position pos:line="26" pos:column="65"/></operator><operator pos:line="26" pos:column="65">)<pos:position pos:line="26" pos:column="66"/></operator><name pos:line="26" pos:column="66">o<pos:position pos:line="26" pos:column="67"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="68"/></decl_stmt>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><operator pos:line="27" pos:column="29">!<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">cutoff<pos:position pos:line="27" pos:column="36"/></name> <operator pos:line="27" pos:column="37">||<pos:position pos:line="27" pos:column="39"/></operator> <name pos:line="27" pos:column="40">cutoff<pos:position pos:line="27" pos:column="46"/></name> <operator pos:line="27" pos:column="47">&lt;<pos:position pos:line="27" pos:column="51"/></operator> <name><name pos:line="27" pos:column="49">commit<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">date<pos:position pos:line="27" pos:column="61"/></name></name></expr>)<pos:position pos:line="27" pos:column="62"/></condition><then pos:line="27" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="33">cutoff<pos:position pos:line="28" pos:column="39"/></name> <operator pos:line="28" pos:column="40">=<pos:position pos:line="28" pos:column="41"/></operator> <name><name pos:line="28" pos:column="42">commit<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">-&gt;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="50">date<pos:position pos:line="28" pos:column="54"/></name></name></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt></block></then></if>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
	}<pos:position pos:line="30" pos:column="10"/></block></for>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name><name pos:line="32" pos:column="14">args<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">depth<pos:position pos:line="32" pos:column="25"/></name></name></expr>)<pos:position pos:line="32" pos:column="26"/></condition><then pos:line="32" pos:column="26"> <block pos:line="32" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">for_each_ref<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">mark_complete_oid<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="49">NULL<pos:position pos:line="33" pos:column="53"/></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">for_each_alternate_ref<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">mark_alternate_complete<pos:position pos:line="34" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="65">NULL<pos:position pos:line="34" pos:column="69"/></name></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">commit_list_sort_by_date<pos:position pos:line="35" pos:column="41"/></name><argument_list pos:line="35" pos:column="41">(<argument><expr><operator pos:line="35" pos:column="42">&amp;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="43">complete<pos:position pos:line="35" pos:column="51"/></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">cutoff<pos:position pos:line="36" pos:column="27"/></name></expr>)<pos:position pos:line="36" pos:column="28"/></condition><then pos:line="36" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">mark_recent_complete_commits<pos:position pos:line="37" pos:column="53"/></name><argument_list pos:line="37" pos:column="53">(<argument><expr><name pos:line="37" pos:column="54">args<pos:position pos:line="37" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="60">cutoff<pos:position pos:line="37" pos:column="66"/></name></expr></argument>)<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="68"/></expr_stmt></block></then></if>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="40" pos:column="9">/*
	 * Mark all complete remote refs as common refs.
	 * Don't mark them common yet; the server has to be told so first.
	 */</comment>
	<for pos:line="44" pos:column="9">for <control pos:line="44" pos:column="13">(<init><expr><name pos:line="44" pos:column="14">ref<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">=<pos:position pos:line="44" pos:column="19"/></operator> <operator pos:line="44" pos:column="20">*<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">refs<pos:position pos:line="44" pos:column="25"/></name></expr>;<pos:position pos:line="44" pos:column="26"/></init> <condition><expr><name pos:line="44" pos:column="27">ref<pos:position pos:line="44" pos:column="30"/></name></expr>;<pos:position pos:line="44" pos:column="31"/></condition> <incr><expr><name pos:line="44" pos:column="32">ref<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">=<pos:position pos:line="44" pos:column="37"/></operator> <name><name pos:line="44" pos:column="38">ref<pos:position pos:line="44" pos:column="41"/></name><operator pos:line="44" pos:column="41">-&gt;<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="43">next<pos:position pos:line="44" pos:column="47"/></name></name></expr></incr>)<pos:position pos:line="44" pos:column="48"/></control> <block pos:line="44" pos:column="49">{
		<decl_stmt><decl><type><name><name pos:line="45" pos:column="17">struct<pos:position pos:line="45" pos:column="23"/></name> <name pos:line="45" pos:column="24">object<pos:position pos:line="45" pos:column="30"/></name></name> <modifier pos:line="45" pos:column="31">*<pos:position pos:line="45" pos:column="32"/></modifier></type><name pos:line="45" pos:column="32">o<pos:position pos:line="45" pos:column="33"/></name> <init pos:line="45" pos:column="34">= <expr><call><name pos:line="45" pos:column="36">deref_tag<pos:position pos:line="45" pos:column="45"/></name><argument_list pos:line="45" pos:column="45">(<argument><expr><call><name pos:line="45" pos:column="46">lookup_object<pos:position pos:line="45" pos:column="59"/></name><argument_list pos:line="45" pos:column="59">(<argument><expr><name><name pos:line="45" pos:column="60">ref<pos:position pos:line="45" pos:column="63"/></name><operator pos:line="45" pos:column="63">-&gt;<pos:position pos:line="45" pos:column="68"/></operator><name pos:line="45" pos:column="65">old_oid<pos:position pos:line="45" pos:column="72"/></name><operator pos:line="45" pos:column="72">.<pos:position pos:line="45" pos:column="73"/></operator><name pos:line="45" pos:column="73">hash<pos:position pos:line="45" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="78"/></argument_list></call></expr></argument>,
					     <argument><expr><name pos:line="46" pos:column="46">NULL<pos:position pos:line="46" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="52">0<pos:position pos:line="46" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="55"/></decl_stmt>

		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><operator pos:line="48" pos:column="21">!<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="22">o<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">||<pos:position pos:line="48" pos:column="26"/></operator> <name><name pos:line="48" pos:column="27">o<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">-&gt;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="30">type<pos:position pos:line="48" pos:column="34"/></name></name> <operator pos:line="48" pos:column="35">!=<pos:position pos:line="48" pos:column="37"/></operator> <name pos:line="48" pos:column="38">OBJ_COMMIT<pos:position pos:line="48" pos:column="48"/></name> <operator pos:line="48" pos:column="49">||<pos:position pos:line="48" pos:column="51"/></operator> <operator pos:line="48" pos:column="52">!<pos:position pos:line="48" pos:column="53"/></operator><operator pos:line="48" pos:column="53">(<pos:position pos:line="48" pos:column="54"/></operator><name><name pos:line="48" pos:column="54">o<pos:position pos:line="48" pos:column="55"/></name><operator pos:line="48" pos:column="55">-&gt;<pos:position pos:line="48" pos:column="60"/></operator><name pos:line="48" pos:column="57">flags<pos:position pos:line="48" pos:column="62"/></name></name> <operator pos:line="48" pos:column="63">&amp;<pos:position pos:line="48" pos:column="68"/></operator> <name pos:line="48" pos:column="65">COMPLETE<pos:position pos:line="48" pos:column="73"/></name><operator pos:line="48" pos:column="73">)<pos:position pos:line="48" pos:column="74"/></operator></expr>)<pos:position pos:line="48" pos:column="75"/></condition><then pos:line="48" pos:column="75">
			<block type="pseudo"><continue pos:line="49" pos:column="25">continue;<pos:position pos:line="49" pos:column="34"/></continue></block></then></if>

		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><operator pos:line="51" pos:column="21">!<pos:position pos:line="51" pos:column="22"/></operator><operator pos:line="51" pos:column="22">(<pos:position pos:line="51" pos:column="23"/></operator><name><name pos:line="51" pos:column="23">o<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">-&gt;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="26">flags<pos:position pos:line="51" pos:column="31"/></name></name> <operator pos:line="51" pos:column="32">&amp;<pos:position pos:line="51" pos:column="37"/></operator> <name pos:line="51" pos:column="34">SEEN<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">)<pos:position pos:line="51" pos:column="39"/></operator></expr>)<pos:position pos:line="51" pos:column="40"/></condition><then pos:line="51" pos:column="40"> <block pos:line="51" pos:column="41">{
			<expr_stmt><expr><call><name pos:line="52" pos:column="25">rev_list_push<pos:position pos:line="52" pos:column="38"/></name><argument_list pos:line="52" pos:column="38">(<argument><expr><operator pos:line="52" pos:column="39">(<pos:position pos:line="52" pos:column="40"/></operator>struct <name pos:line="52" pos:column="47">commit<pos:position pos:line="52" pos:column="53"/></name> <operator pos:line="52" pos:column="54">*<pos:position pos:line="52" pos:column="55"/></operator><operator pos:line="52" pos:column="55">)<pos:position pos:line="52" pos:column="56"/></operator><name pos:line="52" pos:column="56">o<pos:position pos:line="52" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="59">COMMON_REF<pos:position pos:line="52" pos:column="69"/></name> <operator pos:line="52" pos:column="70">|<pos:position pos:line="52" pos:column="71"/></operator> <name pos:line="52" pos:column="72">SEEN<pos:position pos:line="52" pos:column="76"/></name></expr></argument>)<pos:position pos:line="52" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="78"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="54" pos:column="25">mark_common<pos:position pos:line="54" pos:column="36"/></name><argument_list pos:line="54" pos:column="36">(<argument><expr><operator pos:line="54" pos:column="37">(<pos:position pos:line="54" pos:column="38"/></operator>struct <name pos:line="54" pos:column="45">commit<pos:position pos:line="54" pos:column="51"/></name> <operator pos:line="54" pos:column="52">*<pos:position pos:line="54" pos:column="53"/></operator><operator pos:line="54" pos:column="53">)<pos:position pos:line="54" pos:column="54"/></operator><name pos:line="54" pos:column="54">o<pos:position pos:line="54" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="57">1<pos:position pos:line="54" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="60">1<pos:position pos:line="54" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="63"/></expr_stmt>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>
	}<pos:position pos:line="56" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="58" pos:column="9">filter_refs<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><name pos:line="58" pos:column="21">args<pos:position pos:line="58" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="27">refs<pos:position pos:line="58" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="33">sought<pos:position pos:line="58" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="41">nr_sought<pos:position pos:line="58" pos:column="50"/></name></expr></argument>)<pos:position pos:line="58" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="52"/></expr_stmt>

	<for pos:line="60" pos:column="9">for <control pos:line="60" pos:column="13">(<init><expr><name pos:line="60" pos:column="14">retval<pos:position pos:line="60" pos:column="20"/></name> <operator pos:line="60" pos:column="21">=<pos:position pos:line="60" pos:column="22"/></operator> <literal type="number" pos:line="60" pos:column="23">1<pos:position pos:line="60" pos:column="24"/></literal></expr><operator pos:line="60" pos:column="24">,<pos:position pos:line="60" pos:column="25"/></operator> <expr><name pos:line="60" pos:column="26">ref<pos:position pos:line="60" pos:column="29"/></name> <operator pos:line="60" pos:column="30">=<pos:position pos:line="60" pos:column="31"/></operator> <operator pos:line="60" pos:column="32">*<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="33">refs<pos:position pos:line="60" pos:column="37"/></name></expr>;<pos:position pos:line="60" pos:column="38"/></init> <condition><expr><name pos:line="60" pos:column="39">ref<pos:position pos:line="60" pos:column="42"/></name></expr> ;<pos:position pos:line="60" pos:column="44"/></condition> <incr><expr><name pos:line="60" pos:column="45">ref<pos:position pos:line="60" pos:column="48"/></name> <operator pos:line="60" pos:column="49">=<pos:position pos:line="60" pos:column="50"/></operator> <name><name pos:line="60" pos:column="51">ref<pos:position pos:line="60" pos:column="54"/></name><operator pos:line="60" pos:column="54">-&gt;<pos:position pos:line="60" pos:column="59"/></operator><name pos:line="60" pos:column="56">next<pos:position pos:line="60" pos:column="60"/></name></name></expr></incr>)<pos:position pos:line="60" pos:column="61"/></control> <block pos:line="60" pos:column="62">{
		<decl_stmt><decl><type><specifier pos:line="61" pos:column="17">const<pos:position pos:line="61" pos:column="22"/></specifier> <name pos:line="61" pos:column="23">unsigned<pos:position pos:line="61" pos:column="31"/></name> <name pos:line="61" pos:column="32">char<pos:position pos:line="61" pos:column="36"/></name> <modifier pos:line="61" pos:column="37">*<pos:position pos:line="61" pos:column="38"/></modifier></type><name pos:line="61" pos:column="38">remote<pos:position pos:line="61" pos:column="44"/></name> <init pos:line="61" pos:column="45">= <expr><name><name pos:line="61" pos:column="47">ref<pos:position pos:line="61" pos:column="50"/></name><operator pos:line="61" pos:column="50">-&gt;<pos:position pos:line="61" pos:column="55"/></operator><name pos:line="61" pos:column="52">old_oid<pos:position pos:line="61" pos:column="59"/></name><operator pos:line="61" pos:column="59">.<pos:position pos:line="61" pos:column="60"/></operator><name pos:line="61" pos:column="60">hash<pos:position pos:line="61" pos:column="64"/></name></name></expr></init></decl>;<pos:position pos:line="61" pos:column="65"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="62" pos:column="17">struct<pos:position pos:line="62" pos:column="23"/></name> <name pos:line="62" pos:column="24">object<pos:position pos:line="62" pos:column="30"/></name></name> <modifier pos:line="62" pos:column="31">*<pos:position pos:line="62" pos:column="32"/></modifier></type><name pos:line="62" pos:column="32">o<pos:position pos:line="62" pos:column="33"/></name></decl>;<pos:position pos:line="62" pos:column="34"/></decl_stmt>

		<expr_stmt><expr><name pos:line="64" pos:column="17">o<pos:position pos:line="64" pos:column="18"/></name> <operator pos:line="64" pos:column="19">=<pos:position pos:line="64" pos:column="20"/></operator> <call><name pos:line="64" pos:column="21">lookup_object<pos:position pos:line="64" pos:column="34"/></name><argument_list pos:line="64" pos:column="34">(<argument><expr><name pos:line="64" pos:column="35">remote<pos:position pos:line="64" pos:column="41"/></name></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="43"/></expr_stmt>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><operator pos:line="65" pos:column="21">!<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="22">o<pos:position pos:line="65" pos:column="23"/></name> <operator pos:line="65" pos:column="24">||<pos:position pos:line="65" pos:column="26"/></operator> <operator pos:line="65" pos:column="27">!<pos:position pos:line="65" pos:column="28"/></operator><operator pos:line="65" pos:column="28">(<pos:position pos:line="65" pos:column="29"/></operator><name><name pos:line="65" pos:column="29">o<pos:position pos:line="65" pos:column="30"/></name><operator pos:line="65" pos:column="30">-&gt;<pos:position pos:line="65" pos:column="35"/></operator><name pos:line="65" pos:column="32">flags<pos:position pos:line="65" pos:column="37"/></name></name> <operator pos:line="65" pos:column="38">&amp;<pos:position pos:line="65" pos:column="43"/></operator> <name pos:line="65" pos:column="40">COMPLETE<pos:position pos:line="65" pos:column="48"/></name><operator pos:line="65" pos:column="48">)<pos:position pos:line="65" pos:column="49"/></operator></expr>)<pos:position pos:line="65" pos:column="50"/></condition><then pos:line="65" pos:column="50"> <block pos:line="65" pos:column="51">{
			<expr_stmt><expr><name pos:line="66" pos:column="25">retval<pos:position pos:line="66" pos:column="31"/></name> <operator pos:line="66" pos:column="32">=<pos:position pos:line="66" pos:column="33"/></operator> <literal type="number" pos:line="66" pos:column="34">0<pos:position pos:line="66" pos:column="35"/></literal></expr>;<pos:position pos:line="66" pos:column="36"/></expr_stmt>
			<if pos:line="67" pos:column="25">if <condition pos:line="67" pos:column="28">(<expr><operator pos:line="67" pos:column="29">!<pos:position pos:line="67" pos:column="30"/></operator><name><name pos:line="67" pos:column="30">args<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">-&gt;<pos:position pos:line="67" pos:column="39"/></operator><name pos:line="67" pos:column="36">verbose<pos:position pos:line="67" pos:column="43"/></name></name></expr>)<pos:position pos:line="67" pos:column="44"/></condition><then pos:line="67" pos:column="44">
				<block type="pseudo"><continue pos:line="68" pos:column="33">continue;<pos:position pos:line="68" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><call><name pos:line="69" pos:column="25">fprintf<pos:position pos:line="69" pos:column="32"/></name><argument_list pos:line="69" pos:column="32">(<argument><expr><name pos:line="69" pos:column="33">stderr<pos:position pos:line="69" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="70" pos:column="33">"want %s (%s)\n"<pos:position pos:line="70" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="70" pos:column="51">sha1_to_hex<pos:position pos:line="70" pos:column="62"/></name><argument_list pos:line="70" pos:column="62">(<argument><expr><name pos:line="70" pos:column="63">remote<pos:position pos:line="70" pos:column="69"/></name></expr></argument>)<pos:position pos:line="70" pos:column="70"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="71" pos:column="33">ref<pos:position pos:line="71" pos:column="36"/></name><operator pos:line="71" pos:column="36">-&gt;<pos:position pos:line="71" pos:column="41"/></operator><name pos:line="71" pos:column="38">name<pos:position pos:line="71" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="44"/></expr_stmt>
			<continue pos:line="72" pos:column="25">continue;<pos:position pos:line="72" pos:column="34"/></continue>
		}<pos:position pos:line="73" pos:column="18"/></block></then></if>
		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><operator pos:line="74" pos:column="21">!<pos:position pos:line="74" pos:column="22"/></operator><name><name pos:line="74" pos:column="22">args<pos:position pos:line="74" pos:column="26"/></name><operator pos:line="74" pos:column="26">-&gt;<pos:position pos:line="74" pos:column="31"/></operator><name pos:line="74" pos:column="28">verbose<pos:position pos:line="74" pos:column="35"/></name></name></expr>)<pos:position pos:line="74" pos:column="36"/></condition><then pos:line="74" pos:column="36">
			<block type="pseudo"><continue pos:line="75" pos:column="25">continue;<pos:position pos:line="75" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="76" pos:column="17">fprintf<pos:position pos:line="76" pos:column="24"/></name><argument_list pos:line="76" pos:column="24">(<argument><expr><name pos:line="76" pos:column="25">stderr<pos:position pos:line="76" pos:column="31"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="77" pos:column="25">"already have %s (%s)\n"<pos:position pos:line="77" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="51">sha1_to_hex<pos:position pos:line="77" pos:column="62"/></name><argument_list pos:line="77" pos:column="62">(<argument><expr><name pos:line="77" pos:column="63">remote<pos:position pos:line="77" pos:column="69"/></name></expr></argument>)<pos:position pos:line="77" pos:column="70"/></argument_list></call></expr></argument>,
			<argument><expr><name><name pos:line="78" pos:column="25">ref<pos:position pos:line="78" pos:column="28"/></name><operator pos:line="78" pos:column="28">-&gt;<pos:position pos:line="78" pos:column="33"/></operator><name pos:line="78" pos:column="30">name<pos:position pos:line="78" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="79" pos:column="10"/></block></for>
	<return pos:line="80" pos:column="9">return <expr><name pos:line="80" pos:column="16">retval<pos:position pos:line="80" pos:column="22"/></name></expr>;<pos:position pos:line="80" pos:column="23"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

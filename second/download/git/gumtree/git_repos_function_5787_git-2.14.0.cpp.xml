<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5787_git-2.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pretty_print_dels<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list<pos:position pos:line="3" pos:column="27"/></name></name></type> <name pos:line="3" pos:column="28">list<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">STRING_LIST_INIT_DUP<pos:position pos:line="3" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">string_list_item<pos:position pos:line="4" pos:column="32"/></name></name> <modifier pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></modifier></type><name pos:line="4" pos:column="34">item<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">buf<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">STRBUF_INIT<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">qname<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">column_options<pos:position pos:line="7" pos:column="30"/></name></name></type> <name pos:line="7" pos:column="31">copts<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>

	<macro><name pos:line="9" pos:column="9">for_each_string_list_item<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument pos:line="9" pos:column="35">item<pos:position pos:line="9" pos:column="39"/></argument>, <argument pos:line="9" pos:column="41">&amp;del_list<pos:position pos:line="9" pos:column="50"/></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></macro> <block pos:line="9" pos:column="52">{
		<expr_stmt><expr><name pos:line="10" pos:column="17">qname<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <call><name pos:line="10" pos:column="25">quote_path_relative<pos:position pos:line="10" pos:column="44"/></name><argument_list pos:line="10" pos:column="44">(<argument><expr><name><name pos:line="10" pos:column="45">item<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">-&gt;<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="51">string<pos:position pos:line="10" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="59">NULL<pos:position pos:line="10" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="65">&amp;<pos:position pos:line="10" pos:column="70"/></operator><name pos:line="10" pos:column="66">buf<pos:position pos:line="10" pos:column="69"/></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">string_list_append<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><operator pos:line="11" pos:column="36">&amp;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="37">list<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">qname<pos:position pos:line="11" pos:column="48"/></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block>

	<comment type="block" pos:line="14" pos:column="9">/*
	 * always enable column display, we only consult column.*
	 * about layout strategy and stuff
	 */</comment>
	<expr_stmt><expr><name pos:line="18" pos:column="9">colopts<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <operator pos:line="18" pos:column="19">(<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">colopts<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">&amp;<pos:position pos:line="18" pos:column="33"/></operator> <operator pos:line="18" pos:column="30">~<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">COL_ENABLE_MASK<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">)<pos:position pos:line="18" pos:column="47"/></operator> <operator pos:line="18" pos:column="48">|<pos:position pos:line="18" pos:column="49"/></operator> <name pos:line="18" pos:column="50">COL_ENABLED<pos:position pos:line="18" pos:column="61"/></name></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">memset<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><operator pos:line="19" pos:column="16">&amp;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="17">copts<pos:position pos:line="19" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="27">sizeof<argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">copts<pos:position pos:line="19" pos:column="39"/></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">copts<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">.<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">indent<pos:position pos:line="20" pos:column="21"/></name></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <literal type="string" pos:line="20" pos:column="24">"  "<pos:position pos:line="20" pos:column="28"/></literal></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">copts<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">.<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">padding<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <literal type="number" pos:line="21" pos:column="25">2<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">print_columns<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><operator pos:line="22" pos:column="23">&amp;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="24">list<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="30">colopts<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="39">&amp;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="40">copts<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">strbuf_release<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><operator pos:line="23" pos:column="24">&amp;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="25">buf<pos:position pos:line="23" pos:column="28"/></name></expr></argument>)<pos:position pos:line="23" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">string_list_clear<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><operator pos:line="24" pos:column="27">&amp;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="28">list<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="34">0<pos:position pos:line="24" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_999_git-2.4.10.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">is_urlschemechar<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">first_flag<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">ch<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * The set of valid URL schemes, as per STD66 (RFC3986) is
	 * '[A-Za-z][A-Za-z0-9+.-]*'. But use sightly looser check
	 * of '[A-Za-z0-9][A-Za-z0-9+.-]*' because earlier version
	 * of check used '[A-Za-z0-9]+' so not to break any remote
	 * helpers.
	 */</comment>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">alphanumeric<pos:position pos:line="10" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="27">special<pos:position pos:line="10" pos:column="34"/></name></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">alphanumeric<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">ch<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">&gt;<pos:position pos:line="11" pos:column="31"/></operator> <literal type="number" pos:line="11" pos:column="29">0<pos:position pos:line="11" pos:column="30"/></literal> <operator pos:line="11" pos:column="31">&amp;&amp;<pos:position pos:line="11" pos:column="41"/></operator> <call><name pos:line="11" pos:column="34">isalnum<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">ch<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">special<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">ch<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">==<pos:position pos:line="12" pos:column="24"/></operator> <literal type="char" pos:line="12" pos:column="25">'+'<pos:position pos:line="12" pos:column="28"/></literal> <operator pos:line="12" pos:column="29">||<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="32">ch<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">==<pos:position pos:line="12" pos:column="37"/></operator> <literal type="char" pos:line="12" pos:column="38">'-'<pos:position pos:line="12" pos:column="41"/></literal> <operator pos:line="12" pos:column="42">||<pos:position pos:line="12" pos:column="44"/></operator> <name pos:line="12" pos:column="45">ch<pos:position pos:line="12" pos:column="47"/></name> <operator pos:line="12" pos:column="48">==<pos:position pos:line="12" pos:column="50"/></operator> <literal type="char" pos:line="12" pos:column="51">'.'<pos:position pos:line="12" pos:column="54"/></literal></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
	<return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">alphanumeric<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">||<pos:position pos:line="13" pos:column="31"/></operator> <operator pos:line="13" pos:column="32">(<pos:position pos:line="13" pos:column="33"/></operator><operator pos:line="13" pos:column="33">!<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">first_flag<pos:position pos:line="13" pos:column="44"/></name> <operator pos:line="13" pos:column="45">&amp;&amp;<pos:position pos:line="13" pos:column="55"/></operator> <name pos:line="13" pos:column="48">special<pos:position pos:line="13" pos:column="55"/></name><operator pos:line="13" pos:column="55">)<pos:position pos:line="13" pos:column="56"/></operator></expr>;<pos:position pos:line="13" pos:column="57"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

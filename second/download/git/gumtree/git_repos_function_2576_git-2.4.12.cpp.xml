<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2576_git-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">verify_refname_available<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">refname<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
				    <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name><name pos:line="2" pos:column="43">struct<pos:position pos:line="2" pos:column="49"/></name> <name pos:line="2" pos:column="50">string_list<pos:position pos:line="2" pos:column="61"/></name></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">extras<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
				    <parameter><decl><type><specifier pos:line="3" pos:column="37">const<pos:position pos:line="3" pos:column="42"/></specifier> <name><name pos:line="3" pos:column="43">struct<pos:position pos:line="3" pos:column="49"/></name> <name pos:line="3" pos:column="50">string_list<pos:position pos:line="3" pos:column="61"/></name></name> <modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier></type><name pos:line="3" pos:column="63">skip<pos:position pos:line="3" pos:column="67"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="4" pos:column="37">struct<pos:position pos:line="4" pos:column="43"/></name> <name pos:line="4" pos:column="44">ref_dir<pos:position pos:line="4" pos:column="51"/></name></name> <modifier pos:line="4" pos:column="52">*<pos:position pos:line="4" pos:column="53"/></modifier></type><name pos:line="4" pos:column="53">dir<pos:position pos:line="4" pos:column="56"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="5" pos:column="37">struct<pos:position pos:line="5" pos:column="43"/></name> <name pos:line="5" pos:column="44">strbuf<pos:position pos:line="5" pos:column="50"/></name></name> <modifier pos:line="5" pos:column="51">*<pos:position pos:line="5" pos:column="52"/></modifier></type><name pos:line="5" pos:column="52">err<pos:position pos:line="5" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="56"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">slash<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">pos<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">strbuf<pos:position pos:line="9" pos:column="22"/></name></name></type> <name pos:line="9" pos:column="23">dirname<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><name pos:line="9" pos:column="33">STRBUF_INIT<pos:position pos:line="9" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">ret<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><operator pos:line="10" pos:column="19">-<pos:position pos:line="10" pos:column="20"/></operator><literal type="number" pos:line="10" pos:column="20">1<pos:position pos:line="10" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>

	<comment type="block" pos:line="12" pos:column="9">/*
	 * For the sake of comments in this function, suppose that
	 * refname is "refs/foo/bar".
	 */</comment>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">assert<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">err<pos:position pos:line="17" pos:column="19"/></name></expr></argument>)<pos:position pos:line="17" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">strbuf_grow<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><operator pos:line="19" pos:column="21">&amp;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="22">dirname<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="31">strlen<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">refname<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call> <operator pos:line="19" pos:column="47">+<pos:position pos:line="19" pos:column="48"/></operator> <literal type="number" pos:line="19" pos:column="49">1<pos:position pos:line="19" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">slash<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">strchr<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">refname<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="38">'/'<pos:position pos:line="20" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></init> <condition><expr><name pos:line="20" pos:column="44">slash<pos:position pos:line="20" pos:column="49"/></name></expr>;<pos:position pos:line="20" pos:column="50"/></condition> <incr><expr><name pos:line="20" pos:column="51">slash<pos:position pos:line="20" pos:column="56"/></name> <operator pos:line="20" pos:column="57">=<pos:position pos:line="20" pos:column="58"/></operator> <call><name pos:line="20" pos:column="59">strchr<pos:position pos:line="20" pos:column="65"/></name><argument_list pos:line="20" pos:column="65">(<argument><expr><name pos:line="20" pos:column="66">slash<pos:position pos:line="20" pos:column="71"/></name> <operator pos:line="20" pos:column="72">+<pos:position pos:line="20" pos:column="73"/></operator> <literal type="number" pos:line="20" pos:column="74">1<pos:position pos:line="20" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="77">'/'<pos:position pos:line="20" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="81"/></argument_list></call></expr></incr>)<pos:position pos:line="20" pos:column="82"/></control> <block pos:line="20" pos:column="83">{
		<comment type="block" pos:line="21" pos:column="17">/* Expand dirname to the new prefix, not including the trailing slash: */</comment>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">strbuf_add<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><operator pos:line="22" pos:column="28">&amp;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="29">dirname<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">refname<pos:position pos:line="22" pos:column="45"/></name> <operator pos:line="22" pos:column="46">+<pos:position pos:line="22" pos:column="47"/></operator> <name><name pos:line="22" pos:column="48">dirname<pos:position pos:line="22" pos:column="55"/></name><operator pos:line="22" pos:column="55">.<pos:position pos:line="22" pos:column="56"/></operator><name pos:line="22" pos:column="56">len<pos:position pos:line="22" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="61">slash<pos:position pos:line="22" pos:column="66"/></name> <operator pos:line="22" pos:column="67">-<pos:position pos:line="22" pos:column="68"/></operator> <name pos:line="22" pos:column="69">refname<pos:position pos:line="22" pos:column="76"/></name> <operator pos:line="22" pos:column="77">-<pos:position pos:line="22" pos:column="78"/></operator> <name><name pos:line="22" pos:column="79">dirname<pos:position pos:line="22" pos:column="86"/></name><operator pos:line="22" pos:column="86">.<pos:position pos:line="22" pos:column="87"/></operator><name pos:line="22" pos:column="87">len<pos:position pos:line="22" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="92"/></expr_stmt>

		<comment type="block" pos:line="24" pos:column="17">/*
		 * We are still at a leading dir of the refname (e.g.,
		 * "refs/foo"; if there is a reference with that name,
		 * it is a conflict, *unless* it is in skip.
		 */</comment>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">dir<pos:position pos:line="29" pos:column="24"/></name></expr>)<pos:position pos:line="29" pos:column="25"/></condition><then pos:line="29" pos:column="25"> <block pos:line="29" pos:column="26">{
			<expr_stmt><expr><name pos:line="30" pos:column="25">pos<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <call><name pos:line="30" pos:column="31">search_ref_dir<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><name pos:line="30" pos:column="46">dir<pos:position pos:line="30" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="51">dirname<pos:position pos:line="30" pos:column="58"/></name><operator pos:line="30" pos:column="58">.<pos:position pos:line="30" pos:column="59"/></operator><name pos:line="30" pos:column="59">buf<pos:position pos:line="30" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="64">dirname<pos:position pos:line="30" pos:column="71"/></name><operator pos:line="30" pos:column="71">.<pos:position pos:line="30" pos:column="72"/></operator><name pos:line="30" pos:column="72">len<pos:position pos:line="30" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="77"/></expr_stmt>
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><name pos:line="31" pos:column="29">pos<pos:position pos:line="31" pos:column="32"/></name> <operator pos:line="31" pos:column="33">&gt;=<pos:position pos:line="31" pos:column="38"/></operator> <literal type="number" pos:line="31" pos:column="36">0<pos:position pos:line="31" pos:column="37"/></literal> <operator pos:line="31" pos:column="38">&amp;&amp;<pos:position pos:line="31" pos:column="48"/></operator>
			    <operator pos:line="32" pos:column="29">(<pos:position pos:line="32" pos:column="30"/></operator><operator pos:line="32" pos:column="30">!<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="31">skip<pos:position pos:line="32" pos:column="35"/></name> <operator pos:line="32" pos:column="36">||<pos:position pos:line="32" pos:column="38"/></operator> <operator pos:line="32" pos:column="39">!<pos:position pos:line="32" pos:column="40"/></operator><call><name pos:line="32" pos:column="40">string_list_has_string<pos:position pos:line="32" pos:column="62"/></name><argument_list pos:line="32" pos:column="62">(<argument><expr><name pos:line="32" pos:column="63">skip<pos:position pos:line="32" pos:column="67"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="69">dirname<pos:position pos:line="32" pos:column="76"/></name><operator pos:line="32" pos:column="76">.<pos:position pos:line="32" pos:column="77"/></operator><name pos:line="32" pos:column="77">buf<pos:position pos:line="32" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="81"/></argument_list></call><operator pos:line="32" pos:column="81">)<pos:position pos:line="32" pos:column="82"/></operator></expr>)<pos:position pos:line="32" pos:column="83"/></condition><then pos:line="32" pos:column="83"> <block pos:line="32" pos:column="84">{
				<comment type="block" pos:line="33" pos:column="33">/*
				 * We found a reference whose name is
				 * a proper prefix of refname; e.g.,
				 * "refs/foo", and is not in skip.
				 */</comment>
				<expr_stmt><expr><call><name pos:line="38" pos:column="33">strbuf_addf<pos:position pos:line="38" pos:column="44"/></name><argument_list pos:line="38" pos:column="44">(<argument><expr><name pos:line="38" pos:column="45">err<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="50">"'%s' exists; cannot create '%s'"<pos:position pos:line="38" pos:column="83"/></literal></expr></argument>,
					    <argument><expr><name><name pos:line="39" pos:column="45">dirname<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">.<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="53">buf<pos:position pos:line="39" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="58">refname<pos:position pos:line="39" pos:column="65"/></name></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="67"/></expr_stmt>
				<goto pos:line="40" pos:column="33">goto <name pos:line="40" pos:column="38">cleanup<pos:position pos:line="40" pos:column="45"/></name>;<pos:position pos:line="40" pos:column="46"/></goto>
			}<pos:position pos:line="41" pos:column="26"/></block></then></if>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>

		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">extras<pos:position pos:line="44" pos:column="27"/></name> <operator pos:line="44" pos:column="28">&amp;&amp;<pos:position pos:line="44" pos:column="38"/></operator> <call><name pos:line="44" pos:column="31">string_list_has_string<pos:position pos:line="44" pos:column="53"/></name><argument_list pos:line="44" pos:column="53">(<argument><expr><name pos:line="44" pos:column="54">extras<pos:position pos:line="44" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="62">dirname<pos:position pos:line="44" pos:column="69"/></name><operator pos:line="44" pos:column="69">.<pos:position pos:line="44" pos:column="70"/></operator><name pos:line="44" pos:column="70">buf<pos:position pos:line="44" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="74"/></argument_list></call> <operator pos:line="44" pos:column="75">&amp;&amp;<pos:position pos:line="44" pos:column="85"/></operator>
		    <operator pos:line="45" pos:column="21">(<pos:position pos:line="45" pos:column="22"/></operator><operator pos:line="45" pos:column="22">!<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="23">skip<pos:position pos:line="45" pos:column="27"/></name> <operator pos:line="45" pos:column="28">||<pos:position pos:line="45" pos:column="30"/></operator> <operator pos:line="45" pos:column="31">!<pos:position pos:line="45" pos:column="32"/></operator><call><name pos:line="45" pos:column="32">string_list_has_string<pos:position pos:line="45" pos:column="54"/></name><argument_list pos:line="45" pos:column="54">(<argument><expr><name pos:line="45" pos:column="55">skip<pos:position pos:line="45" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="61">dirname<pos:position pos:line="45" pos:column="68"/></name><operator pos:line="45" pos:column="68">.<pos:position pos:line="45" pos:column="69"/></operator><name pos:line="45" pos:column="69">buf<pos:position pos:line="45" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="73"/></argument_list></call><operator pos:line="45" pos:column="73">)<pos:position pos:line="45" pos:column="74"/></operator></expr>)<pos:position pos:line="45" pos:column="75"/></condition><then pos:line="45" pos:column="75"> <block pos:line="45" pos:column="76">{
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">strbuf_addf<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name pos:line="46" pos:column="37">err<pos:position pos:line="46" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="42">"cannot process '%s' and '%s' at the same time"<pos:position pos:line="46" pos:column="89"/></literal></expr></argument>,
				    <argument><expr><name pos:line="47" pos:column="37">refname<pos:position pos:line="47" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="46">dirname<pos:position pos:line="47" pos:column="53"/></name><operator pos:line="47" pos:column="53">.<pos:position pos:line="47" pos:column="54"/></operator><name pos:line="47" pos:column="54">buf<pos:position pos:line="47" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="59"/></expr_stmt>
			<goto pos:line="48" pos:column="25">goto <name pos:line="48" pos:column="30">cleanup<pos:position pos:line="48" pos:column="37"/></name>;<pos:position pos:line="48" pos:column="38"/></goto>
		}<pos:position pos:line="49" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="51" pos:column="17">/*
		 * Otherwise, we can try to continue our search with
		 * the next component. So try to look up the
		 * directory, e.g., "refs/foo/". If we come up empty,
		 * we know there is nothing under this whole prefix,
		 * but even in that case we still have to continue the
		 * search for conflicts with extras.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">strbuf_addch<pos:position pos:line="59" pos:column="29"/></name><argument_list pos:line="59" pos:column="29">(<argument><expr><operator pos:line="59" pos:column="30">&amp;<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="31">dirname<pos:position pos:line="59" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="59" pos:column="40">'/'<pos:position pos:line="59" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="45"/></expr_stmt>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">dir<pos:position pos:line="60" pos:column="24"/></name></expr>)<pos:position pos:line="60" pos:column="25"/></condition><then pos:line="60" pos:column="25"> <block pos:line="60" pos:column="26">{
			<expr_stmt><expr><name pos:line="61" pos:column="25">pos<pos:position pos:line="61" pos:column="28"/></name> <operator pos:line="61" pos:column="29">=<pos:position pos:line="61" pos:column="30"/></operator> <call><name pos:line="61" pos:column="31">search_ref_dir<pos:position pos:line="61" pos:column="45"/></name><argument_list pos:line="61" pos:column="45">(<argument><expr><name pos:line="61" pos:column="46">dir<pos:position pos:line="61" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="51">dirname<pos:position pos:line="61" pos:column="58"/></name><operator pos:line="61" pos:column="58">.<pos:position pos:line="61" pos:column="59"/></operator><name pos:line="61" pos:column="59">buf<pos:position pos:line="61" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="64">dirname<pos:position pos:line="61" pos:column="71"/></name><operator pos:line="61" pos:column="71">.<pos:position pos:line="61" pos:column="72"/></operator><name pos:line="61" pos:column="72">len<pos:position pos:line="61" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="77"/></expr_stmt>
			<if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><name pos:line="62" pos:column="29">pos<pos:position pos:line="62" pos:column="32"/></name> <operator pos:line="62" pos:column="33">&lt;<pos:position pos:line="62" pos:column="37"/></operator> <literal type="number" pos:line="62" pos:column="35">0<pos:position pos:line="62" pos:column="36"/></literal></expr>)<pos:position pos:line="62" pos:column="37"/></condition><then pos:line="62" pos:column="37"> <block pos:line="62" pos:column="38">{
				<comment type="block" pos:line="63" pos:column="33">/*
				 * There was no directory "refs/foo/",
				 * so there is nothing under this
				 * whole prefix. So there is no need
				 * to continue looking for conflicting
				 * references. But we need to continue
				 * looking for conflicting extras.
				 */</comment>
				<expr_stmt><expr><name pos:line="71" pos:column="33">dir<pos:position pos:line="71" pos:column="36"/></name> <operator pos:line="71" pos:column="37">=<pos:position pos:line="71" pos:column="38"/></operator> <name pos:line="71" pos:column="39">NULL<pos:position pos:line="71" pos:column="43"/></name></expr>;<pos:position pos:line="71" pos:column="44"/></expr_stmt>
			}<pos:position pos:line="72" pos:column="26"/></block></then> <else pos:line="72" pos:column="27">else <block pos:line="72" pos:column="32">{
				<expr_stmt><expr><name pos:line="73" pos:column="33">dir<pos:position pos:line="73" pos:column="36"/></name> <operator pos:line="73" pos:column="37">=<pos:position pos:line="73" pos:column="38"/></operator> <call><name pos:line="73" pos:column="39">get_ref_dir<pos:position pos:line="73" pos:column="50"/></name><argument_list pos:line="73" pos:column="50">(<argument><expr><name><name pos:line="73" pos:column="51">dir<pos:position pos:line="73" pos:column="54"/></name><operator pos:line="73" pos:column="54">-&gt;<pos:position pos:line="73" pos:column="59"/></operator><name pos:line="73" pos:column="56">entries<pos:position pos:line="73" pos:column="63"/></name><index pos:line="73" pos:column="63">[<expr><name pos:line="73" pos:column="64">pos<pos:position pos:line="73" pos:column="67"/></name></expr>]<pos:position pos:line="73" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="73" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="74" pos:column="26"/></block></else></if>
		}<pos:position pos:line="75" pos:column="18"/></block></then></if>
	}<pos:position pos:line="76" pos:column="10"/></block></for>

	<comment type="block" pos:line="78" pos:column="9">/*
	 * We are at the leaf of our refname (e.g., "refs/foo/bar").
	 * There is no point in searching for a reference with that
	 * name, because a refname isn't considered to conflict with
	 * itself. But we still need to check for references whose
	 * names are in the "refs/foo/bar/" namespace, because they
	 * *do* conflict.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="86" pos:column="9">strbuf_addstr<pos:position pos:line="86" pos:column="22"/></name><argument_list pos:line="86" pos:column="22">(<argument><expr><operator pos:line="86" pos:column="23">&amp;<pos:position pos:line="86" pos:column="28"/></operator><name pos:line="86" pos:column="24">dirname<pos:position pos:line="86" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="33">refname<pos:position pos:line="86" pos:column="40"/></name> <operator pos:line="86" pos:column="41">+<pos:position pos:line="86" pos:column="42"/></operator> <name><name pos:line="86" pos:column="43">dirname<pos:position pos:line="86" pos:column="50"/></name><operator pos:line="86" pos:column="50">.<pos:position pos:line="86" pos:column="51"/></operator><name pos:line="86" pos:column="51">len<pos:position pos:line="86" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="87" pos:column="9">strbuf_addch<pos:position pos:line="87" pos:column="21"/></name><argument_list pos:line="87" pos:column="21">(<argument><expr><operator pos:line="87" pos:column="22">&amp;<pos:position pos:line="87" pos:column="27"/></operator><name pos:line="87" pos:column="23">dirname<pos:position pos:line="87" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="87" pos:column="32">'/'<pos:position pos:line="87" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="37"/></expr_stmt>

	<if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">dir<pos:position pos:line="89" pos:column="16"/></name></expr>)<pos:position pos:line="89" pos:column="17"/></condition><then pos:line="89" pos:column="17"> <block pos:line="89" pos:column="18">{
		<expr_stmt><expr><name pos:line="90" pos:column="17">pos<pos:position pos:line="90" pos:column="20"/></name> <operator pos:line="90" pos:column="21">=<pos:position pos:line="90" pos:column="22"/></operator> <call><name pos:line="90" pos:column="23">search_ref_dir<pos:position pos:line="90" pos:column="37"/></name><argument_list pos:line="90" pos:column="37">(<argument><expr><name pos:line="90" pos:column="38">dir<pos:position pos:line="90" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="43">dirname<pos:position pos:line="90" pos:column="50"/></name><operator pos:line="90" pos:column="50">.<pos:position pos:line="90" pos:column="51"/></operator><name pos:line="90" pos:column="51">buf<pos:position pos:line="90" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="56">dirname<pos:position pos:line="90" pos:column="63"/></name><operator pos:line="90" pos:column="63">.<pos:position pos:line="90" pos:column="64"/></operator><name pos:line="90" pos:column="64">len<pos:position pos:line="90" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="69"/></expr_stmt>

		<if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">(<expr><name pos:line="92" pos:column="21">pos<pos:position pos:line="92" pos:column="24"/></name> <operator pos:line="92" pos:column="25">&gt;=<pos:position pos:line="92" pos:column="30"/></operator> <literal type="number" pos:line="92" pos:column="28">0<pos:position pos:line="92" pos:column="29"/></literal></expr>)<pos:position pos:line="92" pos:column="30"/></condition><then pos:line="92" pos:column="30"> <block pos:line="92" pos:column="31">{
			<comment type="block" pos:line="93" pos:column="25">/*
			 * We found a directory named "$refname/"
			 * (e.g., "refs/foo/bar/"). It is a problem
			 * iff it contains any ref that is not in
			 * "skip".
			 */</comment>
			<decl_stmt><decl><type><name><name pos:line="99" pos:column="25">struct<pos:position pos:line="99" pos:column="31"/></name> <name pos:line="99" pos:column="32">nonmatching_ref_data<pos:position pos:line="99" pos:column="52"/></name></name></type> <name pos:line="99" pos:column="53">data<pos:position pos:line="99" pos:column="57"/></name></decl>;<pos:position pos:line="99" pos:column="58"/></decl_stmt>

			<expr_stmt><expr><name><name pos:line="101" pos:column="25">data<pos:position pos:line="101" pos:column="29"/></name><operator pos:line="101" pos:column="29">.<pos:position pos:line="101" pos:column="30"/></operator><name pos:line="101" pos:column="30">skip<pos:position pos:line="101" pos:column="34"/></name></name> <operator pos:line="101" pos:column="35">=<pos:position pos:line="101" pos:column="36"/></operator> <name pos:line="101" pos:column="37">skip<pos:position pos:line="101" pos:column="41"/></name></expr>;<pos:position pos:line="101" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="102" pos:column="25">data<pos:position pos:line="102" pos:column="29"/></name><operator pos:line="102" pos:column="29">.<pos:position pos:line="102" pos:column="30"/></operator><name pos:line="102" pos:column="30">conflicting_refname<pos:position pos:line="102" pos:column="49"/></name></name> <operator pos:line="102" pos:column="50">=<pos:position pos:line="102" pos:column="51"/></operator> <name pos:line="102" pos:column="52">NULL<pos:position pos:line="102" pos:column="56"/></name></expr>;<pos:position pos:line="102" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name pos:line="103" pos:column="25">dir<pos:position pos:line="103" pos:column="28"/></name> <operator pos:line="103" pos:column="29">=<pos:position pos:line="103" pos:column="30"/></operator> <call><name pos:line="103" pos:column="31">get_ref_dir<pos:position pos:line="103" pos:column="42"/></name><argument_list pos:line="103" pos:column="42">(<argument><expr><name><name pos:line="103" pos:column="43">dir<pos:position pos:line="103" pos:column="46"/></name><operator pos:line="103" pos:column="46">-&gt;<pos:position pos:line="103" pos:column="51"/></operator><name pos:line="103" pos:column="48">entries<pos:position pos:line="103" pos:column="55"/></name><index pos:line="103" pos:column="55">[<expr><name pos:line="103" pos:column="56">pos<pos:position pos:line="103" pos:column="59"/></name></expr>]<pos:position pos:line="103" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="103" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="104" pos:column="25">sort_ref_dir<pos:position pos:line="104" pos:column="37"/></name><argument_list pos:line="104" pos:column="37">(<argument><expr><name pos:line="104" pos:column="38">dir<pos:position pos:line="104" pos:column="41"/></name></expr></argument>)<pos:position pos:line="104" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="43"/></expr_stmt>
			<if pos:line="105" pos:column="25">if <condition pos:line="105" pos:column="28">(<expr><call><name pos:line="105" pos:column="29">do_for_each_entry_in_dir<pos:position pos:line="105" pos:column="53"/></name><argument_list pos:line="105" pos:column="53">(<argument><expr><name pos:line="105" pos:column="54">dir<pos:position pos:line="105" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="105" pos:column="59">0<pos:position pos:line="105" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="62">nonmatching_ref_fn<pos:position pos:line="105" pos:column="80"/></name></expr></argument>, <argument><expr><operator pos:line="105" pos:column="82">&amp;<pos:position pos:line="105" pos:column="87"/></operator><name pos:line="105" pos:column="83">data<pos:position pos:line="105" pos:column="87"/></name></expr></argument>)<pos:position pos:line="105" pos:column="88"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="89"/></condition><then pos:line="105" pos:column="89"> <block pos:line="105" pos:column="90">{
				<expr_stmt><expr><call><name pos:line="106" pos:column="33">strbuf_addf<pos:position pos:line="106" pos:column="44"/></name><argument_list pos:line="106" pos:column="44">(<argument><expr><name pos:line="106" pos:column="45">err<pos:position pos:line="106" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="50">"'%s' exists; cannot create '%s'"<pos:position pos:line="106" pos:column="83"/></literal></expr></argument>,
					    <argument><expr><name><name pos:line="107" pos:column="45">data<pos:position pos:line="107" pos:column="49"/></name><operator pos:line="107" pos:column="49">.<pos:position pos:line="107" pos:column="50"/></operator><name pos:line="107" pos:column="50">conflicting_refname<pos:position pos:line="107" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="71">refname<pos:position pos:line="107" pos:column="78"/></name></expr></argument>)<pos:position pos:line="107" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="80"/></expr_stmt>
				<goto pos:line="108" pos:column="33">goto <name pos:line="108" pos:column="38">cleanup<pos:position pos:line="108" pos:column="45"/></name>;<pos:position pos:line="108" pos:column="46"/></goto>
			}<pos:position pos:line="109" pos:column="26"/></block></then></if>
		}<pos:position pos:line="110" pos:column="18"/></block></then></if>
	}<pos:position pos:line="111" pos:column="10"/></block></then></if>

	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name pos:line="113" pos:column="13">extras<pos:position pos:line="113" pos:column="19"/></name></expr>)<pos:position pos:line="113" pos:column="20"/></condition><then pos:line="113" pos:column="20"> <block pos:line="113" pos:column="21">{
		<comment type="block" pos:line="114" pos:column="17">/*
		 * Check for entries in extras that start with
		 * "$refname/". We do that by looking for the place
		 * where "$refname/" would be inserted in extras. If
		 * there is an entry at that position that starts with
		 * "$refname/" and is not in skip, then we have a
		 * conflict.
		 */</comment>
		<for pos:line="122" pos:column="17">for <control pos:line="122" pos:column="21">(<init><expr><name pos:line="122" pos:column="22">pos<pos:position pos:line="122" pos:column="25"/></name> <operator pos:line="122" pos:column="26">=<pos:position pos:line="122" pos:column="27"/></operator> <call><name pos:line="122" pos:column="28">string_list_find_insert_index<pos:position pos:line="122" pos:column="57"/></name><argument_list pos:line="122" pos:column="57">(<argument><expr><name pos:line="122" pos:column="58">extras<pos:position pos:line="122" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="66">dirname<pos:position pos:line="122" pos:column="73"/></name><operator pos:line="122" pos:column="73">.<pos:position pos:line="122" pos:column="74"/></operator><name pos:line="122" pos:column="74">buf<pos:position pos:line="122" pos:column="77"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="79">0<pos:position pos:line="122" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="82"/></init>
		     <condition><expr><name pos:line="123" pos:column="22">pos<pos:position pos:line="123" pos:column="25"/></name> <operator pos:line="123" pos:column="26">&lt;<pos:position pos:line="123" pos:column="30"/></operator> <name><name pos:line="123" pos:column="28">extras<pos:position pos:line="123" pos:column="34"/></name><operator pos:line="123" pos:column="34">-&gt;<pos:position pos:line="123" pos:column="39"/></operator><name pos:line="123" pos:column="36">nr<pos:position pos:line="123" pos:column="38"/></name></name></expr>;<pos:position pos:line="123" pos:column="39"/></condition> <incr><expr><name pos:line="123" pos:column="40">pos<pos:position pos:line="123" pos:column="43"/></name><operator pos:line="123" pos:column="43">++<pos:position pos:line="123" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="123" pos:column="46"/></control> <block pos:line="123" pos:column="47">{
			<decl_stmt><decl><type><specifier pos:line="124" pos:column="25">const<pos:position pos:line="124" pos:column="30"/></specifier> <name pos:line="124" pos:column="31">char<pos:position pos:line="124" pos:column="35"/></name> <modifier pos:line="124" pos:column="36">*<pos:position pos:line="124" pos:column="37"/></modifier></type><name pos:line="124" pos:column="37">extra_refname<pos:position pos:line="124" pos:column="50"/></name> <init pos:line="124" pos:column="51">= <expr><name><name pos:line="124" pos:column="53">extras<pos:position pos:line="124" pos:column="59"/></name><operator pos:line="124" pos:column="59">-&gt;<pos:position pos:line="124" pos:column="64"/></operator><name pos:line="124" pos:column="61">items<pos:position pos:line="124" pos:column="66"/></name><index pos:line="124" pos:column="66">[<expr><name pos:line="124" pos:column="67">pos<pos:position pos:line="124" pos:column="70"/></name></expr>]<pos:position pos:line="124" pos:column="71"/></index></name><operator pos:line="124" pos:column="71">.<pos:position pos:line="124" pos:column="72"/></operator><name pos:line="124" pos:column="72">string<pos:position pos:line="124" pos:column="78"/></name></expr></init></decl>;<pos:position pos:line="124" pos:column="79"/></decl_stmt>

			<if pos:line="126" pos:column="25">if <condition pos:line="126" pos:column="28">(<expr><operator pos:line="126" pos:column="29">!<pos:position pos:line="126" pos:column="30"/></operator><call><name pos:line="126" pos:column="30">starts_with<pos:position pos:line="126" pos:column="41"/></name><argument_list pos:line="126" pos:column="41">(<argument><expr><name pos:line="126" pos:column="42">extra_refname<pos:position pos:line="126" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="57">dirname<pos:position pos:line="126" pos:column="64"/></name><operator pos:line="126" pos:column="64">.<pos:position pos:line="126" pos:column="65"/></operator><name pos:line="126" pos:column="65">buf<pos:position pos:line="126" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="126" pos:column="70"/></condition><then pos:line="126" pos:column="70">
				<block type="pseudo"><break pos:line="127" pos:column="33">break;<pos:position pos:line="127" pos:column="39"/></break></block></then></if>

			<if pos:line="129" pos:column="25">if <condition pos:line="129" pos:column="28">(<expr><operator pos:line="129" pos:column="29">!<pos:position pos:line="129" pos:column="30"/></operator><name pos:line="129" pos:column="30">skip<pos:position pos:line="129" pos:column="34"/></name> <operator pos:line="129" pos:column="35">||<pos:position pos:line="129" pos:column="37"/></operator> <operator pos:line="129" pos:column="38">!<pos:position pos:line="129" pos:column="39"/></operator><call><name pos:line="129" pos:column="39">string_list_has_string<pos:position pos:line="129" pos:column="61"/></name><argument_list pos:line="129" pos:column="61">(<argument><expr><name pos:line="129" pos:column="62">skip<pos:position pos:line="129" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="68">extra_refname<pos:position pos:line="129" pos:column="81"/></name></expr></argument>)<pos:position pos:line="129" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="129" pos:column="83"/></condition><then pos:line="129" pos:column="83"> <block pos:line="129" pos:column="84">{
				<expr_stmt><expr><call><name pos:line="130" pos:column="33">strbuf_addf<pos:position pos:line="130" pos:column="44"/></name><argument_list pos:line="130" pos:column="44">(<argument><expr><name pos:line="130" pos:column="45">err<pos:position pos:line="130" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="50">"cannot process '%s' and '%s' at the same time"<pos:position pos:line="130" pos:column="97"/></literal></expr></argument>,
					    <argument><expr><name pos:line="131" pos:column="45">refname<pos:position pos:line="131" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="54">extra_refname<pos:position pos:line="131" pos:column="67"/></name></expr></argument>)<pos:position pos:line="131" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="69"/></expr_stmt>
				<goto pos:line="132" pos:column="33">goto <name pos:line="132" pos:column="38">cleanup<pos:position pos:line="132" pos:column="45"/></name>;<pos:position pos:line="132" pos:column="46"/></goto>
			}<pos:position pos:line="133" pos:column="26"/></block></then></if>
		}<pos:position pos:line="134" pos:column="18"/></block></for>
	}<pos:position pos:line="135" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="137" pos:column="9">/* No conflicts were found */</comment>
	<expr_stmt><expr><name pos:line="138" pos:column="9">ret<pos:position pos:line="138" pos:column="12"/></name> <operator pos:line="138" pos:column="13">=<pos:position pos:line="138" pos:column="14"/></operator> <literal type="number" pos:line="138" pos:column="15">0<pos:position pos:line="138" pos:column="16"/></literal></expr>;<pos:position pos:line="138" pos:column="17"/></expr_stmt>

<label><name pos:line="140" pos:column="1">cleanup<pos:position pos:line="140" pos:column="8"/></name>:<pos:position pos:line="140" pos:column="9"/></label>
	<expr_stmt><expr><call><name pos:line="141" pos:column="9">strbuf_release<pos:position pos:line="141" pos:column="23"/></name><argument_list pos:line="141" pos:column="23">(<argument><expr><operator pos:line="141" pos:column="24">&amp;<pos:position pos:line="141" pos:column="29"/></operator><name pos:line="141" pos:column="25">dirname<pos:position pos:line="141" pos:column="32"/></name></expr></argument>)<pos:position pos:line="141" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="34"/></expr_stmt>
	<return pos:line="142" pos:column="9">return <expr><name pos:line="142" pos:column="16">ret<pos:position pos:line="142" pos:column="19"/></name></expr>;<pos:position pos:line="142" pos:column="20"/></return>
}<pos:position pos:line="143" pos:column="2"/></block></function></unit>

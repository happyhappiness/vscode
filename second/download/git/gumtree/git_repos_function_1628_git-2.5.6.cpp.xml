<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1628_git-2.5.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">open_packed_git_1<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">packed_git<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">p<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">stat<pos:position pos:line="3" pos:column="20"/></name></name></type> <name pos:line="3" pos:column="21">st<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">pack_header<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">hdr<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">char<pos:position pos:line="5" pos:column="22"/></name></type> <name><name pos:line="5" pos:column="23">sha1<pos:position pos:line="5" pos:column="27"/></name><index pos:line="5" pos:column="27">[<expr><literal type="number" pos:line="5" pos:column="28">20<pos:position pos:line="5" pos:column="30"/></literal></expr>]<pos:position pos:line="5" pos:column="31"/></index></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">idx_sha1<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">long<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">fd_flag<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name><name pos:line="9" pos:column="14">p<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">index_data<pos:position pos:line="9" pos:column="27"/></name></name> <operator pos:line="9" pos:column="28">&amp;&amp;<pos:position pos:line="9" pos:column="38"/></operator> <call><name pos:line="9" pos:column="31">open_pack_index<pos:position pos:line="9" pos:column="46"/></name><argument_list pos:line="9" pos:column="46">(<argument><expr><name pos:line="9" pos:column="47">p<pos:position pos:line="9" pos:column="48"/></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><call><name pos:line="10" pos:column="24">error<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><literal type="string" pos:line="10" pos:column="30">"packfile %s index unavailable"<pos:position pos:line="10" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="63">p<pos:position pos:line="10" pos:column="64"/></name><operator pos:line="10" pos:column="64">-&gt;<pos:position pos:line="10" pos:column="69"/></operator><name pos:line="10" pos:column="66">pack_name<pos:position pos:line="10" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></return></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">pack_max_fds<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27"> <block pos:line="12" pos:column="28">{
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">unsigned<pos:position pos:line="13" pos:column="25"/></name> <name pos:line="13" pos:column="26">int<pos:position pos:line="13" pos:column="29"/></name></type> <name pos:line="13" pos:column="30">max_fds<pos:position pos:line="13" pos:column="37"/></name> <init pos:line="13" pos:column="38">= <expr><call><name pos:line="13" pos:column="40">get_max_fd_limit<pos:position pos:line="13" pos:column="56"/></name><argument_list pos:line="13" pos:column="56">()<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="59"/></decl_stmt>

		<comment type="block" pos:line="15" pos:column="17">/* Save 3 for stdin/stdout/stderr, 22 for work */</comment>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><literal type="number" pos:line="16" pos:column="21">25<pos:position pos:line="16" pos:column="23"/></literal> <operator pos:line="16" pos:column="24">&lt;<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="26">max_fds<pos:position pos:line="16" pos:column="33"/></name></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">pack_max_fds<pos:position pos:line="17" pos:column="37"/></name> <operator pos:line="17" pos:column="38">=<pos:position pos:line="17" pos:column="39"/></operator> <name pos:line="17" pos:column="40">max_fds<pos:position pos:line="17" pos:column="47"/></name> <operator pos:line="17" pos:column="48">-<pos:position pos:line="17" pos:column="49"/></operator> <literal type="number" pos:line="17" pos:column="50">25<pos:position pos:line="17" pos:column="52"/></literal></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt></block></then>
		<else pos:line="18" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="25">pack_max_fds<pos:position pos:line="19" pos:column="37"/></name> <operator pos:line="19" pos:column="38">=<pos:position pos:line="19" pos:column="39"/></operator> <literal type="number" pos:line="19" pos:column="40">1<pos:position pos:line="19" pos:column="41"/></literal></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt></block></else></if>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<while pos:line="22" pos:column="9">while <condition pos:line="22" pos:column="15">(<expr><name pos:line="22" pos:column="16">pack_max_fds<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">&lt;=<pos:position pos:line="22" pos:column="34"/></operator> <name pos:line="22" pos:column="32">pack_open_fds<pos:position pos:line="22" pos:column="45"/></name> <operator pos:line="22" pos:column="46">&amp;&amp;<pos:position pos:line="22" pos:column="56"/></operator> <call><name pos:line="22" pos:column="49">close_one_pack<pos:position pos:line="22" pos:column="63"/></name><argument_list pos:line="22" pos:column="63">()<pos:position pos:line="22" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="66"/></condition>
		<block type="pseudo"><empty_stmt pos:line="23" pos:column="17">;<pos:position pos:line="23" pos:column="18"/></empty_stmt></block></while> <comment type="block" pos:line="23" pos:column="19">/* nothing */</comment>

	<expr_stmt><expr><name><name pos:line="25" pos:column="9">p<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">pack_fd<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <call><name pos:line="25" pos:column="22">git_open_noatime<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><name><name pos:line="25" pos:column="39">p<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">pack_name<pos:position pos:line="25" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">p<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">pack_fd<pos:position pos:line="26" pos:column="23"/></name></name> <operator pos:line="26" pos:column="24">&lt;<pos:position pos:line="26" pos:column="28"/></operator> <literal type="number" pos:line="26" pos:column="26">0<pos:position pos:line="26" pos:column="27"/></literal> <operator pos:line="26" pos:column="28">||<pos:position pos:line="26" pos:column="30"/></operator> <call><name pos:line="26" pos:column="31">fstat<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><name><name pos:line="26" pos:column="37">p<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">pack_fd<pos:position pos:line="26" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="49">&amp;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="50">st<pos:position pos:line="26" pos:column="52"/></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54">
		<block type="pseudo"><return pos:line="27" pos:column="17">return <expr><operator pos:line="27" pos:column="24">-<pos:position pos:line="27" pos:column="25"/></operator><literal type="number" pos:line="27" pos:column="25">1<pos:position pos:line="27" pos:column="26"/></literal></expr>;<pos:position pos:line="27" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="28" pos:column="9">pack_open_fds<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">++<pos:position pos:line="28" pos:column="24"/></operator></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>

	<comment type="block" pos:line="30" pos:column="9">/* If we created the struct before we had the pack we lack size. */</comment>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><name><name pos:line="31" pos:column="14">p<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">-&gt;<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="17">pack_size<pos:position pos:line="31" pos:column="26"/></name></name></expr>)<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27"> <block pos:line="31" pos:column="28">{
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">!<pos:position pos:line="32" pos:column="22"/></operator><call><name pos:line="32" pos:column="22">S_ISREG<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name><name pos:line="32" pos:column="30">st<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">.<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="33">st_mode<pos:position pos:line="32" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="42"/></condition><then pos:line="32" pos:column="42">
			<block type="pseudo"><return pos:line="33" pos:column="25">return <expr><call><name pos:line="33" pos:column="32">error<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">(<argument><expr><literal type="string" pos:line="33" pos:column="38">"packfile %s not a regular file"<pos:position pos:line="33" pos:column="70"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="72">p<pos:position pos:line="33" pos:column="73"/></name><operator pos:line="33" pos:column="73">-&gt;<pos:position pos:line="33" pos:column="78"/></operator><name pos:line="33" pos:column="75">pack_name<pos:position pos:line="33" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="86"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">p<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">pack_size<pos:position pos:line="34" pos:column="29"/></name></name> <operator pos:line="34" pos:column="30">=<pos:position pos:line="34" pos:column="31"/></operator> <name><name pos:line="34" pos:column="32">st<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">.<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">st_size<pos:position pos:line="34" pos:column="42"/></name></name></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then> <elseif pos:line="35" pos:column="11">else <if pos:line="35" pos:column="16">if <condition pos:line="35" pos:column="19">(<expr><name><name pos:line="35" pos:column="20">p<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">pack_size<pos:position pos:line="35" pos:column="32"/></name></name> <operator pos:line="35" pos:column="33">!=<pos:position pos:line="35" pos:column="35"/></operator> <name><name pos:line="35" pos:column="36">st<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">.<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">st_size<pos:position pos:line="35" pos:column="46"/></name></name></expr>)<pos:position pos:line="35" pos:column="47"/></condition><then pos:line="35" pos:column="47">
		<block type="pseudo"><return pos:line="36" pos:column="17">return <expr><call><name pos:line="36" pos:column="24">error<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><literal type="string" pos:line="36" pos:column="30">"packfile %s size changed"<pos:position pos:line="36" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="58">p<pos:position pos:line="36" pos:column="59"/></name><operator pos:line="36" pos:column="59">-&gt;<pos:position pos:line="36" pos:column="64"/></operator><name pos:line="36" pos:column="61">pack_name<pos:position pos:line="36" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="72"/></return></block></then></if></elseif></if>

	<comment type="block" pos:line="38" pos:column="9">/* We leave these file descriptors open with sliding mmap;
	 * there is no point keeping them open across exec(), though.
	 */</comment>
	<expr_stmt><expr><name pos:line="41" pos:column="9">fd_flag<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <call><name pos:line="41" pos:column="19">fcntl<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name><name pos:line="41" pos:column="25">p<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">-&gt;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="28">pack_fd<pos:position pos:line="41" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="37">F_GETFD<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="46">0<pos:position pos:line="41" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="49"/></expr_stmt>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">fd_flag<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">&lt;<pos:position pos:line="42" pos:column="25"/></operator> <literal type="number" pos:line="42" pos:column="23">0<pos:position pos:line="42" pos:column="24"/></literal></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25">
		<block type="pseudo"><return pos:line="43" pos:column="17">return <expr><call><name pos:line="43" pos:column="24">error<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><literal type="string" pos:line="43" pos:column="30">"cannot determine file descriptor flags"<pos:position pos:line="43" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="72"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="44" pos:column="9">fd_flag<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">|=<pos:position pos:line="44" pos:column="19"/></operator> <name pos:line="44" pos:column="20">FD_CLOEXEC<pos:position pos:line="44" pos:column="30"/></name></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">fcntl<pos:position pos:line="45" pos:column="18"/></name><argument_list pos:line="45" pos:column="18">(<argument><expr><name><name pos:line="45" pos:column="19">p<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">pack_fd<pos:position pos:line="45" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="31">F_SETFD<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="40">fd_flag<pos:position pos:line="45" pos:column="47"/></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call> <operator pos:line="45" pos:column="49">==<pos:position pos:line="45" pos:column="51"/></operator> <operator pos:line="45" pos:column="52">-<pos:position pos:line="45" pos:column="53"/></operator><literal type="number" pos:line="45" pos:column="53">1<pos:position pos:line="45" pos:column="54"/></literal></expr>)<pos:position pos:line="45" pos:column="55"/></condition><then pos:line="45" pos:column="55">
		<block type="pseudo"><return pos:line="46" pos:column="17">return <expr><call><name pos:line="46" pos:column="24">error<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><literal type="string" pos:line="46" pos:column="30">"cannot set FD_CLOEXEC"<pos:position pos:line="46" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="55"/></return></block></then></if>

	<comment type="block" pos:line="48" pos:column="9">/* Verify we recognize this pack file format. */</comment>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><call><name pos:line="49" pos:column="13">read_in_full<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><name><name pos:line="49" pos:column="26">p<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">-&gt;<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="29">pack_fd<pos:position pos:line="49" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="38">&amp;<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="39">hdr<pos:position pos:line="49" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="44">sizeof<argument_list pos:line="49" pos:column="50">(<argument><expr><name pos:line="49" pos:column="51">hdr<pos:position pos:line="49" pos:column="54"/></name></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call> <operator pos:line="49" pos:column="57">!=<pos:position pos:line="49" pos:column="59"/></operator> <sizeof pos:line="49" pos:column="60">sizeof<argument_list pos:line="49" pos:column="66">(<argument><expr><name pos:line="49" pos:column="67">hdr<pos:position pos:line="49" pos:column="70"/></name></expr></argument>)<pos:position pos:line="49" pos:column="71"/></argument_list></sizeof></expr>)<pos:position pos:line="49" pos:column="72"/></condition><then pos:line="49" pos:column="72">
		<block type="pseudo"><return pos:line="50" pos:column="17">return <expr><call><name pos:line="50" pos:column="24">error<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><literal type="string" pos:line="50" pos:column="30">"file %s is far too short to be a packfile"<pos:position pos:line="50" pos:column="73"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="75">p<pos:position pos:line="50" pos:column="76"/></name><operator pos:line="50" pos:column="76">-&gt;<pos:position pos:line="50" pos:column="81"/></operator><name pos:line="50" pos:column="78">pack_name<pos:position pos:line="50" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="89"/></return></block></then></if>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">hdr<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">.<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="17">hdr_signature<pos:position pos:line="51" pos:column="30"/></name></name> <operator pos:line="51" pos:column="31">!=<pos:position pos:line="51" pos:column="33"/></operator> <call><name pos:line="51" pos:column="34">htonl<pos:position pos:line="51" pos:column="39"/></name><argument_list pos:line="51" pos:column="39">(<argument><expr><name pos:line="51" pos:column="40">PACK_SIGNATURE<pos:position pos:line="51" pos:column="54"/></name></expr></argument>)<pos:position pos:line="51" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="56"/></condition><then pos:line="51" pos:column="56">
		<block type="pseudo"><return pos:line="52" pos:column="17">return <expr><call><name pos:line="52" pos:column="24">error<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><literal type="string" pos:line="52" pos:column="30">"file %s is not a GIT packfile"<pos:position pos:line="52" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="63">p<pos:position pos:line="52" pos:column="64"/></name><operator pos:line="52" pos:column="64">-&gt;<pos:position pos:line="52" pos:column="69"/></operator><name pos:line="52" pos:column="66">pack_name<pos:position pos:line="52" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="77"/></return></block></then></if>
	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><operator pos:line="53" pos:column="13">!<pos:position pos:line="53" pos:column="14"/></operator><call><name pos:line="53" pos:column="14">pack_version_ok<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><name><name pos:line="53" pos:column="30">hdr<pos:position pos:line="53" pos:column="33"/></name><operator pos:line="53" pos:column="33">.<pos:position pos:line="53" pos:column="34"/></operator><name pos:line="53" pos:column="34">hdr_version<pos:position pos:line="53" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="47"/></condition><then pos:line="53" pos:column="47">
		<block type="pseudo"><return pos:line="54" pos:column="17">return <expr><call><name pos:line="54" pos:column="24">error<pos:position pos:line="54" pos:column="29"/></name><argument_list pos:line="54" pos:column="29">(<argument><expr><literal type="string" pos:line="54" pos:column="30">"packfile %s is version %"<pos:position pos:line="54" pos:column="56"/></literal><name pos:line="54" pos:column="56">PRIu32<pos:position pos:line="54" pos:column="62"/></name><literal type="string" pos:line="54" pos:column="62">" and not"<pos:position pos:line="54" pos:column="72"/></literal>
			<literal type="string" pos:line="55" pos:column="25">" supported (try upgrading GIT to a newer version)"<pos:position pos:line="55" pos:column="76"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="56" pos:column="25">p<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">-&gt;<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="28">pack_name<pos:position pos:line="56" pos:column="37"/></name></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="39">ntohl<pos:position pos:line="56" pos:column="44"/></name><argument_list pos:line="56" pos:column="44">(<argument><expr><name><name pos:line="56" pos:column="45">hdr<pos:position pos:line="56" pos:column="48"/></name><operator pos:line="56" pos:column="48">.<pos:position pos:line="56" pos:column="49"/></operator><name pos:line="56" pos:column="49">hdr_version<pos:position pos:line="56" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="63"/></return></block></then></if>

	<comment type="block" pos:line="58" pos:column="9">/* Verify the pack matches its index. */</comment>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name><name pos:line="59" pos:column="13">p<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">num_objects<pos:position pos:line="59" pos:column="27"/></name></name> <operator pos:line="59" pos:column="28">!=<pos:position pos:line="59" pos:column="30"/></operator> <call><name pos:line="59" pos:column="31">ntohl<pos:position pos:line="59" pos:column="36"/></name><argument_list pos:line="59" pos:column="36">(<argument><expr><name><name pos:line="59" pos:column="37">hdr<pos:position pos:line="59" pos:column="40"/></name><operator pos:line="59" pos:column="40">.<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="41">hdr_entries<pos:position pos:line="59" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="54"/></condition><then pos:line="59" pos:column="54">
		<block type="pseudo"><return pos:line="60" pos:column="17">return <expr><call><name pos:line="60" pos:column="24">error<pos:position pos:line="60" pos:column="29"/></name><argument_list pos:line="60" pos:column="29">(<argument><expr><literal type="string" pos:line="60" pos:column="30">"packfile %s claims to have %"<pos:position pos:line="60" pos:column="60"/></literal><name pos:line="60" pos:column="60">PRIu32<pos:position pos:line="60" pos:column="66"/></name><literal type="string" pos:line="60" pos:column="66">" objects"<pos:position pos:line="60" pos:column="76"/></literal>
			     <literal type="string" pos:line="61" pos:column="30">" while index indicates %"<pos:position pos:line="61" pos:column="56"/></literal><name pos:line="61" pos:column="56">PRIu32<pos:position pos:line="61" pos:column="62"/></name><literal type="string" pos:line="61" pos:column="62">" objects"<pos:position pos:line="61" pos:column="72"/></literal></expr></argument>,
			     <argument><expr><name><name pos:line="62" pos:column="30">p<pos:position pos:line="62" pos:column="31"/></name><operator pos:line="62" pos:column="31">-&gt;<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="33">pack_name<pos:position pos:line="62" pos:column="42"/></name></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="44">ntohl<pos:position pos:line="62" pos:column="49"/></name><argument_list pos:line="62" pos:column="49">(<argument><expr><name><name pos:line="62" pos:column="50">hdr<pos:position pos:line="62" pos:column="53"/></name><operator pos:line="62" pos:column="53">.<pos:position pos:line="62" pos:column="54"/></operator><name pos:line="62" pos:column="54">hdr_entries<pos:position pos:line="62" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="66"/></argument_list></call></expr></argument>,
			     <argument><expr><name><name pos:line="63" pos:column="30">p<pos:position pos:line="63" pos:column="31"/></name><operator pos:line="63" pos:column="31">-&gt;<pos:position pos:line="63" pos:column="36"/></operator><name pos:line="63" pos:column="33">num_objects<pos:position pos:line="63" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="46"/></return></block></then></if>
	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><call><name pos:line="64" pos:column="13">lseek<pos:position pos:line="64" pos:column="18"/></name><argument_list pos:line="64" pos:column="18">(<argument><expr><name><name pos:line="64" pos:column="19">p<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">-&gt;<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="22">pack_fd<pos:position pos:line="64" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="31">p<pos:position pos:line="64" pos:column="32"/></name><operator pos:line="64" pos:column="32">-&gt;<pos:position pos:line="64" pos:column="37"/></operator><name pos:line="64" pos:column="34">pack_size<pos:position pos:line="64" pos:column="43"/></name></name> <operator pos:line="64" pos:column="44">-<pos:position pos:line="64" pos:column="45"/></operator> <sizeof pos:line="64" pos:column="46">sizeof<argument_list pos:line="64" pos:column="52">(<argument><expr><name pos:line="64" pos:column="53">sha1<pos:position pos:line="64" pos:column="57"/></name></expr></argument>)<pos:position pos:line="64" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="64" pos:column="60">SEEK_SET<pos:position pos:line="64" pos:column="68"/></name></expr></argument>)<pos:position pos:line="64" pos:column="69"/></argument_list></call> <operator pos:line="64" pos:column="70">==<pos:position pos:line="64" pos:column="72"/></operator> <operator pos:line="64" pos:column="73">-<pos:position pos:line="64" pos:column="74"/></operator><literal type="number" pos:line="64" pos:column="74">1<pos:position pos:line="64" pos:column="75"/></literal></expr>)<pos:position pos:line="64" pos:column="76"/></condition><then pos:line="64" pos:column="76">
		<block type="pseudo"><return pos:line="65" pos:column="17">return <expr><call><name pos:line="65" pos:column="24">error<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><literal type="string" pos:line="65" pos:column="30">"end of packfile %s is unavailable"<pos:position pos:line="65" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="67">p<pos:position pos:line="65" pos:column="68"/></name><operator pos:line="65" pos:column="68">-&gt;<pos:position pos:line="65" pos:column="73"/></operator><name pos:line="65" pos:column="70">pack_name<pos:position pos:line="65" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="81"/></return></block></then></if>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><call><name pos:line="66" pos:column="13">read_in_full<pos:position pos:line="66" pos:column="25"/></name><argument_list pos:line="66" pos:column="25">(<argument><expr><name><name pos:line="66" pos:column="26">p<pos:position pos:line="66" pos:column="27"/></name><operator pos:line="66" pos:column="27">-&gt;<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="29">pack_fd<pos:position pos:line="66" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="38">sha1<pos:position pos:line="66" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="44">sizeof<argument_list pos:line="66" pos:column="50">(<argument><expr><name pos:line="66" pos:column="51">sha1<pos:position pos:line="66" pos:column="55"/></name></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call> <operator pos:line="66" pos:column="58">!=<pos:position pos:line="66" pos:column="60"/></operator> <sizeof pos:line="66" pos:column="61">sizeof<argument_list pos:line="66" pos:column="67">(<argument><expr><name pos:line="66" pos:column="68">sha1<pos:position pos:line="66" pos:column="72"/></name></expr></argument>)<pos:position pos:line="66" pos:column="73"/></argument_list></sizeof></expr>)<pos:position pos:line="66" pos:column="74"/></condition><then pos:line="66" pos:column="74">
		<block type="pseudo"><return pos:line="67" pos:column="17">return <expr><call><name pos:line="67" pos:column="24">error<pos:position pos:line="67" pos:column="29"/></name><argument_list pos:line="67" pos:column="29">(<argument><expr><literal type="string" pos:line="67" pos:column="30">"packfile %s signature is unavailable"<pos:position pos:line="67" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="70">p<pos:position pos:line="67" pos:column="71"/></name><operator pos:line="67" pos:column="71">-&gt;<pos:position pos:line="67" pos:column="76"/></operator><name pos:line="67" pos:column="73">pack_name<pos:position pos:line="67" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="84"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="68" pos:column="9">idx_sha1<pos:position pos:line="68" pos:column="17"/></name> <operator pos:line="68" pos:column="18">=<pos:position pos:line="68" pos:column="19"/></operator> <operator pos:line="68" pos:column="20">(<pos:position pos:line="68" pos:column="21"/></operator><operator pos:line="68" pos:column="21">(<pos:position pos:line="68" pos:column="22"/></operator><name pos:line="68" pos:column="22">unsigned<pos:position pos:line="68" pos:column="30"/></name> <name pos:line="68" pos:column="31">char<pos:position pos:line="68" pos:column="35"/></name> <operator pos:line="68" pos:column="36">*<pos:position pos:line="68" pos:column="37"/></operator><operator pos:line="68" pos:column="37">)<pos:position pos:line="68" pos:column="38"/></operator><name><name pos:line="68" pos:column="38">p<pos:position pos:line="68" pos:column="39"/></name><operator pos:line="68" pos:column="39">-&gt;<pos:position pos:line="68" pos:column="44"/></operator><name pos:line="68" pos:column="41">index_data<pos:position pos:line="68" pos:column="51"/></name></name><operator pos:line="68" pos:column="51">)<pos:position pos:line="68" pos:column="52"/></operator> <operator pos:line="68" pos:column="53">+<pos:position pos:line="68" pos:column="54"/></operator> <name><name pos:line="68" pos:column="55">p<pos:position pos:line="68" pos:column="56"/></name><operator pos:line="68" pos:column="56">-&gt;<pos:position pos:line="68" pos:column="61"/></operator><name pos:line="68" pos:column="58">index_size<pos:position pos:line="68" pos:column="68"/></name></name> <operator pos:line="68" pos:column="69">-<pos:position pos:line="68" pos:column="70"/></operator> <literal type="number" pos:line="68" pos:column="71">40<pos:position pos:line="68" pos:column="73"/></literal></expr>;<pos:position pos:line="68" pos:column="74"/></expr_stmt>
	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><call><name pos:line="69" pos:column="13">hashcmp<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><name pos:line="69" pos:column="21">sha1<pos:position pos:line="69" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="27">idx_sha1<pos:position pos:line="69" pos:column="35"/></name></expr></argument>)<pos:position pos:line="69" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="37"/></condition><then pos:line="69" pos:column="37">
		<block type="pseudo"><return pos:line="70" pos:column="17">return <expr><call><name pos:line="70" pos:column="24">error<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><literal type="string" pos:line="70" pos:column="30">"packfile %s does not match index"<pos:position pos:line="70" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="66">p<pos:position pos:line="70" pos:column="67"/></name><operator pos:line="70" pos:column="67">-&gt;<pos:position pos:line="70" pos:column="72"/></operator><name pos:line="70" pos:column="69">pack_name<pos:position pos:line="70" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="80"/></return></block></then></if>
	<return pos:line="71" pos:column="9">return <expr><literal type="number" pos:line="71" pos:column="16">0<pos:position pos:line="71" pos:column="17"/></literal></expr>;<pos:position pos:line="71" pos:column="18"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

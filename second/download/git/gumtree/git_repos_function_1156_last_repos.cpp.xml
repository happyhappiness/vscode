<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1156_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">strbuf_add_indented_text<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">strbuf<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">buf<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">text<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
				     <parameter><decl><type><name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">indent<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">int<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">indent2<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">indent<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">&lt;<pos:position pos:line="4" pos:column="24"/></operator> <literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr>)<pos:position pos:line="4" pos:column="24"/></condition><then pos:line="4" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="17">indent<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">=<pos:position pos:line="5" pos:column="25"/></operator> <literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt></block></then></if>
	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><operator pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">text<pos:position pos:line="6" pos:column="21"/></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition> <block pos:line="6" pos:column="23">{
		<decl_stmt><decl><type><specifier pos:line="7" pos:column="17">const<pos:position pos:line="7" pos:column="22"/></specifier> <name pos:line="7" pos:column="23">char<pos:position pos:line="7" pos:column="27"/></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">eol<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><call><name pos:line="7" pos:column="35">strchrnul<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">text<pos:position pos:line="7" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="51">'\n'<pos:position pos:line="7" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="57"/></decl_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">eol<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">==<pos:position pos:line="8" pos:column="28"/></operator> <literal type="char" pos:line="8" pos:column="29">'\n'<pos:position pos:line="8" pos:column="33"/></literal></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="25">eol<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">++<pos:position pos:line="9" pos:column="30"/></operator></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">strbuf_addchars<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">buf<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="38">' '<pos:position pos:line="10" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="43">indent<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">strbuf_add<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">buf<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="33">text<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="39">eol<pos:position pos:line="11" pos:column="42"/></name> <operator pos:line="11" pos:column="43">-<pos:position pos:line="11" pos:column="44"/></operator> <name pos:line="11" pos:column="45">text<pos:position pos:line="11" pos:column="49"/></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">text<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">eol<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="13" pos:column="17">indent<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="26">indent2<pos:position pos:line="13" pos:column="33"/></name></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></while>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

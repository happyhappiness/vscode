<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6442_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">create_symref_locked<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">files_ref_store<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">refs<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">ref_lock<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">lock<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="56">const<pos:position pos:line="2" pos:column="61"/></specifier> <name pos:line="2" pos:column="62">char<pos:position pos:line="2" pos:column="66"/></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">refname<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name pos:line="3" pos:column="39">char<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">target<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="53">const<pos:position pos:line="3" pos:column="58"/></specifier> <name pos:line="3" pos:column="59">char<pos:position pos:line="3" pos:column="63"/></name> <modifier pos:line="3" pos:column="64">*<pos:position pos:line="3" pos:column="65"/></modifier></type><name pos:line="3" pos:column="65">logmsg<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="72"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">prefer_symlink_refs<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">&amp;&amp;<pos:position pos:line="5" pos:column="43"/></operator> <operator pos:line="5" pos:column="36">!<pos:position pos:line="5" pos:column="37"/></operator><call><name pos:line="5" pos:column="37">create_ref_symlink<pos:position pos:line="5" pos:column="55"/></name><argument_list pos:line="5" pos:column="55">(<argument><expr><name pos:line="5" pos:column="56">lock<pos:position pos:line="5" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="62">target<pos:position pos:line="5" pos:column="68"/></name></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="70"/></condition><then pos:line="5" pos:column="70"> <block pos:line="5" pos:column="71">{
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">update_symref_reflog<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><name pos:line="6" pos:column="38">refs<pos:position pos:line="6" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="44">lock<pos:position pos:line="6" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="50">refname<pos:position pos:line="6" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="59">target<pos:position pos:line="6" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="67">logmsg<pos:position pos:line="6" pos:column="73"/></name></expr></argument>)<pos:position pos:line="6" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="75"/></expr_stmt>
		<return pos:line="7" pos:column="17">return <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>;<pos:position pos:line="7" pos:column="26"/></return>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">fdopen_lock_file<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name><name pos:line="10" pos:column="31">lock<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">lk<pos:position pos:line="10" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="41">"w"<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="46"/></condition><then pos:line="10" pos:column="46">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><call><name pos:line="11" pos:column="24">error<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><literal type="string" pos:line="11" pos:column="30">"unable to fdopen %s: %s"<pos:position pos:line="11" pos:column="55"/></literal></expr></argument>,
			     <argument><expr><name><name pos:line="12" pos:column="30">lock<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">lk<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">tempfile<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">.<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="49">filename<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">.<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="58">buf<pos:position pos:line="12" pos:column="61"/></name></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="63">strerror<pos:position pos:line="12" pos:column="71"/></name><argument_list pos:line="12" pos:column="71">(<argument><expr><name pos:line="12" pos:column="72">errno<pos:position pos:line="12" pos:column="77"/></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="80"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">update_symref_reflog<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">refs<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="36">lock<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">refname<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">target<pos:position pos:line="14" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="59">logmsg<pos:position pos:line="14" pos:column="65"/></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt>

	<comment type="block" pos:line="16" pos:column="9">/* no error check; commit_ref will check ferror */</comment>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">fprintf<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name><name pos:line="17" pos:column="17">lock<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">lk<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">tempfile<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">.<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">fp<pos:position pos:line="17" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="40">"ref: %s\n"<pos:position pos:line="17" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="53">target<pos:position pos:line="17" pos:column="59"/></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">commit_ref<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">lock<pos:position pos:line="18" pos:column="28"/></name></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call> <operator pos:line="18" pos:column="30">&lt;<pos:position pos:line="18" pos:column="34"/></operator> <literal type="number" pos:line="18" pos:column="32">0<pos:position pos:line="18" pos:column="33"/></literal></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><call><name pos:line="19" pos:column="24">error<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><literal type="string" pos:line="19" pos:column="30">"unable to write symref for %s: %s"<pos:position pos:line="19" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="67">refname<pos:position pos:line="19" pos:column="74"/></name></expr></argument>,
			     <argument><expr><call><name pos:line="20" pos:column="30">strerror<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">errno<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></return></block></then></if>
	<return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

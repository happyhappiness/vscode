<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_111_git-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">format_commit_one<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">strbuf<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">sb<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="52">/* in UTF-8 */</comment>
				<parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">placeholder<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="3" pos:column="33">void<pos:position pos:line="3" pos:column="37"/></name> <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type><name pos:line="3" pos:column="39">context<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="47"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">format_commit_context<pos:position pos:line="5" pos:column="37"/></name></name> <modifier pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></modifier></type><name pos:line="5" pos:column="39">c<pos:position pos:line="5" pos:column="40"/></name> <init pos:line="5" pos:column="41">= <expr><name pos:line="5" pos:column="43">context<pos:position pos:line="5" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name><name pos:line="6" pos:column="15">struct<pos:position pos:line="6" pos:column="21"/></name> <name pos:line="6" pos:column="22">commit<pos:position pos:line="6" pos:column="28"/></name></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">commit<pos:position pos:line="6" pos:column="36"/></name> <init pos:line="6" pos:column="37">= <expr><name><name pos:line="6" pos:column="39">c<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="42">commit<pos:position pos:line="6" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">msg<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name><name pos:line="7" pos:column="27">c<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">message<pos:position pos:line="7" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">commit_list<pos:position pos:line="8" pos:column="27"/></name></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">p<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">h1<pos:position pos:line="9" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="17">h2<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* these are independent of the commit */</comment>
	<switch pos:line="12" pos:column="9">switch <condition pos:line="12" pos:column="16">(<expr><name><name pos:line="12" pos:column="17">placeholder<pos:position pos:line="12" pos:column="28"/></name><index pos:line="12" pos:column="28">[<expr><literal type="number" pos:line="12" pos:column="29">0<pos:position pos:line="12" pos:column="30"/></literal></expr>]<pos:position pos:line="12" pos:column="31"/></index></name></expr>)<pos:position pos:line="12" pos:column="32"/></condition> <block pos:line="12" pos:column="33">{
	<case pos:line="13" pos:column="9">case <expr><literal type="char" pos:line="13" pos:column="14">'C'<pos:position pos:line="13" pos:column="17"/></literal></expr>:<pos:position pos:line="13" pos:column="18"/></case>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">starts_with<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">placeholder<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">+<pos:position pos:line="14" pos:column="46"/></operator> <literal type="number" pos:line="14" pos:column="47">1<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="50">"(auto)"<pos:position pos:line="14" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="60"/></condition><then pos:line="14" pos:column="60"> <block pos:line="14" pos:column="61">{
			<expr_stmt><expr><name><name pos:line="15" pos:column="25">c<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">auto_color<pos:position pos:line="15" pos:column="38"/></name></name> <operator pos:line="15" pos:column="39">=<pos:position pos:line="15" pos:column="40"/></operator> <literal type="number" pos:line="15" pos:column="41">1<pos:position pos:line="15" pos:column="42"/></literal></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
			<return pos:line="16" pos:column="25">return <expr><literal type="number" pos:line="16" pos:column="32">7<pos:position pos:line="16" pos:column="33"/></literal></expr>;<pos:position pos:line="16" pos:column="34"/></return> <comment type="block" pos:line="16" pos:column="35">/* consumed 7 bytes, "C(auto)" */</comment>
		}<pos:position pos:line="17" pos:column="18"/></block></then> <else pos:line="17" pos:column="19">else <block pos:line="17" pos:column="24">{
			<decl_stmt><decl><type><name pos:line="18" pos:column="25">int<pos:position pos:line="18" pos:column="28"/></name></type> <name pos:line="18" pos:column="29">ret<pos:position pos:line="18" pos:column="32"/></name> <init pos:line="18" pos:column="33">= <expr><call><name pos:line="18" pos:column="35">parse_color<pos:position pos:line="18" pos:column="46"/></name><argument_list pos:line="18" pos:column="46">(<argument><expr><name pos:line="18" pos:column="47">sb<pos:position pos:line="18" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="51">placeholder<pos:position pos:line="18" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="64">c<pos:position pos:line="18" pos:column="65"/></name></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="67"/></decl_stmt>
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><name pos:line="19" pos:column="29">ret<pos:position pos:line="19" pos:column="32"/></name></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="33">c<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">-&gt;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="36">auto_color<pos:position pos:line="20" pos:column="46"/></name></name> <operator pos:line="20" pos:column="47">=<pos:position pos:line="20" pos:column="48"/></operator> <literal type="number" pos:line="20" pos:column="49">0<pos:position pos:line="20" pos:column="50"/></literal></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt></block></then></if>
			<comment type="block" pos:line="21" pos:column="25">/*
			 * Otherwise, we decided to treat %C&lt;unknown&gt;
			 * as a literal string, and the previous
			 * %C(auto) is still valid.
			 */</comment>
			<return pos:line="26" pos:column="25">return <expr><name pos:line="26" pos:column="32">ret<pos:position pos:line="26" pos:column="35"/></name></expr>;<pos:position pos:line="26" pos:column="36"/></return>
		}<pos:position pos:line="27" pos:column="18"/></block></else></if>
	<case pos:line="28" pos:column="9">case <expr><literal type="char" pos:line="28" pos:column="14">'n'<pos:position pos:line="28" pos:column="17"/></literal></expr>:<pos:position pos:line="28" pos:column="18"/></case>		<comment type="block" pos:line="28" pos:column="33">/* newline */</comment>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">strbuf_addch<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">sb<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="29" pos:column="34">'\n'<pos:position pos:line="29" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><literal type="number" pos:line="30" pos:column="24">1<pos:position pos:line="30" pos:column="25"/></literal></expr>;<pos:position pos:line="30" pos:column="26"/></return>
	<case pos:line="31" pos:column="9">case <expr><literal type="char" pos:line="31" pos:column="14">'x'<pos:position pos:line="31" pos:column="17"/></literal></expr>:<pos:position pos:line="31" pos:column="18"/></case>
		<comment type="block" pos:line="32" pos:column="17">/* %x00 == NUL, %x0a == LF, etc. */</comment>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><literal type="number" pos:line="33" pos:column="21">0<pos:position pos:line="33" pos:column="22"/></literal> <operator pos:line="33" pos:column="23">&lt;=<pos:position pos:line="33" pos:column="28"/></operator> <operator pos:line="33" pos:column="26">(<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="27">h1<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <name><name pos:line="33" pos:column="32">hexval_table<pos:position pos:line="33" pos:column="44"/></name><index pos:line="33" pos:column="44">[<expr><literal type="number" pos:line="33" pos:column="45">0xff<pos:position pos:line="33" pos:column="49"/></literal> <operator pos:line="33" pos:column="50">&amp;<pos:position pos:line="33" pos:column="55"/></operator> <name><name pos:line="33" pos:column="52">placeholder<pos:position pos:line="33" pos:column="63"/></name><index pos:line="33" pos:column="63">[<expr><literal type="number" pos:line="33" pos:column="64">1<pos:position pos:line="33" pos:column="65"/></literal></expr>]<pos:position pos:line="33" pos:column="66"/></index></name></expr>]<pos:position pos:line="33" pos:column="67"/></index></name><operator pos:line="33" pos:column="67">)<pos:position pos:line="33" pos:column="68"/></operator> <operator pos:line="33" pos:column="69">&amp;&amp;<pos:position pos:line="33" pos:column="79"/></operator>
		    <name pos:line="34" pos:column="21">h1<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">&lt;=<pos:position pos:line="34" pos:column="29"/></operator> <literal type="number" pos:line="34" pos:column="27">16<pos:position pos:line="34" pos:column="29"/></literal> <operator pos:line="34" pos:column="30">&amp;&amp;<pos:position pos:line="34" pos:column="40"/></operator>
		    <literal type="number" pos:line="35" pos:column="21">0<pos:position pos:line="35" pos:column="22"/></literal> <operator pos:line="35" pos:column="23">&lt;=<pos:position pos:line="35" pos:column="28"/></operator> <operator pos:line="35" pos:column="26">(<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">h2<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <name><name pos:line="35" pos:column="32">hexval_table<pos:position pos:line="35" pos:column="44"/></name><index pos:line="35" pos:column="44">[<expr><literal type="number" pos:line="35" pos:column="45">0xff<pos:position pos:line="35" pos:column="49"/></literal> <operator pos:line="35" pos:column="50">&amp;<pos:position pos:line="35" pos:column="55"/></operator> <name><name pos:line="35" pos:column="52">placeholder<pos:position pos:line="35" pos:column="63"/></name><index pos:line="35" pos:column="63">[<expr><literal type="number" pos:line="35" pos:column="64">2<pos:position pos:line="35" pos:column="65"/></literal></expr>]<pos:position pos:line="35" pos:column="66"/></index></name></expr>]<pos:position pos:line="35" pos:column="67"/></index></name><operator pos:line="35" pos:column="67">)<pos:position pos:line="35" pos:column="68"/></operator> <operator pos:line="35" pos:column="69">&amp;&amp;<pos:position pos:line="35" pos:column="79"/></operator>
		    <name pos:line="36" pos:column="21">h2<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">&lt;=<pos:position pos:line="36" pos:column="29"/></operator> <literal type="number" pos:line="36" pos:column="27">16<pos:position pos:line="36" pos:column="29"/></literal></expr>)<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30"> <block pos:line="36" pos:column="31">{
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">strbuf_addch<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">sb<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="42">(<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="43">h1<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">&lt;&lt;<pos:position pos:line="37" pos:column="53"/></operator><literal type="number" pos:line="37" pos:column="47">4<pos:position pos:line="37" pos:column="48"/></literal><operator pos:line="37" pos:column="48">)<pos:position pos:line="37" pos:column="49"/></operator><operator pos:line="37" pos:column="49">|<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="50">h2<pos:position pos:line="37" pos:column="52"/></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt>
			<return pos:line="38" pos:column="25">return <expr><literal type="number" pos:line="38" pos:column="32">3<pos:position pos:line="38" pos:column="33"/></literal></expr>;<pos:position pos:line="38" pos:column="34"/></return>
		}<pos:position pos:line="39" pos:column="18"/></block></then> <else pos:line="39" pos:column="19">else
			<block type="pseudo"><return pos:line="40" pos:column="25">return <expr><literal type="number" pos:line="40" pos:column="32">0<pos:position pos:line="40" pos:column="33"/></literal></expr>;<pos:position pos:line="40" pos:column="34"/></return></block></else></if>
	<case pos:line="41" pos:column="9">case <expr><literal type="char" pos:line="41" pos:column="14">'w'<pos:position pos:line="41" pos:column="17"/></literal></expr>:<pos:position pos:line="41" pos:column="18"/></case>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name><name pos:line="42" pos:column="21">placeholder<pos:position pos:line="42" pos:column="32"/></name><index pos:line="42" pos:column="32">[<expr><literal type="number" pos:line="42" pos:column="33">1<pos:position pos:line="42" pos:column="34"/></literal></expr>]<pos:position pos:line="42" pos:column="35"/></index></name> <operator pos:line="42" pos:column="36">==<pos:position pos:line="42" pos:column="38"/></operator> <literal type="char" pos:line="42" pos:column="39">'('<pos:position pos:line="42" pos:column="42"/></literal></expr>)<pos:position pos:line="42" pos:column="43"/></condition><then pos:line="42" pos:column="43"> <block pos:line="42" pos:column="44">{
			<decl_stmt><decl><type><name pos:line="43" pos:column="25">unsigned<pos:position pos:line="43" pos:column="33"/></name> <name pos:line="43" pos:column="34">long<pos:position pos:line="43" pos:column="38"/></name></type> <name pos:line="43" pos:column="39">width<pos:position pos:line="43" pos:column="44"/></name> <init pos:line="43" pos:column="45">= <expr><literal type="number" pos:line="43" pos:column="47">0<pos:position pos:line="43" pos:column="48"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="43" pos:column="50">indent1<pos:position pos:line="43" pos:column="57"/></name> <init pos:line="43" pos:column="58">= <expr><literal type="number" pos:line="43" pos:column="60">0<pos:position pos:line="43" pos:column="61"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="43" pos:column="63">indent2<pos:position pos:line="43" pos:column="70"/></name> <init pos:line="43" pos:column="71">= <expr><literal type="number" pos:line="43" pos:column="73">0<pos:position pos:line="43" pos:column="74"/></literal></expr></init></decl>;<pos:position pos:line="43" pos:column="75"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="44" pos:column="25">char<pos:position pos:line="44" pos:column="29"/></name> <modifier pos:line="44" pos:column="30">*<pos:position pos:line="44" pos:column="31"/></modifier></type><name pos:line="44" pos:column="31">next<pos:position pos:line="44" pos:column="35"/></name></decl>;<pos:position pos:line="44" pos:column="36"/></decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="45" pos:column="25">const<pos:position pos:line="45" pos:column="30"/></specifier> <name pos:line="45" pos:column="31">char<pos:position pos:line="45" pos:column="35"/></name> <modifier pos:line="45" pos:column="36">*<pos:position pos:line="45" pos:column="37"/></modifier></type><name pos:line="45" pos:column="37">start<pos:position pos:line="45" pos:column="42"/></name> <init pos:line="45" pos:column="43">= <expr><name pos:line="45" pos:column="45">placeholder<pos:position pos:line="45" pos:column="56"/></name> <operator pos:line="45" pos:column="57">+<pos:position pos:line="45" pos:column="58"/></operator> <literal type="number" pos:line="45" pos:column="59">2<pos:position pos:line="45" pos:column="60"/></literal></expr></init></decl>;<pos:position pos:line="45" pos:column="61"/></decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="46" pos:column="25">const<pos:position pos:line="46" pos:column="30"/></specifier> <name pos:line="46" pos:column="31">char<pos:position pos:line="46" pos:column="35"/></name> <modifier pos:line="46" pos:column="36">*<pos:position pos:line="46" pos:column="37"/></modifier></type><name pos:line="46" pos:column="37">end<pos:position pos:line="46" pos:column="40"/></name> <init pos:line="46" pos:column="41">= <expr><call><name pos:line="46" pos:column="43">strchr<pos:position pos:line="46" pos:column="49"/></name><argument_list pos:line="46" pos:column="49">(<argument><expr><name pos:line="46" pos:column="50">start<pos:position pos:line="46" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="46" pos:column="57">')'<pos:position pos:line="46" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="62"/></decl_stmt>
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><operator pos:line="47" pos:column="29">!<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">end<pos:position pos:line="47" pos:column="33"/></name></expr>)<pos:position pos:line="47" pos:column="34"/></condition><then pos:line="47" pos:column="34">
				<block type="pseudo"><return pos:line="48" pos:column="33">return <expr><literal type="number" pos:line="48" pos:column="40">0<pos:position pos:line="48" pos:column="41"/></literal></expr>;<pos:position pos:line="48" pos:column="42"/></return></block></then></if>
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><name pos:line="49" pos:column="29">end<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">&gt;<pos:position pos:line="49" pos:column="37"/></operator> <name pos:line="49" pos:column="35">start<pos:position pos:line="49" pos:column="40"/></name></expr>)<pos:position pos:line="49" pos:column="41"/></condition><then pos:line="49" pos:column="41"> <block pos:line="49" pos:column="42">{
				<expr_stmt><expr><name pos:line="50" pos:column="33">width<pos:position pos:line="50" pos:column="38"/></name> <operator pos:line="50" pos:column="39">=<pos:position pos:line="50" pos:column="40"/></operator> <call><name pos:line="50" pos:column="41">strtoul<pos:position pos:line="50" pos:column="48"/></name><argument_list pos:line="50" pos:column="48">(<argument><expr><name pos:line="50" pos:column="49">start<pos:position pos:line="50" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="56">&amp;<pos:position pos:line="50" pos:column="61"/></operator><name pos:line="50" pos:column="57">next<pos:position pos:line="50" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="63">10<pos:position pos:line="50" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="67"/></expr_stmt>
				<if pos:line="51" pos:column="33">if <condition pos:line="51" pos:column="36">(<expr><operator pos:line="51" pos:column="37">*<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="38">next<pos:position pos:line="51" pos:column="42"/></name> <operator pos:line="51" pos:column="43">==<pos:position pos:line="51" pos:column="45"/></operator> <literal type="char" pos:line="51" pos:column="46">','<pos:position pos:line="51" pos:column="49"/></literal></expr>)<pos:position pos:line="51" pos:column="50"/></condition><then pos:line="51" pos:column="50"> <block pos:line="51" pos:column="51">{
					<expr_stmt><expr><name pos:line="52" pos:column="41">indent1<pos:position pos:line="52" pos:column="48"/></name> <operator pos:line="52" pos:column="49">=<pos:position pos:line="52" pos:column="50"/></operator> <call><name pos:line="52" pos:column="51">strtoul<pos:position pos:line="52" pos:column="58"/></name><argument_list pos:line="52" pos:column="58">(<argument><expr><name pos:line="52" pos:column="59">next<pos:position pos:line="52" pos:column="63"/></name> <operator pos:line="52" pos:column="64">+<pos:position pos:line="52" pos:column="65"/></operator> <literal type="number" pos:line="52" pos:column="66">1<pos:position pos:line="52" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="69">&amp;<pos:position pos:line="52" pos:column="74"/></operator><name pos:line="52" pos:column="70">next<pos:position pos:line="52" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="76">10<pos:position pos:line="52" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="80"/></expr_stmt>
					<if pos:line="53" pos:column="41">if <condition pos:line="53" pos:column="44">(<expr><operator pos:line="53" pos:column="45">*<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="46">next<pos:position pos:line="53" pos:column="50"/></name> <operator pos:line="53" pos:column="51">==<pos:position pos:line="53" pos:column="53"/></operator> <literal type="char" pos:line="53" pos:column="54">','<pos:position pos:line="53" pos:column="57"/></literal></expr>)<pos:position pos:line="53" pos:column="58"/></condition><then pos:line="53" pos:column="58"> <block pos:line="53" pos:column="59">{
						<expr_stmt><expr><name pos:line="54" pos:column="49">indent2<pos:position pos:line="54" pos:column="56"/></name> <operator pos:line="54" pos:column="57">=<pos:position pos:line="54" pos:column="58"/></operator> <call><name pos:line="54" pos:column="59">strtoul<pos:position pos:line="54" pos:column="66"/></name><argument_list pos:line="54" pos:column="66">(<argument><expr><name pos:line="54" pos:column="67">next<pos:position pos:line="54" pos:column="71"/></name> <operator pos:line="54" pos:column="72">+<pos:position pos:line="54" pos:column="73"/></operator> <literal type="number" pos:line="54" pos:column="74">1<pos:position pos:line="54" pos:column="75"/></literal></expr></argument>,
								 <argument><expr><operator pos:line="55" pos:column="66">&amp;<pos:position pos:line="55" pos:column="71"/></operator><name pos:line="55" pos:column="67">next<pos:position pos:line="55" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="73">10<pos:position pos:line="55" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="77"/></expr_stmt>
					}<pos:position pos:line="56" pos:column="42"/></block></then></if>
				}<pos:position pos:line="57" pos:column="34"/></block></then></if>
				<if pos:line="58" pos:column="33">if <condition pos:line="58" pos:column="36">(<expr><operator pos:line="58" pos:column="37">*<pos:position pos:line="58" pos:column="38"/></operator><name pos:line="58" pos:column="38">next<pos:position pos:line="58" pos:column="42"/></name> <operator pos:line="58" pos:column="43">!=<pos:position pos:line="58" pos:column="45"/></operator> <literal type="char" pos:line="58" pos:column="46">')'<pos:position pos:line="58" pos:column="49"/></literal></expr>)<pos:position pos:line="58" pos:column="50"/></condition><then pos:line="58" pos:column="50">
					<block type="pseudo"><return pos:line="59" pos:column="41">return <expr><literal type="number" pos:line="59" pos:column="48">0<pos:position pos:line="59" pos:column="49"/></literal></expr>;<pos:position pos:line="59" pos:column="50"/></return></block></then></if>
			}<pos:position pos:line="60" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="61" pos:column="25">rewrap_message_tail<pos:position pos:line="61" pos:column="44"/></name><argument_list pos:line="61" pos:column="44">(<argument><expr><name pos:line="61" pos:column="45">sb<pos:position pos:line="61" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="49">c<pos:position pos:line="61" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="52">width<pos:position pos:line="61" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="59">indent1<pos:position pos:line="61" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="68">indent2<pos:position pos:line="61" pos:column="75"/></name></expr></argument>)<pos:position pos:line="61" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="77"/></expr_stmt>
			<return pos:line="62" pos:column="25">return <expr><name pos:line="62" pos:column="32">end<pos:position pos:line="62" pos:column="35"/></name> <operator pos:line="62" pos:column="36">-<pos:position pos:line="62" pos:column="37"/></operator> <name pos:line="62" pos:column="38">placeholder<pos:position pos:line="62" pos:column="49"/></name> <operator pos:line="62" pos:column="50">+<pos:position pos:line="62" pos:column="51"/></operator> <literal type="number" pos:line="62" pos:column="52">1<pos:position pos:line="62" pos:column="53"/></literal></expr>;<pos:position pos:line="62" pos:column="54"/></return>
		}<pos:position pos:line="63" pos:column="18"/></block></then> <else pos:line="63" pos:column="19">else
			<block type="pseudo"><return pos:line="64" pos:column="25">return <expr><literal type="number" pos:line="64" pos:column="32">0<pos:position pos:line="64" pos:column="33"/></literal></expr>;<pos:position pos:line="64" pos:column="34"/></return></block></else></if>

	<case pos:line="66" pos:column="9">case <expr><literal type="char" pos:line="66" pos:column="14">'&lt;'<pos:position pos:line="66" pos:column="20"/></literal></expr>:<pos:position pos:line="66" pos:column="18"/></case>
	<case pos:line="67" pos:column="9">case <expr><literal type="char" pos:line="67" pos:column="14">'&gt;'<pos:position pos:line="67" pos:column="20"/></literal></expr>:<pos:position pos:line="67" pos:column="18"/></case>
		<return pos:line="68" pos:column="17">return <expr><call><name pos:line="68" pos:column="24">parse_padding_placeholder<pos:position pos:line="68" pos:column="49"/></name><argument_list pos:line="68" pos:column="49">(<argument><expr><name pos:line="68" pos:column="50">sb<pos:position pos:line="68" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="54">placeholder<pos:position pos:line="68" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="67">c<pos:position pos:line="68" pos:column="68"/></name></expr></argument>)<pos:position pos:line="68" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="70"/></return>
	}<pos:position pos:line="69" pos:column="10"/></block></switch>

	<comment type="block" pos:line="71" pos:column="9">/* these depend on the commit */</comment>
	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><operator pos:line="72" pos:column="13">!<pos:position pos:line="72" pos:column="14"/></operator><name><name pos:line="72" pos:column="14">commit<pos:position pos:line="72" pos:column="20"/></name><operator pos:line="72" pos:column="20">-&gt;<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="22">object<pos:position pos:line="72" pos:column="28"/></name><operator pos:line="72" pos:column="28">.<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="29">parsed<pos:position pos:line="72" pos:column="35"/></name></name></expr>)<pos:position pos:line="72" pos:column="36"/></condition><then pos:line="72" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="17">parse_object<pos:position pos:line="73" pos:column="29"/></name><argument_list pos:line="73" pos:column="29">(<argument><expr><name><name pos:line="73" pos:column="30">commit<pos:position pos:line="73" pos:column="36"/></name><operator pos:line="73" pos:column="36">-&gt;<pos:position pos:line="73" pos:column="41"/></operator><name pos:line="73" pos:column="38">object<pos:position pos:line="73" pos:column="44"/></name><operator pos:line="73" pos:column="44">.<pos:position pos:line="73" pos:column="45"/></operator><name pos:line="73" pos:column="45">sha1<pos:position pos:line="73" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="51"/></expr_stmt></block></then></if>

	<switch pos:line="75" pos:column="9">switch <condition pos:line="75" pos:column="16">(<expr><name><name pos:line="75" pos:column="17">placeholder<pos:position pos:line="75" pos:column="28"/></name><index pos:line="75" pos:column="28">[<expr><literal type="number" pos:line="75" pos:column="29">0<pos:position pos:line="75" pos:column="30"/></literal></expr>]<pos:position pos:line="75" pos:column="31"/></index></name></expr>)<pos:position pos:line="75" pos:column="32"/></condition> <block pos:line="75" pos:column="33">{
	<case pos:line="76" pos:column="9">case <expr><literal type="char" pos:line="76" pos:column="14">'H'<pos:position pos:line="76" pos:column="17"/></literal></expr>:<pos:position pos:line="76" pos:column="18"/></case>		<comment type="block" pos:line="76" pos:column="33">/* commit hash */</comment>
		<expr_stmt><expr><call><name pos:line="77" pos:column="17">strbuf_addstr<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><name pos:line="77" pos:column="31">sb<pos:position pos:line="77" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="35">diff_get_color<pos:position pos:line="77" pos:column="49"/></name><argument_list pos:line="77" pos:column="49">(<argument><expr><name><name pos:line="77" pos:column="50">c<pos:position pos:line="77" pos:column="51"/></name><operator pos:line="77" pos:column="51">-&gt;<pos:position pos:line="77" pos:column="56"/></operator><name pos:line="77" pos:column="53">auto_color<pos:position pos:line="77" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="65">DIFF_COMMIT<pos:position pos:line="77" pos:column="76"/></name></expr></argument>)<pos:position pos:line="77" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="78" pos:column="17">strbuf_addstr<pos:position pos:line="78" pos:column="30"/></name><argument_list pos:line="78" pos:column="30">(<argument><expr><name pos:line="78" pos:column="31">sb<pos:position pos:line="78" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="78" pos:column="35">sha1_to_hex<pos:position pos:line="78" pos:column="46"/></name><argument_list pos:line="78" pos:column="46">(<argument><expr><name><name pos:line="78" pos:column="47">commit<pos:position pos:line="78" pos:column="53"/></name><operator pos:line="78" pos:column="53">-&gt;<pos:position pos:line="78" pos:column="58"/></operator><name pos:line="78" pos:column="55">object<pos:position pos:line="78" pos:column="61"/></name><operator pos:line="78" pos:column="61">.<pos:position pos:line="78" pos:column="62"/></operator><name pos:line="78" pos:column="62">sha1<pos:position pos:line="78" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="79" pos:column="17">strbuf_addstr<pos:position pos:line="79" pos:column="30"/></name><argument_list pos:line="79" pos:column="30">(<argument><expr><name pos:line="79" pos:column="31">sb<pos:position pos:line="79" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="79" pos:column="35">diff_get_color<pos:position pos:line="79" pos:column="49"/></name><argument_list pos:line="79" pos:column="49">(<argument><expr><name><name pos:line="79" pos:column="50">c<pos:position pos:line="79" pos:column="51"/></name><operator pos:line="79" pos:column="51">-&gt;<pos:position pos:line="79" pos:column="56"/></operator><name pos:line="79" pos:column="53">auto_color<pos:position pos:line="79" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="65">DIFF_RESET<pos:position pos:line="79" pos:column="75"/></name></expr></argument>)<pos:position pos:line="79" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="78"/></expr_stmt>
		<return pos:line="80" pos:column="17">return <expr><literal type="number" pos:line="80" pos:column="24">1<pos:position pos:line="80" pos:column="25"/></literal></expr>;<pos:position pos:line="80" pos:column="26"/></return>
	<case pos:line="81" pos:column="9">case <expr><literal type="char" pos:line="81" pos:column="14">'h'<pos:position pos:line="81" pos:column="17"/></literal></expr>:<pos:position pos:line="81" pos:column="18"/></case>		<comment type="block" pos:line="81" pos:column="33">/* abbreviated commit hash */</comment>
		<expr_stmt><expr><call><name pos:line="82" pos:column="17">strbuf_addstr<pos:position pos:line="82" pos:column="30"/></name><argument_list pos:line="82" pos:column="30">(<argument><expr><name pos:line="82" pos:column="31">sb<pos:position pos:line="82" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="82" pos:column="35">diff_get_color<pos:position pos:line="82" pos:column="49"/></name><argument_list pos:line="82" pos:column="49">(<argument><expr><name><name pos:line="82" pos:column="50">c<pos:position pos:line="82" pos:column="51"/></name><operator pos:line="82" pos:column="51">-&gt;<pos:position pos:line="82" pos:column="56"/></operator><name pos:line="82" pos:column="53">auto_color<pos:position pos:line="82" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="65">DIFF_COMMIT<pos:position pos:line="82" pos:column="76"/></name></expr></argument>)<pos:position pos:line="82" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="79"/></expr_stmt>
		<if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><call><name pos:line="83" pos:column="21">add_again<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">(<argument><expr><name pos:line="83" pos:column="31">sb<pos:position pos:line="83" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="35">&amp;<pos:position pos:line="83" pos:column="40"/></operator><name><name pos:line="83" pos:column="36">c<pos:position pos:line="83" pos:column="37"/></name><operator pos:line="83" pos:column="37">-&gt;<pos:position pos:line="83" pos:column="42"/></operator><name pos:line="83" pos:column="39">abbrev_commit_hash<pos:position pos:line="83" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="59"/></condition><then pos:line="83" pos:column="59"> <block pos:line="83" pos:column="60">{
			<expr_stmt><expr><call><name pos:line="84" pos:column="25">strbuf_addstr<pos:position pos:line="84" pos:column="38"/></name><argument_list pos:line="84" pos:column="38">(<argument><expr><name pos:line="84" pos:column="39">sb<pos:position pos:line="84" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="84" pos:column="43">diff_get_color<pos:position pos:line="84" pos:column="57"/></name><argument_list pos:line="84" pos:column="57">(<argument><expr><name><name pos:line="84" pos:column="58">c<pos:position pos:line="84" pos:column="59"/></name><operator pos:line="84" pos:column="59">-&gt;<pos:position pos:line="84" pos:column="64"/></operator><name pos:line="84" pos:column="61">auto_color<pos:position pos:line="84" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="73">DIFF_RESET<pos:position pos:line="84" pos:column="83"/></name></expr></argument>)<pos:position pos:line="84" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="86"/></expr_stmt>
			<return pos:line="85" pos:column="25">return <expr><literal type="number" pos:line="85" pos:column="32">1<pos:position pos:line="85" pos:column="33"/></literal></expr>;<pos:position pos:line="85" pos:column="34"/></return>
		}<pos:position pos:line="86" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="87" pos:column="17">strbuf_addstr<pos:position pos:line="87" pos:column="30"/></name><argument_list pos:line="87" pos:column="30">(<argument><expr><name pos:line="87" pos:column="31">sb<pos:position pos:line="87" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="87" pos:column="35">find_unique_abbrev<pos:position pos:line="87" pos:column="53"/></name><argument_list pos:line="87" pos:column="53">(<argument><expr><name><name pos:line="87" pos:column="54">commit<pos:position pos:line="87" pos:column="60"/></name><operator pos:line="87" pos:column="60">-&gt;<pos:position pos:line="87" pos:column="65"/></operator><name pos:line="87" pos:column="62">object<pos:position pos:line="87" pos:column="68"/></name><operator pos:line="87" pos:column="68">.<pos:position pos:line="87" pos:column="69"/></operator><name pos:line="87" pos:column="69">sha1<pos:position pos:line="87" pos:column="73"/></name></name></expr></argument>,
						     <argument><expr><name><name pos:line="88" pos:column="54">c<pos:position pos:line="88" pos:column="55"/></name><operator pos:line="88" pos:column="55">-&gt;<pos:position pos:line="88" pos:column="60"/></operator><name pos:line="88" pos:column="57">pretty_ctx<pos:position pos:line="88" pos:column="67"/></name><operator pos:line="88" pos:column="67">-&gt;<pos:position pos:line="88" pos:column="72"/></operator><name pos:line="88" pos:column="69">abbrev<pos:position pos:line="88" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="89" pos:column="17">strbuf_addstr<pos:position pos:line="89" pos:column="30"/></name><argument_list pos:line="89" pos:column="30">(<argument><expr><name pos:line="89" pos:column="31">sb<pos:position pos:line="89" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="89" pos:column="35">diff_get_color<pos:position pos:line="89" pos:column="49"/></name><argument_list pos:line="89" pos:column="49">(<argument><expr><name><name pos:line="89" pos:column="50">c<pos:position pos:line="89" pos:column="51"/></name><operator pos:line="89" pos:column="51">-&gt;<pos:position pos:line="89" pos:column="56"/></operator><name pos:line="89" pos:column="53">auto_color<pos:position pos:line="89" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="65">DIFF_RESET<pos:position pos:line="89" pos:column="75"/></name></expr></argument>)<pos:position pos:line="89" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="90" pos:column="17">c<pos:position pos:line="90" pos:column="18"/></name><operator pos:line="90" pos:column="18">-&gt;<pos:position pos:line="90" pos:column="23"/></operator><name pos:line="90" pos:column="20">abbrev_commit_hash<pos:position pos:line="90" pos:column="38"/></name><operator pos:line="90" pos:column="38">.<pos:position pos:line="90" pos:column="39"/></operator><name pos:line="90" pos:column="39">len<pos:position pos:line="90" pos:column="42"/></name></name> <operator pos:line="90" pos:column="43">=<pos:position pos:line="90" pos:column="44"/></operator> <name><name pos:line="90" pos:column="45">sb<pos:position pos:line="90" pos:column="47"/></name><operator pos:line="90" pos:column="47">-&gt;<pos:position pos:line="90" pos:column="52"/></operator><name pos:line="90" pos:column="49">len<pos:position pos:line="90" pos:column="52"/></name></name> <operator pos:line="90" pos:column="53">-<pos:position pos:line="90" pos:column="54"/></operator> <name><name pos:line="90" pos:column="55">c<pos:position pos:line="90" pos:column="56"/></name><operator pos:line="90" pos:column="56">-&gt;<pos:position pos:line="90" pos:column="61"/></operator><name pos:line="90" pos:column="58">abbrev_commit_hash<pos:position pos:line="90" pos:column="76"/></name><operator pos:line="90" pos:column="76">.<pos:position pos:line="90" pos:column="77"/></operator><name pos:line="90" pos:column="77">off<pos:position pos:line="90" pos:column="80"/></name></name></expr>;<pos:position pos:line="90" pos:column="81"/></expr_stmt>
		<return pos:line="91" pos:column="17">return <expr><literal type="number" pos:line="91" pos:column="24">1<pos:position pos:line="91" pos:column="25"/></literal></expr>;<pos:position pos:line="91" pos:column="26"/></return>
	<case pos:line="92" pos:column="9">case <expr><literal type="char" pos:line="92" pos:column="14">'T'<pos:position pos:line="92" pos:column="17"/></literal></expr>:<pos:position pos:line="92" pos:column="18"/></case>		<comment type="block" pos:line="92" pos:column="33">/* tree hash */</comment>
		<expr_stmt><expr><call><name pos:line="93" pos:column="17">strbuf_addstr<pos:position pos:line="93" pos:column="30"/></name><argument_list pos:line="93" pos:column="30">(<argument><expr><name pos:line="93" pos:column="31">sb<pos:position pos:line="93" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="93" pos:column="35">sha1_to_hex<pos:position pos:line="93" pos:column="46"/></name><argument_list pos:line="93" pos:column="46">(<argument><expr><name><name pos:line="93" pos:column="47">commit<pos:position pos:line="93" pos:column="53"/></name><operator pos:line="93" pos:column="53">-&gt;<pos:position pos:line="93" pos:column="58"/></operator><name pos:line="93" pos:column="55">tree<pos:position pos:line="93" pos:column="59"/></name><operator pos:line="93" pos:column="59">-&gt;<pos:position pos:line="93" pos:column="64"/></operator><name pos:line="93" pos:column="61">object<pos:position pos:line="93" pos:column="67"/></name><operator pos:line="93" pos:column="67">.<pos:position pos:line="93" pos:column="68"/></operator><name pos:line="93" pos:column="68">sha1<pos:position pos:line="93" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="93" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="75"/></expr_stmt>
		<return pos:line="94" pos:column="17">return <expr><literal type="number" pos:line="94" pos:column="24">1<pos:position pos:line="94" pos:column="25"/></literal></expr>;<pos:position pos:line="94" pos:column="26"/></return>
	<case pos:line="95" pos:column="9">case <expr><literal type="char" pos:line="95" pos:column="14">'t'<pos:position pos:line="95" pos:column="17"/></literal></expr>:<pos:position pos:line="95" pos:column="18"/></case>		<comment type="block" pos:line="95" pos:column="33">/* abbreviated tree hash */</comment>
		<if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><call><name pos:line="96" pos:column="21">add_again<pos:position pos:line="96" pos:column="30"/></name><argument_list pos:line="96" pos:column="30">(<argument><expr><name pos:line="96" pos:column="31">sb<pos:position pos:line="96" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="35">&amp;<pos:position pos:line="96" pos:column="40"/></operator><name><name pos:line="96" pos:column="36">c<pos:position pos:line="96" pos:column="37"/></name><operator pos:line="96" pos:column="37">-&gt;<pos:position pos:line="96" pos:column="42"/></operator><name pos:line="96" pos:column="39">abbrev_tree_hash<pos:position pos:line="96" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="57"/></condition><then pos:line="96" pos:column="57">
			<block type="pseudo"><return pos:line="97" pos:column="25">return <expr><literal type="number" pos:line="97" pos:column="32">1<pos:position pos:line="97" pos:column="33"/></literal></expr>;<pos:position pos:line="97" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="98" pos:column="17">strbuf_addstr<pos:position pos:line="98" pos:column="30"/></name><argument_list pos:line="98" pos:column="30">(<argument><expr><name pos:line="98" pos:column="31">sb<pos:position pos:line="98" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="98" pos:column="35">find_unique_abbrev<pos:position pos:line="98" pos:column="53"/></name><argument_list pos:line="98" pos:column="53">(<argument><expr><name><name pos:line="98" pos:column="54">commit<pos:position pos:line="98" pos:column="60"/></name><operator pos:line="98" pos:column="60">-&gt;<pos:position pos:line="98" pos:column="65"/></operator><name pos:line="98" pos:column="62">tree<pos:position pos:line="98" pos:column="66"/></name><operator pos:line="98" pos:column="66">-&gt;<pos:position pos:line="98" pos:column="71"/></operator><name pos:line="98" pos:column="68">object<pos:position pos:line="98" pos:column="74"/></name><operator pos:line="98" pos:column="74">.<pos:position pos:line="98" pos:column="75"/></operator><name pos:line="98" pos:column="75">sha1<pos:position pos:line="98" pos:column="79"/></name></name></expr></argument>,
						     <argument><expr><name><name pos:line="99" pos:column="54">c<pos:position pos:line="99" pos:column="55"/></name><operator pos:line="99" pos:column="55">-&gt;<pos:position pos:line="99" pos:column="60"/></operator><name pos:line="99" pos:column="57">pretty_ctx<pos:position pos:line="99" pos:column="67"/></name><operator pos:line="99" pos:column="67">-&gt;<pos:position pos:line="99" pos:column="72"/></operator><name pos:line="99" pos:column="69">abbrev<pos:position pos:line="99" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="99" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="100" pos:column="17">c<pos:position pos:line="100" pos:column="18"/></name><operator pos:line="100" pos:column="18">-&gt;<pos:position pos:line="100" pos:column="23"/></operator><name pos:line="100" pos:column="20">abbrev_tree_hash<pos:position pos:line="100" pos:column="36"/></name><operator pos:line="100" pos:column="36">.<pos:position pos:line="100" pos:column="37"/></operator><name pos:line="100" pos:column="37">len<pos:position pos:line="100" pos:column="40"/></name></name> <operator pos:line="100" pos:column="41">=<pos:position pos:line="100" pos:column="42"/></operator> <name><name pos:line="100" pos:column="43">sb<pos:position pos:line="100" pos:column="45"/></name><operator pos:line="100" pos:column="45">-&gt;<pos:position pos:line="100" pos:column="50"/></operator><name pos:line="100" pos:column="47">len<pos:position pos:line="100" pos:column="50"/></name></name> <operator pos:line="100" pos:column="51">-<pos:position pos:line="100" pos:column="52"/></operator> <name><name pos:line="100" pos:column="53">c<pos:position pos:line="100" pos:column="54"/></name><operator pos:line="100" pos:column="54">-&gt;<pos:position pos:line="100" pos:column="59"/></operator><name pos:line="100" pos:column="56">abbrev_tree_hash<pos:position pos:line="100" pos:column="72"/></name><operator pos:line="100" pos:column="72">.<pos:position pos:line="100" pos:column="73"/></operator><name pos:line="100" pos:column="73">off<pos:position pos:line="100" pos:column="76"/></name></name></expr>;<pos:position pos:line="100" pos:column="77"/></expr_stmt>
		<return pos:line="101" pos:column="17">return <expr><literal type="number" pos:line="101" pos:column="24">1<pos:position pos:line="101" pos:column="25"/></literal></expr>;<pos:position pos:line="101" pos:column="26"/></return>
	<case pos:line="102" pos:column="9">case <expr><literal type="char" pos:line="102" pos:column="14">'P'<pos:position pos:line="102" pos:column="17"/></literal></expr>:<pos:position pos:line="102" pos:column="18"/></case>		<comment type="block" pos:line="102" pos:column="33">/* parent hashes */</comment>
		<for pos:line="103" pos:column="17">for <control pos:line="103" pos:column="21">(<init><expr><name pos:line="103" pos:column="22">p<pos:position pos:line="103" pos:column="23"/></name> <operator pos:line="103" pos:column="24">=<pos:position pos:line="103" pos:column="25"/></operator> <name><name pos:line="103" pos:column="26">commit<pos:position pos:line="103" pos:column="32"/></name><operator pos:line="103" pos:column="32">-&gt;<pos:position pos:line="103" pos:column="37"/></operator><name pos:line="103" pos:column="34">parents<pos:position pos:line="103" pos:column="41"/></name></name></expr>;<pos:position pos:line="103" pos:column="42"/></init> <condition><expr><name pos:line="103" pos:column="43">p<pos:position pos:line="103" pos:column="44"/></name></expr>;<pos:position pos:line="103" pos:column="45"/></condition> <incr><expr><name pos:line="103" pos:column="46">p<pos:position pos:line="103" pos:column="47"/></name> <operator pos:line="103" pos:column="48">=<pos:position pos:line="103" pos:column="49"/></operator> <name><name pos:line="103" pos:column="50">p<pos:position pos:line="103" pos:column="51"/></name><operator pos:line="103" pos:column="51">-&gt;<pos:position pos:line="103" pos:column="56"/></operator><name pos:line="103" pos:column="53">next<pos:position pos:line="103" pos:column="57"/></name></name></expr></incr>)<pos:position pos:line="103" pos:column="58"/></control> <block pos:line="103" pos:column="59">{
			<if pos:line="104" pos:column="25">if <condition pos:line="104" pos:column="28">(<expr><name pos:line="104" pos:column="29">p<pos:position pos:line="104" pos:column="30"/></name> <operator pos:line="104" pos:column="31">!=<pos:position pos:line="104" pos:column="33"/></operator> <name><name pos:line="104" pos:column="34">commit<pos:position pos:line="104" pos:column="40"/></name><operator pos:line="104" pos:column="40">-&gt;<pos:position pos:line="104" pos:column="45"/></operator><name pos:line="104" pos:column="42">parents<pos:position pos:line="104" pos:column="49"/></name></name></expr>)<pos:position pos:line="104" pos:column="50"/></condition><then pos:line="104" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="33">strbuf_addch<pos:position pos:line="105" pos:column="45"/></name><argument_list pos:line="105" pos:column="45">(<argument><expr><name pos:line="105" pos:column="46">sb<pos:position pos:line="105" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="105" pos:column="50">' '<pos:position pos:line="105" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="55"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="106" pos:column="25">strbuf_addstr<pos:position pos:line="106" pos:column="38"/></name><argument_list pos:line="106" pos:column="38">(<argument><expr><name pos:line="106" pos:column="39">sb<pos:position pos:line="106" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="106" pos:column="43">sha1_to_hex<pos:position pos:line="106" pos:column="54"/></name><argument_list pos:line="106" pos:column="54">(<argument><expr><name><name pos:line="106" pos:column="55">p<pos:position pos:line="106" pos:column="56"/></name><operator pos:line="106" pos:column="56">-&gt;<pos:position pos:line="106" pos:column="61"/></operator><name pos:line="106" pos:column="58">item<pos:position pos:line="106" pos:column="62"/></name><operator pos:line="106" pos:column="62">-&gt;<pos:position pos:line="106" pos:column="67"/></operator><name pos:line="106" pos:column="64">object<pos:position pos:line="106" pos:column="70"/></name><operator pos:line="106" pos:column="70">.<pos:position pos:line="106" pos:column="71"/></operator><name pos:line="106" pos:column="71">sha1<pos:position pos:line="106" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="106" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="107" pos:column="18"/></block></for>
		<return pos:line="108" pos:column="17">return <expr><literal type="number" pos:line="108" pos:column="24">1<pos:position pos:line="108" pos:column="25"/></literal></expr>;<pos:position pos:line="108" pos:column="26"/></return>
	<case pos:line="109" pos:column="9">case <expr><literal type="char" pos:line="109" pos:column="14">'p'<pos:position pos:line="109" pos:column="17"/></literal></expr>:<pos:position pos:line="109" pos:column="18"/></case>		<comment type="block" pos:line="109" pos:column="33">/* abbreviated parent hashes */</comment>
		<if pos:line="110" pos:column="17">if <condition pos:line="110" pos:column="20">(<expr><call><name pos:line="110" pos:column="21">add_again<pos:position pos:line="110" pos:column="30"/></name><argument_list pos:line="110" pos:column="30">(<argument><expr><name pos:line="110" pos:column="31">sb<pos:position pos:line="110" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="110" pos:column="35">&amp;<pos:position pos:line="110" pos:column="40"/></operator><name><name pos:line="110" pos:column="36">c<pos:position pos:line="110" pos:column="37"/></name><operator pos:line="110" pos:column="37">-&gt;<pos:position pos:line="110" pos:column="42"/></operator><name pos:line="110" pos:column="39">abbrev_parent_hashes<pos:position pos:line="110" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="110" pos:column="61"/></condition><then pos:line="110" pos:column="61">
			<block type="pseudo"><return pos:line="111" pos:column="25">return <expr><literal type="number" pos:line="111" pos:column="32">1<pos:position pos:line="111" pos:column="33"/></literal></expr>;<pos:position pos:line="111" pos:column="34"/></return></block></then></if>
		<for pos:line="112" pos:column="17">for <control pos:line="112" pos:column="21">(<init><expr><name pos:line="112" pos:column="22">p<pos:position pos:line="112" pos:column="23"/></name> <operator pos:line="112" pos:column="24">=<pos:position pos:line="112" pos:column="25"/></operator> <name><name pos:line="112" pos:column="26">commit<pos:position pos:line="112" pos:column="32"/></name><operator pos:line="112" pos:column="32">-&gt;<pos:position pos:line="112" pos:column="37"/></operator><name pos:line="112" pos:column="34">parents<pos:position pos:line="112" pos:column="41"/></name></name></expr>;<pos:position pos:line="112" pos:column="42"/></init> <condition><expr><name pos:line="112" pos:column="43">p<pos:position pos:line="112" pos:column="44"/></name></expr>;<pos:position pos:line="112" pos:column="45"/></condition> <incr><expr><name pos:line="112" pos:column="46">p<pos:position pos:line="112" pos:column="47"/></name> <operator pos:line="112" pos:column="48">=<pos:position pos:line="112" pos:column="49"/></operator> <name><name pos:line="112" pos:column="50">p<pos:position pos:line="112" pos:column="51"/></name><operator pos:line="112" pos:column="51">-&gt;<pos:position pos:line="112" pos:column="56"/></operator><name pos:line="112" pos:column="53">next<pos:position pos:line="112" pos:column="57"/></name></name></expr></incr>)<pos:position pos:line="112" pos:column="58"/></control> <block pos:line="112" pos:column="59">{
			<if pos:line="113" pos:column="25">if <condition pos:line="113" pos:column="28">(<expr><name pos:line="113" pos:column="29">p<pos:position pos:line="113" pos:column="30"/></name> <operator pos:line="113" pos:column="31">!=<pos:position pos:line="113" pos:column="33"/></operator> <name><name pos:line="113" pos:column="34">commit<pos:position pos:line="113" pos:column="40"/></name><operator pos:line="113" pos:column="40">-&gt;<pos:position pos:line="113" pos:column="45"/></operator><name pos:line="113" pos:column="42">parents<pos:position pos:line="113" pos:column="49"/></name></name></expr>)<pos:position pos:line="113" pos:column="50"/></condition><then pos:line="113" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="33">strbuf_addch<pos:position pos:line="114" pos:column="45"/></name><argument_list pos:line="114" pos:column="45">(<argument><expr><name pos:line="114" pos:column="46">sb<pos:position pos:line="114" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="114" pos:column="50">' '<pos:position pos:line="114" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="55"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="115" pos:column="25">strbuf_addstr<pos:position pos:line="115" pos:column="38"/></name><argument_list pos:line="115" pos:column="38">(<argument><expr><name pos:line="115" pos:column="39">sb<pos:position pos:line="115" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="115" pos:column="43">find_unique_abbrev<pos:position pos:line="115" pos:column="61"/></name><argument_list pos:line="115" pos:column="61">(
					<argument><expr><name><name pos:line="116" pos:column="41">p<pos:position pos:line="116" pos:column="42"/></name><operator pos:line="116" pos:column="42">-&gt;<pos:position pos:line="116" pos:column="47"/></operator><name pos:line="116" pos:column="44">item<pos:position pos:line="116" pos:column="48"/></name><operator pos:line="116" pos:column="48">-&gt;<pos:position pos:line="116" pos:column="53"/></operator><name pos:line="116" pos:column="50">object<pos:position pos:line="116" pos:column="56"/></name><operator pos:line="116" pos:column="56">.<pos:position pos:line="116" pos:column="57"/></operator><name pos:line="116" pos:column="57">sha1<pos:position pos:line="116" pos:column="61"/></name></name></expr></argument>,
					<argument><expr><name><name pos:line="117" pos:column="41">c<pos:position pos:line="117" pos:column="42"/></name><operator pos:line="117" pos:column="42">-&gt;<pos:position pos:line="117" pos:column="47"/></operator><name pos:line="117" pos:column="44">pretty_ctx<pos:position pos:line="117" pos:column="54"/></name><operator pos:line="117" pos:column="54">-&gt;<pos:position pos:line="117" pos:column="59"/></operator><name pos:line="117" pos:column="56">abbrev<pos:position pos:line="117" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="117" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="118" pos:column="18"/></block></for>
		<expr_stmt><expr><name><name pos:line="119" pos:column="17">c<pos:position pos:line="119" pos:column="18"/></name><operator pos:line="119" pos:column="18">-&gt;<pos:position pos:line="119" pos:column="23"/></operator><name pos:line="119" pos:column="20">abbrev_parent_hashes<pos:position pos:line="119" pos:column="40"/></name><operator pos:line="119" pos:column="40">.<pos:position pos:line="119" pos:column="41"/></operator><name pos:line="119" pos:column="41">len<pos:position pos:line="119" pos:column="44"/></name></name> <operator pos:line="119" pos:column="45">=<pos:position pos:line="119" pos:column="46"/></operator> <name><name pos:line="119" pos:column="47">sb<pos:position pos:line="119" pos:column="49"/></name><operator pos:line="119" pos:column="49">-&gt;<pos:position pos:line="119" pos:column="54"/></operator><name pos:line="119" pos:column="51">len<pos:position pos:line="119" pos:column="54"/></name></name> <operator pos:line="119" pos:column="55">-<pos:position pos:line="119" pos:column="56"/></operator>
		                              <name><name pos:line="120" pos:column="47">c<pos:position pos:line="120" pos:column="48"/></name><operator pos:line="120" pos:column="48">-&gt;<pos:position pos:line="120" pos:column="53"/></operator><name pos:line="120" pos:column="50">abbrev_parent_hashes<pos:position pos:line="120" pos:column="70"/></name><operator pos:line="120" pos:column="70">.<pos:position pos:line="120" pos:column="71"/></operator><name pos:line="120" pos:column="71">off<pos:position pos:line="120" pos:column="74"/></name></name></expr>;<pos:position pos:line="120" pos:column="75"/></expr_stmt>
		<return pos:line="121" pos:column="17">return <expr><literal type="number" pos:line="121" pos:column="24">1<pos:position pos:line="121" pos:column="25"/></literal></expr>;<pos:position pos:line="121" pos:column="26"/></return>
	<case pos:line="122" pos:column="9">case <expr><literal type="char" pos:line="122" pos:column="14">'m'<pos:position pos:line="122" pos:column="17"/></literal></expr>:<pos:position pos:line="122" pos:column="18"/></case>		<comment type="block" pos:line="122" pos:column="33">/* left/right/bottom */</comment>
		<expr_stmt><expr><call><name pos:line="123" pos:column="17">strbuf_addstr<pos:position pos:line="123" pos:column="30"/></name><argument_list pos:line="123" pos:column="30">(<argument><expr><name pos:line="123" pos:column="31">sb<pos:position pos:line="123" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="123" pos:column="35">get_revision_mark<pos:position pos:line="123" pos:column="52"/></name><argument_list pos:line="123" pos:column="52">(<argument><expr><name pos:line="123" pos:column="53">NULL<pos:position pos:line="123" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="59">commit<pos:position pos:line="123" pos:column="65"/></name></expr></argument>)<pos:position pos:line="123" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="123" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="68"/></expr_stmt>
		<return pos:line="124" pos:column="17">return <expr><literal type="number" pos:line="124" pos:column="24">1<pos:position pos:line="124" pos:column="25"/></literal></expr>;<pos:position pos:line="124" pos:column="26"/></return>
	<case pos:line="125" pos:column="9">case <expr><literal type="char" pos:line="125" pos:column="14">'d'<pos:position pos:line="125" pos:column="17"/></literal></expr>:<pos:position pos:line="125" pos:column="18"/></case>
		<expr_stmt><expr><call><name pos:line="126" pos:column="17">load_ref_decorations<pos:position pos:line="126" pos:column="37"/></name><argument_list pos:line="126" pos:column="37">(<argument><expr><name pos:line="126" pos:column="38">DECORATE_SHORT_REFS<pos:position pos:line="126" pos:column="57"/></name></expr></argument>)<pos:position pos:line="126" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="127" pos:column="17">format_decorations<pos:position pos:line="127" pos:column="35"/></name><argument_list pos:line="127" pos:column="35">(<argument><expr><name pos:line="127" pos:column="36">sb<pos:position pos:line="127" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="40">commit<pos:position pos:line="127" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="48">c<pos:position pos:line="127" pos:column="49"/></name><operator pos:line="127" pos:column="49">-&gt;<pos:position pos:line="127" pos:column="54"/></operator><name pos:line="127" pos:column="51">auto_color<pos:position pos:line="127" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="63"/></expr_stmt>
		<return pos:line="128" pos:column="17">return <expr><literal type="number" pos:line="128" pos:column="24">1<pos:position pos:line="128" pos:column="25"/></literal></expr>;<pos:position pos:line="128" pos:column="26"/></return>
	<case pos:line="129" pos:column="9">case <expr><literal type="char" pos:line="129" pos:column="14">'D'<pos:position pos:line="129" pos:column="17"/></literal></expr>:<pos:position pos:line="129" pos:column="18"/></case>
		<expr_stmt><expr><call><name pos:line="130" pos:column="17">load_ref_decorations<pos:position pos:line="130" pos:column="37"/></name><argument_list pos:line="130" pos:column="37">(<argument><expr><name pos:line="130" pos:column="38">DECORATE_SHORT_REFS<pos:position pos:line="130" pos:column="57"/></name></expr></argument>)<pos:position pos:line="130" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="131" pos:column="17">format_decorations_extended<pos:position pos:line="131" pos:column="44"/></name><argument_list pos:line="131" pos:column="44">(<argument><expr><name pos:line="131" pos:column="45">sb<pos:position pos:line="131" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="49">commit<pos:position pos:line="131" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="57">c<pos:position pos:line="131" pos:column="58"/></name><operator pos:line="131" pos:column="58">-&gt;<pos:position pos:line="131" pos:column="63"/></operator><name pos:line="131" pos:column="60">auto_color<pos:position pos:line="131" pos:column="70"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="72">""<pos:position pos:line="131" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="76">", "<pos:position pos:line="131" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="82">""<pos:position pos:line="131" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="86"/></expr_stmt>
		<return pos:line="132" pos:column="17">return <expr><literal type="number" pos:line="132" pos:column="24">1<pos:position pos:line="132" pos:column="25"/></literal></expr>;<pos:position pos:line="132" pos:column="26"/></return>
	<case pos:line="133" pos:column="9">case <expr><literal type="char" pos:line="133" pos:column="14">'g'<pos:position pos:line="133" pos:column="17"/></literal></expr>:<pos:position pos:line="133" pos:column="18"/></case>		<comment type="block" pos:line="133" pos:column="33">/* reflog info */</comment>
		<switch pos:line="134" pos:column="17">switch<condition pos:line="134" pos:column="23">(<expr><name><name pos:line="134" pos:column="24">placeholder<pos:position pos:line="134" pos:column="35"/></name><index pos:line="134" pos:column="35">[<expr><literal type="number" pos:line="134" pos:column="36">1<pos:position pos:line="134" pos:column="37"/></literal></expr>]<pos:position pos:line="134" pos:column="38"/></index></name></expr>)<pos:position pos:line="134" pos:column="39"/></condition> <block pos:line="134" pos:column="40">{
		<case pos:line="135" pos:column="17">case <expr><literal type="char" pos:line="135" pos:column="22">'d'<pos:position pos:line="135" pos:column="25"/></literal></expr>:<pos:position pos:line="135" pos:column="26"/></case>	<comment type="block" pos:line="135" pos:column="33">/* reflog selector */</comment>
		<case pos:line="136" pos:column="17">case <expr><literal type="char" pos:line="136" pos:column="22">'D'<pos:position pos:line="136" pos:column="25"/></literal></expr>:<pos:position pos:line="136" pos:column="26"/></case>
			<if pos:line="137" pos:column="25">if <condition pos:line="137" pos:column="28">(<expr><name><name pos:line="137" pos:column="29">c<pos:position pos:line="137" pos:column="30"/></name><operator pos:line="137" pos:column="30">-&gt;<pos:position pos:line="137" pos:column="35"/></operator><name pos:line="137" pos:column="32">pretty_ctx<pos:position pos:line="137" pos:column="42"/></name><operator pos:line="137" pos:column="42">-&gt;<pos:position pos:line="137" pos:column="47"/></operator><name pos:line="137" pos:column="44">reflog_info<pos:position pos:line="137" pos:column="55"/></name></name></expr>)<pos:position pos:line="137" pos:column="56"/></condition><then pos:line="137" pos:column="56">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="138" pos:column="33">get_reflog_selector<pos:position pos:line="138" pos:column="52"/></name><argument_list pos:line="138" pos:column="52">(<argument><expr><name pos:line="138" pos:column="53">sb<pos:position pos:line="138" pos:column="55"/></name></expr></argument>,
						    <argument><expr><name><name pos:line="139" pos:column="53">c<pos:position pos:line="139" pos:column="54"/></name><operator pos:line="139" pos:column="54">-&gt;<pos:position pos:line="139" pos:column="59"/></operator><name pos:line="139" pos:column="56">pretty_ctx<pos:position pos:line="139" pos:column="66"/></name><operator pos:line="139" pos:column="66">-&gt;<pos:position pos:line="139" pos:column="71"/></operator><name pos:line="139" pos:column="68">reflog_info<pos:position pos:line="139" pos:column="79"/></name></name></expr></argument>,
						    <argument><expr><name><name pos:line="140" pos:column="53">c<pos:position pos:line="140" pos:column="54"/></name><operator pos:line="140" pos:column="54">-&gt;<pos:position pos:line="140" pos:column="59"/></operator><name pos:line="140" pos:column="56">pretty_ctx<pos:position pos:line="140" pos:column="66"/></name><operator pos:line="140" pos:column="66">-&gt;<pos:position pos:line="140" pos:column="71"/></operator><name pos:line="140" pos:column="68">date_mode<pos:position pos:line="140" pos:column="77"/></name></name></expr></argument>,
						    <argument><expr><name><name pos:line="141" pos:column="53">c<pos:position pos:line="141" pos:column="54"/></name><operator pos:line="141" pos:column="54">-&gt;<pos:position pos:line="141" pos:column="59"/></operator><name pos:line="141" pos:column="56">pretty_ctx<pos:position pos:line="141" pos:column="66"/></name><operator pos:line="141" pos:column="66">-&gt;<pos:position pos:line="141" pos:column="71"/></operator><name pos:line="141" pos:column="68">date_mode_explicit<pos:position pos:line="141" pos:column="86"/></name></name></expr></argument>,
						    <argument><expr><operator pos:line="142" pos:column="53">(<pos:position pos:line="142" pos:column="54"/></operator><name><name pos:line="142" pos:column="54">placeholder<pos:position pos:line="142" pos:column="65"/></name><index pos:line="142" pos:column="65">[<expr><literal type="number" pos:line="142" pos:column="66">1<pos:position pos:line="142" pos:column="67"/></literal></expr>]<pos:position pos:line="142" pos:column="68"/></index></name> <operator pos:line="142" pos:column="69">==<pos:position pos:line="142" pos:column="71"/></operator> <literal type="char" pos:line="142" pos:column="72">'d'<pos:position pos:line="142" pos:column="75"/></literal><operator pos:line="142" pos:column="75">)<pos:position pos:line="142" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="142" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="78"/></expr_stmt></block></then></if>
			<return pos:line="143" pos:column="25">return <expr><literal type="number" pos:line="143" pos:column="32">2<pos:position pos:line="143" pos:column="33"/></literal></expr>;<pos:position pos:line="143" pos:column="34"/></return>
		<case pos:line="144" pos:column="17">case <expr><literal type="char" pos:line="144" pos:column="22">'s'<pos:position pos:line="144" pos:column="25"/></literal></expr>:<pos:position pos:line="144" pos:column="26"/></case>	<comment type="block" pos:line="144" pos:column="33">/* reflog message */</comment>
			<if pos:line="145" pos:column="25">if <condition pos:line="145" pos:column="28">(<expr><name><name pos:line="145" pos:column="29">c<pos:position pos:line="145" pos:column="30"/></name><operator pos:line="145" pos:column="30">-&gt;<pos:position pos:line="145" pos:column="35"/></operator><name pos:line="145" pos:column="32">pretty_ctx<pos:position pos:line="145" pos:column="42"/></name><operator pos:line="145" pos:column="42">-&gt;<pos:position pos:line="145" pos:column="47"/></operator><name pos:line="145" pos:column="44">reflog_info<pos:position pos:line="145" pos:column="55"/></name></name></expr>)<pos:position pos:line="145" pos:column="56"/></condition><then pos:line="145" pos:column="56">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="146" pos:column="33">get_reflog_message<pos:position pos:line="146" pos:column="51"/></name><argument_list pos:line="146" pos:column="51">(<argument><expr><name pos:line="146" pos:column="52">sb<pos:position pos:line="146" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="146" pos:column="56">c<pos:position pos:line="146" pos:column="57"/></name><operator pos:line="146" pos:column="57">-&gt;<pos:position pos:line="146" pos:column="62"/></operator><name pos:line="146" pos:column="59">pretty_ctx<pos:position pos:line="146" pos:column="69"/></name><operator pos:line="146" pos:column="69">-&gt;<pos:position pos:line="146" pos:column="74"/></operator><name pos:line="146" pos:column="71">reflog_info<pos:position pos:line="146" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="146" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="84"/></expr_stmt></block></then></if>
			<return pos:line="147" pos:column="25">return <expr><literal type="number" pos:line="147" pos:column="32">2<pos:position pos:line="147" pos:column="33"/></literal></expr>;<pos:position pos:line="147" pos:column="34"/></return>
		<case pos:line="148" pos:column="17">case <expr><literal type="char" pos:line="148" pos:column="22">'n'<pos:position pos:line="148" pos:column="25"/></literal></expr>:<pos:position pos:line="148" pos:column="26"/></case>
		<case pos:line="149" pos:column="17">case <expr><literal type="char" pos:line="149" pos:column="22">'N'<pos:position pos:line="149" pos:column="25"/></literal></expr>:<pos:position pos:line="149" pos:column="26"/></case>
		<case pos:line="150" pos:column="17">case <expr><literal type="char" pos:line="150" pos:column="22">'e'<pos:position pos:line="150" pos:column="25"/></literal></expr>:<pos:position pos:line="150" pos:column="26"/></case>
		<case pos:line="151" pos:column="17">case <expr><literal type="char" pos:line="151" pos:column="22">'E'<pos:position pos:line="151" pos:column="25"/></literal></expr>:<pos:position pos:line="151" pos:column="26"/></case>
			<return pos:line="152" pos:column="25">return <expr><call><name pos:line="152" pos:column="32">format_reflog_person<pos:position pos:line="152" pos:column="52"/></name><argument_list pos:line="152" pos:column="52">(<argument><expr><name pos:line="152" pos:column="53">sb<pos:position pos:line="152" pos:column="55"/></name></expr></argument>,
						    <argument><expr><name><name pos:line="153" pos:column="53">placeholder<pos:position pos:line="153" pos:column="64"/></name><index pos:line="153" pos:column="64">[<expr><literal type="number" pos:line="153" pos:column="65">1<pos:position pos:line="153" pos:column="66"/></literal></expr>]<pos:position pos:line="153" pos:column="67"/></index></name></expr></argument>,
						    <argument><expr><name><name pos:line="154" pos:column="53">c<pos:position pos:line="154" pos:column="54"/></name><operator pos:line="154" pos:column="54">-&gt;<pos:position pos:line="154" pos:column="59"/></operator><name pos:line="154" pos:column="56">pretty_ctx<pos:position pos:line="154" pos:column="66"/></name><operator pos:line="154" pos:column="66">-&gt;<pos:position pos:line="154" pos:column="71"/></operator><name pos:line="154" pos:column="68">reflog_info<pos:position pos:line="154" pos:column="79"/></name></name></expr></argument>,
						    <argument><expr><name><name pos:line="155" pos:column="53">c<pos:position pos:line="155" pos:column="54"/></name><operator pos:line="155" pos:column="54">-&gt;<pos:position pos:line="155" pos:column="59"/></operator><name pos:line="155" pos:column="56">pretty_ctx<pos:position pos:line="155" pos:column="66"/></name><operator pos:line="155" pos:column="66">-&gt;<pos:position pos:line="155" pos:column="71"/></operator><name pos:line="155" pos:column="68">date_mode<pos:position pos:line="155" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="155" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="79"/></return>
		}<pos:position pos:line="156" pos:column="18"/></block></switch>
		<return pos:line="157" pos:column="17">return <expr><literal type="number" pos:line="157" pos:column="24">0<pos:position pos:line="157" pos:column="25"/></literal></expr>;<pos:position pos:line="157" pos:column="26"/></return>	<comment type="block" pos:line="157" pos:column="33">/* unknown %g placeholder */</comment>
	<case pos:line="158" pos:column="9">case <expr><literal type="char" pos:line="158" pos:column="14">'N'<pos:position pos:line="158" pos:column="17"/></literal></expr>:<pos:position pos:line="158" pos:column="18"/></case>
		<if pos:line="159" pos:column="17">if <condition pos:line="159" pos:column="20">(<expr><name><name pos:line="159" pos:column="21">c<pos:position pos:line="159" pos:column="22"/></name><operator pos:line="159" pos:column="22">-&gt;<pos:position pos:line="159" pos:column="27"/></operator><name pos:line="159" pos:column="24">pretty_ctx<pos:position pos:line="159" pos:column="34"/></name><operator pos:line="159" pos:column="34">-&gt;<pos:position pos:line="159" pos:column="39"/></operator><name pos:line="159" pos:column="36">notes_message<pos:position pos:line="159" pos:column="49"/></name></name></expr>)<pos:position pos:line="159" pos:column="50"/></condition><then pos:line="159" pos:column="50"> <block pos:line="159" pos:column="51">{
			<expr_stmt><expr><call><name pos:line="160" pos:column="25">strbuf_addstr<pos:position pos:line="160" pos:column="38"/></name><argument_list pos:line="160" pos:column="38">(<argument><expr><name pos:line="160" pos:column="39">sb<pos:position pos:line="160" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="160" pos:column="43">c<pos:position pos:line="160" pos:column="44"/></name><operator pos:line="160" pos:column="44">-&gt;<pos:position pos:line="160" pos:column="49"/></operator><name pos:line="160" pos:column="46">pretty_ctx<pos:position pos:line="160" pos:column="56"/></name><operator pos:line="160" pos:column="56">-&gt;<pos:position pos:line="160" pos:column="61"/></operator><name pos:line="160" pos:column="58">notes_message<pos:position pos:line="160" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="160" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="73"/></expr_stmt>
			<return pos:line="161" pos:column="25">return <expr><literal type="number" pos:line="161" pos:column="32">1<pos:position pos:line="161" pos:column="33"/></literal></expr>;<pos:position pos:line="161" pos:column="34"/></return>
		}<pos:position pos:line="162" pos:column="18"/></block></then></if>
		<return pos:line="163" pos:column="17">return <expr><literal type="number" pos:line="163" pos:column="24">0<pos:position pos:line="163" pos:column="25"/></literal></expr>;<pos:position pos:line="163" pos:column="26"/></return>
	}<pos:position pos:line="164" pos:column="10"/></block></switch>

	<if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><name><name pos:line="166" pos:column="13">placeholder<pos:position pos:line="166" pos:column="24"/></name><index pos:line="166" pos:column="24">[<expr><literal type="number" pos:line="166" pos:column="25">0<pos:position pos:line="166" pos:column="26"/></literal></expr>]<pos:position pos:line="166" pos:column="27"/></index></name> <operator pos:line="166" pos:column="28">==<pos:position pos:line="166" pos:column="30"/></operator> <literal type="char" pos:line="166" pos:column="31">'G'<pos:position pos:line="166" pos:column="34"/></literal></expr>)<pos:position pos:line="166" pos:column="35"/></condition><then pos:line="166" pos:column="35"> <block pos:line="166" pos:column="36">{
		<if pos:line="167" pos:column="17">if <condition pos:line="167" pos:column="20">(<expr><operator pos:line="167" pos:column="21">!<pos:position pos:line="167" pos:column="22"/></operator><name><name pos:line="167" pos:column="22">c<pos:position pos:line="167" pos:column="23"/></name><operator pos:line="167" pos:column="23">-&gt;<pos:position pos:line="167" pos:column="28"/></operator><name pos:line="167" pos:column="25">signature_check<pos:position pos:line="167" pos:column="40"/></name><operator pos:line="167" pos:column="40">.<pos:position pos:line="167" pos:column="41"/></operator><name pos:line="167" pos:column="41">result<pos:position pos:line="167" pos:column="47"/></name></name></expr>)<pos:position pos:line="167" pos:column="48"/></condition><then pos:line="167" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="168" pos:column="25">check_commit_signature<pos:position pos:line="168" pos:column="47"/></name><argument_list pos:line="168" pos:column="47">(<argument><expr><name><name pos:line="168" pos:column="48">c<pos:position pos:line="168" pos:column="49"/></name><operator pos:line="168" pos:column="49">-&gt;<pos:position pos:line="168" pos:column="54"/></operator><name pos:line="168" pos:column="51">commit<pos:position pos:line="168" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="168" pos:column="59">&amp;<pos:position pos:line="168" pos:column="64"/></operator><operator pos:line="168" pos:column="60">(<pos:position pos:line="168" pos:column="61"/></operator><name><name pos:line="168" pos:column="61">c<pos:position pos:line="168" pos:column="62"/></name><operator pos:line="168" pos:column="62">-&gt;<pos:position pos:line="168" pos:column="67"/></operator><name pos:line="168" pos:column="64">signature_check<pos:position pos:line="168" pos:column="79"/></name></name><operator pos:line="168" pos:column="79">)<pos:position pos:line="168" pos:column="80"/></operator></expr></argument>)<pos:position pos:line="168" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="82"/></expr_stmt></block></then></if>
		<switch pos:line="169" pos:column="17">switch <condition pos:line="169" pos:column="24">(<expr><name><name pos:line="169" pos:column="25">placeholder<pos:position pos:line="169" pos:column="36"/></name><index pos:line="169" pos:column="36">[<expr><literal type="number" pos:line="169" pos:column="37">1<pos:position pos:line="169" pos:column="38"/></literal></expr>]<pos:position pos:line="169" pos:column="39"/></index></name></expr>)<pos:position pos:line="169" pos:column="40"/></condition> <block pos:line="169" pos:column="41">{
		<case pos:line="170" pos:column="17">case <expr><literal type="char" pos:line="170" pos:column="22">'G'<pos:position pos:line="170" pos:column="25"/></literal></expr>:<pos:position pos:line="170" pos:column="26"/></case>
			<if pos:line="171" pos:column="25">if <condition pos:line="171" pos:column="28">(<expr><name><name pos:line="171" pos:column="29">c<pos:position pos:line="171" pos:column="30"/></name><operator pos:line="171" pos:column="30">-&gt;<pos:position pos:line="171" pos:column="35"/></operator><name pos:line="171" pos:column="32">signature_check<pos:position pos:line="171" pos:column="47"/></name><operator pos:line="171" pos:column="47">.<pos:position pos:line="171" pos:column="48"/></operator><name pos:line="171" pos:column="48">gpg_output<pos:position pos:line="171" pos:column="58"/></name></name></expr>)<pos:position pos:line="171" pos:column="59"/></condition><then pos:line="171" pos:column="59">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="172" pos:column="33">strbuf_addstr<pos:position pos:line="172" pos:column="46"/></name><argument_list pos:line="172" pos:column="46">(<argument><expr><name pos:line="172" pos:column="47">sb<pos:position pos:line="172" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="172" pos:column="51">c<pos:position pos:line="172" pos:column="52"/></name><operator pos:line="172" pos:column="52">-&gt;<pos:position pos:line="172" pos:column="57"/></operator><name pos:line="172" pos:column="54">signature_check<pos:position pos:line="172" pos:column="69"/></name><operator pos:line="172" pos:column="69">.<pos:position pos:line="172" pos:column="70"/></operator><name pos:line="172" pos:column="70">gpg_output<pos:position pos:line="172" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="82"/></expr_stmt></block></then></if>
			<break pos:line="173" pos:column="25">break;<pos:position pos:line="173" pos:column="31"/></break>
		<case pos:line="174" pos:column="17">case <expr><literal type="char" pos:line="174" pos:column="22">'?'<pos:position pos:line="174" pos:column="25"/></literal></expr>:<pos:position pos:line="174" pos:column="26"/></case>
			<switch pos:line="175" pos:column="25">switch <condition pos:line="175" pos:column="32">(<expr><name><name pos:line="175" pos:column="33">c<pos:position pos:line="175" pos:column="34"/></name><operator pos:line="175" pos:column="34">-&gt;<pos:position pos:line="175" pos:column="39"/></operator><name pos:line="175" pos:column="36">signature_check<pos:position pos:line="175" pos:column="51"/></name><operator pos:line="175" pos:column="51">.<pos:position pos:line="175" pos:column="52"/></operator><name pos:line="175" pos:column="52">result<pos:position pos:line="175" pos:column="58"/></name></name></expr>)<pos:position pos:line="175" pos:column="59"/></condition> <block pos:line="175" pos:column="60">{
			<case pos:line="176" pos:column="25">case <expr><literal type="char" pos:line="176" pos:column="30">'G'<pos:position pos:line="176" pos:column="33"/></literal></expr>:<pos:position pos:line="176" pos:column="34"/></case>
			<case pos:line="177" pos:column="25">case <expr><literal type="char" pos:line="177" pos:column="30">'B'<pos:position pos:line="177" pos:column="33"/></literal></expr>:<pos:position pos:line="177" pos:column="34"/></case>
			<case pos:line="178" pos:column="25">case <expr><literal type="char" pos:line="178" pos:column="30">'U'<pos:position pos:line="178" pos:column="33"/></literal></expr>:<pos:position pos:line="178" pos:column="34"/></case>
			<case pos:line="179" pos:column="25">case <expr><literal type="char" pos:line="179" pos:column="30">'N'<pos:position pos:line="179" pos:column="33"/></literal></expr>:<pos:position pos:line="179" pos:column="34"/></case>
				<expr_stmt><expr><call><name pos:line="180" pos:column="33">strbuf_addch<pos:position pos:line="180" pos:column="45"/></name><argument_list pos:line="180" pos:column="45">(<argument><expr><name pos:line="180" pos:column="46">sb<pos:position pos:line="180" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="180" pos:column="50">c<pos:position pos:line="180" pos:column="51"/></name><operator pos:line="180" pos:column="51">-&gt;<pos:position pos:line="180" pos:column="56"/></operator><name pos:line="180" pos:column="53">signature_check<pos:position pos:line="180" pos:column="68"/></name><operator pos:line="180" pos:column="68">.<pos:position pos:line="180" pos:column="69"/></operator><name pos:line="180" pos:column="69">result<pos:position pos:line="180" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="180" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="77"/></expr_stmt>
			}<pos:position pos:line="181" pos:column="26"/></block></switch>
			<break pos:line="182" pos:column="25">break;<pos:position pos:line="182" pos:column="31"/></break>
		<case pos:line="183" pos:column="17">case <expr><literal type="char" pos:line="183" pos:column="22">'S'<pos:position pos:line="183" pos:column="25"/></literal></expr>:<pos:position pos:line="183" pos:column="26"/></case>
			<if pos:line="184" pos:column="25">if <condition pos:line="184" pos:column="28">(<expr><name><name pos:line="184" pos:column="29">c<pos:position pos:line="184" pos:column="30"/></name><operator pos:line="184" pos:column="30">-&gt;<pos:position pos:line="184" pos:column="35"/></operator><name pos:line="184" pos:column="32">signature_check<pos:position pos:line="184" pos:column="47"/></name><operator pos:line="184" pos:column="47">.<pos:position pos:line="184" pos:column="48"/></operator><name pos:line="184" pos:column="48">signer<pos:position pos:line="184" pos:column="54"/></name></name></expr>)<pos:position pos:line="184" pos:column="55"/></condition><then pos:line="184" pos:column="55">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="185" pos:column="33">strbuf_addstr<pos:position pos:line="185" pos:column="46"/></name><argument_list pos:line="185" pos:column="46">(<argument><expr><name pos:line="185" pos:column="47">sb<pos:position pos:line="185" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="185" pos:column="51">c<pos:position pos:line="185" pos:column="52"/></name><operator pos:line="185" pos:column="52">-&gt;<pos:position pos:line="185" pos:column="57"/></operator><name pos:line="185" pos:column="54">signature_check<pos:position pos:line="185" pos:column="69"/></name><operator pos:line="185" pos:column="69">.<pos:position pos:line="185" pos:column="70"/></operator><name pos:line="185" pos:column="70">signer<pos:position pos:line="185" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="185" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="78"/></expr_stmt></block></then></if>
			<break pos:line="186" pos:column="25">break;<pos:position pos:line="186" pos:column="31"/></break>
		<case pos:line="187" pos:column="17">case <expr><literal type="char" pos:line="187" pos:column="22">'K'<pos:position pos:line="187" pos:column="25"/></literal></expr>:<pos:position pos:line="187" pos:column="26"/></case>
			<if pos:line="188" pos:column="25">if <condition pos:line="188" pos:column="28">(<expr><name><name pos:line="188" pos:column="29">c<pos:position pos:line="188" pos:column="30"/></name><operator pos:line="188" pos:column="30">-&gt;<pos:position pos:line="188" pos:column="35"/></operator><name pos:line="188" pos:column="32">signature_check<pos:position pos:line="188" pos:column="47"/></name><operator pos:line="188" pos:column="47">.<pos:position pos:line="188" pos:column="48"/></operator><name pos:line="188" pos:column="48">key<pos:position pos:line="188" pos:column="51"/></name></name></expr>)<pos:position pos:line="188" pos:column="52"/></condition><then pos:line="188" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="189" pos:column="33">strbuf_addstr<pos:position pos:line="189" pos:column="46"/></name><argument_list pos:line="189" pos:column="46">(<argument><expr><name pos:line="189" pos:column="47">sb<pos:position pos:line="189" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="189" pos:column="51">c<pos:position pos:line="189" pos:column="52"/></name><operator pos:line="189" pos:column="52">-&gt;<pos:position pos:line="189" pos:column="57"/></operator><name pos:line="189" pos:column="54">signature_check<pos:position pos:line="189" pos:column="69"/></name><operator pos:line="189" pos:column="69">.<pos:position pos:line="189" pos:column="70"/></operator><name pos:line="189" pos:column="70">key<pos:position pos:line="189" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="75"/></expr_stmt></block></then></if>
			<break pos:line="190" pos:column="25">break;<pos:position pos:line="190" pos:column="31"/></break>
		<default pos:line="191" pos:column="17">default:<pos:position pos:line="191" pos:column="25"/></default>
			<return pos:line="192" pos:column="25">return <expr><literal type="number" pos:line="192" pos:column="32">0<pos:position pos:line="192" pos:column="33"/></literal></expr>;<pos:position pos:line="192" pos:column="34"/></return>
		}<pos:position pos:line="193" pos:column="18"/></block></switch>
		<return pos:line="194" pos:column="17">return <expr><literal type="number" pos:line="194" pos:column="24">2<pos:position pos:line="194" pos:column="25"/></literal></expr>;<pos:position pos:line="194" pos:column="26"/></return>
	}<pos:position pos:line="195" pos:column="10"/></block></then></if>


	<comment type="block" pos:line="198" pos:column="9">/* For the rest we have to parse the commit header. */</comment>
	<if pos:line="199" pos:column="9">if <condition pos:line="199" pos:column="12">(<expr><operator pos:line="199" pos:column="13">!<pos:position pos:line="199" pos:column="14"/></operator><name><name pos:line="199" pos:column="14">c<pos:position pos:line="199" pos:column="15"/></name><operator pos:line="199" pos:column="15">-&gt;<pos:position pos:line="199" pos:column="20"/></operator><name pos:line="199" pos:column="17">commit_header_parsed<pos:position pos:line="199" pos:column="37"/></name></name></expr>)<pos:position pos:line="199" pos:column="38"/></condition><then pos:line="199" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="200" pos:column="17">parse_commit_header<pos:position pos:line="200" pos:column="36"/></name><argument_list pos:line="200" pos:column="36">(<argument><expr><name pos:line="200" pos:column="37">c<pos:position pos:line="200" pos:column="38"/></name></expr></argument>)<pos:position pos:line="200" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="40"/></expr_stmt></block></then></if>

	<switch pos:line="202" pos:column="9">switch <condition pos:line="202" pos:column="16">(<expr><name><name pos:line="202" pos:column="17">placeholder<pos:position pos:line="202" pos:column="28"/></name><index pos:line="202" pos:column="28">[<expr><literal type="number" pos:line="202" pos:column="29">0<pos:position pos:line="202" pos:column="30"/></literal></expr>]<pos:position pos:line="202" pos:column="31"/></index></name></expr>)<pos:position pos:line="202" pos:column="32"/></condition> <block pos:line="202" pos:column="33">{
	<case pos:line="203" pos:column="9">case <expr><literal type="char" pos:line="203" pos:column="14">'a'<pos:position pos:line="203" pos:column="17"/></literal></expr>:<pos:position pos:line="203" pos:column="18"/></case>	<comment type="block" pos:line="203" pos:column="25">/* author ... */</comment>
		<return pos:line="204" pos:column="17">return <expr><call><name pos:line="204" pos:column="24">format_person_part<pos:position pos:line="204" pos:column="42"/></name><argument_list pos:line="204" pos:column="42">(<argument><expr><name pos:line="204" pos:column="43">sb<pos:position pos:line="204" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="204" pos:column="47">placeholder<pos:position pos:line="204" pos:column="58"/></name><index pos:line="204" pos:column="58">[<expr><literal type="number" pos:line="204" pos:column="59">1<pos:position pos:line="204" pos:column="60"/></literal></expr>]<pos:position pos:line="204" pos:column="61"/></index></name></expr></argument>,
				   <argument><expr><name pos:line="205" pos:column="36">msg<pos:position pos:line="205" pos:column="39"/></name> <operator pos:line="205" pos:column="40">+<pos:position pos:line="205" pos:column="41"/></operator> <name><name pos:line="205" pos:column="42">c<pos:position pos:line="205" pos:column="43"/></name><operator pos:line="205" pos:column="43">-&gt;<pos:position pos:line="205" pos:column="48"/></operator><name pos:line="205" pos:column="45">author<pos:position pos:line="205" pos:column="51"/></name><operator pos:line="205" pos:column="51">.<pos:position pos:line="205" pos:column="52"/></operator><name pos:line="205" pos:column="52">off<pos:position pos:line="205" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="205" pos:column="57">c<pos:position pos:line="205" pos:column="58"/></name><operator pos:line="205" pos:column="58">-&gt;<pos:position pos:line="205" pos:column="63"/></operator><name pos:line="205" pos:column="60">author<pos:position pos:line="205" pos:column="66"/></name><operator pos:line="205" pos:column="66">.<pos:position pos:line="205" pos:column="67"/></operator><name pos:line="205" pos:column="67">len<pos:position pos:line="205" pos:column="70"/></name></name></expr></argument>,
				   <argument><expr><name><name pos:line="206" pos:column="36">c<pos:position pos:line="206" pos:column="37"/></name><operator pos:line="206" pos:column="37">-&gt;<pos:position pos:line="206" pos:column="42"/></operator><name pos:line="206" pos:column="39">pretty_ctx<pos:position pos:line="206" pos:column="49"/></name><operator pos:line="206" pos:column="49">-&gt;<pos:position pos:line="206" pos:column="54"/></operator><name pos:line="206" pos:column="51">date_mode<pos:position pos:line="206" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="206" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="62"/></return>
	<case pos:line="207" pos:column="9">case <expr><literal type="char" pos:line="207" pos:column="14">'c'<pos:position pos:line="207" pos:column="17"/></literal></expr>:<pos:position pos:line="207" pos:column="18"/></case>	<comment type="block" pos:line="207" pos:column="25">/* committer ... */</comment>
		<return pos:line="208" pos:column="17">return <expr><call><name pos:line="208" pos:column="24">format_person_part<pos:position pos:line="208" pos:column="42"/></name><argument_list pos:line="208" pos:column="42">(<argument><expr><name pos:line="208" pos:column="43">sb<pos:position pos:line="208" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="47">placeholder<pos:position pos:line="208" pos:column="58"/></name><index pos:line="208" pos:column="58">[<expr><literal type="number" pos:line="208" pos:column="59">1<pos:position pos:line="208" pos:column="60"/></literal></expr>]<pos:position pos:line="208" pos:column="61"/></index></name></expr></argument>,
				   <argument><expr><name pos:line="209" pos:column="36">msg<pos:position pos:line="209" pos:column="39"/></name> <operator pos:line="209" pos:column="40">+<pos:position pos:line="209" pos:column="41"/></operator> <name><name pos:line="209" pos:column="42">c<pos:position pos:line="209" pos:column="43"/></name><operator pos:line="209" pos:column="43">-&gt;<pos:position pos:line="209" pos:column="48"/></operator><name pos:line="209" pos:column="45">committer<pos:position pos:line="209" pos:column="54"/></name><operator pos:line="209" pos:column="54">.<pos:position pos:line="209" pos:column="55"/></operator><name pos:line="209" pos:column="55">off<pos:position pos:line="209" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="209" pos:column="60">c<pos:position pos:line="209" pos:column="61"/></name><operator pos:line="209" pos:column="61">-&gt;<pos:position pos:line="209" pos:column="66"/></operator><name pos:line="209" pos:column="63">committer<pos:position pos:line="209" pos:column="72"/></name><operator pos:line="209" pos:column="72">.<pos:position pos:line="209" pos:column="73"/></operator><name pos:line="209" pos:column="73">len<pos:position pos:line="209" pos:column="76"/></name></name></expr></argument>,
				   <argument><expr><name><name pos:line="210" pos:column="36">c<pos:position pos:line="210" pos:column="37"/></name><operator pos:line="210" pos:column="37">-&gt;<pos:position pos:line="210" pos:column="42"/></operator><name pos:line="210" pos:column="39">pretty_ctx<pos:position pos:line="210" pos:column="49"/></name><operator pos:line="210" pos:column="49">-&gt;<pos:position pos:line="210" pos:column="54"/></operator><name pos:line="210" pos:column="51">date_mode<pos:position pos:line="210" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="210" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="62"/></return>
	<case pos:line="211" pos:column="9">case <expr><literal type="char" pos:line="211" pos:column="14">'e'<pos:position pos:line="211" pos:column="17"/></literal></expr>:<pos:position pos:line="211" pos:column="18"/></case>	<comment type="block" pos:line="211" pos:column="25">/* encoding */</comment>
		<if pos:line="212" pos:column="17">if <condition pos:line="212" pos:column="20">(<expr><name><name pos:line="212" pos:column="21">c<pos:position pos:line="212" pos:column="22"/></name><operator pos:line="212" pos:column="22">-&gt;<pos:position pos:line="212" pos:column="27"/></operator><name pos:line="212" pos:column="24">commit_encoding<pos:position pos:line="212" pos:column="39"/></name></name></expr>)<pos:position pos:line="212" pos:column="40"/></condition><then pos:line="212" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="213" pos:column="25">strbuf_addstr<pos:position pos:line="213" pos:column="38"/></name><argument_list pos:line="213" pos:column="38">(<argument><expr><name pos:line="213" pos:column="39">sb<pos:position pos:line="213" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="213" pos:column="43">c<pos:position pos:line="213" pos:column="44"/></name><operator pos:line="213" pos:column="44">-&gt;<pos:position pos:line="213" pos:column="49"/></operator><name pos:line="213" pos:column="46">commit_encoding<pos:position pos:line="213" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="213" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="63"/></expr_stmt></block></then></if>
		<return pos:line="214" pos:column="17">return <expr><literal type="number" pos:line="214" pos:column="24">1<pos:position pos:line="214" pos:column="25"/></literal></expr>;<pos:position pos:line="214" pos:column="26"/></return>
	<case pos:line="215" pos:column="9">case <expr><literal type="char" pos:line="215" pos:column="14">'B'<pos:position pos:line="215" pos:column="17"/></literal></expr>:<pos:position pos:line="215" pos:column="18"/></case>	<comment type="block" pos:line="215" pos:column="25">/* raw body */</comment>
		<comment type="block" pos:line="216" pos:column="17">/* message_off is always left at the initial newline */</comment>
		<expr_stmt><expr><call><name pos:line="217" pos:column="17">strbuf_addstr<pos:position pos:line="217" pos:column="30"/></name><argument_list pos:line="217" pos:column="30">(<argument><expr><name pos:line="217" pos:column="31">sb<pos:position pos:line="217" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="35">msg<pos:position pos:line="217" pos:column="38"/></name> <operator pos:line="217" pos:column="39">+<pos:position pos:line="217" pos:column="40"/></operator> <name><name pos:line="217" pos:column="41">c<pos:position pos:line="217" pos:column="42"/></name><operator pos:line="217" pos:column="42">-&gt;<pos:position pos:line="217" pos:column="47"/></operator><name pos:line="217" pos:column="44">message_off<pos:position pos:line="217" pos:column="55"/></name></name> <operator pos:line="217" pos:column="56">+<pos:position pos:line="217" pos:column="57"/></operator> <literal type="number" pos:line="217" pos:column="58">1<pos:position pos:line="217" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="61"/></expr_stmt>
		<return pos:line="218" pos:column="17">return <expr><literal type="number" pos:line="218" pos:column="24">1<pos:position pos:line="218" pos:column="25"/></literal></expr>;<pos:position pos:line="218" pos:column="26"/></return>
	}<pos:position pos:line="219" pos:column="10"/></block></switch>

	<comment type="block" pos:line="221" pos:column="9">/* Now we need to parse the commit message. */</comment>
	<if pos:line="222" pos:column="9">if <condition pos:line="222" pos:column="12">(<expr><operator pos:line="222" pos:column="13">!<pos:position pos:line="222" pos:column="14"/></operator><name><name pos:line="222" pos:column="14">c<pos:position pos:line="222" pos:column="15"/></name><operator pos:line="222" pos:column="15">-&gt;<pos:position pos:line="222" pos:column="20"/></operator><name pos:line="222" pos:column="17">commit_message_parsed<pos:position pos:line="222" pos:column="38"/></name></name></expr>)<pos:position pos:line="222" pos:column="39"/></condition><then pos:line="222" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="223" pos:column="17">parse_commit_message<pos:position pos:line="223" pos:column="37"/></name><argument_list pos:line="223" pos:column="37">(<argument><expr><name pos:line="223" pos:column="38">c<pos:position pos:line="223" pos:column="39"/></name></expr></argument>)<pos:position pos:line="223" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="41"/></expr_stmt></block></then></if>

	<switch pos:line="225" pos:column="9">switch <condition pos:line="225" pos:column="16">(<expr><name><name pos:line="225" pos:column="17">placeholder<pos:position pos:line="225" pos:column="28"/></name><index pos:line="225" pos:column="28">[<expr><literal type="number" pos:line="225" pos:column="29">0<pos:position pos:line="225" pos:column="30"/></literal></expr>]<pos:position pos:line="225" pos:column="31"/></index></name></expr>)<pos:position pos:line="225" pos:column="32"/></condition> <block pos:line="225" pos:column="33">{
	<case pos:line="226" pos:column="9">case <expr><literal type="char" pos:line="226" pos:column="14">'s'<pos:position pos:line="226" pos:column="17"/></literal></expr>:<pos:position pos:line="226" pos:column="18"/></case>	<comment type="block" pos:line="226" pos:column="25">/* subject */</comment>
		<expr_stmt><expr><call><name pos:line="227" pos:column="17">format_subject<pos:position pos:line="227" pos:column="31"/></name><argument_list pos:line="227" pos:column="31">(<argument><expr><name pos:line="227" pos:column="32">sb<pos:position pos:line="227" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="227" pos:column="36">msg<pos:position pos:line="227" pos:column="39"/></name> <operator pos:line="227" pos:column="40">+<pos:position pos:line="227" pos:column="41"/></operator> <name><name pos:line="227" pos:column="42">c<pos:position pos:line="227" pos:column="43"/></name><operator pos:line="227" pos:column="43">-&gt;<pos:position pos:line="227" pos:column="48"/></operator><name pos:line="227" pos:column="45">subject_off<pos:position pos:line="227" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="227" pos:column="58">" "<pos:position pos:line="227" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="63"/></expr_stmt>
		<return pos:line="228" pos:column="17">return <expr><literal type="number" pos:line="228" pos:column="24">1<pos:position pos:line="228" pos:column="25"/></literal></expr>;<pos:position pos:line="228" pos:column="26"/></return>
	<case pos:line="229" pos:column="9">case <expr><literal type="char" pos:line="229" pos:column="14">'f'<pos:position pos:line="229" pos:column="17"/></literal></expr>:<pos:position pos:line="229" pos:column="18"/></case>	<comment type="block" pos:line="229" pos:column="25">/* sanitized subject */</comment>
		<expr_stmt><expr><call><name pos:line="230" pos:column="17">format_sanitized_subject<pos:position pos:line="230" pos:column="41"/></name><argument_list pos:line="230" pos:column="41">(<argument><expr><name pos:line="230" pos:column="42">sb<pos:position pos:line="230" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="46">msg<pos:position pos:line="230" pos:column="49"/></name> <operator pos:line="230" pos:column="50">+<pos:position pos:line="230" pos:column="51"/></operator> <name><name pos:line="230" pos:column="52">c<pos:position pos:line="230" pos:column="53"/></name><operator pos:line="230" pos:column="53">-&gt;<pos:position pos:line="230" pos:column="58"/></operator><name pos:line="230" pos:column="55">subject_off<pos:position pos:line="230" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="230" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="68"/></expr_stmt>
		<return pos:line="231" pos:column="17">return <expr><literal type="number" pos:line="231" pos:column="24">1<pos:position pos:line="231" pos:column="25"/></literal></expr>;<pos:position pos:line="231" pos:column="26"/></return>
	<case pos:line="232" pos:column="9">case <expr><literal type="char" pos:line="232" pos:column="14">'b'<pos:position pos:line="232" pos:column="17"/></literal></expr>:<pos:position pos:line="232" pos:column="18"/></case>	<comment type="block" pos:line="232" pos:column="25">/* body */</comment>
		<expr_stmt><expr><call><name pos:line="233" pos:column="17">strbuf_addstr<pos:position pos:line="233" pos:column="30"/></name><argument_list pos:line="233" pos:column="30">(<argument><expr><name pos:line="233" pos:column="31">sb<pos:position pos:line="233" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="35">msg<pos:position pos:line="233" pos:column="38"/></name> <operator pos:line="233" pos:column="39">+<pos:position pos:line="233" pos:column="40"/></operator> <name><name pos:line="233" pos:column="41">c<pos:position pos:line="233" pos:column="42"/></name><operator pos:line="233" pos:column="42">-&gt;<pos:position pos:line="233" pos:column="47"/></operator><name pos:line="233" pos:column="44">body_off<pos:position pos:line="233" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="233" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="54"/></expr_stmt>
		<return pos:line="234" pos:column="17">return <expr><literal type="number" pos:line="234" pos:column="24">1<pos:position pos:line="234" pos:column="25"/></literal></expr>;<pos:position pos:line="234" pos:column="26"/></return>
	}<pos:position pos:line="235" pos:column="10"/></block></switch>
	<return pos:line="236" pos:column="9">return <expr><literal type="number" pos:line="236" pos:column="16">0<pos:position pos:line="236" pos:column="17"/></literal></expr>;<pos:position pos:line="236" pos:column="18"/></return>	<comment type="block" pos:line="236" pos:column="25">/* unknown placeholder */</comment>
}<pos:position pos:line="237" pos:column="2"/></block></function></unit>

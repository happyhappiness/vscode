<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_699_git-2.13.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">packet_read_line_generic<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">fd<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier><modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">src<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">size_t<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">src_len<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="3" pos:column="39">int<pos:position pos:line="3" pos:column="42"/></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier></type><name pos:line="3" pos:column="44">dst_len<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><call><name pos:line="5" pos:column="19">packet_read<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><name pos:line="5" pos:column="31">fd<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="35">src<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">src_len<pos:position pos:line="5" pos:column="47"/></name></expr></argument>,
			      <argument><expr><name pos:line="6" pos:column="31">packet_buffer<pos:position pos:line="6" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="46">sizeof<argument_list pos:line="6" pos:column="52">(<argument><expr><name pos:line="6" pos:column="53">packet_buffer<pos:position pos:line="6" pos:column="66"/></name></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></sizeof></expr></argument>,
			      <argument><expr><name pos:line="7" pos:column="31">PACKET_READ_CHOMP_NEWLINE<pos:position pos:line="7" pos:column="56"/></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="58"/></decl_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">dst_len<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">dst_len<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">len<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt></block></then></if>
	<return pos:line="10" pos:column="9">return <expr><ternary><condition><expr><name pos:line="10" pos:column="16">len<pos:position pos:line="10" pos:column="19"/></name></expr> ?<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <expr><name pos:line="10" pos:column="22">packet_buffer<pos:position pos:line="10" pos:column="35"/></name></expr> <pos:position pos:line="10" pos:column="36"/></then><else pos:line="10" pos:column="36">: <expr><name pos:line="10" pos:column="38">NULL<pos:position pos:line="10" pos:column="42"/></name></expr></else></ternary></expr>;<pos:position pos:line="10" pos:column="43"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

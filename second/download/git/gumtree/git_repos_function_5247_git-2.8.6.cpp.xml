<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5247_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">shortlog<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">name<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>,
		     <parameter><decl><type><name><name pos:line="2" pos:column="22">struct<pos:position pos:line="2" pos:column="28"/></name> <name pos:line="2" pos:column="29">origin_data<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">origin_data<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
		     <parameter><decl><type><name><name pos:line="3" pos:column="22">struct<pos:position pos:line="3" pos:column="28"/></name> <name pos:line="3" pos:column="29">commit<pos:position pos:line="3" pos:column="35"/></name></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">head<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>,
		     <parameter><decl><type><name><name pos:line="4" pos:column="22">struct<pos:position pos:line="4" pos:column="28"/></name> <name pos:line="4" pos:column="29">rev_info<pos:position pos:line="4" pos:column="37"/></name></name> <modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier></type><name pos:line="4" pos:column="39">rev<pos:position pos:line="4" pos:column="42"/></name></decl></parameter>,
		     <parameter><decl><type><name><name pos:line="5" pos:column="22">struct<pos:position pos:line="5" pos:column="28"/></name> <name pos:line="5" pos:column="29">fmt_merge_msg_opts<pos:position pos:line="5" pos:column="47"/></name></name> <modifier pos:line="5" pos:column="48">*<pos:position pos:line="5" pos:column="49"/></modifier></type><name pos:line="5" pos:column="49">opts<pos:position pos:line="5" pos:column="53"/></name></decl></parameter>,
		     <parameter><decl><type><name><name pos:line="6" pos:column="22">struct<pos:position pos:line="6" pos:column="28"/></name> <name pos:line="6" pos:column="29">strbuf<pos:position pos:line="6" pos:column="35"/></name></name> <modifier pos:line="6" pos:column="36">*<pos:position pos:line="6" pos:column="37"/></modifier></type><name pos:line="6" pos:column="37">out<pos:position pos:line="6" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="41"/></parameter_list>
<block pos:line="7" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="16">count<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">commit<pos:position pos:line="9" pos:column="22"/></name></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier></type><name pos:line="9" pos:column="24">commit<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">object<pos:position pos:line="10" pos:column="22"/></name></name> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">branch<pos:position pos:line="10" pos:column="30"/></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">string_list<pos:position pos:line="11" pos:column="27"/></name></name></type> <name pos:line="11" pos:column="28">subjects<pos:position pos:line="11" pos:column="36"/></name> <init pos:line="11" pos:column="37">= <expr><name pos:line="11" pos:column="39">STRING_LIST_INIT_DUP<pos:position pos:line="11" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">string_list<pos:position pos:line="12" pos:column="27"/></name></name></type> <name pos:line="12" pos:column="28">authors<pos:position pos:line="12" pos:column="35"/></name> <init pos:line="12" pos:column="36">= <expr><name pos:line="12" pos:column="38">STRING_LIST_INIT_DUP<pos:position pos:line="12" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">string_list<pos:position pos:line="13" pos:column="27"/></name></name></type> <name pos:line="13" pos:column="28">committers<pos:position pos:line="13" pos:column="38"/></name> <init pos:line="13" pos:column="39">= <expr><name pos:line="13" pos:column="41">STRING_LIST_INIT_DUP<pos:position pos:line="13" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">flags<pos:position pos:line="14" pos:column="18"/></name> <init pos:line="14" pos:column="19">= <expr><name pos:line="14" pos:column="21">UNINTERESTING<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">|<pos:position pos:line="14" pos:column="36"/></operator> <name pos:line="14" pos:column="37">TREESAME<pos:position pos:line="14" pos:column="45"/></name> <operator pos:line="14" pos:column="46">|<pos:position pos:line="14" pos:column="47"/></operator> <name pos:line="14" pos:column="48">SEEN<pos:position pos:line="14" pos:column="52"/></name> <operator pos:line="14" pos:column="53">|<pos:position pos:line="14" pos:column="54"/></operator> <name pos:line="14" pos:column="55">SHOWN<pos:position pos:line="14" pos:column="60"/></name> <operator pos:line="14" pos:column="61">|<pos:position pos:line="14" pos:column="62"/></operator> <name pos:line="14" pos:column="63">ADDED<pos:position pos:line="14" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="15" pos:column="9">struct<pos:position pos:line="15" pos:column="15"/></name> <name pos:line="15" pos:column="16">strbuf<pos:position pos:line="15" pos:column="22"/></name></name></type> <name pos:line="15" pos:column="23">sb<pos:position pos:line="15" pos:column="25"/></name> <init pos:line="15" pos:column="26">= <expr><name pos:line="15" pos:column="28">STRBUF_INIT<pos:position pos:line="15" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="16" pos:column="9">const<pos:position pos:line="16" pos:column="14"/></specifier> <name pos:line="16" pos:column="15">unsigned<pos:position pos:line="16" pos:column="23"/></name> <name pos:line="16" pos:column="24">char<pos:position pos:line="16" pos:column="28"/></name> <modifier pos:line="16" pos:column="29">*<pos:position pos:line="16" pos:column="30"/></modifier></type><name pos:line="16" pos:column="30">sha1<pos:position pos:line="16" pos:column="34"/></name> <init pos:line="16" pos:column="35">= <expr><name><name pos:line="16" pos:column="37">origin_data<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">sha1<pos:position pos:line="16" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">limit<pos:position pos:line="17" pos:column="18"/></name> <init pos:line="17" pos:column="19">= <expr><name><name pos:line="17" pos:column="21">opts<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">shortlog_len<pos:position pos:line="17" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="40"/></decl_stmt>

	<expr_stmt><expr><name pos:line="19" pos:column="9">branch<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">deref_tag<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><call><name pos:line="19" pos:column="28">parse_object<pos:position pos:line="19" pos:column="40"/></name><argument_list pos:line="19" pos:column="40">(<argument><expr><name pos:line="19" pos:column="41">sha1<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="48">sha1_to_hex<pos:position pos:line="19" pos:column="59"/></name><argument_list pos:line="19" pos:column="59">(<argument><expr><name pos:line="19" pos:column="60">sha1<pos:position pos:line="19" pos:column="64"/></name></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="67">40<pos:position pos:line="19" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="71"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">branch<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">||<pos:position pos:line="20" pos:column="23"/></operator> <name><name pos:line="20" pos:column="24">branch<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">type<pos:position pos:line="20" pos:column="36"/></name></name> <operator pos:line="20" pos:column="37">!=<pos:position pos:line="20" pos:column="39"/></operator> <name pos:line="20" pos:column="40">OBJ_COMMIT<pos:position pos:line="20" pos:column="50"/></name></expr>)<pos:position pos:line="20" pos:column="51"/></condition><then pos:line="20" pos:column="51">
		<block type="pseudo"><return pos:line="21" pos:column="17">return;<pos:position pos:line="21" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">setup_revisions<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><literal type="number" pos:line="23" pos:column="25">0<pos:position pos:line="23" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="28">NULL<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">rev<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="39">NULL<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">add_pending_object<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">rev<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="33">branch<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">name<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">add_pending_object<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">rev<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="33">&amp;<pos:position pos:line="25" pos:column="38"/></operator><name><name pos:line="25" pos:column="34">head<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">object<pos:position pos:line="25" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="48">"^HEAD"<pos:position pos:line="25" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">head<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">-&gt;<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="15">object<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">.<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">flags<pos:position pos:line="26" pos:column="27"/></name></name> <operator pos:line="26" pos:column="28">|=<pos:position pos:line="26" pos:column="30"/></operator> <name pos:line="26" pos:column="31">UNINTERESTING<pos:position pos:line="26" pos:column="44"/></name></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">prepare_revision_walk<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">rev<pos:position pos:line="27" pos:column="38"/></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="40"/></condition><then pos:line="27" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">die<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><literal type="string" pos:line="28" pos:column="21">"revision walk setup failed"<pos:position pos:line="28" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt></block></then></if>
	<while pos:line="29" pos:column="9">while <condition pos:line="29" pos:column="15">(<expr><operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">commit<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <call><name pos:line="29" pos:column="26">get_revision<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><name pos:line="29" pos:column="39">rev<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call><operator pos:line="29" pos:column="43">)<pos:position pos:line="29" pos:column="44"/></operator> <operator pos:line="29" pos:column="45">!=<pos:position pos:line="29" pos:column="47"/></operator> <name pos:line="29" pos:column="48">NULL<pos:position pos:line="29" pos:column="52"/></name></expr>)<pos:position pos:line="29" pos:column="53"/></condition> <block pos:line="29" pos:column="54">{
		<decl_stmt><decl><type><name><name pos:line="30" pos:column="17">struct<pos:position pos:line="30" pos:column="23"/></name> <name pos:line="30" pos:column="24">pretty_print_context<pos:position pos:line="30" pos:column="44"/></name></name></type> <name pos:line="30" pos:column="45">ctx<pos:position pos:line="30" pos:column="48"/></name> <init pos:line="30" pos:column="49">= <expr><block pos:line="30" pos:column="51">{<expr><literal type="number" pos:line="30" pos:column="52">0<pos:position pos:line="30" pos:column="53"/></literal></expr>}<pos:position pos:line="30" pos:column="54"/></block></expr></init></decl>;<pos:position pos:line="30" pos:column="55"/></decl_stmt>

		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name><name pos:line="32" pos:column="21">commit<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">parents<pos:position pos:line="32" pos:column="36"/></name></name> <operator pos:line="32" pos:column="37">&amp;&amp;<pos:position pos:line="32" pos:column="47"/></operator> <name><name pos:line="32" pos:column="40">commit<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">-&gt;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="48">parents<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">-&gt;<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="57">next<pos:position pos:line="32" pos:column="61"/></name></name></expr>)<pos:position pos:line="32" pos:column="62"/></condition><then pos:line="32" pos:column="62"> <block pos:line="32" pos:column="63">{
			<comment type="block" pos:line="33" pos:column="25">/* do not list a merge but count committer */</comment>
			<if pos:line="34" pos:column="25">if <condition pos:line="34" pos:column="28">(<expr><name><name pos:line="34" pos:column="29">opts<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">-&gt;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="35">credit_people<pos:position pos:line="34" pos:column="48"/></name></name></expr>)<pos:position pos:line="34" pos:column="49"/></condition><then pos:line="34" pos:column="49">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="33">record_person<pos:position pos:line="35" pos:column="46"/></name><argument_list pos:line="35" pos:column="46">(<argument><expr><literal type="char" pos:line="35" pos:column="47">'c'<pos:position pos:line="35" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="52">&amp;<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="53">committers<pos:position pos:line="35" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="65">commit<pos:position pos:line="35" pos:column="71"/></name></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="73"/></expr_stmt></block></then></if>
			<continue pos:line="36" pos:column="25">continue;<pos:position pos:line="36" pos:column="34"/></continue>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">count<pos:position pos:line="38" pos:column="27"/></name> <operator pos:line="38" pos:column="28">&amp;&amp;<pos:position pos:line="38" pos:column="38"/></operator> <name><name pos:line="38" pos:column="31">opts<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">-&gt;<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="37">credit_people<pos:position pos:line="38" pos:column="50"/></name></name></expr>)<pos:position pos:line="38" pos:column="51"/></condition><then pos:line="38" pos:column="51">
			<comment type="block" pos:line="39" pos:column="25">/* the 'tip' committer */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="25">record_person<pos:position pos:line="40" pos:column="38"/></name><argument_list pos:line="40" pos:column="38">(<argument><expr><literal type="char" pos:line="40" pos:column="39">'c'<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="40" pos:column="44">&amp;<pos:position pos:line="40" pos:column="49"/></operator><name pos:line="40" pos:column="45">committers<pos:position pos:line="40" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="57">commit<pos:position pos:line="40" pos:column="63"/></name></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="65"/></expr_stmt></block></then></if>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name><name pos:line="41" pos:column="21">opts<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">-&gt;<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="27">credit_people<pos:position pos:line="41" pos:column="40"/></name></name></expr>)<pos:position pos:line="41" pos:column="41"/></condition><then pos:line="41" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="25">record_person<pos:position pos:line="42" pos:column="38"/></name><argument_list pos:line="42" pos:column="38">(<argument><expr><literal type="char" pos:line="42" pos:column="39">'a'<pos:position pos:line="42" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="42" pos:column="44">&amp;<pos:position pos:line="42" pos:column="49"/></operator><name pos:line="42" pos:column="45">authors<pos:position pos:line="42" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="54">commit<pos:position pos:line="42" pos:column="60"/></name></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="62"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="43" pos:column="17">count<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">++<pos:position pos:line="43" pos:column="24"/></operator></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name><name pos:line="44" pos:column="21">subjects<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">.<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="30">nr<pos:position pos:line="44" pos:column="32"/></name></name> <operator pos:line="44" pos:column="33">&gt;<pos:position pos:line="44" pos:column="37"/></operator> <name pos:line="44" pos:column="35">limit<pos:position pos:line="44" pos:column="40"/></name></expr>)<pos:position pos:line="44" pos:column="41"/></condition><then pos:line="44" pos:column="41">
			<block type="pseudo"><continue pos:line="45" pos:column="25">continue;<pos:position pos:line="45" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="47" pos:column="17">format_commit_message<pos:position pos:line="47" pos:column="38"/></name><argument_list pos:line="47" pos:column="38">(<argument><expr><name pos:line="47" pos:column="39">commit<pos:position pos:line="47" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="47">"%s"<pos:position pos:line="47" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="47" pos:column="53">&amp;<pos:position pos:line="47" pos:column="58"/></operator><name pos:line="47" pos:column="54">sb<pos:position pos:line="47" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="58">&amp;<pos:position pos:line="47" pos:column="63"/></operator><name pos:line="47" pos:column="59">ctx<pos:position pos:line="47" pos:column="62"/></name></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">strbuf_ltrim<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><operator pos:line="48" pos:column="30">&amp;<pos:position pos:line="48" pos:column="35"/></operator><name pos:line="48" pos:column="31">sb<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>

		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><operator pos:line="50" pos:column="21">!<pos:position pos:line="50" pos:column="22"/></operator><name><name pos:line="50" pos:column="22">sb<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">.<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="25">len<pos:position pos:line="50" pos:column="28"/></name></name></expr>)<pos:position pos:line="50" pos:column="29"/></condition><then pos:line="50" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="25">string_list_append<pos:position pos:line="51" pos:column="43"/></name><argument_list pos:line="51" pos:column="43">(<argument><expr><operator pos:line="51" pos:column="44">&amp;<pos:position pos:line="51" pos:column="49"/></operator><name pos:line="51" pos:column="45">subjects<pos:position pos:line="51" pos:column="53"/></name></expr></argument>,
					   <argument><expr><call><name pos:line="52" pos:column="44">oid_to_hex<pos:position pos:line="52" pos:column="54"/></name><argument_list pos:line="52" pos:column="54">(<argument><expr><operator pos:line="52" pos:column="55">&amp;<pos:position pos:line="52" pos:column="60"/></operator><name><name pos:line="52" pos:column="56">commit<pos:position pos:line="52" pos:column="62"/></name><operator pos:line="52" pos:column="62">-&gt;<pos:position pos:line="52" pos:column="67"/></operator><name pos:line="52" pos:column="64">object<pos:position pos:line="52" pos:column="70"/></name><operator pos:line="52" pos:column="70">.<pos:position pos:line="52" pos:column="71"/></operator><name pos:line="52" pos:column="71">oid<pos:position pos:line="52" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="77"/></expr_stmt></block></then>
		<else pos:line="53" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="25">string_list_append<pos:position pos:line="54" pos:column="43"/></name><argument_list pos:line="54" pos:column="43">(<argument><expr><operator pos:line="54" pos:column="44">&amp;<pos:position pos:line="54" pos:column="49"/></operator><name pos:line="54" pos:column="45">subjects<pos:position pos:line="54" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="55">strbuf_detach<pos:position pos:line="54" pos:column="68"/></name><argument_list pos:line="54" pos:column="68">(<argument><expr><operator pos:line="54" pos:column="69">&amp;<pos:position pos:line="54" pos:column="74"/></operator><name pos:line="54" pos:column="70">sb<pos:position pos:line="54" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="74">NULL<pos:position pos:line="54" pos:column="78"/></name></expr></argument>)<pos:position pos:line="54" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="81"/></expr_stmt></block></else></if>
	}<pos:position pos:line="55" pos:column="10"/></block></while>

	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name><name pos:line="57" pos:column="13">opts<pos:position pos:line="57" pos:column="17"/></name><operator pos:line="57" pos:column="17">-&gt;<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="19">credit_people<pos:position pos:line="57" pos:column="32"/></name></name></expr>)<pos:position pos:line="57" pos:column="33"/></condition><then pos:line="57" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="17">add_people_info<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">out<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="38">&amp;<pos:position pos:line="58" pos:column="43"/></operator><name pos:line="58" pos:column="39">authors<pos:position pos:line="58" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="48">&amp;<pos:position pos:line="58" pos:column="53"/></operator><name pos:line="58" pos:column="49">committers<pos:position pos:line="58" pos:column="59"/></name></expr></argument>)<pos:position pos:line="58" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="61"/></expr_stmt></block></then></if>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">count<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">&gt;<pos:position pos:line="59" pos:column="23"/></operator> <name pos:line="59" pos:column="21">limit<pos:position pos:line="59" pos:column="26"/></name></expr>)<pos:position pos:line="59" pos:column="27"/></condition><then pos:line="59" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="17">strbuf_addf<pos:position pos:line="60" pos:column="28"/></name><argument_list pos:line="60" pos:column="28">(<argument><expr><name pos:line="60" pos:column="29">out<pos:position pos:line="60" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="34">"\n* %s: (%d commits)\n"<pos:position pos:line="60" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="60">name<pos:position pos:line="60" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="66">count<pos:position pos:line="60" pos:column="71"/></name></expr></argument>)<pos:position pos:line="60" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="73"/></expr_stmt></block></then>
	<else pos:line="61" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="17">strbuf_addf<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><name pos:line="62" pos:column="29">out<pos:position pos:line="62" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="34">"\n* %s:\n"<pos:position pos:line="62" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="47">name<pos:position pos:line="62" pos:column="51"/></name></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="53"/></expr_stmt></block></else></if>

	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name><name pos:line="64" pos:column="13">origin_data<pos:position pos:line="64" pos:column="24"/></name><operator pos:line="64" pos:column="24">-&gt;<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="26">is_local_branch<pos:position pos:line="64" pos:column="41"/></name></name> <operator pos:line="64" pos:column="42">&amp;&amp;<pos:position pos:line="64" pos:column="52"/></operator> <name pos:line="64" pos:column="45">use_branch_desc<pos:position pos:line="64" pos:column="60"/></name></expr>)<pos:position pos:line="64" pos:column="61"/></condition><then pos:line="64" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="17">add_branch_desc<pos:position pos:line="65" pos:column="32"/></name><argument_list pos:line="65" pos:column="32">(<argument><expr><name pos:line="65" pos:column="33">out<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">name<pos:position pos:line="65" pos:column="42"/></name></expr></argument>)<pos:position pos:line="65" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="44"/></expr_stmt></block></then></if>

	<for pos:line="67" pos:column="9">for <control pos:line="67" pos:column="13">(<init><expr><name pos:line="67" pos:column="14">i<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <literal type="number" pos:line="67" pos:column="18">0<pos:position pos:line="67" pos:column="19"/></literal></expr>;<pos:position pos:line="67" pos:column="20"/></init> <condition><expr><name pos:line="67" pos:column="21">i<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">&lt;<pos:position pos:line="67" pos:column="27"/></operator> <name><name pos:line="67" pos:column="25">subjects<pos:position pos:line="67" pos:column="33"/></name><operator pos:line="67" pos:column="33">.<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="34">nr<pos:position pos:line="67" pos:column="36"/></name></name></expr>;<pos:position pos:line="67" pos:column="37"/></condition> <incr><expr><name pos:line="67" pos:column="38">i<pos:position pos:line="67" pos:column="39"/></name><operator pos:line="67" pos:column="39">++<pos:position pos:line="67" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="42"/></control>
		<block type="pseudo"><if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">i<pos:position pos:line="68" pos:column="22"/></name> <operator pos:line="68" pos:column="23">&gt;=<pos:position pos:line="68" pos:column="28"/></operator> <name pos:line="68" pos:column="26">limit<pos:position pos:line="68" pos:column="31"/></name></expr>)<pos:position pos:line="68" pos:column="32"/></condition><then pos:line="68" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="25">strbuf_addf<pos:position pos:line="69" pos:column="36"/></name><argument_list pos:line="69" pos:column="36">(<argument><expr><name pos:line="69" pos:column="37">out<pos:position pos:line="69" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="42">"  ...\n"<pos:position pos:line="69" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="53"/></expr_stmt></block></then>
		<else pos:line="70" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="25">strbuf_addf<pos:position pos:line="71" pos:column="36"/></name><argument_list pos:line="71" pos:column="36">(<argument><expr><name pos:line="71" pos:column="37">out<pos:position pos:line="71" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="42">"  %s\n"<pos:position pos:line="71" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="52">subjects<pos:position pos:line="71" pos:column="60"/></name><operator pos:line="71" pos:column="60">.<pos:position pos:line="71" pos:column="61"/></operator><name pos:line="71" pos:column="61">items<pos:position pos:line="71" pos:column="66"/></name><index pos:line="71" pos:column="66">[<expr><name pos:line="71" pos:column="67">i<pos:position pos:line="71" pos:column="68"/></name></expr>]<pos:position pos:line="71" pos:column="69"/></index></name><operator pos:line="71" pos:column="69">.<pos:position pos:line="71" pos:column="70"/></operator><name pos:line="71" pos:column="70">string<pos:position pos:line="71" pos:column="76"/></name></expr></argument>)<pos:position pos:line="71" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="78"/></expr_stmt></block></else></if></block></for>

	<expr_stmt><expr><call><name pos:line="73" pos:column="9">clear_commit_marks<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><operator pos:line="73" pos:column="28">(<pos:position pos:line="73" pos:column="29"/></operator>struct <name pos:line="73" pos:column="36">commit<pos:position pos:line="73" pos:column="42"/></name> <operator pos:line="73" pos:column="43">*<pos:position pos:line="73" pos:column="44"/></operator><operator pos:line="73" pos:column="44">)<pos:position pos:line="73" pos:column="45"/></operator><name pos:line="73" pos:column="45">branch<pos:position pos:line="73" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="53">flags<pos:position pos:line="73" pos:column="58"/></name></expr></argument>)<pos:position pos:line="73" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="74" pos:column="9">clear_commit_marks<pos:position pos:line="74" pos:column="27"/></name><argument_list pos:line="74" pos:column="27">(<argument><expr><name pos:line="74" pos:column="28">head<pos:position pos:line="74" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="34">flags<pos:position pos:line="74" pos:column="39"/></name></expr></argument>)<pos:position pos:line="74" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="75" pos:column="9">free_commit_list<pos:position pos:line="75" pos:column="25"/></name><argument_list pos:line="75" pos:column="25">(<argument><expr><name><name pos:line="75" pos:column="26">rev<pos:position pos:line="75" pos:column="29"/></name><operator pos:line="75" pos:column="29">-&gt;<pos:position pos:line="75" pos:column="34"/></operator><name pos:line="75" pos:column="31">commits<pos:position pos:line="75" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="76" pos:column="9">rev<pos:position pos:line="76" pos:column="12"/></name><operator pos:line="76" pos:column="12">-&gt;<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="14">commits<pos:position pos:line="76" pos:column="21"/></name></name> <operator pos:line="76" pos:column="22">=<pos:position pos:line="76" pos:column="23"/></operator> <name pos:line="76" pos:column="24">NULL<pos:position pos:line="76" pos:column="28"/></name></expr>;<pos:position pos:line="76" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="77" pos:column="9">rev<pos:position pos:line="77" pos:column="12"/></name><operator pos:line="77" pos:column="12">-&gt;<pos:position pos:line="77" pos:column="17"/></operator><name pos:line="77" pos:column="14">pending<pos:position pos:line="77" pos:column="21"/></name><operator pos:line="77" pos:column="21">.<pos:position pos:line="77" pos:column="22"/></operator><name pos:line="77" pos:column="22">nr<pos:position pos:line="77" pos:column="24"/></name></name> <operator pos:line="77" pos:column="25">=<pos:position pos:line="77" pos:column="26"/></operator> <literal type="number" pos:line="77" pos:column="27">0<pos:position pos:line="77" pos:column="28"/></literal></expr>;<pos:position pos:line="77" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="79" pos:column="9">string_list_clear<pos:position pos:line="79" pos:column="26"/></name><argument_list pos:line="79" pos:column="26">(<argument><expr><operator pos:line="79" pos:column="27">&amp;<pos:position pos:line="79" pos:column="32"/></operator><name pos:line="79" pos:column="28">authors<pos:position pos:line="79" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="37">0<pos:position pos:line="79" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="80" pos:column="9">string_list_clear<pos:position pos:line="80" pos:column="26"/></name><argument_list pos:line="80" pos:column="26">(<argument><expr><operator pos:line="80" pos:column="27">&amp;<pos:position pos:line="80" pos:column="32"/></operator><name pos:line="80" pos:column="28">committers<pos:position pos:line="80" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="40">0<pos:position pos:line="80" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="81" pos:column="9">string_list_clear<pos:position pos:line="81" pos:column="26"/></name><argument_list pos:line="81" pos:column="26">(<argument><expr><operator pos:line="81" pos:column="27">&amp;<pos:position pos:line="81" pos:column="32"/></operator><name pos:line="81" pos:column="28">subjects<pos:position pos:line="81" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="38">0<pos:position pos:line="81" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="41"/></expr_stmt>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

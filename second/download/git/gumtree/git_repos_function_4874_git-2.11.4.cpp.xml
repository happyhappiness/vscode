<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4874_git-2.11.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_checkout<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">argc<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">argv<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">prefix<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">checkout_opts<pos:position pos:line="3" pos:column="29"/></name></name></type> <name pos:line="3" pos:column="30">opts<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	struct <expr_stmt><expr><name pos:line="4" pos:column="16">branch_info<pos:position pos:line="4" pos:column="27"/></name> <operator pos:line="4" pos:column="28">new<pos:position pos:line="4" pos:column="31"/></operator></expr>;<pos:position pos:line="4" pos:column="32"/></expr_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">conflict_style<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name pos:line="5" pos:column="32">NULL<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">dwim_new_local_branch<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><literal type="number" pos:line="6" pos:column="37">1<pos:position pos:line="6" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">option<pos:position pos:line="7" pos:column="22"/></name></name></type> <name><name pos:line="7" pos:column="23">options<pos:position pos:line="7" pos:column="30"/></name><index pos:line="7" pos:column="30">[]<pos:position pos:line="7" pos:column="32"/></index></name> <init pos:line="7" pos:column="33">= <expr><block pos:line="7" pos:column="35">{
		<expr><call><name pos:line="8" pos:column="17">OPT__QUIET<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><operator pos:line="8" pos:column="28">&amp;<pos:position pos:line="8" pos:column="33"/></operator><name><name pos:line="8" pos:column="29">opts<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">.<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="34">quiet<pos:position pos:line="8" pos:column="39"/></name></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="41">N_<pos:position pos:line="8" pos:column="43"/></name><argument_list pos:line="8" pos:column="43">(<argument><expr><literal type="string" pos:line="8" pos:column="44">"suppress progress reporting"<pos:position pos:line="8" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="75"/></argument_list></call></expr>,
		<expr><call><name pos:line="9" pos:column="17">OPT_STRING<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><literal type="char" pos:line="9" pos:column="28">'b'<pos:position pos:line="9" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="33">NULL<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="39">&amp;<pos:position pos:line="9" pos:column="44"/></operator><name><name pos:line="9" pos:column="40">opts<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">.<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="45">new_branch<pos:position pos:line="9" pos:column="55"/></name></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="57">N_<pos:position pos:line="9" pos:column="59"/></name><argument_list pos:line="9" pos:column="59">(<argument><expr><literal type="string" pos:line="9" pos:column="60">"branch"<pos:position pos:line="9" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="10" pos:column="28">N_<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><literal type="string" pos:line="10" pos:column="31">"create and checkout a new branch"<pos:position pos:line="10" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>,
		<expr><call><name pos:line="11" pos:column="17">OPT_STRING<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><literal type="char" pos:line="11" pos:column="28">'B'<pos:position pos:line="11" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="33">NULL<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="39">&amp;<pos:position pos:line="11" pos:column="44"/></operator><name><name pos:line="11" pos:column="40">opts<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">.<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="45">new_branch_force<pos:position pos:line="11" pos:column="61"/></name></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="63">N_<pos:position pos:line="11" pos:column="65"/></name><argument_list pos:line="11" pos:column="65">(<argument><expr><literal type="string" pos:line="11" pos:column="66">"branch"<pos:position pos:line="11" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="12" pos:column="28">N_<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><literal type="string" pos:line="12" pos:column="31">"create/reset and checkout a branch"<pos:position pos:line="12" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>,
		<expr><call><name pos:line="13" pos:column="17">OPT_BOOL<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><literal type="char" pos:line="13" pos:column="26">'l'<pos:position pos:line="13" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="31">NULL<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="37">&amp;<pos:position pos:line="13" pos:column="42"/></operator><name><name pos:line="13" pos:column="38">opts<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">.<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="43">new_branch_log<pos:position pos:line="13" pos:column="57"/></name></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="59">N_<pos:position pos:line="13" pos:column="61"/></name><argument_list pos:line="13" pos:column="61">(<argument><expr><literal type="string" pos:line="13" pos:column="62">"create reflog for new branch"<pos:position pos:line="13" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="94"/></argument_list></call></expr>,
		<expr><call><name pos:line="14" pos:column="17">OPT_BOOL<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="29">"detach"<pos:position pos:line="14" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="39">&amp;<pos:position pos:line="14" pos:column="44"/></operator><name><name pos:line="14" pos:column="40">opts<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">.<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="45">force_detach<pos:position pos:line="14" pos:column="57"/></name></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="59">N_<pos:position pos:line="14" pos:column="61"/></name><argument_list pos:line="14" pos:column="61">(<argument><expr><literal type="string" pos:line="14" pos:column="62">"detach HEAD at named commit"<pos:position pos:line="14" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="93"/></argument_list></call></expr>,
		<expr><call><name pos:line="15" pos:column="17">OPT_SET_INT<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><literal type="char" pos:line="15" pos:column="29">'t'<pos:position pos:line="15" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="34">"track"<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>,  <argument><expr><operator pos:line="15" pos:column="44">&amp;<pos:position pos:line="15" pos:column="49"/></operator><name><name pos:line="15" pos:column="45">opts<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">.<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">track<pos:position pos:line="15" pos:column="55"/></name></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="57">N_<pos:position pos:line="15" pos:column="59"/></name><argument_list pos:line="15" pos:column="59">(<argument><expr><literal type="string" pos:line="15" pos:column="60">"set upstream info for new branch"<pos:position pos:line="15" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="95"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="16" pos:column="25">BRANCH_TRACK_EXPLICIT<pos:position pos:line="16" pos:column="46"/></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>,
		<expr><call><name pos:line="17" pos:column="17">OPT_STRING<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><literal type="number" pos:line="17" pos:column="28">0<pos:position pos:line="17" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="31">"orphan"<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="41">&amp;<pos:position pos:line="17" pos:column="46"/></operator><name><name pos:line="17" pos:column="42">opts<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">.<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="47">new_orphan_branch<pos:position pos:line="17" pos:column="64"/></name></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="66">N_<pos:position pos:line="17" pos:column="68"/></name><argument_list pos:line="17" pos:column="68">(<argument><expr><literal type="string" pos:line="17" pos:column="69">"new-branch"<pos:position pos:line="17" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="84">N_<pos:position pos:line="17" pos:column="86"/></name><argument_list pos:line="17" pos:column="86">(<argument><expr><literal type="string" pos:line="17" pos:column="87">"new unparented branch"<pos:position pos:line="17" pos:column="110"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="112"/></argument_list></call></expr>,
		<expr><call><name pos:line="18" pos:column="17">OPT_SET_INT<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><literal type="char" pos:line="18" pos:column="29">'2'<pos:position pos:line="18" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="34">"ours"<pos:position pos:line="18" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="42">&amp;<pos:position pos:line="18" pos:column="47"/></operator><name><name pos:line="18" pos:column="43">opts<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">.<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="48">writeout_stage<pos:position pos:line="18" pos:column="62"/></name></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="64">N_<pos:position pos:line="18" pos:column="66"/></name><argument_list pos:line="18" pos:column="66">(<argument><expr><literal type="string" pos:line="18" pos:column="67">"checkout our version for unmerged files"<pos:position pos:line="18" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="109"/></argument_list></call></expr></argument>,
			    <argument><expr><literal type="number" pos:line="19" pos:column="29">2<pos:position pos:line="19" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>,
		<expr><call><name pos:line="20" pos:column="17">OPT_SET_INT<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><literal type="char" pos:line="20" pos:column="29">'3'<pos:position pos:line="20" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="34">"theirs"<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="44">&amp;<pos:position pos:line="20" pos:column="49"/></operator><name><name pos:line="20" pos:column="45">opts<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">.<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">writeout_stage<pos:position pos:line="20" pos:column="64"/></name></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="66">N_<pos:position pos:line="20" pos:column="68"/></name><argument_list pos:line="20" pos:column="68">(<argument><expr><literal type="string" pos:line="20" pos:column="69">"checkout their version for unmerged files"<pos:position pos:line="20" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="113"/></argument_list></call></expr></argument>,
			    <argument><expr><literal type="number" pos:line="21" pos:column="29">3<pos:position pos:line="21" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>,
		<expr><call><name pos:line="22" pos:column="17">OPT__FORCE<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><operator pos:line="22" pos:column="28">&amp;<pos:position pos:line="22" pos:column="33"/></operator><name><name pos:line="22" pos:column="29">opts<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">.<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">force<pos:position pos:line="22" pos:column="39"/></name></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="41">N_<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><literal type="string" pos:line="22" pos:column="44">"force checkout (throw away local modifications)"<pos:position pos:line="22" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="95"/></argument_list></call></expr>,
		<expr><call><name pos:line="23" pos:column="17">OPT_BOOL<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><literal type="char" pos:line="23" pos:column="26">'m'<pos:position pos:line="23" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="31">"merge"<pos:position pos:line="23" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="40">&amp;<pos:position pos:line="23" pos:column="45"/></operator><name><name pos:line="23" pos:column="41">opts<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">.<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="46">merge<pos:position pos:line="23" pos:column="51"/></name></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="53">N_<pos:position pos:line="23" pos:column="55"/></name><argument_list pos:line="23" pos:column="55">(<argument><expr><literal type="string" pos:line="23" pos:column="56">"perform a 3-way merge with the new branch"<pos:position pos:line="23" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="101"/></argument_list></call></expr>,
		<expr><call><name pos:line="24" pos:column="17">OPT_BOOL<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><literal type="number" pos:line="24" pos:column="26">0<pos:position pos:line="24" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="29">"overwrite-ignore"<pos:position pos:line="24" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="49">&amp;<pos:position pos:line="24" pos:column="54"/></operator><name><name pos:line="24" pos:column="50">opts<pos:position pos:line="24" pos:column="54"/></name><operator pos:line="24" pos:column="54">.<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="55">overwrite_ignore<pos:position pos:line="24" pos:column="71"/></name></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="73">N_<pos:position pos:line="24" pos:column="75"/></name><argument_list pos:line="24" pos:column="75">(<argument><expr><literal type="string" pos:line="24" pos:column="76">"update ignored files (default)"<pos:position pos:line="24" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="110"/></argument_list></call></expr>,
		<expr><call><name pos:line="25" pos:column="17">OPT_STRING<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="31">"conflict"<pos:position pos:line="25" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="43">&amp;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="44">conflict_style<pos:position pos:line="25" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="60">N_<pos:position pos:line="25" pos:column="62"/></name><argument_list pos:line="25" pos:column="62">(<argument><expr><literal type="string" pos:line="25" pos:column="63">"style"<pos:position pos:line="25" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="26" pos:column="28">N_<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><literal type="string" pos:line="26" pos:column="31">"conflict style (merge or diff3)"<pos:position pos:line="26" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>,
		<expr><call><name pos:line="27" pos:column="17">OPT_BOOL<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><literal type="char" pos:line="27" pos:column="26">'p'<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="31">"patch"<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="40">&amp;<pos:position pos:line="27" pos:column="45"/></operator><name><name pos:line="27" pos:column="41">opts<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">.<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">patch_mode<pos:position pos:line="27" pos:column="56"/></name></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="58">N_<pos:position pos:line="27" pos:column="60"/></name><argument_list pos:line="27" pos:column="60">(<argument><expr><literal type="string" pos:line="27" pos:column="61">"select hunks interactively"<pos:position pos:line="27" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="91"/></argument_list></call></expr>,
		<expr><call><name pos:line="28" pos:column="17">OPT_BOOL<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><literal type="number" pos:line="28" pos:column="26">0<pos:position pos:line="28" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="29">"ignore-skip-worktree-bits"<pos:position pos:line="28" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="58">&amp;<pos:position pos:line="28" pos:column="63"/></operator><name><name pos:line="28" pos:column="59">opts<pos:position pos:line="28" pos:column="63"/></name><operator pos:line="28" pos:column="63">.<pos:position pos:line="28" pos:column="64"/></operator><name pos:line="28" pos:column="64">ignore_skipworktree<pos:position pos:line="28" pos:column="83"/></name></name></expr></argument>,
			 <argument><expr><call><name pos:line="29" pos:column="26">N_<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">"do not limit pathspecs to sparse entries only"<pos:position pos:line="29" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="78"/></argument_list></call></expr>,
		<expr><call><name pos:line="30" pos:column="17">OPT_HIDDEN_BOOL<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><literal type="number" pos:line="30" pos:column="33">0<pos:position pos:line="30" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="36">"guess"<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="45">&amp;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="46">dwim_new_local_branch<pos:position pos:line="30" pos:column="67"/></name></expr></argument>,
				<argument><expr><call><name pos:line="31" pos:column="33">N_<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><literal type="string" pos:line="31" pos:column="36">"second guess 'git checkout &lt;no-such-branch&gt;'"<pos:position pos:line="31" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="84"/></argument_list></call></expr>,
		<expr><call><name pos:line="32" pos:column="17">OPT_BOOL<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><literal type="number" pos:line="32" pos:column="26">0<pos:position pos:line="32" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="29">"ignore-other-worktrees"<pos:position pos:line="32" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="55">&amp;<pos:position pos:line="32" pos:column="60"/></operator><name><name pos:line="32" pos:column="56">opts<pos:position pos:line="32" pos:column="60"/></name><operator pos:line="32" pos:column="60">.<pos:position pos:line="32" pos:column="61"/></operator><name pos:line="32" pos:column="61">ignore_other_worktrees<pos:position pos:line="32" pos:column="83"/></name></name></expr></argument>,
			 <argument><expr><call><name pos:line="33" pos:column="26">N_<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><literal type="string" pos:line="33" pos:column="29">"do not check if another worktree is holding the given ref"<pos:position pos:line="33" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="90"/></argument_list></call></expr>,
		<expr><call><name pos:line="34" pos:column="17">OPT_BOOL<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><literal type="number" pos:line="34" pos:column="26">0<pos:position pos:line="34" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="29">"progress"<pos:position pos:line="34" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="41">&amp;<pos:position pos:line="34" pos:column="46"/></operator><name><name pos:line="34" pos:column="42">opts<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">.<pos:position pos:line="34" pos:column="47"/></operator><name pos:line="34" pos:column="47">show_progress<pos:position pos:line="34" pos:column="60"/></name></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="62">N_<pos:position pos:line="34" pos:column="64"/></name><argument_list pos:line="34" pos:column="64">(<argument><expr><literal type="string" pos:line="34" pos:column="65">"force progress reporting"<pos:position pos:line="34" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="93"/></argument_list></call></expr>,
		<expr><call><name pos:line="35" pos:column="17">OPT_END<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">()<pos:position pos:line="35" pos:column="26"/></argument_list></call></expr>,
	}<pos:position pos:line="36" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="36" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="38" pos:column="9">memset<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><operator pos:line="38" pos:column="16">&amp;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="17">opts<pos:position pos:line="38" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="23">0<pos:position pos:line="38" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="26">sizeof<argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">opts<pos:position pos:line="38" pos:column="37"/></name></expr></argument>)<pos:position pos:line="38" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">memset<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><operator pos:line="39" pos:column="16">&amp;<pos:position pos:line="39" pos:column="21"/></operator><operator pos:line="39" pos:column="17">new<pos:position pos:line="39" pos:column="20"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="22">0<pos:position pos:line="39" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="25">sizeof<argument_list pos:line="39" pos:column="31">(<argument><expr><operator pos:line="39" pos:column="32">new<pos:position pos:line="39" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="39" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="40" pos:column="9">opts<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">.<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">overwrite_ignore<pos:position pos:line="40" pos:column="30"/></name></name> <operator pos:line="40" pos:column="31">=<pos:position pos:line="40" pos:column="32"/></operator> <literal type="number" pos:line="40" pos:column="33">1<pos:position pos:line="40" pos:column="34"/></literal></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="41" pos:column="9">opts<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">.<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">prefix<pos:position pos:line="41" pos:column="20"/></name></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <name pos:line="41" pos:column="23">prefix<pos:position pos:line="41" pos:column="29"/></name></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="42" pos:column="9">opts<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">.<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">show_progress<pos:position pos:line="42" pos:column="27"/></name></name> <operator pos:line="42" pos:column="28">=<pos:position pos:line="42" pos:column="29"/></operator> <operator pos:line="42" pos:column="30">-<pos:position pos:line="42" pos:column="31"/></operator><literal type="number" pos:line="42" pos:column="31">1<pos:position pos:line="42" pos:column="32"/></literal></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="44" pos:column="9">gitmodules_config<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">()<pos:position pos:line="44" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">git_config<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><name pos:line="45" pos:column="20">git_checkout_config<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="41">&amp;<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="42">opts<pos:position pos:line="45" pos:column="46"/></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="47" pos:column="9">opts<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">.<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">track<pos:position pos:line="47" pos:column="19"/></name></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <name pos:line="47" pos:column="22">BRANCH_TRACK_UNSPECIFIED<pos:position pos:line="47" pos:column="46"/></name></expr>;<pos:position pos:line="47" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><name pos:line="49" pos:column="9">argc<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <call><name pos:line="49" pos:column="16">parse_options<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><name pos:line="49" pos:column="30">argc<pos:position pos:line="49" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="36">argv<pos:position pos:line="49" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="42">prefix<pos:position pos:line="49" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="50">options<pos:position pos:line="49" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="59">checkout_usage<pos:position pos:line="49" pos:column="73"/></name></expr></argument>,
			     <argument><expr><name pos:line="50" pos:column="30">PARSE_OPT_KEEP_DASHDASH<pos:position pos:line="50" pos:column="53"/></name></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="55"/></expr_stmt>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">opts<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">.<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="18">show_progress<pos:position pos:line="52" pos:column="31"/></name></name> <operator pos:line="52" pos:column="32">&lt;<pos:position pos:line="52" pos:column="36"/></operator> <literal type="number" pos:line="52" pos:column="34">0<pos:position pos:line="52" pos:column="35"/></literal></expr>)<pos:position pos:line="52" pos:column="36"/></condition><then pos:line="52" pos:column="36"> <block pos:line="52" pos:column="37">{
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name><name pos:line="53" pos:column="21">opts<pos:position pos:line="53" pos:column="25"/></name><operator pos:line="53" pos:column="25">.<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="26">quiet<pos:position pos:line="53" pos:column="31"/></name></name></expr>)<pos:position pos:line="53" pos:column="32"/></condition><then pos:line="53" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="25">opts<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">.<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="30">show_progress<pos:position pos:line="54" pos:column="43"/></name></name> <operator pos:line="54" pos:column="44">=<pos:position pos:line="54" pos:column="45"/></operator> <literal type="number" pos:line="54" pos:column="46">0<pos:position pos:line="54" pos:column="47"/></literal></expr>;<pos:position pos:line="54" pos:column="48"/></expr_stmt></block></then>
		<else pos:line="55" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="56" pos:column="25">opts<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">.<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="30">show_progress<pos:position pos:line="56" pos:column="43"/></name></name> <operator pos:line="56" pos:column="44">=<pos:position pos:line="56" pos:column="45"/></operator> <call><name pos:line="56" pos:column="46">isatty<pos:position pos:line="56" pos:column="52"/></name><argument_list pos:line="56" pos:column="52">(<argument><expr><literal type="number" pos:line="56" pos:column="53">2<pos:position pos:line="56" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="56"/></expr_stmt></block></else></if>
	}<pos:position pos:line="57" pos:column="10"/></block></then></if>

	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">conflict_style<pos:position pos:line="59" pos:column="27"/></name></expr>)<pos:position pos:line="59" pos:column="28"/></condition><then pos:line="59" pos:column="28"> <block pos:line="59" pos:column="29">{
		<expr_stmt><expr><name><name pos:line="60" pos:column="17">opts<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">.<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="22">merge<pos:position pos:line="60" pos:column="27"/></name></name> <operator pos:line="60" pos:column="28">=<pos:position pos:line="60" pos:column="29"/></operator> <literal type="number" pos:line="60" pos:column="30">1<pos:position pos:line="60" pos:column="31"/></literal></expr>;<pos:position pos:line="60" pos:column="32"/></expr_stmt> <comment type="block" pos:line="60" pos:column="33">/* implied */</comment>
		<expr_stmt><expr><call><name pos:line="61" pos:column="17">git_xmerge_config<pos:position pos:line="61" pos:column="34"/></name><argument_list pos:line="61" pos:column="34">(<argument><expr><literal type="string" pos:line="61" pos:column="35">"merge.conflictstyle"<pos:position pos:line="61" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="58">conflict_style<pos:position pos:line="61" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="74">NULL<pos:position pos:line="61" pos:column="78"/></name></expr></argument>)<pos:position pos:line="61" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="80"/></expr_stmt>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if>

	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">(<pos:position pos:line="64" pos:column="14"/></operator><operator pos:line="64" pos:column="14">!<pos:position pos:line="64" pos:column="15"/></operator><operator pos:line="64" pos:column="15">!<pos:position pos:line="64" pos:column="16"/></operator><name><name pos:line="64" pos:column="16">opts<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">.<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="21">new_branch<pos:position pos:line="64" pos:column="31"/></name></name> <operator pos:line="64" pos:column="32">+<pos:position pos:line="64" pos:column="33"/></operator> <operator pos:line="64" pos:column="34">!<pos:position pos:line="64" pos:column="35"/></operator><operator pos:line="64" pos:column="35">!<pos:position pos:line="64" pos:column="36"/></operator><name><name pos:line="64" pos:column="36">opts<pos:position pos:line="64" pos:column="40"/></name><operator pos:line="64" pos:column="40">.<pos:position pos:line="64" pos:column="41"/></operator><name pos:line="64" pos:column="41">new_branch_force<pos:position pos:line="64" pos:column="57"/></name></name> <operator pos:line="64" pos:column="58">+<pos:position pos:line="64" pos:column="59"/></operator> <operator pos:line="64" pos:column="60">!<pos:position pos:line="64" pos:column="61"/></operator><operator pos:line="64" pos:column="61">!<pos:position pos:line="64" pos:column="62"/></operator><name><name pos:line="64" pos:column="62">opts<pos:position pos:line="64" pos:column="66"/></name><operator pos:line="64" pos:column="66">.<pos:position pos:line="64" pos:column="67"/></operator><name pos:line="64" pos:column="67">new_orphan_branch<pos:position pos:line="64" pos:column="84"/></name></name><operator pos:line="64" pos:column="84">)<pos:position pos:line="64" pos:column="85"/></operator> <operator pos:line="64" pos:column="86">&gt;<pos:position pos:line="64" pos:column="90"/></operator> <literal type="number" pos:line="64" pos:column="88">1<pos:position pos:line="64" pos:column="89"/></literal></expr>)<pos:position pos:line="64" pos:column="90"/></condition><then pos:line="64" pos:column="90">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="17">die<pos:position pos:line="65" pos:column="20"/></name><argument_list pos:line="65" pos:column="20">(<argument><expr><call><name pos:line="65" pos:column="21">_<pos:position pos:line="65" pos:column="22"/></name><argument_list pos:line="65" pos:column="22">(<argument><expr><literal type="string" pos:line="65" pos:column="23">"-b, -B and --orphan are mutually exclusive"<pos:position pos:line="65" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="70"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="67" pos:column="9">/*
	 * From here on, new_branch will contain the branch to be checked out,
	 * and new_branch_force and new_orphan_branch will tell us which one of
	 * -b/-B/--orphan is being used.
	 */</comment>
	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name><name pos:line="72" pos:column="13">opts<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">.<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="18">new_branch_force<pos:position pos:line="72" pos:column="34"/></name></name></expr>)<pos:position pos:line="72" pos:column="35"/></condition><then pos:line="72" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="73" pos:column="17">opts<pos:position pos:line="73" pos:column="21"/></name><operator pos:line="73" pos:column="21">.<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="22">new_branch<pos:position pos:line="73" pos:column="32"/></name></name> <operator pos:line="73" pos:column="33">=<pos:position pos:line="73" pos:column="34"/></operator> <name><name pos:line="73" pos:column="35">opts<pos:position pos:line="73" pos:column="39"/></name><operator pos:line="73" pos:column="39">.<pos:position pos:line="73" pos:column="40"/></operator><name pos:line="73" pos:column="40">new_branch_force<pos:position pos:line="73" pos:column="56"/></name></name></expr>;<pos:position pos:line="73" pos:column="57"/></expr_stmt></block></then></if>

	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name><name pos:line="75" pos:column="13">opts<pos:position pos:line="75" pos:column="17"/></name><operator pos:line="75" pos:column="17">.<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="18">new_orphan_branch<pos:position pos:line="75" pos:column="35"/></name></name></expr>)<pos:position pos:line="75" pos:column="36"/></condition><then pos:line="75" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="76" pos:column="17">opts<pos:position pos:line="76" pos:column="21"/></name><operator pos:line="76" pos:column="21">.<pos:position pos:line="76" pos:column="22"/></operator><name pos:line="76" pos:column="22">new_branch<pos:position pos:line="76" pos:column="32"/></name></name> <operator pos:line="76" pos:column="33">=<pos:position pos:line="76" pos:column="34"/></operator> <name><name pos:line="76" pos:column="35">opts<pos:position pos:line="76" pos:column="39"/></name><operator pos:line="76" pos:column="39">.<pos:position pos:line="76" pos:column="40"/></operator><name pos:line="76" pos:column="40">new_orphan_branch<pos:position pos:line="76" pos:column="57"/></name></name></expr>;<pos:position pos:line="76" pos:column="58"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="78" pos:column="9">/* --track without -b/-B/--orphan should DWIM */</comment>
	<if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name><name pos:line="79" pos:column="13">opts<pos:position pos:line="79" pos:column="17"/></name><operator pos:line="79" pos:column="17">.<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="18">track<pos:position pos:line="79" pos:column="23"/></name></name> <operator pos:line="79" pos:column="24">!=<pos:position pos:line="79" pos:column="26"/></operator> <name pos:line="79" pos:column="27">BRANCH_TRACK_UNSPECIFIED<pos:position pos:line="79" pos:column="51"/></name> <operator pos:line="79" pos:column="52">&amp;&amp;<pos:position pos:line="79" pos:column="62"/></operator> <operator pos:line="79" pos:column="55">!<pos:position pos:line="79" pos:column="56"/></operator><name><name pos:line="79" pos:column="56">opts<pos:position pos:line="79" pos:column="60"/></name><operator pos:line="79" pos:column="60">.<pos:position pos:line="79" pos:column="61"/></operator><name pos:line="79" pos:column="61">new_branch<pos:position pos:line="79" pos:column="71"/></name></name></expr>)<pos:position pos:line="79" pos:column="72"/></condition><then pos:line="79" pos:column="72"> <block pos:line="79" pos:column="73">{
		<decl_stmt><decl><type><specifier pos:line="80" pos:column="17">const<pos:position pos:line="80" pos:column="22"/></specifier> <name pos:line="80" pos:column="23">char<pos:position pos:line="80" pos:column="27"/></name> <modifier pos:line="80" pos:column="28">*<pos:position pos:line="80" pos:column="29"/></modifier></type><name pos:line="80" pos:column="29">argv0<pos:position pos:line="80" pos:column="34"/></name> <init pos:line="80" pos:column="35">= <expr><name><name pos:line="80" pos:column="37">argv<pos:position pos:line="80" pos:column="41"/></name><index pos:line="80" pos:column="41">[<expr><literal type="number" pos:line="80" pos:column="42">0<pos:position pos:line="80" pos:column="43"/></literal></expr>]<pos:position pos:line="80" pos:column="44"/></index></name></expr></init></decl>;<pos:position pos:line="80" pos:column="45"/></decl_stmt>
		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><operator pos:line="81" pos:column="21">!<pos:position pos:line="81" pos:column="22"/></operator><name pos:line="81" pos:column="22">argc<pos:position pos:line="81" pos:column="26"/></name> <operator pos:line="81" pos:column="27">||<pos:position pos:line="81" pos:column="29"/></operator> <operator pos:line="81" pos:column="30">!<pos:position pos:line="81" pos:column="31"/></operator><call><name pos:line="81" pos:column="31">strcmp<pos:position pos:line="81" pos:column="37"/></name><argument_list pos:line="81" pos:column="37">(<argument><expr><name pos:line="81" pos:column="38">argv0<pos:position pos:line="81" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="45">"--"<pos:position pos:line="81" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="51"/></condition><then pos:line="81" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="25">die<pos:position pos:line="82" pos:column="28"/></name> <argument_list pos:line="82" pos:column="29">(<argument><expr><call><name pos:line="82" pos:column="30">_<pos:position pos:line="82" pos:column="31"/></name><argument_list pos:line="82" pos:column="31">(<argument><expr><literal type="string" pos:line="82" pos:column="32">"--track needs a branch name"<pos:position pos:line="82" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="64"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="83" pos:column="17">skip_prefix<pos:position pos:line="83" pos:column="28"/></name><argument_list pos:line="83" pos:column="28">(<argument><expr><name pos:line="83" pos:column="29">argv0<pos:position pos:line="83" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="36">"refs/"<pos:position pos:line="83" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="83" pos:column="45">&amp;<pos:position pos:line="83" pos:column="50"/></operator><name pos:line="83" pos:column="46">argv0<pos:position pos:line="83" pos:column="51"/></name></expr></argument>)<pos:position pos:line="83" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="84" pos:column="17">skip_prefix<pos:position pos:line="84" pos:column="28"/></name><argument_list pos:line="84" pos:column="28">(<argument><expr><name pos:line="84" pos:column="29">argv0<pos:position pos:line="84" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="36">"remotes/"<pos:position pos:line="84" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="84" pos:column="48">&amp;<pos:position pos:line="84" pos:column="53"/></operator><name pos:line="84" pos:column="49">argv0<pos:position pos:line="84" pos:column="54"/></name></expr></argument>)<pos:position pos:line="84" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="85" pos:column="17">argv0<pos:position pos:line="85" pos:column="22"/></name> <operator pos:line="85" pos:column="23">=<pos:position pos:line="85" pos:column="24"/></operator> <call><name pos:line="85" pos:column="25">strchr<pos:position pos:line="85" pos:column="31"/></name><argument_list pos:line="85" pos:column="31">(<argument><expr><name pos:line="85" pos:column="32">argv0<pos:position pos:line="85" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="85" pos:column="39">'/'<pos:position pos:line="85" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="44"/></expr_stmt>
		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><operator pos:line="86" pos:column="21">!<pos:position pos:line="86" pos:column="22"/></operator><name pos:line="86" pos:column="22">argv0<pos:position pos:line="86" pos:column="27"/></name> <operator pos:line="86" pos:column="28">||<pos:position pos:line="86" pos:column="30"/></operator> <operator pos:line="86" pos:column="31">!<pos:position pos:line="86" pos:column="32"/></operator><name><name pos:line="86" pos:column="32">argv0<pos:position pos:line="86" pos:column="37"/></name><index pos:line="86" pos:column="37">[<expr><literal type="number" pos:line="86" pos:column="38">1<pos:position pos:line="86" pos:column="39"/></literal></expr>]<pos:position pos:line="86" pos:column="40"/></index></name></expr>)<pos:position pos:line="86" pos:column="41"/></condition><then pos:line="86" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="25">die<pos:position pos:line="87" pos:column="28"/></name> <argument_list pos:line="87" pos:column="29">(<argument><expr><call><name pos:line="87" pos:column="30">_<pos:position pos:line="87" pos:column="31"/></name><argument_list pos:line="87" pos:column="31">(<argument><expr><literal type="string" pos:line="87" pos:column="32">"Missing branch name; try -b"<pos:position pos:line="87" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="64"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="88" pos:column="17">opts<pos:position pos:line="88" pos:column="21"/></name><operator pos:line="88" pos:column="21">.<pos:position pos:line="88" pos:column="22"/></operator><name pos:line="88" pos:column="22">new_branch<pos:position pos:line="88" pos:column="32"/></name></name> <operator pos:line="88" pos:column="33">=<pos:position pos:line="88" pos:column="34"/></operator> <name pos:line="88" pos:column="35">argv0<pos:position pos:line="88" pos:column="40"/></name> <operator pos:line="88" pos:column="41">+<pos:position pos:line="88" pos:column="42"/></operator> <literal type="number" pos:line="88" pos:column="43">1<pos:position pos:line="88" pos:column="44"/></literal></expr>;<pos:position pos:line="88" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="89" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="91" pos:column="9">/*
	 * Extract branch name from command line arguments, so
	 * all that is left is pathspecs.
	 *
	 * Handle
	 *
	 *  1) git checkout &lt;tree&gt; -- [&lt;paths&gt;]
	 *  2) git checkout -- [&lt;paths&gt;]
	 *  3) git checkout &lt;something&gt; [&lt;paths&gt;]
	 *
	 * including "last branch" syntax and DWIM-ery for names of
	 * remote branches, erroring out for invalid or ambiguous cases.
	 */</comment>
	<if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><name pos:line="104" pos:column="13">argc<pos:position pos:line="104" pos:column="17"/></name></expr>)<pos:position pos:line="104" pos:column="18"/></condition><then pos:line="104" pos:column="18"> <block pos:line="104" pos:column="19">{
		<decl_stmt><decl><type><name><name pos:line="105" pos:column="17">struct<pos:position pos:line="105" pos:column="23"/></name> <name pos:line="105" pos:column="24">object_id<pos:position pos:line="105" pos:column="33"/></name></name></type> <name pos:line="105" pos:column="34">rev<pos:position pos:line="105" pos:column="37"/></name></decl>;<pos:position pos:line="105" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="106" pos:column="17">int<pos:position pos:line="106" pos:column="20"/></name></type> <name pos:line="106" pos:column="21">dwim_ok<pos:position pos:line="106" pos:column="28"/></name> <init pos:line="106" pos:column="29">=
			<expr><operator pos:line="107" pos:column="25">!<pos:position pos:line="107" pos:column="26"/></operator><name><name pos:line="107" pos:column="26">opts<pos:position pos:line="107" pos:column="30"/></name><operator pos:line="107" pos:column="30">.<pos:position pos:line="107" pos:column="31"/></operator><name pos:line="107" pos:column="31">patch_mode<pos:position pos:line="107" pos:column="41"/></name></name> <operator pos:line="107" pos:column="42">&amp;&amp;<pos:position pos:line="107" pos:column="52"/></operator>
			<name pos:line="108" pos:column="25">dwim_new_local_branch<pos:position pos:line="108" pos:column="46"/></name> <operator pos:line="108" pos:column="47">&amp;&amp;<pos:position pos:line="108" pos:column="57"/></operator>
			<name><name pos:line="109" pos:column="25">opts<pos:position pos:line="109" pos:column="29"/></name><operator pos:line="109" pos:column="29">.<pos:position pos:line="109" pos:column="30"/></operator><name pos:line="109" pos:column="30">track<pos:position pos:line="109" pos:column="35"/></name></name> <operator pos:line="109" pos:column="36">==<pos:position pos:line="109" pos:column="38"/></operator> <name pos:line="109" pos:column="39">BRANCH_TRACK_UNSPECIFIED<pos:position pos:line="109" pos:column="63"/></name> <operator pos:line="109" pos:column="64">&amp;&amp;<pos:position pos:line="109" pos:column="74"/></operator>
			<operator pos:line="110" pos:column="25">!<pos:position pos:line="110" pos:column="26"/></operator><name><name pos:line="110" pos:column="26">opts<pos:position pos:line="110" pos:column="30"/></name><operator pos:line="110" pos:column="30">.<pos:position pos:line="110" pos:column="31"/></operator><name pos:line="110" pos:column="31">new_branch<pos:position pos:line="110" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="110" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="111" pos:column="17">int<pos:position pos:line="111" pos:column="20"/></name></type> <name pos:line="111" pos:column="21">n<pos:position pos:line="111" pos:column="22"/></name> <init pos:line="111" pos:column="23">= <expr><call><name pos:line="111" pos:column="25">parse_branchname_arg<pos:position pos:line="111" pos:column="45"/></name><argument_list pos:line="111" pos:column="45">(<argument><expr><name pos:line="111" pos:column="46">argc<pos:position pos:line="111" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="52">argv<pos:position pos:line="111" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="58">dwim_ok<pos:position pos:line="111" pos:column="65"/></name></expr></argument>,
					     <argument><expr><operator pos:line="112" pos:column="46">&amp;<pos:position pos:line="112" pos:column="51"/></operator><operator pos:line="112" pos:column="47">new<pos:position pos:line="112" pos:column="50"/></operator></expr></argument>, <argument><expr><operator pos:line="112" pos:column="52">&amp;<pos:position pos:line="112" pos:column="57"/></operator><name pos:line="112" pos:column="53">opts<pos:position pos:line="112" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="112" pos:column="59">&amp;<pos:position pos:line="112" pos:column="64"/></operator><name pos:line="112" pos:column="60">rev<pos:position pos:line="112" pos:column="63"/></name></expr></argument>)<pos:position pos:line="112" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="112" pos:column="65"/></decl_stmt>
		<expr_stmt><expr><name pos:line="113" pos:column="17">argv<pos:position pos:line="113" pos:column="21"/></name> <operator pos:line="113" pos:column="22">+=<pos:position pos:line="113" pos:column="24"/></operator> <name pos:line="113" pos:column="25">n<pos:position pos:line="113" pos:column="26"/></name></expr>;<pos:position pos:line="113" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="114" pos:column="17">argc<pos:position pos:line="114" pos:column="21"/></name> <operator pos:line="114" pos:column="22">-=<pos:position pos:line="114" pos:column="24"/></operator> <name pos:line="114" pos:column="25">n<pos:position pos:line="114" pos:column="26"/></name></expr>;<pos:position pos:line="114" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="115" pos:column="10"/></block></then></if>

	<if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><name pos:line="117" pos:column="13">argc<pos:position pos:line="117" pos:column="17"/></name></expr>)<pos:position pos:line="117" pos:column="18"/></condition><then pos:line="117" pos:column="18"> <block pos:line="117" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="118" pos:column="17">parse_pathspec<pos:position pos:line="118" pos:column="31"/></name><argument_list pos:line="118" pos:column="31">(<argument><expr><operator pos:line="118" pos:column="32">&amp;<pos:position pos:line="118" pos:column="37"/></operator><name><name pos:line="118" pos:column="33">opts<pos:position pos:line="118" pos:column="37"/></name><operator pos:line="118" pos:column="37">.<pos:position pos:line="118" pos:column="38"/></operator><name pos:line="118" pos:column="38">pathspec<pos:position pos:line="118" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="48">0<pos:position pos:line="118" pos:column="49"/></literal></expr></argument>,
			       <argument><expr><ternary><condition><expr><name><name pos:line="119" pos:column="32">opts<pos:position pos:line="119" pos:column="36"/></name><operator pos:line="119" pos:column="36">.<pos:position pos:line="119" pos:column="37"/></operator><name pos:line="119" pos:column="37">patch_mode<pos:position pos:line="119" pos:column="47"/></name></name></expr> ?<pos:position pos:line="119" pos:column="49"/></condition><then pos:line="119" pos:column="49"> <expr><name pos:line="119" pos:column="50">PATHSPEC_PREFIX_ORIGIN<pos:position pos:line="119" pos:column="72"/></name></expr> <pos:position pos:line="119" pos:column="73"/></then><else pos:line="119" pos:column="73">: <expr><literal type="number" pos:line="119" pos:column="75">0<pos:position pos:line="119" pos:column="76"/></literal></expr></else></ternary></expr></argument>,
			       <argument><expr><name pos:line="120" pos:column="32">prefix<pos:position pos:line="120" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="40">argv<pos:position pos:line="120" pos:column="44"/></name></expr></argument>)<pos:position pos:line="120" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="46"/></expr_stmt>

		<if pos:line="122" pos:column="17">if <condition pos:line="122" pos:column="20">(<expr><operator pos:line="122" pos:column="21">!<pos:position pos:line="122" pos:column="22"/></operator><name><name pos:line="122" pos:column="22">opts<pos:position pos:line="122" pos:column="26"/></name><operator pos:line="122" pos:column="26">.<pos:position pos:line="122" pos:column="27"/></operator><name pos:line="122" pos:column="27">pathspec<pos:position pos:line="122" pos:column="35"/></name><operator pos:line="122" pos:column="35">.<pos:position pos:line="122" pos:column="36"/></operator><name pos:line="122" pos:column="36">nr<pos:position pos:line="122" pos:column="38"/></name></name></expr>)<pos:position pos:line="122" pos:column="39"/></condition><then pos:line="122" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="123" pos:column="25">die<pos:position pos:line="123" pos:column="28"/></name><argument_list pos:line="123" pos:column="28">(<argument><expr><call><name pos:line="123" pos:column="29">_<pos:position pos:line="123" pos:column="30"/></name><argument_list pos:line="123" pos:column="30">(<argument><expr><literal type="string" pos:line="123" pos:column="31">"invalid path specification"<pos:position pos:line="123" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="123" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="62"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="125" pos:column="17">/*
		 * Try to give more helpful suggestion.
		 * new_branch &amp;&amp; argc &gt; 1 will be caught later.
		 */</comment>
		<if pos:line="129" pos:column="17">if <condition pos:line="129" pos:column="20">(<expr><name><name pos:line="129" pos:column="21">opts<pos:position pos:line="129" pos:column="25"/></name><operator pos:line="129" pos:column="25">.<pos:position pos:line="129" pos:column="26"/></operator><name pos:line="129" pos:column="26">new_branch<pos:position pos:line="129" pos:column="36"/></name></name> <operator pos:line="129" pos:column="37">&amp;&amp;<pos:position pos:line="129" pos:column="47"/></operator> <name pos:line="129" pos:column="40">argc<pos:position pos:line="129" pos:column="44"/></name> <operator pos:line="129" pos:column="45">==<pos:position pos:line="129" pos:column="47"/></operator> <literal type="number" pos:line="129" pos:column="48">1<pos:position pos:line="129" pos:column="49"/></literal></expr>)<pos:position pos:line="129" pos:column="50"/></condition><then pos:line="129" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="130" pos:column="25">die<pos:position pos:line="130" pos:column="28"/></name><argument_list pos:line="130" pos:column="28">(<argument><expr><call><name pos:line="130" pos:column="29">_<pos:position pos:line="130" pos:column="30"/></name><argument_list pos:line="130" pos:column="30">(<argument><expr><literal type="string" pos:line="130" pos:column="31">"Cannot update paths and switch to branch '%s' at the same time.\n"<pos:position pos:line="130" pos:column="98"/></literal>
			      <literal type="string" pos:line="131" pos:column="31">"Did you intend to checkout '%s' which can not be resolved as commit?"<pos:position pos:line="131" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="102"/></argument_list></call></expr></argument>,
			    <argument><expr><name><name pos:line="132" pos:column="29">opts<pos:position pos:line="132" pos:column="33"/></name><operator pos:line="132" pos:column="33">.<pos:position pos:line="132" pos:column="34"/></operator><name pos:line="132" pos:column="34">new_branch<pos:position pos:line="132" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="46">argv<pos:position pos:line="132" pos:column="50"/></name><index pos:line="132" pos:column="50">[<expr><literal type="number" pos:line="132" pos:column="51">0<pos:position pos:line="132" pos:column="52"/></literal></expr>]<pos:position pos:line="132" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="132" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="55"/></expr_stmt></block></then></if>

		<if pos:line="134" pos:column="17">if <condition pos:line="134" pos:column="20">(<expr><name><name pos:line="134" pos:column="21">opts<pos:position pos:line="134" pos:column="25"/></name><operator pos:line="134" pos:column="25">.<pos:position pos:line="134" pos:column="26"/></operator><name pos:line="134" pos:column="26">force_detach<pos:position pos:line="134" pos:column="38"/></name></name></expr>)<pos:position pos:line="134" pos:column="39"/></condition><then pos:line="134" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="135" pos:column="25">die<pos:position pos:line="135" pos:column="28"/></name><argument_list pos:line="135" pos:column="28">(<argument><expr><call><name pos:line="135" pos:column="29">_<pos:position pos:line="135" pos:column="30"/></name><argument_list pos:line="135" pos:column="30">(<argument><expr><literal type="string" pos:line="135" pos:column="31">"git checkout: --detach does not take a path argument '%s'"<pos:position pos:line="135" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="91"/></argument_list></call></expr></argument>,
			    <argument><expr><name><name pos:line="136" pos:column="29">argv<pos:position pos:line="136" pos:column="33"/></name><index pos:line="136" pos:column="33">[<expr><literal type="number" pos:line="136" pos:column="34">0<pos:position pos:line="136" pos:column="35"/></literal></expr>]<pos:position pos:line="136" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="136" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="38"/></expr_stmt></block></then></if>

		<if pos:line="138" pos:column="17">if <condition pos:line="138" pos:column="20">(<expr><literal type="number" pos:line="138" pos:column="21">1<pos:position pos:line="138" pos:column="22"/></literal> <operator pos:line="138" pos:column="23">&lt;<pos:position pos:line="138" pos:column="27"/></operator> <operator pos:line="138" pos:column="25">!<pos:position pos:line="138" pos:column="26"/></operator><operator pos:line="138" pos:column="26">!<pos:position pos:line="138" pos:column="27"/></operator><name><name pos:line="138" pos:column="27">opts<pos:position pos:line="138" pos:column="31"/></name><operator pos:line="138" pos:column="31">.<pos:position pos:line="138" pos:column="32"/></operator><name pos:line="138" pos:column="32">writeout_stage<pos:position pos:line="138" pos:column="46"/></name></name> <operator pos:line="138" pos:column="47">+<pos:position pos:line="138" pos:column="48"/></operator> <operator pos:line="138" pos:column="49">!<pos:position pos:line="138" pos:column="50"/></operator><operator pos:line="138" pos:column="50">!<pos:position pos:line="138" pos:column="51"/></operator><name><name pos:line="138" pos:column="51">opts<pos:position pos:line="138" pos:column="55"/></name><operator pos:line="138" pos:column="55">.<pos:position pos:line="138" pos:column="56"/></operator><name pos:line="138" pos:column="56">force<pos:position pos:line="138" pos:column="61"/></name></name> <operator pos:line="138" pos:column="62">+<pos:position pos:line="138" pos:column="63"/></operator> <operator pos:line="138" pos:column="64">!<pos:position pos:line="138" pos:column="65"/></operator><operator pos:line="138" pos:column="65">!<pos:position pos:line="138" pos:column="66"/></operator><name><name pos:line="138" pos:column="66">opts<pos:position pos:line="138" pos:column="70"/></name><operator pos:line="138" pos:column="70">.<pos:position pos:line="138" pos:column="71"/></operator><name pos:line="138" pos:column="71">merge<pos:position pos:line="138" pos:column="76"/></name></name></expr>)<pos:position pos:line="138" pos:column="77"/></condition><then pos:line="138" pos:column="77">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="139" pos:column="25">die<pos:position pos:line="139" pos:column="28"/></name><argument_list pos:line="139" pos:column="28">(<argument><expr><call><name pos:line="139" pos:column="29">_<pos:position pos:line="139" pos:column="30"/></name><argument_list pos:line="139" pos:column="30">(<argument><expr><literal type="string" pos:line="139" pos:column="31">"git checkout: --ours/--theirs, --force and --merge are incompatible when\n"<pos:position pos:line="139" pos:column="107"/></literal>
			      <literal type="string" pos:line="140" pos:column="31">"checking out of the index."<pos:position pos:line="140" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="140" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="62"/></expr_stmt></block></then></if>
	}<pos:position pos:line="141" pos:column="10"/></block></then></if>

	<if pos:line="143" pos:column="9">if <condition pos:line="143" pos:column="12">(<expr><name><name pos:line="143" pos:column="13">opts<pos:position pos:line="143" pos:column="17"/></name><operator pos:line="143" pos:column="17">.<pos:position pos:line="143" pos:column="18"/></operator><name pos:line="143" pos:column="18">new_branch<pos:position pos:line="143" pos:column="28"/></name></name></expr>)<pos:position pos:line="143" pos:column="29"/></condition><then pos:line="143" pos:column="29"> <block pos:line="143" pos:column="30">{
		<decl_stmt><decl><type><name><name pos:line="144" pos:column="17">struct<pos:position pos:line="144" pos:column="23"/></name> <name pos:line="144" pos:column="24">strbuf<pos:position pos:line="144" pos:column="30"/></name></name></type> <name pos:line="144" pos:column="31">buf<pos:position pos:line="144" pos:column="34"/></name> <init pos:line="144" pos:column="35">= <expr><name pos:line="144" pos:column="37">STRBUF_INIT<pos:position pos:line="144" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="144" pos:column="49"/></decl_stmt>

		<expr_stmt><expr><name><name pos:line="146" pos:column="17">opts<pos:position pos:line="146" pos:column="21"/></name><operator pos:line="146" pos:column="21">.<pos:position pos:line="146" pos:column="22"/></operator><name pos:line="146" pos:column="22">branch_exists<pos:position pos:line="146" pos:column="35"/></name></name> <operator pos:line="146" pos:column="36">=<pos:position pos:line="146" pos:column="37"/></operator>
			<call><name pos:line="147" pos:column="25">validate_new_branchname<pos:position pos:line="147" pos:column="48"/></name><argument_list pos:line="147" pos:column="48">(<argument><expr><name><name pos:line="147" pos:column="49">opts<pos:position pos:line="147" pos:column="53"/></name><operator pos:line="147" pos:column="53">.<pos:position pos:line="147" pos:column="54"/></operator><name pos:line="147" pos:column="54">new_branch<pos:position pos:line="147" pos:column="64"/></name></name></expr></argument>, <argument><expr><operator pos:line="147" pos:column="66">&amp;<pos:position pos:line="147" pos:column="71"/></operator><name pos:line="147" pos:column="67">buf<pos:position pos:line="147" pos:column="70"/></name></expr></argument>,
						<argument><expr><operator pos:line="148" pos:column="49">!<pos:position pos:line="148" pos:column="50"/></operator><operator pos:line="148" pos:column="50">!<pos:position pos:line="148" pos:column="51"/></operator><name><name pos:line="148" pos:column="51">opts<pos:position pos:line="148" pos:column="55"/></name><operator pos:line="148" pos:column="55">.<pos:position pos:line="148" pos:column="56"/></operator><name pos:line="148" pos:column="56">new_branch_force<pos:position pos:line="148" pos:column="72"/></name></name></expr></argument>,
						<argument><expr><operator pos:line="149" pos:column="49">!<pos:position pos:line="149" pos:column="50"/></operator><operator pos:line="149" pos:column="50">!<pos:position pos:line="149" pos:column="51"/></operator><name><name pos:line="149" pos:column="51">opts<pos:position pos:line="149" pos:column="55"/></name><operator pos:line="149" pos:column="55">.<pos:position pos:line="149" pos:column="56"/></operator><name pos:line="149" pos:column="56">new_branch_force<pos:position pos:line="149" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="149" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="74"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="151" pos:column="17">strbuf_release<pos:position pos:line="151" pos:column="31"/></name><argument_list pos:line="151" pos:column="31">(<argument><expr><operator pos:line="151" pos:column="32">&amp;<pos:position pos:line="151" pos:column="37"/></operator><name pos:line="151" pos:column="33">buf<pos:position pos:line="151" pos:column="36"/></name></expr></argument>)<pos:position pos:line="151" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="152" pos:column="10"/></block></then></if>

	<if pos:line="154" pos:column="9">if <condition pos:line="154" pos:column="12">(<expr><name><name pos:line="154" pos:column="13">opts<pos:position pos:line="154" pos:column="17"/></name><operator pos:line="154" pos:column="17">.<pos:position pos:line="154" pos:column="18"/></operator><name pos:line="154" pos:column="18">patch_mode<pos:position pos:line="154" pos:column="28"/></name></name> <operator pos:line="154" pos:column="29">||<pos:position pos:line="154" pos:column="31"/></operator> <name><name pos:line="154" pos:column="32">opts<pos:position pos:line="154" pos:column="36"/></name><operator pos:line="154" pos:column="36">.<pos:position pos:line="154" pos:column="37"/></operator><name pos:line="154" pos:column="37">pathspec<pos:position pos:line="154" pos:column="45"/></name><operator pos:line="154" pos:column="45">.<pos:position pos:line="154" pos:column="46"/></operator><name pos:line="154" pos:column="46">nr<pos:position pos:line="154" pos:column="48"/></name></name></expr>)<pos:position pos:line="154" pos:column="49"/></condition><then pos:line="154" pos:column="49">
		<block type="pseudo"><return pos:line="155" pos:column="17">return <expr><call><name pos:line="155" pos:column="24">checkout_paths<pos:position pos:line="155" pos:column="38"/></name><argument_list pos:line="155" pos:column="38">(<argument><expr><operator pos:line="155" pos:column="39">&amp;<pos:position pos:line="155" pos:column="44"/></operator><name pos:line="155" pos:column="40">opts<pos:position pos:line="155" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="155" pos:column="46">new<pos:position pos:line="155" pos:column="49"/></operator><operator pos:line="155" pos:column="49">.<pos:position pos:line="155" pos:column="50"/></operator><name pos:line="155" pos:column="50">name<pos:position pos:line="155" pos:column="54"/></name></expr></argument>)<pos:position pos:line="155" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="56"/></return></block></then>
	<else pos:line="156" pos:column="9">else
		<block type="pseudo"><return pos:line="157" pos:column="17">return <expr><call><name pos:line="157" pos:column="24">checkout_branch<pos:position pos:line="157" pos:column="39"/></name><argument_list pos:line="157" pos:column="39">(<argument><expr><operator pos:line="157" pos:column="40">&amp;<pos:position pos:line="157" pos:column="45"/></operator><name pos:line="157" pos:column="41">opts<pos:position pos:line="157" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="157" pos:column="47">&amp;<pos:position pos:line="157" pos:column="52"/></operator><operator pos:line="157" pos:column="48">new<pos:position pos:line="157" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="157" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="53"/></return></block></else></if>
}<pos:position pos:line="158" pos:column="2"/></block></function></unit>

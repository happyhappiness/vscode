<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5809_git-2.8.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">reflog_exists<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">refname<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">stat<pos:position pos:line="3" pos:column="20"/></name></name></type> <name pos:line="3" pos:column="21">st<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

	<return pos:line="5" pos:column="9">return <expr><operator pos:line="5" pos:column="16">!<pos:position pos:line="5" pos:column="17"/></operator><call><name pos:line="5" pos:column="17">lstat<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><call><name pos:line="5" pos:column="23">git_path<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">(<argument><expr><literal type="string" pos:line="5" pos:column="32">"logs/%s"<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="43">refname<pos:position pos:line="5" pos:column="50"/></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="5" pos:column="53">&amp;<pos:position pos:line="5" pos:column="58"/></operator><name pos:line="5" pos:column="54">st<pos:position pos:line="5" pos:column="56"/></name></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></call> <operator pos:line="5" pos:column="58">&amp;&amp;<pos:position pos:line="5" pos:column="68"/></operator>
		<call><name pos:line="6" pos:column="17">S_ISREG<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name><name pos:line="6" pos:column="25">st<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">.<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">st_mode<pos:position pos:line="6" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5778_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_tree<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">unsigned<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">sha1<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">buf<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">size<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">QSORT<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">entries<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="24">used<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">ent_compare<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>
	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">size<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr>;<pos:position pos:line="8" pos:column="27"/></init> <condition><expr><name pos:line="8" pos:column="28">i<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">&lt;<pos:position pos:line="8" pos:column="34"/></operator> <name pos:line="8" pos:column="32">used<pos:position pos:line="8" pos:column="36"/></name></expr>;<pos:position pos:line="8" pos:column="37"/></condition> <incr><expr><name pos:line="8" pos:column="38">i<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">++<pos:position pos:line="8" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="42"/></control>
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">size<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">+=<pos:position pos:line="9" pos:column="24"/></operator> <literal type="number" pos:line="9" pos:column="25">32<pos:position pos:line="9" pos:column="27"/></literal> <operator pos:line="9" pos:column="28">+<pos:position pos:line="9" pos:column="29"/></operator> <name><name pos:line="9" pos:column="30">entries<pos:position pos:line="9" pos:column="37"/></name><index pos:line="9" pos:column="37">[<expr><name pos:line="9" pos:column="38">i<pos:position pos:line="9" pos:column="39"/></name></expr>]<pos:position pos:line="9" pos:column="40"/></index></name><operator pos:line="9" pos:column="40">-&gt;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="42">len<pos:position pos:line="9" pos:column="45"/></name></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">strbuf_init<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><operator pos:line="11" pos:column="21">&amp;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="22">buf<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="27">size<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
	<for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">i<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></init> <condition><expr><name pos:line="12" pos:column="21">i<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&lt;<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="25">used<pos:position pos:line="12" pos:column="29"/></name></expr>;<pos:position pos:line="12" pos:column="30"/></condition> <incr><expr><name pos:line="12" pos:column="31">i<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">++<pos:position pos:line="12" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="35"/></control> <block pos:line="12" pos:column="36">{
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">struct<pos:position pos:line="13" pos:column="23"/></name> <name pos:line="13" pos:column="24">treeent<pos:position pos:line="13" pos:column="31"/></name></name> <modifier pos:line="13" pos:column="32">*<pos:position pos:line="13" pos:column="33"/></modifier></type><name pos:line="13" pos:column="33">ent<pos:position pos:line="13" pos:column="36"/></name> <init pos:line="13" pos:column="37">= <expr><name><name pos:line="13" pos:column="39">entries<pos:position pos:line="13" pos:column="46"/></name><index pos:line="13" pos:column="46">[<expr><name pos:line="13" pos:column="47">i<pos:position pos:line="13" pos:column="48"/></name></expr>]<pos:position pos:line="13" pos:column="49"/></index></name></expr></init></decl>;<pos:position pos:line="13" pos:column="50"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">strbuf_addf<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><operator pos:line="14" pos:column="29">&amp;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="30">buf<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="35">"%o %s%c"<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="46">ent<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">mode<pos:position pos:line="14" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="57">ent<pos:position pos:line="14" pos:column="60"/></name><operator pos:line="14" pos:column="60">-&gt;<pos:position pos:line="14" pos:column="65"/></operator><name pos:line="14" pos:column="62">name<pos:position pos:line="14" pos:column="66"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="68">'\0'<pos:position pos:line="14" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">strbuf_add<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><operator pos:line="15" pos:column="28">&amp;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="29">buf<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="34">ent<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">-&gt;<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="39">sha1<pos:position pos:line="15" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="45">20<pos:position pos:line="15" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">write_sha1_file<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name><name pos:line="18" pos:column="25">buf<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">.<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">buf<pos:position pos:line="18" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="34">buf<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">.<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="38">len<pos:position pos:line="18" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">tree_type<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">sha1<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">strbuf_release<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><operator pos:line="19" pos:column="24">&amp;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="25">buf<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2104_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_msg_id<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">text<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name><name pos:line="5" pos:column="14">msg_id_info<pos:position pos:line="5" pos:column="25"/></name><index pos:line="5" pos:column="25">[<expr><literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr>]<pos:position pos:line="5" pos:column="28"/></index></name><operator pos:line="5" pos:column="28">.<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">downcased<pos:position pos:line="5" pos:column="38"/></name></expr>)<pos:position pos:line="5" pos:column="39"/></condition><then pos:line="5" pos:column="39"> <block pos:line="5" pos:column="40">{
		<comment type="block" pos:line="6" pos:column="17">/* convert id_string to lower case, without underscores. */</comment>
		<for pos:line="7" pos:column="17">for <control pos:line="7" pos:column="21">(<init><expr><name pos:line="7" pos:column="22">i<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">=<pos:position pos:line="7" pos:column="25"/></operator> <literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr>;<pos:position pos:line="7" pos:column="28"/></init> <condition><expr><name pos:line="7" pos:column="29">i<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">&lt;<pos:position pos:line="7" pos:column="35"/></operator> <name pos:line="7" pos:column="33">FSCK_MSG_MAX<pos:position pos:line="7" pos:column="45"/></name></expr>;<pos:position pos:line="7" pos:column="46"/></condition> <incr><expr><name pos:line="7" pos:column="47">i<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">++<pos:position pos:line="7" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="51"/></control> <block pos:line="7" pos:column="52">{
			<decl_stmt><decl><type><specifier pos:line="8" pos:column="25">const<pos:position pos:line="8" pos:column="30"/></specifier> <name pos:line="8" pos:column="31">char<pos:position pos:line="8" pos:column="35"/></name> <modifier pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></modifier></type><name pos:line="8" pos:column="37">p<pos:position pos:line="8" pos:column="38"/></name> <init pos:line="8" pos:column="39">= <expr><name><name pos:line="8" pos:column="41">msg_id_info<pos:position pos:line="8" pos:column="52"/></name><index pos:line="8" pos:column="52">[<expr><name pos:line="8" pos:column="53">i<pos:position pos:line="8" pos:column="54"/></name></expr>]<pos:position pos:line="8" pos:column="55"/></index></name><operator pos:line="8" pos:column="55">.<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="56">id_string<pos:position pos:line="8" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="66"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="9" pos:column="25">int<pos:position pos:line="9" pos:column="28"/></name></type> <name pos:line="9" pos:column="29">len<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><call><name pos:line="9" pos:column="35">strlen<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name pos:line="9" pos:column="42">p<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="10" pos:column="25">char<pos:position pos:line="10" pos:column="29"/></name> <modifier pos:line="10" pos:column="30">*<pos:position pos:line="10" pos:column="31"/></modifier></type><name pos:line="10" pos:column="31">q<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><call><name pos:line="10" pos:column="35">xmalloc<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">len<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="48"/></decl_stmt>

			<expr_stmt><expr><name><name pos:line="12" pos:column="25">msg_id_info<pos:position pos:line="12" pos:column="36"/></name><index pos:line="12" pos:column="36">[<expr><name pos:line="12" pos:column="37">i<pos:position pos:line="12" pos:column="38"/></name></expr>]<pos:position pos:line="12" pos:column="39"/></index></name><operator pos:line="12" pos:column="39">.<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">downcased<pos:position pos:line="12" pos:column="49"/></name> <operator pos:line="12" pos:column="50">=<pos:position pos:line="12" pos:column="51"/></operator> <name pos:line="12" pos:column="52">q<pos:position pos:line="12" pos:column="53"/></name></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt>
			<while pos:line="13" pos:column="25">while <condition pos:line="13" pos:column="31">(<expr><operator pos:line="13" pos:column="32">*<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">p<pos:position pos:line="13" pos:column="34"/></name></expr>)<pos:position pos:line="13" pos:column="35"/></condition>
				<block type="pseudo"><if pos:line="14" pos:column="33">if <condition pos:line="14" pos:column="36">(<expr><operator pos:line="14" pos:column="37">*<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">p<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">==<pos:position pos:line="14" pos:column="42"/></operator> <literal type="char" pos:line="14" pos:column="43">'_'<pos:position pos:line="14" pos:column="46"/></literal></expr>)<pos:position pos:line="14" pos:column="47"/></condition><then pos:line="14" pos:column="47">
					<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="41">p<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">++<pos:position pos:line="15" pos:column="44"/></operator></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt></block></then>
				<else pos:line="16" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><operator pos:line="17" pos:column="41">*<pos:position pos:line="17" pos:column="42"/></operator><operator pos:line="17" pos:column="42">(<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">q<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">)<pos:position pos:line="17" pos:column="45"/></operator><operator pos:line="17" pos:column="45">++<pos:position pos:line="17" pos:column="47"/></operator> <operator pos:line="17" pos:column="48">=<pos:position pos:line="17" pos:column="49"/></operator> <call><name pos:line="17" pos:column="50">tolower<pos:position pos:line="17" pos:column="57"/></name><argument_list pos:line="17" pos:column="57">(<argument><expr><operator pos:line="17" pos:column="58">*<pos:position pos:line="17" pos:column="59"/></operator><operator pos:line="17" pos:column="59">(<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="60">p<pos:position pos:line="17" pos:column="61"/></name><operator pos:line="17" pos:column="61">)<pos:position pos:line="17" pos:column="62"/></operator><operator pos:line="17" pos:column="62">++<pos:position pos:line="17" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt></block></else></if></block></while>
			<expr_stmt><expr><operator pos:line="18" pos:column="25">*<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">q<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <literal type="char" pos:line="18" pos:column="30">'\0'<pos:position pos:line="18" pos:column="34"/></literal></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></for>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></init> <condition><expr><name pos:line="22" pos:column="21">i<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&lt;<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="25">FSCK_MSG_MAX<pos:position pos:line="22" pos:column="37"/></name></expr>;<pos:position pos:line="22" pos:column="38"/></condition> <incr><expr><name pos:line="22" pos:column="39">i<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">++<pos:position pos:line="22" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="43"/></control>
		<block type="pseudo"><if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><call><name pos:line="23" pos:column="22">strcmp<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">text<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="35">msg_id_info<pos:position pos:line="23" pos:column="46"/></name><index pos:line="23" pos:column="46">[<expr><name pos:line="23" pos:column="47">i<pos:position pos:line="23" pos:column="48"/></name></expr>]<pos:position pos:line="23" pos:column="49"/></index></name><operator pos:line="23" pos:column="49">.<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="50">downcased<pos:position pos:line="23" pos:column="59"/></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="61"/></condition><then pos:line="23" pos:column="61">
			<block type="pseudo"><return pos:line="24" pos:column="25">return <expr><name pos:line="24" pos:column="32">i<pos:position pos:line="24" pos:column="33"/></name></expr>;<pos:position pos:line="24" pos:column="34"/></return></block></then></if></block></for>

	<return pos:line="26" pos:column="9">return <expr><operator pos:line="26" pos:column="16">-<pos:position pos:line="26" pos:column="17"/></operator><literal type="number" pos:line="26" pos:column="17">1<pos:position pos:line="26" pos:column="18"/></literal></expr>;<pos:position pos:line="26" pos:column="19"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

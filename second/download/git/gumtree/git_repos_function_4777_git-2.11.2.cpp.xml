<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4777_git-2.11.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">emit_other<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">scoreboard<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">sb<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">blame_entry<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">ent<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="72">int<pos:position pos:line="1" pos:column="75"/></name></type> <name pos:line="1" pos:column="76">opt<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">cnt<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">cp<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">origin<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">suspect<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name><name pos:line="5" pos:column="34">ent<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">-&gt;<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="39">suspect<pos:position pos:line="5" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit_info<pos:position pos:line="6" pos:column="27"/></name></name></type> <name pos:line="6" pos:column="28">ci<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">hex<pos:position pos:line="7" pos:column="17"/></name><index pos:line="7" pos:column="17">[<expr><name pos:line="7" pos:column="18">GIT_SHA1_HEXSZ<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">+<pos:position pos:line="7" pos:column="34"/></operator> <literal type="number" pos:line="7" pos:column="35">1<pos:position pos:line="7" pos:column="36"/></literal></expr>]<pos:position pos:line="7" pos:column="37"/></index></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">show_raw_time<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><operator pos:line="8" pos:column="29">!<pos:position pos:line="8" pos:column="30"/></operator><operator pos:line="8" pos:column="30">!<pos:position pos:line="8" pos:column="31"/></operator><operator pos:line="8" pos:column="31">(<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="32">opt<pos:position pos:line="8" pos:column="35"/></name> <operator pos:line="8" pos:column="36">&amp;<pos:position pos:line="8" pos:column="41"/></operator> <name pos:line="8" pos:column="38">OUTPUT_RAW_TIMESTAMP<pos:position pos:line="8" pos:column="58"/></name><operator pos:line="8" pos:column="58">)<pos:position pos:line="8" pos:column="59"/></operator></expr></init></decl>;<pos:position pos:line="8" pos:column="60"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">get_commit_info<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name><name pos:line="10" pos:column="25">suspect<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">commit<pos:position pos:line="10" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="42">&amp;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="43">ci<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="47">1<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">sha1_to_hex_r<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">hex<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="28">suspect<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">commit<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">object<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">.<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="52">oid<pos:position pos:line="11" pos:column="55"/></name><operator pos:line="11" pos:column="55">.<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="56">hash<pos:position pos:line="11" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">cp<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">nth_line<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">sb<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="27">ent<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">lno<pos:position pos:line="13" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">cnt<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <literal type="number" pos:line="14" pos:column="20">0<pos:position pos:line="14" pos:column="21"/></literal></expr>;<pos:position pos:line="14" pos:column="22"/></init> <condition><expr><name pos:line="14" pos:column="23">cnt<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">&lt;<pos:position pos:line="14" pos:column="31"/></operator> <name><name pos:line="14" pos:column="29">ent<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">num_lines<pos:position pos:line="14" pos:column="43"/></name></name></expr>;<pos:position pos:line="14" pos:column="44"/></condition> <incr><expr><name pos:line="14" pos:column="45">cnt<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">++<pos:position pos:line="14" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="51"/></control> <block pos:line="14" pos:column="52">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">char<pos:position pos:line="15" pos:column="21"/></name></type> <name pos:line="15" pos:column="22">ch<pos:position pos:line="15" pos:column="24"/></name></decl>;<pos:position pos:line="15" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">int<pos:position pos:line="16" pos:column="20"/></name></type> <name pos:line="16" pos:column="21">length<pos:position pos:line="16" pos:column="27"/></name> <init pos:line="16" pos:column="28">= <expr><ternary><condition><expr><operator pos:line="16" pos:column="30">(<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">opt<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">&amp;<pos:position pos:line="16" pos:column="40"/></operator> <name pos:line="16" pos:column="37">OUTPUT_LONG_OBJECT_NAME<pos:position pos:line="16" pos:column="60"/></name><operator pos:line="16" pos:column="60">)<pos:position pos:line="16" pos:column="61"/></operator></expr> ?<pos:position pos:line="16" pos:column="63"/></condition><then pos:line="16" pos:column="63"> <expr><name pos:line="16" pos:column="64">GIT_SHA1_HEXSZ<pos:position pos:line="16" pos:column="78"/></name></expr> <pos:position pos:line="16" pos:column="79"/></then><else pos:line="16" pos:column="79">: <expr><name pos:line="16" pos:column="81">abbrev<pos:position pos:line="16" pos:column="87"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="16" pos:column="88"/></decl_stmt>

		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">suspect<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">commit<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">-&gt;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="38">object<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">.<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="45">flags<pos:position pos:line="18" pos:column="50"/></name></name> <operator pos:line="18" pos:column="51">&amp;<pos:position pos:line="18" pos:column="56"/></operator> <name pos:line="18" pos:column="53">UNINTERESTING<pos:position pos:line="18" pos:column="66"/></name></expr>)<pos:position pos:line="18" pos:column="67"/></condition><then pos:line="18" pos:column="67"> <block pos:line="18" pos:column="68">{
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><name pos:line="19" pos:column="29">blank_boundary<pos:position pos:line="19" pos:column="43"/></name></expr>)<pos:position pos:line="19" pos:column="44"/></condition><then pos:line="19" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="33">memset<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">(<argument><expr><name pos:line="20" pos:column="40">hex<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="45">' '<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">length<pos:position pos:line="20" pos:column="56"/></name></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="58"/></expr_stmt></block></then>
			<elseif pos:line="21" pos:column="25">else <if pos:line="21" pos:column="30">if <condition pos:line="21" pos:column="33">(<expr><operator pos:line="21" pos:column="34">!<pos:position pos:line="21" pos:column="35"/></operator><operator pos:line="21" pos:column="35">(<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="36">opt<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">&amp;<pos:position pos:line="21" pos:column="45"/></operator> <name pos:line="21" pos:column="42">OUTPUT_ANNOTATE_COMPAT<pos:position pos:line="21" pos:column="64"/></name><operator pos:line="21" pos:column="64">)<pos:position pos:line="21" pos:column="65"/></operator></expr>)<pos:position pos:line="21" pos:column="66"/></condition><then pos:line="21" pos:column="66"> <block pos:line="21" pos:column="67">{
				<expr_stmt><expr><name pos:line="22" pos:column="33">length<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">--<pos:position pos:line="22" pos:column="41"/></operator></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="23" pos:column="33">putchar<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><literal type="char" pos:line="23" pos:column="41">'^'<pos:position pos:line="23" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="24" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="27" pos:column="17">printf<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="string" pos:line="27" pos:column="24">"%.*s"<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">length<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="40">hex<pos:position pos:line="27" pos:column="43"/></name></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">opt<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">&amp;<pos:position pos:line="28" pos:column="30"/></operator> <name pos:line="28" pos:column="27">OUTPUT_ANNOTATE_COMPAT<pos:position pos:line="28" pos:column="49"/></name></expr>)<pos:position pos:line="28" pos:column="50"/></condition><then pos:line="28" pos:column="50"> <block pos:line="28" pos:column="51">{
			<decl_stmt><decl><type><specifier pos:line="29" pos:column="25">const<pos:position pos:line="29" pos:column="30"/></specifier> <name pos:line="29" pos:column="31">char<pos:position pos:line="29" pos:column="35"/></name> <modifier pos:line="29" pos:column="36">*<pos:position pos:line="29" pos:column="37"/></modifier></type><name pos:line="29" pos:column="37">name<pos:position pos:line="29" pos:column="41"/></name></decl>;<pos:position pos:line="29" pos:column="42"/></decl_stmt>
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><name pos:line="30" pos:column="29">opt<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">&amp;<pos:position pos:line="30" pos:column="38"/></operator> <name pos:line="30" pos:column="35">OUTPUT_SHOW_EMAIL<pos:position pos:line="30" pos:column="52"/></name></expr>)<pos:position pos:line="30" pos:column="53"/></condition><then pos:line="30" pos:column="53">
				<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="33">name<pos:position pos:line="31" pos:column="37"/></name> <operator pos:line="31" pos:column="38">=<pos:position pos:line="31" pos:column="39"/></operator> <name><name pos:line="31" pos:column="40">ci<pos:position pos:line="31" pos:column="42"/></name><operator pos:line="31" pos:column="42">.<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="43">author_mail<pos:position pos:line="31" pos:column="54"/></name><operator pos:line="31" pos:column="54">.<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="55">buf<pos:position pos:line="31" pos:column="58"/></name></name></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt></block></then>
			<else pos:line="32" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="33">name<pos:position pos:line="33" pos:column="37"/></name> <operator pos:line="33" pos:column="38">=<pos:position pos:line="33" pos:column="39"/></operator> <name><name pos:line="33" pos:column="40">ci<pos:position pos:line="33" pos:column="42"/></name><operator pos:line="33" pos:column="42">.<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="43">author<pos:position pos:line="33" pos:column="49"/></name><operator pos:line="33" pos:column="49">.<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="50">buf<pos:position pos:line="33" pos:column="53"/></name></name></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt></block></else></if>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">printf<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><literal type="string" pos:line="34" pos:column="32">"\t(%10s\t%10s\t%d)"<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="54">name<pos:position pos:line="34" pos:column="58"/></name></expr></argument>,
			       <argument><expr><call><name pos:line="35" pos:column="32">format_time<pos:position pos:line="35" pos:column="43"/></name><argument_list pos:line="35" pos:column="43">(<argument><expr><name><name pos:line="35" pos:column="44">ci<pos:position pos:line="35" pos:column="46"/></name><operator pos:line="35" pos:column="46">.<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="47">author_time<pos:position pos:line="35" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="60">ci<pos:position pos:line="35" pos:column="62"/></name><operator pos:line="35" pos:column="62">.<pos:position pos:line="35" pos:column="63"/></operator><name pos:line="35" pos:column="63">author_tz<pos:position pos:line="35" pos:column="72"/></name><operator pos:line="35" pos:column="72">.<pos:position pos:line="35" pos:column="73"/></operator><name pos:line="35" pos:column="73">buf<pos:position pos:line="35" pos:column="76"/></name></name></expr></argument>,
					   <argument><expr><name pos:line="36" pos:column="44">show_raw_time<pos:position pos:line="36" pos:column="57"/></name></expr></argument>)<pos:position pos:line="36" pos:column="58"/></argument_list></call></expr></argument>,
			       <argument><expr><name><name pos:line="37" pos:column="32">ent<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="37">lno<pos:position pos:line="37" pos:column="40"/></name></name> <operator pos:line="37" pos:column="41">+<pos:position pos:line="37" pos:column="42"/></operator> <literal type="number" pos:line="37" pos:column="43">1<pos:position pos:line="37" pos:column="44"/></literal> <operator pos:line="37" pos:column="45">+<pos:position pos:line="37" pos:column="46"/></operator> <name pos:line="37" pos:column="47">cnt<pos:position pos:line="37" pos:column="50"/></name></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then> <else pos:line="38" pos:column="19">else <block pos:line="38" pos:column="24">{
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name pos:line="39" pos:column="29">opt<pos:position pos:line="39" pos:column="32"/></name> <operator pos:line="39" pos:column="33">&amp;<pos:position pos:line="39" pos:column="38"/></operator> <name pos:line="39" pos:column="35">OUTPUT_SHOW_SCORE<pos:position pos:line="39" pos:column="52"/></name></expr>)<pos:position pos:line="39" pos:column="53"/></condition><then pos:line="39" pos:column="53">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="33">printf<pos:position pos:line="40" pos:column="39"/></name><argument_list pos:line="40" pos:column="39">(<argument><expr><literal type="string" pos:line="40" pos:column="40">" %*d %02d"<pos:position pos:line="40" pos:column="51"/></literal></expr></argument>,
				       <argument><expr><name pos:line="41" pos:column="40">max_score_digits<pos:position pos:line="41" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="58">ent<pos:position pos:line="41" pos:column="61"/></name><operator pos:line="41" pos:column="61">-&gt;<pos:position pos:line="41" pos:column="66"/></operator><name pos:line="41" pos:column="63">score<pos:position pos:line="41" pos:column="68"/></name></name></expr></argument>,
				       <argument><expr><name><name pos:line="42" pos:column="40">ent<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">-&gt;<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="45">suspect<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">-&gt;<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="54">refcnt<pos:position pos:line="42" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="62"/></expr_stmt></block></then></if>
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><name pos:line="43" pos:column="29">opt<pos:position pos:line="43" pos:column="32"/></name> <operator pos:line="43" pos:column="33">&amp;<pos:position pos:line="43" pos:column="38"/></operator> <name pos:line="43" pos:column="35">OUTPUT_SHOW_NAME<pos:position pos:line="43" pos:column="51"/></name></expr>)<pos:position pos:line="43" pos:column="52"/></condition><then pos:line="43" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="33">printf<pos:position pos:line="44" pos:column="39"/></name><argument_list pos:line="44" pos:column="39">(<argument><expr><literal type="string" pos:line="44" pos:column="40">" %-*.*s"<pos:position pos:line="44" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="51">longest_file<pos:position pos:line="44" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="65">longest_file<pos:position pos:line="44" pos:column="77"/></name></expr></argument>,
				       <argument><expr><name><name pos:line="45" pos:column="40">suspect<pos:position pos:line="45" pos:column="47"/></name><operator pos:line="45" pos:column="47">-&gt;<pos:position pos:line="45" pos:column="52"/></operator><name pos:line="45" pos:column="49">path<pos:position pos:line="45" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt></block></then></if>
			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><name pos:line="46" pos:column="29">opt<pos:position pos:line="46" pos:column="32"/></name> <operator pos:line="46" pos:column="33">&amp;<pos:position pos:line="46" pos:column="38"/></operator> <name pos:line="46" pos:column="35">OUTPUT_SHOW_NUMBER<pos:position pos:line="46" pos:column="53"/></name></expr>)<pos:position pos:line="46" pos:column="54"/></condition><then pos:line="46" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="33">printf<pos:position pos:line="47" pos:column="39"/></name><argument_list pos:line="47" pos:column="39">(<argument><expr><literal type="string" pos:line="47" pos:column="40">" %*d"<pos:position pos:line="47" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="48">max_orig_digits<pos:position pos:line="47" pos:column="63"/></name></expr></argument>,
				       <argument><expr><name><name pos:line="48" pos:column="40">ent<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">-&gt;<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="45">s_lno<pos:position pos:line="48" pos:column="50"/></name></name> <operator pos:line="48" pos:column="51">+<pos:position pos:line="48" pos:column="52"/></operator> <literal type="number" pos:line="48" pos:column="53">1<pos:position pos:line="48" pos:column="54"/></literal> <operator pos:line="48" pos:column="55">+<pos:position pos:line="48" pos:column="56"/></operator> <name pos:line="48" pos:column="57">cnt<pos:position pos:line="48" pos:column="60"/></name></expr></argument>)<pos:position pos:line="48" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="62"/></expr_stmt></block></then></if>

			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><operator pos:line="50" pos:column="29">!<pos:position pos:line="50" pos:column="30"/></operator><operator pos:line="50" pos:column="30">(<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="31">opt<pos:position pos:line="50" pos:column="34"/></name> <operator pos:line="50" pos:column="35">&amp;<pos:position pos:line="50" pos:column="40"/></operator> <name pos:line="50" pos:column="37">OUTPUT_NO_AUTHOR<pos:position pos:line="50" pos:column="53"/></name><operator pos:line="50" pos:column="53">)<pos:position pos:line="50" pos:column="54"/></operator></expr>)<pos:position pos:line="50" pos:column="55"/></condition><then pos:line="50" pos:column="55"> <block pos:line="50" pos:column="56">{
				<decl_stmt><decl><type><specifier pos:line="51" pos:column="33">const<pos:position pos:line="51" pos:column="38"/></specifier> <name pos:line="51" pos:column="39">char<pos:position pos:line="51" pos:column="43"/></name> <modifier pos:line="51" pos:column="44">*<pos:position pos:line="51" pos:column="45"/></modifier></type><name pos:line="51" pos:column="45">name<pos:position pos:line="51" pos:column="49"/></name></decl>;<pos:position pos:line="51" pos:column="50"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="52" pos:column="33">int<pos:position pos:line="52" pos:column="36"/></name></type> <name pos:line="52" pos:column="37">pad<pos:position pos:line="52" pos:column="40"/></name></decl>;<pos:position pos:line="52" pos:column="41"/></decl_stmt>
				<if pos:line="53" pos:column="33">if <condition pos:line="53" pos:column="36">(<expr><name pos:line="53" pos:column="37">opt<pos:position pos:line="53" pos:column="40"/></name> <operator pos:line="53" pos:column="41">&amp;<pos:position pos:line="53" pos:column="46"/></operator> <name pos:line="53" pos:column="43">OUTPUT_SHOW_EMAIL<pos:position pos:line="53" pos:column="60"/></name></expr>)<pos:position pos:line="53" pos:column="61"/></condition><then pos:line="53" pos:column="61">
					<block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="41">name<pos:position pos:line="54" pos:column="45"/></name> <operator pos:line="54" pos:column="46">=<pos:position pos:line="54" pos:column="47"/></operator> <name><name pos:line="54" pos:column="48">ci<pos:position pos:line="54" pos:column="50"/></name><operator pos:line="54" pos:column="50">.<pos:position pos:line="54" pos:column="51"/></operator><name pos:line="54" pos:column="51">author_mail<pos:position pos:line="54" pos:column="62"/></name><operator pos:line="54" pos:column="62">.<pos:position pos:line="54" pos:column="63"/></operator><name pos:line="54" pos:column="63">buf<pos:position pos:line="54" pos:column="66"/></name></name></expr>;<pos:position pos:line="54" pos:column="67"/></expr_stmt></block></then>
				<else pos:line="55" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="41">name<pos:position pos:line="56" pos:column="45"/></name> <operator pos:line="56" pos:column="46">=<pos:position pos:line="56" pos:column="47"/></operator> <name><name pos:line="56" pos:column="48">ci<pos:position pos:line="56" pos:column="50"/></name><operator pos:line="56" pos:column="50">.<pos:position pos:line="56" pos:column="51"/></operator><name pos:line="56" pos:column="51">author<pos:position pos:line="56" pos:column="57"/></name><operator pos:line="56" pos:column="57">.<pos:position pos:line="56" pos:column="58"/></operator><name pos:line="56" pos:column="58">buf<pos:position pos:line="56" pos:column="61"/></name></name></expr>;<pos:position pos:line="56" pos:column="62"/></expr_stmt></block></else></if>
				<expr_stmt><expr><name pos:line="57" pos:column="33">pad<pos:position pos:line="57" pos:column="36"/></name> <operator pos:line="57" pos:column="37">=<pos:position pos:line="57" pos:column="38"/></operator> <name pos:line="57" pos:column="39">longest_author<pos:position pos:line="57" pos:column="53"/></name> <operator pos:line="57" pos:column="54">-<pos:position pos:line="57" pos:column="55"/></operator> <call><name pos:line="57" pos:column="56">utf8_strwidth<pos:position pos:line="57" pos:column="69"/></name><argument_list pos:line="57" pos:column="69">(<argument><expr><name pos:line="57" pos:column="70">name<pos:position pos:line="57" pos:column="74"/></name></expr></argument>)<pos:position pos:line="57" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="76"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="58" pos:column="33">printf<pos:position pos:line="58" pos:column="39"/></name><argument_list pos:line="58" pos:column="39">(<argument><expr><literal type="string" pos:line="58" pos:column="40">" (%s%*s %10s"<pos:position pos:line="58" pos:column="54"/></literal></expr></argument>,
				       <argument><expr><name pos:line="59" pos:column="40">name<pos:position pos:line="59" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="46">pad<pos:position pos:line="59" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="51">""<pos:position pos:line="59" pos:column="53"/></literal></expr></argument>,
				       <argument><expr><call><name pos:line="60" pos:column="40">format_time<pos:position pos:line="60" pos:column="51"/></name><argument_list pos:line="60" pos:column="51">(<argument><expr><name><name pos:line="60" pos:column="52">ci<pos:position pos:line="60" pos:column="54"/></name><operator pos:line="60" pos:column="54">.<pos:position pos:line="60" pos:column="55"/></operator><name pos:line="60" pos:column="55">author_time<pos:position pos:line="60" pos:column="66"/></name></name></expr></argument>,
						   <argument><expr><name><name pos:line="61" pos:column="52">ci<pos:position pos:line="61" pos:column="54"/></name><operator pos:line="61" pos:column="54">.<pos:position pos:line="61" pos:column="55"/></operator><name pos:line="61" pos:column="55">author_tz<pos:position pos:line="61" pos:column="64"/></name><operator pos:line="61" pos:column="64">.<pos:position pos:line="61" pos:column="65"/></operator><name pos:line="61" pos:column="65">buf<pos:position pos:line="61" pos:column="68"/></name></name></expr></argument>,
						   <argument><expr><name pos:line="62" pos:column="52">show_raw_time<pos:position pos:line="62" pos:column="65"/></name></expr></argument>)<pos:position pos:line="62" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="68"/></expr_stmt>
			}<pos:position pos:line="63" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="64" pos:column="25">printf<pos:position pos:line="64" pos:column="31"/></name><argument_list pos:line="64" pos:column="31">(<argument><expr><literal type="string" pos:line="64" pos:column="32">" %*d) "<pos:position pos:line="64" pos:column="40"/></literal></expr></argument>,
			       <argument><expr><name pos:line="65" pos:column="32">max_digits<pos:position pos:line="65" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="44">ent<pos:position pos:line="65" pos:column="47"/></name><operator pos:line="65" pos:column="47">-&gt;<pos:position pos:line="65" pos:column="52"/></operator><name pos:line="65" pos:column="49">lno<pos:position pos:line="65" pos:column="52"/></name></name> <operator pos:line="65" pos:column="53">+<pos:position pos:line="65" pos:column="54"/></operator> <literal type="number" pos:line="65" pos:column="55">1<pos:position pos:line="65" pos:column="56"/></literal> <operator pos:line="65" pos:column="57">+<pos:position pos:line="65" pos:column="58"/></operator> <name pos:line="65" pos:column="59">cnt<pos:position pos:line="65" pos:column="62"/></name></expr></argument>)<pos:position pos:line="65" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="66" pos:column="18"/></block></else></if>
		<do pos:line="67" pos:column="17">do <block pos:line="67" pos:column="20">{
			<expr_stmt><expr><name pos:line="68" pos:column="25">ch<pos:position pos:line="68" pos:column="27"/></name> <operator pos:line="68" pos:column="28">=<pos:position pos:line="68" pos:column="29"/></operator> <operator pos:line="68" pos:column="30">*<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="31">cp<pos:position pos:line="68" pos:column="33"/></name><operator pos:line="68" pos:column="33">++<pos:position pos:line="68" pos:column="35"/></operator></expr>;<pos:position pos:line="68" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="69" pos:column="25">putchar<pos:position pos:line="69" pos:column="32"/></name><argument_list pos:line="69" pos:column="32">(<argument><expr><name pos:line="69" pos:column="33">ch<pos:position pos:line="69" pos:column="35"/></name></expr></argument>)<pos:position pos:line="69" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="70" pos:column="18"/></block> while <condition pos:line="70" pos:column="25">(<expr><name pos:line="70" pos:column="26">ch<pos:position pos:line="70" pos:column="28"/></name> <operator pos:line="70" pos:column="29">!=<pos:position pos:line="70" pos:column="31"/></operator> <literal type="char" pos:line="70" pos:column="32">'\n'<pos:position pos:line="70" pos:column="36"/></literal> <operator pos:line="70" pos:column="37">&amp;&amp;<pos:position pos:line="70" pos:column="47"/></operator>
			 <name pos:line="71" pos:column="26">cp<pos:position pos:line="71" pos:column="28"/></name> <operator pos:line="71" pos:column="29">&lt;<pos:position pos:line="71" pos:column="33"/></operator> <name><name pos:line="71" pos:column="31">sb<pos:position pos:line="71" pos:column="33"/></name><operator pos:line="71" pos:column="33">-&gt;<pos:position pos:line="71" pos:column="38"/></operator><name pos:line="71" pos:column="35">final_buf<pos:position pos:line="71" pos:column="44"/></name></name> <operator pos:line="71" pos:column="45">+<pos:position pos:line="71" pos:column="46"/></operator> <name><name pos:line="71" pos:column="47">sb<pos:position pos:line="71" pos:column="49"/></name><operator pos:line="71" pos:column="49">-&gt;<pos:position pos:line="71" pos:column="54"/></operator><name pos:line="71" pos:column="51">final_buf_size<pos:position pos:line="71" pos:column="65"/></name></name></expr>)<pos:position pos:line="71" pos:column="66"/></condition>;<pos:position pos:line="71" pos:column="67"/></do>
	}<pos:position pos:line="72" pos:column="10"/></block></for>

	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name><name pos:line="74" pos:column="13">sb<pos:position pos:line="74" pos:column="15"/></name><operator pos:line="74" pos:column="15">-&gt;<pos:position pos:line="74" pos:column="20"/></operator><name pos:line="74" pos:column="17">final_buf_size<pos:position pos:line="74" pos:column="31"/></name></name> <operator pos:line="74" pos:column="32">&amp;&amp;<pos:position pos:line="74" pos:column="42"/></operator> <name><name pos:line="74" pos:column="35">cp<pos:position pos:line="74" pos:column="37"/></name><index pos:line="74" pos:column="37">[<expr><operator pos:line="74" pos:column="38">-<pos:position pos:line="74" pos:column="39"/></operator><literal type="number" pos:line="74" pos:column="39">1<pos:position pos:line="74" pos:column="40"/></literal></expr>]<pos:position pos:line="74" pos:column="41"/></index></name> <operator pos:line="74" pos:column="42">!=<pos:position pos:line="74" pos:column="44"/></operator> <literal type="char" pos:line="74" pos:column="45">'\n'<pos:position pos:line="74" pos:column="49"/></literal></expr>)<pos:position pos:line="74" pos:column="50"/></condition><then pos:line="74" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="17">putchar<pos:position pos:line="75" pos:column="24"/></name><argument_list pos:line="75" pos:column="24">(<argument><expr><literal type="char" pos:line="75" pos:column="25">'\n'<pos:position pos:line="75" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="31"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="77" pos:column="9">commit_info_destroy<pos:position pos:line="77" pos:column="28"/></name><argument_list pos:line="77" pos:column="28">(<argument><expr><operator pos:line="77" pos:column="29">&amp;<pos:position pos:line="77" pos:column="34"/></operator><name pos:line="77" pos:column="30">ci<pos:position pos:line="77" pos:column="32"/></name></expr></argument>)<pos:position pos:line="77" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="34"/></expr_stmt>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

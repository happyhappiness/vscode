<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5942_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">handle_tags_and_duplicates<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">commit<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <name><name pos:line="6" pos:column="18">extra_refs<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">.<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">nr<pos:position pos:line="6" pos:column="31"/></name></name> <operator pos:line="6" pos:column="32">-<pos:position pos:line="6" pos:column="33"/></operator> <literal type="number" pos:line="6" pos:column="34">1<pos:position pos:line="6" pos:column="35"/></literal></expr>;<pos:position pos:line="6" pos:column="36"/></init> <condition><expr><name pos:line="6" pos:column="37">i<pos:position pos:line="6" pos:column="38"/></name> <operator pos:line="6" pos:column="39">&gt;=<pos:position pos:line="6" pos:column="44"/></operator> <literal type="number" pos:line="6" pos:column="42">0<pos:position pos:line="6" pos:column="43"/></literal></expr>;<pos:position pos:line="6" pos:column="44"/></condition> <incr><expr><name pos:line="6" pos:column="45">i<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">--<pos:position pos:line="6" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="49"/></control> <block pos:line="6" pos:column="50">{
		<decl_stmt><decl><type><specifier pos:line="7" pos:column="17">const<pos:position pos:line="7" pos:column="22"/></specifier> <name pos:line="7" pos:column="23">char<pos:position pos:line="7" pos:column="27"/></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">name<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><name><name pos:line="7" pos:column="36">extra_refs<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">.<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="47">items<pos:position pos:line="7" pos:column="52"/></name><index pos:line="7" pos:column="52">[<expr><name pos:line="7" pos:column="53">i<pos:position pos:line="7" pos:column="54"/></name></expr>]<pos:position pos:line="7" pos:column="55"/></index></name><operator pos:line="7" pos:column="55">.<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="56">string<pos:position pos:line="7" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="63"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">object<pos:position pos:line="8" pos:column="30"/></name></name> <modifier pos:line="8" pos:column="31">*<pos:position pos:line="8" pos:column="32"/></modifier></type><name pos:line="8" pos:column="32">object<pos:position pos:line="8" pos:column="38"/></name> <init pos:line="8" pos:column="39">= <expr><name><name pos:line="8" pos:column="41">extra_refs<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">.<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="52">items<pos:position pos:line="8" pos:column="57"/></name><index pos:line="8" pos:column="57">[<expr><name pos:line="8" pos:column="58">i<pos:position pos:line="8" pos:column="59"/></name></expr>]<pos:position pos:line="8" pos:column="60"/></index></name><operator pos:line="8" pos:column="60">.<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="61">util<pos:position pos:line="8" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="66"/></decl_stmt>
		<switch pos:line="9" pos:column="17">switch <condition pos:line="9" pos:column="24">(<expr><name><name pos:line="9" pos:column="25">object<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">type<pos:position pos:line="9" pos:column="37"/></name></name></expr>)<pos:position pos:line="9" pos:column="38"/></condition> <block pos:line="9" pos:column="39">{
		<case pos:line="10" pos:column="17">case <expr><name pos:line="10" pos:column="22">OBJ_TAG<pos:position pos:line="10" pos:column="29"/></name></expr>:<pos:position pos:line="10" pos:column="30"/></case>
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">handle_tag<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">name<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="42">(<pos:position pos:line="11" pos:column="43"/></operator>struct <name pos:line="11" pos:column="50">tag<pos:position pos:line="11" pos:column="53"/></name> <operator pos:line="11" pos:column="54">*<pos:position pos:line="11" pos:column="55"/></operator><operator pos:line="11" pos:column="55">)<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="56">object<pos:position pos:line="11" pos:column="62"/></name></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="64"/></expr_stmt>
			<break pos:line="12" pos:column="25">break;<pos:position pos:line="12" pos:column="31"/></break>
		<case pos:line="13" pos:column="17">case <expr><name pos:line="13" pos:column="22">OBJ_COMMIT<pos:position pos:line="13" pos:column="32"/></name></expr>:<pos:position pos:line="13" pos:column="33"/></case>
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><name pos:line="14" pos:column="29">anonymize<pos:position pos:line="14" pos:column="38"/></name></expr>)<pos:position pos:line="14" pos:column="39"/></condition><then pos:line="14" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="33">name<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">=<pos:position pos:line="15" pos:column="39"/></operator> <call><name pos:line="15" pos:column="40">anonymize_refname<pos:position pos:line="15" pos:column="57"/></name><argument_list pos:line="15" pos:column="57">(<argument><expr><name pos:line="15" pos:column="58">name<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt></block></then></if>
			<comment type="block" pos:line="16" pos:column="25">/* create refs pointing to already seen commits */</comment>
			<expr_stmt><expr><name pos:line="17" pos:column="25">commit<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <operator pos:line="17" pos:column="34">(<pos:position pos:line="17" pos:column="35"/></operator>struct <name pos:line="17" pos:column="42">commit<pos:position pos:line="17" pos:column="48"/></name> <operator pos:line="17" pos:column="49">*<pos:position pos:line="17" pos:column="50"/></operator><operator pos:line="17" pos:column="50">)<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="51">object<pos:position pos:line="17" pos:column="57"/></name></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">printf<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><literal type="string" pos:line="18" pos:column="32">"reset %s\nfrom :%d\n\n"<pos:position pos:line="18" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="58">name<pos:position pos:line="18" pos:column="62"/></name></expr></argument>,
			       <argument><expr><call><name pos:line="19" pos:column="32">get_object_mark<pos:position pos:line="19" pos:column="47"/></name><argument_list pos:line="19" pos:column="47">(<argument><expr><operator pos:line="19" pos:column="48">&amp;<pos:position pos:line="19" pos:column="53"/></operator><name><name pos:line="19" pos:column="49">commit<pos:position pos:line="19" pos:column="55"/></name><operator pos:line="19" pos:column="55">-&gt;<pos:position pos:line="19" pos:column="60"/></operator><name pos:line="19" pos:column="57">object<pos:position pos:line="19" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">show_progress<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">()<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
			<break pos:line="21" pos:column="25">break;<pos:position pos:line="21" pos:column="31"/></break>
		}<pos:position pos:line="22" pos:column="18"/></block></switch>
	}<pos:position pos:line="23" pos:column="10"/></block></for>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

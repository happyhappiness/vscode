<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_658.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">link_alt_odb_entries<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">alt<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">len<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">sep<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">relative_base<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">int<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">depth<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">string_list<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">entries<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><name pos:line="4" pos:column="38">STRING_LIST_INIT_NODUP<pos:position pos:line="4" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">alt_copy<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">objdirbuf<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><name pos:line="7" pos:column="35">STRBUF_INIT<pos:position pos:line="7" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">depth<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">&gt;<pos:position pos:line="9" pos:column="23"/></operator> <literal type="number" pos:line="9" pos:column="21">5<pos:position pos:line="9" pos:column="22"/></literal></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">error<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><literal type="string" pos:line="10" pos:column="23">"%s: ignoring alternate object stores, nesting too deep."<pos:position pos:line="10" pos:column="80"/></literal></expr></argument>,
				<argument><expr><name pos:line="11" pos:column="33">relative_base<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
		<return pos:line="12" pos:column="17">return;<pos:position pos:line="12" pos:column="24"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">strbuf_add_absolute_path<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><operator pos:line="15" pos:column="34">&amp;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="35">objdirbuf<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="46">get_object_directory<pos:position pos:line="15" pos:column="66"/></name><argument_list pos:line="15" pos:column="66">()<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">strbuf_normalize_path<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><operator pos:line="16" pos:column="35">&amp;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="36">objdirbuf<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call> <operator pos:line="16" pos:column="47">&lt;<pos:position pos:line="16" pos:column="51"/></operator> <literal type="number" pos:line="16" pos:column="49">0<pos:position pos:line="16" pos:column="50"/></literal></expr>)<pos:position pos:line="16" pos:column="51"/></condition><then pos:line="16" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">die<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><literal type="string" pos:line="17" pos:column="21">"unable to normalize object directory: %s"<pos:position pos:line="17" pos:column="63"/></literal></expr></argument>,
		    <argument><expr><name><name pos:line="18" pos:column="21">objdirbuf<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">.<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">buf<pos:position pos:line="18" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="20" pos:column="9">alt_copy<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <call><name pos:line="20" pos:column="20">xmemdupz<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">alt<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">len<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">string_list_split_in_place<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><operator pos:line="21" pos:column="36">&amp;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="37">entries<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="46">alt_copy<pos:position pos:line="21" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="56">sep<pos:position pos:line="21" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="61">-<pos:position pos:line="21" pos:column="62"/></operator><literal type="number" pos:line="21" pos:column="62">1<pos:position pos:line="21" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt>
	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></init> <condition><expr><name pos:line="22" pos:column="21">i<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&lt;<pos:position pos:line="22" pos:column="27"/></operator> <name><name pos:line="22" pos:column="25">entries<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">.<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">nr<pos:position pos:line="22" pos:column="35"/></name></name></expr>;<pos:position pos:line="22" pos:column="36"/></condition> <incr><expr><name pos:line="22" pos:column="37">i<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">++<pos:position pos:line="22" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="41"/></control> <block pos:line="22" pos:column="42">{
		<decl_stmt><decl><type><specifier pos:line="23" pos:column="17">const<pos:position pos:line="23" pos:column="22"/></specifier> <name pos:line="23" pos:column="23">char<pos:position pos:line="23" pos:column="27"/></name> <modifier pos:line="23" pos:column="28">*<pos:position pos:line="23" pos:column="29"/></modifier></type><name pos:line="23" pos:column="29">entry<pos:position pos:line="23" pos:column="34"/></name> <init pos:line="23" pos:column="35">= <expr><name><name pos:line="23" pos:column="37">entries<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">.<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="45">items<pos:position pos:line="23" pos:column="50"/></name><index pos:line="23" pos:column="50">[<expr><name pos:line="23" pos:column="51">i<pos:position pos:line="23" pos:column="52"/></name></expr>]<pos:position pos:line="23" pos:column="53"/></index></name><operator pos:line="23" pos:column="53">.<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="54">string<pos:position pos:line="23" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="61"/></decl_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name><name pos:line="24" pos:column="21">entry<pos:position pos:line="24" pos:column="26"/></name><index pos:line="24" pos:column="26">[<expr><literal type="number" pos:line="24" pos:column="27">0<pos:position pos:line="24" pos:column="28"/></literal></expr>]<pos:position pos:line="24" pos:column="29"/></index></name> <operator pos:line="24" pos:column="30">==<pos:position pos:line="24" pos:column="32"/></operator> <literal type="char" pos:line="24" pos:column="33">'\0'<pos:position pos:line="24" pos:column="37"/></literal> <operator pos:line="24" pos:column="38">||<pos:position pos:line="24" pos:column="40"/></operator> <name><name pos:line="24" pos:column="41">entry<pos:position pos:line="24" pos:column="46"/></name><index pos:line="24" pos:column="46">[<expr><literal type="number" pos:line="24" pos:column="47">0<pos:position pos:line="24" pos:column="48"/></literal></expr>]<pos:position pos:line="24" pos:column="49"/></index></name> <operator pos:line="24" pos:column="50">==<pos:position pos:line="24" pos:column="52"/></operator> <literal type="char" pos:line="24" pos:column="53">'#'<pos:position pos:line="24" pos:column="56"/></literal></expr>)<pos:position pos:line="24" pos:column="57"/></condition><then pos:line="24" pos:column="57">
			<block type="pseudo"><continue pos:line="25" pos:column="25">continue;<pos:position pos:line="25" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">link_alt_odb_entry<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><name pos:line="26" pos:column="36">entry<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">relative_base<pos:position pos:line="26" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="58">depth<pos:position pos:line="26" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="65">objdirbuf<pos:position pos:line="26" pos:column="74"/></name><operator pos:line="26" pos:column="74">.<pos:position pos:line="26" pos:column="75"/></operator><name pos:line="26" pos:column="75">buf<pos:position pos:line="26" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="80"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">string_list_clear<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><operator pos:line="28" pos:column="27">&amp;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="28">entries<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="37">0<pos:position pos:line="28" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">free<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><name pos:line="29" pos:column="14">alt_copy<pos:position pos:line="29" pos:column="22"/></name></expr></argument>)<pos:position pos:line="29" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">strbuf_release<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><operator pos:line="30" pos:column="24">&amp;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="25">objdirbuf<pos:position pos:line="30" pos:column="34"/></name></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

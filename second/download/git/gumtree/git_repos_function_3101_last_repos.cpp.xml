<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3101_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">is_worktree_being_rebased<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">worktree<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">wt<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">target<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">wt_status_state<pos:position pos:line="4" pos:column="31"/></name></name></type> <name pos:line="4" pos:column="32">state<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">found_rebase<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">memset<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><operator pos:line="7" pos:column="16">&amp;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="17">state<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="27">sizeof<argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">state<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">found_rebase<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <call><name pos:line="8" pos:column="24">wt_status_check_rebase<pos:position pos:line="8" pos:column="46"/></name><argument_list pos:line="8" pos:column="46">(<argument><expr><name pos:line="8" pos:column="47">wt<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="51">&amp;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="52">state<pos:position pos:line="8" pos:column="57"/></name></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call> <operator pos:line="8" pos:column="59">&amp;&amp;<pos:position pos:line="8" pos:column="69"/></operator>
		<operator pos:line="9" pos:column="17">(<pos:position pos:line="9" pos:column="18"/></operator><operator pos:line="9" pos:column="18">(<pos:position pos:line="9" pos:column="19"/></operator><name><name pos:line="9" pos:column="19">state<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">.<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">rebase_in_progress<pos:position pos:line="9" pos:column="43"/></name></name> <operator pos:line="9" pos:column="44">||<pos:position pos:line="9" pos:column="46"/></operator>
		  <name><name pos:line="10" pos:column="19">state<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">rebase_interactive_in_progress<pos:position pos:line="10" pos:column="55"/></name></name><operator pos:line="10" pos:column="55">)<pos:position pos:line="10" pos:column="56"/></operator> <operator pos:line="10" pos:column="57">&amp;&amp;<pos:position pos:line="10" pos:column="67"/></operator>
		 <name><name pos:line="11" pos:column="18">state<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">.<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">branch<pos:position pos:line="11" pos:column="30"/></name></name> <operator pos:line="11" pos:column="31">&amp;&amp;<pos:position pos:line="11" pos:column="41"/></operator>
		 <call><name pos:line="12" pos:column="18">starts_with<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">target<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="38">"refs/heads/"<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call> <operator pos:line="12" pos:column="53">&amp;&amp;<pos:position pos:line="12" pos:column="63"/></operator>
		 <operator pos:line="13" pos:column="18">!<pos:position pos:line="13" pos:column="19"/></operator><call><name pos:line="13" pos:column="19">strcmp<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name><name pos:line="13" pos:column="26">state<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">.<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">branch<pos:position pos:line="13" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">target<pos:position pos:line="13" pos:column="46"/></name> <operator pos:line="13" pos:column="47">+<pos:position pos:line="13" pos:column="48"/></operator> <call><name pos:line="13" pos:column="49">strlen<pos:position pos:line="13" pos:column="55"/></name><argument_list pos:line="13" pos:column="55">(<argument><expr><literal type="string" pos:line="13" pos:column="56">"refs/heads/"<pos:position pos:line="13" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call><operator pos:line="13" pos:column="71">)<pos:position pos:line="13" pos:column="72"/></operator></expr>;<pos:position pos:line="13" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">free<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><name><name pos:line="14" pos:column="14">state<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">.<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="20">branch<pos:position pos:line="14" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">free<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><name><name pos:line="15" pos:column="14">state<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">.<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">onto<pos:position pos:line="15" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
	<return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">found_rebase<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1684.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sha1_pos<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><specifier pos:line="1" pos:column="14">const<pos:position pos:line="1" pos:column="19"/></specifier> <name pos:line="1" pos:column="20">unsigned<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">sha1<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">void<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">table<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">size_t<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">nr<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
	     <parameter><decl><type><name pos:line="2" pos:column="14">sha1_access_fn<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">fn<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">hi<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">nr<pos:position pos:line="4" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">lo<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">mi<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">nr<pos:position pos:line="8" pos:column="16"/></name></expr>)<pos:position pos:line="8" pos:column="17"/></condition><then pos:line="8" pos:column="17">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">-<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">1<pos:position pos:line="9" pos:column="26"/></literal></expr>;<pos:position pos:line="9" pos:column="27"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">nr<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">!=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">1<pos:position pos:line="11" pos:column="20"/></literal></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21"> <block pos:line="11" pos:column="22">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">size_t<pos:position pos:line="12" pos:column="23"/></name></type> <name pos:line="12" pos:column="24">lov<pos:position pos:line="12" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="29">hiv<pos:position pos:line="12" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="34">miv<pos:position pos:line="12" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="39">ofs<pos:position pos:line="12" pos:column="42"/></name></decl>;<pos:position pos:line="12" pos:column="43"/></decl_stmt>

		<for pos:line="14" pos:column="17">for <control pos:line="14" pos:column="21">(<init><expr><name pos:line="14" pos:column="22">ofs<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <literal type="number" pos:line="14" pos:column="28">0<pos:position pos:line="14" pos:column="29"/></literal></expr>;<pos:position pos:line="14" pos:column="30"/></init> <condition><expr><name pos:line="14" pos:column="31">ofs<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">&lt;<pos:position pos:line="14" pos:column="39"/></operator> <literal type="number" pos:line="14" pos:column="37">18<pos:position pos:line="14" pos:column="39"/></literal></expr>;<pos:position pos:line="14" pos:column="40"/></condition> <incr><expr><name pos:line="14" pos:column="41">ofs<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">+=<pos:position pos:line="14" pos:column="47"/></operator> <literal type="number" pos:line="14" pos:column="48">2<pos:position pos:line="14" pos:column="49"/></literal></expr></incr>)<pos:position pos:line="14" pos:column="50"/></control> <block pos:line="14" pos:column="51">{
			<expr_stmt><expr><name pos:line="15" pos:column="25">lov<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <call><name pos:line="15" pos:column="31">take2<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><call><name pos:line="15" pos:column="37">fn<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><literal type="number" pos:line="15" pos:column="40">0<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="43">table<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call> <operator pos:line="15" pos:column="50">+<pos:position pos:line="15" pos:column="51"/></operator> <name pos:line="15" pos:column="52">ofs<pos:position pos:line="15" pos:column="55"/></name></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name pos:line="16" pos:column="25">hiv<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <call><name pos:line="16" pos:column="31">take2<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">(<argument><expr><call><name pos:line="16" pos:column="37">fn<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><name pos:line="16" pos:column="40">nr<pos:position pos:line="16" pos:column="42"/></name> <operator pos:line="16" pos:column="43">-<pos:position pos:line="16" pos:column="44"/></operator> <literal type="number" pos:line="16" pos:column="45">1<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">table<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call> <operator pos:line="16" pos:column="55">+<pos:position pos:line="16" pos:column="56"/></operator> <name pos:line="16" pos:column="57">ofs<pos:position pos:line="16" pos:column="60"/></name></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><name pos:line="17" pos:column="25">miv<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">=<pos:position pos:line="17" pos:column="30"/></operator> <call><name pos:line="17" pos:column="31">take2<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">sha1<pos:position pos:line="17" pos:column="41"/></name> <operator pos:line="17" pos:column="42">+<pos:position pos:line="17" pos:column="43"/></operator> <name pos:line="17" pos:column="44">ofs<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><name pos:line="18" pos:column="29">miv<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">&lt;<pos:position pos:line="18" pos:column="37"/></operator> <name pos:line="18" pos:column="35">lov<pos:position pos:line="18" pos:column="38"/></name></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39">
				<block type="pseudo"><return pos:line="19" pos:column="33">return <expr><operator pos:line="19" pos:column="40">-<pos:position pos:line="19" pos:column="41"/></operator><literal type="number" pos:line="19" pos:column="41">1<pos:position pos:line="19" pos:column="42"/></literal></expr>;<pos:position pos:line="19" pos:column="43"/></return></block></then></if>
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><name pos:line="20" pos:column="29">hiv<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">&lt;<pos:position pos:line="20" pos:column="37"/></operator> <name pos:line="20" pos:column="35">miv<pos:position pos:line="20" pos:column="38"/></name></expr>)<pos:position pos:line="20" pos:column="39"/></condition><then pos:line="20" pos:column="39">
				<block type="pseudo"><return pos:line="21" pos:column="33">return <expr><operator pos:line="21" pos:column="40">-<pos:position pos:line="21" pos:column="41"/></operator><literal type="number" pos:line="21" pos:column="41">1<pos:position pos:line="21" pos:column="42"/></literal> <operator pos:line="21" pos:column="43">-<pos:position pos:line="21" pos:column="44"/></operator> <name pos:line="21" pos:column="45">nr<pos:position pos:line="21" pos:column="47"/></name></expr>;<pos:position pos:line="21" pos:column="48"/></return></block></then></if>
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><name pos:line="22" pos:column="29">lov<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">!=<pos:position pos:line="22" pos:column="35"/></operator> <name pos:line="22" pos:column="36">hiv<pos:position pos:line="22" pos:column="39"/></name></expr>)<pos:position pos:line="22" pos:column="40"/></condition><then pos:line="22" pos:column="40"> <block pos:line="22" pos:column="41">{
				<comment type="block" pos:line="23" pos:column="33">/*
				 * At this point miv could be equal
				 * to hiv (but sha1 could still be higher);
				 * the invariant of (mi &lt; hi) should be
				 * kept.
				 */</comment>
				<expr_stmt><expr><name pos:line="29" pos:column="33">mi<pos:position pos:line="29" pos:column="35"/></name> <operator pos:line="29" pos:column="36">=<pos:position pos:line="29" pos:column="37"/></operator> <operator pos:line="29" pos:column="38">(<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="39">nr<pos:position pos:line="29" pos:column="41"/></name> <operator pos:line="29" pos:column="42">-<pos:position pos:line="29" pos:column="43"/></operator> <literal type="number" pos:line="29" pos:column="44">1<pos:position pos:line="29" pos:column="45"/></literal><operator pos:line="29" pos:column="45">)<pos:position pos:line="29" pos:column="46"/></operator> <operator pos:line="29" pos:column="47">*<pos:position pos:line="29" pos:column="48"/></operator> <operator pos:line="29" pos:column="49">(<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="50">miv<pos:position pos:line="29" pos:column="53"/></name> <operator pos:line="29" pos:column="54">-<pos:position pos:line="29" pos:column="55"/></operator> <name pos:line="29" pos:column="56">lov<pos:position pos:line="29" pos:column="59"/></name><operator pos:line="29" pos:column="59">)<pos:position pos:line="29" pos:column="60"/></operator> <operator pos:line="29" pos:column="61">/<pos:position pos:line="29" pos:column="62"/></operator> <operator pos:line="29" pos:column="63">(<pos:position pos:line="29" pos:column="64"/></operator><name pos:line="29" pos:column="64">hiv<pos:position pos:line="29" pos:column="67"/></name> <operator pos:line="29" pos:column="68">-<pos:position pos:line="29" pos:column="69"/></operator> <name pos:line="29" pos:column="70">lov<pos:position pos:line="29" pos:column="73"/></name><operator pos:line="29" pos:column="73">)<pos:position pos:line="29" pos:column="74"/></operator></expr>;<pos:position pos:line="29" pos:column="75"/></expr_stmt>
				<if pos:line="30" pos:column="33">if <condition pos:line="30" pos:column="36">(<expr><name pos:line="30" pos:column="37">lo<pos:position pos:line="30" pos:column="39"/></name> <operator pos:line="30" pos:column="40">&lt;=<pos:position pos:line="30" pos:column="45"/></operator> <name pos:line="30" pos:column="43">mi<pos:position pos:line="30" pos:column="45"/></name> <operator pos:line="30" pos:column="46">&amp;&amp;<pos:position pos:line="30" pos:column="56"/></operator> <name pos:line="30" pos:column="49">mi<pos:position pos:line="30" pos:column="51"/></name> <operator pos:line="30" pos:column="52">&lt;<pos:position pos:line="30" pos:column="56"/></operator> <name pos:line="30" pos:column="54">hi<pos:position pos:line="30" pos:column="56"/></name></expr>)<pos:position pos:line="30" pos:column="57"/></condition><then pos:line="30" pos:column="57">
					<block type="pseudo"><break pos:line="31" pos:column="41">break;<pos:position pos:line="31" pos:column="47"/></break></block></then></if>
				<expr_stmt><expr><call><name pos:line="32" pos:column="33">die<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><literal type="string" pos:line="32" pos:column="37">"BUG: assertion failed in binary search"<pos:position pos:line="32" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="79"/></expr_stmt>
			}<pos:position pos:line="33" pos:column="26"/></block></then></if>
		}<pos:position pos:line="34" pos:column="18"/></block></for>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><literal type="number" pos:line="35" pos:column="21">18<pos:position pos:line="35" pos:column="23"/></literal> <operator pos:line="35" pos:column="24">&lt;=<pos:position pos:line="35" pos:column="29"/></operator> <name pos:line="35" pos:column="27">ofs<pos:position pos:line="35" pos:column="30"/></name></expr>)<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="25">die<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><literal type="string" pos:line="36" pos:column="29">"cannot happen -- lo and hi are identical"<pos:position pos:line="36" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="73"/></expr_stmt></block></then></if>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<do pos:line="39" pos:column="9">do <block pos:line="39" pos:column="12">{
		<decl_stmt><decl><type><name pos:line="40" pos:column="17">int<pos:position pos:line="40" pos:column="20"/></name></type> <name pos:line="40" pos:column="21">cmp<pos:position pos:line="40" pos:column="24"/></name></decl>;<pos:position pos:line="40" pos:column="25"/></decl_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">cmp<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <call><name pos:line="41" pos:column="23">hashcmp<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><call><name pos:line="41" pos:column="31">fn<pos:position pos:line="41" pos:column="33"/></name><argument_list pos:line="41" pos:column="33">(<argument><expr><name pos:line="41" pos:column="34">mi<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="38">table<pos:position pos:line="41" pos:column="43"/></name></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">sha1<pos:position pos:line="41" pos:column="50"/></name></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="52"/></expr_stmt>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">cmp<pos:position pos:line="42" pos:column="25"/></name></expr>)<pos:position pos:line="42" pos:column="26"/></condition><then pos:line="42" pos:column="26">
			<block type="pseudo"><return pos:line="43" pos:column="25">return <expr><name pos:line="43" pos:column="32">mi<pos:position pos:line="43" pos:column="34"/></name></expr>;<pos:position pos:line="43" pos:column="35"/></return></block></then></if>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">cmp<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">&gt;<pos:position pos:line="44" pos:column="29"/></operator> <literal type="number" pos:line="44" pos:column="27">0<pos:position pos:line="44" pos:column="28"/></literal></expr>)<pos:position pos:line="44" pos:column="29"/></condition><then pos:line="44" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="25">hi<pos:position pos:line="45" pos:column="27"/></name> <operator pos:line="45" pos:column="28">=<pos:position pos:line="45" pos:column="29"/></operator> <name pos:line="45" pos:column="30">mi<pos:position pos:line="45" pos:column="32"/></name></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt></block></then>
		<else pos:line="46" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="25">lo<pos:position pos:line="47" pos:column="27"/></name> <operator pos:line="47" pos:column="28">=<pos:position pos:line="47" pos:column="29"/></operator> <name pos:line="47" pos:column="30">mi<pos:position pos:line="47" pos:column="32"/></name> <operator pos:line="47" pos:column="33">+<pos:position pos:line="47" pos:column="34"/></operator> <literal type="number" pos:line="47" pos:column="35">1<pos:position pos:line="47" pos:column="36"/></literal></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="48" pos:column="17">mi<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <operator pos:line="48" pos:column="22">(<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="23">hi<pos:position pos:line="48" pos:column="25"/></name> <operator pos:line="48" pos:column="26">+<pos:position pos:line="48" pos:column="27"/></operator> <name pos:line="48" pos:column="28">lo<pos:position pos:line="48" pos:column="30"/></name><operator pos:line="48" pos:column="30">)<pos:position pos:line="48" pos:column="31"/></operator> <operator pos:line="48" pos:column="32">/<pos:position pos:line="48" pos:column="33"/></operator> <literal type="number" pos:line="48" pos:column="34">2<pos:position pos:line="48" pos:column="35"/></literal></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block> while <condition pos:line="49" pos:column="17">(<expr><name pos:line="49" pos:column="18">lo<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">&lt;<pos:position pos:line="49" pos:column="25"/></operator> <name pos:line="49" pos:column="23">hi<pos:position pos:line="49" pos:column="25"/></name></expr>)<pos:position pos:line="49" pos:column="26"/></condition>;<pos:position pos:line="49" pos:column="27"/></do>
	<return pos:line="50" pos:column="9">return <expr><operator pos:line="50" pos:column="16">-<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">lo<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">-<pos:position pos:line="50" pos:column="20"/></operator><literal type="number" pos:line="50" pos:column="20">1<pos:position pos:line="50" pos:column="21"/></literal></expr>;<pos:position pos:line="50" pos:column="22"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

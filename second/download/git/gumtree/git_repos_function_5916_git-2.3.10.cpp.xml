<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5916_git-2.3.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">reg_errcode_t<pos:position pos:line="1" pos:column="21"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">re_string_reconstruct<pos:position pos:line="3" pos:column="22"/></name> <parameter_list pos:line="3" pos:column="23">(<parameter><decl><type><name pos:line="3" pos:column="24">re_string_t<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">pstr<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="43">int<pos:position pos:line="3" pos:column="46"/></name></type> <name pos:line="3" pos:column="47">idx<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="52">int<pos:position pos:line="3" pos:column="55"/></name></type> <name pos:line="3" pos:column="56">eflags<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">offset<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name pos:line="5" pos:column="16">idx<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">-<pos:position pos:line="5" pos:column="21"/></operator> <name><name pos:line="5" pos:column="22">pstr<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">raw_mbs_idx<pos:position pos:line="5" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">BE<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument><expr><name pos:line="6" pos:column="11">offset<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">&lt;<pos:position pos:line="6" pos:column="22"/></operator> <literal type="number" pos:line="6" pos:column="20">0<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="23">0<pos:position pos:line="6" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="26"/></condition><then pos:line="6" pos:column="26">
    <block pos:line="7" pos:column="5">{
      <comment type="block" pos:line="8" pos:column="7">/* Reset buffer.  */</comment>
<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">RE_ENABLE_I18N<pos:position pos:line="9" pos:column="22"/></name></cpp:ifdef>
      <if pos:line="10" pos:column="7">if <condition pos:line="10" pos:column="10">(<expr><name><name pos:line="10" pos:column="11">pstr<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">mb_cur_max<pos:position pos:line="10" pos:column="27"/></name></name> <operator pos:line="10" pos:column="28">&gt;<pos:position pos:line="10" pos:column="32"/></operator> <literal type="number" pos:line="10" pos:column="30">1<pos:position pos:line="10" pos:column="31"/></literal></expr>)<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="9">memset<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><operator pos:line="11" pos:column="17">&amp;<pos:position pos:line="11" pos:column="22"/></operator><name><name pos:line="11" pos:column="18">pstr<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">-&gt;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="24">cur_state<pos:position pos:line="11" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="35">'\0'<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="41">sizeof <argument_list pos:line="11" pos:column="48">(<argument><expr><name pos:line="11" pos:column="49">mbstate_t<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="61"/></expr_stmt></block></then></if>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="12" pos:column="8">/* RE_ENABLE_I18N */</comment>
      <expr_stmt><expr><name><name pos:line="13" pos:column="7">pstr<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">len<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <name><name pos:line="13" pos:column="19">pstr<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">raw_len<pos:position pos:line="13" pos:column="32"/></name></name></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="14" pos:column="7">pstr<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">stop<pos:position pos:line="14" pos:column="17"/></name></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <name><name pos:line="14" pos:column="20">pstr<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">raw_stop<pos:position pos:line="14" pos:column="34"/></name></name></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="15" pos:column="7">pstr<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">valid_len<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <literal type="number" pos:line="15" pos:column="25">0<pos:position pos:line="15" pos:column="26"/></literal></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="16" pos:column="7">pstr<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">raw_mbs_idx<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <literal type="number" pos:line="16" pos:column="27">0<pos:position pos:line="16" pos:column="28"/></literal></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">pstr<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">valid_raw_len<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <literal type="number" pos:line="17" pos:column="29">0<pos:position pos:line="17" pos:column="30"/></literal></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="18" pos:column="7">pstr<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">offsets_needed<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <literal type="number" pos:line="18" pos:column="30">0<pos:position pos:line="18" pos:column="31"/></literal></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="19" pos:column="7">pstr<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">tip_context<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <operator pos:line="19" pos:column="27">(<pos:position pos:line="19" pos:column="28"/></operator><ternary><condition><expr><operator pos:line="19" pos:column="28">(<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">eflags<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">&amp;<pos:position pos:line="19" pos:column="41"/></operator> <name pos:line="19" pos:column="38">REG_NOTBOL<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">)<pos:position pos:line="19" pos:column="49"/></operator></expr> ?<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51"> <expr><name pos:line="19" pos:column="52">CONTEXT_BEGBUF<pos:position pos:line="19" pos:column="66"/></name></expr>
			   <pos:position pos:line="20" pos:column="7"/></then><else pos:line="20" pos:column="28">: <expr><name pos:line="20" pos:column="30">CONTEXT_NEWLINE<pos:position pos:line="20" pos:column="45"/></name> <operator pos:line="20" pos:column="46">|<pos:position pos:line="20" pos:column="47"/></operator> <name pos:line="20" pos:column="48">CONTEXT_BEGBUF<pos:position pos:line="20" pos:column="62"/></name></expr></else></ternary><operator pos:line="20" pos:column="62">)<pos:position pos:line="20" pos:column="63"/></operator></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><operator pos:line="21" pos:column="11">!<pos:position pos:line="21" pos:column="12"/></operator><name><name pos:line="21" pos:column="12">pstr<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">mbs_allocated<pos:position pos:line="21" pos:column="31"/></name></name></expr>)<pos:position pos:line="21" pos:column="32"/></condition><then pos:line="21" pos:column="32">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="9">pstr<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">mbs<pos:position pos:line="22" pos:column="18"/></name></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <operator pos:line="22" pos:column="21">(<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">unsigned<pos:position pos:line="22" pos:column="30"/></name> <name pos:line="22" pos:column="31">char<pos:position pos:line="22" pos:column="35"/></name> <operator pos:line="22" pos:column="36">*<pos:position pos:line="22" pos:column="37"/></operator><operator pos:line="22" pos:column="37">)<pos:position pos:line="22" pos:column="38"/></operator> <name><name pos:line="22" pos:column="39">pstr<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">-&gt;<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="45">raw_mbs<pos:position pos:line="22" pos:column="52"/></name></name></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="23" pos:column="7">offset<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">idx<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><call><name pos:line="26" pos:column="7">BE<pos:position pos:line="26" pos:column="9"/></name> <argument_list pos:line="26" pos:column="10">(<argument><expr><name pos:line="26" pos:column="11">offset<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">!=<pos:position pos:line="26" pos:column="20"/></operator> <literal type="number" pos:line="26" pos:column="21">0<pos:position pos:line="26" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="24">1<pos:position pos:line="26" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27">
    <block pos:line="27" pos:column="5">{
      <comment type="block" pos:line="28" pos:column="7">/* Should the already checked characters be kept?  */</comment>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><call><name pos:line="29" pos:column="11">BE<pos:position pos:line="29" pos:column="13"/></name> <argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">offset<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">&lt;<pos:position pos:line="29" pos:column="26"/></operator> <name><name pos:line="29" pos:column="24">pstr<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">valid_raw_len<pos:position pos:line="29" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="45">1<pos:position pos:line="29" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="48"/></condition><then pos:line="29" pos:column="48">
	<block pos:line="30" pos:column="9">{
	  <comment type="block" pos:line="31" pos:column="11">/* Yes, move them to the front of the buffer.  */</comment>
<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef<pos:position pos:line="32" pos:column="7"/></cpp:directive> <name pos:line="32" pos:column="8">RE_ENABLE_I18N<pos:position pos:line="32" pos:column="22"/></name></cpp:ifdef>
	  <if pos:line="33" pos:column="11">if <condition pos:line="33" pos:column="14">(<expr><call><name pos:line="33" pos:column="15">BE<pos:position pos:line="33" pos:column="17"/></name> <argument_list pos:line="33" pos:column="18">(<argument><expr><name><name pos:line="33" pos:column="19">pstr<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">-&gt;<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="25">offsets_needed<pos:position pos:line="33" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="41">0<pos:position pos:line="33" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="44"/></condition><then pos:line="33" pos:column="44">
	    <block pos:line="34" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="35" pos:column="15">int<pos:position pos:line="35" pos:column="18"/></name></type> <name pos:line="35" pos:column="19">low<pos:position pos:line="35" pos:column="22"/></name> <init pos:line="35" pos:column="23">= <expr><literal type="number" pos:line="35" pos:column="25">0<pos:position pos:line="35" pos:column="26"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="35" pos:column="28">high<pos:position pos:line="35" pos:column="32"/></name> <init pos:line="35" pos:column="33">= <expr><name><name pos:line="35" pos:column="35">pstr<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">-&gt;<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="41">valid_len<pos:position pos:line="35" pos:column="50"/></name></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="35" pos:column="52">mid<pos:position pos:line="35" pos:column="55"/></name></decl>;<pos:position pos:line="35" pos:column="56"/></decl_stmt>
	      <do pos:line="36" pos:column="15">do
		<block pos:line="37" pos:column="17">{
		  <expr_stmt><expr><name pos:line="38" pos:column="19">mid<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <operator pos:line="38" pos:column="25">(<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">high<pos:position pos:line="38" pos:column="30"/></name> <operator pos:line="38" pos:column="31">+<pos:position pos:line="38" pos:column="32"/></operator> <name pos:line="38" pos:column="33">low<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">)<pos:position pos:line="38" pos:column="37"/></operator> <operator pos:line="38" pos:column="38">/<pos:position pos:line="38" pos:column="39"/></operator> <literal type="number" pos:line="38" pos:column="40">2<pos:position pos:line="38" pos:column="41"/></literal></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
		  <if pos:line="39" pos:column="19">if <condition pos:line="39" pos:column="22">(<expr><name><name pos:line="39" pos:column="23">pstr<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">offsets<pos:position pos:line="39" pos:column="36"/></name><index pos:line="39" pos:column="36">[<expr><name pos:line="39" pos:column="37">mid<pos:position pos:line="39" pos:column="40"/></name></expr>]<pos:position pos:line="39" pos:column="41"/></index></name> <operator pos:line="39" pos:column="42">&gt;<pos:position pos:line="39" pos:column="46"/></operator> <name pos:line="39" pos:column="44">offset<pos:position pos:line="39" pos:column="50"/></name></expr>)<pos:position pos:line="39" pos:column="51"/></condition><then pos:line="39" pos:column="51">
		    <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="21">high<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">=<pos:position pos:line="40" pos:column="27"/></operator> <name pos:line="40" pos:column="28">mid<pos:position pos:line="40" pos:column="31"/></name></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt></block></then>
		  <elseif pos:line="41" pos:column="19">else <if pos:line="41" pos:column="24">if <condition pos:line="41" pos:column="27">(<expr><name><name pos:line="41" pos:column="28">pstr<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">-&gt;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="34">offsets<pos:position pos:line="41" pos:column="41"/></name><index pos:line="41" pos:column="41">[<expr><name pos:line="41" pos:column="42">mid<pos:position pos:line="41" pos:column="45"/></name></expr>]<pos:position pos:line="41" pos:column="46"/></index></name> <operator pos:line="41" pos:column="47">&lt;<pos:position pos:line="41" pos:column="51"/></operator> <name pos:line="41" pos:column="49">offset<pos:position pos:line="41" pos:column="55"/></name></expr>)<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56">
		    <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="21">low<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <name pos:line="42" pos:column="27">mid<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">+<pos:position pos:line="42" pos:column="32"/></operator> <literal type="number" pos:line="42" pos:column="33">1<pos:position pos:line="42" pos:column="34"/></literal></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt></block></then></if></elseif>
		  <else pos:line="43" pos:column="19">else
		    <block type="pseudo"><break pos:line="44" pos:column="21">break;<pos:position pos:line="44" pos:column="27"/></break></block></else></if>
		}<pos:position pos:line="45" pos:column="18"/></block>
	      while <condition pos:line="46" pos:column="21">(<expr><name pos:line="46" pos:column="22">low<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">&lt;<pos:position pos:line="46" pos:column="30"/></operator> <name pos:line="46" pos:column="28">high<pos:position pos:line="46" pos:column="32"/></name></expr>)<pos:position pos:line="46" pos:column="33"/></condition>;<pos:position pos:line="46" pos:column="34"/></do>
	      <if pos:line="47" pos:column="15">if <condition pos:line="47" pos:column="18">(<expr><name><name pos:line="47" pos:column="19">pstr<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">-&gt;<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="25">offsets<pos:position pos:line="47" pos:column="32"/></name><index pos:line="47" pos:column="32">[<expr><name pos:line="47" pos:column="33">mid<pos:position pos:line="47" pos:column="36"/></name></expr>]<pos:position pos:line="47" pos:column="37"/></index></name> <operator pos:line="47" pos:column="38">&lt;<pos:position pos:line="47" pos:column="42"/></operator> <name pos:line="47" pos:column="40">offset<pos:position pos:line="47" pos:column="46"/></name></expr>)<pos:position pos:line="47" pos:column="47"/></condition><then pos:line="47" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="48" pos:column="17">++<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="19">mid<pos:position pos:line="48" pos:column="22"/></name></expr>;<pos:position pos:line="48" pos:column="23"/></expr_stmt></block></then></if>
	      <expr_stmt><expr><name><name pos:line="49" pos:column="15">pstr<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">-&gt;<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="21">tip_context<pos:position pos:line="49" pos:column="32"/></name></name> <operator pos:line="49" pos:column="33">=<pos:position pos:line="49" pos:column="34"/></operator> <call><name pos:line="49" pos:column="35">re_string_context_at<pos:position pos:line="49" pos:column="55"/></name> <argument_list pos:line="49" pos:column="56">(<argument><expr><name pos:line="49" pos:column="57">pstr<pos:position pos:line="49" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="63">mid<pos:position pos:line="49" pos:column="66"/></name> <operator pos:line="49" pos:column="67">-<pos:position pos:line="49" pos:column="68"/></operator> <literal type="number" pos:line="49" pos:column="69">1<pos:position pos:line="49" pos:column="70"/></literal></expr></argument>,
							<argument><expr><name pos:line="50" pos:column="57">eflags<pos:position pos:line="50" pos:column="63"/></name></expr></argument>)<pos:position pos:line="50" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="65"/></expr_stmt>
	      <comment type="block" pos:line="51" pos:column="15">/* This can be quite complicated, so handle specially
		 only the common and easy case where the character with
		 different length representation of lower and upper
		 case is present at or after offset.  */</comment>
	      <if pos:line="55" pos:column="15">if <condition pos:line="55" pos:column="18">(<expr><name><name pos:line="55" pos:column="19">pstr<pos:position pos:line="55" pos:column="23"/></name><operator pos:line="55" pos:column="23">-&gt;<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="25">valid_len<pos:position pos:line="55" pos:column="34"/></name></name> <operator pos:line="55" pos:column="35">&gt;<pos:position pos:line="55" pos:column="39"/></operator> <name pos:line="55" pos:column="37">offset<pos:position pos:line="55" pos:column="43"/></name>
		  <operator pos:line="56" pos:column="19">&amp;&amp;<pos:position pos:line="56" pos:column="29"/></operator> <name pos:line="56" pos:column="22">mid<pos:position pos:line="56" pos:column="25"/></name> <operator pos:line="56" pos:column="26">==<pos:position pos:line="56" pos:column="28"/></operator> <name pos:line="56" pos:column="29">offset<pos:position pos:line="56" pos:column="35"/></name> <operator pos:line="56" pos:column="36">&amp;&amp;<pos:position pos:line="56" pos:column="46"/></operator> <name><name pos:line="56" pos:column="39">pstr<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">-&gt;<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="45">offsets<pos:position pos:line="56" pos:column="52"/></name><index pos:line="56" pos:column="52">[<expr><name pos:line="56" pos:column="53">mid<pos:position pos:line="56" pos:column="56"/></name></expr>]<pos:position pos:line="56" pos:column="57"/></index></name> <operator pos:line="56" pos:column="58">==<pos:position pos:line="56" pos:column="60"/></operator> <name pos:line="56" pos:column="61">offset<pos:position pos:line="56" pos:column="67"/></name></expr>)<pos:position pos:line="56" pos:column="68"/></condition><then pos:line="56" pos:column="68">
		<block pos:line="57" pos:column="17">{
		  <expr_stmt><expr><call><name pos:line="58" pos:column="19">memmove<pos:position pos:line="58" pos:column="26"/></name> <argument_list pos:line="58" pos:column="27">(<argument><expr><name><name pos:line="58" pos:column="28">pstr<pos:position pos:line="58" pos:column="32"/></name><operator pos:line="58" pos:column="32">-&gt;<pos:position pos:line="58" pos:column="37"/></operator><name pos:line="58" pos:column="34">wcs<pos:position pos:line="58" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="39">pstr<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">wcs<pos:position pos:line="58" pos:column="48"/></name></name> <operator pos:line="58" pos:column="49">+<pos:position pos:line="58" pos:column="50"/></operator> <name pos:line="58" pos:column="51">offset<pos:position pos:line="58" pos:column="57"/></name></expr></argument>,
			   <argument><expr><operator pos:line="59" pos:column="28">(<pos:position pos:line="59" pos:column="29"/></operator><name><name pos:line="59" pos:column="29">pstr<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">-&gt;<pos:position pos:line="59" pos:column="38"/></operator><name pos:line="59" pos:column="35">valid_len<pos:position pos:line="59" pos:column="44"/></name></name> <operator pos:line="59" pos:column="45">-<pos:position pos:line="59" pos:column="46"/></operator> <name pos:line="59" pos:column="47">offset<pos:position pos:line="59" pos:column="53"/></name><operator pos:line="59" pos:column="53">)<pos:position pos:line="59" pos:column="54"/></operator> <operator pos:line="59" pos:column="55">*<pos:position pos:line="59" pos:column="56"/></operator> <sizeof pos:line="59" pos:column="57">sizeof <argument_list pos:line="59" pos:column="64">(<argument><expr><name pos:line="59" pos:column="65">wint_t<pos:position pos:line="59" pos:column="71"/></name></expr></argument>)<pos:position pos:line="59" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="74"/></expr_stmt>
		  <expr_stmt><expr><call><name pos:line="60" pos:column="19">memmove<pos:position pos:line="60" pos:column="26"/></name> <argument_list pos:line="60" pos:column="27">(<argument><expr><name><name pos:line="60" pos:column="28">pstr<pos:position pos:line="60" pos:column="32"/></name><operator pos:line="60" pos:column="32">-&gt;<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="34">mbs<pos:position pos:line="60" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="39">pstr<pos:position pos:line="60" pos:column="43"/></name><operator pos:line="60" pos:column="43">-&gt;<pos:position pos:line="60" pos:column="48"/></operator><name pos:line="60" pos:column="45">mbs<pos:position pos:line="60" pos:column="48"/></name></name> <operator pos:line="60" pos:column="49">+<pos:position pos:line="60" pos:column="50"/></operator> <name pos:line="60" pos:column="51">offset<pos:position pos:line="60" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="59">pstr<pos:position pos:line="60" pos:column="63"/></name><operator pos:line="60" pos:column="63">-&gt;<pos:position pos:line="60" pos:column="68"/></operator><name pos:line="60" pos:column="65">valid_len<pos:position pos:line="60" pos:column="74"/></name></name> <operator pos:line="60" pos:column="75">-<pos:position pos:line="60" pos:column="76"/></operator> <name pos:line="60" pos:column="77">offset<pos:position pos:line="60" pos:column="83"/></name></expr></argument>)<pos:position pos:line="60" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="85"/></expr_stmt>
		  <expr_stmt><expr><name><name pos:line="61" pos:column="19">pstr<pos:position pos:line="61" pos:column="23"/></name><operator pos:line="61" pos:column="23">-&gt;<pos:position pos:line="61" pos:column="28"/></operator><name pos:line="61" pos:column="25">valid_len<pos:position pos:line="61" pos:column="34"/></name></name> <operator pos:line="61" pos:column="35">-=<pos:position pos:line="61" pos:column="37"/></operator> <name pos:line="61" pos:column="38">offset<pos:position pos:line="61" pos:column="44"/></name></expr>;<pos:position pos:line="61" pos:column="45"/></expr_stmt>
		  <expr_stmt><expr><name><name pos:line="62" pos:column="19">pstr<pos:position pos:line="62" pos:column="23"/></name><operator pos:line="62" pos:column="23">-&gt;<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="25">valid_raw_len<pos:position pos:line="62" pos:column="38"/></name></name> <operator pos:line="62" pos:column="39">-=<pos:position pos:line="62" pos:column="41"/></operator> <name pos:line="62" pos:column="42">offset<pos:position pos:line="62" pos:column="48"/></name></expr>;<pos:position pos:line="62" pos:column="49"/></expr_stmt>
		  <for pos:line="63" pos:column="19">for <control pos:line="63" pos:column="23">(<init><expr><name pos:line="63" pos:column="24">low<pos:position pos:line="63" pos:column="27"/></name> <operator pos:line="63" pos:column="28">=<pos:position pos:line="63" pos:column="29"/></operator> <literal type="number" pos:line="63" pos:column="30">0<pos:position pos:line="63" pos:column="31"/></literal></expr>;<pos:position pos:line="63" pos:column="32"/></init> <condition><expr><name pos:line="63" pos:column="33">low<pos:position pos:line="63" pos:column="36"/></name> <operator pos:line="63" pos:column="37">&lt;<pos:position pos:line="63" pos:column="41"/></operator> <name><name pos:line="63" pos:column="39">pstr<pos:position pos:line="63" pos:column="43"/></name><operator pos:line="63" pos:column="43">-&gt;<pos:position pos:line="63" pos:column="48"/></operator><name pos:line="63" pos:column="45">valid_len<pos:position pos:line="63" pos:column="54"/></name></name></expr>;<pos:position pos:line="63" pos:column="55"/></condition> <incr><expr><name pos:line="63" pos:column="56">low<pos:position pos:line="63" pos:column="59"/></name><operator pos:line="63" pos:column="59">++<pos:position pos:line="63" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="63" pos:column="62"/></control>
		    <block type="pseudo"><expr_stmt><expr><name><name pos:line="64" pos:column="21">pstr<pos:position pos:line="64" pos:column="25"/></name><operator pos:line="64" pos:column="25">-&gt;<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="27">offsets<pos:position pos:line="64" pos:column="34"/></name><index pos:line="64" pos:column="34">[<expr><name pos:line="64" pos:column="35">low<pos:position pos:line="64" pos:column="38"/></name></expr>]<pos:position pos:line="64" pos:column="39"/></index></name> <operator pos:line="64" pos:column="40">=<pos:position pos:line="64" pos:column="41"/></operator> <name><name pos:line="64" pos:column="42">pstr<pos:position pos:line="64" pos:column="46"/></name><operator pos:line="64" pos:column="46">-&gt;<pos:position pos:line="64" pos:column="51"/></operator><name pos:line="64" pos:column="48">offsets<pos:position pos:line="64" pos:column="55"/></name><index pos:line="64" pos:column="55">[<expr><name pos:line="64" pos:column="56">low<pos:position pos:line="64" pos:column="59"/></name> <operator pos:line="64" pos:column="60">+<pos:position pos:line="64" pos:column="61"/></operator> <name pos:line="64" pos:column="62">offset<pos:position pos:line="64" pos:column="68"/></name></expr>]<pos:position pos:line="64" pos:column="69"/></index></name> <operator pos:line="64" pos:column="70">-<pos:position pos:line="64" pos:column="71"/></operator> <name pos:line="64" pos:column="72">offset<pos:position pos:line="64" pos:column="78"/></name></expr>;<pos:position pos:line="64" pos:column="79"/></expr_stmt></block></for>
		}<pos:position pos:line="65" pos:column="18"/></block></then>
	      <else pos:line="66" pos:column="15">else
		<block pos:line="67" pos:column="17">{
		  <comment type="block" pos:line="68" pos:column="19">/* Otherwise, just find out how long the partial multibyte
		     character at offset is and fill it with WEOF/255.  */</comment>
		  <expr_stmt><expr><name><name pos:line="70" pos:column="19">pstr<pos:position pos:line="70" pos:column="23"/></name><operator pos:line="70" pos:column="23">-&gt;<pos:position pos:line="70" pos:column="28"/></operator><name pos:line="70" pos:column="25">len<pos:position pos:line="70" pos:column="28"/></name></name> <operator pos:line="70" pos:column="29">=<pos:position pos:line="70" pos:column="30"/></operator> <name><name pos:line="70" pos:column="31">pstr<pos:position pos:line="70" pos:column="35"/></name><operator pos:line="70" pos:column="35">-&gt;<pos:position pos:line="70" pos:column="40"/></operator><name pos:line="70" pos:column="37">raw_len<pos:position pos:line="70" pos:column="44"/></name></name> <operator pos:line="70" pos:column="45">-<pos:position pos:line="70" pos:column="46"/></operator> <name pos:line="70" pos:column="47">idx<pos:position pos:line="70" pos:column="50"/></name> <operator pos:line="70" pos:column="51">+<pos:position pos:line="70" pos:column="52"/></operator> <name pos:line="70" pos:column="53">offset<pos:position pos:line="70" pos:column="59"/></name></expr>;<pos:position pos:line="70" pos:column="60"/></expr_stmt>
		  <expr_stmt><expr><name><name pos:line="71" pos:column="19">pstr<pos:position pos:line="71" pos:column="23"/></name><operator pos:line="71" pos:column="23">-&gt;<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="25">stop<pos:position pos:line="71" pos:column="29"/></name></name> <operator pos:line="71" pos:column="30">=<pos:position pos:line="71" pos:column="31"/></operator> <name><name pos:line="71" pos:column="32">pstr<pos:position pos:line="71" pos:column="36"/></name><operator pos:line="71" pos:column="36">-&gt;<pos:position pos:line="71" pos:column="41"/></operator><name pos:line="71" pos:column="38">raw_stop<pos:position pos:line="71" pos:column="46"/></name></name> <operator pos:line="71" pos:column="47">-<pos:position pos:line="71" pos:column="48"/></operator> <name pos:line="71" pos:column="49">idx<pos:position pos:line="71" pos:column="52"/></name> <operator pos:line="71" pos:column="53">+<pos:position pos:line="71" pos:column="54"/></operator> <name pos:line="71" pos:column="55">offset<pos:position pos:line="71" pos:column="61"/></name></expr>;<pos:position pos:line="71" pos:column="62"/></expr_stmt>
		  <expr_stmt><expr><name><name pos:line="72" pos:column="19">pstr<pos:position pos:line="72" pos:column="23"/></name><operator pos:line="72" pos:column="23">-&gt;<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="25">offsets_needed<pos:position pos:line="72" pos:column="39"/></name></name> <operator pos:line="72" pos:column="40">=<pos:position pos:line="72" pos:column="41"/></operator> <literal type="number" pos:line="72" pos:column="42">0<pos:position pos:line="72" pos:column="43"/></literal></expr>;<pos:position pos:line="72" pos:column="44"/></expr_stmt>
		  <while pos:line="73" pos:column="19">while <condition pos:line="73" pos:column="25">(<expr><name pos:line="73" pos:column="26">mid<pos:position pos:line="73" pos:column="29"/></name> <operator pos:line="73" pos:column="30">&gt;<pos:position pos:line="73" pos:column="34"/></operator> <literal type="number" pos:line="73" pos:column="32">0<pos:position pos:line="73" pos:column="33"/></literal> <operator pos:line="73" pos:column="34">&amp;&amp;<pos:position pos:line="73" pos:column="44"/></operator> <name><name pos:line="73" pos:column="37">pstr<pos:position pos:line="73" pos:column="41"/></name><operator pos:line="73" pos:column="41">-&gt;<pos:position pos:line="73" pos:column="46"/></operator><name pos:line="73" pos:column="43">offsets<pos:position pos:line="73" pos:column="50"/></name><index pos:line="73" pos:column="50">[<expr><name pos:line="73" pos:column="51">mid<pos:position pos:line="73" pos:column="54"/></name> <operator pos:line="73" pos:column="55">-<pos:position pos:line="73" pos:column="56"/></operator> <literal type="number" pos:line="73" pos:column="57">1<pos:position pos:line="73" pos:column="58"/></literal></expr>]<pos:position pos:line="73" pos:column="59"/></index></name> <operator pos:line="73" pos:column="60">==<pos:position pos:line="73" pos:column="62"/></operator> <name pos:line="73" pos:column="63">offset<pos:position pos:line="73" pos:column="69"/></name></expr>)<pos:position pos:line="73" pos:column="70"/></condition>
		    <block type="pseudo"><expr_stmt><expr><operator pos:line="74" pos:column="21">--<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="23">mid<pos:position pos:line="74" pos:column="26"/></name></expr>;<pos:position pos:line="74" pos:column="27"/></expr_stmt></block></while>
		  <while pos:line="75" pos:column="19">while <condition pos:line="75" pos:column="25">(<expr><name pos:line="75" pos:column="26">mid<pos:position pos:line="75" pos:column="29"/></name> <operator pos:line="75" pos:column="30">&lt;<pos:position pos:line="75" pos:column="34"/></operator> <name><name pos:line="75" pos:column="32">pstr<pos:position pos:line="75" pos:column="36"/></name><operator pos:line="75" pos:column="36">-&gt;<pos:position pos:line="75" pos:column="41"/></operator><name pos:line="75" pos:column="38">valid_len<pos:position pos:line="75" pos:column="47"/></name></name></expr>)<pos:position pos:line="75" pos:column="48"/></condition>
		    <block type="pseudo"><if pos:line="76" pos:column="21">if <condition pos:line="76" pos:column="24">(<expr><name><name pos:line="76" pos:column="25">pstr<pos:position pos:line="76" pos:column="29"/></name><operator pos:line="76" pos:column="29">-&gt;<pos:position pos:line="76" pos:column="34"/></operator><name pos:line="76" pos:column="31">wcs<pos:position pos:line="76" pos:column="34"/></name><index pos:line="76" pos:column="34">[<expr><name pos:line="76" pos:column="35">mid<pos:position pos:line="76" pos:column="38"/></name></expr>]<pos:position pos:line="76" pos:column="39"/></index></name> <operator pos:line="76" pos:column="40">!=<pos:position pos:line="76" pos:column="42"/></operator> <name pos:line="76" pos:column="43">WEOF<pos:position pos:line="76" pos:column="47"/></name></expr>)<pos:position pos:line="76" pos:column="48"/></condition><then pos:line="76" pos:column="48">
		      <block type="pseudo"><break pos:line="77" pos:column="23">break;<pos:position pos:line="77" pos:column="29"/></break></block></then>
		    <else pos:line="78" pos:column="21">else
		      <block type="pseudo"><expr_stmt><expr><operator pos:line="79" pos:column="23">++<pos:position pos:line="79" pos:column="25"/></operator><name pos:line="79" pos:column="25">mid<pos:position pos:line="79" pos:column="28"/></name></expr>;<pos:position pos:line="79" pos:column="29"/></expr_stmt></block></else></if></block></while>
		  <if pos:line="80" pos:column="19">if <condition pos:line="80" pos:column="22">(<expr><name pos:line="80" pos:column="23">mid<pos:position pos:line="80" pos:column="26"/></name> <operator pos:line="80" pos:column="27">==<pos:position pos:line="80" pos:column="29"/></operator> <name><name pos:line="80" pos:column="30">pstr<pos:position pos:line="80" pos:column="34"/></name><operator pos:line="80" pos:column="34">-&gt;<pos:position pos:line="80" pos:column="39"/></operator><name pos:line="80" pos:column="36">valid_len<pos:position pos:line="80" pos:column="45"/></name></name></expr>)<pos:position pos:line="80" pos:column="46"/></condition><then pos:line="80" pos:column="46">
		    <block type="pseudo"><expr_stmt><expr><name><name pos:line="81" pos:column="21">pstr<pos:position pos:line="81" pos:column="25"/></name><operator pos:line="81" pos:column="25">-&gt;<pos:position pos:line="81" pos:column="30"/></operator><name pos:line="81" pos:column="27">valid_len<pos:position pos:line="81" pos:column="36"/></name></name> <operator pos:line="81" pos:column="37">=<pos:position pos:line="81" pos:column="38"/></operator> <literal type="number" pos:line="81" pos:column="39">0<pos:position pos:line="81" pos:column="40"/></literal></expr>;<pos:position pos:line="81" pos:column="41"/></expr_stmt></block></then>
		  <else pos:line="82" pos:column="19">else
		    <block pos:line="83" pos:column="21">{
		      <expr_stmt><expr><name><name pos:line="84" pos:column="23">pstr<pos:position pos:line="84" pos:column="27"/></name><operator pos:line="84" pos:column="27">-&gt;<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="29">valid_len<pos:position pos:line="84" pos:column="38"/></name></name> <operator pos:line="84" pos:column="39">=<pos:position pos:line="84" pos:column="40"/></operator> <name><name pos:line="84" pos:column="41">pstr<pos:position pos:line="84" pos:column="45"/></name><operator pos:line="84" pos:column="45">-&gt;<pos:position pos:line="84" pos:column="50"/></operator><name pos:line="84" pos:column="47">offsets<pos:position pos:line="84" pos:column="54"/></name><index pos:line="84" pos:column="54">[<expr><name pos:line="84" pos:column="55">mid<pos:position pos:line="84" pos:column="58"/></name></expr>]<pos:position pos:line="84" pos:column="59"/></index></name> <operator pos:line="84" pos:column="60">-<pos:position pos:line="84" pos:column="61"/></operator> <name pos:line="84" pos:column="62">offset<pos:position pos:line="84" pos:column="68"/></name></expr>;<pos:position pos:line="84" pos:column="69"/></expr_stmt>
		      <if pos:line="85" pos:column="23">if <condition pos:line="85" pos:column="26">(<expr><name><name pos:line="85" pos:column="27">pstr<pos:position pos:line="85" pos:column="31"/></name><operator pos:line="85" pos:column="31">-&gt;<pos:position pos:line="85" pos:column="36"/></operator><name pos:line="85" pos:column="33">valid_len<pos:position pos:line="85" pos:column="42"/></name></name></expr>)<pos:position pos:line="85" pos:column="43"/></condition><then pos:line="85" pos:column="43">
			<block pos:line="86" pos:column="25">{
			  <for pos:line="87" pos:column="27">for <control pos:line="87" pos:column="31">(<init><expr><name pos:line="87" pos:column="32">low<pos:position pos:line="87" pos:column="35"/></name> <operator pos:line="87" pos:column="36">=<pos:position pos:line="87" pos:column="37"/></operator> <literal type="number" pos:line="87" pos:column="38">0<pos:position pos:line="87" pos:column="39"/></literal></expr>;<pos:position pos:line="87" pos:column="40"/></init> <condition><expr><name pos:line="87" pos:column="41">low<pos:position pos:line="87" pos:column="44"/></name> <operator pos:line="87" pos:column="45">&lt;<pos:position pos:line="87" pos:column="49"/></operator> <name><name pos:line="87" pos:column="47">pstr<pos:position pos:line="87" pos:column="51"/></name><operator pos:line="87" pos:column="51">-&gt;<pos:position pos:line="87" pos:column="56"/></operator><name pos:line="87" pos:column="53">valid_len<pos:position pos:line="87" pos:column="62"/></name></name></expr>;<pos:position pos:line="87" pos:column="63"/></condition> <incr><expr><operator pos:line="87" pos:column="64">++<pos:position pos:line="87" pos:column="66"/></operator><name pos:line="87" pos:column="66">low<pos:position pos:line="87" pos:column="69"/></name></expr></incr>)<pos:position pos:line="87" pos:column="70"/></control>
			    <block type="pseudo"><expr_stmt><expr><name><name pos:line="88" pos:column="29">pstr<pos:position pos:line="88" pos:column="33"/></name><operator pos:line="88" pos:column="33">-&gt;<pos:position pos:line="88" pos:column="38"/></operator><name pos:line="88" pos:column="35">wcs<pos:position pos:line="88" pos:column="38"/></name><index pos:line="88" pos:column="38">[<expr><name pos:line="88" pos:column="39">low<pos:position pos:line="88" pos:column="42"/></name></expr>]<pos:position pos:line="88" pos:column="43"/></index></name> <operator pos:line="88" pos:column="44">=<pos:position pos:line="88" pos:column="45"/></operator> <name pos:line="88" pos:column="46">WEOF<pos:position pos:line="88" pos:column="50"/></name></expr>;<pos:position pos:line="88" pos:column="51"/></expr_stmt></block></for>
			  <expr_stmt><expr><call><name pos:line="89" pos:column="27">memset<pos:position pos:line="89" pos:column="33"/></name> <argument_list pos:line="89" pos:column="34">(<argument><expr><name><name pos:line="89" pos:column="35">pstr<pos:position pos:line="89" pos:column="39"/></name><operator pos:line="89" pos:column="39">-&gt;<pos:position pos:line="89" pos:column="44"/></operator><name pos:line="89" pos:column="41">mbs<pos:position pos:line="89" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="46">255<pos:position pos:line="89" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="51">pstr<pos:position pos:line="89" pos:column="55"/></name><operator pos:line="89" pos:column="55">-&gt;<pos:position pos:line="89" pos:column="60"/></operator><name pos:line="89" pos:column="57">valid_len<pos:position pos:line="89" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="68"/></expr_stmt>
			}<pos:position pos:line="90" pos:column="26"/></block></then></if>
		    }<pos:position pos:line="91" pos:column="22"/></block></else></if>
		  <expr_stmt><expr><name><name pos:line="92" pos:column="19">pstr<pos:position pos:line="92" pos:column="23"/></name><operator pos:line="92" pos:column="23">-&gt;<pos:position pos:line="92" pos:column="28"/></operator><name pos:line="92" pos:column="25">valid_raw_len<pos:position pos:line="92" pos:column="38"/></name></name> <operator pos:line="92" pos:column="39">=<pos:position pos:line="92" pos:column="40"/></operator> <name><name pos:line="92" pos:column="41">pstr<pos:position pos:line="92" pos:column="45"/></name><operator pos:line="92" pos:column="45">-&gt;<pos:position pos:line="92" pos:column="50"/></operator><name pos:line="92" pos:column="47">valid_len<pos:position pos:line="92" pos:column="56"/></name></name></expr>;<pos:position pos:line="92" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="93" pos:column="18"/></block></else></if>
	    }<pos:position pos:line="94" pos:column="14"/></block></then>
	  <else pos:line="95" pos:column="11">else
<cpp:endif pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">endif<pos:position pos:line="96" pos:column="7"/></cpp:directive></cpp:endif>
	    <block pos:line="97" pos:column="13">{
	      <expr_stmt><expr><name><name pos:line="98" pos:column="15">pstr<pos:position pos:line="98" pos:column="19"/></name><operator pos:line="98" pos:column="19">-&gt;<pos:position pos:line="98" pos:column="24"/></operator><name pos:line="98" pos:column="21">tip_context<pos:position pos:line="98" pos:column="32"/></name></name> <operator pos:line="98" pos:column="33">=<pos:position pos:line="98" pos:column="34"/></operator> <call><name pos:line="98" pos:column="35">re_string_context_at<pos:position pos:line="98" pos:column="55"/></name> <argument_list pos:line="98" pos:column="56">(<argument><expr><name pos:line="98" pos:column="57">pstr<pos:position pos:line="98" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="63">offset<pos:position pos:line="98" pos:column="69"/></name> <operator pos:line="98" pos:column="70">-<pos:position pos:line="98" pos:column="71"/></operator> <literal type="number" pos:line="98" pos:column="72">1<pos:position pos:line="98" pos:column="73"/></literal></expr></argument>,
							<argument><expr><name pos:line="99" pos:column="57">eflags<pos:position pos:line="99" pos:column="63"/></name></expr></argument>)<pos:position pos:line="99" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="65"/></expr_stmt>
<cpp:ifdef pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">ifdef<pos:position pos:line="100" pos:column="7"/></cpp:directive> <name pos:line="100" pos:column="8">RE_ENABLE_I18N<pos:position pos:line="100" pos:column="22"/></name></cpp:ifdef>
	      <if pos:line="101" pos:column="15">if <condition pos:line="101" pos:column="18">(<expr><name><name pos:line="101" pos:column="19">pstr<pos:position pos:line="101" pos:column="23"/></name><operator pos:line="101" pos:column="23">-&gt;<pos:position pos:line="101" pos:column="28"/></operator><name pos:line="101" pos:column="25">mb_cur_max<pos:position pos:line="101" pos:column="35"/></name></name> <operator pos:line="101" pos:column="36">&gt;<pos:position pos:line="101" pos:column="40"/></operator> <literal type="number" pos:line="101" pos:column="38">1<pos:position pos:line="101" pos:column="39"/></literal></expr>)<pos:position pos:line="101" pos:column="40"/></condition><then pos:line="101" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="17">memmove<pos:position pos:line="102" pos:column="24"/></name> <argument_list pos:line="102" pos:column="25">(<argument><expr><name><name pos:line="102" pos:column="26">pstr<pos:position pos:line="102" pos:column="30"/></name><operator pos:line="102" pos:column="30">-&gt;<pos:position pos:line="102" pos:column="35"/></operator><name pos:line="102" pos:column="32">wcs<pos:position pos:line="102" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="37">pstr<pos:position pos:line="102" pos:column="41"/></name><operator pos:line="102" pos:column="41">-&gt;<pos:position pos:line="102" pos:column="46"/></operator><name pos:line="102" pos:column="43">wcs<pos:position pos:line="102" pos:column="46"/></name></name> <operator pos:line="102" pos:column="47">+<pos:position pos:line="102" pos:column="48"/></operator> <name pos:line="102" pos:column="49">offset<pos:position pos:line="102" pos:column="55"/></name></expr></argument>,
			 <argument><expr><operator pos:line="103" pos:column="26">(<pos:position pos:line="103" pos:column="27"/></operator><name><name pos:line="103" pos:column="27">pstr<pos:position pos:line="103" pos:column="31"/></name><operator pos:line="103" pos:column="31">-&gt;<pos:position pos:line="103" pos:column="36"/></operator><name pos:line="103" pos:column="33">valid_len<pos:position pos:line="103" pos:column="42"/></name></name> <operator pos:line="103" pos:column="43">-<pos:position pos:line="103" pos:column="44"/></operator> <name pos:line="103" pos:column="45">offset<pos:position pos:line="103" pos:column="51"/></name><operator pos:line="103" pos:column="51">)<pos:position pos:line="103" pos:column="52"/></operator> <operator pos:line="103" pos:column="53">*<pos:position pos:line="103" pos:column="54"/></operator> <sizeof pos:line="103" pos:column="55">sizeof <argument_list pos:line="103" pos:column="62">(<argument><expr><name pos:line="103" pos:column="63">wint_t<pos:position pos:line="103" pos:column="69"/></name></expr></argument>)<pos:position pos:line="103" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="103" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="72"/></expr_stmt></block></then></if>
<cpp:endif pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">endif<pos:position pos:line="104" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="104" pos:column="8">/* RE_ENABLE_I18N */</comment>
	      <if pos:line="105" pos:column="15">if <condition pos:line="105" pos:column="18">(<expr><call><name pos:line="105" pos:column="19">BE<pos:position pos:line="105" pos:column="21"/></name> <argument_list pos:line="105" pos:column="22">(<argument><expr><name><name pos:line="105" pos:column="23">pstr<pos:position pos:line="105" pos:column="27"/></name><operator pos:line="105" pos:column="27">-&gt;<pos:position pos:line="105" pos:column="32"/></operator><name pos:line="105" pos:column="29">mbs_allocated<pos:position pos:line="105" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="105" pos:column="44">0<pos:position pos:line="105" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="47"/></condition><then pos:line="105" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="106" pos:column="17">memmove<pos:position pos:line="106" pos:column="24"/></name> <argument_list pos:line="106" pos:column="25">(<argument><expr><name><name pos:line="106" pos:column="26">pstr<pos:position pos:line="106" pos:column="30"/></name><operator pos:line="106" pos:column="30">-&gt;<pos:position pos:line="106" pos:column="35"/></operator><name pos:line="106" pos:column="32">mbs<pos:position pos:line="106" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="37">pstr<pos:position pos:line="106" pos:column="41"/></name><operator pos:line="106" pos:column="41">-&gt;<pos:position pos:line="106" pos:column="46"/></operator><name pos:line="106" pos:column="43">mbs<pos:position pos:line="106" pos:column="46"/></name></name> <operator pos:line="106" pos:column="47">+<pos:position pos:line="106" pos:column="48"/></operator> <name pos:line="106" pos:column="49">offset<pos:position pos:line="106" pos:column="55"/></name></expr></argument>,
			 <argument><expr><name><name pos:line="107" pos:column="26">pstr<pos:position pos:line="107" pos:column="30"/></name><operator pos:line="107" pos:column="30">-&gt;<pos:position pos:line="107" pos:column="35"/></operator><name pos:line="107" pos:column="32">valid_len<pos:position pos:line="107" pos:column="41"/></name></name> <operator pos:line="107" pos:column="42">-<pos:position pos:line="107" pos:column="43"/></operator> <name pos:line="107" pos:column="44">offset<pos:position pos:line="107" pos:column="50"/></name></expr></argument>)<pos:position pos:line="107" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="52"/></expr_stmt></block></then></if>
	      <expr_stmt><expr><name><name pos:line="108" pos:column="15">pstr<pos:position pos:line="108" pos:column="19"/></name><operator pos:line="108" pos:column="19">-&gt;<pos:position pos:line="108" pos:column="24"/></operator><name pos:line="108" pos:column="21">valid_len<pos:position pos:line="108" pos:column="30"/></name></name> <operator pos:line="108" pos:column="31">-=<pos:position pos:line="108" pos:column="33"/></operator> <name pos:line="108" pos:column="34">offset<pos:position pos:line="108" pos:column="40"/></name></expr>;<pos:position pos:line="108" pos:column="41"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="109" pos:column="15">pstr<pos:position pos:line="109" pos:column="19"/></name><operator pos:line="109" pos:column="19">-&gt;<pos:position pos:line="109" pos:column="24"/></operator><name pos:line="109" pos:column="21">valid_raw_len<pos:position pos:line="109" pos:column="34"/></name></name> <operator pos:line="109" pos:column="35">-=<pos:position pos:line="109" pos:column="37"/></operator> <name pos:line="109" pos:column="38">offset<pos:position pos:line="109" pos:column="44"/></name></expr>;<pos:position pos:line="109" pos:column="45"/></expr_stmt>
<cpp:if pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">if<pos:position pos:line="110" pos:column="4"/></cpp:directive> <expr><name pos:line="110" pos:column="5">DEBUG<pos:position pos:line="110" pos:column="10"/></name></expr></cpp:if>
	      <expr_stmt><expr><call><name pos:line="111" pos:column="15">assert<pos:position pos:line="111" pos:column="21"/></name> <argument_list pos:line="111" pos:column="22">(<argument><expr><name><name pos:line="111" pos:column="23">pstr<pos:position pos:line="111" pos:column="27"/></name><operator pos:line="111" pos:column="27">-&gt;<pos:position pos:line="111" pos:column="32"/></operator><name pos:line="111" pos:column="29">valid_len<pos:position pos:line="111" pos:column="38"/></name></name> <operator pos:line="111" pos:column="39">&gt;<pos:position pos:line="111" pos:column="43"/></operator> <literal type="number" pos:line="111" pos:column="41">0<pos:position pos:line="111" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">endif<pos:position pos:line="112" pos:column="7"/></cpp:directive></cpp:endif>
	    }<pos:position pos:line="113" pos:column="14"/></block></else></if>
	}<pos:position pos:line="114" pos:column="10"/></block></then>
      <else pos:line="115" pos:column="7">else
	<block pos:line="116" pos:column="9">{
<cpp:ifdef pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">ifdef<pos:position pos:line="117" pos:column="7"/></cpp:directive> <name pos:line="117" pos:column="8">RE_ENABLE_I18N<pos:position pos:line="117" pos:column="22"/></name></cpp:ifdef>
	  <comment type="block" pos:line="118" pos:column="11">/* No, skip all characters until IDX.  */</comment>
	  <decl_stmt><decl><type><name pos:line="119" pos:column="11">int<pos:position pos:line="119" pos:column="14"/></name></type> <name pos:line="119" pos:column="15">prev_valid_len<pos:position pos:line="119" pos:column="29"/></name> <init pos:line="119" pos:column="30">= <expr><name><name pos:line="119" pos:column="32">pstr<pos:position pos:line="119" pos:column="36"/></name><operator pos:line="119" pos:column="36">-&gt;<pos:position pos:line="119" pos:column="41"/></operator><name pos:line="119" pos:column="38">valid_len<pos:position pos:line="119" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="119" pos:column="48"/></decl_stmt>

	  <if pos:line="121" pos:column="11">if <condition pos:line="121" pos:column="14">(<expr><call><name pos:line="121" pos:column="15">BE<pos:position pos:line="121" pos:column="17"/></name> <argument_list pos:line="121" pos:column="18">(<argument><expr><name><name pos:line="121" pos:column="19">pstr<pos:position pos:line="121" pos:column="23"/></name><operator pos:line="121" pos:column="23">-&gt;<pos:position pos:line="121" pos:column="28"/></operator><name pos:line="121" pos:column="25">offsets_needed<pos:position pos:line="121" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="41">0<pos:position pos:line="121" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="121" pos:column="44"/></condition><then pos:line="121" pos:column="44">
	    <block pos:line="122" pos:column="13">{
	      <expr_stmt><expr><name><name pos:line="123" pos:column="15">pstr<pos:position pos:line="123" pos:column="19"/></name><operator pos:line="123" pos:column="19">-&gt;<pos:position pos:line="123" pos:column="24"/></operator><name pos:line="123" pos:column="21">len<pos:position pos:line="123" pos:column="24"/></name></name> <operator pos:line="123" pos:column="25">=<pos:position pos:line="123" pos:column="26"/></operator> <name><name pos:line="123" pos:column="27">pstr<pos:position pos:line="123" pos:column="31"/></name><operator pos:line="123" pos:column="31">-&gt;<pos:position pos:line="123" pos:column="36"/></operator><name pos:line="123" pos:column="33">raw_len<pos:position pos:line="123" pos:column="40"/></name></name> <operator pos:line="123" pos:column="41">-<pos:position pos:line="123" pos:column="42"/></operator> <name pos:line="123" pos:column="43">idx<pos:position pos:line="123" pos:column="46"/></name> <operator pos:line="123" pos:column="47">+<pos:position pos:line="123" pos:column="48"/></operator> <name pos:line="123" pos:column="49">offset<pos:position pos:line="123" pos:column="55"/></name></expr>;<pos:position pos:line="123" pos:column="56"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="124" pos:column="15">pstr<pos:position pos:line="124" pos:column="19"/></name><operator pos:line="124" pos:column="19">-&gt;<pos:position pos:line="124" pos:column="24"/></operator><name pos:line="124" pos:column="21">stop<pos:position pos:line="124" pos:column="25"/></name></name> <operator pos:line="124" pos:column="26">=<pos:position pos:line="124" pos:column="27"/></operator> <name><name pos:line="124" pos:column="28">pstr<pos:position pos:line="124" pos:column="32"/></name><operator pos:line="124" pos:column="32">-&gt;<pos:position pos:line="124" pos:column="37"/></operator><name pos:line="124" pos:column="34">raw_stop<pos:position pos:line="124" pos:column="42"/></name></name> <operator pos:line="124" pos:column="43">-<pos:position pos:line="124" pos:column="44"/></operator> <name pos:line="124" pos:column="45">idx<pos:position pos:line="124" pos:column="48"/></name> <operator pos:line="124" pos:column="49">+<pos:position pos:line="124" pos:column="50"/></operator> <name pos:line="124" pos:column="51">offset<pos:position pos:line="124" pos:column="57"/></name></expr>;<pos:position pos:line="124" pos:column="58"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="125" pos:column="15">pstr<pos:position pos:line="125" pos:column="19"/></name><operator pos:line="125" pos:column="19">-&gt;<pos:position pos:line="125" pos:column="24"/></operator><name pos:line="125" pos:column="21">offsets_needed<pos:position pos:line="125" pos:column="35"/></name></name> <operator pos:line="125" pos:column="36">=<pos:position pos:line="125" pos:column="37"/></operator> <literal type="number" pos:line="125" pos:column="38">0<pos:position pos:line="125" pos:column="39"/></literal></expr>;<pos:position pos:line="125" pos:column="40"/></expr_stmt>
	    }<pos:position pos:line="126" pos:column="14"/></block></then></if>
<cpp:endif pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">endif<pos:position pos:line="127" pos:column="7"/></cpp:directive></cpp:endif>
	  <expr_stmt><expr><name><name pos:line="128" pos:column="11">pstr<pos:position pos:line="128" pos:column="15"/></name><operator pos:line="128" pos:column="15">-&gt;<pos:position pos:line="128" pos:column="20"/></operator><name pos:line="128" pos:column="17">valid_len<pos:position pos:line="128" pos:column="26"/></name></name> <operator pos:line="128" pos:column="27">=<pos:position pos:line="128" pos:column="28"/></operator> <literal type="number" pos:line="128" pos:column="29">0<pos:position pos:line="128" pos:column="30"/></literal></expr>;<pos:position pos:line="128" pos:column="31"/></expr_stmt>
<cpp:ifdef pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">ifdef<pos:position pos:line="129" pos:column="7"/></cpp:directive> <name pos:line="129" pos:column="8">RE_ENABLE_I18N<pos:position pos:line="129" pos:column="22"/></name></cpp:ifdef>
	  <if pos:line="130" pos:column="11">if <condition pos:line="130" pos:column="14">(<expr><name><name pos:line="130" pos:column="15">pstr<pos:position pos:line="130" pos:column="19"/></name><operator pos:line="130" pos:column="19">-&gt;<pos:position pos:line="130" pos:column="24"/></operator><name pos:line="130" pos:column="21">mb_cur_max<pos:position pos:line="130" pos:column="31"/></name></name> <operator pos:line="130" pos:column="32">&gt;<pos:position pos:line="130" pos:column="36"/></operator> <literal type="number" pos:line="130" pos:column="34">1<pos:position pos:line="130" pos:column="35"/></literal></expr>)<pos:position pos:line="130" pos:column="36"/></condition><then pos:line="130" pos:column="36">
	    <block pos:line="131" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="132" pos:column="15">int<pos:position pos:line="132" pos:column="18"/></name></type> <name pos:line="132" pos:column="19">wcs_idx<pos:position pos:line="132" pos:column="26"/></name></decl>;<pos:position pos:line="132" pos:column="27"/></decl_stmt>
	      <decl_stmt><decl><type><name pos:line="133" pos:column="15">wint_t<pos:position pos:line="133" pos:column="21"/></name></type> <name pos:line="133" pos:column="22">wc<pos:position pos:line="133" pos:column="24"/></name> <init pos:line="133" pos:column="25">= <expr><name pos:line="133" pos:column="27">WEOF<pos:position pos:line="133" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="133" pos:column="32"/></decl_stmt>

	      <if pos:line="135" pos:column="15">if <condition pos:line="135" pos:column="18">(<expr><name><name pos:line="135" pos:column="19">pstr<pos:position pos:line="135" pos:column="23"/></name><operator pos:line="135" pos:column="23">-&gt;<pos:position pos:line="135" pos:column="28"/></operator><name pos:line="135" pos:column="25">is_utf8<pos:position pos:line="135" pos:column="32"/></name></name></expr>)<pos:position pos:line="135" pos:column="33"/></condition><then pos:line="135" pos:column="33">
		<block pos:line="136" pos:column="17">{
		  <decl_stmt><decl><type><specifier pos:line="137" pos:column="19">const<pos:position pos:line="137" pos:column="24"/></specifier> <name pos:line="137" pos:column="25">unsigned<pos:position pos:line="137" pos:column="33"/></name> <name pos:line="137" pos:column="34">char<pos:position pos:line="137" pos:column="38"/></name> <modifier pos:line="137" pos:column="39">*<pos:position pos:line="137" pos:column="40"/></modifier></type><name pos:line="137" pos:column="40">raw<pos:position pos:line="137" pos:column="43"/></name></decl>, <modifier pos:line="137" pos:column="45">*<pos:position pos:line="137" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="137" pos:column="46">p<pos:position pos:line="137" pos:column="47"/></name></decl>, <modifier pos:line="137" pos:column="49">*<pos:position pos:line="137" pos:column="50"/></modifier><decl><type ref="prev"/><name pos:line="137" pos:column="50">end<pos:position pos:line="137" pos:column="53"/></name></decl>;<pos:position pos:line="137" pos:column="54"/></decl_stmt>

		  <comment type="block" pos:line="139" pos:column="19">/* Special case UTF-8.  Multi-byte chars start with any
		     byte other than 0x80 - 0xbf.  */</comment>
		  <expr_stmt><expr><name pos:line="141" pos:column="19">raw<pos:position pos:line="141" pos:column="22"/></name> <operator pos:line="141" pos:column="23">=<pos:position pos:line="141" pos:column="24"/></operator> <name><name pos:line="141" pos:column="25">pstr<pos:position pos:line="141" pos:column="29"/></name><operator pos:line="141" pos:column="29">-&gt;<pos:position pos:line="141" pos:column="34"/></operator><name pos:line="141" pos:column="31">raw_mbs<pos:position pos:line="141" pos:column="38"/></name></name> <operator pos:line="141" pos:column="39">+<pos:position pos:line="141" pos:column="40"/></operator> <name><name pos:line="141" pos:column="41">pstr<pos:position pos:line="141" pos:column="45"/></name><operator pos:line="141" pos:column="45">-&gt;<pos:position pos:line="141" pos:column="50"/></operator><name pos:line="141" pos:column="47">raw_mbs_idx<pos:position pos:line="141" pos:column="58"/></name></name></expr>;<pos:position pos:line="141" pos:column="59"/></expr_stmt>
		  <expr_stmt><expr><name pos:line="142" pos:column="19">end<pos:position pos:line="142" pos:column="22"/></name> <operator pos:line="142" pos:column="23">=<pos:position pos:line="142" pos:column="24"/></operator> <name pos:line="142" pos:column="25">raw<pos:position pos:line="142" pos:column="28"/></name> <operator pos:line="142" pos:column="29">+<pos:position pos:line="142" pos:column="30"/></operator> <operator pos:line="142" pos:column="31">(<pos:position pos:line="142" pos:column="32"/></operator><name pos:line="142" pos:column="32">offset<pos:position pos:line="142" pos:column="38"/></name> <operator pos:line="142" pos:column="39">-<pos:position pos:line="142" pos:column="40"/></operator> <name><name pos:line="142" pos:column="41">pstr<pos:position pos:line="142" pos:column="45"/></name><operator pos:line="142" pos:column="45">-&gt;<pos:position pos:line="142" pos:column="50"/></operator><name pos:line="142" pos:column="47">mb_cur_max<pos:position pos:line="142" pos:column="57"/></name></name><operator pos:line="142" pos:column="57">)<pos:position pos:line="142" pos:column="58"/></operator></expr>;<pos:position pos:line="142" pos:column="59"/></expr_stmt>
		  <if pos:line="143" pos:column="19">if <condition pos:line="143" pos:column="22">(<expr><name pos:line="143" pos:column="23">end<pos:position pos:line="143" pos:column="26"/></name> <operator pos:line="143" pos:column="27">&lt;<pos:position pos:line="143" pos:column="31"/></operator> <name><name pos:line="143" pos:column="29">pstr<pos:position pos:line="143" pos:column="33"/></name><operator pos:line="143" pos:column="33">-&gt;<pos:position pos:line="143" pos:column="38"/></operator><name pos:line="143" pos:column="35">raw_mbs<pos:position pos:line="143" pos:column="42"/></name></name></expr>)<pos:position pos:line="143" pos:column="43"/></condition><then pos:line="143" pos:column="43">
		    <block type="pseudo"><expr_stmt><expr><name pos:line="144" pos:column="21">end<pos:position pos:line="144" pos:column="24"/></name> <operator pos:line="144" pos:column="25">=<pos:position pos:line="144" pos:column="26"/></operator> <name><name pos:line="144" pos:column="27">pstr<pos:position pos:line="144" pos:column="31"/></name><operator pos:line="144" pos:column="31">-&gt;<pos:position pos:line="144" pos:column="36"/></operator><name pos:line="144" pos:column="33">raw_mbs<pos:position pos:line="144" pos:column="40"/></name></name></expr>;<pos:position pos:line="144" pos:column="41"/></expr_stmt></block></then></if>
		  <expr_stmt><expr><name pos:line="145" pos:column="19">p<pos:position pos:line="145" pos:column="20"/></name> <operator pos:line="145" pos:column="21">=<pos:position pos:line="145" pos:column="22"/></operator> <name pos:line="145" pos:column="23">raw<pos:position pos:line="145" pos:column="26"/></name> <operator pos:line="145" pos:column="27">+<pos:position pos:line="145" pos:column="28"/></operator> <name pos:line="145" pos:column="29">offset<pos:position pos:line="145" pos:column="35"/></name> <operator pos:line="145" pos:column="36">-<pos:position pos:line="145" pos:column="37"/></operator> <literal type="number" pos:line="145" pos:column="38">1<pos:position pos:line="145" pos:column="39"/></literal></expr>;<pos:position pos:line="145" pos:column="40"/></expr_stmt>
<cpp:ifdef pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">ifdef<pos:position pos:line="146" pos:column="7"/></cpp:directive> <name pos:line="146" pos:column="8">_LIBC<pos:position pos:line="146" pos:column="13"/></name></cpp:ifdef>
		  <comment type="block" pos:line="147" pos:column="19">/* We know the wchar_t encoding is UCS4, so for the simple
		     case, ASCII characters, skip the conversion step.  */</comment>
		  <if pos:line="149" pos:column="19">if <condition pos:line="149" pos:column="22">(<expr><call><name pos:line="149" pos:column="23">isascii<pos:position pos:line="149" pos:column="30"/></name> <argument_list pos:line="149" pos:column="31">(<argument><expr><operator pos:line="149" pos:column="32">*<pos:position pos:line="149" pos:column="33"/></operator><name pos:line="149" pos:column="33">p<pos:position pos:line="149" pos:column="34"/></name></expr></argument>)<pos:position pos:line="149" pos:column="35"/></argument_list></call> <operator pos:line="149" pos:column="36">&amp;&amp;<pos:position pos:line="149" pos:column="46"/></operator> <call><name pos:line="149" pos:column="39">BE<pos:position pos:line="149" pos:column="41"/></name> <argument_list pos:line="149" pos:column="42">(<argument><expr><name><name pos:line="149" pos:column="43">pstr<pos:position pos:line="149" pos:column="47"/></name><operator pos:line="149" pos:column="47">-&gt;<pos:position pos:line="149" pos:column="52"/></operator><name pos:line="149" pos:column="49">trans<pos:position pos:line="149" pos:column="54"/></name></name> <operator pos:line="149" pos:column="55">==<pos:position pos:line="149" pos:column="57"/></operator> <name pos:line="149" pos:column="58">NULL<pos:position pos:line="149" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="149" pos:column="64">1<pos:position pos:line="149" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="149" pos:column="67"/></condition><then pos:line="149" pos:column="67">
		    <block pos:line="150" pos:column="21">{
		      <expr_stmt><expr><call><name pos:line="151" pos:column="23">memset<pos:position pos:line="151" pos:column="29"/></name> <argument_list pos:line="151" pos:column="30">(<argument><expr><operator pos:line="151" pos:column="31">&amp;<pos:position pos:line="151" pos:column="36"/></operator><name><name pos:line="151" pos:column="32">pstr<pos:position pos:line="151" pos:column="36"/></name><operator pos:line="151" pos:column="36">-&gt;<pos:position pos:line="151" pos:column="41"/></operator><name pos:line="151" pos:column="38">cur_state<pos:position pos:line="151" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="151" pos:column="49">'\0'<pos:position pos:line="151" pos:column="53"/></literal></expr></argument>, <argument><expr><sizeof pos:line="151" pos:column="55">sizeof <argument_list pos:line="151" pos:column="62">(<argument><expr><name pos:line="151" pos:column="63">mbstate_t<pos:position pos:line="151" pos:column="72"/></name></expr></argument>)<pos:position pos:line="151" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="151" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="75"/></expr_stmt>
		      <comment type="block" pos:line="152" pos:column="23">/* pstr-&gt;valid_len = 0; */</comment>
		      <expr_stmt><expr><name pos:line="153" pos:column="23">wc<pos:position pos:line="153" pos:column="25"/></name> <operator pos:line="153" pos:column="26">=<pos:position pos:line="153" pos:column="27"/></operator> <operator pos:line="153" pos:column="28">(<pos:position pos:line="153" pos:column="29"/></operator><name pos:line="153" pos:column="29">wchar_t<pos:position pos:line="153" pos:column="36"/></name><operator pos:line="153" pos:column="36">)<pos:position pos:line="153" pos:column="37"/></operator> <operator pos:line="153" pos:column="38">*<pos:position pos:line="153" pos:column="39"/></operator><name pos:line="153" pos:column="39">p<pos:position pos:line="153" pos:column="40"/></name></expr>;<pos:position pos:line="153" pos:column="41"/></expr_stmt>
		    }<pos:position pos:line="154" pos:column="22"/></block></then>
		  <else pos:line="155" pos:column="19">else
<cpp:endif pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">endif<pos:position pos:line="156" pos:column="7"/></cpp:directive></cpp:endif>
		    <block type="pseudo"><for pos:line="157" pos:column="21">for <control pos:line="157" pos:column="25">(<init pos:line="157" pos:column="26">;<pos:position pos:line="157" pos:column="27"/></init> <condition><expr><name pos:line="157" pos:column="28">p<pos:position pos:line="157" pos:column="29"/></name> <operator pos:line="157" pos:column="30">&gt;=<pos:position pos:line="157" pos:column="35"/></operator> <name pos:line="157" pos:column="33">end<pos:position pos:line="157" pos:column="36"/></name></expr>;<pos:position pos:line="157" pos:column="37"/></condition> <incr><expr><operator pos:line="157" pos:column="38">--<pos:position pos:line="157" pos:column="40"/></operator><name pos:line="157" pos:column="40">p<pos:position pos:line="157" pos:column="41"/></name></expr></incr>)<pos:position pos:line="157" pos:column="42"/></control>
		      <block type="pseudo"><if pos:line="158" pos:column="23">if <condition pos:line="158" pos:column="26">(<expr><operator pos:line="158" pos:column="27">(<pos:position pos:line="158" pos:column="28"/></operator><operator pos:line="158" pos:column="28">*<pos:position pos:line="158" pos:column="29"/></operator><name pos:line="158" pos:column="29">p<pos:position pos:line="158" pos:column="30"/></name> <operator pos:line="158" pos:column="31">&amp;<pos:position pos:line="158" pos:column="36"/></operator> <literal type="number" pos:line="158" pos:column="33">0xc0<pos:position pos:line="158" pos:column="37"/></literal><operator pos:line="158" pos:column="37">)<pos:position pos:line="158" pos:column="38"/></operator> <operator pos:line="158" pos:column="39">!=<pos:position pos:line="158" pos:column="41"/></operator> <literal type="number" pos:line="158" pos:column="42">0x80<pos:position pos:line="158" pos:column="46"/></literal></expr>)<pos:position pos:line="158" pos:column="47"/></condition><then pos:line="158" pos:column="47">
			<block pos:line="159" pos:column="25">{
			  <decl_stmt><decl><type><name pos:line="160" pos:column="27">mbstate_t<pos:position pos:line="160" pos:column="36"/></name></type> <name pos:line="160" pos:column="37">cur_state<pos:position pos:line="160" pos:column="46"/></name></decl>;<pos:position pos:line="160" pos:column="47"/></decl_stmt>
			  <decl_stmt><decl><type><name pos:line="161" pos:column="27">wchar_t<pos:position pos:line="161" pos:column="34"/></name></type> <name pos:line="161" pos:column="35">wc2<pos:position pos:line="161" pos:column="38"/></name></decl>;<pos:position pos:line="161" pos:column="39"/></decl_stmt>
			  <decl_stmt><decl><type><name pos:line="162" pos:column="27">int<pos:position pos:line="162" pos:column="30"/></name></type> <name pos:line="162" pos:column="31">mlen<pos:position pos:line="162" pos:column="35"/></name> <init pos:line="162" pos:column="36">= <expr><name pos:line="162" pos:column="38">raw<pos:position pos:line="162" pos:column="41"/></name> <operator pos:line="162" pos:column="42">+<pos:position pos:line="162" pos:column="43"/></operator> <name><name pos:line="162" pos:column="44">pstr<pos:position pos:line="162" pos:column="48"/></name><operator pos:line="162" pos:column="48">-&gt;<pos:position pos:line="162" pos:column="53"/></operator><name pos:line="162" pos:column="50">len<pos:position pos:line="162" pos:column="53"/></name></name> <operator pos:line="162" pos:column="54">-<pos:position pos:line="162" pos:column="55"/></operator> <name pos:line="162" pos:column="56">p<pos:position pos:line="162" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="162" pos:column="58"/></decl_stmt>
			  <decl_stmt><decl><type><name pos:line="163" pos:column="27">unsigned<pos:position pos:line="163" pos:column="35"/></name> <name pos:line="163" pos:column="36">char<pos:position pos:line="163" pos:column="40"/></name></type> <name><name pos:line="163" pos:column="41">buf<pos:position pos:line="163" pos:column="44"/></name><index pos:line="163" pos:column="44">[<expr><literal type="number" pos:line="163" pos:column="45">6<pos:position pos:line="163" pos:column="46"/></literal></expr>]<pos:position pos:line="163" pos:column="47"/></index></name></decl>;<pos:position pos:line="163" pos:column="48"/></decl_stmt>
			  <decl_stmt><decl><type><name pos:line="164" pos:column="27">size_t<pos:position pos:line="164" pos:column="33"/></name></type> <name pos:line="164" pos:column="34">mbclen<pos:position pos:line="164" pos:column="40"/></name></decl>;<pos:position pos:line="164" pos:column="41"/></decl_stmt>

			  <if pos:line="166" pos:column="27">if <condition pos:line="166" pos:column="30">(<expr><call><name pos:line="166" pos:column="31">BE<pos:position pos:line="166" pos:column="33"/></name> <argument_list pos:line="166" pos:column="34">(<argument><expr><name><name pos:line="166" pos:column="35">pstr<pos:position pos:line="166" pos:column="39"/></name><operator pos:line="166" pos:column="39">-&gt;<pos:position pos:line="166" pos:column="44"/></operator><name pos:line="166" pos:column="41">trans<pos:position pos:line="166" pos:column="46"/></name></name> <operator pos:line="166" pos:column="47">!=<pos:position pos:line="166" pos:column="49"/></operator> <name pos:line="166" pos:column="50">NULL<pos:position pos:line="166" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="166" pos:column="56">0<pos:position pos:line="166" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="166" pos:column="59"/></condition><then pos:line="166" pos:column="59">
			    <block pos:line="167" pos:column="29">{
			      <decl_stmt><decl><type><name pos:line="168" pos:column="31">int<pos:position pos:line="168" pos:column="34"/></name></type> <name pos:line="168" pos:column="35">i<pos:position pos:line="168" pos:column="36"/></name> <init pos:line="168" pos:column="37">= <expr><ternary><condition><expr><name pos:line="168" pos:column="39">mlen<pos:position pos:line="168" pos:column="43"/></name> <operator pos:line="168" pos:column="44">&lt;<pos:position pos:line="168" pos:column="48"/></operator> <literal type="number" pos:line="168" pos:column="46">6<pos:position pos:line="168" pos:column="47"/></literal></expr> ?<pos:position pos:line="168" pos:column="49"/></condition><then pos:line="168" pos:column="49"> <expr><name pos:line="168" pos:column="50">mlen<pos:position pos:line="168" pos:column="54"/></name></expr> <pos:position pos:line="168" pos:column="55"/></then><else pos:line="168" pos:column="55">: <expr><literal type="number" pos:line="168" pos:column="57">6<pos:position pos:line="168" pos:column="58"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="168" pos:column="59"/></decl_stmt>
			      <while pos:line="169" pos:column="31">while <condition pos:line="169" pos:column="37">(<expr><operator pos:line="169" pos:column="38">--<pos:position pos:line="169" pos:column="40"/></operator><name pos:line="169" pos:column="40">i<pos:position pos:line="169" pos:column="41"/></name> <operator pos:line="169" pos:column="42">&gt;=<pos:position pos:line="169" pos:column="47"/></operator> <literal type="number" pos:line="169" pos:column="45">0<pos:position pos:line="169" pos:column="46"/></literal></expr>)<pos:position pos:line="169" pos:column="47"/></condition>
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="170" pos:column="33">buf<pos:position pos:line="170" pos:column="36"/></name><index pos:line="170" pos:column="36">[<expr><name pos:line="170" pos:column="37">i<pos:position pos:line="170" pos:column="38"/></name></expr>]<pos:position pos:line="170" pos:column="39"/></index></name> <operator pos:line="170" pos:column="40">=<pos:position pos:line="170" pos:column="41"/></operator> <name><name pos:line="170" pos:column="42">pstr<pos:position pos:line="170" pos:column="46"/></name><operator pos:line="170" pos:column="46">-&gt;<pos:position pos:line="170" pos:column="51"/></operator><name pos:line="170" pos:column="48">trans<pos:position pos:line="170" pos:column="53"/></name><index pos:line="170" pos:column="53">[<expr><name><name pos:line="170" pos:column="54">p<pos:position pos:line="170" pos:column="55"/></name><index pos:line="170" pos:column="55">[<expr><name pos:line="170" pos:column="56">i<pos:position pos:line="170" pos:column="57"/></name></expr>]<pos:position pos:line="170" pos:column="58"/></index></name></expr>]<pos:position pos:line="170" pos:column="59"/></index></name></expr>;<pos:position pos:line="170" pos:column="60"/></expr_stmt></block></while>
			    }<pos:position pos:line="171" pos:column="30"/></block></then></if>
			  <comment type="block" pos:line="172" pos:column="27">/* XXX Don't use mbrtowc, we know which conversion
			     to use (UTF-8 -&gt; UCS4).  */</comment>
			  <expr_stmt><expr><call><name pos:line="174" pos:column="27">memset<pos:position pos:line="174" pos:column="33"/></name> <argument_list pos:line="174" pos:column="34">(<argument><expr><operator pos:line="174" pos:column="35">&amp;<pos:position pos:line="174" pos:column="40"/></operator><name pos:line="174" pos:column="36">cur_state<pos:position pos:line="174" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="174" pos:column="47">0<pos:position pos:line="174" pos:column="48"/></literal></expr></argument>, <argument><expr><sizeof pos:line="174" pos:column="50">sizeof <argument_list pos:line="174" pos:column="57">(<argument><expr><name pos:line="174" pos:column="58">cur_state<pos:position pos:line="174" pos:column="67"/></name></expr></argument>)<pos:position pos:line="174" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="174" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="70"/></expr_stmt>
			  <expr_stmt><expr><name pos:line="175" pos:column="27">mbclen<pos:position pos:line="175" pos:column="33"/></name> <operator pos:line="175" pos:column="34">=<pos:position pos:line="175" pos:column="35"/></operator> <call><name pos:line="175" pos:column="36">__mbrtowc<pos:position pos:line="175" pos:column="45"/></name> <argument_list pos:line="175" pos:column="46">(<argument><expr><operator pos:line="175" pos:column="47">&amp;<pos:position pos:line="175" pos:column="52"/></operator><name pos:line="175" pos:column="48">wc2<pos:position pos:line="175" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="175" pos:column="53">(<pos:position pos:line="175" pos:column="54"/></operator><specifier pos:line="175" pos:column="54">const<pos:position pos:line="175" pos:column="59"/></specifier> <name pos:line="175" pos:column="60">char<pos:position pos:line="175" pos:column="64"/></name> <operator pos:line="175" pos:column="65">*<pos:position pos:line="175" pos:column="66"/></operator><operator pos:line="175" pos:column="66">)<pos:position pos:line="175" pos:column="67"/></operator> <name pos:line="175" pos:column="68">p<pos:position pos:line="175" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="71">mlen<pos:position pos:line="175" pos:column="75"/></name></expr></argument>,
					      <argument><expr><operator pos:line="176" pos:column="47">&amp;<pos:position pos:line="176" pos:column="52"/></operator><name pos:line="176" pos:column="48">cur_state<pos:position pos:line="176" pos:column="57"/></name></expr></argument>)<pos:position pos:line="176" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="59"/></expr_stmt>
			  <if pos:line="177" pos:column="27">if <condition pos:line="177" pos:column="30">(<expr><name pos:line="177" pos:column="31">raw<pos:position pos:line="177" pos:column="34"/></name> <operator pos:line="177" pos:column="35">+<pos:position pos:line="177" pos:column="36"/></operator> <name pos:line="177" pos:column="37">offset<pos:position pos:line="177" pos:column="43"/></name> <operator pos:line="177" pos:column="44">-<pos:position pos:line="177" pos:column="45"/></operator> <name pos:line="177" pos:column="46">p<pos:position pos:line="177" pos:column="47"/></name> <operator pos:line="177" pos:column="48">&lt;=<pos:position pos:line="177" pos:column="53"/></operator> <name pos:line="177" pos:column="51">mbclen<pos:position pos:line="177" pos:column="57"/></name>
			      <operator pos:line="178" pos:column="31">&amp;&amp;<pos:position pos:line="178" pos:column="41"/></operator> <name pos:line="178" pos:column="34">mbclen<pos:position pos:line="178" pos:column="40"/></name> <operator pos:line="178" pos:column="41">&lt;<pos:position pos:line="178" pos:column="45"/></operator> <operator pos:line="178" pos:column="43">(<pos:position pos:line="178" pos:column="44"/></operator><name pos:line="178" pos:column="44">size_t<pos:position pos:line="178" pos:column="50"/></name><operator pos:line="178" pos:column="50">)<pos:position pos:line="178" pos:column="51"/></operator> <operator pos:line="178" pos:column="52">-<pos:position pos:line="178" pos:column="53"/></operator><literal type="number" pos:line="178" pos:column="53">2<pos:position pos:line="178" pos:column="54"/></literal></expr>)<pos:position pos:line="178" pos:column="55"/></condition><then pos:line="178" pos:column="55">
			    <block pos:line="179" pos:column="29">{
			      <expr_stmt><expr><call><name pos:line="180" pos:column="31">memset<pos:position pos:line="180" pos:column="37"/></name> <argument_list pos:line="180" pos:column="38">(<argument><expr><operator pos:line="180" pos:column="39">&amp;<pos:position pos:line="180" pos:column="44"/></operator><name><name pos:line="180" pos:column="40">pstr<pos:position pos:line="180" pos:column="44"/></name><operator pos:line="180" pos:column="44">-&gt;<pos:position pos:line="180" pos:column="49"/></operator><name pos:line="180" pos:column="46">cur_state<pos:position pos:line="180" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="180" pos:column="57">'\0'<pos:position pos:line="180" pos:column="61"/></literal></expr></argument>,
				      <argument><expr><sizeof pos:line="181" pos:column="39">sizeof <argument_list pos:line="181" pos:column="46">(<argument><expr><name pos:line="181" pos:column="47">mbstate_t<pos:position pos:line="181" pos:column="56"/></name></expr></argument>)<pos:position pos:line="181" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="181" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="59"/></expr_stmt>
			      <expr_stmt><expr><name><name pos:line="182" pos:column="31">pstr<pos:position pos:line="182" pos:column="35"/></name><operator pos:line="182" pos:column="35">-&gt;<pos:position pos:line="182" pos:column="40"/></operator><name pos:line="182" pos:column="37">valid_len<pos:position pos:line="182" pos:column="46"/></name></name> <operator pos:line="182" pos:column="47">=<pos:position pos:line="182" pos:column="48"/></operator> <name pos:line="182" pos:column="49">mbclen<pos:position pos:line="182" pos:column="55"/></name> <operator pos:line="182" pos:column="56">-<pos:position pos:line="182" pos:column="57"/></operator> <operator pos:line="182" pos:column="58">(<pos:position pos:line="182" pos:column="59"/></operator><name pos:line="182" pos:column="59">raw<pos:position pos:line="182" pos:column="62"/></name> <operator pos:line="182" pos:column="63">+<pos:position pos:line="182" pos:column="64"/></operator> <name pos:line="182" pos:column="65">offset<pos:position pos:line="182" pos:column="71"/></name> <operator pos:line="182" pos:column="72">-<pos:position pos:line="182" pos:column="73"/></operator> <name pos:line="182" pos:column="74">p<pos:position pos:line="182" pos:column="75"/></name><operator pos:line="182" pos:column="75">)<pos:position pos:line="182" pos:column="76"/></operator></expr>;<pos:position pos:line="182" pos:column="77"/></expr_stmt>
			      <expr_stmt><expr><name pos:line="183" pos:column="31">wc<pos:position pos:line="183" pos:column="33"/></name> <operator pos:line="183" pos:column="34">=<pos:position pos:line="183" pos:column="35"/></operator> <name pos:line="183" pos:column="36">wc2<pos:position pos:line="183" pos:column="39"/></name></expr>;<pos:position pos:line="183" pos:column="40"/></expr_stmt>
			    }<pos:position pos:line="184" pos:column="30"/></block></then></if>
			  <break pos:line="185" pos:column="27">break;<pos:position pos:line="185" pos:column="33"/></break>
			}<pos:position pos:line="186" pos:column="26"/></block></then></if></block></for></block></else></if>
		}<pos:position pos:line="187" pos:column="18"/></block></then></if>

	      <if pos:line="189" pos:column="15">if <condition pos:line="189" pos:column="18">(<expr><name pos:line="189" pos:column="19">wc<pos:position pos:line="189" pos:column="21"/></name> <operator pos:line="189" pos:column="22">==<pos:position pos:line="189" pos:column="24"/></operator> <name pos:line="189" pos:column="25">WEOF<pos:position pos:line="189" pos:column="29"/></name></expr>)<pos:position pos:line="189" pos:column="30"/></condition><then pos:line="189" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="190" pos:column="17">pstr<pos:position pos:line="190" pos:column="21"/></name><operator pos:line="190" pos:column="21">-&gt;<pos:position pos:line="190" pos:column="26"/></operator><name pos:line="190" pos:column="23">valid_len<pos:position pos:line="190" pos:column="32"/></name></name> <operator pos:line="190" pos:column="33">=<pos:position pos:line="190" pos:column="34"/></operator> <call><name pos:line="190" pos:column="35">re_string_skip_chars<pos:position pos:line="190" pos:column="55"/></name> <argument_list pos:line="190" pos:column="56">(<argument><expr><name pos:line="190" pos:column="57">pstr<pos:position pos:line="190" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="63">idx<pos:position pos:line="190" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="190" pos:column="68">&amp;<pos:position pos:line="190" pos:column="73"/></operator><name pos:line="190" pos:column="69">wc<pos:position pos:line="190" pos:column="71"/></name></expr></argument>)<pos:position pos:line="190" pos:column="72"/></argument_list></call> <operator pos:line="190" pos:column="73">-<pos:position pos:line="190" pos:column="74"/></operator> <name pos:line="190" pos:column="75">idx<pos:position pos:line="190" pos:column="78"/></name></expr>;<pos:position pos:line="190" pos:column="79"/></expr_stmt></block></then></if>
	      <if pos:line="191" pos:column="15">if <condition pos:line="191" pos:column="18">(<expr><name pos:line="191" pos:column="19">wc<pos:position pos:line="191" pos:column="21"/></name> <operator pos:line="191" pos:column="22">==<pos:position pos:line="191" pos:column="24"/></operator> <name pos:line="191" pos:column="25">WEOF<pos:position pos:line="191" pos:column="29"/></name></expr>)<pos:position pos:line="191" pos:column="30"/></condition><then pos:line="191" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="192" pos:column="17">pstr<pos:position pos:line="192" pos:column="21"/></name><operator pos:line="192" pos:column="21">-&gt;<pos:position pos:line="192" pos:column="26"/></operator><name pos:line="192" pos:column="23">tip_context<pos:position pos:line="192" pos:column="34"/></name></name>
		  <operator pos:line="193" pos:column="19">=<pos:position pos:line="193" pos:column="20"/></operator> <call><name pos:line="193" pos:column="21">re_string_context_at<pos:position pos:line="193" pos:column="41"/></name> <argument_list pos:line="193" pos:column="42">(<argument><expr><name pos:line="193" pos:column="43">pstr<pos:position pos:line="193" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="49">prev_valid_len<pos:position pos:line="193" pos:column="63"/></name> <operator pos:line="193" pos:column="64">-<pos:position pos:line="193" pos:column="65"/></operator> <literal type="number" pos:line="193" pos:column="66">1<pos:position pos:line="193" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="193" pos:column="69">eflags<pos:position pos:line="193" pos:column="75"/></name></expr></argument>)<pos:position pos:line="193" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="77"/></expr_stmt></block></then>
	      <else pos:line="194" pos:column="15">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="195" pos:column="17">pstr<pos:position pos:line="195" pos:column="21"/></name><operator pos:line="195" pos:column="21">-&gt;<pos:position pos:line="195" pos:column="26"/></operator><name pos:line="195" pos:column="23">tip_context<pos:position pos:line="195" pos:column="34"/></name></name> <operator pos:line="195" pos:column="35">=<pos:position pos:line="195" pos:column="36"/></operator> <operator pos:line="195" pos:column="37">(<pos:position pos:line="195" pos:column="38"/></operator><ternary><condition><expr><operator pos:line="195" pos:column="38">(<pos:position pos:line="195" pos:column="39"/></operator><call><name pos:line="195" pos:column="39">BE<pos:position pos:line="195" pos:column="41"/></name> <argument_list pos:line="195" pos:column="42">(<argument><expr><name><name pos:line="195" pos:column="43">pstr<pos:position pos:line="195" pos:column="47"/></name><operator pos:line="195" pos:column="47">-&gt;<pos:position pos:line="195" pos:column="52"/></operator><name pos:line="195" pos:column="49">word_ops_used<pos:position pos:line="195" pos:column="62"/></name></name> <operator pos:line="195" pos:column="63">!=<pos:position pos:line="195" pos:column="65"/></operator> <literal type="number" pos:line="195" pos:column="66">0<pos:position pos:line="195" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="195" pos:column="69">0<pos:position pos:line="195" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="195" pos:column="71"/></argument_list></call>
				      <operator pos:line="196" pos:column="39">&amp;&amp;<pos:position pos:line="196" pos:column="49"/></operator> <call><name pos:line="196" pos:column="42">IS_WIDE_WORD_CHAR<pos:position pos:line="196" pos:column="59"/></name> <argument_list pos:line="196" pos:column="60">(<argument><expr><name pos:line="196" pos:column="61">wc<pos:position pos:line="196" pos:column="63"/></name></expr></argument>)<pos:position pos:line="196" pos:column="64"/></argument_list></call><operator pos:line="196" pos:column="64">)<pos:position pos:line="196" pos:column="65"/></operator></expr>
				     ?<pos:position pos:line="197" pos:column="39"/></condition><then pos:line="197" pos:column="39"> <expr><name pos:line="197" pos:column="40">CONTEXT_WORD<pos:position pos:line="197" pos:column="52"/></name></expr>
				     <pos:position pos:line="198" pos:column="10"/></then><else pos:line="198" pos:column="38">: <expr><operator pos:line="198" pos:column="40">(<pos:position pos:line="198" pos:column="41"/></operator><ternary><condition><expr><operator pos:line="198" pos:column="41">(<pos:position pos:line="198" pos:column="42"/></operator><call><name pos:line="198" pos:column="42">IS_WIDE_NEWLINE<pos:position pos:line="198" pos:column="57"/></name> <argument_list pos:line="198" pos:column="58">(<argument><expr><name pos:line="198" pos:column="59">wc<pos:position pos:line="198" pos:column="61"/></name></expr></argument>)<pos:position pos:line="198" pos:column="62"/></argument_list></call>
					 <operator pos:line="199" pos:column="42">&amp;&amp;<pos:position pos:line="199" pos:column="52"/></operator> <name><name pos:line="199" pos:column="45">pstr<pos:position pos:line="199" pos:column="49"/></name><operator pos:line="199" pos:column="49">-&gt;<pos:position pos:line="199" pos:column="54"/></operator><name pos:line="199" pos:column="51">newline_anchor<pos:position pos:line="199" pos:column="65"/></name></name><operator pos:line="199" pos:column="65">)<pos:position pos:line="199" pos:column="66"/></operator></expr>
					?<pos:position pos:line="200" pos:column="42"/></condition><then pos:line="200" pos:column="42"> <expr><name pos:line="200" pos:column="43">CONTEXT_NEWLINE<pos:position pos:line="200" pos:column="58"/></name></expr> <pos:position pos:line="200" pos:column="59"/></then><else pos:line="200" pos:column="59">: <expr><literal type="number" pos:line="200" pos:column="61">0<pos:position pos:line="200" pos:column="62"/></literal></expr></else></ternary><operator pos:line="200" pos:column="62">)<pos:position pos:line="200" pos:column="63"/></operator></expr></else></ternary><operator pos:line="200" pos:column="63">)<pos:position pos:line="200" pos:column="64"/></operator></expr>;<pos:position pos:line="200" pos:column="65"/></expr_stmt></block></else></if>
	      <if pos:line="201" pos:column="15">if <condition pos:line="201" pos:column="18">(<expr><call><name pos:line="201" pos:column="19">BE<pos:position pos:line="201" pos:column="21"/></name> <argument_list pos:line="201" pos:column="22">(<argument><expr><name><name pos:line="201" pos:column="23">pstr<pos:position pos:line="201" pos:column="27"/></name><operator pos:line="201" pos:column="27">-&gt;<pos:position pos:line="201" pos:column="32"/></operator><name pos:line="201" pos:column="29">valid_len<pos:position pos:line="201" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="201" pos:column="40">0<pos:position pos:line="201" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="201" pos:column="43"/></condition><then pos:line="201" pos:column="43">
		<block pos:line="202" pos:column="17">{
		  <for pos:line="203" pos:column="19">for <control pos:line="203" pos:column="23">(<init><expr><name pos:line="203" pos:column="24">wcs_idx<pos:position pos:line="203" pos:column="31"/></name> <operator pos:line="203" pos:column="32">=<pos:position pos:line="203" pos:column="33"/></operator> <literal type="number" pos:line="203" pos:column="34">0<pos:position pos:line="203" pos:column="35"/></literal></expr>;<pos:position pos:line="203" pos:column="36"/></init> <condition><expr><name pos:line="203" pos:column="37">wcs_idx<pos:position pos:line="203" pos:column="44"/></name> <operator pos:line="203" pos:column="45">&lt;<pos:position pos:line="203" pos:column="49"/></operator> <name><name pos:line="203" pos:column="47">pstr<pos:position pos:line="203" pos:column="51"/></name><operator pos:line="203" pos:column="51">-&gt;<pos:position pos:line="203" pos:column="56"/></operator><name pos:line="203" pos:column="53">valid_len<pos:position pos:line="203" pos:column="62"/></name></name></expr>;<pos:position pos:line="203" pos:column="63"/></condition> <incr><expr><operator pos:line="203" pos:column="64">++<pos:position pos:line="203" pos:column="66"/></operator><name pos:line="203" pos:column="66">wcs_idx<pos:position pos:line="203" pos:column="73"/></name></expr></incr>)<pos:position pos:line="203" pos:column="74"/></control>
		    <block type="pseudo"><expr_stmt><expr><name><name pos:line="204" pos:column="21">pstr<pos:position pos:line="204" pos:column="25"/></name><operator pos:line="204" pos:column="25">-&gt;<pos:position pos:line="204" pos:column="30"/></operator><name pos:line="204" pos:column="27">wcs<pos:position pos:line="204" pos:column="30"/></name><index pos:line="204" pos:column="30">[<expr><name pos:line="204" pos:column="31">wcs_idx<pos:position pos:line="204" pos:column="38"/></name></expr>]<pos:position pos:line="204" pos:column="39"/></index></name> <operator pos:line="204" pos:column="40">=<pos:position pos:line="204" pos:column="41"/></operator> <name pos:line="204" pos:column="42">WEOF<pos:position pos:line="204" pos:column="46"/></name></expr>;<pos:position pos:line="204" pos:column="47"/></expr_stmt></block></for>
		  <if pos:line="205" pos:column="19">if <condition pos:line="205" pos:column="22">(<expr><name><name pos:line="205" pos:column="23">pstr<pos:position pos:line="205" pos:column="27"/></name><operator pos:line="205" pos:column="27">-&gt;<pos:position pos:line="205" pos:column="32"/></operator><name pos:line="205" pos:column="29">mbs_allocated<pos:position pos:line="205" pos:column="42"/></name></name></expr>)<pos:position pos:line="205" pos:column="43"/></condition><then pos:line="205" pos:column="43">
		    <block type="pseudo"><expr_stmt><expr><call><name pos:line="206" pos:column="21">memset<pos:position pos:line="206" pos:column="27"/></name> <argument_list pos:line="206" pos:column="28">(<argument><expr><name><name pos:line="206" pos:column="29">pstr<pos:position pos:line="206" pos:column="33"/></name><operator pos:line="206" pos:column="33">-&gt;<pos:position pos:line="206" pos:column="38"/></operator><name pos:line="206" pos:column="35">mbs<pos:position pos:line="206" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="206" pos:column="40">255<pos:position pos:line="206" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="206" pos:column="45">pstr<pos:position pos:line="206" pos:column="49"/></name><operator pos:line="206" pos:column="49">-&gt;<pos:position pos:line="206" pos:column="54"/></operator><name pos:line="206" pos:column="51">valid_len<pos:position pos:line="206" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="206" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="62"/></expr_stmt></block></then></if>
		}<pos:position pos:line="207" pos:column="18"/></block></then></if>
	      <expr_stmt><expr><name><name pos:line="208" pos:column="15">pstr<pos:position pos:line="208" pos:column="19"/></name><operator pos:line="208" pos:column="19">-&gt;<pos:position pos:line="208" pos:column="24"/></operator><name pos:line="208" pos:column="21">valid_raw_len<pos:position pos:line="208" pos:column="34"/></name></name> <operator pos:line="208" pos:column="35">=<pos:position pos:line="208" pos:column="36"/></operator> <name><name pos:line="208" pos:column="37">pstr<pos:position pos:line="208" pos:column="41"/></name><operator pos:line="208" pos:column="41">-&gt;<pos:position pos:line="208" pos:column="46"/></operator><name pos:line="208" pos:column="43">valid_len<pos:position pos:line="208" pos:column="52"/></name></name></expr>;<pos:position pos:line="208" pos:column="53"/></expr_stmt>
	    }<pos:position pos:line="209" pos:column="14"/></block></then>
	  <else pos:line="210" pos:column="11">else
<cpp:endif pos:line="211" pos:column="1">#<cpp:directive pos:line="211" pos:column="2">endif<pos:position pos:line="211" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="211" pos:column="8">/* RE_ENABLE_I18N */</comment>
	    <block pos:line="212" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="213" pos:column="15">int<pos:position pos:line="213" pos:column="18"/></name></type> <name pos:line="213" pos:column="19">c<pos:position pos:line="213" pos:column="20"/></name> <init pos:line="213" pos:column="21">= <expr><name><name pos:line="213" pos:column="23">pstr<pos:position pos:line="213" pos:column="27"/></name><operator pos:line="213" pos:column="27">-&gt;<pos:position pos:line="213" pos:column="32"/></operator><name pos:line="213" pos:column="29">raw_mbs<pos:position pos:line="213" pos:column="36"/></name><index pos:line="213" pos:column="36">[<expr><name><name pos:line="213" pos:column="37">pstr<pos:position pos:line="213" pos:column="41"/></name><operator pos:line="213" pos:column="41">-&gt;<pos:position pos:line="213" pos:column="46"/></operator><name pos:line="213" pos:column="43">raw_mbs_idx<pos:position pos:line="213" pos:column="54"/></name></name> <operator pos:line="213" pos:column="55">+<pos:position pos:line="213" pos:column="56"/></operator> <name pos:line="213" pos:column="57">offset<pos:position pos:line="213" pos:column="63"/></name> <operator pos:line="213" pos:column="64">-<pos:position pos:line="213" pos:column="65"/></operator> <literal type="number" pos:line="213" pos:column="66">1<pos:position pos:line="213" pos:column="67"/></literal></expr>]<pos:position pos:line="213" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="213" pos:column="69"/></decl_stmt>
	      <expr_stmt><expr><name><name pos:line="214" pos:column="15">pstr<pos:position pos:line="214" pos:column="19"/></name><operator pos:line="214" pos:column="19">-&gt;<pos:position pos:line="214" pos:column="24"/></operator><name pos:line="214" pos:column="21">valid_raw_len<pos:position pos:line="214" pos:column="34"/></name></name> <operator pos:line="214" pos:column="35">=<pos:position pos:line="214" pos:column="36"/></operator> <literal type="number" pos:line="214" pos:column="37">0<pos:position pos:line="214" pos:column="38"/></literal></expr>;<pos:position pos:line="214" pos:column="39"/></expr_stmt>
	      <if pos:line="215" pos:column="15">if <condition pos:line="215" pos:column="18">(<expr><name><name pos:line="215" pos:column="19">pstr<pos:position pos:line="215" pos:column="23"/></name><operator pos:line="215" pos:column="23">-&gt;<pos:position pos:line="215" pos:column="28"/></operator><name pos:line="215" pos:column="25">trans<pos:position pos:line="215" pos:column="30"/></name></name></expr>)<pos:position pos:line="215" pos:column="31"/></condition><then pos:line="215" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="216" pos:column="17">c<pos:position pos:line="216" pos:column="18"/></name> <operator pos:line="216" pos:column="19">=<pos:position pos:line="216" pos:column="20"/></operator> <name><name pos:line="216" pos:column="21">pstr<pos:position pos:line="216" pos:column="25"/></name><operator pos:line="216" pos:column="25">-&gt;<pos:position pos:line="216" pos:column="30"/></operator><name pos:line="216" pos:column="27">trans<pos:position pos:line="216" pos:column="32"/></name><index pos:line="216" pos:column="32">[<expr><name pos:line="216" pos:column="33">c<pos:position pos:line="216" pos:column="34"/></name></expr>]<pos:position pos:line="216" pos:column="35"/></index></name></expr>;<pos:position pos:line="216" pos:column="36"/></expr_stmt></block></then></if>
	      <expr_stmt><expr><name><name pos:line="217" pos:column="15">pstr<pos:position pos:line="217" pos:column="19"/></name><operator pos:line="217" pos:column="19">-&gt;<pos:position pos:line="217" pos:column="24"/></operator><name pos:line="217" pos:column="21">tip_context<pos:position pos:line="217" pos:column="32"/></name></name> <operator pos:line="217" pos:column="33">=<pos:position pos:line="217" pos:column="34"/></operator> <operator pos:line="217" pos:column="35">(<pos:position pos:line="217" pos:column="36"/></operator><ternary><condition><expr><call><name pos:line="217" pos:column="36">bitset_contain<pos:position pos:line="217" pos:column="50"/></name> <argument_list pos:line="217" pos:column="51">(<argument><expr><name><name pos:line="217" pos:column="52">pstr<pos:position pos:line="217" pos:column="56"/></name><operator pos:line="217" pos:column="56">-&gt;<pos:position pos:line="217" pos:column="61"/></operator><name pos:line="217" pos:column="58">word_char<pos:position pos:line="217" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="69">c<pos:position pos:line="217" pos:column="70"/></name></expr></argument>)<pos:position pos:line="217" pos:column="71"/></argument_list></call></expr>
				   ?<pos:position pos:line="218" pos:column="37"/></condition><then pos:line="218" pos:column="37"> <expr><name pos:line="218" pos:column="38">CONTEXT_WORD<pos:position pos:line="218" pos:column="50"/></name></expr>
				   <pos:position pos:line="219" pos:column="8"/></then><else pos:line="219" pos:column="36">: <expr><operator pos:line="219" pos:column="38">(<pos:position pos:line="219" pos:column="39"/></operator><ternary><condition><expr><operator pos:line="219" pos:column="39">(<pos:position pos:line="219" pos:column="40"/></operator><call><name pos:line="219" pos:column="40">IS_NEWLINE<pos:position pos:line="219" pos:column="50"/></name> <argument_list pos:line="219" pos:column="51">(<argument><expr><name pos:line="219" pos:column="52">c<pos:position pos:line="219" pos:column="53"/></name></expr></argument>)<pos:position pos:line="219" pos:column="54"/></argument_list></call> <operator pos:line="219" pos:column="55">&amp;&amp;<pos:position pos:line="219" pos:column="65"/></operator> <name><name pos:line="219" pos:column="58">pstr<pos:position pos:line="219" pos:column="62"/></name><operator pos:line="219" pos:column="62">-&gt;<pos:position pos:line="219" pos:column="67"/></operator><name pos:line="219" pos:column="64">newline_anchor<pos:position pos:line="219" pos:column="78"/></name></name><operator pos:line="219" pos:column="78">)<pos:position pos:line="219" pos:column="79"/></operator></expr>
				      ?<pos:position pos:line="220" pos:column="40"/></condition><then pos:line="220" pos:column="40"> <expr><name pos:line="220" pos:column="41">CONTEXT_NEWLINE<pos:position pos:line="220" pos:column="56"/></name></expr> <pos:position pos:line="220" pos:column="57"/></then><else pos:line="220" pos:column="57">: <expr><literal type="number" pos:line="220" pos:column="59">0<pos:position pos:line="220" pos:column="60"/></literal></expr></else></ternary><operator pos:line="220" pos:column="60">)<pos:position pos:line="220" pos:column="61"/></operator></expr></else></ternary><operator pos:line="220" pos:column="61">)<pos:position pos:line="220" pos:column="62"/></operator></expr>;<pos:position pos:line="220" pos:column="63"/></expr_stmt>
	    }<pos:position pos:line="221" pos:column="14"/></block></else></if>
	}<pos:position pos:line="222" pos:column="10"/></block></else></if>
      <if pos:line="223" pos:column="7">if <condition pos:line="223" pos:column="10">(<expr><operator pos:line="223" pos:column="11">!<pos:position pos:line="223" pos:column="12"/></operator><call><name pos:line="223" pos:column="12">BE<pos:position pos:line="223" pos:column="14"/></name> <argument_list pos:line="223" pos:column="15">(<argument><expr><name><name pos:line="223" pos:column="16">pstr<pos:position pos:line="223" pos:column="20"/></name><operator pos:line="223" pos:column="20">-&gt;<pos:position pos:line="223" pos:column="25"/></operator><name pos:line="223" pos:column="22">mbs_allocated<pos:position pos:line="223" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="223" pos:column="37">0<pos:position pos:line="223" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="223" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="223" pos:column="40"/></condition><then pos:line="223" pos:column="40">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="224" pos:column="9">pstr<pos:position pos:line="224" pos:column="13"/></name><operator pos:line="224" pos:column="13">-&gt;<pos:position pos:line="224" pos:column="18"/></operator><name pos:line="224" pos:column="15">mbs<pos:position pos:line="224" pos:column="18"/></name></name> <operator pos:line="224" pos:column="19">+=<pos:position pos:line="224" pos:column="21"/></operator> <name pos:line="224" pos:column="22">offset<pos:position pos:line="224" pos:column="28"/></name></expr>;<pos:position pos:line="224" pos:column="29"/></expr_stmt></block></then></if>
    }<pos:position pos:line="225" pos:column="6"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="226" pos:column="3">pstr<pos:position pos:line="226" pos:column="7"/></name><operator pos:line="226" pos:column="7">-&gt;<pos:position pos:line="226" pos:column="12"/></operator><name pos:line="226" pos:column="9">raw_mbs_idx<pos:position pos:line="226" pos:column="20"/></name></name> <operator pos:line="226" pos:column="21">=<pos:position pos:line="226" pos:column="22"/></operator> <name pos:line="226" pos:column="23">idx<pos:position pos:line="226" pos:column="26"/></name></expr>;<pos:position pos:line="226" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="227" pos:column="3">pstr<pos:position pos:line="227" pos:column="7"/></name><operator pos:line="227" pos:column="7">-&gt;<pos:position pos:line="227" pos:column="12"/></operator><name pos:line="227" pos:column="9">len<pos:position pos:line="227" pos:column="12"/></name></name> <operator pos:line="227" pos:column="13">-=<pos:position pos:line="227" pos:column="15"/></operator> <name pos:line="227" pos:column="16">offset<pos:position pos:line="227" pos:column="22"/></name></expr>;<pos:position pos:line="227" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="228" pos:column="3">pstr<pos:position pos:line="228" pos:column="7"/></name><operator pos:line="228" pos:column="7">-&gt;<pos:position pos:line="228" pos:column="12"/></operator><name pos:line="228" pos:column="9">stop<pos:position pos:line="228" pos:column="13"/></name></name> <operator pos:line="228" pos:column="14">-=<pos:position pos:line="228" pos:column="16"/></operator> <name pos:line="228" pos:column="17">offset<pos:position pos:line="228" pos:column="23"/></name></expr>;<pos:position pos:line="228" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="230" pos:column="3">/* Then build the buffers.  */</comment>
<cpp:ifdef pos:line="231" pos:column="1">#<cpp:directive pos:line="231" pos:column="2">ifdef<pos:position pos:line="231" pos:column="7"/></cpp:directive> <name pos:line="231" pos:column="8">RE_ENABLE_I18N<pos:position pos:line="231" pos:column="22"/></name></cpp:ifdef>
  <if pos:line="232" pos:column="3">if <condition pos:line="232" pos:column="6">(<expr><name><name pos:line="232" pos:column="7">pstr<pos:position pos:line="232" pos:column="11"/></name><operator pos:line="232" pos:column="11">-&gt;<pos:position pos:line="232" pos:column="16"/></operator><name pos:line="232" pos:column="13">mb_cur_max<pos:position pos:line="232" pos:column="23"/></name></name> <operator pos:line="232" pos:column="24">&gt;<pos:position pos:line="232" pos:column="28"/></operator> <literal type="number" pos:line="232" pos:column="26">1<pos:position pos:line="232" pos:column="27"/></literal></expr>)<pos:position pos:line="232" pos:column="28"/></condition><then pos:line="232" pos:column="28">
    <block pos:line="233" pos:column="5">{
      <if pos:line="234" pos:column="7">if <condition pos:line="234" pos:column="10">(<expr><name><name pos:line="234" pos:column="11">pstr<pos:position pos:line="234" pos:column="15"/></name><operator pos:line="234" pos:column="15">-&gt;<pos:position pos:line="234" pos:column="20"/></operator><name pos:line="234" pos:column="17">icase<pos:position pos:line="234" pos:column="22"/></name></name></expr>)<pos:position pos:line="234" pos:column="23"/></condition><then pos:line="234" pos:column="23">
	<block pos:line="235" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="236" pos:column="11">reg_errcode_t<pos:position pos:line="236" pos:column="24"/></name></type> <name pos:line="236" pos:column="25">ret<pos:position pos:line="236" pos:column="28"/></name> <init pos:line="236" pos:column="29">= <expr><call><name pos:line="236" pos:column="31">build_wcs_upper_buffer<pos:position pos:line="236" pos:column="53"/></name> <argument_list pos:line="236" pos:column="54">(<argument><expr><name pos:line="236" pos:column="55">pstr<pos:position pos:line="236" pos:column="59"/></name></expr></argument>)<pos:position pos:line="236" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="236" pos:column="61"/></decl_stmt>
	  <if pos:line="237" pos:column="11">if <condition pos:line="237" pos:column="14">(<expr><call><name pos:line="237" pos:column="15">BE<pos:position pos:line="237" pos:column="17"/></name> <argument_list pos:line="237" pos:column="18">(<argument><expr><name pos:line="237" pos:column="19">ret<pos:position pos:line="237" pos:column="22"/></name> <operator pos:line="237" pos:column="23">!=<pos:position pos:line="237" pos:column="25"/></operator> <name pos:line="237" pos:column="26">REG_NOERROR<pos:position pos:line="237" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="237" pos:column="39">0<pos:position pos:line="237" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="237" pos:column="42"/></condition><then pos:line="237" pos:column="42">
	    <block type="pseudo"><return pos:line="238" pos:column="13">return <expr><name pos:line="238" pos:column="20">ret<pos:position pos:line="238" pos:column="23"/></name></expr>;<pos:position pos:line="238" pos:column="24"/></return></block></then></if>
	}<pos:position pos:line="239" pos:column="10"/></block></then>
      <else pos:line="240" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="241" pos:column="9">build_wcs_buffer<pos:position pos:line="241" pos:column="25"/></name> <argument_list pos:line="241" pos:column="26">(<argument><expr><name pos:line="241" pos:column="27">pstr<pos:position pos:line="241" pos:column="31"/></name></expr></argument>)<pos:position pos:line="241" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="33"/></expr_stmt></block></else></if>
    }<pos:position pos:line="242" pos:column="6"/></block></then>
  <elseif pos:line="243" pos:column="3">else
<cpp:endif pos:line="244" pos:column="1">#<cpp:directive pos:line="244" pos:column="2">endif<pos:position pos:line="244" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="244" pos:column="8">/* RE_ENABLE_I18N */</comment>
    <if pos:line="245" pos:column="5">if <condition pos:line="245" pos:column="8">(<expr><call><name pos:line="245" pos:column="9">BE<pos:position pos:line="245" pos:column="11"/></name> <argument_list pos:line="245" pos:column="12">(<argument><expr><name><name pos:line="245" pos:column="13">pstr<pos:position pos:line="245" pos:column="17"/></name><operator pos:line="245" pos:column="17">-&gt;<pos:position pos:line="245" pos:column="22"/></operator><name pos:line="245" pos:column="19">mbs_allocated<pos:position pos:line="245" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="245" pos:column="34">0<pos:position pos:line="245" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="245" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="245" pos:column="37"/></condition><then pos:line="245" pos:column="37">
      <block pos:line="246" pos:column="7">{
	<if pos:line="247" pos:column="9">if <condition pos:line="247" pos:column="12">(<expr><name><name pos:line="247" pos:column="13">pstr<pos:position pos:line="247" pos:column="17"/></name><operator pos:line="247" pos:column="17">-&gt;<pos:position pos:line="247" pos:column="22"/></operator><name pos:line="247" pos:column="19">icase<pos:position pos:line="247" pos:column="24"/></name></name></expr>)<pos:position pos:line="247" pos:column="25"/></condition><then pos:line="247" pos:column="25">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="248" pos:column="11">build_upper_buffer<pos:position pos:line="248" pos:column="29"/></name> <argument_list pos:line="248" pos:column="30">(<argument><expr><name pos:line="248" pos:column="31">pstr<pos:position pos:line="248" pos:column="35"/></name></expr></argument>)<pos:position pos:line="248" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="37"/></expr_stmt></block></then>
	<elseif pos:line="249" pos:column="9">else <if pos:line="249" pos:column="14">if <condition pos:line="249" pos:column="17">(<expr><name><name pos:line="249" pos:column="18">pstr<pos:position pos:line="249" pos:column="22"/></name><operator pos:line="249" pos:column="22">-&gt;<pos:position pos:line="249" pos:column="27"/></operator><name pos:line="249" pos:column="24">trans<pos:position pos:line="249" pos:column="29"/></name></name> <operator pos:line="249" pos:column="30">!=<pos:position pos:line="249" pos:column="32"/></operator> <name pos:line="249" pos:column="33">NULL<pos:position pos:line="249" pos:column="37"/></name></expr>)<pos:position pos:line="249" pos:column="38"/></condition><then pos:line="249" pos:column="38">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="250" pos:column="11">re_string_translate_buffer<pos:position pos:line="250" pos:column="37"/></name> <argument_list pos:line="250" pos:column="38">(<argument><expr><name pos:line="250" pos:column="39">pstr<pos:position pos:line="250" pos:column="43"/></name></expr></argument>)<pos:position pos:line="250" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="45"/></expr_stmt></block></then></if></elseif></if>
      }<pos:position pos:line="251" pos:column="8"/></block></then></if></elseif>
    <else pos:line="252" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="253" pos:column="7">pstr<pos:position pos:line="253" pos:column="11"/></name><operator pos:line="253" pos:column="11">-&gt;<pos:position pos:line="253" pos:column="16"/></operator><name pos:line="253" pos:column="13">valid_len<pos:position pos:line="253" pos:column="22"/></name></name> <operator pos:line="253" pos:column="23">=<pos:position pos:line="253" pos:column="24"/></operator> <name><name pos:line="253" pos:column="25">pstr<pos:position pos:line="253" pos:column="29"/></name><operator pos:line="253" pos:column="29">-&gt;<pos:position pos:line="253" pos:column="34"/></operator><name pos:line="253" pos:column="31">len<pos:position pos:line="253" pos:column="34"/></name></name></expr>;<pos:position pos:line="253" pos:column="35"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name><name pos:line="255" pos:column="3">pstr<pos:position pos:line="255" pos:column="7"/></name><operator pos:line="255" pos:column="7">-&gt;<pos:position pos:line="255" pos:column="12"/></operator><name pos:line="255" pos:column="9">cur_idx<pos:position pos:line="255" pos:column="16"/></name></name> <operator pos:line="255" pos:column="17">=<pos:position pos:line="255" pos:column="18"/></operator> <literal type="number" pos:line="255" pos:column="19">0<pos:position pos:line="255" pos:column="20"/></literal></expr>;<pos:position pos:line="255" pos:column="21"/></expr_stmt>
  <return pos:line="256" pos:column="3">return <expr><name pos:line="256" pos:column="10">REG_NOERROR<pos:position pos:line="256" pos:column="21"/></name></expr>;<pos:position pos:line="256" pos:column="22"/></return>
}<pos:position pos:line="257" pos:column="2"/></block></function></unit>

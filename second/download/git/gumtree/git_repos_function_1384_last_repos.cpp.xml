<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1384_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">find_pos<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">apply_state<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">state<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
		    <parameter><decl><type><name><name pos:line="2" pos:column="21">struct<pos:position pos:line="2" pos:column="27"/></name> <name pos:line="2" pos:column="28">image<pos:position pos:line="2" pos:column="33"/></name></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">img<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>,
		    <parameter><decl><type><name><name pos:line="3" pos:column="21">struct<pos:position pos:line="3" pos:column="27"/></name> <name pos:line="3" pos:column="28">image<pos:position pos:line="3" pos:column="33"/></name></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">preimage<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>,
		    <parameter><decl><type><name><name pos:line="4" pos:column="21">struct<pos:position pos:line="4" pos:column="27"/></name> <name pos:line="4" pos:column="28">image<pos:position pos:line="4" pos:column="33"/></name></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">postimage<pos:position pos:line="4" pos:column="44"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="5" pos:column="21">int<pos:position pos:line="5" pos:column="24"/></name></type> <name pos:line="5" pos:column="25">line<pos:position pos:line="5" pos:column="29"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="6" pos:column="21">unsigned<pos:position pos:line="6" pos:column="29"/></name></type> <name pos:line="6" pos:column="30">ws_rule<pos:position pos:line="6" pos:column="37"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="7" pos:column="21">int<pos:position pos:line="7" pos:column="24"/></name></type> <name pos:line="7" pos:column="25">match_beginning<pos:position pos:line="7" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="7" pos:column="42">int<pos:position pos:line="7" pos:column="45"/></name></type> <name pos:line="7" pos:column="46">match_end<pos:position pos:line="7" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="56"/></parameter_list>
<block pos:line="8" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">long<pos:position pos:line="10" pos:column="22"/></name></type> <name pos:line="10" pos:column="23">backwards<pos:position pos:line="10" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="34">forwards<pos:position pos:line="10" pos:column="42"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="44">try<pos:position pos:line="10" pos:column="47"/></name></decl>;<pos:position pos:line="10" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">backwards_lno<pos:position pos:line="11" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="28">forwards_lno<pos:position pos:line="11" pos:column="40"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="42">try_lno<pos:position pos:line="11" pos:column="49"/></name></decl>;<pos:position pos:line="11" pos:column="50"/></decl_stmt>

	<comment type="block" pos:line="13" pos:column="9">/*
	 * If match_beginning or match_end is specified, there is no
	 * point starting from a wrong line that will never match and
	 * wander around and wait for a match at the specified end.
	 */</comment>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">match_beginning<pos:position pos:line="18" pos:column="28"/></name></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">line<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt></block></then>
	<elseif pos:line="20" pos:column="9">else <if pos:line="20" pos:column="14">if <condition pos:line="20" pos:column="17">(<expr><name pos:line="20" pos:column="18">match_end<pos:position pos:line="20" pos:column="27"/></name></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">line<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <name><name pos:line="21" pos:column="24">img<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">-&gt;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="29">nr<pos:position pos:line="21" pos:column="31"/></name></name> <operator pos:line="21" pos:column="32">-<pos:position pos:line="21" pos:column="33"/></operator> <name><name pos:line="21" pos:column="34">preimage<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">-&gt;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="44">nr<pos:position pos:line="21" pos:column="46"/></name></name></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt></block></then></if></elseif></if>

	<comment type="block" pos:line="23" pos:column="9">/*
	 * Because the comparison is unsigned, the following test
	 * will also take care of a negative line number that can
	 * result when match_end and preimage is larger than the target.
	 */</comment>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">size_t<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">)<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">line<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">&gt;<pos:position pos:line="28" pos:column="31"/></operator> <name><name pos:line="28" pos:column="29">img<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">nr<pos:position pos:line="28" pos:column="36"/></name></name></expr>)<pos:position pos:line="28" pos:column="37"/></condition><then pos:line="28" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="17">line<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <name><name pos:line="29" pos:column="24">img<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">nr<pos:position pos:line="29" pos:column="31"/></name></name></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="31" pos:column="9">try<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <literal type="number" pos:line="31" pos:column="15">0<pos:position pos:line="31" pos:column="16"/></literal></expr>;<pos:position pos:line="31" pos:column="17"/></expr_stmt>
	<for pos:line="32" pos:column="9">for <control pos:line="32" pos:column="13">(<init><expr><name pos:line="32" pos:column="14">i<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <literal type="number" pos:line="32" pos:column="18">0<pos:position pos:line="32" pos:column="19"/></literal></expr>;<pos:position pos:line="32" pos:column="20"/></init> <condition><expr><name pos:line="32" pos:column="21">i<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">&lt;<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="25">line<pos:position pos:line="32" pos:column="29"/></name></expr>;<pos:position pos:line="32" pos:column="30"/></condition> <incr><expr><name pos:line="32" pos:column="31">i<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">++<pos:position pos:line="32" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="35"/></control>
		<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="17">try<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">+=<pos:position pos:line="33" pos:column="23"/></operator> <name><name pos:line="33" pos:column="24">img<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">line<pos:position pos:line="33" pos:column="33"/></name><index pos:line="33" pos:column="33">[<expr><name pos:line="33" pos:column="34">i<pos:position pos:line="33" pos:column="35"/></name></expr>]<pos:position pos:line="33" pos:column="36"/></index></name><operator pos:line="33" pos:column="36">.<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="37">len<pos:position pos:line="33" pos:column="40"/></name></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt></block></for>

	<comment type="block" pos:line="35" pos:column="9">/*
	 * There's probably some smart way to do this, but I'll leave
	 * that to the smart and beautiful people. I'm simple and stupid.
	 */</comment>
	<expr_stmt><expr><name pos:line="39" pos:column="9">backwards<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <name pos:line="39" pos:column="21">try<pos:position pos:line="39" pos:column="24"/></name></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="40" pos:column="9">backwards_lno<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <name pos:line="40" pos:column="25">line<pos:position pos:line="40" pos:column="29"/></name></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="41" pos:column="9">forwards<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <name pos:line="41" pos:column="20">try<pos:position pos:line="41" pos:column="23"/></name></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="42" pos:column="9">forwards_lno<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="24">line<pos:position pos:line="42" pos:column="28"/></name></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="43" pos:column="9">try_lno<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <name pos:line="43" pos:column="19">line<pos:position pos:line="43" pos:column="23"/></name></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>

	<for pos:line="45" pos:column="9">for <control pos:line="45" pos:column="13">(<init><expr><name pos:line="45" pos:column="14">i<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <literal type="number" pos:line="45" pos:column="18">0<pos:position pos:line="45" pos:column="19"/></literal></expr>;<pos:position pos:line="45" pos:column="20"/></init> <condition pos:line="45" pos:column="21">;<pos:position pos:line="45" pos:column="22"/></condition> <incr><expr><name pos:line="45" pos:column="23">i<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">++<pos:position pos:line="45" pos:column="26"/></operator></expr></incr>)<pos:position pos:line="45" pos:column="27"/></control> <block pos:line="45" pos:column="28">{
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><call><name pos:line="46" pos:column="21">match_fragment<pos:position pos:line="46" pos:column="35"/></name><argument_list pos:line="46" pos:column="35">(<argument><expr><name pos:line="46" pos:column="36">state<pos:position pos:line="46" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="43">img<pos:position pos:line="46" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="48">preimage<pos:position pos:line="46" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="58">postimage<pos:position pos:line="46" pos:column="67"/></name></expr></argument>,
				   <argument><expr><name pos:line="47" pos:column="36">try<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="41">try_lno<pos:position pos:line="47" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="50">ws_rule<pos:position pos:line="47" pos:column="57"/></name></expr></argument>,
				   <argument><expr><name pos:line="48" pos:column="36">match_beginning<pos:position pos:line="48" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="53">match_end<pos:position pos:line="48" pos:column="62"/></name></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="64"/></condition><then pos:line="48" pos:column="64">
			<block type="pseudo"><return pos:line="49" pos:column="25">return <expr><name pos:line="49" pos:column="32">try_lno<pos:position pos:line="49" pos:column="39"/></name></expr>;<pos:position pos:line="49" pos:column="40"/></return></block></then></if>

	<label><name pos:line="51" pos:column="9">again<pos:position pos:line="51" pos:column="14"/></name>:<pos:position pos:line="51" pos:column="15"/></label>
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><name pos:line="52" pos:column="21">backwards_lno<pos:position pos:line="52" pos:column="34"/></name> <operator pos:line="52" pos:column="35">==<pos:position pos:line="52" pos:column="37"/></operator> <literal type="number" pos:line="52" pos:column="38">0<pos:position pos:line="52" pos:column="39"/></literal> <operator pos:line="52" pos:column="40">&amp;&amp;<pos:position pos:line="52" pos:column="50"/></operator> <name pos:line="52" pos:column="43">forwards_lno<pos:position pos:line="52" pos:column="55"/></name> <operator pos:line="52" pos:column="56">==<pos:position pos:line="52" pos:column="58"/></operator> <name><name pos:line="52" pos:column="59">img<pos:position pos:line="52" pos:column="62"/></name><operator pos:line="52" pos:column="62">-&gt;<pos:position pos:line="52" pos:column="67"/></operator><name pos:line="52" pos:column="64">nr<pos:position pos:line="52" pos:column="66"/></name></name></expr>)<pos:position pos:line="52" pos:column="67"/></condition><then pos:line="52" pos:column="67">
			<block type="pseudo"><break pos:line="53" pos:column="25">break;<pos:position pos:line="53" pos:column="31"/></break></block></then></if>

		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name pos:line="55" pos:column="21">i<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">&amp;<pos:position pos:line="55" pos:column="28"/></operator> <literal type="number" pos:line="55" pos:column="25">1<pos:position pos:line="55" pos:column="26"/></literal></expr>)<pos:position pos:line="55" pos:column="27"/></condition><then pos:line="55" pos:column="27"> <block pos:line="55" pos:column="28">{
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><name pos:line="56" pos:column="29">backwards_lno<pos:position pos:line="56" pos:column="42"/></name> <operator pos:line="56" pos:column="43">==<pos:position pos:line="56" pos:column="45"/></operator> <literal type="number" pos:line="56" pos:column="46">0<pos:position pos:line="56" pos:column="47"/></literal></expr>)<pos:position pos:line="56" pos:column="48"/></condition><then pos:line="56" pos:column="48"> <block pos:line="56" pos:column="49">{
				<expr_stmt><expr><name pos:line="57" pos:column="33">i<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">++<pos:position pos:line="57" pos:column="36"/></operator></expr>;<pos:position pos:line="57" pos:column="37"/></expr_stmt>
				<goto pos:line="58" pos:column="33">goto <name pos:line="58" pos:column="38">again<pos:position pos:line="58" pos:column="43"/></name>;<pos:position pos:line="58" pos:column="44"/></goto>
			}<pos:position pos:line="59" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="60" pos:column="25">backwards_lno<pos:position pos:line="60" pos:column="38"/></name><operator pos:line="60" pos:column="38">--<pos:position pos:line="60" pos:column="40"/></operator></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="61" pos:column="25">backwards<pos:position pos:line="61" pos:column="34"/></name> <operator pos:line="61" pos:column="35">-=<pos:position pos:line="61" pos:column="37"/></operator> <name><name pos:line="61" pos:column="38">img<pos:position pos:line="61" pos:column="41"/></name><operator pos:line="61" pos:column="41">-&gt;<pos:position pos:line="61" pos:column="46"/></operator><name pos:line="61" pos:column="43">line<pos:position pos:line="61" pos:column="47"/></name><index pos:line="61" pos:column="47">[<expr><name pos:line="61" pos:column="48">backwards_lno<pos:position pos:line="61" pos:column="61"/></name></expr>]<pos:position pos:line="61" pos:column="62"/></index></name><operator pos:line="61" pos:column="62">.<pos:position pos:line="61" pos:column="63"/></operator><name pos:line="61" pos:column="63">len<pos:position pos:line="61" pos:column="66"/></name></expr>;<pos:position pos:line="61" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><name pos:line="62" pos:column="25">try<pos:position pos:line="62" pos:column="28"/></name> <operator pos:line="62" pos:column="29">=<pos:position pos:line="62" pos:column="30"/></operator> <name pos:line="62" pos:column="31">backwards<pos:position pos:line="62" pos:column="40"/></name></expr>;<pos:position pos:line="62" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="63" pos:column="25">try_lno<pos:position pos:line="63" pos:column="32"/></name> <operator pos:line="63" pos:column="33">=<pos:position pos:line="63" pos:column="34"/></operator> <name pos:line="63" pos:column="35">backwards_lno<pos:position pos:line="63" pos:column="48"/></name></expr>;<pos:position pos:line="63" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></then> <else pos:line="64" pos:column="19">else <block pos:line="64" pos:column="24">{
			<if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><name pos:line="65" pos:column="29">forwards_lno<pos:position pos:line="65" pos:column="41"/></name> <operator pos:line="65" pos:column="42">==<pos:position pos:line="65" pos:column="44"/></operator> <name><name pos:line="65" pos:column="45">img<pos:position pos:line="65" pos:column="48"/></name><operator pos:line="65" pos:column="48">-&gt;<pos:position pos:line="65" pos:column="53"/></operator><name pos:line="65" pos:column="50">nr<pos:position pos:line="65" pos:column="52"/></name></name></expr>)<pos:position pos:line="65" pos:column="53"/></condition><then pos:line="65" pos:column="53"> <block pos:line="65" pos:column="54">{
				<expr_stmt><expr><name pos:line="66" pos:column="33">i<pos:position pos:line="66" pos:column="34"/></name><operator pos:line="66" pos:column="34">++<pos:position pos:line="66" pos:column="36"/></operator></expr>;<pos:position pos:line="66" pos:column="37"/></expr_stmt>
				<goto pos:line="67" pos:column="33">goto <name pos:line="67" pos:column="38">again<pos:position pos:line="67" pos:column="43"/></name>;<pos:position pos:line="67" pos:column="44"/></goto>
			}<pos:position pos:line="68" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="69" pos:column="25">forwards<pos:position pos:line="69" pos:column="33"/></name> <operator pos:line="69" pos:column="34">+=<pos:position pos:line="69" pos:column="36"/></operator> <name><name pos:line="69" pos:column="37">img<pos:position pos:line="69" pos:column="40"/></name><operator pos:line="69" pos:column="40">-&gt;<pos:position pos:line="69" pos:column="45"/></operator><name pos:line="69" pos:column="42">line<pos:position pos:line="69" pos:column="46"/></name><index pos:line="69" pos:column="46">[<expr><name pos:line="69" pos:column="47">forwards_lno<pos:position pos:line="69" pos:column="59"/></name></expr>]<pos:position pos:line="69" pos:column="60"/></index></name><operator pos:line="69" pos:column="60">.<pos:position pos:line="69" pos:column="61"/></operator><name pos:line="69" pos:column="61">len<pos:position pos:line="69" pos:column="64"/></name></expr>;<pos:position pos:line="69" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><name pos:line="70" pos:column="25">forwards_lno<pos:position pos:line="70" pos:column="37"/></name><operator pos:line="70" pos:column="37">++<pos:position pos:line="70" pos:column="39"/></operator></expr>;<pos:position pos:line="70" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="71" pos:column="25">try<pos:position pos:line="71" pos:column="28"/></name> <operator pos:line="71" pos:column="29">=<pos:position pos:line="71" pos:column="30"/></operator> <name pos:line="71" pos:column="31">forwards<pos:position pos:line="71" pos:column="39"/></name></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="72" pos:column="25">try_lno<pos:position pos:line="72" pos:column="32"/></name> <operator pos:line="72" pos:column="33">=<pos:position pos:line="72" pos:column="34"/></operator> <name pos:line="72" pos:column="35">forwards_lno<pos:position pos:line="72" pos:column="47"/></name></expr>;<pos:position pos:line="72" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="73" pos:column="18"/></block></else></if>

	}<pos:position pos:line="75" pos:column="10"/></block></for>
	<return pos:line="76" pos:column="9">return <expr><operator pos:line="76" pos:column="16">-<pos:position pos:line="76" pos:column="17"/></operator><literal type="number" pos:line="76" pos:column="17">1<pos:position pos:line="76" pos:column="18"/></literal></expr>;<pos:position pos:line="76" pos:column="19"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5210_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">unpack_one<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">unsigned<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">nr<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">shift<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">pack<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">long<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">size<pos:position pos:line="5" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="29">c<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">enum<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">object_type<pos:position pos:line="6" pos:column="25"/></name></name></type> <name pos:line="6" pos:column="26">type<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="8" pos:column="9">obj_list<pos:position pos:line="8" pos:column="17"/></name><index pos:line="8" pos:column="17">[<expr><name pos:line="8" pos:column="18">nr<pos:position pos:line="8" pos:column="20"/></name></expr>]<pos:position pos:line="8" pos:column="21"/></index></name><operator pos:line="8" pos:column="21">.<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">offset<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">=<pos:position pos:line="8" pos:column="30"/></operator> <name pos:line="8" pos:column="31">consumed_bytes<pos:position pos:line="8" pos:column="45"/></name></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">pack<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">fill<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><literal type="number" pos:line="10" pos:column="21">1<pos:position pos:line="10" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">c<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <operator pos:line="11" pos:column="13">*<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">pack<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">use<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">type<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">c<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">&gt;&gt;<pos:position pos:line="13" pos:column="24"/></operator> <literal type="number" pos:line="13" pos:column="22">4<pos:position pos:line="13" pos:column="23"/></literal><operator pos:line="13" pos:column="23">)<pos:position pos:line="13" pos:column="24"/></operator> <operator pos:line="13" pos:column="25">&amp;<pos:position pos:line="13" pos:column="30"/></operator> <literal type="number" pos:line="13" pos:column="27">7<pos:position pos:line="13" pos:column="28"/></literal></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">size<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">c<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">&amp;<pos:position pos:line="14" pos:column="24"/></operator> <literal type="number" pos:line="14" pos:column="21">15<pos:position pos:line="14" pos:column="23"/></literal><operator pos:line="14" pos:column="23">)<pos:position pos:line="14" pos:column="24"/></operator></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">shift<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <literal type="number" pos:line="15" pos:column="17">4<pos:position pos:line="15" pos:column="18"/></literal></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>
	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><name pos:line="16" pos:column="16">c<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">&amp;<pos:position pos:line="16" pos:column="23"/></operator> <literal type="number" pos:line="16" pos:column="20">0x80<pos:position pos:line="16" pos:column="24"/></literal></expr>)<pos:position pos:line="16" pos:column="25"/></condition> <block pos:line="16" pos:column="26">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">pack<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <call><name pos:line="17" pos:column="24">fill<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><literal type="number" pos:line="17" pos:column="29">1<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">c<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <operator pos:line="18" pos:column="21">*<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">pack<pos:position pos:line="18" pos:column="26"/></name></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">use<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><literal type="number" pos:line="19" pos:column="21">1<pos:position pos:line="19" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">size<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">+=<pos:position pos:line="20" pos:column="24"/></operator> <operator pos:line="20" pos:column="25">(<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">c<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">&amp;<pos:position pos:line="20" pos:column="33"/></operator> <literal type="number" pos:line="20" pos:column="30">0x7f<pos:position pos:line="20" pos:column="34"/></literal><operator pos:line="20" pos:column="34">)<pos:position pos:line="20" pos:column="35"/></operator> <operator pos:line="20" pos:column="36">&lt;&lt;<pos:position pos:line="20" pos:column="44"/></operator> <name pos:line="20" pos:column="39">shift<pos:position pos:line="20" pos:column="44"/></name></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">shift<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">+=<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="26">7<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></while>

	<switch pos:line="24" pos:column="9">switch <condition pos:line="24" pos:column="16">(<expr><name pos:line="24" pos:column="17">type<pos:position pos:line="24" pos:column="21"/></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition> <block pos:line="24" pos:column="23">{
	<case pos:line="25" pos:column="9">case <expr><name pos:line="25" pos:column="14">OBJ_COMMIT<pos:position pos:line="25" pos:column="24"/></name></expr>:<pos:position pos:line="25" pos:column="25"/></case>
	<case pos:line="26" pos:column="9">case <expr><name pos:line="26" pos:column="14">OBJ_TREE<pos:position pos:line="26" pos:column="22"/></name></expr>:<pos:position pos:line="26" pos:column="23"/></case>
	<case pos:line="27" pos:column="9">case <expr><name pos:line="27" pos:column="14">OBJ_BLOB<pos:position pos:line="27" pos:column="22"/></name></expr>:<pos:position pos:line="27" pos:column="23"/></case>
	<case pos:line="28" pos:column="9">case <expr><name pos:line="28" pos:column="14">OBJ_TAG<pos:position pos:line="28" pos:column="21"/></name></expr>:<pos:position pos:line="28" pos:column="22"/></case>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">unpack_non_delta_entry<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">(<argument><expr><name pos:line="29" pos:column="40">type<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">size<pos:position pos:line="29" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="52">nr<pos:position pos:line="29" pos:column="54"/></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
		<return pos:line="30" pos:column="17">return;<pos:position pos:line="30" pos:column="24"/></return>
	<case pos:line="31" pos:column="9">case <expr><name pos:line="31" pos:column="14">OBJ_REF_DELTA<pos:position pos:line="31" pos:column="27"/></name></expr>:<pos:position pos:line="31" pos:column="28"/></case>
	<case pos:line="32" pos:column="9">case <expr><name pos:line="32" pos:column="14">OBJ_OFS_DELTA<pos:position pos:line="32" pos:column="27"/></name></expr>:<pos:position pos:line="32" pos:column="28"/></case>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">unpack_delta_entry<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">type<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">size<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="48">nr<pos:position pos:line="33" pos:column="50"/></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt>
		<return pos:line="34" pos:column="17">return;<pos:position pos:line="34" pos:column="24"/></return>
	<default pos:line="35" pos:column="9">default:<pos:position pos:line="35" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">error<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><literal type="string" pos:line="36" pos:column="23">"bad object type %d"<pos:position pos:line="36" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="45">type<pos:position pos:line="36" pos:column="49"/></name></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="37" pos:column="17">has_errors<pos:position pos:line="37" pos:column="27"/></name> <operator pos:line="37" pos:column="28">=<pos:position pos:line="37" pos:column="29"/></operator> <literal type="number" pos:line="37" pos:column="30">1<pos:position pos:line="37" pos:column="31"/></literal></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">recover<pos:position pos:line="38" pos:column="28"/></name></expr>)<pos:position pos:line="38" pos:column="29"/></condition><then pos:line="38" pos:column="29">
			<block type="pseudo"><return pos:line="39" pos:column="25">return;<pos:position pos:line="39" pos:column="32"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">exit<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><literal type="number" pos:line="40" pos:column="22">1<pos:position pos:line="40" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></switch>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

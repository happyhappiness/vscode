<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1701_git-2.8.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">bitmap_writer_finish<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">pack_idx_entry<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">index<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="2" pos:column="27">uint32_t<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">index_nr<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
			  <parameter><decl><type><specifier pos:line="3" pos:column="27">const<pos:position pos:line="3" pos:column="32"/></specifier> <name pos:line="3" pos:column="33">char<pos:position pos:line="3" pos:column="37"/></name> <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type><name pos:line="3" pos:column="39">filename<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="4" pos:column="27">uint16_t<pos:position pos:line="4" pos:column="35"/></name></type> <name pos:line="4" pos:column="36">options<pos:position pos:line="4" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="44"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">char<pos:position pos:line="6" pos:column="20"/></name></type> <name><name pos:line="6" pos:column="21">tmp_file<pos:position pos:line="6" pos:column="29"/></name><index pos:line="6" pos:column="29">[<expr><name pos:line="6" pos:column="30">PATH_MAX<pos:position pos:line="6" pos:column="38"/></name></expr>]<pos:position pos:line="6" pos:column="39"/></index></name></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">uint16_t<pos:position pos:line="7" pos:column="24"/></name></type> <name pos:line="7" pos:column="25">default_version<pos:position pos:line="7" pos:column="40"/></name> <init pos:line="7" pos:column="41">= <expr><literal type="number" pos:line="7" pos:column="43">1<pos:position pos:line="7" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="8" pos:column="9">static<pos:position pos:line="8" pos:column="15"/></specifier> <type><name pos:line="8" pos:column="16">uint16_t<pos:position pos:line="8" pos:column="24"/></name></type> <name pos:line="8" pos:column="25">flags<pos:position pos:line="8" pos:column="30"/></name> <init pos:line="8" pos:column="31">= <expr><name pos:line="8" pos:column="33">BITMAP_OPT_FULL_DAG<pos:position pos:line="8" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">sha1file<pos:position pos:line="9" pos:column="24"/></name></name> <modifier pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></modifier></type><name pos:line="9" pos:column="26">f<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">bitmap_disk_header<pos:position pos:line="11" pos:column="34"/></name></name></type> <name pos:line="11" pos:column="35">header<pos:position pos:line="11" pos:column="41"/></name></decl>;<pos:position pos:line="11" pos:column="42"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">fd<pos:position pos:line="13" pos:column="15"/></name> <init pos:line="13" pos:column="16">= <expr><call><name pos:line="13" pos:column="18">odb_mkstemp<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">tmp_file<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="40">sizeof<argument_list pos:line="13" pos:column="46">(<argument><expr><name pos:line="13" pos:column="47">tmp_file<pos:position pos:line="13" pos:column="55"/></name></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="58">"pack/tmp_bitmap_XXXXXX"<pos:position pos:line="13" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="84"/></decl_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">fd<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">&lt;<pos:position pos:line="15" pos:column="20"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>)<pos:position pos:line="15" pos:column="20"/></condition><then pos:line="15" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">die_errno<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><literal type="string" pos:line="16" pos:column="27">"unable to create '%s'"<pos:position pos:line="16" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">tmp_file<pos:position pos:line="16" pos:column="60"/></name></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">f<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">sha1fd<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">fd<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="24">tmp_file<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">memcpy<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name><name pos:line="19" pos:column="16">header<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">.<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">magic<pos:position pos:line="19" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">BITMAP_IDX_SIGNATURE<pos:position pos:line="19" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="52">sizeof<argument_list pos:line="19" pos:column="58">(<argument><expr><name pos:line="19" pos:column="59">BITMAP_IDX_SIGNATURE<pos:position pos:line="19" pos:column="79"/></name></expr></argument>)<pos:position pos:line="19" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="82"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">header<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">.<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="16">version<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <call><name pos:line="20" pos:column="26">htons<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">default_version<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">header<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">.<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">options<pos:position pos:line="21" pos:column="23"/></name></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <call><name pos:line="21" pos:column="26">htons<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">flags<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">|<pos:position pos:line="21" pos:column="39"/></operator> <name pos:line="21" pos:column="40">options<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">header<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">.<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">entry_count<pos:position pos:line="22" pos:column="27"/></name></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <call><name pos:line="22" pos:column="30">htonl<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name><name pos:line="22" pos:column="36">writer<pos:position pos:line="22" pos:column="42"/></name><operator pos:line="22" pos:column="42">.<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="43">selected_nr<pos:position pos:line="22" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">hashcpy<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><name><name pos:line="23" pos:column="17">header<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">.<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">checksum<pos:position pos:line="23" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="34">writer<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">.<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="41">pack_checksum<pos:position pos:line="23" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">sha1write<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">f<pos:position pos:line="25" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="22">&amp;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="23">header<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="31">sizeof<argument_list pos:line="25" pos:column="37">(<argument><expr><name pos:line="25" pos:column="38">header<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">dump_bitmap<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">f<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="24">writer<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">.<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="31">commits<pos:position pos:line="26" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">dump_bitmap<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">f<pos:position pos:line="27" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="24">writer<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">.<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="31">trees<pos:position pos:line="27" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">dump_bitmap<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">f<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="24">writer<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">.<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="31">blobs<pos:position pos:line="28" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">dump_bitmap<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">f<pos:position pos:line="29" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="24">writer<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">.<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="31">tags<pos:position pos:line="29" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">write_selected_commits_v1<pos:position pos:line="30" pos:column="34"/></name><argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">f<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">index<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">index_nr<pos:position pos:line="30" pos:column="53"/></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">options<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">&amp;<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="23">BITMAP_OPT_HASH_CACHE<pos:position pos:line="32" pos:column="44"/></name></expr>)<pos:position pos:line="32" pos:column="45"/></condition><then pos:line="32" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">write_hash_cache<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">f<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">index<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">index_nr<pos:position pos:line="33" pos:column="52"/></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="35" pos:column="9">sha1close<pos:position pos:line="35" pos:column="18"/></name><argument_list pos:line="35" pos:column="18">(<argument><expr><name pos:line="35" pos:column="19">f<pos:position pos:line="35" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="22">NULL<pos:position pos:line="35" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="28">CSUM_FSYNC<pos:position pos:line="35" pos:column="38"/></name></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">adjust_shared_perm<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name pos:line="37" pos:column="32">tmp_file<pos:position pos:line="37" pos:column="40"/></name></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="42"/></condition><then pos:line="37" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="17">die_errno<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><literal type="string" pos:line="38" pos:column="27">"unable to make temporary bitmap file readable"<pos:position pos:line="38" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt></block></then></if>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">rename<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><name pos:line="40" pos:column="20">tmp_file<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="30">filename<pos:position pos:line="40" pos:column="38"/></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="40"/></condition><then pos:line="40" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">die_errno<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><literal type="string" pos:line="41" pos:column="27">"unable to rename temporary bitmap file to '%s'"<pos:position pos:line="41" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="77">filename<pos:position pos:line="41" pos:column="85"/></name></expr></argument>)<pos:position pos:line="41" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="87"/></expr_stmt></block></then></if>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

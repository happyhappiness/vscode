<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6415_git-2.13.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cache_ref_iterator_advance<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">ref_iterator<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">ref_iterator<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">cache_ref_iterator<pos:position pos:line="3" pos:column="34"/></name></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">iter<pos:position pos:line="3" pos:column="40"/></name> <init pos:line="3" pos:column="41">=
		<expr><operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator>struct <name pos:line="4" pos:column="25">cache_ref_iterator<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></operator><operator pos:line="4" pos:column="45">)<pos:position pos:line="4" pos:column="46"/></operator><name pos:line="4" pos:column="46">ref_iterator<pos:position pos:line="4" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr>)<pos:position pos:line="6" pos:column="18"/></condition> <block pos:line="6" pos:column="19">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">cache_ref_iterator_level<pos:position pos:line="7" pos:column="48"/></name></name> <modifier pos:line="7" pos:column="49">*<pos:position pos:line="7" pos:column="50"/></modifier></type><name pos:line="7" pos:column="50">level<pos:position pos:line="7" pos:column="55"/></name> <init pos:line="7" pos:column="56">=
			<expr><operator pos:line="8" pos:column="25">&amp;<pos:position pos:line="8" pos:column="30"/></operator><name><name pos:line="8" pos:column="26">iter<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-&gt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="32">levels<pos:position pos:line="8" pos:column="38"/></name><index pos:line="8" pos:column="38">[<expr><name><name pos:line="8" pos:column="39">iter<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">levels_nr<pos:position pos:line="8" pos:column="54"/></name></name> <operator pos:line="8" pos:column="55">-<pos:position pos:line="8" pos:column="56"/></operator> <literal type="number" pos:line="8" pos:column="57">1<pos:position pos:line="8" pos:column="58"/></literal></expr>]<pos:position pos:line="8" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="60"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">ref_dir<pos:position pos:line="9" pos:column="31"/></name></name> <modifier pos:line="9" pos:column="32">*<pos:position pos:line="9" pos:column="33"/></modifier></type><name pos:line="9" pos:column="33">dir<pos:position pos:line="9" pos:column="36"/></name> <init pos:line="9" pos:column="37">= <expr><name><name pos:line="9" pos:column="39">level<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">-&gt;<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="46">dir<pos:position pos:line="9" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="50"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="10" pos:column="17">struct<pos:position pos:line="10" pos:column="23"/></name> <name pos:line="10" pos:column="24">ref_entry<pos:position pos:line="10" pos:column="33"/></name></name> <modifier pos:line="10" pos:column="34">*<pos:position pos:line="10" pos:column="35"/></modifier></type><name pos:line="10" pos:column="35">entry<pos:position pos:line="10" pos:column="40"/></name></decl>;<pos:position pos:line="10" pos:column="41"/></decl_stmt>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name><name pos:line="12" pos:column="21">level<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">index<pos:position pos:line="12" pos:column="33"/></name></name> <operator pos:line="12" pos:column="34">==<pos:position pos:line="12" pos:column="36"/></operator> <operator pos:line="12" pos:column="37">-<pos:position pos:line="12" pos:column="38"/></operator><literal type="number" pos:line="12" pos:column="38">1<pos:position pos:line="12" pos:column="39"/></literal></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="25">sort_ref_dir<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">dir<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt></block></then></if>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">++<pos:position pos:line="15" pos:column="23"/></operator><name><name pos:line="15" pos:column="23">level<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">index<pos:position pos:line="15" pos:column="35"/></name></name> <operator pos:line="15" pos:column="36">==<pos:position pos:line="15" pos:column="38"/></operator> <name><name pos:line="15" pos:column="39">level<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">-&gt;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="46">dir<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">-&gt;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="51">nr<pos:position pos:line="15" pos:column="53"/></name></name></expr>)<pos:position pos:line="15" pos:column="54"/></condition><then pos:line="15" pos:column="54"> <block pos:line="15" pos:column="55">{
			<comment type="block" pos:line="16" pos:column="25">/* This level is exhausted; pop up a level */</comment>
			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><operator pos:line="17" pos:column="29">--<pos:position pos:line="17" pos:column="31"/></operator><name><name pos:line="17" pos:column="31">iter<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">levels_nr<pos:position pos:line="17" pos:column="46"/></name></name> <operator pos:line="17" pos:column="47">==<pos:position pos:line="17" pos:column="49"/></operator> <literal type="number" pos:line="17" pos:column="50">0<pos:position pos:line="17" pos:column="51"/></literal></expr>)<pos:position pos:line="17" pos:column="52"/></condition><then pos:line="17" pos:column="52">
				<block type="pseudo"><return pos:line="18" pos:column="33">return <expr><call><name pos:line="18" pos:column="40">ref_iterator_abort<pos:position pos:line="18" pos:column="58"/></name><argument_list pos:line="18" pos:column="58">(<argument><expr><name pos:line="18" pos:column="59">ref_iterator<pos:position pos:line="18" pos:column="71"/></name></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="73"/></return></block></then></if>

			<continue pos:line="20" pos:column="25">continue;<pos:position pos:line="20" pos:column="34"/></continue>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="23" pos:column="17">entry<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name><name pos:line="23" pos:column="25">dir<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">entries<pos:position pos:line="23" pos:column="37"/></name><index pos:line="23" pos:column="37">[<expr><name><name pos:line="23" pos:column="38">level<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">index<pos:position pos:line="23" pos:column="50"/></name></name></expr>]<pos:position pos:line="23" pos:column="51"/></index></name></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">entry<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">flag<pos:position pos:line="25" pos:column="32"/></name></name> <operator pos:line="25" pos:column="33">&amp;<pos:position pos:line="25" pos:column="38"/></operator> <name pos:line="25" pos:column="35">REF_DIR<pos:position pos:line="25" pos:column="42"/></name></expr>)<pos:position pos:line="25" pos:column="43"/></condition><then pos:line="25" pos:column="43"> <block pos:line="25" pos:column="44">{
			<comment type="block" pos:line="26" pos:column="25">/* push down a level */</comment>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">ALLOC_GROW<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name><name pos:line="27" pos:column="36">iter<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="42">levels<pos:position pos:line="27" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="50">iter<pos:position pos:line="27" pos:column="54"/></name><operator pos:line="27" pos:column="54">-&gt;<pos:position pos:line="27" pos:column="59"/></operator><name pos:line="27" pos:column="56">levels_nr<pos:position pos:line="27" pos:column="65"/></name></name> <operator pos:line="27" pos:column="66">+<pos:position pos:line="27" pos:column="67"/></operator> <literal type="number" pos:line="27" pos:column="68">1<pos:position pos:line="27" pos:column="69"/></literal></expr></argument>,
				   <argument><expr><name><name pos:line="28" pos:column="36">iter<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">-&gt;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="42">levels_alloc<pos:position pos:line="28" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="56"/></expr_stmt>

			<expr_stmt><expr><name pos:line="30" pos:column="25">level<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">=<pos:position pos:line="30" pos:column="32"/></operator> <operator pos:line="30" pos:column="33">&amp;<pos:position pos:line="30" pos:column="38"/></operator><name><name pos:line="30" pos:column="34">iter<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">-&gt;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="40">levels<pos:position pos:line="30" pos:column="46"/></name><index pos:line="30" pos:column="46">[<expr><name><name pos:line="30" pos:column="47">iter<pos:position pos:line="30" pos:column="51"/></name><operator pos:line="30" pos:column="51">-&gt;<pos:position pos:line="30" pos:column="56"/></operator><name pos:line="30" pos:column="53">levels_nr<pos:position pos:line="30" pos:column="62"/></name></name><operator pos:line="30" pos:column="62">++<pos:position pos:line="30" pos:column="64"/></operator></expr>]<pos:position pos:line="30" pos:column="65"/></index></name></expr>;<pos:position pos:line="30" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">level<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">-&gt;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="32">dir<pos:position pos:line="31" pos:column="35"/></name></name> <operator pos:line="31" pos:column="36">=<pos:position pos:line="31" pos:column="37"/></operator> <call><name pos:line="31" pos:column="38">get_ref_dir<pos:position pos:line="31" pos:column="49"/></name><argument_list pos:line="31" pos:column="49">(<argument><expr><name pos:line="31" pos:column="50">entry<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="32" pos:column="25">level<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">-&gt;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="32">index<pos:position pos:line="32" pos:column="37"/></name></name> <operator pos:line="32" pos:column="38">=<pos:position pos:line="32" pos:column="39"/></operator> <operator pos:line="32" pos:column="40">-<pos:position pos:line="32" pos:column="41"/></operator><literal type="number" pos:line="32" pos:column="41">1<pos:position pos:line="32" pos:column="42"/></literal></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then> <else pos:line="33" pos:column="19">else <block pos:line="33" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="34" pos:column="25">iter<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">base<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">.<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="36">refname<pos:position pos:line="34" pos:column="43"/></name></name> <operator pos:line="34" pos:column="44">=<pos:position pos:line="34" pos:column="45"/></operator> <name><name pos:line="34" pos:column="46">entry<pos:position pos:line="34" pos:column="51"/></name><operator pos:line="34" pos:column="51">-&gt;<pos:position pos:line="34" pos:column="56"/></operator><name pos:line="34" pos:column="53">name<pos:position pos:line="34" pos:column="57"/></name></name></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="35" pos:column="25">iter<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">base<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">.<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="36">oid<pos:position pos:line="35" pos:column="39"/></name></name> <operator pos:line="35" pos:column="40">=<pos:position pos:line="35" pos:column="41"/></operator> <operator pos:line="35" pos:column="42">&amp;<pos:position pos:line="35" pos:column="47"/></operator><name><name pos:line="35" pos:column="43">entry<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">-&gt;<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="50">u<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">.<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="52">value<pos:position pos:line="35" pos:column="57"/></name><operator pos:line="35" pos:column="57">.<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="58">oid<pos:position pos:line="35" pos:column="61"/></name></name></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="36" pos:column="25">iter<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">-&gt;<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="31">base<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">.<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="36">flags<pos:position pos:line="36" pos:column="41"/></name></name> <operator pos:line="36" pos:column="42">=<pos:position pos:line="36" pos:column="43"/></operator> <name><name pos:line="36" pos:column="44">entry<pos:position pos:line="36" pos:column="49"/></name><operator pos:line="36" pos:column="49">-&gt;<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="51">flag<pos:position pos:line="36" pos:column="55"/></name></name></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt>
			<return pos:line="37" pos:column="25">return <expr><name pos:line="37" pos:column="32">ITER_OK<pos:position pos:line="37" pos:column="39"/></name></expr>;<pos:position pos:line="37" pos:column="40"/></return>
		}<pos:position pos:line="38" pos:column="18"/></block></else></if>
	}<pos:position pos:line="39" pos:column="10"/></block></while>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1735.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">all_msgs<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><name pos:line="3" pos:column="34">STRBUF_INIT<pos:position pos:line="3" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">msg<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">imap_store<pos:position pos:line="5" pos:column="26"/></name></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name pos:line="5" pos:column="28">ctx<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">NULL<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ofs<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">r<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">total<pos:position pos:line="8" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="20">n<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">nongit_ok<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">git_extract_argv0_path<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name><name pos:line="11" pos:column="32">argv<pos:position pos:line="11" pos:column="36"/></name><index pos:line="11" pos:column="36">[<expr><literal type="number" pos:line="11" pos:column="37">0<pos:position pos:line="11" pos:column="38"/></literal></expr>]<pos:position pos:line="11" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">git_setup_gettext<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">()<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">argc<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">!=<pos:position pos:line="15" pos:column="20"/></operator> <literal type="number" pos:line="15" pos:column="21">1<pos:position pos:line="15" pos:column="22"/></literal></expr>)<pos:position pos:line="15" pos:column="23"/></condition><then pos:line="15" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">usage<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">imap_send_usage<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">setup_git_directory_gently<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><operator pos:line="18" pos:column="36">&amp;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="37">nongit_ok<pos:position pos:line="18" pos:column="46"/></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">git_imap_config<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">()<pos:position pos:line="19" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name><name pos:line="21" pos:column="14">server<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">.<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">port<pos:position pos:line="21" pos:column="25"/></name></name></expr>)<pos:position pos:line="21" pos:column="26"/></condition><then pos:line="21" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="17">server<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">port<pos:position pos:line="22" pos:column="28"/></name></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <ternary><condition><expr><name><name pos:line="22" pos:column="31">server<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">.<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">use_ssl<pos:position pos:line="22" pos:column="45"/></name></name></expr> ?<pos:position pos:line="22" pos:column="47"/></condition><then pos:line="22" pos:column="47"> <expr><literal type="number" pos:line="22" pos:column="48">993<pos:position pos:line="22" pos:column="51"/></literal></expr> <pos:position pos:line="22" pos:column="52"/></then><else pos:line="22" pos:column="52">: <expr><literal type="number" pos:line="22" pos:column="54">143<pos:position pos:line="22" pos:column="57"/></literal></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="58"/></expr_stmt></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name><name pos:line="24" pos:column="14">server<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">.<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">folder<pos:position pos:line="24" pos:column="27"/></name></name></expr>)<pos:position pos:line="24" pos:column="28"/></condition><then pos:line="24" pos:column="28"> <block pos:line="24" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">fprintf<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">stderr<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="33">"no imap store specified\n"<pos:position pos:line="25" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><literal type="number" pos:line="26" pos:column="24">1<pos:position pos:line="26" pos:column="25"/></literal></expr>;<pos:position pos:line="26" pos:column="26"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name><name pos:line="28" pos:column="14">server<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">.<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">host<pos:position pos:line="28" pos:column="25"/></name></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26"> <block pos:line="28" pos:column="27">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><name><name pos:line="29" pos:column="22">server<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">.<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="29">tunnel<pos:position pos:line="29" pos:column="35"/></name></name></expr>)<pos:position pos:line="29" pos:column="36"/></condition><then pos:line="29" pos:column="36"> <block pos:line="29" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">fprintf<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name pos:line="30" pos:column="33">stderr<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="41">"no imap host specified\n"<pos:position pos:line="30" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="69"/></expr_stmt>
			<return pos:line="31" pos:column="25">return <expr><literal type="number" pos:line="31" pos:column="32">1<pos:position pos:line="31" pos:column="33"/></literal></expr>;<pos:position pos:line="31" pos:column="34"/></return>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">server<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">.<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="24">host<pos:position pos:line="33" pos:column="28"/></name></name> <operator pos:line="33" pos:column="29">=<pos:position pos:line="33" pos:column="30"/></operator> <literal type="string" pos:line="33" pos:column="31">"tunnel"<pos:position pos:line="33" pos:column="39"/></literal></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="36" pos:column="9">/* read the messages */</comment>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">read_message<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">stdin<pos:position pos:line="37" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="33">&amp;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="34">all_msgs<pos:position pos:line="37" pos:column="42"/></name></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="44"/></condition><then pos:line="37" pos:column="44"> <block pos:line="37" pos:column="45">{
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">fprintf<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">stderr<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="33">"error reading input\n"<pos:position pos:line="38" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="58"/></expr_stmt>
		<return pos:line="39" pos:column="17">return <expr><literal type="number" pos:line="39" pos:column="24">1<pos:position pos:line="39" pos:column="25"/></literal></expr>;<pos:position pos:line="39" pos:column="26"/></return>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name><name pos:line="42" pos:column="13">all_msgs<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">.<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">len<pos:position pos:line="42" pos:column="25"/></name></name> <operator pos:line="42" pos:column="26">==<pos:position pos:line="42" pos:column="28"/></operator> <literal type="number" pos:line="42" pos:column="29">0<pos:position pos:line="42" pos:column="30"/></literal></expr>)<pos:position pos:line="42" pos:column="31"/></condition><then pos:line="42" pos:column="31"> <block pos:line="42" pos:column="32">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">fprintf<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name pos:line="43" pos:column="25">stderr<pos:position pos:line="43" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="33">"nothing to send\n"<pos:position pos:line="43" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>
		<return pos:line="44" pos:column="17">return <expr><literal type="number" pos:line="44" pos:column="24">1<pos:position pos:line="44" pos:column="25"/></literal></expr>;<pos:position pos:line="44" pos:column="26"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="47" pos:column="9">total<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">=<pos:position pos:line="47" pos:column="16"/></operator> <call><name pos:line="47" pos:column="17">count_messages<pos:position pos:line="47" pos:column="31"/></name><argument_list pos:line="47" pos:column="31">(<argument><expr><operator pos:line="47" pos:column="32">&amp;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="33">all_msgs<pos:position pos:line="47" pos:column="41"/></name></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="43"/></expr_stmt>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">!<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">total<pos:position pos:line="48" pos:column="19"/></name></expr>)<pos:position pos:line="48" pos:column="20"/></condition><then pos:line="48" pos:column="20"> <block pos:line="48" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">fprintf<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><name pos:line="49" pos:column="25">stderr<pos:position pos:line="49" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="33">"no messages to send\n"<pos:position pos:line="49" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="58"/></expr_stmt>
		<return pos:line="50" pos:column="17">return <expr><literal type="number" pos:line="50" pos:column="24">1<pos:position pos:line="50" pos:column="25"/></literal></expr>;<pos:position pos:line="50" pos:column="26"/></return>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="53" pos:column="9">/* write it to the imap server */</comment>
	<expr_stmt><expr><name pos:line="54" pos:column="9">ctx<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <call><name pos:line="54" pos:column="15">imap_open_store<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><operator pos:line="54" pos:column="31">&amp;<pos:position pos:line="54" pos:column="36"/></operator><name pos:line="54" pos:column="32">server<pos:position pos:line="54" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="40">server<pos:position pos:line="54" pos:column="46"/></name><operator pos:line="54" pos:column="46">.<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="47">folder<pos:position pos:line="54" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="55"/></expr_stmt>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><operator pos:line="55" pos:column="13">!<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="14">ctx<pos:position pos:line="55" pos:column="17"/></name></expr>)<pos:position pos:line="55" pos:column="18"/></condition><then pos:line="55" pos:column="18"> <block pos:line="55" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">fprintf<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">stderr<pos:position pos:line="56" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="33">"failed to open store\n"<pos:position pos:line="56" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="59"/></expr_stmt>
		<return pos:line="57" pos:column="17">return <expr><literal type="number" pos:line="57" pos:column="24">1<pos:position pos:line="57" pos:column="25"/></literal></expr>;<pos:position pos:line="57" pos:column="26"/></return>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="60" pos:column="9">fprintf<pos:position pos:line="60" pos:column="16"/></name><argument_list pos:line="60" pos:column="16">(<argument><expr><name pos:line="60" pos:column="17">stderr<pos:position pos:line="60" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="25">"sending %d message%s\n"<pos:position pos:line="60" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="51">total<pos:position pos:line="60" pos:column="56"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="60" pos:column="58">(<pos:position pos:line="60" pos:column="59"/></operator><name pos:line="60" pos:column="59">total<pos:position pos:line="60" pos:column="64"/></name> <operator pos:line="60" pos:column="65">!=<pos:position pos:line="60" pos:column="67"/></operator> <literal type="number" pos:line="60" pos:column="68">1<pos:position pos:line="60" pos:column="69"/></literal><operator pos:line="60" pos:column="69">)<pos:position pos:line="60" pos:column="70"/></operator></expr> ?<pos:position pos:line="60" pos:column="72"/></condition><then pos:line="60" pos:column="72"> <expr><literal type="string" pos:line="60" pos:column="73">"s"<pos:position pos:line="60" pos:column="76"/></literal></expr> <pos:position pos:line="60" pos:column="77"/></then><else pos:line="60" pos:column="77">: <expr><literal type="string" pos:line="60" pos:column="79">""<pos:position pos:line="60" pos:column="81"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="60" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="83"/></expr_stmt>
	<while pos:line="61" pos:column="9">while <condition pos:line="61" pos:column="15">(<expr><literal type="number" pos:line="61" pos:column="16">1<pos:position pos:line="61" pos:column="17"/></literal></expr>)<pos:position pos:line="61" pos:column="18"/></condition> <block pos:line="61" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="62" pos:column="17">unsigned<pos:position pos:line="62" pos:column="25"/></name></type> <name pos:line="62" pos:column="26">percent<pos:position pos:line="62" pos:column="33"/></name> <init pos:line="62" pos:column="34">= <expr><name pos:line="62" pos:column="36">n<pos:position pos:line="62" pos:column="37"/></name> <operator pos:line="62" pos:column="38">*<pos:position pos:line="62" pos:column="39"/></operator> <literal type="number" pos:line="62" pos:column="40">100<pos:position pos:line="62" pos:column="43"/></literal> <operator pos:line="62" pos:column="44">/<pos:position pos:line="62" pos:column="45"/></operator> <name pos:line="62" pos:column="46">total<pos:position pos:line="62" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="62" pos:column="52"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="64" pos:column="17">fprintf<pos:position pos:line="64" pos:column="24"/></name><argument_list pos:line="64" pos:column="24">(<argument><expr><name pos:line="64" pos:column="25">stderr<pos:position pos:line="64" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="33">"%4u%% (%d/%d) done\r"<pos:position pos:line="64" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="57">percent<pos:position pos:line="64" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="66">n<pos:position pos:line="64" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="69">total<pos:position pos:line="64" pos:column="74"/></name></expr></argument>)<pos:position pos:line="64" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="76"/></expr_stmt>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><operator pos:line="65" pos:column="21">!<pos:position pos:line="65" pos:column="22"/></operator><call><name pos:line="65" pos:column="22">split_msg<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><operator pos:line="65" pos:column="32">&amp;<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="33">all_msgs<pos:position pos:line="65" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="43">&amp;<pos:position pos:line="65" pos:column="48"/></operator><name pos:line="65" pos:column="44">msg<pos:position pos:line="65" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="49">&amp;<pos:position pos:line="65" pos:column="54"/></operator><name pos:line="65" pos:column="50">ofs<pos:position pos:line="65" pos:column="53"/></name></expr></argument>)<pos:position pos:line="65" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="55"/></condition><then pos:line="65" pos:column="55">
			<block type="pseudo"><break pos:line="66" pos:column="25">break;<pos:position pos:line="66" pos:column="31"/></break></block></then></if>
		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name><name pos:line="67" pos:column="21">server<pos:position pos:line="67" pos:column="27"/></name><operator pos:line="67" pos:column="27">.<pos:position pos:line="67" pos:column="28"/></operator><name pos:line="67" pos:column="28">use_html<pos:position pos:line="67" pos:column="36"/></name></name></expr>)<pos:position pos:line="67" pos:column="37"/></condition><then pos:line="67" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="25">wrap_in_html<pos:position pos:line="68" pos:column="37"/></name><argument_list pos:line="68" pos:column="37">(<argument><expr><operator pos:line="68" pos:column="38">&amp;<pos:position pos:line="68" pos:column="43"/></operator><name pos:line="68" pos:column="39">msg<pos:position pos:line="68" pos:column="42"/></name></expr></argument>)<pos:position pos:line="68" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="44"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="69" pos:column="17">r<pos:position pos:line="69" pos:column="18"/></name> <operator pos:line="69" pos:column="19">=<pos:position pos:line="69" pos:column="20"/></operator> <call><name pos:line="69" pos:column="21">imap_store_msg<pos:position pos:line="69" pos:column="35"/></name><argument_list pos:line="69" pos:column="35">(<argument><expr><name pos:line="69" pos:column="36">ctx<pos:position pos:line="69" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="41">&amp;<pos:position pos:line="69" pos:column="46"/></operator><name pos:line="69" pos:column="42">msg<pos:position pos:line="69" pos:column="45"/></name></expr></argument>)<pos:position pos:line="69" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="47"/></expr_stmt>
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name pos:line="70" pos:column="21">r<pos:position pos:line="70" pos:column="22"/></name> <operator pos:line="70" pos:column="23">!=<pos:position pos:line="70" pos:column="25"/></operator> <name pos:line="70" pos:column="26">DRV_OK<pos:position pos:line="70" pos:column="32"/></name></expr>)<pos:position pos:line="70" pos:column="33"/></condition><then pos:line="70" pos:column="33">
			<block type="pseudo"><break pos:line="71" pos:column="25">break;<pos:position pos:line="71" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="72" pos:column="17">n<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">++<pos:position pos:line="72" pos:column="20"/></operator></expr>;<pos:position pos:line="72" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="73" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="74" pos:column="9">fprintf<pos:position pos:line="74" pos:column="16"/></name><argument_list pos:line="74" pos:column="16">(<argument><expr><name pos:line="74" pos:column="17">stderr<pos:position pos:line="74" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="25">"\n"<pos:position pos:line="74" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="76" pos:column="9">imap_close_store<pos:position pos:line="76" pos:column="25"/></name><argument_list pos:line="76" pos:column="25">(<argument><expr><name pos:line="76" pos:column="26">ctx<pos:position pos:line="76" pos:column="29"/></name></expr></argument>)<pos:position pos:line="76" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="31"/></expr_stmt>

	<return pos:line="78" pos:column="9">return <expr><literal type="number" pos:line="78" pos:column="16">0<pos:position pos:line="78" pos:column="17"/></literal></expr>;<pos:position pos:line="78" pos:column="18"/></return>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

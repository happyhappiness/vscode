<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4138_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">grab_nth_branch_switch<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">object_id<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">ooid<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="59">struct<pos:position pos:line="1" pos:column="65"/></name> <name pos:line="1" pos:column="66">object_id<pos:position pos:line="1" pos:column="75"/></name></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">noid<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>,
				  <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">email<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">unsigned<pos:position pos:line="2" pos:column="62"/></name> <name pos:line="2" pos:column="63">long<pos:position pos:line="2" pos:column="67"/></name></type> <name pos:line="2" pos:column="68">timestamp<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="79">int<pos:position pos:line="2" pos:column="82"/></name></type> <name pos:line="2" pos:column="83">tz<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>,
				  <parameter><decl><type><specifier pos:line="3" pos:column="35">const<pos:position pos:line="3" pos:column="40"/></specifier> <name pos:line="3" pos:column="41">char<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">message<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="56">void<pos:position pos:line="3" pos:column="60"/></name> <modifier pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></modifier></type><name pos:line="3" pos:column="62">cb_data<pos:position pos:line="3" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="70"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">grab_nth_branch_switch_cbdata<pos:position pos:line="5" pos:column="45"/></name></name> <modifier pos:line="5" pos:column="46">*<pos:position pos:line="5" pos:column="47"/></modifier></type><name pos:line="5" pos:column="47">cb<pos:position pos:line="5" pos:column="49"/></name> <init pos:line="5" pos:column="50">= <expr><name pos:line="5" pos:column="52">cb_data<pos:position pos:line="5" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">match<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">NULL<pos:position pos:line="6" pos:column="33"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="35">*<pos:position pos:line="6" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="36">target<pos:position pos:line="6" pos:column="42"/></name> <init pos:line="6" pos:column="43">= <expr><name pos:line="6" pos:column="45">NULL<pos:position pos:line="6" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">len<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">skip_prefix<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">message<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="34">"checkout: moving from "<pos:position pos:line="9" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="60">&amp;<pos:position pos:line="9" pos:column="65"/></operator><name pos:line="9" pos:column="61">match<pos:position pos:line="9" pos:column="66"/></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="68"/></condition><then pos:line="9" pos:column="68">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">target<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <call><name pos:line="10" pos:column="26">strstr<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">match<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="40">" to "<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">match<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">||<pos:position pos:line="12" pos:column="22"/></operator> <operator pos:line="12" pos:column="23">!<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">target<pos:position pos:line="12" pos:column="30"/></name></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">--<pos:position pos:line="14" pos:column="15"/></operator><operator pos:line="14" pos:column="15">(<pos:position pos:line="14" pos:column="16"/></operator><name><name pos:line="14" pos:column="16">cb<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">remaining<pos:position pos:line="14" pos:column="29"/></name></name><operator pos:line="14" pos:column="29">)<pos:position pos:line="14" pos:column="30"/></operator> <operator pos:line="14" pos:column="31">==<pos:position pos:line="14" pos:column="33"/></operator> <literal type="number" pos:line="14" pos:column="34">0<pos:position pos:line="14" pos:column="35"/></literal></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36"> <block pos:line="14" pos:column="37">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">len<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="23">target<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">-<pos:position pos:line="15" pos:column="31"/></operator> <name pos:line="15" pos:column="32">match<pos:position pos:line="15" pos:column="37"/></name></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">strbuf_reset<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><operator pos:line="16" pos:column="30">&amp;<pos:position pos:line="16" pos:column="35"/></operator><name><name pos:line="16" pos:column="31">cb<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">buf<pos:position pos:line="16" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">strbuf_add<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><operator pos:line="17" pos:column="28">&amp;<pos:position pos:line="17" pos:column="33"/></operator><name><name pos:line="17" pos:column="29">cb<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">buf<pos:position pos:line="17" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">match<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="45">len<pos:position pos:line="17" pos:column="48"/></name></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">1<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return> <comment type="block" pos:line="18" pos:column="27">/* we are done */</comment>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
	<return pos:line="20" pos:column="9">return <expr><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

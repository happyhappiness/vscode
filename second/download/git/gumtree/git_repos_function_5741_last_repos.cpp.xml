<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5741_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_fetch_config<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">k<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">v<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">void<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">cb<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">strcmp<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">k<pos:position pos:line="3" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="24">"fetch.prune"<pos:position pos:line="3" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="39"/></condition><then pos:line="3" pos:column="39"> <block pos:line="3" pos:column="40">{
		<expr_stmt><expr><name pos:line="4" pos:column="17">fetch_prune_config<pos:position pos:line="4" pos:column="35"/></name> <operator pos:line="4" pos:column="36">=<pos:position pos:line="4" pos:column="37"/></operator> <call><name pos:line="4" pos:column="38">git_config_bool<pos:position pos:line="4" pos:column="53"/></name><argument_list pos:line="4" pos:column="53">(<argument><expr><name pos:line="4" pos:column="54">k<pos:position pos:line="4" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="57">v<pos:position pos:line="4" pos:column="58"/></name></expr></argument>)<pos:position pos:line="4" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="60"/></expr_stmt>
		<return pos:line="5" pos:column="17">return <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr>;<pos:position pos:line="5" pos:column="26"/></return>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">strcmp<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">k<pos:position pos:line="8" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="24">"submodule.recurse"<pos:position pos:line="8" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45"> <block pos:line="8" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">r<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><ternary><condition><expr><call><name pos:line="9" pos:column="25">git_config_bool<pos:position pos:line="9" pos:column="40"/></name><argument_list pos:line="9" pos:column="40">(<argument><expr><name pos:line="9" pos:column="41">k<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">v<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr> ?<pos:position pos:line="9" pos:column="48"/></condition><then pos:line="9" pos:column="48">
			<expr><name pos:line="10" pos:column="25">RECURSE_SUBMODULES_ON<pos:position pos:line="10" pos:column="46"/></name></expr> <pos:position pos:line="10" pos:column="47"/></then><else pos:line="10" pos:column="47">: <expr><name pos:line="10" pos:column="49">RECURSE_SUBMODULES_OFF<pos:position pos:line="10" pos:column="71"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="10" pos:column="72"/></decl_stmt>
		<expr_stmt><expr><name pos:line="11" pos:column="17">recurse_submodules<pos:position pos:line="11" pos:column="35"/></name> <operator pos:line="11" pos:column="36">=<pos:position pos:line="11" pos:column="37"/></operator> <name pos:line="11" pos:column="38">r<pos:position pos:line="11" pos:column="39"/></name></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<return pos:line="14" pos:column="9">return <expr><call><name pos:line="14" pos:column="16">git_default_config<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">k<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="38">v<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">cb<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

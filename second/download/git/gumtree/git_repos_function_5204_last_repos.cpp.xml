<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5204_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_object<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">unsigned<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">nr<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="39">enum<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">object_type<pos:position pos:line="1" pos:column="55"/></name></name></type> <name pos:line="1" pos:column="56">type<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="2" pos:column="26">void<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">buf<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">unsigned<pos:position pos:line="2" pos:column="45"/></name> <name pos:line="2" pos:column="46">long<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">size<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">strict<pos:position pos:line="4" pos:column="20"/></name></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21"> <block pos:line="4" pos:column="22">{
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><call><name pos:line="5" pos:column="21">write_sha1_file<pos:position pos:line="5" pos:column="36"/></name><argument_list pos:line="5" pos:column="36">(<argument><expr><name pos:line="5" pos:column="37">buf<pos:position pos:line="5" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="42">size<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><name><typename pos:line="5" pos:column="48">typename<pos:position pos:line="5" pos:column="56"/></typename></name><operator pos:line="5" pos:column="56">(<pos:position pos:line="5" pos:column="57"/></operator><name pos:line="5" pos:column="57">type<pos:position pos:line="5" pos:column="61"/></name><operator pos:line="5" pos:column="61">)<pos:position pos:line="5" pos:column="62"/></operator></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="64">obj_list<pos:position pos:line="5" pos:column="72"/></name><index pos:line="5" pos:column="72">[<expr><name pos:line="5" pos:column="73">nr<pos:position pos:line="5" pos:column="75"/></name></expr>]<pos:position pos:line="5" pos:column="76"/></index></name><operator pos:line="5" pos:column="76">.<pos:position pos:line="5" pos:column="77"/></operator><name><name pos:line="5" pos:column="77">oid<pos:position pos:line="5" pos:column="80"/></name><operator pos:line="5" pos:column="80">.<pos:position pos:line="5" pos:column="81"/></operator><name pos:line="5" pos:column="81">hash<pos:position pos:line="5" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="86"/></argument_list></call> <operator pos:line="5" pos:column="87">&lt;<pos:position pos:line="5" pos:column="91"/></operator> <literal type="number" pos:line="5" pos:column="89">0<pos:position pos:line="5" pos:column="90"/></literal></expr>)<pos:position pos:line="5" pos:column="91"/></condition><then pos:line="5" pos:column="91">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="25">die<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><literal type="string" pos:line="6" pos:column="29">"failed to write object"<pos:position pos:line="6" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="55"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">added_object<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">nr<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">type<pos:position pos:line="7" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="40">buf<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">size<pos:position pos:line="7" pos:column="49"/></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">free<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">buf<pos:position pos:line="8" pos:column="25"/></name></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">obj_list<pos:position pos:line="9" pos:column="25"/></name><index pos:line="9" pos:column="25">[<expr><name pos:line="9" pos:column="26">nr<pos:position pos:line="9" pos:column="28"/></name></expr>]<pos:position pos:line="9" pos:column="29"/></index></name><operator pos:line="9" pos:column="29">.<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">obj<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">=<pos:position pos:line="9" pos:column="35"/></operator> <name pos:line="9" pos:column="36">NULL<pos:position pos:line="9" pos:column="40"/></name></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then> <elseif pos:line="10" pos:column="11">else <if pos:line="10" pos:column="16">if <condition pos:line="10" pos:column="19">(<expr><name pos:line="10" pos:column="20">type<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">==<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="28">OBJ_BLOB<pos:position pos:line="10" pos:column="36"/></name></expr>)<pos:position pos:line="10" pos:column="37"/></condition><then pos:line="10" pos:column="37"> <block pos:line="10" pos:column="38">{
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">blob<pos:position pos:line="11" pos:column="28"/></name></name> <modifier pos:line="11" pos:column="29">*<pos:position pos:line="11" pos:column="30"/></modifier></type><name pos:line="11" pos:column="30">blob<pos:position pos:line="11" pos:column="34"/></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><call><name pos:line="12" pos:column="21">write_sha1_file<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><name pos:line="12" pos:column="37">buf<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">size<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><name><typename pos:line="12" pos:column="48">typename<pos:position pos:line="12" pos:column="56"/></typename></name><operator pos:line="12" pos:column="56">(<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="57">type<pos:position pos:line="12" pos:column="61"/></name><operator pos:line="12" pos:column="61">)<pos:position pos:line="12" pos:column="62"/></operator></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="64">obj_list<pos:position pos:line="12" pos:column="72"/></name><index pos:line="12" pos:column="72">[<expr><name pos:line="12" pos:column="73">nr<pos:position pos:line="12" pos:column="75"/></name></expr>]<pos:position pos:line="12" pos:column="76"/></index></name><operator pos:line="12" pos:column="76">.<pos:position pos:line="12" pos:column="77"/></operator><name><name pos:line="12" pos:column="77">oid<pos:position pos:line="12" pos:column="80"/></name><operator pos:line="12" pos:column="80">.<pos:position pos:line="12" pos:column="81"/></operator><name pos:line="12" pos:column="81">hash<pos:position pos:line="12" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="86"/></argument_list></call> <operator pos:line="12" pos:column="87">&lt;<pos:position pos:line="12" pos:column="91"/></operator> <literal type="number" pos:line="12" pos:column="89">0<pos:position pos:line="12" pos:column="90"/></literal></expr>)<pos:position pos:line="12" pos:column="91"/></condition><then pos:line="12" pos:column="91">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="25">die<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="string" pos:line="13" pos:column="29">"failed to write object"<pos:position pos:line="13" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">added_object<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">nr<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">type<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">buf<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">size<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">free<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">buf<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>

		<expr_stmt><expr><name pos:line="17" pos:column="17">blob<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <call><name pos:line="17" pos:column="24">lookup_blob<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><operator pos:line="17" pos:column="36">&amp;<pos:position pos:line="17" pos:column="41"/></operator><name><name pos:line="17" pos:column="37">obj_list<pos:position pos:line="17" pos:column="45"/></name><index pos:line="17" pos:column="45">[<expr><name pos:line="17" pos:column="46">nr<pos:position pos:line="17" pos:column="48"/></name></expr>]<pos:position pos:line="17" pos:column="49"/></index></name><operator pos:line="17" pos:column="49">.<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="50">oid<pos:position pos:line="17" pos:column="53"/></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">blob<pos:position pos:line="18" pos:column="25"/></name></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="25">blob<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">object<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">.<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="38">flags<pos:position pos:line="19" pos:column="43"/></name></name> <operator pos:line="19" pos:column="44">|=<pos:position pos:line="19" pos:column="46"/></operator> <name pos:line="19" pos:column="47">FLAG_WRITTEN<pos:position pos:line="19" pos:column="59"/></name></expr>;<pos:position pos:line="19" pos:column="60"/></expr_stmt></block></then>
		<else pos:line="20" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">die<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><literal type="string" pos:line="21" pos:column="29">"invalid blob object"<pos:position pos:line="21" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">obj_list<pos:position pos:line="22" pos:column="25"/></name><index pos:line="22" pos:column="25">[<expr><name pos:line="22" pos:column="26">nr<pos:position pos:line="22" pos:column="28"/></name></expr>]<pos:position pos:line="22" pos:column="29"/></index></name><operator pos:line="22" pos:column="29">.<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">obj<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">=<pos:position pos:line="22" pos:column="35"/></operator> <name pos:line="22" pos:column="36">NULL<pos:position pos:line="22" pos:column="40"/></name></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif> <else pos:line="23" pos:column="11">else <block pos:line="23" pos:column="16">{
		<decl_stmt><decl><type><name><name pos:line="24" pos:column="17">struct<pos:position pos:line="24" pos:column="23"/></name> <name pos:line="24" pos:column="24">object<pos:position pos:line="24" pos:column="30"/></name></name> <modifier pos:line="24" pos:column="31">*<pos:position pos:line="24" pos:column="32"/></modifier></type><name pos:line="24" pos:column="32">obj<pos:position pos:line="24" pos:column="35"/></name></decl>;<pos:position pos:line="24" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">int<pos:position pos:line="25" pos:column="20"/></name></type> <name pos:line="25" pos:column="21">eaten<pos:position pos:line="25" pos:column="26"/></name></decl>;<pos:position pos:line="25" pos:column="27"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">hash_sha1_file<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">buf<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="37">size<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><name><typename pos:line="26" pos:column="43">typename<pos:position pos:line="26" pos:column="51"/></typename></name><operator pos:line="26" pos:column="51">(<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="52">type<pos:position pos:line="26" pos:column="56"/></name><operator pos:line="26" pos:column="56">)<pos:position pos:line="26" pos:column="57"/></operator></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="59">obj_list<pos:position pos:line="26" pos:column="67"/></name><index pos:line="26" pos:column="67">[<expr><name pos:line="26" pos:column="68">nr<pos:position pos:line="26" pos:column="70"/></name></expr>]<pos:position pos:line="26" pos:column="71"/></index></name><operator pos:line="26" pos:column="71">.<pos:position pos:line="26" pos:column="72"/></operator><name><name pos:line="26" pos:column="72">oid<pos:position pos:line="26" pos:column="75"/></name><operator pos:line="26" pos:column="75">.<pos:position pos:line="26" pos:column="76"/></operator><name pos:line="26" pos:column="76">hash<pos:position pos:line="26" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="82"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">added_object<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">nr<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="34">type<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="40">buf<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">size<pos:position pos:line="27" pos:column="49"/></name></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">obj<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <call><name pos:line="28" pos:column="23">parse_object_buffer<pos:position pos:line="28" pos:column="42"/></name><argument_list pos:line="28" pos:column="42">(<argument><expr><operator pos:line="28" pos:column="43">&amp;<pos:position pos:line="28" pos:column="48"/></operator><name><name pos:line="28" pos:column="44">obj_list<pos:position pos:line="28" pos:column="52"/></name><index pos:line="28" pos:column="52">[<expr><name pos:line="28" pos:column="53">nr<pos:position pos:line="28" pos:column="55"/></name></expr>]<pos:position pos:line="28" pos:column="56"/></index></name><operator pos:line="28" pos:column="56">.<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="57">oid<pos:position pos:line="28" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="62">type<pos:position pos:line="28" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="68">size<pos:position pos:line="28" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="74">buf<pos:position pos:line="28" pos:column="77"/></name></expr></argument>,
					  <argument><expr><operator pos:line="29" pos:column="43">&amp;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="44">eaten<pos:position pos:line="29" pos:column="49"/></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">obj<pos:position pos:line="30" pos:column="25"/></name></expr>)<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="25">die<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><literal type="string" pos:line="31" pos:column="29">"invalid %s"<pos:position pos:line="31" pos:column="41"/></literal></expr></argument>, <argument><expr><name><typename pos:line="31" pos:column="43">typename<pos:position pos:line="31" pos:column="51"/></typename></name><operator pos:line="31" pos:column="51">(<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="52">type<pos:position pos:line="31" pos:column="56"/></name><operator pos:line="31" pos:column="56">)<pos:position pos:line="31" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">add_object_buffer<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">obj<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="40">buf<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="45">size<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">obj<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">-&gt;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="22">flags<pos:position pos:line="33" pos:column="27"/></name></name> <operator pos:line="33" pos:column="28">|=<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="31">FLAG_OPEN<pos:position pos:line="33" pos:column="40"/></name></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">obj_list<pos:position pos:line="34" pos:column="25"/></name><index pos:line="34" pos:column="25">[<expr><name pos:line="34" pos:column="26">nr<pos:position pos:line="34" pos:column="28"/></name></expr>]<pos:position pos:line="34" pos:column="29"/></index></name><operator pos:line="34" pos:column="29">.<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">obj<pos:position pos:line="34" pos:column="33"/></name> <operator pos:line="34" pos:column="34">=<pos:position pos:line="34" pos:column="35"/></operator> <name pos:line="34" pos:column="36">obj<pos:position pos:line="34" pos:column="39"/></name></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></else></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

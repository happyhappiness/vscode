<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_734_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">find_beginning_of_line<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">contents<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">size_t<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">size<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="2" pos:column="9">size_t<pos:position pos:line="2" pos:column="15"/></name></type> <name pos:line="2" pos:column="16">offset_<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">found_bracket<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">equal_offset<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">size<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="37">bracket_offset<pos:position pos:line="4" pos:column="51"/></name> <init pos:line="4" pos:column="52">= <expr><name pos:line="4" pos:column="54">size<pos:position pos:line="4" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">ssize_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">offset<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

<label><name pos:line="7" pos:column="1">contline<pos:position pos:line="7" pos:column="9"/></name>:<pos:position pos:line="7" pos:column="10"/></label>
	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">offset<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="23">offset_<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-<pos:position pos:line="8" pos:column="31"/></operator><literal type="number" pos:line="8" pos:column="31">2<pos:position pos:line="8" pos:column="32"/></literal></expr>;<pos:position pos:line="8" pos:column="33"/></init> <condition><expr><name pos:line="8" pos:column="34">offset<pos:position pos:line="8" pos:column="40"/></name> <operator pos:line="8" pos:column="41">&gt;<pos:position pos:line="8" pos:column="45"/></operator> <literal type="number" pos:line="8" pos:column="43">0<pos:position pos:line="8" pos:column="44"/></literal>
			<operator pos:line="9" pos:column="25">&amp;&amp;<pos:position pos:line="9" pos:column="35"/></operator> <name><name pos:line="9" pos:column="28">contents<pos:position pos:line="9" pos:column="36"/></name><index pos:line="9" pos:column="36">[<expr><name pos:line="9" pos:column="37">offset<pos:position pos:line="9" pos:column="43"/></name></expr>]<pos:position pos:line="9" pos:column="44"/></index></name> <operator pos:line="9" pos:column="45">!=<pos:position pos:line="9" pos:column="47"/></operator> <literal type="char" pos:line="9" pos:column="48">'\n'<pos:position pos:line="9" pos:column="52"/></literal></expr>;<pos:position pos:line="9" pos:column="53"/></condition> <incr><expr><name pos:line="9" pos:column="54">offset<pos:position pos:line="9" pos:column="60"/></name><operator pos:line="9" pos:column="60">--<pos:position pos:line="9" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="63"/></control>
		<block type="pseudo"><switch pos:line="10" pos:column="17">switch <condition pos:line="10" pos:column="24">(<expr><name><name pos:line="10" pos:column="25">contents<pos:position pos:line="10" pos:column="33"/></name><index pos:line="10" pos:column="33">[<expr><name pos:line="10" pos:column="34">offset<pos:position pos:line="10" pos:column="40"/></name></expr>]<pos:position pos:line="10" pos:column="41"/></index></name></expr>)<pos:position pos:line="10" pos:column="42"/></condition> <block pos:line="10" pos:column="43">{
			<case pos:line="11" pos:column="25">case <expr><literal type="char" pos:line="11" pos:column="30">'='<pos:position pos:line="11" pos:column="33"/></literal></expr>:<pos:position pos:line="11" pos:column="34"/></case> <expr_stmt><expr><name pos:line="11" pos:column="35">equal_offset<pos:position pos:line="11" pos:column="47"/></name> <operator pos:line="11" pos:column="48">=<pos:position pos:line="11" pos:column="49"/></operator> <name pos:line="11" pos:column="50">offset<pos:position pos:line="11" pos:column="56"/></name></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt> <break pos:line="11" pos:column="58">break;<pos:position pos:line="11" pos:column="64"/></break>
			<case pos:line="12" pos:column="25">case <expr><literal type="char" pos:line="12" pos:column="30">']'<pos:position pos:line="12" pos:column="33"/></literal></expr>:<pos:position pos:line="12" pos:column="34"/></case> <expr_stmt><expr><name pos:line="12" pos:column="35">bracket_offset<pos:position pos:line="12" pos:column="49"/></name> <operator pos:line="12" pos:column="50">=<pos:position pos:line="12" pos:column="51"/></operator> <name pos:line="12" pos:column="52">offset<pos:position pos:line="12" pos:column="58"/></name></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt> <break pos:line="12" pos:column="60">break;<pos:position pos:line="12" pos:column="66"/></break>
		}<pos:position pos:line="13" pos:column="18"/></block></switch></block></for>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">offset<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">&gt;<pos:position pos:line="14" pos:column="24"/></operator> <literal type="number" pos:line="14" pos:column="22">0<pos:position pos:line="14" pos:column="23"/></literal> <operator pos:line="14" pos:column="24">&amp;&amp;<pos:position pos:line="14" pos:column="34"/></operator> <name><name pos:line="14" pos:column="27">contents<pos:position pos:line="14" pos:column="35"/></name><index pos:line="14" pos:column="35">[<expr><name pos:line="14" pos:column="36">offset<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-<pos:position pos:line="14" pos:column="43"/></operator><literal type="number" pos:line="14" pos:column="43">1<pos:position pos:line="14" pos:column="44"/></literal></expr>]<pos:position pos:line="14" pos:column="45"/></index></name> <operator pos:line="14" pos:column="46">==<pos:position pos:line="14" pos:column="48"/></operator> <literal type="char" pos:line="14" pos:column="49">'\\'<pos:position pos:line="14" pos:column="53"/></literal></expr>)<pos:position pos:line="14" pos:column="54"/></condition><then pos:line="14" pos:column="54"> <block pos:line="14" pos:column="55">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">offset_<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <name pos:line="15" pos:column="27">offset<pos:position pos:line="15" pos:column="33"/></name></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
		<goto pos:line="16" pos:column="17">goto <name pos:line="16" pos:column="22">contline<pos:position pos:line="16" pos:column="30"/></name>;<pos:position pos:line="16" pos:column="31"/></goto>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">bracket_offset<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">&lt;<pos:position pos:line="18" pos:column="32"/></operator> <name pos:line="18" pos:column="30">equal_offset<pos:position pos:line="18" pos:column="42"/></name></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43"> <block pos:line="18" pos:column="44">{
		<expr_stmt><expr><operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">found_bracket<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">=<pos:position pos:line="19" pos:column="33"/></operator> <literal type="number" pos:line="19" pos:column="34">1<pos:position pos:line="19" pos:column="35"/></literal></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">offset<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="26">bracket_offset<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">+<pos:position pos:line="20" pos:column="41"/></operator><literal type="number" pos:line="20" pos:column="41">1<pos:position pos:line="20" pos:column="42"/></literal></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then> <else pos:line="21" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="17">offset<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">++<pos:position pos:line="22" pos:column="25"/></operator></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt></block></else></if>

	<return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">offset<pos:position pos:line="24" pos:column="22"/></name></expr>;<pos:position pos:line="24" pos:column="23"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

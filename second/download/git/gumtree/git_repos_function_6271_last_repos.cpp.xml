<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6271_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cleanup_preferred_base<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">pbase_tree<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">it<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">i<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">it<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">pbase_tree<pos:position pos:line="6" pos:column="24"/></name></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">pbase_tree<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name pos:line="8" pos:column="16">it<pos:position pos:line="8" pos:column="18"/></name></expr>)<pos:position pos:line="8" pos:column="19"/></condition> <block pos:line="8" pos:column="20">{
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">pbase_tree<pos:position pos:line="9" pos:column="34"/></name></name> <modifier pos:line="9" pos:column="35">*<pos:position pos:line="9" pos:column="36"/></modifier></type><name pos:line="9" pos:column="36">this<pos:position pos:line="9" pos:column="40"/></name> <init pos:line="9" pos:column="41">= <expr><name pos:line="9" pos:column="43">it<pos:position pos:line="9" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="46"/></decl_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">it<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <name><name pos:line="10" pos:column="22">this<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">next<pos:position pos:line="10" pos:column="32"/></name></name></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">free<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name><name pos:line="11" pos:column="22">this<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">pcache<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">.<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="35">tree_data<pos:position pos:line="11" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">free<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">this<pos:position pos:line="12" pos:column="26"/></name></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></while>

	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></init> <condition><expr><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <call><name pos:line="15" pos:column="25">ARRAY_SIZE<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">pbase_tree_cache<pos:position pos:line="15" pos:column="52"/></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></condition> <incr><expr><name pos:line="15" pos:column="55">i<pos:position pos:line="15" pos:column="56"/></name><operator pos:line="15" pos:column="56">++<pos:position pos:line="15" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="59"/></control> <block pos:line="15" pos:column="60">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name><name pos:line="16" pos:column="22">pbase_tree_cache<pos:position pos:line="16" pos:column="38"/></name><index pos:line="16" pos:column="38">[<expr><name pos:line="16" pos:column="39">i<pos:position pos:line="16" pos:column="40"/></name></expr>]<pos:position pos:line="16" pos:column="41"/></index></name></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42">
			<block type="pseudo"><continue pos:line="17" pos:column="25">continue;<pos:position pos:line="17" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">free<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name><name pos:line="18" pos:column="22">pbase_tree_cache<pos:position pos:line="18" pos:column="38"/></name><index pos:line="18" pos:column="38">[<expr><name pos:line="18" pos:column="39">i<pos:position pos:line="18" pos:column="40"/></name></expr>]<pos:position pos:line="18" pos:column="41"/></index></name><operator pos:line="18" pos:column="41">-&gt;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="43">tree_data<pos:position pos:line="18" pos:column="52"/></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">FREE_AND_NULL<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name><name pos:line="19" pos:column="31">pbase_tree_cache<pos:position pos:line="19" pos:column="47"/></name><index pos:line="19" pos:column="47">[<expr><name pos:line="19" pos:column="48">i<pos:position pos:line="19" pos:column="49"/></name></expr>]<pos:position pos:line="19" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">FREE_AND_NULL<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">done_pbase_paths<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="23" pos:column="9">done_pbase_paths_num<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="32">done_pbase_paths_alloc<pos:position pos:line="23" pos:column="54"/></name> <operator pos:line="23" pos:column="55">=<pos:position pos:line="23" pos:column="56"/></operator> <literal type="number" pos:line="23" pos:column="57">0<pos:position pos:line="23" pos:column="58"/></literal></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

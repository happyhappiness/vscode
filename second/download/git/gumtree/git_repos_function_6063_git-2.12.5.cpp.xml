<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6063_git-2.12.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_replace<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">argc<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">argv<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">prefix<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">force<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">raw<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">format<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">NULL<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<enum pos:line="6" pos:column="9">enum <block pos:line="6" pos:column="14">{
		<decl><name pos:line="7" pos:column="17">MODE_UNSPECIFIED<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><literal type="number" pos:line="7" pos:column="36">0<pos:position pos:line="7" pos:column="37"/></literal></expr></init></decl>,
		<decl><name pos:line="8" pos:column="17">MODE_LIST<pos:position pos:line="8" pos:column="26"/></name></decl>,
		<decl><name pos:line="9" pos:column="17">MODE_DELETE<pos:position pos:line="9" pos:column="28"/></name></decl>,
		<decl><name pos:line="10" pos:column="17">MODE_EDIT<pos:position pos:line="10" pos:column="26"/></name></decl>,
		<decl><name pos:line="11" pos:column="17">MODE_GRAFT<pos:position pos:line="11" pos:column="27"/></name></decl>,
		<decl><name pos:line="12" pos:column="17">MODE_REPLACE<pos:position pos:line="12" pos:column="29"/></name></decl>
	}<pos:position pos:line="13" pos:column="10"/></block> <decl><name pos:line="13" pos:column="11">cmdmode<pos:position pos:line="13" pos:column="18"/></name> <init pos:line="13" pos:column="19">= <expr><name pos:line="13" pos:column="21">MODE_UNSPECIFIED<pos:position pos:line="13" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="38"/></enum>
	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">struct<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">option<pos:position pos:line="14" pos:column="22"/></name></name></type> <name><name pos:line="14" pos:column="23">options<pos:position pos:line="14" pos:column="30"/></name><index pos:line="14" pos:column="30">[]<pos:position pos:line="14" pos:column="32"/></index></name> <init pos:line="14" pos:column="33">= <expr><block pos:line="14" pos:column="35">{
		<expr><call><name pos:line="15" pos:column="17">OPT_CMDMODE<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><literal type="char" pos:line="15" pos:column="29">'l'<pos:position pos:line="15" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="34">"list"<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="42">&amp;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="43">cmdmode<pos:position pos:line="15" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="52">N_<pos:position pos:line="15" pos:column="54"/></name><argument_list pos:line="15" pos:column="54">(<argument><expr><literal type="string" pos:line="15" pos:column="55">"list replace refs"<pos:position pos:line="15" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="77">MODE_LIST<pos:position pos:line="15" pos:column="86"/></name></expr></argument>)<pos:position pos:line="15" pos:column="87"/></argument_list></call></expr>,
		<expr><call><name pos:line="16" pos:column="17">OPT_CMDMODE<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><literal type="char" pos:line="16" pos:column="29">'d'<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="34">"delete"<pos:position pos:line="16" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="44">&amp;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="45">cmdmode<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="54">N_<pos:position pos:line="16" pos:column="56"/></name><argument_list pos:line="16" pos:column="56">(<argument><expr><literal type="string" pos:line="16" pos:column="57">"delete replace refs"<pos:position pos:line="16" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="79"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="81">MODE_DELETE<pos:position pos:line="16" pos:column="92"/></name></expr></argument>)<pos:position pos:line="16" pos:column="93"/></argument_list></call></expr>,
		<expr><call><name pos:line="17" pos:column="17">OPT_CMDMODE<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><literal type="char" pos:line="17" pos:column="29">'e'<pos:position pos:line="17" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="34">"edit"<pos:position pos:line="17" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="42">&amp;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="43">cmdmode<pos:position pos:line="17" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="52">N_<pos:position pos:line="17" pos:column="54"/></name><argument_list pos:line="17" pos:column="54">(<argument><expr><literal type="string" pos:line="17" pos:column="55">"edit existing object"<pos:position pos:line="17" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="80">MODE_EDIT<pos:position pos:line="17" pos:column="89"/></name></expr></argument>)<pos:position pos:line="17" pos:column="90"/></argument_list></call></expr>,
		<expr><call><name pos:line="18" pos:column="17">OPT_CMDMODE<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><literal type="char" pos:line="18" pos:column="29">'g'<pos:position pos:line="18" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="34">"graft"<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="43">&amp;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="44">cmdmode<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="53">N_<pos:position pos:line="18" pos:column="55"/></name><argument_list pos:line="18" pos:column="55">(<argument><expr><literal type="string" pos:line="18" pos:column="56">"change a commit's parents"<pos:position pos:line="18" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="86">MODE_GRAFT<pos:position pos:line="18" pos:column="96"/></name></expr></argument>)<pos:position pos:line="18" pos:column="97"/></argument_list></call></expr>,
		<expr><call><name pos:line="19" pos:column="17">OPT_BOOL<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><literal type="char" pos:line="19" pos:column="26">'f'<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="31">"force"<pos:position pos:line="19" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="40">&amp;<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="41">force<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="48">N_<pos:position pos:line="19" pos:column="50"/></name><argument_list pos:line="19" pos:column="50">(<argument><expr><literal type="string" pos:line="19" pos:column="51">"replace the ref if it exists"<pos:position pos:line="19" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="83"/></argument_list></call></expr>,
		<expr><call><name pos:line="20" pos:column="17">OPT_BOOL<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="29">"raw"<pos:position pos:line="20" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="36">&amp;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="37">raw<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="42">N_<pos:position pos:line="20" pos:column="44"/></name><argument_list pos:line="20" pos:column="44">(<argument><expr><literal type="string" pos:line="20" pos:column="45">"do not pretty-print contents for --edit"<pos:position pos:line="20" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="88"/></argument_list></call></expr>,
		<expr><call><name pos:line="21" pos:column="17">OPT_STRING<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><literal type="number" pos:line="21" pos:column="28">0<pos:position pos:line="21" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="31">"format"<pos:position pos:line="21" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="41">&amp;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="42">format<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="50">N_<pos:position pos:line="21" pos:column="52"/></name><argument_list pos:line="21" pos:column="52">(<argument><expr><literal type="string" pos:line="21" pos:column="53">"format"<pos:position pos:line="21" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="64">N_<pos:position pos:line="21" pos:column="66"/></name><argument_list pos:line="21" pos:column="66">(<argument><expr><literal type="string" pos:line="21" pos:column="67">"use this format"<pos:position pos:line="21" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="86"/></argument_list></call></expr>,
		<macro><name pos:line="22" pos:column="17">OPT_END<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">()<pos:position pos:line="22" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="23" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="23" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="25" pos:column="9">check_replace_refs<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">=<pos:position pos:line="25" pos:column="29"/></operator> <literal type="number" pos:line="25" pos:column="30">0<pos:position pos:line="25" pos:column="31"/></literal></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">git_config<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">git_default_config<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="40">NULL<pos:position pos:line="26" pos:column="44"/></name></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><name pos:line="28" pos:column="9">argc<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">parse_options<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">argc<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="36">argv<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">prefix<pos:position pos:line="28" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="50">options<pos:position pos:line="28" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="59">git_replace_usage<pos:position pos:line="28" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="78">0<pos:position pos:line="28" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="81"/></expr_stmt>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">cmdmode<pos:position pos:line="30" pos:column="21"/></name></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="17">cmdmode<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <ternary><condition><expr><name pos:line="31" pos:column="27">argc<pos:position pos:line="31" pos:column="31"/></name></expr> ?<pos:position pos:line="31" pos:column="33"/></condition><then pos:line="31" pos:column="33"> <expr><name pos:line="31" pos:column="34">MODE_REPLACE<pos:position pos:line="31" pos:column="46"/></name></expr> <pos:position pos:line="31" pos:column="47"/></then><else pos:line="31" pos:column="47">: <expr><name pos:line="31" pos:column="49">MODE_LIST<pos:position pos:line="31" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">format<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">&amp;&amp;<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="23">cmdmode<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">!=<pos:position pos:line="33" pos:column="33"/></operator> <name pos:line="33" pos:column="34">MODE_LIST<pos:position pos:line="33" pos:column="43"/></name></expr>)<pos:position pos:line="33" pos:column="44"/></condition><then pos:line="33" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="17">usage_msg_opt<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><literal type="string" pos:line="34" pos:column="31">"--format cannot be used when not listing"<pos:position pos:line="34" pos:column="73"/></literal></expr></argument>,
			      <argument><expr><name pos:line="35" pos:column="31">git_replace_usage<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">options<pos:position pos:line="35" pos:column="57"/></name></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="59"/></expr_stmt></block></then></if>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">force<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">&amp;&amp;<pos:position pos:line="37" pos:column="29"/></operator>
	    <name pos:line="38" pos:column="13">cmdmode<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">!=<pos:position pos:line="38" pos:column="23"/></operator> <name pos:line="38" pos:column="24">MODE_REPLACE<pos:position pos:line="38" pos:column="36"/></name> <operator pos:line="38" pos:column="37">&amp;&amp;<pos:position pos:line="38" pos:column="47"/></operator>
	    <name pos:line="39" pos:column="13">cmdmode<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">!=<pos:position pos:line="39" pos:column="23"/></operator> <name pos:line="39" pos:column="24">MODE_EDIT<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">&amp;&amp;<pos:position pos:line="39" pos:column="44"/></operator>
	    <name pos:line="40" pos:column="13">cmdmode<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">!=<pos:position pos:line="40" pos:column="23"/></operator> <name pos:line="40" pos:column="24">MODE_GRAFT<pos:position pos:line="40" pos:column="34"/></name></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">usage_msg_opt<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><literal type="string" pos:line="41" pos:column="31">"-f only makes sense when writing a replacement"<pos:position pos:line="41" pos:column="79"/></literal></expr></argument>,
			      <argument><expr><name pos:line="42" pos:column="31">git_replace_usage<pos:position pos:line="42" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="50">options<pos:position pos:line="42" pos:column="57"/></name></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt></block></then></if>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">raw<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">&amp;&amp;<pos:position pos:line="44" pos:column="27"/></operator> <name pos:line="44" pos:column="20">cmdmode<pos:position pos:line="44" pos:column="27"/></name> <operator pos:line="44" pos:column="28">!=<pos:position pos:line="44" pos:column="30"/></operator> <name pos:line="44" pos:column="31">MODE_EDIT<pos:position pos:line="44" pos:column="40"/></name></expr>)<pos:position pos:line="44" pos:column="41"/></condition><then pos:line="44" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">usage_msg_opt<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><literal type="string" pos:line="45" pos:column="31">"--raw only makes sense with --edit"<pos:position pos:line="45" pos:column="67"/></literal></expr></argument>,
			      <argument><expr><name pos:line="46" pos:column="31">git_replace_usage<pos:position pos:line="46" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="50">options<pos:position pos:line="46" pos:column="57"/></name></expr></argument>)<pos:position pos:line="46" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="59"/></expr_stmt></block></then></if>

	<switch pos:line="48" pos:column="9">switch <condition pos:line="48" pos:column="16">(<expr><name pos:line="48" pos:column="17">cmdmode<pos:position pos:line="48" pos:column="24"/></name></expr>)<pos:position pos:line="48" pos:column="25"/></condition> <block pos:line="48" pos:column="26">{
	<case pos:line="49" pos:column="9">case <expr><name pos:line="49" pos:column="14">MODE_DELETE<pos:position pos:line="49" pos:column="25"/></name></expr>:<pos:position pos:line="49" pos:column="26"/></case>
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">argc<pos:position pos:line="50" pos:column="25"/></name> <operator pos:line="50" pos:column="26">&lt;<pos:position pos:line="50" pos:column="30"/></operator> <literal type="number" pos:line="50" pos:column="28">1<pos:position pos:line="50" pos:column="29"/></literal></expr>)<pos:position pos:line="50" pos:column="30"/></condition><then pos:line="50" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="25">usage_msg_opt<pos:position pos:line="51" pos:column="38"/></name><argument_list pos:line="51" pos:column="38">(<argument><expr><literal type="string" pos:line="51" pos:column="39">"-d needs at least one argument"<pos:position pos:line="51" pos:column="71"/></literal></expr></argument>,
				      <argument><expr><name pos:line="52" pos:column="39">git_replace_usage<pos:position pos:line="52" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="58">options<pos:position pos:line="52" pos:column="65"/></name></expr></argument>)<pos:position pos:line="52" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="67"/></expr_stmt></block></then></if>
		<return pos:line="53" pos:column="17">return <expr><call><name pos:line="53" pos:column="24">for_each_replace_name<pos:position pos:line="53" pos:column="45"/></name><argument_list pos:line="53" pos:column="45">(<argument><expr><name pos:line="53" pos:column="46">argv<pos:position pos:line="53" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="52">delete_replace_ref<pos:position pos:line="53" pos:column="70"/></name></expr></argument>)<pos:position pos:line="53" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="72"/></return>

	<case pos:line="55" pos:column="9">case <expr><name pos:line="55" pos:column="14">MODE_REPLACE<pos:position pos:line="55" pos:column="26"/></name></expr>:<pos:position pos:line="55" pos:column="27"/></case>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name pos:line="56" pos:column="21">argc<pos:position pos:line="56" pos:column="25"/></name> <operator pos:line="56" pos:column="26">!=<pos:position pos:line="56" pos:column="28"/></operator> <literal type="number" pos:line="56" pos:column="29">2<pos:position pos:line="56" pos:column="30"/></literal></expr>)<pos:position pos:line="56" pos:column="31"/></condition><then pos:line="56" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="25">usage_msg_opt<pos:position pos:line="57" pos:column="38"/></name><argument_list pos:line="57" pos:column="38">(<argument><expr><literal type="string" pos:line="57" pos:column="39">"bad number of arguments"<pos:position pos:line="57" pos:column="64"/></literal></expr></argument>,
				      <argument><expr><name pos:line="58" pos:column="39">git_replace_usage<pos:position pos:line="58" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="58">options<pos:position pos:line="58" pos:column="65"/></name></expr></argument>)<pos:position pos:line="58" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="67"/></expr_stmt></block></then></if>
		<return pos:line="59" pos:column="17">return <expr><call><name pos:line="59" pos:column="24">replace_object<pos:position pos:line="59" pos:column="38"/></name><argument_list pos:line="59" pos:column="38">(<argument><expr><name><name pos:line="59" pos:column="39">argv<pos:position pos:line="59" pos:column="43"/></name><index pos:line="59" pos:column="43">[<expr><literal type="number" pos:line="59" pos:column="44">0<pos:position pos:line="59" pos:column="45"/></literal></expr>]<pos:position pos:line="59" pos:column="46"/></index></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="48">argv<pos:position pos:line="59" pos:column="52"/></name><index pos:line="59" pos:column="52">[<expr><literal type="number" pos:line="59" pos:column="53">1<pos:position pos:line="59" pos:column="54"/></literal></expr>]<pos:position pos:line="59" pos:column="55"/></index></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="57">force<pos:position pos:line="59" pos:column="62"/></name></expr></argument>)<pos:position pos:line="59" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="64"/></return>

	<case pos:line="61" pos:column="9">case <expr><name pos:line="61" pos:column="14">MODE_EDIT<pos:position pos:line="61" pos:column="23"/></name></expr>:<pos:position pos:line="61" pos:column="24"/></case>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">argc<pos:position pos:line="62" pos:column="25"/></name> <operator pos:line="62" pos:column="26">!=<pos:position pos:line="62" pos:column="28"/></operator> <literal type="number" pos:line="62" pos:column="29">1<pos:position pos:line="62" pos:column="30"/></literal></expr>)<pos:position pos:line="62" pos:column="31"/></condition><then pos:line="62" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="25">usage_msg_opt<pos:position pos:line="63" pos:column="38"/></name><argument_list pos:line="63" pos:column="38">(<argument><expr><literal type="string" pos:line="63" pos:column="39">"-e needs exactly one argument"<pos:position pos:line="63" pos:column="70"/></literal></expr></argument>,
				      <argument><expr><name pos:line="64" pos:column="39">git_replace_usage<pos:position pos:line="64" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="58">options<pos:position pos:line="64" pos:column="65"/></name></expr></argument>)<pos:position pos:line="64" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="67"/></expr_stmt></block></then></if>
		<return pos:line="65" pos:column="17">return <expr><call><name pos:line="65" pos:column="24">edit_and_replace<pos:position pos:line="65" pos:column="40"/></name><argument_list pos:line="65" pos:column="40">(<argument><expr><name><name pos:line="65" pos:column="41">argv<pos:position pos:line="65" pos:column="45"/></name><index pos:line="65" pos:column="45">[<expr><literal type="number" pos:line="65" pos:column="46">0<pos:position pos:line="65" pos:column="47"/></literal></expr>]<pos:position pos:line="65" pos:column="48"/></index></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="50">force<pos:position pos:line="65" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="57">raw<pos:position pos:line="65" pos:column="60"/></name></expr></argument>)<pos:position pos:line="65" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="62"/></return>

	<case pos:line="67" pos:column="9">case <expr><name pos:line="67" pos:column="14">MODE_GRAFT<pos:position pos:line="67" pos:column="24"/></name></expr>:<pos:position pos:line="67" pos:column="25"/></case>
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">argc<pos:position pos:line="68" pos:column="25"/></name> <operator pos:line="68" pos:column="26">&lt;<pos:position pos:line="68" pos:column="30"/></operator> <literal type="number" pos:line="68" pos:column="28">1<pos:position pos:line="68" pos:column="29"/></literal></expr>)<pos:position pos:line="68" pos:column="30"/></condition><then pos:line="68" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="25">usage_msg_opt<pos:position pos:line="69" pos:column="38"/></name><argument_list pos:line="69" pos:column="38">(<argument><expr><literal type="string" pos:line="69" pos:column="39">"-g needs at least one argument"<pos:position pos:line="69" pos:column="71"/></literal></expr></argument>,
				      <argument><expr><name pos:line="70" pos:column="39">git_replace_usage<pos:position pos:line="70" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="58">options<pos:position pos:line="70" pos:column="65"/></name></expr></argument>)<pos:position pos:line="70" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="67"/></expr_stmt></block></then></if>
		<return pos:line="71" pos:column="17">return <expr><call><name pos:line="71" pos:column="24">create_graft<pos:position pos:line="71" pos:column="36"/></name><argument_list pos:line="71" pos:column="36">(<argument><expr><name pos:line="71" pos:column="37">argc<pos:position pos:line="71" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="43">argv<pos:position pos:line="71" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="49">force<pos:position pos:line="71" pos:column="54"/></name></expr></argument>)<pos:position pos:line="71" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="56"/></return>

	<case pos:line="73" pos:column="9">case <expr><name pos:line="73" pos:column="14">MODE_LIST<pos:position pos:line="73" pos:column="23"/></name></expr>:<pos:position pos:line="73" pos:column="24"/></case>
		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><name pos:line="74" pos:column="21">argc<pos:position pos:line="74" pos:column="25"/></name> <operator pos:line="74" pos:column="26">&gt;<pos:position pos:line="74" pos:column="30"/></operator> <literal type="number" pos:line="74" pos:column="28">1<pos:position pos:line="74" pos:column="29"/></literal></expr>)<pos:position pos:line="74" pos:column="30"/></condition><then pos:line="74" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="25">usage_msg_opt<pos:position pos:line="75" pos:column="38"/></name><argument_list pos:line="75" pos:column="38">(<argument><expr><literal type="string" pos:line="75" pos:column="39">"only one pattern can be given with -l"<pos:position pos:line="75" pos:column="78"/></literal></expr></argument>,
				      <argument><expr><name pos:line="76" pos:column="39">git_replace_usage<pos:position pos:line="76" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="58">options<pos:position pos:line="76" pos:column="65"/></name></expr></argument>)<pos:position pos:line="76" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="67"/></expr_stmt></block></then></if>
		<return pos:line="77" pos:column="17">return <expr><call><name pos:line="77" pos:column="24">list_replace_refs<pos:position pos:line="77" pos:column="41"/></name><argument_list pos:line="77" pos:column="41">(<argument><expr><name><name pos:line="77" pos:column="42">argv<pos:position pos:line="77" pos:column="46"/></name><index pos:line="77" pos:column="46">[<expr><literal type="number" pos:line="77" pos:column="47">0<pos:position pos:line="77" pos:column="48"/></literal></expr>]<pos:position pos:line="77" pos:column="49"/></index></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="51">format<pos:position pos:line="77" pos:column="57"/></name></expr></argument>)<pos:position pos:line="77" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="59"/></return>

	<default pos:line="79" pos:column="9">default:<pos:position pos:line="79" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="80" pos:column="17">die<pos:position pos:line="80" pos:column="20"/></name><argument_list pos:line="80" pos:column="20">(<argument><expr><literal type="string" pos:line="80" pos:column="21">"BUG: invalid cmdmode %d"<pos:position pos:line="80" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="80" pos:column="48">(<pos:position pos:line="80" pos:column="49"/></operator><name pos:line="80" pos:column="49">int<pos:position pos:line="80" pos:column="52"/></name><operator pos:line="80" pos:column="52">)<pos:position pos:line="80" pos:column="53"/></operator><name pos:line="80" pos:column="53">cmdmode<pos:position pos:line="80" pos:column="60"/></name></expr></argument>)<pos:position pos:line="80" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="81" pos:column="10"/></block></switch>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

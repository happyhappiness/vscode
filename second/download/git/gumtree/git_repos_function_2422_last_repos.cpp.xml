<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2422_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ac<pos:position pos:line="1" pos:column="16"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="18">char<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier><modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">av<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">buf<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><literal type="number" pos:line="3" pos:column="18">1024<pos:position pos:line="3" pos:column="22"/></literal></expr>]<pos:position pos:line="3" pos:column="23"/></index></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><call><name pos:line="5" pos:column="14">strcmp<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name><name pos:line="5" pos:column="21">av<pos:position pos:line="5" pos:column="23"/></name><index pos:line="5" pos:column="23">[<expr><literal type="number" pos:line="5" pos:column="24">1<pos:position pos:line="5" pos:column="25"/></literal></expr>]<pos:position pos:line="5" pos:column="26"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="28">"-e"<pos:position pos:line="5" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="34"/></condition><then pos:line="5" pos:column="34"> <block pos:line="5" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">len<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><call><name pos:line="6" pos:column="27">strlen<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name><name pos:line="6" pos:column="34">av<pos:position pos:line="6" pos:column="36"/></name><index pos:line="6" pos:column="36">[<expr><literal type="number" pos:line="6" pos:column="37">2<pos:position pos:line="6" pos:column="38"/></literal></expr>]<pos:position pos:line="6" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">encode_85<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">buf<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="32">av<pos:position pos:line="7" pos:column="34"/></name><index pos:line="7" pos:column="34">[<expr><literal type="number" pos:line="7" pos:column="35">2<pos:position pos:line="7" pos:column="36"/></literal></expr>]<pos:position pos:line="7" pos:column="37"/></index></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="39">len<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">len<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">&lt;=<pos:position pos:line="8" pos:column="30"/></operator> <literal type="number" pos:line="8" pos:column="28">26<pos:position pos:line="8" pos:column="30"/></literal></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31"> <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="32">len<pos:position pos:line="8" pos:column="35"/></name> <operator pos:line="8" pos:column="36">=<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="38">len<pos:position pos:line="8" pos:column="41"/></name> <operator pos:line="8" pos:column="42">+<pos:position pos:line="8" pos:column="43"/></operator> <literal type="char" pos:line="8" pos:column="44">'A'<pos:position pos:line="8" pos:column="47"/></literal> <operator pos:line="8" pos:column="48">-<pos:position pos:line="8" pos:column="49"/></operator> <literal type="number" pos:line="8" pos:column="50">1<pos:position pos:line="8" pos:column="51"/></literal></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt></block></then>
		<else pos:line="9" pos:column="17">else <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="22">len<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">len<pos:position pos:line="9" pos:column="31"/></name> <operator pos:line="9" pos:column="32">+<pos:position pos:line="9" pos:column="33"/></operator> <literal type="char" pos:line="9" pos:column="34">'a'<pos:position pos:line="9" pos:column="37"/></literal> <operator pos:line="9" pos:column="38">-<pos:position pos:line="9" pos:column="39"/></operator> <literal type="number" pos:line="9" pos:column="40">26<pos:position pos:line="9" pos:column="42"/></literal> <operator pos:line="9" pos:column="43">-<pos:position pos:line="9" pos:column="44"/></operator> <literal type="number" pos:line="9" pos:column="45">1<pos:position pos:line="9" pos:column="46"/></literal></expr>;<pos:position pos:line="9" pos:column="47"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">printf<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><literal type="string" pos:line="10" pos:column="24">"encoded: %c%s\n"<pos:position pos:line="10" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="43">len<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">buf<pos:position pos:line="10" pos:column="51"/></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">strcmp<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name><name pos:line="13" pos:column="21">av<pos:position pos:line="13" pos:column="23"/></name><index pos:line="13" pos:column="23">[<expr><literal type="number" pos:line="13" pos:column="24">1<pos:position pos:line="13" pos:column="25"/></literal></expr>]<pos:position pos:line="13" pos:column="26"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="28">"-d"<pos:position pos:line="13" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="34"/></condition><then pos:line="13" pos:column="34"> <block pos:line="13" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">len<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><operator pos:line="14" pos:column="27">*<pos:position pos:line="14" pos:column="28"/></operator><name><name pos:line="14" pos:column="28">av<pos:position pos:line="14" pos:column="30"/></name><index pos:line="14" pos:column="30">[<expr><literal type="number" pos:line="14" pos:column="31">2<pos:position pos:line="14" pos:column="32"/></literal></expr>]<pos:position pos:line="14" pos:column="33"/></index></name></expr></init></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><literal type="char" pos:line="15" pos:column="21">'A'<pos:position pos:line="15" pos:column="24"/></literal> <operator pos:line="15" pos:column="25">&lt;=<pos:position pos:line="15" pos:column="30"/></operator> <name pos:line="15" pos:column="28">len<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">&amp;&amp;<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="35">len<pos:position pos:line="15" pos:column="38"/></name> <operator pos:line="15" pos:column="39">&lt;=<pos:position pos:line="15" pos:column="44"/></operator> <literal type="char" pos:line="15" pos:column="42">'Z'<pos:position pos:line="15" pos:column="45"/></literal></expr>)<pos:position pos:line="15" pos:column="46"/></condition><then pos:line="15" pos:column="46"> <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="47">len<pos:position pos:line="15" pos:column="50"/></name> <operator pos:line="15" pos:column="51">=<pos:position pos:line="15" pos:column="52"/></operator> <name pos:line="15" pos:column="53">len<pos:position pos:line="15" pos:column="56"/></name> <operator pos:line="15" pos:column="57">-<pos:position pos:line="15" pos:column="58"/></operator> <literal type="char" pos:line="15" pos:column="59">'A'<pos:position pos:line="15" pos:column="62"/></literal> <operator pos:line="15" pos:column="63">+<pos:position pos:line="15" pos:column="64"/></operator> <literal type="number" pos:line="15" pos:column="65">1<pos:position pos:line="15" pos:column="66"/></literal></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt></block></then>
		<else pos:line="16" pos:column="17">else <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="22">len<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">=<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="28">len<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">-<pos:position pos:line="16" pos:column="33"/></operator> <literal type="char" pos:line="16" pos:column="34">'a'<pos:position pos:line="16" pos:column="37"/></literal> <operator pos:line="16" pos:column="38">+<pos:position pos:line="16" pos:column="39"/></operator> <literal type="number" pos:line="16" pos:column="40">26<pos:position pos:line="16" pos:column="42"/></literal> <operator pos:line="16" pos:column="43">+<pos:position pos:line="16" pos:column="44"/></operator> <literal type="number" pos:line="16" pos:column="45">1<pos:position pos:line="16" pos:column="46"/></literal></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">decode_85<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">buf<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="32">av<pos:position pos:line="17" pos:column="34"/></name><index pos:line="17" pos:column="34">[<expr><literal type="number" pos:line="17" pos:column="35">2<pos:position pos:line="17" pos:column="36"/></literal></expr>]<pos:position pos:line="17" pos:column="37"/></index></name><operator pos:line="17" pos:column="37">+<pos:position pos:line="17" pos:column="38"/></operator><literal type="number" pos:line="17" pos:column="38">1<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">len<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">printf<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><literal type="string" pos:line="18" pos:column="24">"decoded: %.*s\n"<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">len<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="48">buf<pos:position pos:line="18" pos:column="51"/></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">strcmp<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name><name pos:line="21" pos:column="21">av<pos:position pos:line="21" pos:column="23"/></name><index pos:line="21" pos:column="23">[<expr><literal type="number" pos:line="21" pos:column="24">1<pos:position pos:line="21" pos:column="25"/></literal></expr>]<pos:position pos:line="21" pos:column="26"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="28">"-t"<pos:position pos:line="21" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34"> <block pos:line="21" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">char<pos:position pos:line="22" pos:column="21"/></name></type> <name><name pos:line="22" pos:column="22">t<pos:position pos:line="22" pos:column="23"/></name><index pos:line="22" pos:column="23">[<expr><literal type="number" pos:line="22" pos:column="24">4<pos:position pos:line="22" pos:column="25"/></literal></expr>]<pos:position pos:line="22" pos:column="26"/></index></name> <init pos:line="22" pos:column="27">= <expr><block pos:line="22" pos:column="29">{ <expr><operator pos:line="22" pos:column="31">-<pos:position pos:line="22" pos:column="32"/></operator><literal type="number" pos:line="22" pos:column="32">1<pos:position pos:line="22" pos:column="33"/></literal></expr>,<expr><operator pos:line="22" pos:column="34">-<pos:position pos:line="22" pos:column="35"/></operator><literal type="number" pos:line="22" pos:column="35">1<pos:position pos:line="22" pos:column="36"/></literal></expr>,<expr><operator pos:line="22" pos:column="37">-<pos:position pos:line="22" pos:column="38"/></operator><literal type="number" pos:line="22" pos:column="38">1<pos:position pos:line="22" pos:column="39"/></literal></expr>,<expr><operator pos:line="22" pos:column="40">-<pos:position pos:line="22" pos:column="41"/></operator><literal type="number" pos:line="22" pos:column="41">1<pos:position pos:line="22" pos:column="42"/></literal></expr> }<pos:position pos:line="22" pos:column="44"/></block></expr></init></decl>;<pos:position pos:line="22" pos:column="45"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">encode_85<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">buf<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="32">t<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="35">4<pos:position pos:line="23" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">printf<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><literal type="string" pos:line="24" pos:column="24">"encoded: D%s\n"<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">buf<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
		<return pos:line="25" pos:column="17">return <expr><literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

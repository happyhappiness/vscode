<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5547_git-2.11.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_rerere<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">argc<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">argv<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">prefix<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list<pos:position pos:line="3" pos:column="27"/></name></name></type> <name pos:line="3" pos:column="28">merge_rr<pos:position pos:line="3" pos:column="36"/></name> <init pos:line="3" pos:column="37">= <expr><name pos:line="3" pos:column="39">STRING_LIST_INIT_DUP<pos:position pos:line="3" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">autoupdate<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><operator pos:line="4" pos:column="29">-<pos:position pos:line="4" pos:column="30"/></operator><literal type="number" pos:line="4" pos:column="30">1<pos:position pos:line="4" pos:column="31"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="33">flags<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><literal type="number" pos:line="4" pos:column="41">0<pos:position pos:line="4" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">option<pos:position pos:line="6" pos:column="22"/></name></name></type> <name><name pos:line="6" pos:column="23">options<pos:position pos:line="6" pos:column="30"/></name><index pos:line="6" pos:column="30">[]<pos:position pos:line="6" pos:column="32"/></index></name> <init pos:line="6" pos:column="33">= <expr><block pos:line="6" pos:column="35">{
		<expr><call><name pos:line="7" pos:column="17">OPT_SET_INT<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="32">"rerere-autoupdate"<pos:position pos:line="7" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="53">&amp;<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="54">autoupdate<pos:position pos:line="7" pos:column="64"/></name></expr></argument>,
			<argument><expr><call><name pos:line="8" pos:column="25">N_<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><literal type="string" pos:line="8" pos:column="28">"register clean resolutions in index"<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="68">1<pos:position pos:line="8" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="70"/></argument_list></call></expr>,
		<expr><call><name pos:line="9" pos:column="17">OPT_END<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">()<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>,
	}<pos:position pos:line="10" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="10" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">argc<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">parse_options<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">argc<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">argv<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">prefix<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">options<pos:position pos:line="12" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="59">rerere_usage<pos:position pos:line="12" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="73">0<pos:position pos:line="12" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="76"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">git_config<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">git_xmerge_config<pos:position pos:line="14" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="39">NULL<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">autoupdate<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">==<pos:position pos:line="16" pos:column="26"/></operator> <literal type="number" pos:line="16" pos:column="27">1<pos:position pos:line="16" pos:column="28"/></literal></expr>)<pos:position pos:line="16" pos:column="29"/></condition><then pos:line="16" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">flags<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">RERERE_AUTOUPDATE<pos:position pos:line="17" pos:column="42"/></name></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">autoupdate<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">==<pos:position pos:line="18" pos:column="26"/></operator> <literal type="number" pos:line="18" pos:column="27">0<pos:position pos:line="18" pos:column="28"/></literal></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">flags<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">RERERE_NOAUTOUPDATE<pos:position pos:line="19" pos:column="44"/></name></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">argc<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">&lt;<pos:position pos:line="21" pos:column="22"/></operator> <literal type="number" pos:line="21" pos:column="20">1<pos:position pos:line="21" pos:column="21"/></literal></expr>)<pos:position pos:line="21" pos:column="22"/></condition><then pos:line="21" pos:column="22">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><call><name pos:line="22" pos:column="24">rerere<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">flags<pos:position pos:line="22" pos:column="36"/></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></return></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><call><name pos:line="24" pos:column="14">strcmp<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name><name pos:line="24" pos:column="21">argv<pos:position pos:line="24" pos:column="25"/></name><index pos:line="24" pos:column="25">[<expr><literal type="number" pos:line="24" pos:column="26">0<pos:position pos:line="24" pos:column="27"/></literal></expr>]<pos:position pos:line="24" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="30">"forget"<pos:position pos:line="24" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="40"/></condition><then pos:line="24" pos:column="40"> <block pos:line="24" pos:column="41">{
		<decl_stmt><decl><type><name><name pos:line="25" pos:column="17">struct<pos:position pos:line="25" pos:column="23"/></name> <name pos:line="25" pos:column="24">pathspec<pos:position pos:line="25" pos:column="32"/></name></name></type> <name pos:line="25" pos:column="33">pathspec<pos:position pos:line="25" pos:column="41"/></name></decl>;<pos:position pos:line="25" pos:column="42"/></decl_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">argc<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">&lt;<pos:position pos:line="26" pos:column="30"/></operator> <literal type="number" pos:line="26" pos:column="28">2<pos:position pos:line="26" pos:column="29"/></literal></expr>)<pos:position pos:line="26" pos:column="30"/></condition><then pos:line="26" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="25">warning<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><literal type="string" pos:line="27" pos:column="33">"'git rerere forget' without paths is deprecated"<pos:position pos:line="27" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="84"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">parse_pathspec<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><operator pos:line="28" pos:column="32">&amp;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="33">pathspec<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="43">0<pos:position pos:line="28" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">PATHSPEC_PREFER_CWD<pos:position pos:line="28" pos:column="65"/></name></expr></argument>,
			       <argument><expr><name pos:line="29" pos:column="32">prefix<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="40">argv<pos:position pos:line="29" pos:column="44"/></name> <operator pos:line="29" pos:column="45">+<pos:position pos:line="29" pos:column="46"/></operator> <literal type="number" pos:line="29" pos:column="47">1<pos:position pos:line="29" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><call><name pos:line="30" pos:column="24">rerere_forget<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><operator pos:line="30" pos:column="38">&amp;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="39">pathspec<pos:position pos:line="30" pos:column="47"/></name></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="49"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><call><name pos:line="33" pos:column="14">strcmp<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><name><name pos:line="33" pos:column="21">argv<pos:position pos:line="33" pos:column="25"/></name><index pos:line="33" pos:column="25">[<expr><literal type="number" pos:line="33" pos:column="26">0<pos:position pos:line="33" pos:column="27"/></literal></expr>]<pos:position pos:line="33" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="30">"clear"<pos:position pos:line="33" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="39"/></condition><then pos:line="33" pos:column="39"> <block pos:line="33" pos:column="40">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">rerere_clear<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><operator pos:line="34" pos:column="30">&amp;<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="31">merge_rr<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then> <elseif pos:line="35" pos:column="11">else <if pos:line="35" pos:column="16">if <condition pos:line="35" pos:column="19">(<expr><operator pos:line="35" pos:column="20">!<pos:position pos:line="35" pos:column="21"/></operator><call><name pos:line="35" pos:column="21">strcmp<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name><name pos:line="35" pos:column="28">argv<pos:position pos:line="35" pos:column="32"/></name><index pos:line="35" pos:column="32">[<expr><literal type="number" pos:line="35" pos:column="33">0<pos:position pos:line="35" pos:column="34"/></literal></expr>]<pos:position pos:line="35" pos:column="35"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="37">"gc"<pos:position pos:line="35" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="43"/></condition><then pos:line="35" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">rerere_gc<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><operator pos:line="36" pos:column="27">&amp;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="28">merge_rr<pos:position pos:line="36" pos:column="36"/></name></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="37" pos:column="9">else <if pos:line="37" pos:column="14">if <condition pos:line="37" pos:column="17">(<expr><operator pos:line="37" pos:column="18">!<pos:position pos:line="37" pos:column="19"/></operator><call><name pos:line="37" pos:column="19">strcmp<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name><name pos:line="37" pos:column="26">argv<pos:position pos:line="37" pos:column="30"/></name><index pos:line="37" pos:column="30">[<expr><literal type="number" pos:line="37" pos:column="31">0<pos:position pos:line="37" pos:column="32"/></literal></expr>]<pos:position pos:line="37" pos:column="33"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="35">"status"<pos:position pos:line="37" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="45"/></condition><then pos:line="37" pos:column="45"> <block pos:line="37" pos:column="46">{
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">setup_rerere<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><operator pos:line="38" pos:column="34">&amp;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="35">merge_rr<pos:position pos:line="38" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="45">flags<pos:position pos:line="38" pos:column="50"/></name> <operator pos:line="38" pos:column="51">|<pos:position pos:line="38" pos:column="52"/></operator> <name pos:line="38" pos:column="53">RERERE_READONLY<pos:position pos:line="38" pos:column="68"/></name></expr></argument>)<pos:position pos:line="38" pos:column="69"/></argument_list></call> <operator pos:line="38" pos:column="70">&lt;<pos:position pos:line="38" pos:column="74"/></operator> <literal type="number" pos:line="38" pos:column="72">0<pos:position pos:line="38" pos:column="73"/></literal></expr>)<pos:position pos:line="38" pos:column="74"/></condition><then pos:line="38" pos:column="74">
			<block type="pseudo"><return pos:line="39" pos:column="25">return <expr><literal type="number" pos:line="39" pos:column="32">0<pos:position pos:line="39" pos:column="33"/></literal></expr>;<pos:position pos:line="39" pos:column="34"/></return></block></then></if>
		<for pos:line="40" pos:column="17">for <control pos:line="40" pos:column="21">(<init><expr><name pos:line="40" pos:column="22">i<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <literal type="number" pos:line="40" pos:column="26">0<pos:position pos:line="40" pos:column="27"/></literal></expr>;<pos:position pos:line="40" pos:column="28"/></init> <condition><expr><name pos:line="40" pos:column="29">i<pos:position pos:line="40" pos:column="30"/></name> <operator pos:line="40" pos:column="31">&lt;<pos:position pos:line="40" pos:column="35"/></operator> <name><name pos:line="40" pos:column="33">merge_rr<pos:position pos:line="40" pos:column="41"/></name><operator pos:line="40" pos:column="41">.<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="42">nr<pos:position pos:line="40" pos:column="44"/></name></name></expr>;<pos:position pos:line="40" pos:column="45"/></condition> <incr><expr><name pos:line="40" pos:column="46">i<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">++<pos:position pos:line="40" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="50"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="25">printf<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><literal type="string" pos:line="41" pos:column="32">"%s\n"<pos:position pos:line="41" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="40">merge_rr<pos:position pos:line="41" pos:column="48"/></name><operator pos:line="41" pos:column="48">.<pos:position pos:line="41" pos:column="49"/></operator><name pos:line="41" pos:column="49">items<pos:position pos:line="41" pos:column="54"/></name><index pos:line="41" pos:column="54">[<expr><name pos:line="41" pos:column="55">i<pos:position pos:line="41" pos:column="56"/></name></expr>]<pos:position pos:line="41" pos:column="57"/></index></name><operator pos:line="41" pos:column="57">.<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="58">string<pos:position pos:line="41" pos:column="64"/></name></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="66"/></expr_stmt></block></for>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if></elseif> <elseif pos:line="42" pos:column="11">else <if pos:line="42" pos:column="16">if <condition pos:line="42" pos:column="19">(<expr><operator pos:line="42" pos:column="20">!<pos:position pos:line="42" pos:column="21"/></operator><call><name pos:line="42" pos:column="21">strcmp<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name><name pos:line="42" pos:column="28">argv<pos:position pos:line="42" pos:column="32"/></name><index pos:line="42" pos:column="32">[<expr><literal type="number" pos:line="42" pos:column="33">0<pos:position pos:line="42" pos:column="34"/></literal></expr>]<pos:position pos:line="42" pos:column="35"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="37">"remaining"<pos:position pos:line="42" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="50"/></condition><then pos:line="42" pos:column="50"> <block pos:line="42" pos:column="51">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">rerere_remaining<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">(<argument><expr><operator pos:line="43" pos:column="34">&amp;<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="35">merge_rr<pos:position pos:line="43" pos:column="43"/></name></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt>
		<for pos:line="44" pos:column="17">for <control pos:line="44" pos:column="21">(<init><expr><name pos:line="44" pos:column="22">i<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">=<pos:position pos:line="44" pos:column="25"/></operator> <literal type="number" pos:line="44" pos:column="26">0<pos:position pos:line="44" pos:column="27"/></literal></expr>;<pos:position pos:line="44" pos:column="28"/></init> <condition><expr><name pos:line="44" pos:column="29">i<pos:position pos:line="44" pos:column="30"/></name> <operator pos:line="44" pos:column="31">&lt;<pos:position pos:line="44" pos:column="35"/></operator> <name><name pos:line="44" pos:column="33">merge_rr<pos:position pos:line="44" pos:column="41"/></name><operator pos:line="44" pos:column="41">.<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="42">nr<pos:position pos:line="44" pos:column="44"/></name></name></expr>;<pos:position pos:line="44" pos:column="45"/></condition> <incr><expr><name pos:line="44" pos:column="46">i<pos:position pos:line="44" pos:column="47"/></name><operator pos:line="44" pos:column="47">++<pos:position pos:line="44" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="50"/></control> <block pos:line="44" pos:column="51">{
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><name><name pos:line="45" pos:column="29">merge_rr<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">.<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="38">items<pos:position pos:line="45" pos:column="43"/></name><index pos:line="45" pos:column="43">[<expr><name pos:line="45" pos:column="44">i<pos:position pos:line="45" pos:column="45"/></name></expr>]<pos:position pos:line="45" pos:column="46"/></index></name><operator pos:line="45" pos:column="46">.<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="47">util<pos:position pos:line="45" pos:column="51"/></name> <operator pos:line="45" pos:column="52">!=<pos:position pos:line="45" pos:column="54"/></operator> <name pos:line="45" pos:column="55">RERERE_RESOLVED<pos:position pos:line="45" pos:column="70"/></name></expr>)<pos:position pos:line="45" pos:column="71"/></condition><then pos:line="45" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="33">printf<pos:position pos:line="46" pos:column="39"/></name><argument_list pos:line="46" pos:column="39">(<argument><expr><literal type="string" pos:line="46" pos:column="40">"%s\n"<pos:position pos:line="46" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="48">merge_rr<pos:position pos:line="46" pos:column="56"/></name><operator pos:line="46" pos:column="56">.<pos:position pos:line="46" pos:column="57"/></operator><name pos:line="46" pos:column="57">items<pos:position pos:line="46" pos:column="62"/></name><index pos:line="46" pos:column="62">[<expr><name pos:line="46" pos:column="63">i<pos:position pos:line="46" pos:column="64"/></name></expr>]<pos:position pos:line="46" pos:column="65"/></index></name><operator pos:line="46" pos:column="65">.<pos:position pos:line="46" pos:column="66"/></operator><name pos:line="46" pos:column="66">string<pos:position pos:line="46" pos:column="72"/></name></expr></argument>)<pos:position pos:line="46" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="74"/></expr_stmt></block></then>
			<else pos:line="47" pos:column="25">else
				<comment type="block" pos:line="48" pos:column="33">/* prepare for later call to
				 * string_list_clear() */</comment>
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="33">merge_rr<pos:position pos:line="50" pos:column="41"/></name><operator pos:line="50" pos:column="41">.<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="42">items<pos:position pos:line="50" pos:column="47"/></name><index pos:line="50" pos:column="47">[<expr><name pos:line="50" pos:column="48">i<pos:position pos:line="50" pos:column="49"/></name></expr>]<pos:position pos:line="50" pos:column="50"/></index></name><operator pos:line="50" pos:column="50">.<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="51">util<pos:position pos:line="50" pos:column="55"/></name> <operator pos:line="50" pos:column="56">=<pos:position pos:line="50" pos:column="57"/></operator> <name pos:line="50" pos:column="58">NULL<pos:position pos:line="50" pos:column="62"/></name></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt></block></else></if>
		}<pos:position pos:line="51" pos:column="18"/></block></for>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if></elseif> <elseif pos:line="52" pos:column="11">else <if pos:line="52" pos:column="16">if <condition pos:line="52" pos:column="19">(<expr><operator pos:line="52" pos:column="20">!<pos:position pos:line="52" pos:column="21"/></operator><call><name pos:line="52" pos:column="21">strcmp<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name><name pos:line="52" pos:column="28">argv<pos:position pos:line="52" pos:column="32"/></name><index pos:line="52" pos:column="32">[<expr><literal type="number" pos:line="52" pos:column="33">0<pos:position pos:line="52" pos:column="34"/></literal></expr>]<pos:position pos:line="52" pos:column="35"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="37">"diff"<pos:position pos:line="52" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="45"/></condition><then pos:line="52" pos:column="45"> <block pos:line="52" pos:column="46">{
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><call><name pos:line="53" pos:column="21">setup_rerere<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><operator pos:line="53" pos:column="34">&amp;<pos:position pos:line="53" pos:column="39"/></operator><name pos:line="53" pos:column="35">merge_rr<pos:position pos:line="53" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="45">flags<pos:position pos:line="53" pos:column="50"/></name> <operator pos:line="53" pos:column="51">|<pos:position pos:line="53" pos:column="52"/></operator> <name pos:line="53" pos:column="53">RERERE_READONLY<pos:position pos:line="53" pos:column="68"/></name></expr></argument>)<pos:position pos:line="53" pos:column="69"/></argument_list></call> <operator pos:line="53" pos:column="70">&lt;<pos:position pos:line="53" pos:column="74"/></operator> <literal type="number" pos:line="53" pos:column="72">0<pos:position pos:line="53" pos:column="73"/></literal></expr>)<pos:position pos:line="53" pos:column="74"/></condition><then pos:line="53" pos:column="74">
			<block type="pseudo"><return pos:line="54" pos:column="25">return <expr><literal type="number" pos:line="54" pos:column="32">0<pos:position pos:line="54" pos:column="33"/></literal></expr>;<pos:position pos:line="54" pos:column="34"/></return></block></then></if>
		<for pos:line="55" pos:column="17">for <control pos:line="55" pos:column="21">(<init><expr><name pos:line="55" pos:column="22">i<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <literal type="number" pos:line="55" pos:column="26">0<pos:position pos:line="55" pos:column="27"/></literal></expr>;<pos:position pos:line="55" pos:column="28"/></init> <condition><expr><name pos:line="55" pos:column="29">i<pos:position pos:line="55" pos:column="30"/></name> <operator pos:line="55" pos:column="31">&lt;<pos:position pos:line="55" pos:column="35"/></operator> <name><name pos:line="55" pos:column="33">merge_rr<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">.<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="42">nr<pos:position pos:line="55" pos:column="44"/></name></name></expr>;<pos:position pos:line="55" pos:column="45"/></condition> <incr><expr><name pos:line="55" pos:column="46">i<pos:position pos:line="55" pos:column="47"/></name><operator pos:line="55" pos:column="47">++<pos:position pos:line="55" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="55" pos:column="50"/></control> <block pos:line="55" pos:column="51">{
			<decl_stmt><decl><type><specifier pos:line="56" pos:column="25">const<pos:position pos:line="56" pos:column="30"/></specifier> <name pos:line="56" pos:column="31">char<pos:position pos:line="56" pos:column="35"/></name> <modifier pos:line="56" pos:column="36">*<pos:position pos:line="56" pos:column="37"/></modifier></type><name pos:line="56" pos:column="37">path<pos:position pos:line="56" pos:column="41"/></name> <init pos:line="56" pos:column="42">= <expr><name><name pos:line="56" pos:column="44">merge_rr<pos:position pos:line="56" pos:column="52"/></name><operator pos:line="56" pos:column="52">.<pos:position pos:line="56" pos:column="53"/></operator><name pos:line="56" pos:column="53">items<pos:position pos:line="56" pos:column="58"/></name><index pos:line="56" pos:column="58">[<expr><name pos:line="56" pos:column="59">i<pos:position pos:line="56" pos:column="60"/></name></expr>]<pos:position pos:line="56" pos:column="61"/></index></name><operator pos:line="56" pos:column="61">.<pos:position pos:line="56" pos:column="62"/></operator><name pos:line="56" pos:column="62">string<pos:position pos:line="56" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="56" pos:column="69"/></decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="57" pos:column="25">const<pos:position pos:line="57" pos:column="30"/></specifier> <name><name pos:line="57" pos:column="31">struct<pos:position pos:line="57" pos:column="37"/></name> <name pos:line="57" pos:column="38">rerere_id<pos:position pos:line="57" pos:column="47"/></name></name> <modifier pos:line="57" pos:column="48">*<pos:position pos:line="57" pos:column="49"/></modifier></type><name pos:line="57" pos:column="49">id<pos:position pos:line="57" pos:column="51"/></name> <init pos:line="57" pos:column="52">= <expr><name><name pos:line="57" pos:column="54">merge_rr<pos:position pos:line="57" pos:column="62"/></name><operator pos:line="57" pos:column="62">.<pos:position pos:line="57" pos:column="63"/></operator><name pos:line="57" pos:column="63">items<pos:position pos:line="57" pos:column="68"/></name><index pos:line="57" pos:column="68">[<expr><name pos:line="57" pos:column="69">i<pos:position pos:line="57" pos:column="70"/></name></expr>]<pos:position pos:line="57" pos:column="71"/></index></name><operator pos:line="57" pos:column="71">.<pos:position pos:line="57" pos:column="72"/></operator><name pos:line="57" pos:column="72">util<pos:position pos:line="57" pos:column="76"/></name></expr></init></decl>;<pos:position pos:line="57" pos:column="77"/></decl_stmt>
			<if pos:line="58" pos:column="25">if <condition pos:line="58" pos:column="28">(<expr><call><name pos:line="58" pos:column="29">diff_two<pos:position pos:line="58" pos:column="37"/></name><argument_list pos:line="58" pos:column="37">(<argument><expr><call><name pos:line="58" pos:column="38">rerere_path<pos:position pos:line="58" pos:column="49"/></name><argument_list pos:line="58" pos:column="49">(<argument><expr><name pos:line="58" pos:column="50">id<pos:position pos:line="58" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="54">"preimage"<pos:position pos:line="58" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="58" pos:column="67">path<pos:position pos:line="58" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="73">path<pos:position pos:line="58" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="79">path<pos:position pos:line="58" pos:column="83"/></name></expr></argument>)<pos:position pos:line="58" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="85"/></condition><then pos:line="58" pos:column="85">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="33">die<pos:position pos:line="59" pos:column="36"/></name><argument_list pos:line="59" pos:column="36">(<argument><expr><literal type="string" pos:line="59" pos:column="37">"unable to generate diff for %s"<pos:position pos:line="59" pos:column="69"/></literal></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="71">rerere_path<pos:position pos:line="59" pos:column="82"/></name><argument_list pos:line="59" pos:column="82">(<argument><expr><name pos:line="59" pos:column="83">id<pos:position pos:line="59" pos:column="85"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="87">NULL<pos:position pos:line="59" pos:column="91"/></name></expr></argument>)<pos:position pos:line="59" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="94"/></expr_stmt></block></then></if>
		}<pos:position pos:line="60" pos:column="18"/></block></for>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if></elseif> <else pos:line="61" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="17">usage_with_options<pos:position pos:line="62" pos:column="35"/></name><argument_list pos:line="62" pos:column="35">(<argument><expr><name pos:line="62" pos:column="36">rerere_usage<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="50">options<pos:position pos:line="62" pos:column="57"/></name></expr></argument>)<pos:position pos:line="62" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="59"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="64" pos:column="9">string_list_clear<pos:position pos:line="64" pos:column="26"/></name><argument_list pos:line="64" pos:column="26">(<argument><expr><operator pos:line="64" pos:column="27">&amp;<pos:position pos:line="64" pos:column="32"/></operator><name pos:line="64" pos:column="28">merge_rr<pos:position pos:line="64" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="38">1<pos:position pos:line="64" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="41"/></expr_stmt>
	<return pos:line="65" pos:column="9">return <expr><literal type="number" pos:line="65" pos:column="16">0<pos:position pos:line="65" pos:column="17"/></literal></expr>;<pos:position pos:line="65" pos:column="18"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

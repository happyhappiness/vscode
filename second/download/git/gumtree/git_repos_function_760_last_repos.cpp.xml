<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_760_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sign_buffer<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name><name pos:line="1" pos:column="17">struct<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">strbuf<pos:position pos:line="1" pos:column="30"/></name></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">buffer<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="40">struct<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">strbuf<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">signature<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="66">const<pos:position pos:line="1" pos:column="71"/></specifier> <name pos:line="1" pos:column="72">char<pos:position pos:line="1" pos:column="76"/></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">signing_key<pos:position pos:line="1" pos:column="89"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="90"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">child_process<pos:position pos:line="3" pos:column="29"/></name></name></type> <name pos:line="3" pos:column="30">gpg<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">CHILD_PROCESS_INIT<pos:position pos:line="3" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">i<pos:position pos:line="5" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="19">j<pos:position pos:line="5" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="22">bottom<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">gpg_status<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><name pos:line="6" pos:column="36">STRBUF_INIT<pos:position pos:line="6" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">argv_array_pushl<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><operator pos:line="8" pos:column="26">&amp;<pos:position pos:line="8" pos:column="31"/></operator><name><name pos:line="8" pos:column="27">gpg<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">.<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">args<pos:position pos:line="8" pos:column="35"/></name></name></expr></argument>,
			 <argument><expr><name pos:line="9" pos:column="26">gpg_program<pos:position pos:line="9" pos:column="37"/></name></expr></argument>,
			 <argument><expr><literal type="string" pos:line="10" pos:column="26">"--status-fd=2"<pos:position pos:line="10" pos:column="41"/></literal></expr></argument>,
			 <argument><expr><literal type="string" pos:line="11" pos:column="26">"-bsau"<pos:position pos:line="11" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">signing_key<pos:position pos:line="11" pos:column="46"/></name></expr></argument>,
			 <argument><expr><name pos:line="12" pos:column="26">NULL<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">bottom<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name><name pos:line="14" pos:column="18">signature<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">len<pos:position pos:line="14" pos:column="32"/></name></name></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>

	<comment type="block" pos:line="16" pos:column="9">/*
	 * When the username signingkey is bad, program could be terminated
	 * because gpg exits without reading and then write gets SIGPIPE.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">sigchain_push<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">SIGPIPE<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="32">SIG_IGN<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">ret<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">pipe_command<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><operator pos:line="21" pos:column="28">&amp;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="29">gpg<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="34">buffer<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">-&gt;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="42">buf<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="47">buffer<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">-&gt;<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="55">len<pos:position pos:line="21" pos:column="58"/></name></name></expr></argument>,
			   <argument><expr><name pos:line="22" pos:column="28">signature<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="39">1024<pos:position pos:line="22" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="45">&amp;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="46">gpg_status<pos:position pos:line="22" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="58">0<pos:position pos:line="22" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">sigchain_pop<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">SIGPIPE<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><name pos:line="25" pos:column="9">ret<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">|=<pos:position pos:line="25" pos:column="15"/></operator> <operator pos:line="25" pos:column="16">!<pos:position pos:line="25" pos:column="17"/></operator><call><name pos:line="25" pos:column="17">strstr<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name><name pos:line="25" pos:column="24">gpg_status<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">.<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="35">buf<pos:position pos:line="25" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="40">"\n[GNUPG:] SIG_CREATED "<pos:position pos:line="25" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">strbuf_release<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><operator pos:line="26" pos:column="24">&amp;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="25">gpg_status<pos:position pos:line="26" pos:column="35"/></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">ret<pos:position pos:line="27" pos:column="16"/></name></expr>)<pos:position pos:line="27" pos:column="17"/></condition><then pos:line="27" pos:column="17">
		<block type="pseudo"><return pos:line="28" pos:column="17">return <expr><call><name pos:line="28" pos:column="24">error<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><call><name pos:line="28" pos:column="30">_<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><literal type="string" pos:line="28" pos:column="32">"gpg failed to sign the data"<pos:position pos:line="28" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></return></block></then></if>

	<comment type="block" pos:line="30" pos:column="9">/* Strip CR from the line endings, in case we are on Windows. */</comment>
	<for pos:line="31" pos:column="9">for <control pos:line="31" pos:column="13">(<init><expr><name pos:line="31" pos:column="14">i<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">j<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">bottom<pos:position pos:line="31" pos:column="28"/></name></expr>;<pos:position pos:line="31" pos:column="29"/></init> <condition><expr><name pos:line="31" pos:column="30">i<pos:position pos:line="31" pos:column="31"/></name> <operator pos:line="31" pos:column="32">&lt;<pos:position pos:line="31" pos:column="36"/></operator> <name><name pos:line="31" pos:column="34">signature<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">-&gt;<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="45">len<pos:position pos:line="31" pos:column="48"/></name></name></expr>;<pos:position pos:line="31" pos:column="49"/></condition> <incr><expr><name pos:line="31" pos:column="50">i<pos:position pos:line="31" pos:column="51"/></name><operator pos:line="31" pos:column="51">++<pos:position pos:line="31" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="54"/></control>
		<block type="pseudo"><if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name><name pos:line="32" pos:column="21">signature<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">-&gt;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="32">buf<pos:position pos:line="32" pos:column="35"/></name><index pos:line="32" pos:column="35">[<expr><name pos:line="32" pos:column="36">i<pos:position pos:line="32" pos:column="37"/></name></expr>]<pos:position pos:line="32" pos:column="38"/></index></name> <operator pos:line="32" pos:column="39">!=<pos:position pos:line="32" pos:column="41"/></operator> <literal type="char" pos:line="32" pos:column="42">'\r'<pos:position pos:line="32" pos:column="46"/></literal></expr>)<pos:position pos:line="32" pos:column="47"/></condition><then pos:line="32" pos:column="47"> <block pos:line="32" pos:column="48">{
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><name pos:line="33" pos:column="29">i<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">!=<pos:position pos:line="33" pos:column="33"/></operator> <name pos:line="33" pos:column="34">j<pos:position pos:line="33" pos:column="35"/></name></expr>)<pos:position pos:line="33" pos:column="36"/></condition><then pos:line="33" pos:column="36">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="33">signature<pos:position pos:line="34" pos:column="42"/></name><operator pos:line="34" pos:column="42">-&gt;<pos:position pos:line="34" pos:column="47"/></operator><name pos:line="34" pos:column="44">buf<pos:position pos:line="34" pos:column="47"/></name><index pos:line="34" pos:column="47">[<expr><name pos:line="34" pos:column="48">j<pos:position pos:line="34" pos:column="49"/></name></expr>]<pos:position pos:line="34" pos:column="50"/></index></name> <operator pos:line="34" pos:column="51">=<pos:position pos:line="34" pos:column="52"/></operator> <name><name pos:line="34" pos:column="53">signature<pos:position pos:line="34" pos:column="62"/></name><operator pos:line="34" pos:column="62">-&gt;<pos:position pos:line="34" pos:column="67"/></operator><name pos:line="34" pos:column="64">buf<pos:position pos:line="34" pos:column="67"/></name><index pos:line="34" pos:column="67">[<expr><name pos:line="34" pos:column="68">i<pos:position pos:line="34" pos:column="69"/></name></expr>]<pos:position pos:line="34" pos:column="70"/></index></name></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="35" pos:column="25">j<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">++<pos:position pos:line="35" pos:column="28"/></operator></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if></block></for>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">strbuf_setlen<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name pos:line="37" pos:column="23">signature<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">j<pos:position pos:line="37" pos:column="35"/></name></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>

	<return pos:line="39" pos:column="9">return <expr><literal type="number" pos:line="39" pos:column="16">0<pos:position pos:line="39" pos:column="17"/></literal></expr>;<pos:position pos:line="39" pos:column="18"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

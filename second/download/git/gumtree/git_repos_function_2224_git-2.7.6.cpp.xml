<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2224_git-2.7.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">strbuf_getwholeline<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">strbuf<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">sb<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">FILE<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">fp<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">term<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ch<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">feof<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">fp<pos:position pos:line="5" pos:column="20"/></name></expr></argument>)<pos:position pos:line="5" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="22"/></condition><then pos:line="5" pos:column="22">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><name pos:line="6" pos:column="24">EOF<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">strbuf_reset<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">sb<pos:position pos:line="8" pos:column="24"/></name></expr></argument>)<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">flockfile<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">fp<pos:position pos:line="9" pos:column="21"/></name></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">ch<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <call><name pos:line="10" pos:column="22">getc_unlocked<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">fp<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator> <operator pos:line="10" pos:column="41">!=<pos:position pos:line="10" pos:column="43"/></operator> <name pos:line="10" pos:column="44">EOF<pos:position pos:line="10" pos:column="47"/></name></expr>)<pos:position pos:line="10" pos:column="48"/></condition> <block pos:line="10" pos:column="49">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><call><name pos:line="11" pos:column="22">strbuf_avail<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">sb<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">strbuf_grow<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><name pos:line="12" pos:column="37">sb<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="41">1<pos:position pos:line="12" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="13" pos:column="17">sb<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">buf<pos:position pos:line="13" pos:column="24"/></name><index pos:line="13" pos:column="24">[<expr><name><name pos:line="13" pos:column="25">sb<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">len<pos:position pos:line="13" pos:column="32"/></name></name><operator pos:line="13" pos:column="32">++<pos:position pos:line="13" pos:column="34"/></operator></expr>]<pos:position pos:line="13" pos:column="35"/></index></name> <operator pos:line="13" pos:column="36">=<pos:position pos:line="13" pos:column="37"/></operator> <name pos:line="13" pos:column="38">ch<pos:position pos:line="13" pos:column="40"/></name></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">ch<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">==<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">term<pos:position pos:line="14" pos:column="31"/></name></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32">
			<block type="pseudo"><break pos:line="15" pos:column="25">break;<pos:position pos:line="15" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="16" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">funlockfile<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">fp<pos:position pos:line="17" pos:column="23"/></name></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">ch<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">==<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">EOF<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&amp;&amp;<pos:position pos:line="18" pos:column="33"/></operator> <name><name pos:line="18" pos:column="26">sb<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">len<pos:position pos:line="18" pos:column="33"/></name></name> <operator pos:line="18" pos:column="34">==<pos:position pos:line="18" pos:column="36"/></operator> <literal type="number" pos:line="18" pos:column="37">0<pos:position pos:line="18" pos:column="38"/></literal></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><name pos:line="19" pos:column="24">EOF<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><name><name pos:line="21" pos:column="9">sb<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">buf<pos:position pos:line="21" pos:column="16"/></name><index pos:line="21" pos:column="16">[<expr><name><name pos:line="21" pos:column="17">sb<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">len<pos:position pos:line="21" pos:column="24"/></name></name></expr>]<pos:position pos:line="21" pos:column="25"/></index></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <literal type="char" pos:line="21" pos:column="28">'\0'<pos:position pos:line="21" pos:column="32"/></literal></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
	<return pos:line="22" pos:column="9">return <expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3252_git-2.7.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">finish_request<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">transfer_request<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">request<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">http_pack_request<pos:position pos:line="3" pos:column="33"/></name></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">preq<pos:position pos:line="3" pos:column="39"/></name></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">http_object_request<pos:position pos:line="4" pos:column="35"/></name></name> <modifier pos:line="4" pos:column="36">*<pos:position pos:line="4" pos:column="37"/></modifier></type><name pos:line="4" pos:column="37">obj_req<pos:position pos:line="4" pos:column="44"/></name></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="6" pos:column="9">request<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">curl_result<pos:position pos:line="6" pos:column="29"/></name></name> <operator pos:line="6" pos:column="30">=<pos:position pos:line="6" pos:column="31"/></operator> <name><name pos:line="6" pos:column="32">request<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">slot<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">-&gt;<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="47">curl_result<pos:position pos:line="6" pos:column="58"/></name></name></expr>;<pos:position pos:line="6" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">request<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">http_code<pos:position pos:line="7" pos:column="27"/></name></name> <operator pos:line="7" pos:column="28">=<pos:position pos:line="7" pos:column="29"/></operator> <name><name pos:line="7" pos:column="30">request<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">slot<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">http_code<pos:position pos:line="7" pos:column="54"/></name></name></expr>;<pos:position pos:line="7" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">request<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">slot<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* Keep locks active */</comment>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">check_locks<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">()<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">request<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">headers<pos:position pos:line="13" pos:column="29"/></name></name> <operator pos:line="13" pos:column="30">!=<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="33">NULL<pos:position pos:line="13" pos:column="37"/></name></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">curl_slist_free_all<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name><name pos:line="14" pos:column="37">request<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">-&gt;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="46">headers<pos:position pos:line="14" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="16" pos:column="9">/* URL is reused for MOVE after PUT */</comment>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">request<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">state<pos:position pos:line="17" pos:column="27"/></name></name> <operator pos:line="17" pos:column="28">!=<pos:position pos:line="17" pos:column="30"/></operator> <name pos:line="17" pos:column="31">RUN_PUT<pos:position pos:line="17" pos:column="38"/></name></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39"> <block pos:line="17" pos:column="40">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">free<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name><name pos:line="18" pos:column="22">request<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">url<pos:position pos:line="18" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">request<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">-&gt;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="26">url<pos:position pos:line="19" pos:column="29"/></name></name> <operator pos:line="19" pos:column="30">=<pos:position pos:line="19" pos:column="31"/></operator> <name pos:line="19" pos:column="32">NULL<pos:position pos:line="19" pos:column="36"/></name></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">request<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">state<pos:position pos:line="22" pos:column="27"/></name></name> <operator pos:line="22" pos:column="28">==<pos:position pos:line="22" pos:column="30"/></operator> <name pos:line="22" pos:column="31">RUN_MKCOL<pos:position pos:line="22" pos:column="40"/></name></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41"> <block pos:line="22" pos:column="42">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name><name pos:line="23" pos:column="21">request<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">curl_result<pos:position pos:line="23" pos:column="41"/></name></name> <operator pos:line="23" pos:column="42">==<pos:position pos:line="23" pos:column="44"/></operator> <name pos:line="23" pos:column="45">CURLE_OK<pos:position pos:line="23" pos:column="53"/></name> <operator pos:line="23" pos:column="54">||<pos:position pos:line="23" pos:column="56"/></operator>
		    <name><name pos:line="24" pos:column="21">request<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="30">http_code<pos:position pos:line="24" pos:column="39"/></name></name> <operator pos:line="24" pos:column="40">==<pos:position pos:line="24" pos:column="42"/></operator> <literal type="number" pos:line="24" pos:column="43">405<pos:position pos:line="24" pos:column="46"/></literal></expr>)<pos:position pos:line="24" pos:column="47"/></condition><then pos:line="24" pos:column="47"> <block pos:line="24" pos:column="48">{
			<expr_stmt><expr><name><name pos:line="25" pos:column="25">remote_dir_exists<pos:position pos:line="25" pos:column="42"/></name><index pos:line="25" pos:column="42">[<expr><name><name pos:line="25" pos:column="43">request<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">-&gt;<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="52">obj<pos:position pos:line="25" pos:column="55"/></name><operator pos:line="25" pos:column="55">-&gt;<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="57">oid<pos:position pos:line="25" pos:column="60"/></name><operator pos:line="25" pos:column="60">.<pos:position pos:line="25" pos:column="61"/></operator><name pos:line="25" pos:column="61">hash<pos:position pos:line="25" pos:column="65"/></name><index pos:line="25" pos:column="65">[<expr><literal type="number" pos:line="25" pos:column="66">0<pos:position pos:line="25" pos:column="67"/></literal></expr>]<pos:position pos:line="25" pos:column="68"/></index></name></expr>]<pos:position pos:line="25" pos:column="69"/></index></name> <operator pos:line="25" pos:column="70">=<pos:position pos:line="25" pos:column="71"/></operator> <literal type="number" pos:line="25" pos:column="72">1<pos:position pos:line="25" pos:column="73"/></literal></expr>;<pos:position pos:line="25" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">start_put<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><name pos:line="26" pos:column="35">request<pos:position pos:line="26" pos:column="42"/></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></then> <else pos:line="27" pos:column="19">else <block pos:line="27" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">fprintf<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">stderr<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="41">"MKCOL %s failed, aborting (%d/%ld)\n"<pos:position pos:line="28" pos:column="79"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="29" pos:column="33">oid_to_hex<pos:position pos:line="29" pos:column="43"/></name><argument_list pos:line="29" pos:column="43">(<argument><expr><operator pos:line="29" pos:column="44">&amp;<pos:position pos:line="29" pos:column="49"/></operator><name><name pos:line="29" pos:column="45">request<pos:position pos:line="29" pos:column="52"/></name><operator pos:line="29" pos:column="52">-&gt;<pos:position pos:line="29" pos:column="57"/></operator><name pos:line="29" pos:column="54">obj<pos:position pos:line="29" pos:column="57"/></name><operator pos:line="29" pos:column="57">-&gt;<pos:position pos:line="29" pos:column="62"/></operator><name pos:line="29" pos:column="59">oid<pos:position pos:line="29" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="30" pos:column="33">request<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">curl_result<pos:position pos:line="30" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="55">request<pos:position pos:line="30" pos:column="62"/></name><operator pos:line="30" pos:column="62">-&gt;<pos:position pos:line="30" pos:column="67"/></operator><name pos:line="30" pos:column="64">http_code<pos:position pos:line="30" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">request<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">state<pos:position pos:line="31" pos:column="39"/></name></name> <operator pos:line="31" pos:column="40">=<pos:position pos:line="31" pos:column="41"/></operator> <name pos:line="31" pos:column="42">ABORTED<pos:position pos:line="31" pos:column="49"/></name></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="32" pos:column="25">aborted<pos:position pos:line="32" pos:column="32"/></name> <operator pos:line="32" pos:column="33">=<pos:position pos:line="32" pos:column="34"/></operator> <literal type="number" pos:line="32" pos:column="35">1<pos:position pos:line="32" pos:column="36"/></literal></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></else></if>
	}<pos:position pos:line="34" pos:column="10"/></block></then> <elseif pos:line="34" pos:column="11">else <if pos:line="34" pos:column="16">if <condition pos:line="34" pos:column="19">(<expr><name><name pos:line="34" pos:column="20">request<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">state<pos:position pos:line="34" pos:column="34"/></name></name> <operator pos:line="34" pos:column="35">==<pos:position pos:line="34" pos:column="37"/></operator> <name pos:line="34" pos:column="38">RUN_PUT<pos:position pos:line="34" pos:column="45"/></name></expr>)<pos:position pos:line="34" pos:column="46"/></condition><then pos:line="34" pos:column="46"> <block pos:line="34" pos:column="47">{
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name><name pos:line="35" pos:column="21">request<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">curl_result<pos:position pos:line="35" pos:column="41"/></name></name> <operator pos:line="35" pos:column="42">==<pos:position pos:line="35" pos:column="44"/></operator> <name pos:line="35" pos:column="45">CURLE_OK<pos:position pos:line="35" pos:column="53"/></name></expr>)<pos:position pos:line="35" pos:column="54"/></condition><then pos:line="35" pos:column="54"> <block pos:line="35" pos:column="55">{
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">start_move<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><name pos:line="36" pos:column="36">request<pos:position pos:line="36" pos:column="43"/></name></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></then> <else pos:line="37" pos:column="19">else <block pos:line="37" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">fprintf<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">stderr<pos:position pos:line="38" pos:column="39"/></name></expr></argument>,	<argument><expr><literal type="string" pos:line="38" pos:column="41">"PUT %s failed, aborting (%d/%ld)\n"<pos:position pos:line="38" pos:column="77"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="39" pos:column="33">oid_to_hex<pos:position pos:line="39" pos:column="43"/></name><argument_list pos:line="39" pos:column="43">(<argument><expr><operator pos:line="39" pos:column="44">&amp;<pos:position pos:line="39" pos:column="49"/></operator><name><name pos:line="39" pos:column="45">request<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">-&gt;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="54">obj<pos:position pos:line="39" pos:column="57"/></name><operator pos:line="39" pos:column="57">-&gt;<pos:position pos:line="39" pos:column="62"/></operator><name pos:line="39" pos:column="59">oid<pos:position pos:line="39" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="63"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="40" pos:column="33">request<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">-&gt;<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="42">curl_result<pos:position pos:line="40" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="55">request<pos:position pos:line="40" pos:column="62"/></name><operator pos:line="40" pos:column="62">-&gt;<pos:position pos:line="40" pos:column="67"/></operator><name pos:line="40" pos:column="64">http_code<pos:position pos:line="40" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="41" pos:column="25">request<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">-&gt;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="34">state<pos:position pos:line="41" pos:column="39"/></name></name> <operator pos:line="41" pos:column="40">=<pos:position pos:line="41" pos:column="41"/></operator> <name pos:line="41" pos:column="42">ABORTED<pos:position pos:line="41" pos:column="49"/></name></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="42" pos:column="25">aborted<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <literal type="number" pos:line="42" pos:column="35">1<pos:position pos:line="42" pos:column="36"/></literal></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></else></if>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if></elseif> <elseif pos:line="44" pos:column="11">else <if pos:line="44" pos:column="16">if <condition pos:line="44" pos:column="19">(<expr><name><name pos:line="44" pos:column="20">request<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">-&gt;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="29">state<pos:position pos:line="44" pos:column="34"/></name></name> <operator pos:line="44" pos:column="35">==<pos:position pos:line="44" pos:column="37"/></operator> <name pos:line="44" pos:column="38">RUN_MOVE<pos:position pos:line="44" pos:column="46"/></name></expr>)<pos:position pos:line="44" pos:column="47"/></condition><then pos:line="44" pos:column="47"> <block pos:line="44" pos:column="48">{
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name><name pos:line="45" pos:column="21">request<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">-&gt;<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="30">curl_result<pos:position pos:line="45" pos:column="41"/></name></name> <operator pos:line="45" pos:column="42">==<pos:position pos:line="45" pos:column="44"/></operator> <name pos:line="45" pos:column="45">CURLE_OK<pos:position pos:line="45" pos:column="53"/></name></expr>)<pos:position pos:line="45" pos:column="54"/></condition><then pos:line="45" pos:column="54"> <block pos:line="45" pos:column="55">{
			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><name pos:line="46" pos:column="29">push_verbosely<pos:position pos:line="46" pos:column="43"/></name></expr>)<pos:position pos:line="46" pos:column="44"/></condition><then pos:line="46" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="33">fprintf<pos:position pos:line="47" pos:column="40"/></name><argument_list pos:line="47" pos:column="40">(<argument><expr><name pos:line="47" pos:column="41">stderr<pos:position pos:line="47" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="49">"    sent %s\n"<pos:position pos:line="47" pos:column="64"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="48" pos:column="41">oid_to_hex<pos:position pos:line="48" pos:column="51"/></name><argument_list pos:line="48" pos:column="51">(<argument><expr><operator pos:line="48" pos:column="52">&amp;<pos:position pos:line="48" pos:column="57"/></operator><name><name pos:line="48" pos:column="53">request<pos:position pos:line="48" pos:column="60"/></name><operator pos:line="48" pos:column="60">-&gt;<pos:position pos:line="48" pos:column="65"/></operator><name pos:line="48" pos:column="62">obj<pos:position pos:line="48" pos:column="65"/></name><operator pos:line="48" pos:column="65">-&gt;<pos:position pos:line="48" pos:column="70"/></operator><name pos:line="48" pos:column="67">oid<pos:position pos:line="48" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="73"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="49" pos:column="25">request<pos:position pos:line="49" pos:column="32"/></name><operator pos:line="49" pos:column="32">-&gt;<pos:position pos:line="49" pos:column="37"/></operator><name pos:line="49" pos:column="34">obj<pos:position pos:line="49" pos:column="37"/></name><operator pos:line="49" pos:column="37">-&gt;<pos:position pos:line="49" pos:column="42"/></operator><name pos:line="49" pos:column="39">flags<pos:position pos:line="49" pos:column="44"/></name></name> <operator pos:line="49" pos:column="45">|=<pos:position pos:line="49" pos:column="47"/></operator> <name pos:line="49" pos:column="48">REMOTE<pos:position pos:line="49" pos:column="54"/></name></expr>;<pos:position pos:line="49" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="50" pos:column="25">release_request<pos:position pos:line="50" pos:column="40"/></name><argument_list pos:line="50" pos:column="40">(<argument><expr><name pos:line="50" pos:column="41">request<pos:position pos:line="50" pos:column="48"/></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="51" pos:column="18"/></block></then> <else pos:line="51" pos:column="19">else <block pos:line="51" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="52" pos:column="25">fprintf<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">stderr<pos:position pos:line="52" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="41">"MOVE %s failed, aborting (%d/%ld)\n"<pos:position pos:line="52" pos:column="78"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="53" pos:column="33">oid_to_hex<pos:position pos:line="53" pos:column="43"/></name><argument_list pos:line="53" pos:column="43">(<argument><expr><operator pos:line="53" pos:column="44">&amp;<pos:position pos:line="53" pos:column="49"/></operator><name><name pos:line="53" pos:column="45">request<pos:position pos:line="53" pos:column="52"/></name><operator pos:line="53" pos:column="52">-&gt;<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="54">obj<pos:position pos:line="53" pos:column="57"/></name><operator pos:line="53" pos:column="57">-&gt;<pos:position pos:line="53" pos:column="62"/></operator><name pos:line="53" pos:column="59">oid<pos:position pos:line="53" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="63"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="54" pos:column="33">request<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">-&gt;<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="42">curl_result<pos:position pos:line="54" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="55">request<pos:position pos:line="54" pos:column="62"/></name><operator pos:line="54" pos:column="62">-&gt;<pos:position pos:line="54" pos:column="67"/></operator><name pos:line="54" pos:column="64">http_code<pos:position pos:line="54" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="55" pos:column="25">request<pos:position pos:line="55" pos:column="32"/></name><operator pos:line="55" pos:column="32">-&gt;<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="34">state<pos:position pos:line="55" pos:column="39"/></name></name> <operator pos:line="55" pos:column="40">=<pos:position pos:line="55" pos:column="41"/></operator> <name pos:line="55" pos:column="42">ABORTED<pos:position pos:line="55" pos:column="49"/></name></expr>;<pos:position pos:line="55" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="56" pos:column="25">aborted<pos:position pos:line="56" pos:column="32"/></name> <operator pos:line="56" pos:column="33">=<pos:position pos:line="56" pos:column="34"/></operator> <literal type="number" pos:line="56" pos:column="35">1<pos:position pos:line="56" pos:column="36"/></literal></expr>;<pos:position pos:line="56" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="57" pos:column="18"/></block></else></if>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if></elseif> <elseif pos:line="58" pos:column="11">else <if pos:line="58" pos:column="16">if <condition pos:line="58" pos:column="19">(<expr><name><name pos:line="58" pos:column="20">request<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">-&gt;<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="29">state<pos:position pos:line="58" pos:column="34"/></name></name> <operator pos:line="58" pos:column="35">==<pos:position pos:line="58" pos:column="37"/></operator> <name pos:line="58" pos:column="38">RUN_FETCH_LOOSE<pos:position pos:line="58" pos:column="53"/></name></expr>)<pos:position pos:line="58" pos:column="54"/></condition><then pos:line="58" pos:column="54"> <block pos:line="58" pos:column="55">{
		<expr_stmt><expr><name pos:line="59" pos:column="17">obj_req<pos:position pos:line="59" pos:column="24"/></name> <operator pos:line="59" pos:column="25">=<pos:position pos:line="59" pos:column="26"/></operator> <operator pos:line="59" pos:column="27">(<pos:position pos:line="59" pos:column="28"/></operator>struct <name pos:line="59" pos:column="35">http_object_request<pos:position pos:line="59" pos:column="54"/></name> <operator pos:line="59" pos:column="55">*<pos:position pos:line="59" pos:column="56"/></operator><operator pos:line="59" pos:column="56">)<pos:position pos:line="59" pos:column="57"/></operator><name><name pos:line="59" pos:column="57">request<pos:position pos:line="59" pos:column="64"/></name><operator pos:line="59" pos:column="64">-&gt;<pos:position pos:line="59" pos:column="69"/></operator><name pos:line="59" pos:column="66">userData<pos:position pos:line="59" pos:column="74"/></name></name></expr>;<pos:position pos:line="59" pos:column="75"/></expr_stmt>

		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><call><name pos:line="61" pos:column="21">finish_http_object_request<pos:position pos:line="61" pos:column="47"/></name><argument_list pos:line="61" pos:column="47">(<argument><expr><name pos:line="61" pos:column="48">obj_req<pos:position pos:line="61" pos:column="55"/></name></expr></argument>)<pos:position pos:line="61" pos:column="56"/></argument_list></call> <operator pos:line="61" pos:column="57">==<pos:position pos:line="61" pos:column="59"/></operator> <literal type="number" pos:line="61" pos:column="60">0<pos:position pos:line="61" pos:column="61"/></literal></expr>)<pos:position pos:line="61" pos:column="62"/></condition><then pos:line="61" pos:column="62">
			<block type="pseudo"><if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><name><name pos:line="62" pos:column="29">obj_req<pos:position pos:line="62" pos:column="36"/></name><operator pos:line="62" pos:column="36">-&gt;<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="38">rename<pos:position pos:line="62" pos:column="44"/></name></name> <operator pos:line="62" pos:column="45">==<pos:position pos:line="62" pos:column="47"/></operator> <literal type="number" pos:line="62" pos:column="48">0<pos:position pos:line="62" pos:column="49"/></literal></expr>)<pos:position pos:line="62" pos:column="50"/></condition><then pos:line="62" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="33">request<pos:position pos:line="63" pos:column="40"/></name><operator pos:line="63" pos:column="40">-&gt;<pos:position pos:line="63" pos:column="45"/></operator><name pos:line="63" pos:column="42">obj<pos:position pos:line="63" pos:column="45"/></name><operator pos:line="63" pos:column="45">-&gt;<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="47">flags<pos:position pos:line="63" pos:column="52"/></name></name> <operator pos:line="63" pos:column="53">|=<pos:position pos:line="63" pos:column="55"/></operator> <operator pos:line="63" pos:column="56">(<pos:position pos:line="63" pos:column="57"/></operator><name pos:line="63" pos:column="57">LOCAL<pos:position pos:line="63" pos:column="62"/></name> <operator pos:line="63" pos:column="63">|<pos:position pos:line="63" pos:column="64"/></operator> <name pos:line="63" pos:column="65">REMOTE<pos:position pos:line="63" pos:column="71"/></name><operator pos:line="63" pos:column="71">)<pos:position pos:line="63" pos:column="72"/></operator></expr>;<pos:position pos:line="63" pos:column="73"/></expr_stmt></block></then></if></block></then></if>

		<comment type="block" pos:line="65" pos:column="17">/* Try fetching packed if necessary */</comment>
		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><name><name pos:line="66" pos:column="21">request<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">-&gt;<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="30">obj<pos:position pos:line="66" pos:column="33"/></name><operator pos:line="66" pos:column="33">-&gt;<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="35">flags<pos:position pos:line="66" pos:column="40"/></name></name> <operator pos:line="66" pos:column="41">&amp;<pos:position pos:line="66" pos:column="46"/></operator> <name pos:line="66" pos:column="43">LOCAL<pos:position pos:line="66" pos:column="48"/></name></expr>)<pos:position pos:line="66" pos:column="49"/></condition><then pos:line="66" pos:column="49"> <block pos:line="66" pos:column="50">{
			<expr_stmt><expr><call><name pos:line="67" pos:column="25">release_http_object_request<pos:position pos:line="67" pos:column="52"/></name><argument_list pos:line="67" pos:column="52">(<argument><expr><name pos:line="67" pos:column="53">obj_req<pos:position pos:line="67" pos:column="60"/></name></expr></argument>)<pos:position pos:line="67" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="68" pos:column="25">release_request<pos:position pos:line="68" pos:column="40"/></name><argument_list pos:line="68" pos:column="40">(<argument><expr><name pos:line="68" pos:column="41">request<pos:position pos:line="68" pos:column="48"/></name></expr></argument>)<pos:position pos:line="68" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="69" pos:column="18"/></block></then> <else pos:line="69" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="25">start_fetch_packed<pos:position pos:line="70" pos:column="43"/></name><argument_list pos:line="70" pos:column="43">(<argument><expr><name pos:line="70" pos:column="44">request<pos:position pos:line="70" pos:column="51"/></name></expr></argument>)<pos:position pos:line="70" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="53"/></expr_stmt></block></else></if>

	}<pos:position pos:line="72" pos:column="10"/></block></then></if></elseif> <elseif pos:line="72" pos:column="11">else <if pos:line="72" pos:column="16">if <condition pos:line="72" pos:column="19">(<expr><name><name pos:line="72" pos:column="20">request<pos:position pos:line="72" pos:column="27"/></name><operator pos:line="72" pos:column="27">-&gt;<pos:position pos:line="72" pos:column="32"/></operator><name pos:line="72" pos:column="29">state<pos:position pos:line="72" pos:column="34"/></name></name> <operator pos:line="72" pos:column="35">==<pos:position pos:line="72" pos:column="37"/></operator> <name pos:line="72" pos:column="38">RUN_FETCH_PACKED<pos:position pos:line="72" pos:column="54"/></name></expr>)<pos:position pos:line="72" pos:column="55"/></condition><then pos:line="72" pos:column="55"> <block pos:line="72" pos:column="56">{
		<decl_stmt><decl><type><name pos:line="73" pos:column="17">int<pos:position pos:line="73" pos:column="20"/></name></type> <name pos:line="73" pos:column="21">fail<pos:position pos:line="73" pos:column="25"/></name> <init pos:line="73" pos:column="26">= <expr><literal type="number" pos:line="73" pos:column="28">1<pos:position pos:line="73" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="73" pos:column="30"/></decl_stmt>
		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><name><name pos:line="74" pos:column="21">request<pos:position pos:line="74" pos:column="28"/></name><operator pos:line="74" pos:column="28">-&gt;<pos:position pos:line="74" pos:column="33"/></operator><name pos:line="74" pos:column="30">curl_result<pos:position pos:line="74" pos:column="41"/></name></name> <operator pos:line="74" pos:column="42">!=<pos:position pos:line="74" pos:column="44"/></operator> <name pos:line="74" pos:column="45">CURLE_OK<pos:position pos:line="74" pos:column="53"/></name></expr>)<pos:position pos:line="74" pos:column="54"/></condition><then pos:line="74" pos:column="54"> <block pos:line="74" pos:column="55">{
			<expr_stmt><expr><call><name pos:line="75" pos:column="25">fprintf<pos:position pos:line="75" pos:column="32"/></name><argument_list pos:line="75" pos:column="32">(<argument><expr><name pos:line="75" pos:column="33">stderr<pos:position pos:line="75" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="41">"Unable to get pack file %s\n%s"<pos:position pos:line="75" pos:column="73"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="76" pos:column="33">request<pos:position pos:line="76" pos:column="40"/></name><operator pos:line="76" pos:column="40">-&gt;<pos:position pos:line="76" pos:column="45"/></operator><name pos:line="76" pos:column="42">url<pos:position pos:line="76" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="47">curl_errorstr<pos:position pos:line="76" pos:column="60"/></name></expr></argument>)<pos:position pos:line="76" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="77" pos:column="18"/></block></then> <else pos:line="77" pos:column="19">else <block pos:line="77" pos:column="24">{
			<expr_stmt><expr><name pos:line="78" pos:column="25">preq<pos:position pos:line="78" pos:column="29"/></name> <operator pos:line="78" pos:column="30">=<pos:position pos:line="78" pos:column="31"/></operator> <operator pos:line="78" pos:column="32">(<pos:position pos:line="78" pos:column="33"/></operator>struct <name pos:line="78" pos:column="40">http_pack_request<pos:position pos:line="78" pos:column="57"/></name> <operator pos:line="78" pos:column="58">*<pos:position pos:line="78" pos:column="59"/></operator><operator pos:line="78" pos:column="59">)<pos:position pos:line="78" pos:column="60"/></operator><name><name pos:line="78" pos:column="60">request<pos:position pos:line="78" pos:column="67"/></name><operator pos:line="78" pos:column="67">-&gt;<pos:position pos:line="78" pos:column="72"/></operator><name pos:line="78" pos:column="69">userData<pos:position pos:line="78" pos:column="77"/></name></name></expr>;<pos:position pos:line="78" pos:column="78"/></expr_stmt>

			<if pos:line="80" pos:column="25">if <condition pos:line="80" pos:column="28">(<expr><name pos:line="80" pos:column="29">preq<pos:position pos:line="80" pos:column="33"/></name></expr>)<pos:position pos:line="80" pos:column="34"/></condition><then pos:line="80" pos:column="34"> <block pos:line="80" pos:column="35">{
				<if pos:line="81" pos:column="33">if <condition pos:line="81" pos:column="36">(<expr><call><name pos:line="81" pos:column="37">finish_http_pack_request<pos:position pos:line="81" pos:column="61"/></name><argument_list pos:line="81" pos:column="61">(<argument><expr><name pos:line="81" pos:column="62">preq<pos:position pos:line="81" pos:column="66"/></name></expr></argument>)<pos:position pos:line="81" pos:column="67"/></argument_list></call> <operator pos:line="81" pos:column="68">==<pos:position pos:line="81" pos:column="70"/></operator> <literal type="number" pos:line="81" pos:column="71">0<pos:position pos:line="81" pos:column="72"/></literal></expr>)<pos:position pos:line="81" pos:column="73"/></condition><then pos:line="81" pos:column="73">
					<block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="41">fail<pos:position pos:line="82" pos:column="45"/></name> <operator pos:line="82" pos:column="46">=<pos:position pos:line="82" pos:column="47"/></operator> <literal type="number" pos:line="82" pos:column="48">0<pos:position pos:line="82" pos:column="49"/></literal></expr>;<pos:position pos:line="82" pos:column="50"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="83" pos:column="33">release_http_pack_request<pos:position pos:line="83" pos:column="58"/></name><argument_list pos:line="83" pos:column="58">(<argument><expr><name pos:line="83" pos:column="59">preq<pos:position pos:line="83" pos:column="63"/></name></expr></argument>)<pos:position pos:line="83" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="65"/></expr_stmt>
			}<pos:position pos:line="84" pos:column="26"/></block></then></if>
		}<pos:position pos:line="85" pos:column="18"/></block></else></if>
		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name pos:line="86" pos:column="21">fail<pos:position pos:line="86" pos:column="25"/></name></expr>)<pos:position pos:line="86" pos:column="26"/></condition><then pos:line="86" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="87" pos:column="25">repo<pos:position pos:line="87" pos:column="29"/></name><operator pos:line="87" pos:column="29">-&gt;<pos:position pos:line="87" pos:column="34"/></operator><name pos:line="87" pos:column="31">can_update_info_refs<pos:position pos:line="87" pos:column="51"/></name></name> <operator pos:line="87" pos:column="52">=<pos:position pos:line="87" pos:column="53"/></operator> <literal type="number" pos:line="87" pos:column="54">0<pos:position pos:line="87" pos:column="55"/></literal></expr>;<pos:position pos:line="87" pos:column="56"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="88" pos:column="17">release_request<pos:position pos:line="88" pos:column="32"/></name><argument_list pos:line="88" pos:column="32">(<argument><expr><name pos:line="88" pos:column="33">request<pos:position pos:line="88" pos:column="40"/></name></expr></argument>)<pos:position pos:line="88" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="89" pos:column="10"/></block></then></if></elseif></if>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

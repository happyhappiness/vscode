<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2780_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">was_tracked<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">path<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">pos<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">cache_name_pos<pos:position pos:line="3" pos:column="33"/></name><argument_list pos:line="3" pos:column="33">(<argument><expr><name pos:line="3" pos:column="34">path<pos:position pos:line="3" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="3" pos:column="40">strlen<pos:position pos:line="3" pos:column="46"/></name><argument_list pos:line="3" pos:column="46">(<argument><expr><name pos:line="3" pos:column="47">path<pos:position pos:line="3" pos:column="51"/></name></expr></argument>)<pos:position pos:line="3" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="54"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">pos<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">&lt;<pos:position pos:line="5" pos:column="21"/></operator> <literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">pos<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">=<pos:position pos:line="6" pos:column="22"/></operator> <operator pos:line="6" pos:column="23">-<pos:position pos:line="6" pos:column="24"/></operator><literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal> <operator pos:line="6" pos:column="26">-<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="28">pos<pos:position pos:line="6" pos:column="31"/></name></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt></block></then></if>
	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">pos<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">&lt;<pos:position pos:line="7" pos:column="24"/></operator> <name pos:line="7" pos:column="22">active_nr<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">&amp;&amp;<pos:position pos:line="7" pos:column="42"/></operator>
	       <operator pos:line="8" pos:column="16">!<pos:position pos:line="8" pos:column="17"/></operator><call><name pos:line="8" pos:column="17">strcmp<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">path<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="30">active_cache<pos:position pos:line="8" pos:column="42"/></name><index pos:line="8" pos:column="42">[<expr><name pos:line="8" pos:column="43">pos<pos:position pos:line="8" pos:column="46"/></name></expr>]<pos:position pos:line="8" pos:column="47"/></index></name><operator pos:line="8" pos:column="47">-&gt;<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="49">name<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="55"/></condition> <block pos:line="8" pos:column="56">{
		<comment type="block" pos:line="9" pos:column="17">/*
		 * If stage #0, it is definitely tracked.
		 * If it has stage #2 then it was tracked
		 * before this merge started.  All other
		 * cases the path was not tracked.
		 */</comment>
		<switch pos:line="15" pos:column="17">switch <condition pos:line="15" pos:column="24">(<expr><call><name pos:line="15" pos:column="25">ce_stage<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><name><name pos:line="15" pos:column="34">active_cache<pos:position pos:line="15" pos:column="46"/></name><index pos:line="15" pos:column="46">[<expr><name pos:line="15" pos:column="47">pos<pos:position pos:line="15" pos:column="50"/></name></expr>]<pos:position pos:line="15" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="53"/></condition> <block pos:line="15" pos:column="54">{
		<case pos:line="16" pos:column="17">case <expr><literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr>:<pos:position pos:line="16" pos:column="24"/></case>
		<case pos:line="17" pos:column="17">case <expr><literal type="number" pos:line="17" pos:column="22">2<pos:position pos:line="17" pos:column="23"/></literal></expr>:<pos:position pos:line="17" pos:column="24"/></case>
			<return pos:line="18" pos:column="25">return <expr><literal type="number" pos:line="18" pos:column="32">1<pos:position pos:line="18" pos:column="33"/></literal></expr>;<pos:position pos:line="18" pos:column="34"/></return>
		}<pos:position pos:line="19" pos:column="18"/></block></switch>
		<expr_stmt><expr><name pos:line="20" pos:column="17">pos<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">++<pos:position pos:line="20" pos:column="22"/></operator></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></while>
	<return pos:line="22" pos:column="9">return <expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

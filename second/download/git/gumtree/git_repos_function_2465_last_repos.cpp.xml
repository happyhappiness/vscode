<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2465_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">read_skip_worktree_file_from_index<pos:position pos:line="1" pos:column="48"/></name><parameter_list pos:line="1" pos:column="48">(<parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name><name pos:line="1" pos:column="55">struct<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">index_state<pos:position pos:line="1" pos:column="73"/></name></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">istate<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>,
						<parameter><decl><type><specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">path<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="67">size_t<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">size<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>,
						<parameter><decl><type><name><name pos:line="3" pos:column="49">struct<pos:position pos:line="3" pos:column="55"/></name> <name pos:line="3" pos:column="56">sha1_stat<pos:position pos:line="3" pos:column="65"/></name></name> <modifier pos:line="3" pos:column="66">*<pos:position pos:line="3" pos:column="67"/></modifier></type><name pos:line="3" pos:column="67">sha1_stat<pos:position pos:line="3" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="77"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">pos<pos:position pos:line="5" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="18">len<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">sz<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">enum<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">object_type<pos:position pos:line="7" pos:column="25"/></name></name></type> <name pos:line="7" pos:column="26">type<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">void<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">data<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">len<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">strlen<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">path<pos:position pos:line="10" pos:column="26"/></name></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">pos<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <call><name pos:line="11" pos:column="15">index_name_pos<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">istate<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">path<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="44">len<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">pos<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&lt;<pos:position pos:line="12" pos:column="21"/></operator> <literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></return></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">ce_skip_worktree<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name><name pos:line="14" pos:column="31">istate<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">-&gt;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="39">cache<pos:position pos:line="14" pos:column="44"/></name><index pos:line="14" pos:column="44">[<expr><name pos:line="14" pos:column="45">pos<pos:position pos:line="14" pos:column="48"/></name></expr>]<pos:position pos:line="14" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="51"/></condition><then pos:line="14" pos:column="51">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><name pos:line="15" pos:column="24">NULL<pos:position pos:line="15" pos:column="28"/></name></expr>;<pos:position pos:line="15" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="16" pos:column="9">data<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">read_sha1_file<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name><name pos:line="16" pos:column="31">istate<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">cache<pos:position pos:line="16" pos:column="44"/></name><index pos:line="16" pos:column="44">[<expr><name pos:line="16" pos:column="45">pos<pos:position pos:line="16" pos:column="48"/></name></expr>]<pos:position pos:line="16" pos:column="49"/></index></name><operator pos:line="16" pos:column="49">-&gt;<pos:position pos:line="16" pos:column="54"/></operator><name><name pos:line="16" pos:column="51">oid<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">.<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="55">hash<pos:position pos:line="16" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="61">&amp;<pos:position pos:line="16" pos:column="66"/></operator><name pos:line="16" pos:column="62">type<pos:position pos:line="16" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="68">&amp;<pos:position pos:line="16" pos:column="73"/></operator><name pos:line="16" pos:column="69">sz<pos:position pos:line="16" pos:column="71"/></name></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="73"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">data<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">||<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">type<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">!=<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">OBJ_BLOB<pos:position pos:line="17" pos:column="38"/></name></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39"> <block pos:line="17" pos:column="40">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">free<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">data<pos:position pos:line="18" pos:column="26"/></name></expr></argument>)<pos:position pos:line="18" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><name pos:line="19" pos:column="24">NULL<pos:position pos:line="19" pos:column="28"/></name></expr>;<pos:position pos:line="19" pos:column="29"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">size<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">xsize_t<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">sz<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">sha1_stat<pos:position pos:line="22" pos:column="22"/></name></expr>)<pos:position pos:line="22" pos:column="23"/></condition><then pos:line="22" pos:column="23"> <block pos:line="22" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">memset<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><operator pos:line="23" pos:column="24">&amp;<pos:position pos:line="23" pos:column="29"/></operator><name><name pos:line="23" pos:column="25">sha1_stat<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">stat<pos:position pos:line="23" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="42">0<pos:position pos:line="23" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="45">sizeof<argument_list pos:line="23" pos:column="51">(<argument><expr><name><name pos:line="23" pos:column="52">sha1_stat<pos:position pos:line="23" pos:column="61"/></name><operator pos:line="23" pos:column="61">-&gt;<pos:position pos:line="23" pos:column="66"/></operator><name pos:line="23" pos:column="63">stat<pos:position pos:line="23" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">hashcpy<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name><name pos:line="24" pos:column="25">sha1_stat<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">sha1<pos:position pos:line="24" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="42">istate<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">-&gt;<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="50">cache<pos:position pos:line="24" pos:column="55"/></name><index pos:line="24" pos:column="55">[<expr><name pos:line="24" pos:column="56">pos<pos:position pos:line="24" pos:column="59"/></name></expr>]<pos:position pos:line="24" pos:column="60"/></index></name><operator pos:line="24" pos:column="60">-&gt;<pos:position pos:line="24" pos:column="65"/></operator><name><name pos:line="24" pos:column="62">oid<pos:position pos:line="24" pos:column="65"/></name><operator pos:line="24" pos:column="65">.<pos:position pos:line="24" pos:column="66"/></operator><name pos:line="24" pos:column="66">hash<pos:position pos:line="24" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">data<pos:position pos:line="26" pos:column="20"/></name></expr>;<pos:position pos:line="26" pos:column="21"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

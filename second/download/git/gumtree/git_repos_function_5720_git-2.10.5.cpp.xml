<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5720_git-2.10.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">off_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">write_object<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">sha1file<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">f<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">object_entry<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">entry<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="3" pos:column="27">off_t<pos:position pos:line="3" pos:column="32"/></name></type> <name pos:line="3" pos:column="33">write_offset<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="46"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">long<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">limit<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">off_t<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">len<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">usable_delta<pos:position pos:line="7" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="27">to_reuse<pos:position pos:line="7" pos:column="35"/></name></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">pack_to_stdout<pos:position pos:line="9" pos:column="28"/></name></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">crc32_begin<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">f<pos:position pos:line="10" pos:column="30"/></name></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="12" pos:column="9">/* apply size limit if limited packsize and not first object */</comment>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">pack_size_limit<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">||<pos:position pos:line="13" pos:column="32"/></operator> <operator pos:line="13" pos:column="33">!<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">nr_written<pos:position pos:line="13" pos:column="44"/></name></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">limit<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <literal type="number" pos:line="14" pos:column="25">0<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt></block></then>
	<elseif pos:line="15" pos:column="9">else <if pos:line="15" pos:column="14">if <condition pos:line="15" pos:column="17">(<expr><name pos:line="15" pos:column="18">pack_size_limit<pos:position pos:line="15" pos:column="33"/></name> <operator pos:line="15" pos:column="34">&lt;=<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="37">write_offset<pos:position pos:line="15" pos:column="49"/></name></expr>)<pos:position pos:line="15" pos:column="50"/></condition><then pos:line="15" pos:column="50">
		<comment type="block" pos:line="16" pos:column="17">/*
		 * the earlier object did not fit the limit; avoid
		 * mistaking this with unlimited (i.e. limit = 0).
		 */</comment>
		<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="17">limit<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="25">1<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt></block></then></if></elseif>
	<else pos:line="21" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="17">limit<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">pack_size_limit<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">-<pos:position pos:line="22" pos:column="42"/></operator> <name pos:line="22" pos:column="43">write_offset<pos:position pos:line="22" pos:column="55"/></name></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt></block></else></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name><name pos:line="24" pos:column="14">entry<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">delta<pos:position pos:line="24" pos:column="26"/></name></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="17">usable_delta<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">=<pos:position pos:line="25" pos:column="31"/></operator> <literal type="number" pos:line="25" pos:column="32">0<pos:position pos:line="25" pos:column="33"/></literal></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt></block></then>	<comment type="block" pos:line="25" pos:column="41">/* no delta */</comment>
	<elseif pos:line="26" pos:column="9">else <if pos:line="26" pos:column="14">if <condition pos:line="26" pos:column="17">(<expr><operator pos:line="26" pos:column="18">!<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">pack_size_limit<pos:position pos:line="26" pos:column="34"/></name></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35">
	       <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="16">usable_delta<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <literal type="number" pos:line="27" pos:column="31">1<pos:position pos:line="27" pos:column="32"/></literal></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt></block></then></if></elseif>	<comment type="block" pos:line="27" pos:column="41">/* unlimited packfile */</comment>
	<elseif pos:line="28" pos:column="9">else <if pos:line="28" pos:column="14">if <condition pos:line="28" pos:column="17">(<expr><name><name pos:line="28" pos:column="18">entry<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">delta<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">idx<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">.<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="36">offset<pos:position pos:line="28" pos:column="42"/></name></name> <operator pos:line="28" pos:column="43">==<pos:position pos:line="28" pos:column="45"/></operator> <operator pos:line="28" pos:column="46">(<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="47">off_t<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">)<pos:position pos:line="28" pos:column="53"/></operator><operator pos:line="28" pos:column="53">-<pos:position pos:line="28" pos:column="54"/></operator><literal type="number" pos:line="28" pos:column="54">1<pos:position pos:line="28" pos:column="55"/></literal></expr>)<pos:position pos:line="28" pos:column="56"/></condition><then pos:line="28" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="17">usable_delta<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <literal type="number" pos:line="29" pos:column="32">0<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt></block></then></if></elseif>	<comment type="block" pos:line="29" pos:column="41">/* base was written to another pack */</comment>
	<elseif pos:line="30" pos:column="9">else <if pos:line="30" pos:column="14">if <condition pos:line="30" pos:column="17">(<expr><name><name pos:line="30" pos:column="18">entry<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">-&gt;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="25">delta<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">-&gt;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="32">idx<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">.<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="36">offset<pos:position pos:line="30" pos:column="42"/></name></name></expr>)<pos:position pos:line="30" pos:column="43"/></condition><then pos:line="30" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="17">usable_delta<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <literal type="number" pos:line="31" pos:column="32">1<pos:position pos:line="31" pos:column="33"/></literal></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt></block></then></if></elseif>	<comment type="block" pos:line="31" pos:column="41">/* base already exists in this pack */</comment>
	<else pos:line="32" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="17">usable_delta<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <literal type="number" pos:line="33" pos:column="32">0<pos:position pos:line="33" pos:column="33"/></literal></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt></block></else></if>	<comment type="block" pos:line="33" pos:column="41">/* base could end up in another pack */</comment>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">reuse_object<pos:position pos:line="35" pos:column="26"/></name></expr>)<pos:position pos:line="35" pos:column="27"/></condition><then pos:line="35" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="17">to_reuse<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">=<pos:position pos:line="36" pos:column="27"/></operator> <literal type="number" pos:line="36" pos:column="28">0<pos:position pos:line="36" pos:column="29"/></literal></expr>;<pos:position pos:line="36" pos:column="30"/></expr_stmt></block></then>	<comment type="block" pos:line="36" pos:column="33">/* explicit */</comment>
	<elseif pos:line="37" pos:column="9">else <if pos:line="37" pos:column="14">if <condition pos:line="37" pos:column="17">(<expr><operator pos:line="37" pos:column="18">!<pos:position pos:line="37" pos:column="19"/></operator><name><name pos:line="37" pos:column="19">entry<pos:position pos:line="37" pos:column="24"/></name><operator pos:line="37" pos:column="24">-&gt;<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="26">in_pack<pos:position pos:line="37" pos:column="33"/></name></name></expr>)<pos:position pos:line="37" pos:column="34"/></condition><then pos:line="37" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="17">to_reuse<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator> <literal type="number" pos:line="38" pos:column="28">0<pos:position pos:line="38" pos:column="29"/></literal></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt></block></then></if></elseif>	<comment type="block" pos:line="38" pos:column="33">/* can't reuse what we don't have */</comment>
	<elseif pos:line="39" pos:column="9">else <if pos:line="39" pos:column="14">if <condition pos:line="39" pos:column="17">(<expr><name><name pos:line="39" pos:column="18">entry<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">-&gt;<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="25">type<pos:position pos:line="39" pos:column="29"/></name></name> <operator pos:line="39" pos:column="30">==<pos:position pos:line="39" pos:column="32"/></operator> <name pos:line="39" pos:column="33">OBJ_REF_DELTA<pos:position pos:line="39" pos:column="46"/></name> <operator pos:line="39" pos:column="47">||<pos:position pos:line="39" pos:column="49"/></operator> <name><name pos:line="39" pos:column="50">entry<pos:position pos:line="39" pos:column="55"/></name><operator pos:line="39" pos:column="55">-&gt;<pos:position pos:line="39" pos:column="60"/></operator><name pos:line="39" pos:column="57">type<pos:position pos:line="39" pos:column="61"/></name></name> <operator pos:line="39" pos:column="62">==<pos:position pos:line="39" pos:column="64"/></operator> <name pos:line="39" pos:column="65">OBJ_OFS_DELTA<pos:position pos:line="39" pos:column="78"/></name></expr>)<pos:position pos:line="39" pos:column="79"/></condition><then pos:line="39" pos:column="79">
				<comment type="block" pos:line="40" pos:column="33">/* check_object() decided it for us ... */</comment>
		<block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="17">to_reuse<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="28">usable_delta<pos:position pos:line="41" pos:column="40"/></name></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt></block></then></if></elseif>
				<comment type="block" pos:line="42" pos:column="33">/* ... but pack split may override that */</comment>
	<elseif pos:line="43" pos:column="9">else <if pos:line="43" pos:column="14">if <condition pos:line="43" pos:column="17">(<expr><name><name pos:line="43" pos:column="18">entry<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">-&gt;<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="25">type<pos:position pos:line="43" pos:column="29"/></name></name> <operator pos:line="43" pos:column="30">!=<pos:position pos:line="43" pos:column="32"/></operator> <name><name pos:line="43" pos:column="33">entry<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">-&gt;<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="40">in_pack_type<pos:position pos:line="43" pos:column="52"/></name></name></expr>)<pos:position pos:line="43" pos:column="53"/></condition><then pos:line="43" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="17">to_reuse<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">=<pos:position pos:line="44" pos:column="27"/></operator> <literal type="number" pos:line="44" pos:column="28">0<pos:position pos:line="44" pos:column="29"/></literal></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt></block></then></if></elseif>	<comment type="block" pos:line="44" pos:column="33">/* pack has delta which is unusable */</comment>
	<elseif pos:line="45" pos:column="9">else <if pos:line="45" pos:column="14">if <condition pos:line="45" pos:column="17">(<expr><name><name pos:line="45" pos:column="18">entry<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">-&gt;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="25">delta<pos:position pos:line="45" pos:column="30"/></name></name></expr>)<pos:position pos:line="45" pos:column="31"/></condition><then pos:line="45" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="17">to_reuse<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">=<pos:position pos:line="46" pos:column="27"/></operator> <literal type="number" pos:line="46" pos:column="28">0<pos:position pos:line="46" pos:column="29"/></literal></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt></block></then></if></elseif>	<comment type="block" pos:line="46" pos:column="33">/* we want to pack afresh */</comment>
	<else pos:line="47" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="17">to_reuse<pos:position pos:line="48" pos:column="25"/></name> <operator pos:line="48" pos:column="26">=<pos:position pos:line="48" pos:column="27"/></operator> <literal type="number" pos:line="48" pos:column="28">1<pos:position pos:line="48" pos:column="29"/></literal></expr>;<pos:position pos:line="48" pos:column="30"/></expr_stmt></block></else></if>	<comment type="block" pos:line="48" pos:column="33">/* we have it in-pack undeltified,
				 * and we do not need to deltify it.
				 */</comment>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><operator pos:line="52" pos:column="13">!<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">to_reuse<pos:position pos:line="52" pos:column="22"/></name></expr>)<pos:position pos:line="52" pos:column="23"/></condition><then pos:line="52" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="17">len<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator> <call><name pos:line="53" pos:column="23">write_no_reuse_object<pos:position pos:line="53" pos:column="44"/></name><argument_list pos:line="53" pos:column="44">(<argument><expr><name pos:line="53" pos:column="45">f<pos:position pos:line="53" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="48">entry<pos:position pos:line="53" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="55">limit<pos:position pos:line="53" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="62">usable_delta<pos:position pos:line="53" pos:column="74"/></name></expr></argument>)<pos:position pos:line="53" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="76"/></expr_stmt></block></then>
	<else pos:line="54" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="17">len<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <call><name pos:line="55" pos:column="23">write_reuse_object<pos:position pos:line="55" pos:column="41"/></name><argument_list pos:line="55" pos:column="41">(<argument><expr><name pos:line="55" pos:column="42">f<pos:position pos:line="55" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="45">entry<pos:position pos:line="55" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="52">limit<pos:position pos:line="55" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="59">usable_delta<pos:position pos:line="55" pos:column="71"/></name></expr></argument>)<pos:position pos:line="55" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="73"/></expr_stmt></block></else></if>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">!<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">len<pos:position pos:line="56" pos:column="17"/></name></expr>)<pos:position pos:line="56" pos:column="18"/></condition><then pos:line="56" pos:column="18">
		<block type="pseudo"><return pos:line="57" pos:column="17">return <expr><literal type="number" pos:line="57" pos:column="24">0<pos:position pos:line="57" pos:column="25"/></literal></expr>;<pos:position pos:line="57" pos:column="26"/></return></block></then></if>

	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">usable_delta<pos:position pos:line="59" pos:column="25"/></name></expr>)<pos:position pos:line="59" pos:column="26"/></condition><then pos:line="59" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="17">written_delta<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">++<pos:position pos:line="60" pos:column="32"/></operator></expr>;<pos:position pos:line="60" pos:column="33"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="61" pos:column="9">written<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">++<pos:position pos:line="61" pos:column="18"/></operator></expr>;<pos:position pos:line="61" pos:column="19"/></expr_stmt>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">!<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="14">pack_to_stdout<pos:position pos:line="62" pos:column="28"/></name></expr>)<pos:position pos:line="62" pos:column="29"/></condition><then pos:line="62" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="17">entry<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">-&gt;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="24">idx<pos:position pos:line="63" pos:column="27"/></name><operator pos:line="63" pos:column="27">.<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="28">crc32<pos:position pos:line="63" pos:column="33"/></name></name> <operator pos:line="63" pos:column="34">=<pos:position pos:line="63" pos:column="35"/></operator> <call><name pos:line="63" pos:column="36">crc32_end<pos:position pos:line="63" pos:column="45"/></name><argument_list pos:line="63" pos:column="45">(<argument><expr><name pos:line="63" pos:column="46">f<pos:position pos:line="63" pos:column="47"/></name></expr></argument>)<pos:position pos:line="63" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="49"/></expr_stmt></block></then></if>
	<return pos:line="64" pos:column="9">return <expr><name pos:line="64" pos:column="16">len<pos:position pos:line="64" pos:column="19"/></name></expr>;<pos:position pos:line="64" pos:column="20"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3342_git-2.6.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">enum<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">interesting<pos:position pos:line="1" pos:column="24"/></name></name></type> <name pos:line="1" pos:column="25">do_match<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name><name pos:line="1" pos:column="40">struct<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">name_entry<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">entry<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
				 <parameter><decl><type><name><name pos:line="2" pos:column="34">struct<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">strbuf<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">base<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">int<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">base_offset<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="3" pos:column="34">const<pos:position pos:line="3" pos:column="39"/></specifier> <name><name pos:line="3" pos:column="40">struct<pos:position pos:line="3" pos:column="46"/></name> <name pos:line="3" pos:column="47">pathspec<pos:position pos:line="3" pos:column="55"/></name></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">ps<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="4" pos:column="34">int<pos:position pos:line="4" pos:column="37"/></name></type> <name pos:line="4" pos:column="38">exclude<pos:position pos:line="4" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="46"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">pathlen<pos:position pos:line="7" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="22">baselen<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><name><name pos:line="7" pos:column="32">base<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">len<pos:position pos:line="7" pos:column="41"/></name></name> <operator pos:line="7" pos:column="42">-<pos:position pos:line="7" pos:column="43"/></operator> <name pos:line="7" pos:column="44">base_offset<pos:position pos:line="7" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">enum<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">interesting<pos:position pos:line="8" pos:column="25"/></name></name></type> <name pos:line="8" pos:column="26">never_interesting<pos:position pos:line="8" pos:column="43"/></name> <init pos:line="8" pos:column="44">= <expr><ternary><condition><expr><name><name pos:line="8" pos:column="46">ps<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">has_wildcard<pos:position pos:line="8" pos:column="62"/></name></name></expr> ?<pos:position pos:line="8" pos:column="64"/></condition><then pos:line="8" pos:column="64">
		<expr><name pos:line="9" pos:column="17">entry_not_interesting<pos:position pos:line="9" pos:column="38"/></name></expr> <pos:position pos:line="9" pos:column="39"/></then><else pos:line="9" pos:column="39">: <expr><name pos:line="9" pos:column="41">all_entries_not_interesting<pos:position pos:line="9" pos:column="68"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="9" pos:column="69"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">GUARD_PATHSPEC<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">ps<pos:position pos:line="11" pos:column="26"/></name></expr></argument>,
		       <argument><expr><name pos:line="12" pos:column="24">PATHSPEC_FROMTOP<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">|<pos:position pos:line="12" pos:column="42"/></operator>
		       <name pos:line="13" pos:column="24">PATHSPEC_MAXDEPTH<pos:position pos:line="13" pos:column="41"/></name> <operator pos:line="13" pos:column="42">|<pos:position pos:line="13" pos:column="43"/></operator>
		       <name pos:line="14" pos:column="24">PATHSPEC_LITERAL<pos:position pos:line="14" pos:column="40"/></name> <operator pos:line="14" pos:column="41">|<pos:position pos:line="14" pos:column="42"/></operator>
		       <name pos:line="15" pos:column="24">PATHSPEC_GLOB<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">|<pos:position pos:line="15" pos:column="39"/></operator>
		       <name pos:line="16" pos:column="24">PATHSPEC_ICASE<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">|<pos:position pos:line="16" pos:column="40"/></operator>
		       <name pos:line="17" pos:column="24">PATHSPEC_EXCLUDE<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name><name pos:line="19" pos:column="14">ps<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">nr<pos:position pos:line="19" pos:column="20"/></name></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21"> <block pos:line="19" pos:column="22">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name><name pos:line="20" pos:column="22">ps<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">-&gt;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="26">recursive<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">||<pos:position pos:line="20" pos:column="38"/></operator>
		    <operator pos:line="21" pos:column="21">!<pos:position pos:line="21" pos:column="22"/></operator><operator pos:line="21" pos:column="22">(<pos:position pos:line="21" pos:column="23"/></operator><name><name pos:line="21" pos:column="23">ps<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">magic<pos:position pos:line="21" pos:column="32"/></name></name> <operator pos:line="21" pos:column="33">&amp;<pos:position pos:line="21" pos:column="38"/></operator> <name pos:line="21" pos:column="35">PATHSPEC_MAXDEPTH<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">)<pos:position pos:line="21" pos:column="53"/></operator> <operator pos:line="21" pos:column="54">||<pos:position pos:line="21" pos:column="56"/></operator>
		    <name><name pos:line="22" pos:column="21">ps<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">max_depth<pos:position pos:line="22" pos:column="34"/></name></name> <operator pos:line="22" pos:column="35">==<pos:position pos:line="22" pos:column="37"/></operator> <operator pos:line="22" pos:column="38">-<pos:position pos:line="22" pos:column="39"/></operator><literal type="number" pos:line="22" pos:column="39">1<pos:position pos:line="22" pos:column="40"/></literal></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41">
			<block type="pseudo"><return pos:line="23" pos:column="25">return <expr><name pos:line="23" pos:column="32">all_entries_interesting<pos:position pos:line="23" pos:column="55"/></name></expr>;<pos:position pos:line="23" pos:column="56"/></return></block></then></if>
		<return pos:line="24" pos:column="17">return <expr><ternary><condition><expr><call><name pos:line="24" pos:column="24">within_depth<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><name><name pos:line="24" pos:column="37">base<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">-&gt;<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="43">buf<pos:position pos:line="24" pos:column="46"/></name></name> <operator pos:line="24" pos:column="47">+<pos:position pos:line="24" pos:column="48"/></operator> <name pos:line="24" pos:column="49">base_offset<pos:position pos:line="24" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="62">baselen<pos:position pos:line="24" pos:column="69"/></name></expr></argument>,
				    <argument><expr><operator pos:line="25" pos:column="37">!<pos:position pos:line="25" pos:column="38"/></operator><operator pos:line="25" pos:column="38">!<pos:position pos:line="25" pos:column="39"/></operator><call><name pos:line="25" pos:column="39">S_ISDIR<pos:position pos:line="25" pos:column="46"/></name><argument_list pos:line="25" pos:column="46">(<argument><expr><name><name pos:line="25" pos:column="47">entry<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">-&gt;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="54">mode<pos:position pos:line="25" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr></argument>,
				    <argument><expr><name><name pos:line="26" pos:column="37">ps<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">-&gt;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="41">max_depth<pos:position pos:line="26" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr> ?<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53">
			<expr><name pos:line="27" pos:column="25">entry_interesting<pos:position pos:line="27" pos:column="42"/></name></expr> <pos:position pos:line="27" pos:column="43"/></then><else pos:line="27" pos:column="43">: <expr><name pos:line="27" pos:column="45">entry_not_interesting<pos:position pos:line="27" pos:column="66"/></name></expr></else></ternary></expr>;<pos:position pos:line="27" pos:column="67"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="30" pos:column="9">pathlen<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <call><name pos:line="30" pos:column="19">tree_entry_len<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">entry<pos:position pos:line="30" pos:column="39"/></name></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>

	<for pos:line="32" pos:column="9">for <control pos:line="32" pos:column="13">(<init><expr><name pos:line="32" pos:column="14">i<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name><name pos:line="32" pos:column="18">ps<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">nr<pos:position pos:line="32" pos:column="24"/></name></name> <operator pos:line="32" pos:column="25">-<pos:position pos:line="32" pos:column="26"/></operator> <literal type="number" pos:line="32" pos:column="27">1<pos:position pos:line="32" pos:column="28"/></literal></expr>;<pos:position pos:line="32" pos:column="29"/></init> <condition><expr><name pos:line="32" pos:column="30">i<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">&gt;=<pos:position pos:line="32" pos:column="37"/></operator> <literal type="number" pos:line="32" pos:column="35">0<pos:position pos:line="32" pos:column="36"/></literal></expr>;<pos:position pos:line="32" pos:column="37"/></condition> <incr><expr><name pos:line="32" pos:column="38">i<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">--<pos:position pos:line="32" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="42"/></control> <block pos:line="32" pos:column="43">{
		<decl_stmt><decl><type><specifier pos:line="33" pos:column="17">const<pos:position pos:line="33" pos:column="22"/></specifier> <name><name pos:line="33" pos:column="23">struct<pos:position pos:line="33" pos:column="29"/></name> <name pos:line="33" pos:column="30">pathspec_item<pos:position pos:line="33" pos:column="43"/></name></name> <modifier pos:line="33" pos:column="44">*<pos:position pos:line="33" pos:column="45"/></modifier></type><name pos:line="33" pos:column="45">item<pos:position pos:line="33" pos:column="49"/></name> <init pos:line="33" pos:column="50">= <expr><name><name pos:line="33" pos:column="52">ps<pos:position pos:line="33" pos:column="54"/></name><operator pos:line="33" pos:column="54">-&gt;<pos:position pos:line="33" pos:column="59"/></operator><name pos:line="33" pos:column="56">items<pos:position pos:line="33" pos:column="61"/></name></name><operator pos:line="33" pos:column="61">+<pos:position pos:line="33" pos:column="62"/></operator><name pos:line="33" pos:column="62">i<pos:position pos:line="33" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="64"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="34" pos:column="17">const<pos:position pos:line="34" pos:column="22"/></specifier> <name pos:line="34" pos:column="23">char<pos:position pos:line="34" pos:column="27"/></name> <modifier pos:line="34" pos:column="28">*<pos:position pos:line="34" pos:column="29"/></modifier></type><name pos:line="34" pos:column="29">match<pos:position pos:line="34" pos:column="34"/></name> <init pos:line="34" pos:column="35">= <expr><name><name pos:line="34" pos:column="37">item<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">-&gt;<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="43">match<pos:position pos:line="34" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="34" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="35" pos:column="17">const<pos:position pos:line="35" pos:column="22"/></specifier> <name pos:line="35" pos:column="23">char<pos:position pos:line="35" pos:column="27"/></name> <modifier pos:line="35" pos:column="28">*<pos:position pos:line="35" pos:column="29"/></modifier></type><name pos:line="35" pos:column="29">base_str<pos:position pos:line="35" pos:column="37"/></name> <init pos:line="35" pos:column="38">= <expr><name><name pos:line="35" pos:column="40">base<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">-&gt;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="46">buf<pos:position pos:line="35" pos:column="49"/></name></name> <operator pos:line="35" pos:column="50">+<pos:position pos:line="35" pos:column="51"/></operator> <name pos:line="35" pos:column="52">base_offset<pos:position pos:line="35" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="35" pos:column="64"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">int<pos:position pos:line="36" pos:column="20"/></name></type> <name pos:line="36" pos:column="21">matchlen<pos:position pos:line="36" pos:column="29"/></name> <init pos:line="36" pos:column="30">= <expr><name><name pos:line="36" pos:column="32">item<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">-&gt;<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="38">len<pos:position pos:line="36" pos:column="41"/></name></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="36" pos:column="43">matched<pos:position pos:line="36" pos:column="50"/></name> <init pos:line="36" pos:column="51">= <expr><literal type="number" pos:line="36" pos:column="53">0<pos:position pos:line="36" pos:column="54"/></literal></expr></init></decl>;<pos:position pos:line="36" pos:column="55"/></decl_stmt>

		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">(<pos:position pos:line="38" pos:column="22"/></operator><operator pos:line="38" pos:column="22">!<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="23">exclude<pos:position pos:line="38" pos:column="30"/></name> <operator pos:line="38" pos:column="31">&amp;&amp;<pos:position pos:line="38" pos:column="41"/></operator>   <name><name pos:line="38" pos:column="36">item<pos:position pos:line="38" pos:column="40"/></name><operator pos:line="38" pos:column="40">-&gt;<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="42">magic<pos:position pos:line="38" pos:column="47"/></name></name> <operator pos:line="38" pos:column="48">&amp;<pos:position pos:line="38" pos:column="53"/></operator> <name pos:line="38" pos:column="50">PATHSPEC_EXCLUDE<pos:position pos:line="38" pos:column="66"/></name><operator pos:line="38" pos:column="66">)<pos:position pos:line="38" pos:column="67"/></operator> <operator pos:line="38" pos:column="68">||<pos:position pos:line="38" pos:column="70"/></operator>
		    <operator pos:line="39" pos:column="21">(<pos:position pos:line="39" pos:column="22"/></operator> <name pos:line="39" pos:column="23">exclude<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">&amp;&amp;<pos:position pos:line="39" pos:column="41"/></operator> <operator pos:line="39" pos:column="34">!<pos:position pos:line="39" pos:column="35"/></operator><operator pos:line="39" pos:column="35">(<pos:position pos:line="39" pos:column="36"/></operator><name><name pos:line="39" pos:column="36">item<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">-&gt;<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="42">magic<pos:position pos:line="39" pos:column="47"/></name></name> <operator pos:line="39" pos:column="48">&amp;<pos:position pos:line="39" pos:column="53"/></operator> <name pos:line="39" pos:column="50">PATHSPEC_EXCLUDE<pos:position pos:line="39" pos:column="66"/></name><operator pos:line="39" pos:column="66">)<pos:position pos:line="39" pos:column="67"/></operator><operator pos:line="39" pos:column="67">)<pos:position pos:line="39" pos:column="68"/></operator></expr>)<pos:position pos:line="39" pos:column="69"/></condition><then pos:line="39" pos:column="69">
			<block type="pseudo"><continue pos:line="40" pos:column="25">continue;<pos:position pos:line="40" pos:column="34"/></continue></block></then></if>

		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">baselen<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">&gt;=<pos:position pos:line="42" pos:column="34"/></operator> <name pos:line="42" pos:column="32">matchlen<pos:position pos:line="42" pos:column="40"/></name></expr>)<pos:position pos:line="42" pos:column="41"/></condition><then pos:line="42" pos:column="41"> <block pos:line="42" pos:column="42">{
			<comment type="block" pos:line="43" pos:column="25">/* If it doesn't match, move along... */</comment>
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><operator pos:line="44" pos:column="29">!<pos:position pos:line="44" pos:column="30"/></operator><call><name pos:line="44" pos:column="30">match_dir_prefix<pos:position pos:line="44" pos:column="46"/></name><argument_list pos:line="44" pos:column="46">(<argument><expr><name pos:line="44" pos:column="47">item<pos:position pos:line="44" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="53">base_str<pos:position pos:line="44" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="63">match<pos:position pos:line="44" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="70">matchlen<pos:position pos:line="44" pos:column="78"/></name></expr></argument>)<pos:position pos:line="44" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="80"/></condition><then pos:line="44" pos:column="80">
				<block type="pseudo"><goto pos:line="45" pos:column="33">goto <name pos:line="45" pos:column="38">match_wildcards<pos:position pos:line="45" pos:column="53"/></name>;<pos:position pos:line="45" pos:column="54"/></goto></block></then></if>

			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><operator pos:line="47" pos:column="29">!<pos:position pos:line="47" pos:column="30"/></operator><name><name pos:line="47" pos:column="30">ps<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">recursive<pos:position pos:line="47" pos:column="43"/></name></name> <operator pos:line="47" pos:column="44">||<pos:position pos:line="47" pos:column="46"/></operator>
			    <operator pos:line="48" pos:column="29">!<pos:position pos:line="48" pos:column="30"/></operator><operator pos:line="48" pos:column="30">(<pos:position pos:line="48" pos:column="31"/></operator><name><name pos:line="48" pos:column="31">ps<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">-&gt;<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="35">magic<pos:position pos:line="48" pos:column="40"/></name></name> <operator pos:line="48" pos:column="41">&amp;<pos:position pos:line="48" pos:column="46"/></operator> <name pos:line="48" pos:column="43">PATHSPEC_MAXDEPTH<pos:position pos:line="48" pos:column="60"/></name><operator pos:line="48" pos:column="60">)<pos:position pos:line="48" pos:column="61"/></operator> <operator pos:line="48" pos:column="62">||<pos:position pos:line="48" pos:column="64"/></operator>
			    <name><name pos:line="49" pos:column="29">ps<pos:position pos:line="49" pos:column="31"/></name><operator pos:line="49" pos:column="31">-&gt;<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="33">max_depth<pos:position pos:line="49" pos:column="42"/></name></name> <operator pos:line="49" pos:column="43">==<pos:position pos:line="49" pos:column="45"/></operator> <operator pos:line="49" pos:column="46">-<pos:position pos:line="49" pos:column="47"/></operator><literal type="number" pos:line="49" pos:column="47">1<pos:position pos:line="49" pos:column="48"/></literal></expr>)<pos:position pos:line="49" pos:column="49"/></condition><then pos:line="49" pos:column="49">
				<block type="pseudo"><return pos:line="50" pos:column="33">return <expr><name pos:line="50" pos:column="40">all_entries_interesting<pos:position pos:line="50" pos:column="63"/></name></expr>;<pos:position pos:line="50" pos:column="64"/></return></block></then></if>

			<return pos:line="52" pos:column="25">return <expr><ternary><condition><expr><call><name pos:line="52" pos:column="32">within_depth<pos:position pos:line="52" pos:column="44"/></name><argument_list pos:line="52" pos:column="44">(<argument><expr><name pos:line="52" pos:column="45">base_str<pos:position pos:line="52" pos:column="53"/></name> <operator pos:line="52" pos:column="54">+<pos:position pos:line="52" pos:column="55"/></operator> <name pos:line="52" pos:column="56">matchlen<pos:position pos:line="52" pos:column="64"/></name> <operator pos:line="52" pos:column="65">+<pos:position pos:line="52" pos:column="66"/></operator> <literal type="number" pos:line="52" pos:column="67">1<pos:position pos:line="52" pos:column="68"/></literal></expr></argument>,
					    <argument><expr><name pos:line="53" pos:column="45">baselen<pos:position pos:line="53" pos:column="52"/></name> <operator pos:line="53" pos:column="53">-<pos:position pos:line="53" pos:column="54"/></operator> <name pos:line="53" pos:column="55">matchlen<pos:position pos:line="53" pos:column="63"/></name> <operator pos:line="53" pos:column="64">-<pos:position pos:line="53" pos:column="65"/></operator> <literal type="number" pos:line="53" pos:column="66">1<pos:position pos:line="53" pos:column="67"/></literal></expr></argument>,
					    <argument><expr><operator pos:line="54" pos:column="45">!<pos:position pos:line="54" pos:column="46"/></operator><operator pos:line="54" pos:column="46">!<pos:position pos:line="54" pos:column="47"/></operator><call><name pos:line="54" pos:column="47">S_ISDIR<pos:position pos:line="54" pos:column="54"/></name><argument_list pos:line="54" pos:column="54">(<argument><expr><name><name pos:line="54" pos:column="55">entry<pos:position pos:line="54" pos:column="60"/></name><operator pos:line="54" pos:column="60">-&gt;<pos:position pos:line="54" pos:column="65"/></operator><name pos:line="54" pos:column="62">mode<pos:position pos:line="54" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="67"/></argument_list></call></expr></argument>,
					    <argument><expr><name><name pos:line="55" pos:column="45">ps<pos:position pos:line="55" pos:column="47"/></name><operator pos:line="55" pos:column="47">-&gt;<pos:position pos:line="55" pos:column="52"/></operator><name pos:line="55" pos:column="49">max_depth<pos:position pos:line="55" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="59"/></argument_list></call></expr> ?<pos:position pos:line="55" pos:column="61"/></condition><then pos:line="55" pos:column="61">
				<expr><name pos:line="56" pos:column="33">entry_interesting<pos:position pos:line="56" pos:column="50"/></name></expr> <pos:position pos:line="56" pos:column="51"/></then><else pos:line="56" pos:column="51">: <expr><name pos:line="56" pos:column="53">entry_not_interesting<pos:position pos:line="56" pos:column="74"/></name></expr></else></ternary></expr>;<pos:position pos:line="56" pos:column="75"/></return>
		}<pos:position pos:line="57" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="59" pos:column="17">/* Either there must be no base, or the base must match. */</comment>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">baselen<pos:position pos:line="60" pos:column="28"/></name> <operator pos:line="60" pos:column="29">==<pos:position pos:line="60" pos:column="31"/></operator> <literal type="number" pos:line="60" pos:column="32">0<pos:position pos:line="60" pos:column="33"/></literal> <operator pos:line="60" pos:column="34">||<pos:position pos:line="60" pos:column="36"/></operator> <operator pos:line="60" pos:column="37">!<pos:position pos:line="60" pos:column="38"/></operator><call><name pos:line="60" pos:column="38">basecmp<pos:position pos:line="60" pos:column="45"/></name><argument_list pos:line="60" pos:column="45">(<argument><expr><name pos:line="60" pos:column="46">item<pos:position pos:line="60" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="52">base_str<pos:position pos:line="60" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="62">match<pos:position pos:line="60" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="69">baselen<pos:position pos:line="60" pos:column="76"/></name></expr></argument>)<pos:position pos:line="60" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="78"/></condition><then pos:line="60" pos:column="78"> <block pos:line="60" pos:column="79">{
			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><call><name pos:line="61" pos:column="29">match_entry<pos:position pos:line="61" pos:column="40"/></name><argument_list pos:line="61" pos:column="40">(<argument><expr><name pos:line="61" pos:column="41">item<pos:position pos:line="61" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="47">entry<pos:position pos:line="61" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="54">pathlen<pos:position pos:line="61" pos:column="61"/></name></expr></argument>,
					<argument><expr><name pos:line="62" pos:column="41">match<pos:position pos:line="62" pos:column="46"/></name> <operator pos:line="62" pos:column="47">+<pos:position pos:line="62" pos:column="48"/></operator> <name pos:line="62" pos:column="49">baselen<pos:position pos:line="62" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="58">matchlen<pos:position pos:line="62" pos:column="66"/></name> <operator pos:line="62" pos:column="67">-<pos:position pos:line="62" pos:column="68"/></operator> <name pos:line="62" pos:column="69">baselen<pos:position pos:line="62" pos:column="76"/></name></expr></argument>,
					<argument><expr><operator pos:line="63" pos:column="41">&amp;<pos:position pos:line="63" pos:column="46"/></operator><name pos:line="63" pos:column="42">never_interesting<pos:position pos:line="63" pos:column="59"/></name></expr></argument>)<pos:position pos:line="63" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="61"/></condition><then pos:line="63" pos:column="61">
				<block type="pseudo"><return pos:line="64" pos:column="33">return <expr><name pos:line="64" pos:column="40">entry_interesting<pos:position pos:line="64" pos:column="57"/></name></expr>;<pos:position pos:line="64" pos:column="58"/></return></block></then></if>

			<if pos:line="66" pos:column="25">if <condition pos:line="66" pos:column="28">(<expr><name><name pos:line="66" pos:column="29">item<pos:position pos:line="66" pos:column="33"/></name><operator pos:line="66" pos:column="33">-&gt;<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="35">nowildcard_len<pos:position pos:line="66" pos:column="49"/></name></name> <operator pos:line="66" pos:column="50">&lt;<pos:position pos:line="66" pos:column="54"/></operator> <name><name pos:line="66" pos:column="52">item<pos:position pos:line="66" pos:column="56"/></name><operator pos:line="66" pos:column="56">-&gt;<pos:position pos:line="66" pos:column="61"/></operator><name pos:line="66" pos:column="58">len<pos:position pos:line="66" pos:column="61"/></name></name></expr>)<pos:position pos:line="66" pos:column="62"/></condition><then pos:line="66" pos:column="62"> <block pos:line="66" pos:column="63">{
				<if pos:line="67" pos:column="33">if <condition pos:line="67" pos:column="36">(<expr><operator pos:line="67" pos:column="37">!<pos:position pos:line="67" pos:column="38"/></operator><call><name pos:line="67" pos:column="38">git_fnmatch<pos:position pos:line="67" pos:column="49"/></name><argument_list pos:line="67" pos:column="49">(<argument><expr><name pos:line="67" pos:column="50">item<pos:position pos:line="67" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="56">match<pos:position pos:line="67" pos:column="61"/></name> <operator pos:line="67" pos:column="62">+<pos:position pos:line="67" pos:column="63"/></operator> <name pos:line="67" pos:column="64">baselen<pos:position pos:line="67" pos:column="71"/></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="73">entry<pos:position pos:line="67" pos:column="78"/></name><operator pos:line="67" pos:column="78">-&gt;<pos:position pos:line="67" pos:column="83"/></operator><name pos:line="67" pos:column="80">path<pos:position pos:line="67" pos:column="84"/></name></name></expr></argument>,
						 <argument><expr><name><name pos:line="68" pos:column="50">item<pos:position pos:line="68" pos:column="54"/></name><operator pos:line="68" pos:column="54">-&gt;<pos:position pos:line="68" pos:column="59"/></operator><name pos:line="68" pos:column="56">nowildcard_len<pos:position pos:line="68" pos:column="70"/></name></name> <operator pos:line="68" pos:column="71">-<pos:position pos:line="68" pos:column="72"/></operator> <name pos:line="68" pos:column="73">baselen<pos:position pos:line="68" pos:column="80"/></name></expr></argument>)<pos:position pos:line="68" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="82"/></condition><then pos:line="68" pos:column="82">
					<block type="pseudo"><return pos:line="69" pos:column="41">return <expr><name pos:line="69" pos:column="48">entry_interesting<pos:position pos:line="69" pos:column="65"/></name></expr>;<pos:position pos:line="69" pos:column="66"/></return></block></then></if>

				<comment type="block" pos:line="71" pos:column="33">/*
				 * Match all directories. We'll try to
				 * match files later on.
				 */</comment>
				<if pos:line="75" pos:column="33">if <condition pos:line="75" pos:column="36">(<expr><name><name pos:line="75" pos:column="37">ps<pos:position pos:line="75" pos:column="39"/></name><operator pos:line="75" pos:column="39">-&gt;<pos:position pos:line="75" pos:column="44"/></operator><name pos:line="75" pos:column="41">recursive<pos:position pos:line="75" pos:column="50"/></name></name> <operator pos:line="75" pos:column="51">&amp;&amp;<pos:position pos:line="75" pos:column="61"/></operator> <call><name pos:line="75" pos:column="54">S_ISDIR<pos:position pos:line="75" pos:column="61"/></name><argument_list pos:line="75" pos:column="61">(<argument><expr><name><name pos:line="75" pos:column="62">entry<pos:position pos:line="75" pos:column="67"/></name><operator pos:line="75" pos:column="67">-&gt;<pos:position pos:line="75" pos:column="72"/></operator><name pos:line="75" pos:column="69">mode<pos:position pos:line="75" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="75"/></condition><then pos:line="75" pos:column="75">
					<block type="pseudo"><return pos:line="76" pos:column="41">return <expr><name pos:line="76" pos:column="48">entry_interesting<pos:position pos:line="76" pos:column="65"/></name></expr>;<pos:position pos:line="76" pos:column="66"/></return></block></then></if>
			}<pos:position pos:line="77" pos:column="26"/></block></then></if>

			<continue pos:line="79" pos:column="25">continue;<pos:position pos:line="79" pos:column="34"/></continue>
		}<pos:position pos:line="80" pos:column="18"/></block></then></if>

<label><name pos:line="82" pos:column="1">match_wildcards<pos:position pos:line="82" pos:column="16"/></name>:<pos:position pos:line="82" pos:column="17"/></label>
		<if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><name><name pos:line="83" pos:column="21">item<pos:position pos:line="83" pos:column="25"/></name><operator pos:line="83" pos:column="25">-&gt;<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="27">nowildcard_len<pos:position pos:line="83" pos:column="41"/></name></name> <operator pos:line="83" pos:column="42">==<pos:position pos:line="83" pos:column="44"/></operator> <name><name pos:line="83" pos:column="45">item<pos:position pos:line="83" pos:column="49"/></name><operator pos:line="83" pos:column="49">-&gt;<pos:position pos:line="83" pos:column="54"/></operator><name pos:line="83" pos:column="51">len<pos:position pos:line="83" pos:column="54"/></name></name></expr>)<pos:position pos:line="83" pos:column="55"/></condition><then pos:line="83" pos:column="55">
			<block type="pseudo"><continue pos:line="84" pos:column="25">continue;<pos:position pos:line="84" pos:column="34"/></continue></block></then></if>

		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name><name pos:line="86" pos:column="21">item<pos:position pos:line="86" pos:column="25"/></name><operator pos:line="86" pos:column="25">-&gt;<pos:position pos:line="86" pos:column="30"/></operator><name pos:line="86" pos:column="27">nowildcard_len<pos:position pos:line="86" pos:column="41"/></name></name> <operator pos:line="86" pos:column="42">&amp;&amp;<pos:position pos:line="86" pos:column="52"/></operator>
		    <operator pos:line="87" pos:column="21">!<pos:position pos:line="87" pos:column="22"/></operator><call><name pos:line="87" pos:column="22">match_wildcard_base<pos:position pos:line="87" pos:column="41"/></name><argument_list pos:line="87" pos:column="41">(<argument><expr><name pos:line="87" pos:column="42">item<pos:position pos:line="87" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="48">base_str<pos:position pos:line="87" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="58">baselen<pos:position pos:line="87" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="67">&amp;<pos:position pos:line="87" pos:column="72"/></operator><name pos:line="87" pos:column="68">matched<pos:position pos:line="87" pos:column="75"/></name></expr></argument>)<pos:position pos:line="87" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="77"/></condition><then pos:line="87" pos:column="77">
			<block type="pseudo"><continue pos:line="88" pos:column="25">continue;<pos:position pos:line="88" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="90" pos:column="17">/*
		 * Concatenate base and entry-&gt;path into one and do
		 * fnmatch() on it.
		 *
		 * While we could avoid concatenation in certain cases
		 * [1], which saves a memcpy and potentially a
		 * realloc, it turns out not worth it. Measurement on
		 * linux-2.6 does not show any clear improvements,
		 * partly because of the nowildcard_len optimization
		 * in git_fnmatch(). Avoid micro-optimizations here.
		 *
		 * [1] if match_wildcard_base() says the base
		 * directory is already matched, we only need to match
		 * the rest, which is shorter so _in theory_ faster.
		 */</comment>

		<expr_stmt><expr><call><name pos:line="106" pos:column="17">strbuf_add<pos:position pos:line="106" pos:column="27"/></name><argument_list pos:line="106" pos:column="27">(<argument><expr><name pos:line="106" pos:column="28">base<pos:position pos:line="106" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="34">entry<pos:position pos:line="106" pos:column="39"/></name><operator pos:line="106" pos:column="39">-&gt;<pos:position pos:line="106" pos:column="44"/></operator><name pos:line="106" pos:column="41">path<pos:position pos:line="106" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="47">pathlen<pos:position pos:line="106" pos:column="54"/></name></expr></argument>)<pos:position pos:line="106" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="56"/></expr_stmt>

		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><operator pos:line="108" pos:column="21">!<pos:position pos:line="108" pos:column="22"/></operator><call><name pos:line="108" pos:column="22">git_fnmatch<pos:position pos:line="108" pos:column="33"/></name><argument_list pos:line="108" pos:column="33">(<argument><expr><name pos:line="108" pos:column="34">item<pos:position pos:line="108" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="40">match<pos:position pos:line="108" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="47">base<pos:position pos:line="108" pos:column="51"/></name><operator pos:line="108" pos:column="51">-&gt;<pos:position pos:line="108" pos:column="56"/></operator><name pos:line="108" pos:column="53">buf<pos:position pos:line="108" pos:column="56"/></name></name> <operator pos:line="108" pos:column="57">+<pos:position pos:line="108" pos:column="58"/></operator> <name pos:line="108" pos:column="59">base_offset<pos:position pos:line="108" pos:column="70"/></name></expr></argument>,
				 <argument><expr><name><name pos:line="109" pos:column="34">item<pos:position pos:line="109" pos:column="38"/></name><operator pos:line="109" pos:column="38">-&gt;<pos:position pos:line="109" pos:column="43"/></operator><name pos:line="109" pos:column="40">nowildcard_len<pos:position pos:line="109" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="56"/></condition><then pos:line="109" pos:column="56"> <block pos:line="109" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="110" pos:column="25">strbuf_setlen<pos:position pos:line="110" pos:column="38"/></name><argument_list pos:line="110" pos:column="38">(<argument><expr><name pos:line="110" pos:column="39">base<pos:position pos:line="110" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="45">base_offset<pos:position pos:line="110" pos:column="56"/></name> <operator pos:line="110" pos:column="57">+<pos:position pos:line="110" pos:column="58"/></operator> <name pos:line="110" pos:column="59">baselen<pos:position pos:line="110" pos:column="66"/></name></expr></argument>)<pos:position pos:line="110" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="68"/></expr_stmt>
			<return pos:line="111" pos:column="25">return <expr><name pos:line="111" pos:column="32">entry_interesting<pos:position pos:line="111" pos:column="49"/></name></expr>;<pos:position pos:line="111" pos:column="50"/></return>
		}<pos:position pos:line="112" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="113" pos:column="17">strbuf_setlen<pos:position pos:line="113" pos:column="30"/></name><argument_list pos:line="113" pos:column="30">(<argument><expr><name pos:line="113" pos:column="31">base<pos:position pos:line="113" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="37">base_offset<pos:position pos:line="113" pos:column="48"/></name> <operator pos:line="113" pos:column="49">+<pos:position pos:line="113" pos:column="50"/></operator> <name pos:line="113" pos:column="51">baselen<pos:position pos:line="113" pos:column="58"/></name></expr></argument>)<pos:position pos:line="113" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="60"/></expr_stmt>

		<comment type="block" pos:line="115" pos:column="17">/*
		 * Match all directories. We'll try to match files
		 * later on.
		 * max_depth is ignored but we may consider support it
		 * in future, see
		 * http://thread.gmane.org/gmane.comp.version-control.git/163757/focus=163840
		 */</comment>
		<if pos:line="122" pos:column="17">if <condition pos:line="122" pos:column="20">(<expr><name><name pos:line="122" pos:column="21">ps<pos:position pos:line="122" pos:column="23"/></name><operator pos:line="122" pos:column="23">-&gt;<pos:position pos:line="122" pos:column="28"/></operator><name pos:line="122" pos:column="25">recursive<pos:position pos:line="122" pos:column="34"/></name></name> <operator pos:line="122" pos:column="35">&amp;&amp;<pos:position pos:line="122" pos:column="45"/></operator> <call><name pos:line="122" pos:column="38">S_ISDIR<pos:position pos:line="122" pos:column="45"/></name><argument_list pos:line="122" pos:column="45">(<argument><expr><name><name pos:line="122" pos:column="46">entry<pos:position pos:line="122" pos:column="51"/></name><operator pos:line="122" pos:column="51">-&gt;<pos:position pos:line="122" pos:column="56"/></operator><name pos:line="122" pos:column="53">mode<pos:position pos:line="122" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="59"/></condition><then pos:line="122" pos:column="59">
			<block type="pseudo"><return pos:line="123" pos:column="25">return <expr><name pos:line="123" pos:column="32">entry_interesting<pos:position pos:line="123" pos:column="49"/></name></expr>;<pos:position pos:line="123" pos:column="50"/></return></block></then></if>
	}<pos:position pos:line="124" pos:column="10"/></block></for>
	<return pos:line="125" pos:column="9">return <expr><name pos:line="125" pos:column="16">never_interesting<pos:position pos:line="125" pos:column="33"/></name></expr>;<pos:position pos:line="125" pos:column="34"/></return> <comment type="block" pos:line="125" pos:column="35">/* No matches */</comment>
}<pos:position pos:line="126" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1595_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">approxidate_digit<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">date<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="56">struct<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">tm<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">tm<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">int<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">num<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
				     <parameter><decl><type><name pos:line="2" pos:column="38">time_t<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">now<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">end<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">long<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">number<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><call><name pos:line="5" pos:column="32">strtoul<pos:position pos:line="5" pos:column="39"/></name><argument_list pos:line="5" pos:column="39">(<argument><expr><name pos:line="5" pos:column="40">date<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="46">&amp;<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="47">end<pos:position pos:line="5" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="52">10<pos:position pos:line="5" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>

	<switch pos:line="7" pos:column="9">switch <condition pos:line="7" pos:column="16">(<expr><operator pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">end<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition> <block pos:line="7" pos:column="23">{
	<case pos:line="8" pos:column="9">case <expr><literal type="char" pos:line="8" pos:column="14">':'<pos:position pos:line="8" pos:column="17"/></literal></expr>:<pos:position pos:line="8" pos:column="18"/></case>
	<case pos:line="9" pos:column="9">case <expr><literal type="char" pos:line="9" pos:column="14">'.'<pos:position pos:line="9" pos:column="17"/></literal></expr>:<pos:position pos:line="9" pos:column="18"/></case>
	<case pos:line="10" pos:column="9">case <expr><literal type="char" pos:line="10" pos:column="14">'/'<pos:position pos:line="10" pos:column="17"/></literal></expr>:<pos:position pos:line="10" pos:column="18"/></case>
	<case pos:line="11" pos:column="9">case <expr><literal type="char" pos:line="11" pos:column="14">'-'<pos:position pos:line="11" pos:column="17"/></literal></expr>:<pos:position pos:line="11" pos:column="18"/></case>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><call><name pos:line="12" pos:column="21">isdigit<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name><name pos:line="12" pos:column="29">end<pos:position pos:line="12" pos:column="32"/></name><index pos:line="12" pos:column="32">[<expr><literal type="number" pos:line="12" pos:column="33">1<pos:position pos:line="12" pos:column="34"/></literal></expr>]<pos:position pos:line="12" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37"> <block pos:line="12" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="13" pos:column="25">int<pos:position pos:line="13" pos:column="28"/></name></type> <name pos:line="13" pos:column="29">match<pos:position pos:line="13" pos:column="34"/></name> <init pos:line="13" pos:column="35">= <expr><call><name pos:line="13" pos:column="37">match_multi_number<pos:position pos:line="13" pos:column="55"/></name><argument_list pos:line="13" pos:column="55">(<argument><expr><name pos:line="13" pos:column="56">number<pos:position pos:line="13" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="64">*<pos:position pos:line="13" pos:column="65"/></operator><name pos:line="13" pos:column="65">end<pos:position pos:line="13" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="70">date<pos:position pos:line="13" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="76">end<pos:position pos:line="13" pos:column="79"/></name></expr></argument>,
						       <argument><expr><name pos:line="14" pos:column="56">tm<pos:position pos:line="14" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="60">now<pos:position pos:line="14" pos:column="63"/></name></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="65"/></decl_stmt>
			<if pos:line="15" pos:column="25">if <condition pos:line="15" pos:column="28">(<expr><name pos:line="15" pos:column="29">match<pos:position pos:line="15" pos:column="34"/></name></expr>)<pos:position pos:line="15" pos:column="35"/></condition><then pos:line="15" pos:column="35">
				<block type="pseudo"><return pos:line="16" pos:column="33">return <expr><name pos:line="16" pos:column="40">date<pos:position pos:line="16" pos:column="44"/></name> <operator pos:line="16" pos:column="45">+<pos:position pos:line="16" pos:column="46"/></operator> <name pos:line="16" pos:column="47">match<pos:position pos:line="16" pos:column="52"/></name></expr>;<pos:position pos:line="16" pos:column="53"/></return></block></then></if>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></switch>

	<comment type="block" pos:line="20" pos:column="9">/* Accept zero-padding only for small numbers ("Dec 02", never "Dec 0002") */</comment>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">date<pos:position pos:line="21" pos:column="17"/></name><index pos:line="21" pos:column="17">[<expr><literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>]<pos:position pos:line="21" pos:column="20"/></index></name> <operator pos:line="21" pos:column="21">!=<pos:position pos:line="21" pos:column="23"/></operator> <literal type="char" pos:line="21" pos:column="24">'0'<pos:position pos:line="21" pos:column="27"/></literal> <operator pos:line="21" pos:column="28">||<pos:position pos:line="21" pos:column="30"/></operator> <name pos:line="21" pos:column="31">end<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">-<pos:position pos:line="21" pos:column="36"/></operator> <name pos:line="21" pos:column="37">date<pos:position pos:line="21" pos:column="41"/></name> <operator pos:line="21" pos:column="42">&lt;=<pos:position pos:line="21" pos:column="47"/></operator> <literal type="number" pos:line="21" pos:column="45">2<pos:position pos:line="21" pos:column="46"/></literal></expr>)<pos:position pos:line="21" pos:column="47"/></condition><then pos:line="21" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">num<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">number<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt></block></then></if>
	<return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">end<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

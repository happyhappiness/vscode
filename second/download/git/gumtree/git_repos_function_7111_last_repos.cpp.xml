<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7111_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_item<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">what<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">LPCWSTR<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">wbuf<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">wlen<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">buf<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">WideCharToMultiByte<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name pos:line="4" pos:column="39">CP_UTF8<pos:position pos:line="4" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="48">0<pos:position pos:line="4" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="51">wbuf<pos:position pos:line="4" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="57">wlen<pos:position pos:line="4" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="63">NULL<pos:position pos:line="4" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="69">0<pos:position pos:line="4" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="72">NULL<pos:position pos:line="4" pos:column="76"/></name></expr></argument>,
	    <argument><expr><name pos:line="5" pos:column="13">FALSE<pos:position pos:line="5" pos:column="18"/></name></expr></argument>)<pos:position pos:line="5" pos:column="19"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<expr_stmt><expr><name pos:line="6" pos:column="9">buf<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <call><name pos:line="6" pos:column="15">xmalloc<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">len<pos:position pos:line="6" pos:column="26"/></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">WideCharToMultiByte<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">CP_UTF8<pos:position pos:line="8" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="43">0<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="46">wbuf<pos:position pos:line="8" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="52">wlen<pos:position pos:line="8" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="58">buf<pos:position pos:line="8" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="63">len<pos:position pos:line="8" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="68">NULL<pos:position pos:line="8" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="74">FALSE<pos:position pos:line="8" pos:column="79"/></name></expr></argument>)<pos:position pos:line="8" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="81"/></condition><then pos:line="8" pos:column="81">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">die<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><literal type="string" pos:line="9" pos:column="21">"WideCharToMultiByte failed!"<pos:position pos:line="9" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">printf<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="string" pos:line="11" pos:column="16">"%s="<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="23">what<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">fwrite<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">buf<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="21">1<pos:position pos:line="12" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="24">len<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="29">stdout<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">putchar<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><literal type="char" pos:line="13" pos:column="17">'\n'<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">free<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><name pos:line="14" pos:column="14">buf<pos:position pos:line="14" pos:column="17"/></name></expr></argument>)<pos:position pos:line="14" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>
